[{"lineNumber": 21, "col_offset": 0, "nodeName": "assert_op_count_match", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "assert_same_output_names", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "assert_same_output_shapes", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "get_op_types_in_program", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 0, "nodeName": "ssa_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 0, "nodeName": "to_tuple", "type": "Callable[[Any], Any]"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "is_close", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 0, "nodeName": "run_core_ml_predict", "type": "Callable[..., Any]"}, {"lineNumber": 277, "col_offset": 0, "nodeName": "apply_pass_and_basic_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "converter", "type": "module"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "converter", "type": "module"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "_converter", "type": "module"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "_converter", "type": "module"}, {"lineNumber": 26, "col_offset": 7, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "count", "type": "int"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "input_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "proto", "type": "Any"}, {"lineNumber": 54, "col_offset": 7, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "model", "type": "coremltools.models.model.MLModel"}, {"lineNumber": 61, "col_offset": 7, "nodeName": "_IS_MACOS", "type": "bool"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "prog1_outputs", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "prog2_outputs", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "prog1_output_shapes", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "prog2_output_shapes", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "op_types_in_program", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "op", "type": "Any"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "operations", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "op_types_in_program", "type": "List[Any]"}, {"lineNumber": 102, "col_offset": 10, "nodeName": "float32", "type": "Any"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "elem", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "ret", "type": "Any"}, {"lineNumber": 135, "col_offset": 11, "nodeName": "wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "close", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "model", "type": "coremltools.models.model.MLModel"}, {"lineNumber": 202, "col_offset": 7, "nodeName": "_IS_MACOS", "type": "bool"}, {"lineNumber": 242, "col_offset": 7, "nodeName": "_IS_MACOS", "type": "bool"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "program", "type": "coremltools.converters.mil.mil.program.Program"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "proto", "type": "Any"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "model", "type": "coremltools.models.model.MLModel"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "prev_prog", "type": "Any"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "prev_block", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "func", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "items", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "o", "type": "Any"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "operations", "type": "Any"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "shape", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "items", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "_convert", "type": "Any"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "program", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "MLModel", "type": "Type[coremltools.models.model.MLModel]"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "proto", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "model", "type": "coremltools.models.model.MLModel"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "prog1_outputs", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "prog2_outputs", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "prog1_output_shapes", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "prog2_output_shapes", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "skip_const_ops", "type": "Any"}, {"lineNumber": 102, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "astype", "type": "Any"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "int", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "elem", "type": "Any"}, {"lineNumber": 121, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "astype", "type": "Any"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "prog", "type": "coremltools.converters.mil.mil.program.Program"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "v", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "expected", "type": "Any"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "actual", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "diff", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "num_not_close", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "msg", "type": "str"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "MLModel", "type": "Type[coremltools.models.model.MLModel]"}, {"lineNumber": 166, "col_offset": 39, "nodeName": "proto", "type": "Any"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "input_key_values", "type": "Dict[Any, Union[Any, numpy.ndarray]]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "pred", "type": "Any"}, {"lineNumber": 204, "col_offset": 11, "nodeName": "also_compare_shapes", "type": "Any"}, {"lineNumber": 262, "col_offset": 14, "nodeName": "Program", "type": "Type[coremltools.converters.mil.mil.program.Program]"}, {"lineNumber": 263, "col_offset": 41, "nodeName": "ssa_func", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "output_vars", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "_convert", "type": "Any"}, {"lineNumber": 272, "col_offset": 32, "nodeName": "program", "type": "coremltools.converters.mil.mil.program.Program"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "MLModel", "type": "Type[coremltools.models.model.MLModel]"}, {"lineNumber": 273, "col_offset": 39, "nodeName": "proto", "type": "Any"}, {"lineNumber": 273, "col_offset": 46, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 274, "col_offset": 25, "nodeName": "input_values", "type": "Any"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 281, "col_offset": 30, "nodeName": "prog", "type": "Any"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "prog", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "functions", "type": "Any"}, {"lineNumber": 284, "col_offset": 17, "nodeName": "functions", "type": "Any"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "assert_same_output_names", "type": "Callable[..., Any]"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "prev_prog", "type": "Any"}, {"lineNumber": 285, "col_offset": 40, "nodeName": "prog", "type": "Any"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "assert_same_output_shapes", "type": "Callable[..., Any]"}, {"lineNumber": 286, "col_offset": 30, "nodeName": "prev_prog", "type": "Any"}, {"lineNumber": 286, "col_offset": 41, "nodeName": "prog", "type": "Any"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "prev_prog", "type": "Any"}, {"lineNumber": 287, "col_offset": 22, "nodeName": "prev_block", "type": "Any"}, {"lineNumber": 287, "col_offset": 34, "nodeName": "block", "type": "Any"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "program", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "functions", "type": "Any"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "func", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "count", "type": "int"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "expect", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "input_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "rand", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "_converter", "type": "module"}, {"lineNumber": 53, "col_offset": 72, "nodeName": "backend", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "print_network_spec", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "proto", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 35, "nodeName": "input_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "expected_output_shapes", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "o", "type": "Any"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "o", "type": "Any"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "o", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "o", "type": "Any"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "o", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "o", "type": "Any"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "o", "type": "Any"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "o", "type": "Any"}, {"lineNumber": 78, "col_offset": 44, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 88, "col_offset": 14, "nodeName": "prog", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "ret", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "Program", "type": "Type[coremltools.converters.mil.mil.program.Program]"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "ssa_func", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 46, "nodeName": "atol", "type": "Any"}, {"lineNumber": 150, "col_offset": 57, "nodeName": "rtol", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "close", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "expected", "type": "Any"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "actual", "type": "Any"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "num_not_close", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 166, "col_offset": 57, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "model", "type": "coremltools.models.model.MLModel"}, {"lineNumber": 178, "col_offset": 54, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "run_core_ml_predict", "type": "Callable[..., Any]"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "proto", "type": "Any"}, {"lineNumber": 203, "col_offset": 42, "nodeName": "input_key_values", "type": "Any"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "atol", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "rtol", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "o", "type": "Any"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "expected", "type": "Any"}, {"lineNumber": 215, "col_offset": 27, "nodeName": "items", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "pred", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "pred", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "o", "type": "Any"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "expected", "type": "Any"}, {"lineNumber": 245, "col_offset": 27, "nodeName": "items", "type": "Any"}, {"lineNumber": 253, "col_offset": 52, "nodeName": "msg", "type": "str"}, {"lineNumber": 263, "col_offset": 9, "nodeName": "Function", "type": "Any"}, {"lineNumber": 263, "col_offset": 18, "nodeName": "input_placeholders", "type": "Any"}, {"lineNumber": 264, "col_offset": 22, "nodeName": "build", "type": "Any"}, {"lineNumber": 265, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 265, "col_offset": 22, "nodeName": "output_vars", "type": "Any"}, {"lineNumber": 265, "col_offset": 35, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "output_vars", "type": "List[Any]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "set_outputs", "type": "Any"}, {"lineNumber": 269, "col_offset": 29, "nodeName": "output_vars", "type": "Union[List[Any], Any]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "add_function", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 270, "col_offset": 37, "nodeName": "ssa_func", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "_converter", "type": "module"}, {"lineNumber": 272, "col_offset": 72, "nodeName": "backend", "type": "Any"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "models", "type": "module"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "model", "type": "coremltools.models.model.MLModel"}, {"lineNumber": 274, "col_offset": 50, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "PASS_REGISTRY", "type": "coremltools.converters.mil.mil.passes.pass_registry.PassRegistry"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "prog", "type": "Any"}, {"lineNumber": 284, "col_offset": 17, "nodeName": "prev_prog", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "program", "type": "Any"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "op", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "count", "type": "int"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "shape", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "coremltools", "type": "module"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "model", "type": "coremltools.models.model.MLModel"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "out_name", "type": "Any"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "items", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "func_name", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "op_types_in_program", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "op", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "prod", "type": "Any"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 118, "col_offset": 42, "nodeName": "eps_from_int", "type": "Any"}, {"lineNumber": 121, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "Function", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "func", "type": "Any"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "close", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 155, "col_offset": 55, "nodeName": "num_not_close", "type": "Any"}, {"lineNumber": 155, "col_offset": 70, "nodeName": "size", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "coremltools", "type": "module"}, {"lineNumber": 203, "col_offset": 73, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "compare_shapes", "type": "Callable[..., Any]"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "proto", "type": "Any"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "input_key_values", "type": "Any"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "expected_outputs", "type": "Any"}, {"lineNumber": 213, "col_offset": 19, "nodeName": "max", "type": "Callable"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "max", "type": "Callable"}, {"lineNumber": 215, "col_offset": 27, "nodeName": "expected_outputs", "type": "Any"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "is_close", "type": "Callable[..., Any]"}, {"lineNumber": 220, "col_offset": 28, "nodeName": "expected", "type": "Any"}, {"lineNumber": 220, "col_offset": 47, "nodeName": "atol", "type": "Any"}, {"lineNumber": 220, "col_offset": 53, "nodeName": "rtol", "type": "Any"}, {"lineNumber": 220, "col_offset": 60, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "o", "type": "Any"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 221, "col_offset": 33, "nodeName": "input_key_values", "type": "Any"}, {"lineNumber": 221, "col_offset": 51, "nodeName": "expected", "type": "Any"}, {"lineNumber": 244, "col_offset": 19, "nodeName": "run_core_ml_predict", "type": "Callable[..., Any]"}, {"lineNumber": 244, "col_offset": 39, "nodeName": "proto", "type": "Any"}, {"lineNumber": 244, "col_offset": 46, "nodeName": "input_key_values", "type": "Any"}, {"lineNumber": 244, "col_offset": 64, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 245, "col_offset": 27, "nodeName": "expected_outputs", "type": "Any"}, {"lineNumber": 246, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "o", "type": "Any"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 247, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 253, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 264, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 266, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 266, "col_offset": 31, "nodeName": "output_vars", "type": "Any"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "output_vars", "type": "List[Any]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "ssa_func", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "program", "type": "coremltools.converters.mil.mil.program.Program"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "coremltools", "type": "module"}, {"lineNumber": 282, "col_offset": 18, "nodeName": "pass_name", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "count", "type": "int"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "expected_output_shapes", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "out_name", "type": "Any"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "prog1", "type": "Any"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "prog2", "type": "Any"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "prog1", "type": "Any"}, {"lineNumber": 78, "col_offset": 44, "nodeName": "prog2", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 67, "nodeName": "rand_min", "type": "Any"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "allow_duplicate", "type": "Any"}, {"lineNumber": 116, "col_offset": 39, "nodeName": "r", "type": "Any"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "fabs", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "r", "type": "Any"}, {"lineNumber": 121, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "msg", "type": "str"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "sum", "type": "Any"}, {"lineNumber": 155, "col_offset": 70, "nodeName": "expected", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "k", "type": "Any"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "items", "type": "Any"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "pred", "type": "Any"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "atol", "type": "Any"}, {"lineNumber": 214, "col_offset": 23, "nodeName": "rtol", "type": "Any"}, {"lineNumber": 220, "col_offset": 38, "nodeName": "pred", "type": "Any"}, {"lineNumber": 220, "col_offset": 60, "nodeName": "msg", "type": "str"}, {"lineNumber": 221, "col_offset": 61, "nodeName": "pred", "type": "Any"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "expected", "type": "Any"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 251, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 253, "col_offset": 36, "nodeName": "expected", "type": "Any"}, {"lineNumber": 264, "col_offset": 30, "nodeName": "ssa_func", "type": "Any"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 267, "col_offset": 28, "nodeName": "output_vars", "type": "Any"}, {"lineNumber": 267, "col_offset": 41, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 268, "col_offset": 27, "nodeName": "output_vars", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "lower", "type": "Any"}, {"lineNumber": 34, "col_offset": 38, "nodeName": "lower", "type": "Any"}, {"lineNumber": 71, "col_offset": 43, "nodeName": "func_name", "type": "str"}, {"lineNumber": 72, "col_offset": 43, "nodeName": "func_name", "type": "str"}, {"lineNumber": 77, "col_offset": 50, "nodeName": "func_name", "type": "str"}, {"lineNumber": 78, "col_offset": 50, "nodeName": "func_name", "type": "str"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "r", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "abs", "type": "Any"}, {"lineNumber": 155, "col_offset": 47, "nodeName": "diff", "type": "Any"}, {"lineNumber": 158, "col_offset": 48, "nodeName": "expected", "type": "Any"}, {"lineNumber": 159, "col_offset": 46, "nodeName": "actual", "type": "Any"}, {"lineNumber": 160, "col_offset": 45, "nodeName": "diff", "type": "Any"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "input_key_values", "type": "Any"}, {"lineNumber": 220, "col_offset": 43, "nodeName": "o", "type": "Any"}, {"lineNumber": 221, "col_offset": 66, "nodeName": "o", "type": "Any"}, {"lineNumber": 247, "col_offset": 35, "nodeName": "pred", "type": "Any"}, {"lineNumber": 251, "col_offset": 15, "nodeName": "expected", "type": "Any"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "pred", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 34, "col_offset": 38, "nodeName": "op", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "rand_max", "type": "Any"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "rand_min", "type": "Any"}, {"lineNumber": 115, "col_offset": 46, "nodeName": "random", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "round", "type": "Any"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "r", "type": "Any"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 247, "col_offset": 40, "nodeName": "o", "type": "Any"}, {"lineNumber": 251, "col_offset": 40, "nodeName": "pred", "type": "Any"}, {"lineNumber": 253, "col_offset": 24, "nodeName": "o", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "o", "type": "Any"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "out_name", "type": "Any"}, {"lineNumber": 115, "col_offset": 46, "nodeName": "random", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 58, "nodeName": "close", "type": "Any"}, {"lineNumber": 159, "col_offset": 54, "nodeName": "close", "type": "Any"}, {"lineNumber": 160, "col_offset": 51, "nodeName": "close", "type": "Any"}, {"lineNumber": 251, "col_offset": 45, "nodeName": "o", "type": "Any"}, {"lineNumber": 115, "col_offset": 46, "nodeName": "np", "type": "module"}]