[{"lineNumber": 10, "col_offset": 3, "nodeName": "_HAS_ONNX", "type": "bool"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], None]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "test_convert_image_input", "type": "Callable[[Any], None]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "test_convert_image_output", "type": "Callable[[Any], None]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "test_convert_image_input_preprocess", "type": "Callable[[Any], None]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "test_convert_image_output_bgr", "type": "Callable[[Any], None]"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "test_resize_node_without_scales", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "img_arr", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "img_arr", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "input_names", "type": "List[Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "coreml_model", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "input_", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "input", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "coreml_model", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "output", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "bias", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "_IS_MACOS", "type": "bool"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "_IS_MACOS", "type": "bool"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "output_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "roi", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "scales", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "sizes", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "fromarray", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "float32", "type": "Any"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "img_arr", "type": "Any"}, {"lineNumber": 23, "col_offset": 26, "nodeName": "_onnx_create_single_node_model", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "description", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "description", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "from_array", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "from_array", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "from_array", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "_onnx_create_single_node_model", "type": "Any"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "onnx_model_to_test", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertSequenceEqual", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "scalingFactor", "type": "Any"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "Image", "type": "Any"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 21, "col_offset": 44, "nodeName": "img_arr", "type": "Any"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 26, "col_offset": 28, "nodeName": "i", "type": "Any"}, {"lineNumber": 26, "col_offset": 39, "nodeName": "i", "type": "Any"}, {"lineNumber": 26, "col_offset": 44, "nodeName": "input", "type": "Any"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "o", "type": "Any"}, {"lineNumber": 27, "col_offset": 40, "nodeName": "o", "type": "Any"}, {"lineNumber": 27, "col_offset": 45, "nodeName": "output", "type": "Any"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 30, "col_offset": 66, "nodeName": "input_names", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "coreml_model", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "spec", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 67, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "coreml_model", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "spec", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "input_names", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "input_names", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "empty", "type": "Any"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "empty", "type": "Any"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "output_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "layers", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "layer", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "scalingFactor", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "upsample", "type": "Any"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "rand", "type": "Any"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 21, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 26, "col_offset": 44, "nodeName": "graph", "type": "Any"}, {"lineNumber": 27, "col_offset": 45, "nodeName": "graph", "type": "Any"}, {"lineNumber": 30, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "WhichOneof", "type": "Any"}, {"lineNumber": 36, "col_offset": 67, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "WhichOneof", "type": "Any"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "predict", "type": "Any"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 60, "col_offset": 54, "nodeName": "bias", "type": "numpy.ndarray"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "bias", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 62, "col_offset": 54, "nodeName": "bias", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "npt", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 63, "col_offset": 47, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "predict", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "npt", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "roi", "type": "Any"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "scales", "type": "Any"}, {"lineNumber": 94, "col_offset": 38, "nodeName": "sizes", "type": "Any"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "upsample", "type": "Any"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "layer", "type": "Any"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "npr", "type": "Any"}, {"lineNumber": 26, "col_offset": 44, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 27, "col_offset": 45, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "type", "type": "Any"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "type", "type": "Any"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "bias", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "bias", "type": "numpy.ndarray"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "bias", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "coreml_model", "type": "Any"}, {"lineNumber": 55, "col_offset": 64, "nodeName": "img", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "img_arr", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 63, "col_offset": 47, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "coreml_model", "type": "Any"}, {"lineNumber": 74, "col_offset": 64, "nodeName": "img", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "output_names", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "img_arr", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "layer", "type": "Any"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "output_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 113, "col_offset": 53, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "output_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 114, "col_offset": 53, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 26, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "input_", "type": "Any"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "input_names", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 43, "nodeName": "input_names", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "output", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "coreml_model", "type": "Any"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "coreml_model", "type": "Any"}]