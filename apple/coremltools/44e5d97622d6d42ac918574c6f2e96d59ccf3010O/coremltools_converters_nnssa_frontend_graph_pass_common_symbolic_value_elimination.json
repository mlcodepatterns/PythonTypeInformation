[{"lineNumber": 7, "col_offset": 0, "nodeName": "make_hashable", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "compute_roots", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "common_symbolic_value_elimination_impl", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "common_symbolic_value_elimination_impl2", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 0, "nodeName": "common_symbolic_value_elimination", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "roots", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "t", "type": "Any"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "topsort_order", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "roots", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "order", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "roots", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "values", "type": "Dict[Union[str, Tuple[Any, ...], Any], List[Any]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "order", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "order", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "roots", "type": "Dict[Any, Set[Any]]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "values", "type": "Dict[int, List[Any]]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "node_values", "type": "Dict[Any, int]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "order", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "i", "type": "Any"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "functions", "type": "Any"}, {"lineNumber": 8, "col_offset": 7, "nodeName": "is_symbolic", "type": "Any"}, {"lineNumber": 8, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 20, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "topsort", "type": "Any"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "gdict", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "compute_roots", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "gdict", "type": "Any"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "order", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "nodeval", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "any_symbolic", "type": "bool"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "topsort", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "gdict", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "compute_roots", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "gdict", "type": "Any"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "order", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "n", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "nodeval", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "build_val", "type": "bool"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "hashable_val", "type": "int"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "hashable_val", "type": "int"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "nnssa", "type": "Any"}, {"lineNumber": 10, "col_offset": 9, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 10, "col_offset": 17, "nodeName": "v", "type": "Any"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "z", "type": "Any"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "k", "type": "Any"}, {"lineNumber": 20, "col_offset": 31, "nodeName": "gdict", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "gdict", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "get", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "hashable_val", "type": "Union[str, Tuple[Any, ...], Any]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "any_symbolic", "type": "bool"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "make_hashable", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "val", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "gdict", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "get", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "build_val", "type": "bool"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "effective_val", "type": "List[Union[Any, List[Any], List[nothing]]]"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "hashable_val", "type": "Union[str, Tuple[Any, ...], Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "node_values", "type": "Dict[Any, int]"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "hashable_val", "type": "int"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "values", "type": "Dict[int, List[Any]]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "othernodes", "type": "nothing"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "othernode", "type": "nothing"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "othernodes", "type": "nothing"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "common_symbolic_value_elimination_impl", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "graph", "type": "Any"}, {"lineNumber": 9, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 9, "col_offset": 19, "nodeName": "v", "type": "Any"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "t", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "gdict", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "roots", "type": "Any"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "union", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "k", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "attr", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "nodeval", "type": "Any"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "nodeval", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "hashable_val", "type": "Union[Tuple[Any, ...], str, Any]"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "values", "type": "Dict[Union[str, Tuple[Any, ...], Any], List[Any]]"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "othernodes", "type": "nothing"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "othernode", "type": "nothing"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "othernodes", "type": "nothing"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "k", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "attr", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "nodeval", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "build_val", "type": "bool"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "build_val", "type": "bool"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "hashable_val", "type": "Union[str, Tuple[Any, ...], Any]"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "_", "type": "bool"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "make_hashable", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 44, "nodeName": "val", "type": "Any"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "op", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "hashable_val", "type": "Union[str, Tuple[Any, ...]]"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "_", "type": "bool"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "make_hashable", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 44, "nodeName": "effective_val", "type": "List[Union[Any, List[Any], List[nothing]]]"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "values", "type": "Dict[int, List[Any]]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "values", "type": "Dict[int, List[Any]]"}, {"lineNumber": 11, "col_offset": 13, "nodeName": "make_hashable", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 27, "nodeName": "h", "type": "Any"}, {"lineNumber": 11, "col_offset": 34, "nodeName": "h", "type": "Any"}, {"lineNumber": 11, "col_offset": 39, "nodeName": "v", "type": "Any"}, {"lineNumber": 12, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 12, "col_offset": 39, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "t", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "t", "type": "Any"}, {"lineNumber": 27, "col_offset": 38, "nodeName": "roots", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "n", "type": "Any"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "values", "type": "Dict[Union[str, Tuple[Any, ...], Any], List[Any]]"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "values", "type": "Dict[Union[str, Tuple[Any, ...], Any], List[Any]]"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "n", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "build_val", "type": "bool"}, {"lineNumber": 84, "col_offset": 44, "nodeName": "nodeval", "type": "Any"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "n", "type": "Any"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "n", "type": "Any"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "hashable_val", "type": "int"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "outnode", "type": "Any"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "hashable_val", "type": "int"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "get", "type": "Callable"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "hashable_val", "type": "int"}, {"lineNumber": 100, "col_offset": 67, "nodeName": "k", "type": "Any"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "functions", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "gdict", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "roots", "type": "Any"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "roots", "type": "Any"}, {"lineNumber": 27, "col_offset": 44, "nodeName": "i", "type": "Any"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "isscalar", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "val", "type": "Any"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "val", "type": "Any"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "hashable_val", "type": "Union[Tuple[Any, ...], str, Any]"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "outnode", "type": "Any"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "outputs", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "hashable_val", "type": "Union[Tuple[Any, ...], str, Any]"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "get", "type": "Callable"}, {"lineNumber": 61, "col_offset": 50, "nodeName": "hashable_val", "type": "Union[Tuple[Any, ...], str, Any]"}, {"lineNumber": 61, "col_offset": 71, "nodeName": "k", "type": "Any"}, {"lineNumber": 76, "col_offset": 17, "nodeName": "isscalar", "type": "Any"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "val", "type": "Any"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "val", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "build_val", "type": "bool"}, {"lineNumber": 86, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "attr", "type": "Any"}, {"lineNumber": 86, "col_offset": 58, "nodeName": "node_values", "type": "Dict[Any, int]"}, {"lineNumber": 86, "col_offset": 77, "nodeName": "v", "type": "Any"}, {"lineNumber": 86, "col_offset": 82, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "values", "type": "Dict[int, List[Any]]"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "nnssa", "type": "Any"}, {"lineNumber": 105, "col_offset": 63, "nodeName": "i", "type": "Any"}, {"lineNumber": 12, "col_offset": 21, "nodeName": "i", "type": "Any"}, {"lineNumber": 12, "col_offset": 30, "nodeName": "i", "type": "Any"}, {"lineNumber": 12, "col_offset": 35, "nodeName": "z", "type": "Any"}, {"lineNumber": 12, "col_offset": 43, "nodeName": "i", "type": "Any"}, {"lineNumber": 12, "col_offset": 52, "nodeName": "i", "type": "Any"}, {"lineNumber": 12, "col_offset": 57, "nodeName": "z", "type": "Any"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "t", "type": "Any"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "t", "type": "Any"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "nodeval", "type": "Any"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "nodeval", "type": "Any"}, {"lineNumber": 43, "col_offset": 55, "nodeName": "val", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "values", "type": "Dict[Union[str, Tuple[Any, ...], Any], List[Any]]"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "nodeval", "type": "Any"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "nodeval", "type": "Any"}, {"lineNumber": 78, "col_offset": 55, "nodeName": "val", "type": "Any"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "n", "type": "Any"}, {"lineNumber": 86, "col_offset": 70, "nodeName": "v", "type": "Any"}, {"lineNumber": 86, "col_offset": 82, "nodeName": "n", "type": "Any"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "intersection", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "n", "type": "Any"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "replace_source", "type": "Any"}, {"lineNumber": 98, "col_offset": 39, "nodeName": "gdict", "type": "Any"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "name", "type": "Any"}, {"lineNumber": 98, "col_offset": 54, "nodeName": "outnode", "type": "Any"}, {"lineNumber": 98, "col_offset": 63, "nodeName": "othernode", "type": "nothing"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "isscalar", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "val", "type": "Any"}, {"lineNumber": 43, "col_offset": 55, "nodeName": "nodeval", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "val", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 45, "col_offset": 49, "nodeName": "issctype", "type": "Any"}, {"lineNumber": 45, "col_offset": 61, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 45, "col_offset": 76, "nodeName": "size", "type": "Any"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "intersection", "type": "Any"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "n", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "replace_source", "type": "Any"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "gdict", "type": "Any"}, {"lineNumber": 59, "col_offset": 50, "nodeName": "name", "type": "Any"}, {"lineNumber": 59, "col_offset": 58, "nodeName": "outnode", "type": "Any"}, {"lineNumber": 59, "col_offset": 67, "nodeName": "othernode", "type": "nothing"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "isscalar", "type": "Any"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "val", "type": "Any"}, {"lineNumber": 78, "col_offset": 55, "nodeName": "nodeval", "type": "Any"}, {"lineNumber": 95, "col_offset": 53, "nodeName": "roots", "type": "Dict[Any, Set[Any]]"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "n", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "nodeval", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 61, "nodeName": "val", "type": "Any"}, {"lineNumber": 45, "col_offset": 76, "nodeName": "val", "type": "Any"}, {"lineNumber": 56, "col_offset": 57, "nodeName": "roots", "type": "Any"}, {"lineNumber": 59, "col_offset": 50, "nodeName": "n", "type": "Any"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "nodeval", "type": "Any"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "roots", "type": "Dict[Any, Set[Any]]"}, {"lineNumber": 95, "col_offset": 59, "nodeName": "name", "type": "Any"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "roots", "type": "Any"}, {"lineNumber": 56, "col_offset": 63, "nodeName": "name", "type": "Any"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "othernode", "type": "nothing"}, {"lineNumber": 95, "col_offset": 59, "nodeName": "n", "type": "Any"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "othernode", "type": "nothing"}, {"lineNumber": 56, "col_offset": 63, "nodeName": "n", "type": "Any"}]