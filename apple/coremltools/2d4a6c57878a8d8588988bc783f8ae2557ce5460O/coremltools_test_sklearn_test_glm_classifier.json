[{"lineNumber": 20, "col_offset": 3, "nodeName": "_HAS_SKLEARN", "type": "bool"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "product", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "column_names", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "cur_args", "type": "Dict[nothing, nothing]"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "column_names", "type": "List[str]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "cur_args", "type": "Union[Dict[nothing, nothing], Dict[str, Union[str, float]], Dict[str, Union[bool, str]], Dict[str, Union[bool, float]], Dict[str, float]]"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "ARGS", "type": "List[Union[Dict[nothing, nothing], Dict[str, Union[str, float]], Dict[str, Union[bool, str]], Dict[str, Union[bool, float]], Dict[str, float]]]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "_conversion_and_evaluation_helper_for_logistic_regression", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "_conversion_and_evaluation_helper_for_logistic_regression", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "x", "type": "List[List[float]]"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "y", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "x", "type": "List[List[float]]"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "y", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "product", "type": "Callable"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "x", "type": "List[List[float]]"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "y", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "_generate_random_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 54, "nodeName": "class_labels", "type": "Any"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "x", "type": "List[List[float]]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "cur_model", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "_conversion_and_evaluation_helper_for_linear_svc", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "_conversion_and_evaluation_helper_for_linear_svc", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "x", "type": "List[List[float]]"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "y", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "_generate_random_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 54, "nodeName": "class_labels", "type": "Any"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "x", "type": "List[List[float]]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "cur_model", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "GlmCassifierTest"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "GlmCassifierTest"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "itertools", "type": "module"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "GlmCassifierTest", "type": "Type[GlmCassifierTest]"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 60, "col_offset": 37, "nodeName": "column_names", "type": "List[str]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "class_labels", "type": "Any"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "cur_args", "type": "Dict[nothing, nothing]"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "LogisticRegression", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "x", "type": "List[List[float]]"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "y", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "cur_model", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "probability_lists", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "GlmCassifierTest"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "GlmCassifierTest"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "GlmCassifierTest", "type": "Type[GlmCassifierTest]"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "column_names", "type": "List[str]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "class_labels", "type": "Any"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "cur_args", "type": "Union[Dict[nothing, nothing], Dict[str, float], Dict[str, Union[str, float]], Dict[str, Union[bool, str]], Dict[str, Union[bool, float]]]"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "LinearSVC", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "x", "type": "List[List[float]]"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "y", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "cur_model", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "cur_eval_metics", "type": "Dict[str, int]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "x", "type": "List[List[float]]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "y", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "choice", "type": "Callable"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "labels", "type": "Any"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "values", "type": "Callable"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 56, "col_offset": 56, "nodeName": "p", "type": "Tuple[Any, ...]"}, {"lineNumber": 56, "col_offset": 61, "nodeName": "product", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 64, "col_offset": 45, "nodeName": "cur_args", "type": "Dict[nothing, nothing]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "cur_model", "type": "Any"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "column_names", "type": "List[str]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "_is_macos", "type": "Callable[[], bool]"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "predict_proba", "type": "Any"}, {"lineNumber": 72, "col_offset": 60, "nodeName": "x", "type": "List[List[float]]"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "evaluate_classifier_with_probabilities", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "spec", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "df", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 36, "nodeName": "cur_args", "type": "Union[Dict[nothing, nothing], Dict[str, float], Dict[str, Union[str, float]], Dict[str, Union[bool, str]], Dict[str, Union[bool, float]]]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "cur_model", "type": "Any"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "column_names", "type": "List[str]"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "_is_macos", "type": "Callable[[], bool]"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "df", "type": "Any"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "predict", "type": "Any"}, {"lineNumber": 113, "col_offset": 53, "nodeName": "x", "type": "List[List[float]]"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "evaluate_classifier", "type": "Callable[..., Dict[str, int]]"}, {"lineNumber": 115, "col_offset": 54, "nodeName": "spec", "type": "Any"}, {"lineNumber": 115, "col_offset": 60, "nodeName": "df", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "gauss", "type": "Callable[[Union[float, int], Union[float, int]], float]"}, {"lineNumber": 42, "col_offset": 42, "nodeName": "gauss", "type": "Callable[[Union[float, int], Union[float, int]], float]"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "random", "type": "module"}, {"lineNumber": 55, "col_offset": 37, "nodeName": "options", "type": "Dict[str, Union[Tuple[str, str, str, str], Tuple[str, None], Tuple[bool, bool], Tuple[float, float, float]]]"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 56, "col_offset": 48, "nodeName": "p", "type": "Tuple[Any, ...]"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "_macos_version", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "cur_model", "type": "Any"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "cur_vals", "type": "Any"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "probability_lists", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "self", "type": "GlmCassifierTest"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "self", "type": "GlmCassifierTest"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "_macos_version", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "cur_model", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "self", "type": "GlmCassifierTest"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "cur_eval_metics", "type": "Dict[str, int]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "random", "type": "module"}, {"lineNumber": 42, "col_offset": 42, "nodeName": "random", "type": "module"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "options", "type": "Dict[str, Union[Tuple[str, str, str, str], Tuple[str, None], Tuple[bool, bool], Tuple[float, float, float]]]"}]