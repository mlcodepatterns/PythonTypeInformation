[{"lineNumber": 15, "col_offset": 3, "nodeName": "_HAS_XGBOOST", "type": "bool"}, {"lineNumber": 19, "col_offset": 3, "nodeName": "_HAS_SKLEARN", "type": "bool"}, {"lineNumber": 27, "col_offset": 62, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 94, "col_offset": 45, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 204, "col_offset": 47, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 27, "col_offset": 62, "nodeName": "unittest", "type": "module"}, {"lineNumber": 94, "col_offset": 45, "nodeName": "unittest", "type": "module"}, {"lineNumber": 204, "col_offset": 47, "nodeName": "unittest", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "output_name", "type": "str"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "product", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "output_name", "type": "str"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "xgb_model", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "product", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 215, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 216, "col_offset": 22, "nodeName": "target", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "output_name", "type": "str"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "xgb_model", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "product", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "load_boston", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "Type[GradientBoostingRegressorBostonHousingScikitNumericTest]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Type[GradientBoostingRegressorBostonHousingScikitNumericTest]"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "Type[GradientBoostingRegressorBostonHousingScikitNumericTest]"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "Type[GradientBoostingRegressorBostonHousingScikitNumericTest]"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "Type[GradientBoostingRegressorBostonHousingScikitNumericTest]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertAlmostEquals", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertAlmostEquals", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "GradientBoostingRegressor", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "X", "type": "Any"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "target", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 57, "col_offset": 51, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 57, "col_offset": 71, "nodeName": "output_name", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "_train_convert_evaluate_assert", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "product", "type": "Callable"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "it", "type": "int"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "arg", "type": "Dict[nothing, nothing]"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "_HAS_XGBOOST", "type": "bool"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "_HAS_SKLEARN", "type": "bool"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "load_boston", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "Type[XgboostBoosterBostonHousingNumericTest]"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "DMatrix", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Type[XgboostBoosterBostonHousingNumericTest]"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "Type[XgboostBoosterBostonHousingNumericTest]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertAlmostEquals", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertAlmostEquals", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "train", "type": "Any"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "bt_params", "type": "Any"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "dtrain", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "xgb_model", "type": "Any"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "output_name", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "_train_convert_evaluate_assert", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "_train_convert_evaluate_assert", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "_train_convert_evaluate_assert", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "_train_convert_evaluate_assert", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "product", "type": "Callable"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "it", "type": "int"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "arg", "type": "Dict[nothing, nothing]"}, {"lineNumber": 198, "col_offset": 23, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 198, "col_offset": 33, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "load_boston", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "Type[XGboostRegressorBostonHousingNumericTest]"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "Type[XGboostRegressorBostonHousingNumericTest]"}, {"lineNumber": 215, "col_offset": 27, "nodeName": "self", "type": "Type[XGboostRegressorBostonHousingNumericTest]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "Type[XGboostRegressorBostonHousingNumericTest]"}, {"lineNumber": 216, "col_offset": 22, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "Type[XGboostRegressorBostonHousingNumericTest]"}, {"lineNumber": 217, "col_offset": 29, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "Type[XGboostRegressorBostonHousingNumericTest]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertAlmostEquals", "type": "Callable[..., None]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assertAlmostEquals", "type": "Callable[..., None]"}, {"lineNumber": 239, "col_offset": 20, "nodeName": "XGBRegressor", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 240, "col_offset": 22, "nodeName": "X", "type": "Any"}, {"lineNumber": 240, "col_offset": 30, "nodeName": "target", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "xgb_model", "type": "Any"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 244, "col_offset": 43, "nodeName": "output_name", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "_train_convert_evaluate_assert", "type": "Callable[..., Any]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "_train_convert_evaluate_assert", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "_train_convert_evaluate_assert", "type": "Callable[..., Any]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "_train_convert_evaluate_assert", "type": "Callable[..., Any]"}, {"lineNumber": 287, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 301, "col_offset": 18, "nodeName": "product", "type": "Callable"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "it", "type": "int"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "arg", "type": "Dict[nothing, nothing]"}, {"lineNumber": 305, "col_offset": 23, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 305, "col_offset": 33, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "GradientBoostingRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "GradientBoostingRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 53, "col_offset": 67, "nodeName": "scikit_params", "type": "Dict[str, Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "self", "type": "GradientBoostingRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "self", "type": "GradientBoostingRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "skl_converter", "type": "module"}, {"lineNumber": 57, "col_offset": 51, "nodeName": "self", "type": "GradientBoostingRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 57, "col_offset": 71, "nodeName": "self", "type": "GradientBoostingRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "_is_macos", "type": "Callable[[], bool]"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "X", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "predict", "type": "Any"}, {"lineNumber": 62, "col_offset": 52, "nodeName": "X", "type": "Any"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "evaluate_regressor", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "spec", "type": "Any"}, {"lineNumber": 65, "col_offset": 47, "nodeName": "df", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "_check_metrics", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "scikit_params", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "GradientBoostingRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "itertools", "type": "module"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 85, "col_offset": 49, "nodeName": "p", "type": "Tuple[Any, ...]"}, {"lineNumber": 85, "col_offset": 54, "nodeName": "product", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "_train_convert_evaluate_assert", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "xgboost", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "target", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "XgboostBoosterBostonHousingNumericTest"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "XgboostBoosterBostonHousingNumericTest"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "xgboost", "type": "Any"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "self", "type": "XgboostBoosterBostonHousingNumericTest"}, {"lineNumber": 135, "col_offset": 60, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "xgb_converter", "type": "module"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "self", "type": "XgboostBoosterBostonHousingNumericTest"}, {"lineNumber": 139, "col_offset": 43, "nodeName": "self", "type": "XgboostBoosterBostonHousingNumericTest"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "_is_macos", "type": "Callable[[], bool]"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "X", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "predict", "type": "Any"}, {"lineNumber": 145, "col_offset": 49, "nodeName": "dtrain", "type": "Any"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "evaluate_regressor", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 148, "col_offset": 41, "nodeName": "spec", "type": "Any"}, {"lineNumber": 148, "col_offset": 47, "nodeName": "df", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "_check_metrics", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 41, "nodeName": "bt_params", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "XgboostBoosterBostonHousingNumericTest"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "XgboostBoosterBostonHousingNumericTest"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "XgboostBoosterBostonHousingNumericTest"}, {"lineNumber": 194, "col_offset": 18, "nodeName": "itertools", "type": "module"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 195, "col_offset": 49, "nodeName": "p", "type": "Tuple[Any, ...]"}, {"lineNumber": 195, "col_offset": 54, "nodeName": "product", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "_train_convert_evaluate_assert", "type": "Any"}, {"lineNumber": 199, "col_offset": 48, "nodeName": "arg", "type": "Dict[nothing, nothing]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "XGboostRegressorBostonHousingNumericTest"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "XGboostRegressorBostonHousingNumericTest"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 239, "col_offset": 20, "nodeName": "xgboost", "type": "Any"}, {"lineNumber": 239, "col_offset": 43, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "xgb_model", "type": "Any"}, {"lineNumber": 240, "col_offset": 22, "nodeName": "self", "type": "XGboostRegressorBostonHousingNumericTest"}, {"lineNumber": 240, "col_offset": 30, "nodeName": "self", "type": "XGboostRegressorBostonHousingNumericTest"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "xgb_converter", "type": "module"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "self", "type": "XGboostRegressorBostonHousingNumericTest"}, {"lineNumber": 244, "col_offset": 43, "nodeName": "self", "type": "XGboostRegressorBostonHousingNumericTest"}, {"lineNumber": 247, "col_offset": 11, "nodeName": "_is_macos", "type": "Callable[[], bool]"}, {"lineNumber": 249, "col_offset": 17, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 249, "col_offset": 30, "nodeName": "X", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 250, "col_offset": 31, "nodeName": "predict", "type": "Any"}, {"lineNumber": 250, "col_offset": 49, "nodeName": "X", "type": "Any"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "evaluate_regressor", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 253, "col_offset": 41, "nodeName": "spec", "type": "Any"}, {"lineNumber": 253, "col_offset": 47, "nodeName": "df", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "_check_metrics", "type": "Callable[..., Any]"}, {"lineNumber": 254, "col_offset": 32, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 254, "col_offset": 41, "nodeName": "bt_params", "type": "Any"}, {"lineNumber": 254, "col_offset": 52, "nodeName": "allowed_error", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "self", "type": "XGboostRegressorBostonHousingNumericTest"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "self", "type": "XGboostRegressorBostonHousingNumericTest"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "XGboostRegressorBostonHousingNumericTest"}, {"lineNumber": 301, "col_offset": 18, "nodeName": "itertools", "type": "module"}, {"lineNumber": 302, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 302, "col_offset": 49, "nodeName": "p", "type": "Tuple[Any, ...]"}, {"lineNumber": 302, "col_offset": 54, "nodeName": "product", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "_train_convert_evaluate_assert", "type": "Any"}, {"lineNumber": 306, "col_offset": 48, "nodeName": "arg", "type": "Dict[nothing, nothing]"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "_macos_version", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "pd", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "self", "type": "GradientBoostingRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 61, "col_offset": 46, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 62, "col_offset": 52, "nodeName": "self", "type": "GradientBoostingRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "GradientBoostingRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 84, "col_offset": 37, "nodeName": "values", "type": "Callable"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "p", "type": "Tuple[Any, ...]"}, {"lineNumber": 87, "col_offset": 71, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 87, "col_offset": 75, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 50, "nodeName": "arg", "type": "Dict[nothing, nothing]"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "_macos_version", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "pd", "type": "Any"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "self", "type": "XgboostBoosterBostonHousingNumericTest"}, {"lineNumber": 144, "col_offset": 46, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "xgb_model", "type": "Any"}, {"lineNumber": 145, "col_offset": 49, "nodeName": "self", "type": "XgboostBoosterBostonHousingNumericTest"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "self", "type": "XgboostBoosterBostonHousingNumericTest"}, {"lineNumber": 194, "col_offset": 37, "nodeName": "values", "type": "Callable"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 195, "col_offset": 41, "nodeName": "p", "type": "Tuple[Any, ...]"}, {"lineNumber": 197, "col_offset": 71, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 197, "col_offset": 75, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 223, "col_offset": 47, "nodeName": "allowed_error", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "allowed_error", "type": "Any"}, {"lineNumber": 229, "col_offset": 57, "nodeName": "allowed_error", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "allowed_error", "type": "Any"}, {"lineNumber": 247, "col_offset": 27, "nodeName": "_macos_version", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 249, "col_offset": 17, "nodeName": "pd", "type": "Any"}, {"lineNumber": 249, "col_offset": 30, "nodeName": "self", "type": "XGboostRegressorBostonHousingNumericTest"}, {"lineNumber": 249, "col_offset": 46, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 250, "col_offset": 31, "nodeName": "xgb_model", "type": "Any"}, {"lineNumber": 250, "col_offset": 49, "nodeName": "self", "type": "XGboostRegressorBostonHousingNumericTest"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "self", "type": "XGboostRegressorBostonHousingNumericTest"}, {"lineNumber": 301, "col_offset": 37, "nodeName": "values", "type": "Callable"}, {"lineNumber": 302, "col_offset": 21, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 302, "col_offset": 41, "nodeName": "p", "type": "Tuple[Any, ...]"}, {"lineNumber": 304, "col_offset": 71, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 304, "col_offset": 75, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 48, "nodeName": "params", "type": "Any"}, {"lineNumber": 43, "col_offset": 56, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 49, "col_offset": 48, "nodeName": "params", "type": "Any"}, {"lineNumber": 49, "col_offset": 56, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 61, "col_offset": 46, "nodeName": "self", "type": "GradientBoostingRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 84, "col_offset": 37, "nodeName": "options", "type": "Dict[Any, Any]"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 121, "col_offset": 48, "nodeName": "params", "type": "Any"}, {"lineNumber": 121, "col_offset": 56, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 127, "col_offset": 48, "nodeName": "params", "type": "Any"}, {"lineNumber": 127, "col_offset": 56, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 144, "col_offset": 46, "nodeName": "self", "type": "XgboostBoosterBostonHousingNumericTest"}, {"lineNumber": 194, "col_offset": 37, "nodeName": "options", "type": "Dict[Any, Any]"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 225, "col_offset": 48, "nodeName": "params", "type": "Any"}, {"lineNumber": 225, "col_offset": 56, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 231, "col_offset": 48, "nodeName": "params", "type": "Any"}, {"lineNumber": 231, "col_offset": 56, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 249, "col_offset": 46, "nodeName": "self", "type": "XGboostRegressorBostonHousingNumericTest"}, {"lineNumber": 301, "col_offset": 37, "nodeName": "options", "type": "Dict[Any, Any]"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "options", "type": "Dict[Any, Any]"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "options", "type": "Dict[Any, Any]"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "options", "type": "Dict[Any, Any]"}]