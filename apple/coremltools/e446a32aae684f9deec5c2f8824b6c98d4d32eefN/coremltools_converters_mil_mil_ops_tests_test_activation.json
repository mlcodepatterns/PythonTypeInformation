[{"lineNumber": 16, "col_offset": 0, "nodeName": "backends", "type": "List[str]"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "backends", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "test_builder_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "test_builder_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "test_builder_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 252, "col_offset": 4, "nodeName": "test_builder_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 288, "col_offset": 4, "nodeName": "test_builder_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "test_builder_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "test_builder_eval1", "type": "Callable[[Any], Any]"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "test_builder_eval2", "type": "Callable[[Any], Any]"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "test_builder_eval3", "type": "Callable[[Any], Any]"}, {"lineNumber": 449, "col_offset": 4, "nodeName": "test_builder_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 482, "col_offset": 4, "nodeName": "test_builder_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 518, "col_offset": 4, "nodeName": "test_builder_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 583, "col_offset": 4, "nodeName": "test_builder_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "test_builder_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 682, "col_offset": 4, "nodeName": "test_builder_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 730, "col_offset": 4, "nodeName": "test_builder_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 748, "col_offset": 4, "nodeName": "test_builder_eval2", "type": "Callable[[Any], Any]"}, {"lineNumber": 758, "col_offset": 4, "nodeName": "test_builder_eval3", "type": "Callable[[Any], Any]"}, {"lineNumber": 768, "col_offset": 4, "nodeName": "test_builder_eval4", "type": "Callable[[Any], Any]"}, {"lineNumber": 778, "col_offset": 4, "nodeName": "test_builder_eval5", "type": "Callable[[Any], Any]"}, {"lineNumber": 788, "col_offset": 4, "nodeName": "test_builder_eval6", "type": "Callable[[Any], Any]"}, {"lineNumber": 864, "col_offset": 4, "nodeName": "test_builder_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 900, "col_offset": 4, "nodeName": "test_builder_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 933, "col_offset": 4, "nodeName": "test_builder_eval", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "testing_reqs", "type": "module"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 842, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 880, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 916, "col_offset": 8, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "shape_x", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "expected_output_types", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "mode", "type": "str"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "mode", "type": "str"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "expected_output_types", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "beta", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "expected_output_types", "type": "List[Any]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "expected_output_types", "type": "Tuple[int, int, int, int, Any]"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "alpha_br", "type": "numpy.ndarray"}, {"lineNumber": 360, "col_offset": 19, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "x_pos", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "alpha_val", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "alpha_br", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "x_pos", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "expected_output_types", "type": "List[Any]"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "shape_x", "type": "numpy.ndarray"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "expected_output_types", "type": "List[Any]"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "alpha", "type": "float"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "beta", "type": "float"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "shape_x", "type": "numpy.ndarray"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "expected_output_types", "type": "List[Any]"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "expected_output_types", "type": "Tuple[int, int, int, int, Any]"}, {"lineNumber": 732, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 739, "col_offset": 8, "nodeName": "alpha_br", "type": "numpy.ndarray"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "beta_br", "type": "numpy.ndarray"}, {"lineNumber": 741, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 790, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 804, "col_offset": 8, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 805, "col_offset": 8, "nodeName": "alpha_val", "type": "Any"}, {"lineNumber": 806, "col_offset": 8, "nodeName": "beta_val", "type": "Any"}, {"lineNumber": 808, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 809, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 814, "col_offset": 8, "nodeName": "alpha_br", "type": "Any"}, {"lineNumber": 815, "col_offset": 8, "nodeName": "beta_br", "type": "Any"}, {"lineNumber": 816, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 819, "col_offset": 8, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 820, "col_offset": 8, "nodeName": "expected_output_types", "type": "List[Any]"}, {"lineNumber": 838, "col_offset": 8, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 839, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 840, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 866, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 867, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 876, "col_offset": 8, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 877, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 878, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 883, "col_offset": 8, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 902, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 903, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 912, "col_offset": 8, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 913, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 914, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 919, "col_offset": 8, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 920, "col_offset": 8, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 935, "col_offset": 8, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 936, "col_offset": 8, "nodeName": "v", "type": "Any"}, {"lineNumber": 937, "col_offset": 8, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 937, "col_offset": 12, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 946, "col_offset": 8, "nodeName": "shape_x", "type": "numpy.ndarray"}, {"lineNumber": 947, "col_offset": 8, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 948, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 949, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 954, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 954, "col_offset": 12, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 956, "col_offset": 8, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 957, "col_offset": 8, "nodeName": "expected_output_types", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "clamped_relu", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "is_close", "type": "Callable[..., bool]"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "val", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "expected_output_types", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 101, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "elu", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "copy", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "is_close", "type": "Callable[..., bool]"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "val", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "gelu", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "is_close", "type": "Callable[..., bool]"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "val", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "gelu", "type": "Any"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "is_close", "type": "Callable[..., bool]"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "val", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "gelu", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "is_close", "type": "Callable[..., bool]"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "val", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 195, "col_offset": 29, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "mode", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "a", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 208, "col_offset": 28, "nodeName": "out", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "expected_output_types", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 238, "col_offset": 39, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "leaky_relu", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "copy", "type": "Any"}, {"lineNumber": 257, "col_offset": 20, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "is_close", "type": "Callable[..., bool]"}, {"lineNumber": 259, "col_offset": 24, "nodeName": "b", "type": "Any"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "val", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 269, "col_offset": 29, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 274, "col_offset": 39, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 275, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "linear_activation", "type": "Any"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "is_close", "type": "Callable[..., bool]"}, {"lineNumber": 292, "col_offset": 43, "nodeName": "val", "type": "Any"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 302, "col_offset": 15, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 306, "col_offset": 29, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "expected_output_types", "type": "List[Any]"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 333, "col_offset": 29, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 338, "col_offset": 45, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 339, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "expected_output_types", "type": "Tuple[int, int, int, int, Any]"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 356, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "prelu", "type": "Any"}, {"lineNumber": 362, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "alpha_br", "type": "Any"}, {"lineNumber": 365, "col_offset": 16, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 365, "col_offset": 27, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 366, "col_offset": 23, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 368, "col_offset": 15, "nodeName": "is_close", "type": "Callable[..., bool]"}, {"lineNumber": 368, "col_offset": 46, "nodeName": "val", "type": "Any"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 378, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 393, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 395, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 395, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 398, "col_offset": 29, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 403, "col_offset": 19, "nodeName": "copy", "type": "Any"}, {"lineNumber": 403, "col_offset": 27, "nodeName": "alpha_val", "type": "Any"}, {"lineNumber": 404, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "alpha_br", "type": "Any"}, {"lineNumber": 406, "col_offset": 16, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 406, "col_offset": 27, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 407, "col_offset": 23, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 414, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "expected_output_types", "type": "List[Any]"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 430, "col_offset": 29, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 435, "col_offset": 39, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 436, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 442, "col_offset": 12, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 443, "col_offset": 12, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 451, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "relu", "type": "Any"}, {"lineNumber": 453, "col_offset": 15, "nodeName": "is_close", "type": "Callable[..., bool]"}, {"lineNumber": 453, "col_offset": 46, "nodeName": "val", "type": "Any"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 463, "col_offset": 29, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 468, "col_offset": 39, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 469, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 472, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 473, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 475, "col_offset": 12, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 476, "col_offset": 12, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 484, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "relu6", "type": "Any"}, {"lineNumber": 486, "col_offset": 15, "nodeName": "is_close", "type": "Callable[..., bool]"}, {"lineNumber": 486, "col_offset": 61, "nodeName": "val", "type": "Any"}, {"lineNumber": 494, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 496, "col_offset": 29, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 501, "col_offset": 39, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 502, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 509, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 510, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 511, "col_offset": 12, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 520, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 521, "col_offset": 12, "nodeName": "scaled_tanh", "type": "Any"}, {"lineNumber": 522, "col_offset": 15, "nodeName": "is_close", "type": "Callable[..., bool]"}, {"lineNumber": 522, "col_offset": 52, "nodeName": "val", "type": "Any"}, {"lineNumber": 529, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 530, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 532, "col_offset": 29, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 541, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 542, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 543, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 544, "col_offset": 12, "nodeName": "expected_output_types", "type": "List[Any]"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 558, "col_offset": 29, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 563, "col_offset": 39, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 564, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 574, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 575, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 576, "col_offset": 12, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 577, "col_offset": 12, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 585, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 587, "col_offset": 15, "nodeName": "is_close", "type": "Callable[..., bool]"}, {"lineNumber": 587, "col_offset": 50, "nodeName": "val", "type": "Any"}, {"lineNumber": 595, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 597, "col_offset": 29, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 602, "col_offset": 39, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 603, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 609, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 611, "col_offset": 12, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 612, "col_offset": 12, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 620, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 623, "col_offset": 12, "nodeName": "sigmoid_hard", "type": "Any"}, {"lineNumber": 624, "col_offset": 15, "nodeName": "is_close", "type": "Callable[..., bool]"}, {"lineNumber": 624, "col_offset": 78, "nodeName": "val", "type": "Any"}, {"lineNumber": 631, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 632, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 634, "col_offset": 29, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 643, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 644, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 645, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 646, "col_offset": 12, "nodeName": "expected_output_types", "type": "List[Any]"}, {"lineNumber": 658, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 660, "col_offset": 29, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 665, "col_offset": 39, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 666, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 671, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 672, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 673, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 674, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 675, "col_offset": 12, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 676, "col_offset": 12, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 684, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 685, "col_offset": 12, "nodeName": "softplus", "type": "Any"}, {"lineNumber": 686, "col_offset": 15, "nodeName": "is_close", "type": "Callable[..., bool]"}, {"lineNumber": 687, "col_offset": 71, "nodeName": "val", "type": "Any"}, {"lineNumber": 698, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 700, "col_offset": 29, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 709, "col_offset": 45, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 710, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 720, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 721, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 722, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 723, "col_offset": 12, "nodeName": "expected_output_types", "type": "Tuple[int, int, int, int, Any]"}, {"lineNumber": 724, "col_offset": 12, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 732, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 733, "col_offset": 12, "nodeName": "softplus_parametric", "type": "Any"}, {"lineNumber": 739, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 740, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 741, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 742, "col_offset": 12, "nodeName": "alpha_br", "type": "Any"}, {"lineNumber": 743, "col_offset": 12, "nodeName": "beta_br", "type": "Any"}, {"lineNumber": 744, "col_offset": 14, "nodeName": "alpha_br", "type": "Any"}, {"lineNumber": 746, "col_offset": 15, "nodeName": "is_close", "type": "Callable[..., bool]"}, {"lineNumber": 746, "col_offset": 24, "nodeName": "out", "type": "Any"}, {"lineNumber": 746, "col_offset": 29, "nodeName": "val", "type": "Any"}, {"lineNumber": 750, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 760, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 770, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 780, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 790, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 803, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 804, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 805, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 805, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 806, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 806, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 809, "col_offset": 29, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 814, "col_offset": 19, "nodeName": "copy", "type": "Any"}, {"lineNumber": 814, "col_offset": 27, "nodeName": "alpha_val", "type": "Any"}, {"lineNumber": 815, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 815, "col_offset": 26, "nodeName": "beta_val", "type": "Any"}, {"lineNumber": 816, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 817, "col_offset": 12, "nodeName": "alpha_br", "type": "Any"}, {"lineNumber": 818, "col_offset": 12, "nodeName": "beta_br", "type": "Any"}, {"lineNumber": 822, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 823, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 824, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 825, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 826, "col_offset": 12, "nodeName": "expected_output_types", "type": "List[Any]"}, {"lineNumber": 838, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 840, "col_offset": 29, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 845, "col_offset": 39, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 846, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 853, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 854, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 855, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 856, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 857, "col_offset": 12, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 858, "col_offset": 12, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 866, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 867, "col_offset": 12, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 868, "col_offset": 15, "nodeName": "is_close", "type": "Callable[..., bool]"}, {"lineNumber": 868, "col_offset": 62, "nodeName": "val", "type": "Any"}, {"lineNumber": 876, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 878, "col_offset": 29, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 883, "col_offset": 39, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 884, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 889, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 890, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 891, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 892, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 893, "col_offset": 12, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 894, "col_offset": 12, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 902, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 903, "col_offset": 12, "nodeName": "softsign", "type": "Any"}, {"lineNumber": 904, "col_offset": 15, "nodeName": "is_close", "type": "Callable[..., bool]"}, {"lineNumber": 904, "col_offset": 53, "nodeName": "val", "type": "Any"}, {"lineNumber": 912, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 914, "col_offset": 29, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 919, "col_offset": 39, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 920, "col_offset": 27, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 922, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 923, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 924, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 925, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 926, "col_offset": 12, "nodeName": "expected_output_types", "type": "Tuple[int, int, Any]"}, {"lineNumber": 927, "col_offset": 12, "nodeName": "expected_outputs", "type": "numpy.ndarray"}, {"lineNumber": 935, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 936, "col_offset": 12, "nodeName": "thresholded_relu", "type": "Any"}, {"lineNumber": 938, "col_offset": 8, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 939, "col_offset": 15, "nodeName": "is_close", "type": "Callable[..., bool]"}, {"lineNumber": 939, "col_offset": 24, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 939, "col_offset": 27, "nodeName": "val", "type": "Any"}, {"lineNumber": 946, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 947, "col_offset": 16, "nodeName": "rand", "type": "Any"}, {"lineNumber": 949, "col_offset": 29, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 955, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 956, "col_offset": 28, "nodeName": "y", "type": "Any"}, {"lineNumber": 959, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 960, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 961, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 962, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 963, "col_offset": 12, "nodeName": "expected_output_types", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "clamped_relu", "type": "Any"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "types", "type": "module"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 70, "nodeName": "float32", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "y", "type": "Any"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "v", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "dim", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "dim", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "shape_x", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 73, "col_offset": 64, "nodeName": "o", "type": "Any"}, {"lineNumber": 73, "col_offset": 69, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "elu", "type": "Any"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "types", "type": "module"}, {"lineNumber": 101, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 75, "nodeName": "float32", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "v", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "gelu", "type": "Any"}, {"lineNumber": 141, "col_offset": 39, "nodeName": "types", "type": "module"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "float32", "type": "Any"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "mode", "type": "str"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "v", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "mode", "type": "str"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "v", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "v", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "dim", "type": "Any"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "dim", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 193, "col_offset": 32, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 203, "col_offset": 13, "nodeName": "mode", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 209, "col_offset": 64, "nodeName": "o", "type": "Any"}, {"lineNumber": 209, "col_offset": 69, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 216, "col_offset": 29, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "leaky_relu", "type": "Any"}, {"lineNumber": 238, "col_offset": 39, "nodeName": "types", "type": "module"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 239, "col_offset": 70, "nodeName": "float32", "type": "Any"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 254, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 255, "col_offset": 28, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "v", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 267, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "linear_activation", "type": "Any"}, {"lineNumber": 274, "col_offset": 39, "nodeName": "types", "type": "module"}, {"lineNumber": 275, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 275, "col_offset": 70, "nodeName": "float32", "type": "Any"}, {"lineNumber": 283, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 290, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 291, "col_offset": 35, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 292, "col_offset": 43, "nodeName": "v", "type": "Any"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 299, "col_offset": 26, "nodeName": "dim", "type": "Any"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "dim", "type": "Any"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 300, "col_offset": 32, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 302, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 304, "col_offset": 17, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 311, "col_offset": 44, "nodeName": "beta", "type": "Any"}, {"lineNumber": 312, "col_offset": 64, "nodeName": "o", "type": "Any"}, {"lineNumber": 312, "col_offset": 69, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 319, "col_offset": 29, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 321, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 331, "col_offset": 74, "nodeName": "float32", "type": "Any"}, {"lineNumber": 332, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 336, "col_offset": 19, "nodeName": "prelu", "type": "Any"}, {"lineNumber": 338, "col_offset": 45, "nodeName": "types", "type": "module"}, {"lineNumber": 339, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 340, "col_offset": 66, "nodeName": "float32", "type": "Any"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 351, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 356, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 356, "col_offset": 78, "nodeName": "float32", "type": "Any"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 357, "col_offset": 42, "nodeName": "float32", "type": "Any"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 358, "col_offset": 23, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 358, "col_offset": 36, "nodeName": "alpha", "type": "numpy.ndarray"}, {"lineNumber": 362, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 362, "col_offset": 30, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 363, "col_offset": 23, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 363, "col_offset": 38, "nodeName": "alpha_br", "type": "numpy.ndarray"}, {"lineNumber": 363, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 365, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 368, "col_offset": 24, "nodeName": "x_pos", "type": "Any"}, {"lineNumber": 368, "col_offset": 46, "nodeName": "v", "type": "Any"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 372, "col_offset": 76, "nodeName": "float32", "type": "Any"}, {"lineNumber": 373, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 373, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 374, "col_offset": 16, "nodeName": "prelu", "type": "Any"}, {"lineNumber": 378, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 378, "col_offset": 76, "nodeName": "float32", "type": "Any"}, {"lineNumber": 379, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 379, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 380, "col_offset": 16, "nodeName": "prelu", "type": "Any"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 384, "col_offset": 76, "nodeName": "float32", "type": "Any"}, {"lineNumber": 385, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 385, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "prelu", "type": "Any"}, {"lineNumber": 393, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 393, "col_offset": 29, "nodeName": "chan", "type": "Any"}, {"lineNumber": 393, "col_offset": 35, "nodeName": "dim", "type": "Any"}, {"lineNumber": 393, "col_offset": 40, "nodeName": "dim", "type": "Any"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 394, "col_offset": 32, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 395, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 397, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 403, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 405, "col_offset": 23, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 405, "col_offset": 38, "nodeName": "alpha_br", "type": "Any"}, {"lineNumber": 405, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 406, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 409, "col_offset": 28, "nodeName": "x_pos", "type": "Any"}, {"lineNumber": 410, "col_offset": 64, "nodeName": "o", "type": "Any"}, {"lineNumber": 410, "col_offset": 69, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 417, "col_offset": 29, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 418, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 419, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 428, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 429, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 433, "col_offset": 19, "nodeName": "relu", "type": "Any"}, {"lineNumber": 435, "col_offset": 39, "nodeName": "types", "type": "module"}, {"lineNumber": 436, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 436, "col_offset": 66, "nodeName": "float32", "type": "Any"}, {"lineNumber": 444, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 446, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 451, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 451, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 452, "col_offset": 22, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 453, "col_offset": 24, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 453, "col_offset": 35, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 453, "col_offset": 46, "nodeName": "v", "type": "Any"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 461, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 462, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 466, "col_offset": 19, "nodeName": "relu6", "type": "Any"}, {"lineNumber": 468, "col_offset": 39, "nodeName": "types", "type": "module"}, {"lineNumber": 469, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 469, "col_offset": 66, "nodeName": "float32", "type": "Any"}, {"lineNumber": 477, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 479, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 484, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 484, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 485, "col_offset": 12, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 485, "col_offset": 23, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 486, "col_offset": 24, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 486, "col_offset": 61, "nodeName": "v", "type": "Any"}, {"lineNumber": 494, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 494, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 495, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 499, "col_offset": 19, "nodeName": "scaled_tanh", "type": "Any"}, {"lineNumber": 501, "col_offset": 39, "nodeName": "types", "type": "module"}, {"lineNumber": 502, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 504, "col_offset": 18, "nodeName": "float32", "type": "Any"}, {"lineNumber": 513, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 515, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 520, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 520, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 521, "col_offset": 12, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 521, "col_offset": 29, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 522, "col_offset": 52, "nodeName": "v", "type": "Any"}, {"lineNumber": 529, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 529, "col_offset": 28, "nodeName": "dim", "type": "Any"}, {"lineNumber": 529, "col_offset": 33, "nodeName": "dim", "type": "Any"}, {"lineNumber": 530, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 530, "col_offset": 32, "nodeName": "shape_x", "type": "numpy.ndarray"}, {"lineNumber": 531, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 537, "col_offset": 28, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 538, "col_offset": 64, "nodeName": "o", "type": "Any"}, {"lineNumber": 538, "col_offset": 69, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 545, "col_offset": 29, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 546, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 547, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 556, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 557, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 561, "col_offset": 19, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 563, "col_offset": 39, "nodeName": "types", "type": "module"}, {"lineNumber": 564, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 569, "col_offset": 18, "nodeName": "float32", "type": "Any"}, {"lineNumber": 578, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 580, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 585, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 585, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 586, "col_offset": 12, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 586, "col_offset": 25, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 587, "col_offset": 50, "nodeName": "v", "type": "Any"}, {"lineNumber": 595, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 595, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 596, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 600, "col_offset": 19, "nodeName": "sigmoid_hard", "type": "Any"}, {"lineNumber": 602, "col_offset": 39, "nodeName": "types", "type": "module"}, {"lineNumber": 603, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 604, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 613, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 615, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 620, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 620, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 623, "col_offset": 12, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 623, "col_offset": 30, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 623, "col_offset": 43, "nodeName": "alpha", "type": "float"}, {"lineNumber": 623, "col_offset": 55, "nodeName": "beta", "type": "float"}, {"lineNumber": 624, "col_offset": 24, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 624, "col_offset": 78, "nodeName": "v", "type": "Any"}, {"lineNumber": 631, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 631, "col_offset": 28, "nodeName": "dim", "type": "Any"}, {"lineNumber": 631, "col_offset": 33, "nodeName": "dim", "type": "Any"}, {"lineNumber": 632, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 632, "col_offset": 32, "nodeName": "shape_x", "type": "numpy.ndarray"}, {"lineNumber": 633, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 639, "col_offset": 28, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 640, "col_offset": 64, "nodeName": "o", "type": "Any"}, {"lineNumber": 640, "col_offset": 69, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 647, "col_offset": 29, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 648, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 649, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 658, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 658, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 659, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 663, "col_offset": 19, "nodeName": "softplus", "type": "Any"}, {"lineNumber": 665, "col_offset": 39, "nodeName": "types", "type": "module"}, {"lineNumber": 666, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 668, "col_offset": 18, "nodeName": "float32", "type": "Any"}, {"lineNumber": 677, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 679, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 684, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 684, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 685, "col_offset": 12, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 685, "col_offset": 26, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 687, "col_offset": 71, "nodeName": "v", "type": "Any"}, {"lineNumber": 698, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 698, "col_offset": 74, "nodeName": "float32", "type": "Any"}, {"lineNumber": 699, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 703, "col_offset": 19, "nodeName": "softplus_parametric", "type": "Any"}, {"lineNumber": 709, "col_offset": 45, "nodeName": "types", "type": "module"}, {"lineNumber": 710, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 716, "col_offset": 18, "nodeName": "float32", "type": "Any"}, {"lineNumber": 725, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 727, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 732, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 732, "col_offset": 78, "nodeName": "float32", "type": "Any"}, {"lineNumber": 733, "col_offset": 12, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 734, "col_offset": 14, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 739, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 739, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 740, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 740, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 741, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 741, "col_offset": 30, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 742, "col_offset": 23, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 742, "col_offset": 38, "nodeName": "alpha_br", "type": "numpy.ndarray"}, {"lineNumber": 742, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 743, "col_offset": 22, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 743, "col_offset": 37, "nodeName": "beta_br", "type": "numpy.ndarray"}, {"lineNumber": 743, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 744, "col_offset": 25, "nodeName": "log", "type": "Any"}, {"lineNumber": 746, "col_offset": 29, "nodeName": "v", "type": "Any"}, {"lineNumber": 750, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 750, "col_offset": 76, "nodeName": "float32", "type": "Any"}, {"lineNumber": 751, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 751, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 752, "col_offset": 16, "nodeName": "softplus_parametric", "type": "Any"}, {"lineNumber": 760, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 760, "col_offset": 76, "nodeName": "float32", "type": "Any"}, {"lineNumber": 761, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 761, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 762, "col_offset": 16, "nodeName": "softplus_parametric", "type": "Any"}, {"lineNumber": 770, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 770, "col_offset": 76, "nodeName": "float32", "type": "Any"}, {"lineNumber": 771, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 771, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 772, "col_offset": 16, "nodeName": "softplus_parametric", "type": "Any"}, {"lineNumber": 780, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 780, "col_offset": 76, "nodeName": "float32", "type": "Any"}, {"lineNumber": 781, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 781, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 782, "col_offset": 16, "nodeName": "softplus_parametric", "type": "Any"}, {"lineNumber": 790, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 790, "col_offset": 78, "nodeName": "float32", "type": "Any"}, {"lineNumber": 791, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 791, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 792, "col_offset": 16, "nodeName": "softplus_parametric", "type": "Any"}, {"lineNumber": 803, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 803, "col_offset": 29, "nodeName": "chan", "type": "Any"}, {"lineNumber": 803, "col_offset": 35, "nodeName": "dim", "type": "Any"}, {"lineNumber": 803, "col_offset": 40, "nodeName": "dim", "type": "Any"}, {"lineNumber": 804, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 804, "col_offset": 32, "nodeName": "shape", "type": "numpy.ndarray"}, {"lineNumber": 805, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 806, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 808, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 814, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 815, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 817, "col_offset": 23, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 817, "col_offset": 38, "nodeName": "alpha_br", "type": "Any"}, {"lineNumber": 817, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 818, "col_offset": 22, "nodeName": "expand_dims", "type": "Any"}, {"lineNumber": 818, "col_offset": 37, "nodeName": "beta_br", "type": "Any"}, {"lineNumber": 818, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 819, "col_offset": 28, "nodeName": "alpha_br", "type": "Any"}, {"lineNumber": 820, "col_offset": 64, "nodeName": "o", "type": "Any"}, {"lineNumber": 820, "col_offset": 69, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 827, "col_offset": 29, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 828, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 829, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 838, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 838, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 839, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 843, "col_offset": 19, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 845, "col_offset": 39, "nodeName": "types", "type": "module"}, {"lineNumber": 846, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 851, "col_offset": 18, "nodeName": "float32", "type": "Any"}, {"lineNumber": 859, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 861, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 866, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 866, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 867, "col_offset": 12, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 867, "col_offset": 25, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 868, "col_offset": 24, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 868, "col_offset": 46, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 868, "col_offset": 62, "nodeName": "v", "type": "Any"}, {"lineNumber": 876, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 876, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 877, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 881, "col_offset": 19, "nodeName": "softsign", "type": "Any"}, {"lineNumber": 883, "col_offset": 39, "nodeName": "types", "type": "module"}, {"lineNumber": 884, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 886, "col_offset": 18, "nodeName": "float32", "type": "Any"}, {"lineNumber": 895, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 897, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 902, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 902, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 903, "col_offset": 12, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 903, "col_offset": 26, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 904, "col_offset": 24, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 904, "col_offset": 53, "nodeName": "v", "type": "Any"}, {"lineNumber": 912, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 912, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 913, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 917, "col_offset": 19, "nodeName": "thresholded_relu", "type": "Any"}, {"lineNumber": 919, "col_offset": 39, "nodeName": "types", "type": "module"}, {"lineNumber": 920, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 920, "col_offset": 66, "nodeName": "float32", "type": "Any"}, {"lineNumber": 928, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 930, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 935, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 935, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 936, "col_offset": 12, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 936, "col_offset": 34, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 939, "col_offset": 27, "nodeName": "v", "type": "Any"}, {"lineNumber": 946, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 946, "col_offset": 28, "nodeName": "dim", "type": "Any"}, {"lineNumber": 946, "col_offset": 33, "nodeName": "dim", "type": "Any"}, {"lineNumber": 947, "col_offset": 16, "nodeName": "random", "type": "Any"}, {"lineNumber": 947, "col_offset": 32, "nodeName": "shape_x", "type": "numpy.ndarray"}, {"lineNumber": 948, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 957, "col_offset": 64, "nodeName": "o", "type": "Any"}, {"lineNumber": 957, "col_offset": 69, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 964, "col_offset": 29, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 965, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 966, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 24, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 26, "col_offset": 38, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 31, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 34, "col_offset": 70, "nodeName": "np", "type": "module"}, {"lineNumber": 49, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 53, "col_offset": 34, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 63, "col_offset": 56, "nodeName": "shape", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "clamped_relu", "type": "Any"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 73, "col_offset": 47, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 91, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 75, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "exp", "type": "Any"}, {"lineNumber": 132, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "pi", "type": "Any"}, {"lineNumber": 170, "col_offset": 33, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 170, "col_offset": 41, "nodeName": "a", "type": "Any"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "erf", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 194, "col_offset": 56, "nodeName": "shape", "type": "Any"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "gelu", "type": "Any"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 201, "col_offset": 38, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 204, "col_offset": 18, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 209, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 209, "col_offset": 47, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 229, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 231, "col_offset": 38, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 236, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 239, "col_offset": 70, "nodeName": "np", "type": "module"}, {"lineNumber": 254, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 258, "col_offset": 10, "nodeName": "b", "type": "Any"}, {"lineNumber": 267, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 268, "col_offset": 56, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 272, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 275, "col_offset": 70, "nodeName": "np", "type": "module"}, {"lineNumber": 290, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 292, "col_offset": 24, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 301, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 302, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 304, "col_offset": 17, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 304, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 309, "col_offset": 20, "nodeName": "linear_activation", "type": "Any"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 311, "col_offset": 36, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 312, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 312, "col_offset": 47, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 331, "col_offset": 74, "nodeName": "np", "type": "module"}, {"lineNumber": 332, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 332, "col_offset": 56, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 336, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 336, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 340, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 356, "col_offset": 78, "nodeName": "np", "type": "module"}, {"lineNumber": 357, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 362, "col_offset": 30, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 363, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 368, "col_offset": 32, "nodeName": "b", "type": "Any"}, {"lineNumber": 368, "col_offset": 36, "nodeName": "alpha_br", "type": "Any"}, {"lineNumber": 372, "col_offset": 76, "nodeName": "np", "type": "module"}, {"lineNumber": 373, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 374, "col_offset": 16, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 374, "col_offset": 27, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 378, "col_offset": 76, "nodeName": "np", "type": "module"}, {"lineNumber": 379, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 380, "col_offset": 16, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 380, "col_offset": 27, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 384, "col_offset": 76, "nodeName": "np", "type": "module"}, {"lineNumber": 385, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 395, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 395, "col_offset": 35, "nodeName": "chan", "type": "Any"}, {"lineNumber": 397, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 397, "col_offset": 56, "nodeName": "shape", "type": "Any"}, {"lineNumber": 401, "col_offset": 20, "nodeName": "prelu", "type": "Any"}, {"lineNumber": 404, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 404, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 405, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 409, "col_offset": 36, "nodeName": "b", "type": "Any"}, {"lineNumber": 409, "col_offset": 40, "nodeName": "alpha_br", "type": "Any"}, {"lineNumber": 410, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 410, "col_offset": 47, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 428, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 429, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 429, "col_offset": 56, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 433, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 433, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 436, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 451, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 453, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 461, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 462, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 462, "col_offset": 56, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 466, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 466, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 469, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 484, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 486, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 486, "col_offset": 35, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 486, "col_offset": 46, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 494, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 495, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 495, "col_offset": 56, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 499, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 499, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 504, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 520, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 522, "col_offset": 30, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 530, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 531, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 531, "col_offset": 56, "nodeName": "shape", "type": "Any"}, {"lineNumber": 535, "col_offset": 20, "nodeName": "scaled_tanh", "type": "Any"}, {"lineNumber": 537, "col_offset": 36, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 538, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 538, "col_offset": 47, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 556, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 557, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 557, "col_offset": 56, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 561, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 561, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 569, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 585, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 595, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 596, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 596, "col_offset": 56, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 600, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 600, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 604, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 620, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 624, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 624, "col_offset": 35, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 632, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 633, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 633, "col_offset": 56, "nodeName": "shape", "type": "Any"}, {"lineNumber": 637, "col_offset": 20, "nodeName": "sigmoid_hard", "type": "Any"}, {"lineNumber": 639, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 639, "col_offset": 39, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 640, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 640, "col_offset": 47, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 658, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 659, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 659, "col_offset": 56, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 663, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 663, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 668, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 684, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 687, "col_offset": 12, "nodeName": "log", "type": "Any"}, {"lineNumber": 687, "col_offset": 49, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 687, "col_offset": 60, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 698, "col_offset": 74, "nodeName": "np", "type": "module"}, {"lineNumber": 699, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 699, "col_offset": 56, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 703, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 704, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 716, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 732, "col_offset": 78, "nodeName": "np", "type": "module"}, {"lineNumber": 735, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 736, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 739, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 740, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 741, "col_offset": 30, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 742, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 743, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 744, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 750, "col_offset": 76, "nodeName": "np", "type": "module"}, {"lineNumber": 751, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 752, "col_offset": 16, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 753, "col_offset": 18, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 760, "col_offset": 76, "nodeName": "np", "type": "module"}, {"lineNumber": 761, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 762, "col_offset": 16, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 763, "col_offset": 18, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 770, "col_offset": 76, "nodeName": "np", "type": "module"}, {"lineNumber": 771, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 772, "col_offset": 16, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 780, "col_offset": 76, "nodeName": "np", "type": "module"}, {"lineNumber": 781, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 782, "col_offset": 16, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 783, "col_offset": 18, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 790, "col_offset": 78, "nodeName": "np", "type": "module"}, {"lineNumber": 791, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 792, "col_offset": 16, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 793, "col_offset": 18, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 804, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 805, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 805, "col_offset": 35, "nodeName": "chan", "type": "Any"}, {"lineNumber": 806, "col_offset": 19, "nodeName": "rand", "type": "Any"}, {"lineNumber": 806, "col_offset": 34, "nodeName": "chan", "type": "Any"}, {"lineNumber": 808, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 808, "col_offset": 56, "nodeName": "shape", "type": "Any"}, {"lineNumber": 812, "col_offset": 20, "nodeName": "softplus_parametric", "type": "Any"}, {"lineNumber": 816, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 816, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 817, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 818, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 819, "col_offset": 39, "nodeName": "log", "type": "Any"}, {"lineNumber": 820, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 820, "col_offset": 47, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 838, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 839, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 839, "col_offset": 56, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 843, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 843, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 851, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 866, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 868, "col_offset": 24, "nodeName": "special", "type": "Any"}, {"lineNumber": 876, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 877, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 877, "col_offset": 56, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 881, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 881, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 886, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 902, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 912, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 913, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 913, "col_offset": 56, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 917, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 917, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 920, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 935, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 938, "col_offset": 10, "nodeName": "y", "type": "numpy.ndarray"}, {"lineNumber": 947, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 948, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 948, "col_offset": 56, "nodeName": "shape", "type": "Any"}, {"lineNumber": 952, "col_offset": 20, "nodeName": "thresholded_relu", "type": "Any"}, {"lineNumber": 955, "col_offset": 10, "nodeName": "y", "type": "Any"}, {"lineNumber": 955, "col_offset": 14, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 957, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 957, "col_offset": 47, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 26, "col_offset": 38, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 56, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 67, "col_offset": 59, "nodeName": "beta", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "o", "type": "Any"}, {"lineNumber": 73, "col_offset": 47, "nodeName": "types", "type": "module"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "b", "type": "Any"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 53, "nodeName": "power", "type": "Any"}, {"lineNumber": 169, "col_offset": 62, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 170, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "exp", "type": "Any"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "special", "type": "Any"}, {"lineNumber": 179, "col_offset": 51, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 194, "col_offset": 56, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 198, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 198, "col_offset": 38, "nodeName": "mode", "type": "Any"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "pi", "type": "Any"}, {"lineNumber": 202, "col_offset": 37, "nodeName": "tanh", "type": "Any"}, {"lineNumber": 202, "col_offset": 45, "nodeName": "a", "type": "Any"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 209, "col_offset": 33, "nodeName": "o", "type": "Any"}, {"lineNumber": 209, "col_offset": 47, "nodeName": "types", "type": "module"}, {"lineNumber": 231, "col_offset": 38, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 268, "col_offset": 56, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 304, "col_offset": 38, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 309, "col_offset": 20, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 309, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 309, "col_offset": 52, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 309, "col_offset": 64, "nodeName": "beta", "type": "Any"}, {"lineNumber": 312, "col_offset": 33, "nodeName": "o", "type": "Any"}, {"lineNumber": 312, "col_offset": 47, "nodeName": "types", "type": "module"}, {"lineNumber": 332, "col_offset": 56, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 336, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 374, "col_offset": 40, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 380, "col_offset": 40, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 386, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 395, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 397, "col_offset": 56, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 401, "col_offset": 20, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 401, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 401, "col_offset": 40, "nodeName": "alpha_val", "type": "Any"}, {"lineNumber": 404, "col_offset": 30, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 410, "col_offset": 33, "nodeName": "o", "type": "Any"}, {"lineNumber": 410, "col_offset": 47, "nodeName": "types", "type": "module"}, {"lineNumber": 429, "col_offset": 56, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 462, "col_offset": 56, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 486, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 495, "col_offset": 56, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 522, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 522, "col_offset": 38, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 531, "col_offset": 56, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 535, "col_offset": 20, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 535, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 535, "col_offset": 46, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 535, "col_offset": 58, "nodeName": "beta", "type": "Any"}, {"lineNumber": 537, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 537, "col_offset": 44, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 537, "col_offset": 52, "nodeName": "beta", "type": "Any"}, {"lineNumber": 538, "col_offset": 33, "nodeName": "o", "type": "Any"}, {"lineNumber": 538, "col_offset": 47, "nodeName": "types", "type": "module"}, {"lineNumber": 557, "col_offset": 56, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 587, "col_offset": 33, "nodeName": "exp", "type": "Any"}, {"lineNumber": 596, "col_offset": 56, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 624, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 624, "col_offset": 64, "nodeName": "beta", "type": "float"}, {"lineNumber": 633, "col_offset": 56, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 637, "col_offset": 20, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 637, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 637, "col_offset": 47, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 637, "col_offset": 59, "nodeName": "beta", "type": "Any"}, {"lineNumber": 639, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 639, "col_offset": 68, "nodeName": "beta", "type": "Any"}, {"lineNumber": 640, "col_offset": 33, "nodeName": "o", "type": "Any"}, {"lineNumber": 640, "col_offset": 47, "nodeName": "types", "type": "module"}, {"lineNumber": 659, "col_offset": 56, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 687, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 687, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 699, "col_offset": 56, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 705, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 706, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 735, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 735, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 736, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 736, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 744, "col_offset": 32, "nodeName": "exp", "type": "Any"}, {"lineNumber": 754, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 755, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 764, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 765, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 774, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 775, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 784, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 785, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 794, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 795, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 805, "col_offset": 20, "nodeName": "random", "type": "Any"}, {"lineNumber": 806, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 808, "col_offset": 56, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 812, "col_offset": 20, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 812, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 812, "col_offset": 54, "nodeName": "alpha_val", "type": "Any"}, {"lineNumber": 812, "col_offset": 70, "nodeName": "beta_val", "type": "Any"}, {"lineNumber": 816, "col_offset": 30, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 819, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 820, "col_offset": 33, "nodeName": "o", "type": "Any"}, {"lineNumber": 820, "col_offset": 47, "nodeName": "types", "type": "module"}, {"lineNumber": 839, "col_offset": 56, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 868, "col_offset": 24, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 877, "col_offset": 56, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 904, "col_offset": 37, "nodeName": "abs", "type": "Any"}, {"lineNumber": 904, "col_offset": 44, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 913, "col_offset": 56, "nodeName": "t", "type": "numpy.ndarray"}, {"lineNumber": 948, "col_offset": 56, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 952, "col_offset": 20, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 952, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 952, "col_offset": 51, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 957, "col_offset": 33, "nodeName": "o", "type": "Any"}, {"lineNumber": 957, "col_offset": 47, "nodeName": "types", "type": "module"}, {"lineNumber": 169, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 179, "col_offset": 59, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 57, "nodeName": "power", "type": "Any"}, {"lineNumber": 201, "col_offset": 66, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 202, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 206, "col_offset": 37, "nodeName": "erf", "type": "Any"}, {"lineNumber": 336, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 336, "col_offset": 65, "nodeName": "float32", "type": "Any"}, {"lineNumber": 374, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 374, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 380, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 380, "col_offset": 68, "nodeName": "float32", "type": "Any"}, {"lineNumber": 386, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 386, "col_offset": 66, "nodeName": "float32", "type": "Any"}, {"lineNumber": 395, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 587, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 587, "col_offset": 41, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 624, "col_offset": 47, "nodeName": "alpha", "type": "float"}, {"lineNumber": 624, "col_offset": 55, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 639, "col_offset": 51, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 639, "col_offset": 59, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 687, "col_offset": 23, "nodeName": "exp", "type": "Any"}, {"lineNumber": 705, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 705, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 706, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 706, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 735, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 736, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 744, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 744, "col_offset": 39, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 744, "col_offset": 47, "nodeName": "beta_br", "type": "Any"}, {"lineNumber": 754, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 754, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 755, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 755, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 764, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 764, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 765, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 765, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 774, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 774, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 775, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 775, "col_offset": 47, "nodeName": "float32", "type": "Any"}, {"lineNumber": 784, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 784, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 785, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 785, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 794, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 794, "col_offset": 48, "nodeName": "float32", "type": "Any"}, {"lineNumber": 795, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 795, "col_offset": 49, "nodeName": "float32", "type": "Any"}, {"lineNumber": 805, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 806, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 819, "col_offset": 46, "nodeName": "exp", "type": "Any"}, {"lineNumber": 904, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "b", "type": "Any"}, {"lineNumber": 175, "col_offset": 49, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 179, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 204, "col_offset": 36, "nodeName": "exp", "type": "Any"}, {"lineNumber": 206, "col_offset": 37, "nodeName": "special", "type": "Any"}, {"lineNumber": 206, "col_offset": 55, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 336, "col_offset": 65, "nodeName": "np", "type": "module"}, {"lineNumber": 374, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 380, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 386, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 687, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 705, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 706, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 754, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 755, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 764, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 765, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 774, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 775, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 784, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 785, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 794, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 795, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 819, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 819, "col_offset": 53, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 819, "col_offset": 61, "nodeName": "beta_br", "type": "Any"}, {"lineNumber": 204, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 206, "col_offset": 37, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 206, "col_offset": 63, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 687, "col_offset": 31, "nodeName": "abs", "type": "Any"}, {"lineNumber": 687, "col_offset": 38, "nodeName": "x_val", "type": "numpy.ndarray"}, {"lineNumber": 204, "col_offset": 53, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 206, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 687, "col_offset": 31, "nodeName": "np", "type": "module"}]