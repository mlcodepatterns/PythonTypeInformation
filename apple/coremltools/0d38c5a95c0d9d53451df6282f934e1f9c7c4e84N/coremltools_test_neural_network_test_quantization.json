[{"lineNumber": 34, "col_offset": 44, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "runTest", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "_run_quantized_test", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "test_quantized_tiny_inner_product", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "test_quantized_conv_batchnorm_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "test_quantized_conv_batchnorm_no_gamma_no_beta", "type": "Callable[[Any], Any]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "test_quantized_tiny_deconv_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "test_quantized_tiny_deconv_random_same_padding", "type": "Callable[[Any], Any]"}, {"lineNumber": 150, "col_offset": 4, "nodeName": "test_quantized_tiny_depthwise_conv_valid_pad", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "test_quantized_tiny_separable_conv_valid_depth_multiplier", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "test_quantized_max_pooling_no_overlap", "type": "Callable[[Any], Any]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "test_quantized_dense_softmax", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "test_quantized_housenet_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "test_quantized_large_input_length_conv1d_same_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "test_quantized_conv_dense", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "test_quantized_tiny_conv_crop_1d_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "test_quantized_embedding", "type": "Callable[[Any], Any]"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "test_quantized_tiny_conv_elu_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "test_quantized_tiny_concat_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "test_quantized_tiny_dense_tanh_fused_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "test_quantized_conv1d_flatten", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "test_quantized_tiny_conv_dropout_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "test_quantized_tiny_mul_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "test_quantized_tiny_conv_thresholded_relu_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "test_quantized_tiny_seq2seq_rnn_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "test_quantized_rnn_seq", "type": "Callable[[Any], Any]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "test_quantized_medium_no_sequence_simple_rnn_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "test_quantized_tiny_no_sequence_lstm_zeros", "type": "Callable[[Any], Any]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "test_quantized_tiny_no_sequence_lstm_ones", "type": "Callable[[Any], Any]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "test_quantized_lstm_seq", "type": "Callable[[Any], Any]"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "test_quantized_medium_no_sequence_lstm_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "test_quantized_tiny_no_sequence_gru_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 4, "nodeName": "test_quantized_gru_seq_backwards", "type": "Callable[[Any], Any]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "test_quantized_tiny_no_sequence_bidir_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "test_quantized_tiny_no_sequence_bidir_random_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "test_quantized_small_no_sequence_bidir_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 4, "nodeName": "test_quantized_medium_no_sequence_bidir_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "test_quantized_medium_bidir_random_return_seq_false", "type": "Callable[[Any], Any]"}, {"lineNumber": 241, "col_offset": 4, "nodeName": "test_quantized_tiny_sequence_lstm", "type": "Callable[[Any], Any]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "test_quantized__lstm_td", "type": "Callable[[Any], Any]"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "test_quantized_large_channel_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 250, "col_offset": 4, "nodeName": "test_quantized_tiny_seq2seq_rnn_random", "type": "Callable[[Any], Any]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "test_quantized_lstm_seq_backwards", "type": "Callable[[Any], Any]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "QuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "QuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "QuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "QuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "QuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 306, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "QuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "QuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 334, "col_offset": 47, "nodeName": "QuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "test_quantized_custom_lut", "type": "Callable[[Any], Any]"}, {"lineNumber": 348, "col_offset": 4, "nodeName": "QuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 350, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "QuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 372, "col_offset": 4, "nodeName": "QuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "QuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 395, "col_offset": 4, "nodeName": "QuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "QuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 418, "col_offset": 4, "nodeName": "QuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "QuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 431, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 447, "col_offset": 52, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "test_8bit_symmetric_and_skips", "type": "Callable[[Any], Any]"}, {"lineNumber": 514, "col_offset": 37, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 519, "col_offset": 4, "nodeName": "initialize", "type": "Callable[[Any], Any]"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 582, "col_offset": 4, "nodeName": "test_single_batched_matmul_no_bias", "type": "Callable[[Any], Any]"}, {"lineNumber": 595, "col_offset": 4, "nodeName": "test_single_batched_matmul_with_bias", "type": "Callable[[Any], Any]"}, {"lineNumber": 609, "col_offset": 4, "nodeName": "test_single_inner_product_no_bias", "type": "Callable[[Any], Any]"}, {"lineNumber": 624, "col_offset": 4, "nodeName": "test_single_inner_product_with_bias", "type": "Callable[[Any], Any]"}, {"lineNumber": 639, "col_offset": 4, "nodeName": "test_inner_product_min_input_channels_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 654, "col_offset": 4, "nodeName": "test_batched_matmul_min_input_channels_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 668, "col_offset": 4, "nodeName": "test_inner_product_min_input_channels_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 683, "col_offset": 4, "nodeName": "test_batched_matmul_min_input_channels_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "test_batched_matmul_max_input_channels_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 711, "col_offset": 4, "nodeName": "test_inner_product_max_input_channels_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 726, "col_offset": 4, "nodeName": "test_batched_matmul_max_input_channels_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 740, "col_offset": 4, "nodeName": "test_inner_product_max_input_channels_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 755, "col_offset": 4, "nodeName": "test_inner_product_min_output_channels_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 770, "col_offset": 4, "nodeName": "test_batched_matmul_min_output_channels_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 784, "col_offset": 4, "nodeName": "test_inner_product_min_output_channels_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 799, "col_offset": 4, "nodeName": "test_batched_matmul_min_output_channels_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "test_batched_matmul_max_output_channels_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 827, "col_offset": 4, "nodeName": "test_inner_product_max_output_channels_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 842, "col_offset": 4, "nodeName": "test_batched_matmul_max_output_channels_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 856, "col_offset": 4, "nodeName": "test_inner_product_max_output_channels_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 871, "col_offset": 4, "nodeName": "test_inner_product_min_weight_count_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 886, "col_offset": 4, "nodeName": "test_batched_matmul_min_weight_count_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 900, "col_offset": 4, "nodeName": "test_inner_product_layer_names_invalid", "type": "Callable[[Any], Any]"}, {"lineNumber": 915, "col_offset": 4, "nodeName": "test_batched_matmul_layer_names_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 929, "col_offset": 4, "nodeName": "test_batched_matmul_8bit_weight_quantized", "type": "Callable[[Any], Any]"}, {"lineNumber": 945, "col_offset": 4, "nodeName": "test_batched_matmul_4bit_weight_quantized", "type": "Callable[[Any], Any]"}, {"lineNumber": 961, "col_offset": 4, "nodeName": "test_batched_matmul_2bit_weight_quantized", "type": "Callable[[Any], Any]"}, {"lineNumber": 977, "col_offset": 4, "nodeName": "test_batched_matmul_1bit_weight_quantized", "type": "Callable[[Any], Any]"}, {"lineNumber": 998, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 999, "col_offset": 4, "nodeName": "test_embeddingND_quantize", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 44, "nodeName": "unittest", "type": "module"}, {"lineNumber": 447, "col_offset": 52, "nodeName": "unittest", "type": "module"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "stable_rel_error", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 514, "col_offset": 37, "nodeName": "unittest", "type": "module"}, {"lineNumber": 998, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "qbits", "type": "int"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "qmode", "type": "str"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "_QUANTIZATION_MODE_LINEAR_QUANTIZATION", "type": "str"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "custom_lut", "type": "None"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "_test_model", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 40, "nodeName": "_test_model", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "full_output", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "quantized_output", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "_MLMODEL_FULL_PRECISION", "type": "str"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "use_tmp_folder", "type": "bool"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "_", "type": "Union[Any, str]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "coreml_spec", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "full_precision_model_spec", "type": "Any"}, {"lineNumber": 115, "col_offset": 36, "nodeName": "coreml_spec", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "full_precision_model", "type": "coremltools.models.model.MLModel"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "quantized_model", "type": "coremltools.models.model.MLModel"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "qbits", "type": "int"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "qbits", "type": "int"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "qbits", "type": "int"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "qbits", "type": "int"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "qbits", "type": "int"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "qbits", "type": "int"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "qbits", "type": "int"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "qbits", "type": "int"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "qmode", "type": "str"}, {"lineNumber": 338, "col_offset": 21, "nodeName": "_QUANTIZATION_MODE_LOOKUP_TABLE_KMEANS", "type": "str"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "qbits", "type": "int"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "qmode", "type": "str"}, {"lineNumber": 353, "col_offset": 21, "nodeName": "_QUANTIZATION_MODE_LOOKUP_TABLE_KMEANS", "type": "str"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "qbits", "type": "int"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "qmode", "type": "str"}, {"lineNumber": 365, "col_offset": 21, "nodeName": "_QUANTIZATION_MODE_LOOKUP_TABLE_KMEANS", "type": "str"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "qbits", "type": "int"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "qmode", "type": "str"}, {"lineNumber": 377, "col_offset": 21, "nodeName": "_QUANTIZATION_MODE_LOOKUP_TABLE_KMEANS", "type": "str"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "qbits", "type": "int"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "qmode", "type": "str"}, {"lineNumber": 388, "col_offset": 21, "nodeName": "_QUANTIZATION_MODE_LOOKUP_TABLE_KMEANS", "type": "str"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "qbits", "type": "int"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "qmode", "type": "str"}, {"lineNumber": 400, "col_offset": 21, "nodeName": "_QUANTIZATION_MODE_LOOKUP_TABLE_KMEANS", "type": "str"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "qbits", "type": "int"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "qmode", "type": "str"}, {"lineNumber": 412, "col_offset": 21, "nodeName": "_QUANTIZATION_MODE_LOOKUP_TABLE_KMEANS", "type": "str"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "qbits", "type": "int"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "qmode", "type": "str"}, {"lineNumber": 423, "col_offset": 21, "nodeName": "_QUANTIZATION_MODE_LOOKUP_TABLE_KMEANS", "type": "str"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "qbits", "type": "int"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "qmode", "type": "str"}, {"lineNumber": 434, "col_offset": 21, "nodeName": "_QUANTIZATION_MODE_CUSTOM_LOOKUP_TABLE", "type": "str"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "custom_lut", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 435, "col_offset": 26, "nodeName": "_get_linear_lookup_table_and_weight", "type": "Callable[[Any, Any], Tuple[Any, Any]]"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "num_filters", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "filter_shape", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "mlmodel", "type": "Any"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "q_mlmodel", "type": "Any"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "input_shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "input_val", "type": "Any"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "coreml_input", "type": "Dict[str, Any]"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "coreml_output", "type": "Any"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "q_coreml_output", "type": "Any"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "val", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "q_val", "type": "Any"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "rel_err", "type": "Any"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "input_shape", "type": "Tuple[int, int]"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "input_features", "type": "List[Tuple[str, coremltools.models.datatypes.Array]]"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "output_features", "type": "List[Tuple[str, None]]"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "np_preds", "type": "Any"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "coreml_preds", "type": "Any"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "noise", "type": "Any"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "noise_var", "type": "Any"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "signal_energy", "type": "Any"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "max_signal_energy", "type": "Any"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "snr", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "psnr", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "preds", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "layer", "type": "Any"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "layer_type", "type": "Any"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "wp", "type": "Any"}, {"lineNumber": 569, "col_offset": 13, "nodeName": "weights", "type": "Any"}, {"lineNumber": 571, "col_offset": 11, "nodeName": "specification_modified", "type": "Any"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "minimum_input_channels", "type": "int"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "minimum_input_channels", "type": "int"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "minimum_input_channels", "type": "int"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "minimum_input_channels", "type": "int"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "maximum_input_channels", "type": "int"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "maximum_input_channels", "type": "int"}, {"lineNumber": 737, "col_offset": 8, "nodeName": "maximum_input_channels", "type": "int"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "maximum_input_channels", "type": "int"}, {"lineNumber": 767, "col_offset": 8, "nodeName": "minimum_output_channels", "type": "int"}, {"lineNumber": 781, "col_offset": 8, "nodeName": "minimum_output_channels", "type": "int"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "minimum_output_channels", "type": "int"}, {"lineNumber": 810, "col_offset": 8, "nodeName": "minimum_output_channels", "type": "int"}, {"lineNumber": 824, "col_offset": 8, "nodeName": "maximum_output_channels", "type": "int"}, {"lineNumber": 839, "col_offset": 8, "nodeName": "maximum_output_channels", "type": "int"}, {"lineNumber": 853, "col_offset": 8, "nodeName": "maximum_output_channels", "type": "int"}, {"lineNumber": 868, "col_offset": 8, "nodeName": "maximum_output_channels", "type": "int"}, {"lineNumber": 883, "col_offset": 8, "nodeName": "minimum_weight_count", "type": "int"}, {"lineNumber": 897, "col_offset": 8, "nodeName": "minimum_weight_count", "type": "int"}, {"lineNumber": 912, "col_offset": 8, "nodeName": "include_layers_with_names", "type": "List[str]"}, {"lineNumber": 926, "col_offset": 8, "nodeName": "include_layers_with_names", "type": "List[str]"}, {"lineNumber": 1000, "col_offset": 8, "nodeName": "input_features", "type": "List[Tuple[str, coremltools.models.datatypes.Array]]"}, {"lineNumber": 1001, "col_offset": 8, "nodeName": "output_features", "type": "List[Tuple[str, None]]"}, {"lineNumber": 1015, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 1015, "col_offset": 15, "nodeName": "spec", "type": "Any"}, {"lineNumber": 1016, "col_offset": 8, "nodeName": "model_fp32", "type": "coremltools.models.model.MLModel"}, {"lineNumber": 1022, "col_offset": 8, "nodeName": "model_fp16", "type": "Any"}, {"lineNumber": 1023, "col_offset": 8, "nodeName": "spec_fp16", "type": "Any"}, {"lineNumber": 1033, "col_offset": 8, "nodeName": "model_uint8", "type": "Any"}, {"lineNumber": 1034, "col_offset": 8, "nodeName": "spec_uint8", "type": "Any"}, {"lineNumber": 1046, "col_offset": 8, "nodeName": "model_uint5", "type": "Any"}, {"lineNumber": 1047, "col_offset": 8, "nodeName": "spec_uint5", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "KerasBasicNumericCorrectnessTest", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 45, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "predict", "type": "Any"}, {"lineNumber": 49, "col_offset": 51, "nodeName": "input_", "type": "Any"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "predict", "type": "Any"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "input_", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "keys", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "full_output_flatten", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "quantized_output_flatten", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "norm_factor", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "norm_factor", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "f_out", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "q_out", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "model_dir", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "use_tmp_folder", "type": "bool"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "join", "type": "Callable"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "model_dir", "type": "Union[Any, str]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "_get_coreml_model_params_and_test_input", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "mode", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "one_dim_seq_flags", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "_get_coreml_model", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "input_names", "type": "Any"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "output_names", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "_quantize_spec_weights", "type": "Callable"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "_dequantize_nn_spec", "type": "Callable[[Any], None]"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "_quantize_spec_weights", "type": "Callable"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "MLModel", "type": "Type[coremltools.models.model.MLModel]"}, {"lineNumber": 125, "col_offset": 58, "nodeName": "full_precision_model_spec", "type": "Any"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "MLModel", "type": "Type[coremltools.models.model.MLModel]"}, {"lineNumber": 126, "col_offset": 53, "nodeName": "quantized_model_spec", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "_run_quantized_test", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "coreml_input", "type": "Any"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "full_precision_model", "type": "coremltools.models.model.MLModel"}, {"lineNumber": 128, "col_offset": 48, "nodeName": "quantized_model", "type": "coremltools.models.model.MLModel"}, {"lineNumber": 128, "col_offset": 65, "nodeName": "delta", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "use_tmp_folder", "type": "bool"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "test_tiny_inner_product", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "test_conv_batchnorm_random", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "test_conv_batchnorm_no_gamma_no_beta", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "test_tiny_deconv_random", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "test_tiny_deconv_random_same_padding", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "test_tiny_depthwise_conv_valid_pad", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "test_tiny_separable_conv_valid_depth_multiplier", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "test_max_pooling_no_overlap", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "test_dense_softmax", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "test_housenet_random", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "test_large_input_length_conv1d_same_random", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "test_conv_dense", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "test_tiny_conv_crop_1d_random", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "test_embedding", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "test_tiny_conv_elu_random", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "test_tiny_concat_random", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "test_tiny_dense_tanh_fused_random", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "test_conv1d_flatten", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "test_tiny_conv_dropout_random", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "test_tiny_mul_random", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "test_tiny_conv_thresholded_relu_random", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "test_tiny_seq2seq_rnn_random", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "test_rnn_seq", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "test_medium_no_sequence_simple_rnn_random", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "test_tiny_no_sequence_lstm_zeros", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "test_tiny_no_sequence_lstm_ones", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "test_lstm_seq", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "test_medium_no_sequence_lstm_random", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "test_tiny_no_sequence_gru_random", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "test_gru_seq_backwards", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "test_tiny_no_sequence_bidir_random", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "test_tiny_no_sequence_bidir_random_gpu", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "test_small_no_sequence_bidir_random", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "test_medium_no_sequence_bidir_random", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "test_medium_bidir_random_return_seq_false", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "test_tiny_sequence_lstm", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "test_lstm_td", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "test_large_channel_gpu", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "test_tiny_seq2seq_rnn_random", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "test_lstm_seq_backwards", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 435, "col_offset": 26, "nodeName": "quantization_utils", "type": "module"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "err", "type": "Any"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "denom", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "num_kernels", "type": "int"}, {"lineNumber": 462, "col_offset": 21, "nodeName": "kernel_height", "type": "int"}, {"lineNumber": 462, "col_offset": 36, "nodeName": "kernel_width", "type": "int"}, {"lineNumber": 462, "col_offset": 50, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 465, "col_offset": 16, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 475, "col_offset": 16, "nodeName": "bias", "type": "Any"}, {"lineNumber": 475, "col_offset": 23, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 476, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 477, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 479, "col_offset": 21, "nodeName": "stack", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 485, "col_offset": 18, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 486, "col_offset": 19, "nodeName": "AdvancedQuantizedLayerSelector", "type": "Type[coremltools.models.neural_network.quantization_utils.AdvancedQuantizedLayerSelector]"}, {"lineNumber": 492, "col_offset": 20, "nodeName": "quantize_weights", "type": "Callable[..., Any]"}, {"lineNumber": 492, "col_offset": 56, "nodeName": "mlmodel", "type": "Any"}, {"lineNumber": 494, "col_offset": 29, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 494, "col_offset": 45, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 494, "col_offset": 56, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 497, "col_offset": 32, "nodeName": "input_val", "type": "Any"}, {"lineNumber": 498, "col_offset": 24, "nodeName": "predict", "type": "Any"}, {"lineNumber": 498, "col_offset": 40, "nodeName": "coreml_input", "type": "Dict[str, Any]"}, {"lineNumber": 499, "col_offset": 26, "nodeName": "predict", "type": "Any"}, {"lineNumber": 499, "col_offset": 44, "nodeName": "coreml_input", "type": "Dict[str, Any]"}, {"lineNumber": 501, "col_offset": 14, "nodeName": "coreml_output", "type": "Any"}, {"lineNumber": 502, "col_offset": 16, "nodeName": "q_coreml_output", "type": "Any"}, {"lineNumber": 503, "col_offset": 18, "nodeName": "stable_rel_error", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 503, "col_offset": 35, "nodeName": "q_val", "type": "Any"}, {"lineNumber": 503, "col_offset": 42, "nodeName": "val", "type": "Any"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "max_rel_err", "type": "Any"}, {"lineNumber": 504, "col_offset": 21, "nodeName": "mean_rel_err", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "Cout", "type": "int"}, {"lineNumber": 521, "col_offset": 19, "nodeName": "Cin", "type": "int"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 524, "col_offset": 31, "nodeName": "Cin", "type": "int"}, {"lineNumber": 527, "col_offset": 23, "nodeName": "NeuralNetworkBuilder", "type": "Type[coremltools.models.neural_network.builder.NeuralNetworkBuilder]"}, {"lineNumber": 528, "col_offset": 12, "nodeName": "input_features", "type": "List[Tuple[str, coremltools.models.datatypes.Array]]"}, {"lineNumber": 528, "col_offset": 28, "nodeName": "output_features", "type": "List[Tuple[str, None]]"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 530, "col_offset": 24, "nodeName": "MatrixMultiplyLayerSelector", "type": "Type[coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector]"}, {"lineNumber": 536, "col_offset": 19, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 537, "col_offset": 23, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 539, "col_offset": 16, "nodeName": "np_preds", "type": "Any"}, {"lineNumber": 539, "col_offset": 27, "nodeName": "coreml_preds", "type": "Any"}, {"lineNumber": 542, "col_offset": 28, "nodeName": "amax", "type": "Any"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 545, "col_offset": 32, "nodeName": "snr", "type": "Any"}, {"lineNumber": 545, "col_offset": 37, "nodeName": "SNR", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 546, "col_offset": 32, "nodeName": "psnr", "type": "Any"}, {"lineNumber": 546, "col_offset": 38, "nodeName": "PSNR", "type": "Any"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "rand", "type": "Any"}, {"lineNumber": 552, "col_offset": 12, "nodeName": "mlmodel", "type": "coremltools.models.model.MLModel"}, {"lineNumber": 555, "col_offset": 16, "nodeName": "_get_preds", "type": "Callable[[Any], Any]"}, {"lineNumber": 555, "col_offset": 27, "nodeName": "spec", "type": "Any"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 556, "col_offset": 25, "nodeName": "specificationVersion", "type": "Any"}, {"lineNumber": 558, "col_offset": 25, "nodeName": "activate_int8_int8_matrix_multiplications", "type": "Callable[..., Any]"}, {"lineNumber": 559, "col_offset": 12, "nodeName": "spec", "type": "Any"}, {"lineNumber": 559, "col_offset": 31, "nodeName": "selector", "type": "Any"}, {"lineNumber": 562, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 563, "col_offset": 21, "nodeName": "WhichOneof", "type": "Any"}, {"lineNumber": 564, "col_offset": 11, "nodeName": "layer_type", "type": "Any"}, {"lineNumber": 565, "col_offset": 12, "nodeName": "matmul_layer", "type": "Any"}, {"lineNumber": 565, "col_offset": 27, "nodeName": "innerProduct", "type": "Any"}, {"lineNumber": 569, "col_offset": 13, "nodeName": "matmul_layer", "type": "Any"}, {"lineNumber": 573, "col_offset": 12, "nodeName": "quant_preds", "type": "Any"}, {"lineNumber": 578, "col_offset": 12, "nodeName": "quant_preds", "type": "Any"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "add_batched_mat_mul", "type": "Callable[..., Any]"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "add_batched_mat_mul", "type": "Callable[..., Any]"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "add_inner_product", "type": "Callable[..., Any]"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "add_inner_product", "type": "Callable[..., Any]"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "add_inner_product", "type": "Callable[..., Any]"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 657, "col_offset": 8, "nodeName": "add_batched_mat_mul", "type": "Callable[..., Any]"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 670, "col_offset": 8, "nodeName": "add_inner_product", "type": "Callable[..., Any]"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "add_batched_mat_mul", "type": "Callable[..., Any]"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "add_batched_mat_mul", "type": "Callable[..., Any]"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 712, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "add_inner_product", "type": "Callable[..., Any]"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "add_batched_mat_mul", "type": "Callable[..., Any]"}, {"lineNumber": 737, "col_offset": 8, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 742, "col_offset": 8, "nodeName": "add_inner_product", "type": "Callable[..., Any]"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 757, "col_offset": 8, "nodeName": "add_inner_product", "type": "Callable[..., Any]"}, {"lineNumber": 767, "col_offset": 8, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 772, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 773, "col_offset": 8, "nodeName": "add_batched_mat_mul", "type": "Callable[..., Any]"}, {"lineNumber": 781, "col_offset": 8, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector"}, {"lineNumber": 782, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 785, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "add_inner_product", "type": "Callable[..., Any]"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector"}, {"lineNumber": 797, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 802, "col_offset": 8, "nodeName": "add_batched_mat_mul", "type": "Callable[..., Any]"}, {"lineNumber": 810, "col_offset": 8, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector"}, {"lineNumber": 811, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 815, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 816, "col_offset": 8, "nodeName": "add_batched_mat_mul", "type": "Callable[..., Any]"}, {"lineNumber": 824, "col_offset": 8, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector"}, {"lineNumber": 825, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 828, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 829, "col_offset": 8, "nodeName": "add_inner_product", "type": "Callable[..., Any]"}, {"lineNumber": 839, "col_offset": 8, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector"}, {"lineNumber": 840, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 844, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "add_batched_mat_mul", "type": "Callable[..., Any]"}, {"lineNumber": 853, "col_offset": 8, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 857, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 858, "col_offset": 8, "nodeName": "add_inner_product", "type": "Callable[..., Any]"}, {"lineNumber": 868, "col_offset": 8, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector"}, {"lineNumber": 869, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 872, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 873, "col_offset": 8, "nodeName": "add_inner_product", "type": "Callable[..., Any]"}, {"lineNumber": 883, "col_offset": 8, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector"}, {"lineNumber": 884, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 888, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 889, "col_offset": 8, "nodeName": "add_batched_mat_mul", "type": "Callable[..., Any]"}, {"lineNumber": 897, "col_offset": 8, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector"}, {"lineNumber": 898, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 901, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 902, "col_offset": 8, "nodeName": "add_inner_product", "type": "Callable[..., Any]"}, {"lineNumber": 912, "col_offset": 8, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector"}, {"lineNumber": 913, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 917, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 918, "col_offset": 8, "nodeName": "add_batched_mat_mul", "type": "Callable[..., Any]"}, {"lineNumber": 926, "col_offset": 8, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.MatrixMultiplyLayerSelector"}, {"lineNumber": 927, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 931, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 932, "col_offset": 8, "nodeName": "add_batched_mat_mul", "type": "Callable[..., Any]"}, {"lineNumber": 940, "col_offset": 8, "nodeName": "_quantize_spec_weights", "type": "Callable"}, {"lineNumber": 941, "col_offset": 12, "nodeName": "spec", "type": "Any"}, {"lineNumber": 941, "col_offset": 34, "nodeName": "_QUANTIZATION_MODE_LINEAR_QUANTIZATION", "type": "str"}, {"lineNumber": 943, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 947, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 948, "col_offset": 8, "nodeName": "add_batched_mat_mul", "type": "Callable[..., Any]"}, {"lineNumber": 956, "col_offset": 8, "nodeName": "_quantize_spec_weights", "type": "Callable"}, {"lineNumber": 957, "col_offset": 12, "nodeName": "spec", "type": "Any"}, {"lineNumber": 957, "col_offset": 34, "nodeName": "_QUANTIZATION_MODE_LINEAR_QUANTIZATION", "type": "str"}, {"lineNumber": 959, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 963, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 964, "col_offset": 8, "nodeName": "add_batched_mat_mul", "type": "Callable[..., Any]"}, {"lineNumber": 972, "col_offset": 8, "nodeName": "_quantize_spec_weights", "type": "Callable"}, {"lineNumber": 973, "col_offset": 12, "nodeName": "spec", "type": "Any"}, {"lineNumber": 973, "col_offset": 34, "nodeName": "_QUANTIZATION_MODE_LINEAR_QUANTIZATION", "type": "str"}, {"lineNumber": 975, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 979, "col_offset": 8, "nodeName": "initialize", "type": "Callable[[], Any]"}, {"lineNumber": 980, "col_offset": 8, "nodeName": "add_batched_mat_mul", "type": "Callable[..., Any]"}, {"lineNumber": 988, "col_offset": 8, "nodeName": "_quantize_spec_weights", "type": "Callable"}, {"lineNumber": 989, "col_offset": 12, "nodeName": "spec", "type": "Any"}, {"lineNumber": 989, "col_offset": 34, "nodeName": "_QUANTIZATION_MODE_LINEAR_QUANTIZATION", "type": "str"}, {"lineNumber": 991, "col_offset": 8, "nodeName": "compare", "type": "Callable[..., Any]"}, {"lineNumber": 1002, "col_offset": 18, "nodeName": "NeuralNetworkBuilder", "type": "Type[coremltools.models.neural_network.builder.NeuralNetworkBuilder]"}, {"lineNumber": 1003, "col_offset": 12, "nodeName": "input_features", "type": "List[Tuple[str, coremltools.models.datatypes.Array]]"}, {"lineNumber": 1003, "col_offset": 28, "nodeName": "output_features", "type": "List[Tuple[str, None]]"}, {"lineNumber": 1006, "col_offset": 8, "nodeName": "add_embedding_nd", "type": "Callable[..., Any]"}, {"lineNumber": 1015, "col_offset": 15, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 1016, "col_offset": 21, "nodeName": "MLModel", "type": "Type[coremltools.models.model.MLModel]"}, {"lineNumber": 1016, "col_offset": 48, "nodeName": "spec", "type": "Any"}, {"lineNumber": 1017, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1022, "col_offset": 21, "nodeName": "quantize_weights", "type": "Callable[..., Any]"}, {"lineNumber": 1022, "col_offset": 57, "nodeName": "model_fp32", "type": "coremltools.models.model.MLModel"}, {"lineNumber": 1023, "col_offset": 20, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 1024, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1027, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1033, "col_offset": 22, "nodeName": "quantize_weights", "type": "Callable[..., Any]"}, {"lineNumber": 1033, "col_offset": 58, "nodeName": "model_fp32", "type": "coremltools.models.model.MLModel"}, {"lineNumber": 1034, "col_offset": 21, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 1035, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1038, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1041, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1046, "col_offset": 22, "nodeName": "quantize_weights", "type": "Callable[..., Any]"}, {"lineNumber": 1046, "col_offset": 58, "nodeName": "model_fp32", "type": "coremltools.models.model.MLModel"}, {"lineNumber": 1047, "col_offset": 21, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 1048, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1051, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 1054, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "full_precision_model", "type": "Any"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "quantized_model", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 51, "col_offset": 45, "nodeName": "keys", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "full_output", "type": "Any"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "full_output_flatten", "type": "Any"}, {"lineNumber": 59, "col_offset": 58, "nodeName": "quantized_output_flatten", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 60, "col_offset": 37, "nodeName": "norm_factor", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "full_output_flatten", "type": "Any"}, {"lineNumber": 61, "col_offset": 42, "nodeName": "norm_factor", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "quantized_output_flatten", "type": "Any"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "norm_factor", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "idx", "type": "int"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "full_value", "type": "Any"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 64, "col_offset": 45, "nodeName": "f_out", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "quantized_value", "type": "Any"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "path", "type": "module"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 98, "col_offset": 62, "nodeName": "model_precision", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "coreml_model", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "quantization_utils", "type": "module"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "coreml_spec", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "qbits", "type": "int"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "qmode", "type": "str"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "custom_lut", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "quantization_utils", "type": "module"}, {"lineNumber": 114, "col_offset": 52, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "quantization_utils", "type": "module"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "qbits", "type": "int"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "qmode", "type": "str"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "custom_lut", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "models", "type": "module"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "models", "type": "module"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 132, "col_offset": 45, "nodeName": "model_dir", "type": "Union[Any, str]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "model_dir", "type": "Union[Any, str]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "keras_tester", "type": "Any"}, {"lineNumber": 456, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 456, "col_offset": 22, "nodeName": "ref", "type": "Any"}, {"lineNumber": 457, "col_offset": 20, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 458, "col_offset": 33, "nodeName": "denom", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 467, "col_offset": 12, "nodeName": "Conv2D", "type": "Any"}, {"lineNumber": 476, "col_offset": 22, "nodeName": "weight", "type": "Any"}, {"lineNumber": 477, "col_offset": 23, "nodeName": "weight", "type": "Any"}, {"lineNumber": 479, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 483, "col_offset": 37, "nodeName": "new_weight", "type": "Any"}, {"lineNumber": 483, "col_offset": 49, "nodeName": "bias", "type": "Any"}, {"lineNumber": 485, "col_offset": 18, "nodeName": "keras_converter", "type": "module"}, {"lineNumber": 486, "col_offset": 19, "nodeName": "quantization_utils", "type": "module"}, {"lineNumber": 492, "col_offset": 20, "nodeName": "quantization_utils", "type": "module"}, {"lineNumber": 492, "col_offset": 77, "nodeName": "selector", "type": "coremltools.models.neural_network.quantization_utils.AdvancedQuantizedLayerSelector"}, {"lineNumber": 498, "col_offset": 24, "nodeName": "mlmodel", "type": "Any"}, {"lineNumber": 499, "col_offset": 26, "nodeName": "q_mlmodel", "type": "Any"}, {"lineNumber": 504, "col_offset": 36, "nodeName": "max", "type": "Any"}, {"lineNumber": 504, "col_offset": 43, "nodeName": "rel_err", "type": "Any"}, {"lineNumber": 504, "col_offset": 53, "nodeName": "mean", "type": "Any"}, {"lineNumber": 504, "col_offset": 61, "nodeName": "rel_err", "type": "Any"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 505, "col_offset": 24, "nodeName": "max_rel_err", "type": "Any"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 506, "col_offset": 24, "nodeName": "max_rel_err", "type": "Any"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 507, "col_offset": 24, "nodeName": "mean_rel_err", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 521, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 524, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 527, "col_offset": 23, "nodeName": "neural_network", "type": "module"}, {"lineNumber": 536, "col_offset": 19, "nodeName": "np_preds", "type": "Any"}, {"lineNumber": 537, "col_offset": 23, "nodeName": "coreml_preds", "type": "Any"}, {"lineNumber": 541, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 541, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 541, "col_offset": 52, "nodeName": "np_preds", "type": "Any"}, {"lineNumber": 542, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 542, "col_offset": 36, "nodeName": "np_preds", "type": "Any"}, {"lineNumber": 543, "col_offset": 19, "nodeName": "log10", "type": "Any"}, {"lineNumber": 544, "col_offset": 20, "nodeName": "log10", "type": "Any"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 549, "col_offset": 28, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 552, "col_offset": 22, "nodeName": "MLModel", "type": "Type[coremltools.models.model.MLModel]"}, {"lineNumber": 552, "col_offset": 49, "nodeName": "spec", "type": "Any"}, {"lineNumber": 555, "col_offset": 27, "nodeName": "builder", "type": "Any"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 556, "col_offset": 25, "nodeName": "spec", "type": "Any"}, {"lineNumber": 559, "col_offset": 12, "nodeName": "builder", "type": "Any"}, {"lineNumber": 559, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 562, "col_offset": 16, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 563, "col_offset": 21, "nodeName": "layer", "type": "Any"}, {"lineNumber": 565, "col_offset": 27, "nodeName": "layer", "type": "Any"}, {"lineNumber": 567, "col_offset": 13, "nodeName": "layer_type", "type": "Any"}, {"lineNumber": 568, "col_offset": 12, "nodeName": "matmul_layer", "type": "Any"}, {"lineNumber": 568, "col_offset": 27, "nodeName": "batchedMatmul", "type": "Any"}, {"lineNumber": 572, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 572, "col_offset": 29, "nodeName": "specificationVersion", "type": "Any"}, {"lineNumber": 573, "col_offset": 26, "nodeName": "_get_preds", "type": "Callable[[Any], Any]"}, {"lineNumber": 573, "col_offset": 37, "nodeName": "quantized_spec", "type": "Any"}, {"lineNumber": 574, "col_offset": 12, "nodeName": "_test_predictions", "type": "Callable[..., Any]"}, {"lineNumber": 574, "col_offset": 35, "nodeName": "preds", "type": "Any"}, {"lineNumber": 574, "col_offset": 42, "nodeName": "quant_preds", "type": "Any"}, {"lineNumber": 575, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 577, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 577, "col_offset": 29, "nodeName": "specificationVersion", "type": "Any"}, {"lineNumber": 578, "col_offset": 26, "nodeName": "_get_preds", "type": "Callable[[Any], Any]"}, {"lineNumber": 578, "col_offset": 37, "nodeName": "quantized_spec", "type": "Any"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 579, "col_offset": 49, "nodeName": "preds", "type": "Any"}, {"lineNumber": 579, "col_offset": 56, "nodeName": "quant_preds", "type": "Any"}, {"lineNumber": 580, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 589, "col_offset": 31, "nodeName": "Cin", "type": "int"}, {"lineNumber": 590, "col_offset": 34, "nodeName": "Cout", "type": "int"}, {"lineNumber": 591, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 602, "col_offset": 31, "nodeName": "Cin", "type": "int"}, {"lineNumber": 603, "col_offset": 34, "nodeName": "Cout", "type": "int"}, {"lineNumber": 604, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 605, "col_offset": 17, "nodeName": "b", "type": "Any"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 616, "col_offset": 27, "nodeName": "Cin", "type": "int"}, {"lineNumber": 617, "col_offset": 28, "nodeName": "Cout", "type": "int"}, {"lineNumber": 618, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 626, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 631, "col_offset": 27, "nodeName": "Cin", "type": "int"}, {"lineNumber": 632, "col_offset": 28, "nodeName": "Cout", "type": "int"}, {"lineNumber": 633, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 634, "col_offset": 14, "nodeName": "b", "type": "Any"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 645, "col_offset": 27, "nodeName": "Cin", "type": "int"}, {"lineNumber": 646, "col_offset": 28, "nodeName": "Cout", "type": "int"}, {"lineNumber": 647, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 648, "col_offset": 14, "nodeName": "b", "type": "Any"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 657, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 661, "col_offset": 31, "nodeName": "Cin", "type": "int"}, {"lineNumber": 662, "col_offset": 34, "nodeName": "Cout", "type": "int"}, {"lineNumber": 663, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 670, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 674, "col_offset": 27, "nodeName": "Cin", "type": "int"}, {"lineNumber": 675, "col_offset": 28, "nodeName": "Cout", "type": "int"}, {"lineNumber": 676, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 677, "col_offset": 14, "nodeName": "b", "type": "Any"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 690, "col_offset": 31, "nodeName": "Cin", "type": "int"}, {"lineNumber": 691, "col_offset": 34, "nodeName": "Cout", "type": "int"}, {"lineNumber": 692, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 704, "col_offset": 31, "nodeName": "Cin", "type": "int"}, {"lineNumber": 705, "col_offset": 34, "nodeName": "Cout", "type": "int"}, {"lineNumber": 706, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 712, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 717, "col_offset": 27, "nodeName": "Cin", "type": "int"}, {"lineNumber": 718, "col_offset": 28, "nodeName": "Cout", "type": "int"}, {"lineNumber": 719, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 720, "col_offset": 14, "nodeName": "b", "type": "Any"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 733, "col_offset": 31, "nodeName": "Cin", "type": "int"}, {"lineNumber": 734, "col_offset": 34, "nodeName": "Cout", "type": "int"}, {"lineNumber": 735, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 737, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 742, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 746, "col_offset": 27, "nodeName": "Cin", "type": "int"}, {"lineNumber": 747, "col_offset": 28, "nodeName": "Cout", "type": "int"}, {"lineNumber": 748, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 749, "col_offset": 14, "nodeName": "b", "type": "Any"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 757, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 761, "col_offset": 27, "nodeName": "Cin", "type": "int"}, {"lineNumber": 762, "col_offset": 28, "nodeName": "Cout", "type": "int"}, {"lineNumber": 763, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 764, "col_offset": 14, "nodeName": "b", "type": "Any"}, {"lineNumber": 767, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 772, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 773, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 777, "col_offset": 31, "nodeName": "Cin", "type": "int"}, {"lineNumber": 778, "col_offset": 34, "nodeName": "Cout", "type": "int"}, {"lineNumber": 779, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 781, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 782, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 785, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 790, "col_offset": 27, "nodeName": "Cin", "type": "int"}, {"lineNumber": 791, "col_offset": 28, "nodeName": "Cout", "type": "int"}, {"lineNumber": 792, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 793, "col_offset": 14, "nodeName": "b", "type": "Any"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 797, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 802, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 806, "col_offset": 31, "nodeName": "Cin", "type": "int"}, {"lineNumber": 807, "col_offset": 34, "nodeName": "Cout", "type": "int"}, {"lineNumber": 808, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 810, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 811, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 815, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 816, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 820, "col_offset": 31, "nodeName": "Cin", "type": "int"}, {"lineNumber": 821, "col_offset": 34, "nodeName": "Cout", "type": "int"}, {"lineNumber": 822, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 824, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 825, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 828, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 829, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 833, "col_offset": 27, "nodeName": "Cin", "type": "int"}, {"lineNumber": 834, "col_offset": 28, "nodeName": "Cout", "type": "int"}, {"lineNumber": 835, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 836, "col_offset": 14, "nodeName": "b", "type": "Any"}, {"lineNumber": 839, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 840, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 844, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 849, "col_offset": 31, "nodeName": "Cin", "type": "int"}, {"lineNumber": 850, "col_offset": 34, "nodeName": "Cout", "type": "int"}, {"lineNumber": 851, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 853, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 857, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 858, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 862, "col_offset": 27, "nodeName": "Cin", "type": "int"}, {"lineNumber": 863, "col_offset": 28, "nodeName": "Cout", "type": "int"}, {"lineNumber": 864, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 865, "col_offset": 14, "nodeName": "b", "type": "Any"}, {"lineNumber": 868, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 869, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 872, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 873, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 877, "col_offset": 27, "nodeName": "Cin", "type": "int"}, {"lineNumber": 878, "col_offset": 28, "nodeName": "Cout", "type": "int"}, {"lineNumber": 879, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 880, "col_offset": 14, "nodeName": "b", "type": "Any"}, {"lineNumber": 883, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 884, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 888, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 889, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 893, "col_offset": 31, "nodeName": "Cin", "type": "int"}, {"lineNumber": 894, "col_offset": 34, "nodeName": "Cout", "type": "int"}, {"lineNumber": 895, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 897, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 898, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 901, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 902, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 906, "col_offset": 27, "nodeName": "Cin", "type": "int"}, {"lineNumber": 907, "col_offset": 28, "nodeName": "Cout", "type": "int"}, {"lineNumber": 908, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 909, "col_offset": 14, "nodeName": "b", "type": "Any"}, {"lineNumber": 912, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 913, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 917, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 918, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 922, "col_offset": 31, "nodeName": "Cin", "type": "int"}, {"lineNumber": 923, "col_offset": 34, "nodeName": "Cout", "type": "int"}, {"lineNumber": 924, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 926, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 927, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 931, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 932, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 936, "col_offset": 31, "nodeName": "Cin", "type": "int"}, {"lineNumber": 937, "col_offset": 34, "nodeName": "Cout", "type": "int"}, {"lineNumber": 938, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 941, "col_offset": 12, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 943, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 947, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 948, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 952, "col_offset": 31, "nodeName": "Cin", "type": "int"}, {"lineNumber": 953, "col_offset": 34, "nodeName": "Cout", "type": "int"}, {"lineNumber": 954, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 957, "col_offset": 12, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 959, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 963, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 964, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 968, "col_offset": 31, "nodeName": "Cin", "type": "int"}, {"lineNumber": 969, "col_offset": 34, "nodeName": "Cout", "type": "int"}, {"lineNumber": 970, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 973, "col_offset": 12, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 975, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 979, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 980, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 984, "col_offset": 31, "nodeName": "Cin", "type": "int"}, {"lineNumber": 985, "col_offset": 34, "nodeName": "Cout", "type": "int"}, {"lineNumber": 986, "col_offset": 14, "nodeName": "W", "type": "Any"}, {"lineNumber": 989, "col_offset": 12, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 991, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1002, "col_offset": 18, "nodeName": "neural_network", "type": "module"}, {"lineNumber": 1006, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 1016, "col_offset": 21, "nodeName": "models", "type": "module"}, {"lineNumber": 1017, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1018, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1018, "col_offset": 16, "nodeName": "floatValue", "type": "Any"}, {"lineNumber": 1022, "col_offset": 21, "nodeName": "quantization_utils", "type": "module"}, {"lineNumber": 1023, "col_offset": 20, "nodeName": "model_fp16", "type": "Any"}, {"lineNumber": 1024, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1025, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1025, "col_offset": 16, "nodeName": "floatValue", "type": "Any"}, {"lineNumber": 1027, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1028, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1028, "col_offset": 16, "nodeName": "float16Value", "type": "Any"}, {"lineNumber": 1033, "col_offset": 22, "nodeName": "quantization_utils", "type": "module"}, {"lineNumber": 1034, "col_offset": 21, "nodeName": "model_uint8", "type": "Any"}, {"lineNumber": 1035, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1036, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1036, "col_offset": 16, "nodeName": "floatValue", "type": "Any"}, {"lineNumber": 1038, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1039, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1039, "col_offset": 16, "nodeName": "float16Value", "type": "Any"}, {"lineNumber": 1041, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1042, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1042, "col_offset": 16, "nodeName": "rawValue", "type": "Any"}, {"lineNumber": 1046, "col_offset": 22, "nodeName": "quantization_utils", "type": "module"}, {"lineNumber": 1047, "col_offset": 21, "nodeName": "model_uint5", "type": "Any"}, {"lineNumber": 1048, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1049, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1049, "col_offset": 16, "nodeName": "floatValue", "type": "Any"}, {"lineNumber": 1051, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1052, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1052, "col_offset": 16, "nodeName": "float16Value", "type": "Any"}, {"lineNumber": 1054, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 1055, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 1055, "col_offset": 16, "nodeName": "rawValue", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "full_output", "type": "Any"}, {"lineNumber": 51, "col_offset": 45, "nodeName": "quantized_output", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "q_out", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "full_value", "type": "Any"}, {"lineNumber": 66, "col_offset": 51, "nodeName": "quantized_value", "type": "Any"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 52, "nodeName": "coreml_spec", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "coremltools", "type": "module"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "coremltools", "type": "module"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "path", "type": "module"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "shutil", "type": "module"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 264, "col_offset": 14, "nodeName": "SevenBitQuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 264, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 275, "col_offset": 14, "nodeName": "SixBitQuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 275, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 286, "col_offset": 14, "nodeName": "FiveBitQuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 286, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 296, "col_offset": 14, "nodeName": "FourBitQuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 296, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "ThreeBitQuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 307, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 318, "col_offset": 14, "nodeName": "TwoBitQuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 318, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "OneBitQuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 328, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 336, "col_offset": 14, "nodeName": "LUTQuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 336, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 351, "col_offset": 14, "nodeName": "LUTSevenBitQuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 351, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 363, "col_offset": 14, "nodeName": "LUTSixBitQuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 363, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 375, "col_offset": 14, "nodeName": "LUTFiveBitQuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 375, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 386, "col_offset": 14, "nodeName": "LUTFourBitQuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 386, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 398, "col_offset": 14, "nodeName": "LUTThreeBitQuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 398, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 410, "col_offset": 14, "nodeName": "LUTTwoBitQuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 410, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 421, "col_offset": 14, "nodeName": "LUTOneBitQuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 421, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 432, "col_offset": 14, "nodeName": "LUTCustomQuantizationNumericalCorrectnessTests", "type": "Any"}, {"lineNumber": 432, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 457, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 457, "col_offset": 31, "nodeName": "abs", "type": "Any"}, {"lineNumber": 457, "col_offset": 38, "nodeName": "ref", "type": "Any"}, {"lineNumber": 457, "col_offset": 44, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 457, "col_offset": 57, "nodeName": "ref", "type": "Any"}, {"lineNumber": 458, "col_offset": 19, "nodeName": "abs", "type": "Any"}, {"lineNumber": 458, "col_offset": 26, "nodeName": "err", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 469, "col_offset": 24, "nodeName": "num_kernels", "type": "int"}, {"lineNumber": 475, "col_offset": 23, "nodeName": "layers", "type": "Any"}, {"lineNumber": 480, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "layers", "type": "Any"}, {"lineNumber": 495, "col_offset": 24, "nodeName": "rand", "type": "Any"}, {"lineNumber": 504, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 504, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 522, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 522, "col_offset": 32, "nodeName": "Cout", "type": "int"}, {"lineNumber": 522, "col_offset": 43, "nodeName": "Cin", "type": "int"}, {"lineNumber": 523, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 523, "col_offset": 32, "nodeName": "Cout", "type": "int"}, {"lineNumber": 525, "col_offset": 35, "nodeName": "Array", "type": "Type[coremltools.models.datatypes.Array]"}, {"lineNumber": 540, "col_offset": 20, "nodeName": "sum", "type": "Any"}, {"lineNumber": 540, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 540, "col_offset": 45, "nodeName": "noise", "type": "Any"}, {"lineNumber": 541, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 541, "col_offset": 31, "nodeName": "np_preds", "type": "Any"}, {"lineNumber": 543, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 543, "col_offset": 28, "nodeName": "signal_energy", "type": "Any"}, {"lineNumber": 543, "col_offset": 44, "nodeName": "noise_var", "type": "Any"}, {"lineNumber": 544, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 544, "col_offset": 29, "nodeName": "max_signal_energy", "type": "Any"}, {"lineNumber": 544, "col_offset": 49, "nodeName": "noise_var", "type": "Any"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 549, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 552, "col_offset": 22, "nodeName": "models", "type": "module"}, {"lineNumber": 553, "col_offset": 19, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 555, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 556, "col_offset": 25, "nodeName": "builder", "type": "Any"}, {"lineNumber": 559, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 562, "col_offset": 16, "nodeName": "spec", "type": "Any"}, {"lineNumber": 568, "col_offset": 27, "nodeName": "layer", "type": "Any"}, {"lineNumber": 572, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 572, "col_offset": 29, "nodeName": "spec", "type": "Any"}, {"lineNumber": 574, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 575, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 575, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 575, "col_offset": 33, "nodeName": "floatValue", "type": "Any"}, {"lineNumber": 577, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 577, "col_offset": 29, "nodeName": "spec", "type": "Any"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 580, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 580, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 580, "col_offset": 35, "nodeName": "floatValue", "type": "Any"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 589, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 590, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 591, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 602, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 603, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 604, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 605, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 616, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 617, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 618, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 631, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 632, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 633, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 634, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 645, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 646, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 647, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 648, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 657, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 661, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 662, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 663, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 670, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 674, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 675, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 676, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 677, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 690, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 691, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 692, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 704, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 705, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 706, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 717, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 718, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 719, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 720, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 733, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 734, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 735, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 742, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 746, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 747, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 748, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 749, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 757, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 761, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 762, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 763, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 764, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 773, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 777, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 778, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 779, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 790, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 791, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 792, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 793, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 802, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 806, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 807, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 808, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 816, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 820, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 821, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 822, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 829, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 833, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 834, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 835, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 836, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 849, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 850, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 851, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 858, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 862, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 863, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 864, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 865, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 873, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 877, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 878, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 879, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 880, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 889, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 893, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 894, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 895, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 902, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 906, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 907, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 908, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 909, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 918, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 922, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 923, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 924, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 932, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 936, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 937, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 938, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 941, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 948, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 952, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 953, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 954, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 957, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 964, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 968, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 969, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 970, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 973, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 980, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 984, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 985, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 986, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 989, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 1000, "col_offset": 35, "nodeName": "Array", "type": "Type[coremltools.models.datatypes.Array]"}, {"lineNumber": 1012, "col_offset": 14, "nodeName": "rand", "type": "Any"}, {"lineNumber": 1016, "col_offset": 21, "nodeName": "coremltools", "type": "module"}, {"lineNumber": 1018, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 1025, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 1028, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 1036, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 1039, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 1042, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 1049, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 1052, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 1055, "col_offset": 16, "nodeName": "weights", "type": "Any"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "full_output", "type": "Any"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "quantized_output", "type": "Any"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "full_output_flatten", "type": "Any"}, {"lineNumber": 57, "col_offset": 56, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 60, "nodeName": "quantized_output_flatten", "type": "Any"}, {"lineNumber": 65, "col_offset": 40, "nodeName": "idx", "type": "int"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 74, "nodeName": "delta", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "coreml_model", "type": "Any"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 457, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 457, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 458, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 468, "col_offset": 29, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 468, "col_offset": 40, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 468, "col_offset": 51, "nodeName": "input_channels", "type": "int"}, {"lineNumber": 470, "col_offset": 29, "nodeName": "kernel_height", "type": "int"}, {"lineNumber": 470, "col_offset": 44, "nodeName": "kernel_width", "type": "int"}, {"lineNumber": 475, "col_offset": 23, "nodeName": "model", "type": "Any"}, {"lineNumber": 480, "col_offset": 62, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 480, "col_offset": 68, "nodeName": "num_filters", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 495, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 495, "col_offset": 40, "nodeName": "input_shape", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 522, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 522, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 522, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 523, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 523, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 525, "col_offset": 35, "nodeName": "datatypes", "type": "module"}, {"lineNumber": 525, "col_offset": 52, "nodeName": "input_shape", "type": "Tuple[int, int]"}, {"lineNumber": 540, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 540, "col_offset": 27, "nodeName": "noise", "type": "Any"}, {"lineNumber": 552, "col_offset": 22, "nodeName": "coremltools", "type": "module"}, {"lineNumber": 553, "col_offset": 19, "nodeName": "mlmodel", "type": "coremltools.models.model.MLModel"}, {"lineNumber": 553, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 556, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 562, "col_offset": 16, "nodeName": "builder", "type": "Any"}, {"lineNumber": 572, "col_offset": 29, "nodeName": "builder", "type": "Any"}, {"lineNumber": 575, "col_offset": 33, "nodeName": "wp", "type": "Any"}, {"lineNumber": 577, "col_offset": 29, "nodeName": "builder", "type": "Any"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 580, "col_offset": 35, "nodeName": "wp", "type": "Any"}, {"lineNumber": 1000, "col_offset": 35, "nodeName": "datatypes", "type": "module"}, {"lineNumber": 1012, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 1018, "col_offset": 16, "nodeName": "embeddingND", "type": "Any"}, {"lineNumber": 1025, "col_offset": 16, "nodeName": "embeddingND", "type": "Any"}, {"lineNumber": 1028, "col_offset": 16, "nodeName": "embeddingND", "type": "Any"}, {"lineNumber": 1036, "col_offset": 16, "nodeName": "embeddingND", "type": "Any"}, {"lineNumber": 1039, "col_offset": 16, "nodeName": "embeddingND", "type": "Any"}, {"lineNumber": 1042, "col_offset": 16, "nodeName": "embeddingND", "type": "Any"}, {"lineNumber": 1049, "col_offset": 16, "nodeName": "embeddingND", "type": "Any"}, {"lineNumber": 1052, "col_offset": 16, "nodeName": "embeddingND", "type": "Any"}, {"lineNumber": 1055, "col_offset": 16, "nodeName": "embeddingND", "type": "Any"}, {"lineNumber": 54, "col_offset": 46, "nodeName": "key", "type": "Any"}, {"lineNumber": 55, "col_offset": 56, "nodeName": "key", "type": "Any"}, {"lineNumber": 480, "col_offset": 19, "nodeName": "rand", "type": "Any"}, {"lineNumber": 495, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 522, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 523, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 525, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 562, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 572, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 577, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 1012, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 480, "col_offset": 19, "nodeName": "random", "type": "Any"}, {"lineNumber": 480, "col_offset": 35, "nodeName": "filter_shape", "type": "Any"}, {"lineNumber": 1018, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1025, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1028, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1036, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1039, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1042, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1049, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1052, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 1055, "col_offset": 16, "nodeName": "layers", "type": "Any"}, {"lineNumber": 480, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 1018, "col_offset": 16, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 1025, "col_offset": 16, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 1028, "col_offset": 16, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 1036, "col_offset": 16, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 1039, "col_offset": 16, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 1042, "col_offset": 16, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 1049, "col_offset": 16, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 1052, "col_offset": 16, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 1055, "col_offset": 16, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 1018, "col_offset": 16, "nodeName": "spec", "type": "Any"}, {"lineNumber": 1025, "col_offset": 16, "nodeName": "spec_fp16", "type": "Any"}, {"lineNumber": 1028, "col_offset": 16, "nodeName": "spec_fp16", "type": "Any"}, {"lineNumber": 1036, "col_offset": 16, "nodeName": "spec_uint8", "type": "Any"}, {"lineNumber": 1039, "col_offset": 16, "nodeName": "spec_uint8", "type": "Any"}, {"lineNumber": 1042, "col_offset": 16, "nodeName": "spec_uint8", "type": "Any"}, {"lineNumber": 1049, "col_offset": 16, "nodeName": "spec_uint5", "type": "Any"}, {"lineNumber": 1052, "col_offset": 16, "nodeName": "spec_uint5", "type": "Any"}, {"lineNumber": 1055, "col_offset": 16, "nodeName": "spec_uint5", "type": "Any"}]