[{"lineNumber": 16, "col_offset": 0, "nodeName": "DEBUG", "type": "bool"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "TFNetworkTest", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "setUpClass", "type": "Callable[[Any], Any]"}, {"lineNumber": 117, "col_offset": 39, "nodeName": "TFKerasNetworkTest", "type": "Type[TFKerasNetworkTest]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "test_dense_softmax", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "graph_def_file", "type": "str"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "checkpoint_file", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "frozen_model_file", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "coreml_model_file", "type": "str"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "input_shapes", "type": "Dict[Any, Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "output_node_names", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "tf_graph", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "graph", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "has_variables", "type": "bool"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "DEBUG", "type": "bool"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "coreml_output", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "set_learning_phase", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 32, "col_offset": 38, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "join", "type": "Callable"}, {"lineNumber": 34, "col_offset": 41, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "join", "type": "Callable"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "shape", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "items", "type": "Callable"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "reset_default_graph", "type": "Any"}, {"lineNumber": 50, "col_offset": 43, "nodeName": "sess", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "clear_session", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "frozen_model_file", "type": "str"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "predict", "type": "Any"}, {"lineNumber": 98, "col_offset": 40, "nodeName": "coreml_inputs", "type": "Dict[Any, Any]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "idx", "type": "int"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "out_name", "type": "Any"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "output_node_names", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "tf_out", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "tp", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "coreml_out", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "cp", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "set_weights", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "_test_keras_model", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "model", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "K", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "path", "type": "module"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "path", "type": "module"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "op", "type": "Any"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "as_list", "type": "Any"}, {"lineNumber": 37, "col_offset": 61, "nodeName": "inp", "type": "Any"}, {"lineNumber": 37, "col_offset": 68, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "input_shapes", "type": "Dict[Any, Any]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "input_shapes", "type": "Dict[Any, Any]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "op", "type": "Any"}, {"lineNumber": 41, "col_offset": 48, "nodeName": "output", "type": "Any"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "get_session", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "tf", "type": "Any"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "g", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "saver", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "Session", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "run", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "items", "type": "Callable"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "tensor_name", "type": "Any"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "run", "type": "Any"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "fetches", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "write_graph", "type": "Any"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "graph", "type": "Any"}, {"lineNumber": 62, "col_offset": 45, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 62, "col_offset": 56, "nodeName": "graph_def_file", "type": "str"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "convert_variables_to_constants", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "sess", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "output_node_names", "type": "List[Any]"}, {"lineNumber": 72, "col_offset": 60, "nodeName": "f", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "K", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "tensorflow", "type": "module"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "input_shapes", "type": "Dict[Any, Any]"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "output_node_names", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "use_cpu_only", "type": "bool"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "print_network_spec", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "save", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "coreml_model_file", "type": "str"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "input_shapes", "type": "Dict[Any, Any]"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "mlmodel", "type": "Any"}, {"lineNumber": 98, "col_offset": 66, "nodeName": "use_cpu_only", "type": "bool"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "result", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "tf_out", "type": "numpy.ndarray"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "coreml_output", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "max_den", "type": "Any"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "model_dir", "type": "str"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "Dense", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "KerasBasicNumericCorrectnessTest"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "os", "type": "module"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "os", "type": "module"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "inp", "type": "Any"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "shape", "type": "Any"}, {"lineNumber": 37, "col_offset": 68, "nodeName": "model", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "dim", "type": "Any"}, {"lineNumber": 39, "col_offset": 68, "nodeName": "dim", "type": "Any"}, {"lineNumber": 39, "col_offset": 75, "nodeName": "shape", "type": "Any"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "model", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "K", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "as_default", "type": "Any"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "Saver", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "tf", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "tf_graph", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "sess", "type": "Any"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "global_variables_initializer", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "input_shapes", "type": "Dict[Any, Any]"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 55, "col_offset": 41, "nodeName": "generate_data", "type": "Any"}, {"lineNumber": 55, "col_offset": 55, "nodeName": "shape", "type": "Any"}, {"lineNumber": 55, "col_offset": 62, "nodeName": "data_mode", "type": "str"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 58, "col_offset": 68, "nodeName": "name", "type": "Any"}, {"lineNumber": 58, "col_offset": 76, "nodeName": "output_node_names", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "sess", "type": "Any"}, {"lineNumber": 60, "col_offset": 49, "nodeName": "feed_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "train", "type": "Any"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "sess", "type": "Any"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "graph_util", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "as_graph_def", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "GFile", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "frozen_model_file", "type": "str"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "write", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "converters", "type": "module"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "mlmodel", "type": "Any"}, {"lineNumber": 89, "col_offset": 46, "nodeName": "coreml_model_file", "type": "str"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "idx", "type": "int"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "tf_out", "type": "Any"}, {"lineNumber": 105, "col_offset": 39, "nodeName": "out_name", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "coreml_out", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "self", "type": "KerasBasicNumericCorrectnessTest"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 107, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "tp", "type": "Any"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "max", "type": "Callable"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Any"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "shutil", "type": "module"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "rand", "type": "Any"}, {"lineNumber": 124, "col_offset": 56, "nodeName": "w", "type": "Any"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "inp", "type": "Any"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "dim", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "tf_graph", "type": "Any"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "train", "type": "Any"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "tf", "type": "Any"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "tensor_name", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "tf", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "tf_graph", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "gfile", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "SerializeToString", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "coremltools", "type": "module"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "mlmodel", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "tf_out", "type": "Any"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "tf_out", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "tf_out", "type": "Any"}, {"lineNumber": 107, "col_offset": 44, "nodeName": "coreml_out", "type": "Any"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "tp", "type": "Any"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "cp", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "self", "type": "KerasBasicNumericCorrectnessTest"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "max_den", "type": "Any"}, {"lineNumber": 110, "col_offset": 64, "nodeName": "max_den", "type": "Any"}, {"lineNumber": 110, "col_offset": 79, "nodeName": "delta", "type": "float"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 124, "col_offset": 43, "nodeName": "shape", "type": "Any"}, {"lineNumber": 124, "col_offset": 61, "nodeName": "get_weights", "type": "Any"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "tf", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "get_operation_by_name", "type": "Any"}, {"lineNumber": 58, "col_offset": 47, "nodeName": "name", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "tf", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "output_graph_def", "type": "Any"}, {"lineNumber": 109, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 109, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 39, "nodeName": "tp", "type": "Any"}, {"lineNumber": 110, "col_offset": 56, "nodeName": "cp", "type": "Any"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 43, "nodeName": "w", "type": "Any"}, {"lineNumber": 124, "col_offset": 61, "nodeName": "model", "type": "Any"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "get_operation_by_name", "type": "Any"}, {"lineNumber": 54, "col_offset": 61, "nodeName": "name", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "tf_graph", "type": "Any"}, {"lineNumber": 110, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "tf_graph", "type": "Any"}]