[{"lineNumber": 11, "col_offset": 0, "nodeName": "backends", "type": "Any"}, {"lineNumber": 11, "col_offset": 11, "nodeName": "backends", "type": "Any"}, {"lineNumber": 11, "col_offset": 11, "nodeName": "testing_reqs", "type": "module"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "expected_output_types", "type": "List[Tuple[int, int, int, int, Any]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "expected_output_types", "type": "List[Tuple[int, int, int, int, Any]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "expected_output_types", "type": "List[Tuple[int, int, int, int, Any]]"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "expected_output_types", "type": "List[Tuple[int, int, int, int, Any]]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "expected_output_types", "type": "List[Tuple[int, int, int, int, Any]]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "array", "type": "Any"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "input_placeholders", "type": "Dict[str, Any]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "input_values", "type": "Dict[str, Any]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "expected_output_types", "type": "List[Tuple[int, int, int, int, Any]]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "expected_outputs", "type": "List[Any]"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "float32", "type": "Any"}, {"lineNumber": 28, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 46, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 43, "col_offset": 72, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "float32", "type": "Any"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "float32", "type": "Any"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 46, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 28, "col_offset": 56, "nodeName": "shape", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "avg_pool", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "avg_pool", "type": "Any"}, {"lineNumber": 43, "col_offset": 46, "nodeName": "types", "type": "module"}, {"lineNumber": 43, "col_offset": 72, "nodeName": "types", "type": "module"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 45, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "float32", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 73, "col_offset": 56, "nodeName": "shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "l2_pool", "type": "Any"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "types", "type": "module"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 73, "nodeName": "float32", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 110, "col_offset": 56, "nodeName": "shape", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "max_pool", "type": "Any"}, {"lineNumber": 118, "col_offset": 46, "nodeName": "types", "type": "module"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 63, "nodeName": "float32", "type": "Any"}, {"lineNumber": 28, "col_offset": 56, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 45, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 56, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 82, "col_offset": 73, "nodeName": "np", "type": "module"}, {"lineNumber": 110, "col_offset": 56, "nodeName": "x_val", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 120, "col_offset": 63, "nodeName": "np", "type": "module"}]