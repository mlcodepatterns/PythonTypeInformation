[{"lineNumber": 18, "col_offset": 0, "nodeName": "_all_assert_leaves", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "delete_asserts", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "setrecursionlimit", "type": "Callable[[int], None]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "work", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "delete_count", "type": "int"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "delete_count", "type": "int"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "sys", "type": "module"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "nodename", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "values", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "memo", "type": "Dict[Any, Optional[bool]]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "n", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "graph", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "m", "type": "Any"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "memo", "type": "Dict[Any, Optional[bool]]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "delete_count", "type": "int"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "gdict", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "functions", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "f", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "work", "type": "List[Any]"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "gdict", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 36, "col_offset": 47, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "memo", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "node", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "outputs_to_process", "type": "List[Any]"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "work", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "memo", "type": "Any"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "tfssa", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "_all_assert_leaves", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "graph", "type": "Any"}, {"lineNumber": 63, "col_offset": 40, "nodeName": "n", "type": "Any"}, {"lineNumber": 63, "col_offset": 43, "nodeName": "memo", "type": "Dict[Any, Optional[bool]]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "memo", "type": "Dict[Any, Optional[bool]]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "delete_count", "type": "int"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "get", "type": "Any"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "name", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "memo", "type": "Any"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "op", "type": "Any"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "n", "type": "Any"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "name", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "f", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "m", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "delete_node", "type": "Any"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "graph", "type": "Any"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "m", "type": "Any"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "work", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "memo", "type": "Any"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "node", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "node", "type": "Any"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "node", "type": "Any"}, {"lineNumber": 43, "col_offset": 44, "nodeName": "n", "type": "Any"}, {"lineNumber": 43, "col_offset": 49, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "outputs_to_process", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "memo", "type": "Any"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 50, "col_offset": 32, "nodeName": "outputs_to_process", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "node", "type": "Any"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "f", "type": "Any"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "node", "type": "Any"}, {"lineNumber": 43, "col_offset": 60, "nodeName": "n", "type": "Any"}, {"lineNumber": 43, "col_offset": 69, "nodeName": "memo", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "work", "type": "List[Any]"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "node", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "work", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "node", "type": "Any"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "memo", "type": "Any"}, {"lineNumber": 46, "col_offset": 54, "nodeName": "n", "type": "Any"}, {"lineNumber": 46, "col_offset": 59, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 46, "col_offset": 47, "nodeName": "n", "type": "Any"}]