[{"lineNumber": 19, "col_offset": 0, "nodeName": "match_pattern", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "try_to_transform", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 0, "nodeName": "fuse_bias_conv_block", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 0, "nodeName": "fuse_bias_conv", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "child_op_types", "type": "List[str]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "bias_value", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "is_bias_scalar", "type": "bool"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "rank", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "rank", "type": "Any"}, {"lineNumber": 61, "col_offset": 7, "nodeName": "is_bias_scalar", "type": "bool"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "old_bias", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "old_bias_value", "type": "None"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "out_name", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "new_bias_var", "type": "Any"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "conv_kargs", "type": "Dict[Any, Any]"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "fusion_status", "type": "bool"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "op", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "fusion_status", "type": "bool"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "child_ops", "type": "Any"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "child_ops", "type": "Any"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "bias_var", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "bias_var", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "bias_var", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "is_bias_scalar", "type": "bool"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 50, "col_offset": 7, "nodeName": "rank", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "bias_value", "type": "numpy.ndarray"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "bias_value", "type": "Any"}, {"lineNumber": 76, "col_offset": 7, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "bias_value", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "old_bias_value", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "val", "type": "Any"}, {"lineNumber": 84, "col_offset": 7, "nodeName": "old_bias", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "const", "type": "Any"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "new_bias_var", "type": "Any"}, {"lineNumber": 106, "col_offset": 48, "nodeName": "out_name", "type": "Any"}, {"lineNumber": 106, "col_offset": 71, "nodeName": "conv_op", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "items", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 113, "col_offset": 7, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "replace_uses_of_var_after_op", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "remove_ops", "type": "Any"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "operations", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "blocks", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "add_op", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "f_name", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "f", "type": "Any"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "items", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "block_changed", "type": "bool"}, {"lineNumber": 166, "col_offset": 14, "nodeName": "block_changed", "type": "bool"}, {"lineNumber": 20, "col_offset": 7, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 20, "col_offset": 31, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "add_op_candidate", "type": "Any"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "add_op", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "add_op", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 37, "col_offset": 61, "nodeName": "y", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "bias_value", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "bias_value", "type": "Any"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "conv_op", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "rank", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "bias_value", "type": "Any"}, {"lineNumber": 76, "col_offset": 7, "nodeName": "add_op", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 82, "col_offset": 7, "nodeName": "old_bias", "type": "Any"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "val", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "old_bias", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "Cout", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "new_bias_value", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "new_bias_value", "type": "Any"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "bias_value", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "new_bias_value", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "new_bias_value", "type": "Any"}, {"lineNumber": 104, "col_offset": 77, "nodeName": "conv_op", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "k", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "conv_kargs", "type": "Dict[Any, Any]"}, {"lineNumber": 113, "col_offset": 7, "nodeName": "conv_op", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "conv", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "conv_transpose", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "enclosing_block", "type": "Any"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "add_op", "type": "Any"}, {"lineNumber": 119, "col_offset": 61, "nodeName": "x", "type": "Any"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "conv_op", "type": "Any"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "add_op", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "block", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "op", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "block_changed", "type": "bool"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "block_changed", "type": "bool"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "match_pattern", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "op", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "add_op", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "fusion_status", "type": "bool"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "functions", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "block_changed", "type": "bool"}, {"lineNumber": 20, "col_offset": 7, "nodeName": "op", "type": "Any"}, {"lineNumber": 20, "col_offset": 31, "nodeName": "op", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "enclosing_block", "type": "Any"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "child_ops", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 28, "col_offset": 43, "nodeName": "child_op_types", "type": "List[str]"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "add_op_candidate", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "val", "type": "Any"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "add_op", "type": "Any"}, {"lineNumber": 37, "col_offset": 61, "nodeName": "add_op", "type": "Any"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 41, "col_offset": 47, "nodeName": "generic", "type": "Any"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "rank", "type": "Any"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "rank", "type": "Any"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "rank", "type": "Any"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "bias_value", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "bias_value", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "prod", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "conv_op", "type": "Any"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "old_bias", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "prod", "type": "Any"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "val", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "broadcast_to", "type": "Any"}, {"lineNumber": 92, "col_offset": 45, "nodeName": "bias_value", "type": "Any"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "old_bias_value", "type": "Any"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "bias_value", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "add_op", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "conv_op", "type": "Any"}, {"lineNumber": 111, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "conv_kargs", "type": "Dict[Any, Any]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "conv_kargs", "type": "Dict[Any, Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "add_op", "type": "Any"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "block_changed", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "blocks", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "block", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "fusion_status", "type": "bool"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "fusion_status", "type": "bool"}, {"lineNumber": 164, "col_offset": 21, "nodeName": "prog", "type": "Any"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "fuse_bias_conv_block", "type": "Callable[[Any], Any]"}, {"lineNumber": 167, "col_offset": 49, "nodeName": "f", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "op", "type": "Any"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "op", "type": "Any"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "op", "type": "Any"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 27, "col_offset": 36, "nodeName": "child_ops", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "add_op_candidate", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "x", "type": "Any"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "bias_value", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "weight", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "val", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 58, "nodeName": "Cout", "type": "Any"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "add_op", "type": "Any"}, {"lineNumber": 132, "col_offset": 32, "nodeName": "fuse_bias_conv_block", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 53, "nodeName": "b", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "try_to_transform", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 49, "nodeName": "op", "type": "Any"}, {"lineNumber": 140, "col_offset": 53, "nodeName": "add_op", "type": "Any"}, {"lineNumber": 140, "col_offset": 61, "nodeName": "block", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "add_op", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "bias_value", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "bias_value", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "bias_value", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "conv_op", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "weight", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "conv_op", "type": "Any"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "rank", "type": "Any"}]