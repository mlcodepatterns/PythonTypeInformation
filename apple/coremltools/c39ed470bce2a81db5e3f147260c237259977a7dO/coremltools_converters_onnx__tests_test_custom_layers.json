[{"lineNumber": 17, "col_offset": 0, "nodeName": "_make_model_acos_exp_topk", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "_make_model_flatten_axis3", "type": "Callable[[], Any]"}, {"lineNumber": 9, "col_offset": 3, "nodeName": "_HAS_ONNX", "type": "bool"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "test_unsupported_ops", "type": "Callable[[Any], None]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "test_unsupported_ops_provide_functions", "type": "Callable[[Any], None]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "test_node_name_type_custom_functions", "type": "Callable[[Any], None]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "test_unsupported_op_attribute", "type": "Callable[[Any], None]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "test_unsupported_op_attribute_provide_functions", "type": "Callable[[Any], None]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int], Any]]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "acos", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "exp", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int, int, int, int], Any]]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int], Any]]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "convert_acos", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "convert_topk", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "convert_acos", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "convert_topk_generic", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "convert_topk_node_specific", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "convert_flatten", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 27, "col_offset": 10, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "_onnx_create_model", "type": "Any"}, {"lineNumber": 34, "col_offset": 49, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int], Any]]"}, {"lineNumber": 34, "col_offset": 57, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int], Any]]"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "_onnx_create_model", "type": "Any"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int, int, int, int], Any]]"}, {"lineNumber": 46, "col_offset": 49, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int], Any]]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "coreml_model", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "layers", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "layers", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "layers", "type": "Any"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "coreml_model", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "layers", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "layers", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "FLOAT", "type": "Any"}, {"lineNumber": 21, "col_offset": 64, "nodeName": "INT64", "type": "Any"}, {"lineNumber": 23, "col_offset": 32, "nodeName": "FLOAT", "type": "Any"}, {"lineNumber": 24, "col_offset": 33, "nodeName": "INT64", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "helper", "type": "Any"}, {"lineNumber": 27, "col_offset": 10, "nodeName": "helper", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "helper", "type": "Any"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "acos", "type": "Any"}, {"lineNumber": 34, "col_offset": 37, "nodeName": "exp", "type": "Any"}, {"lineNumber": 34, "col_offset": 42, "nodeName": "topk", "type": "Any"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "FLOAT", "type": "Any"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "FLOAT", "type": "Any"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "helper", "type": "Any"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "_make_model_acos_exp_topk", "type": "Callable[[], Any]"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "custom", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "custom", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "className", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "className", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "className", "type": "Any"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "className", "type": "Any"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "intValue", "type": "Any"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "_make_model_acos_exp_topk", "type": "Callable[[], Any]"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "custom", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "custom", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "className", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "className", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "intValue", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "className", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "className", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "intValue", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "intValue", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "className", "type": "Any"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "intValue", "type": "Any"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "_make_model_acos_exp_topk", "type": "Callable[[], Any]"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "custom", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 29, "nodeName": "custom", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 33, "nodeName": "className", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 33, "nodeName": "className", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "intValue", "type": "Any"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "_make_model_flatten_axis3", "type": "Callable[[], Any]"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "custom", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 36, "nodeName": "className", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "className", "type": "Any"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "intValue", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "spec", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "layers", "type": "Any"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "layers", "type": "Any"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "_make_model_flatten_axis3", "type": "Callable[[], Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "TensorProto", "type": "Any"}, {"lineNumber": 21, "col_offset": 64, "nodeName": "TensorProto", "type": "Any"}, {"lineNumber": 23, "col_offset": 32, "nodeName": "TensorProto", "type": "Any"}, {"lineNumber": 24, "col_offset": 33, "nodeName": "TensorProto", "type": "Any"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "TensorProto", "type": "Any"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "TensorProto", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "coreml_model", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "spec", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "custom", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "custom", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "CustomLayerParams", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "node", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "add_custom", "type": "Any"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "CustomLayerParams", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "node", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 84, "col_offset": 49, "nodeName": "get", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "add_custom", "type": "Any"}, {"lineNumber": 95, "col_offset": 18, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "coreml_model", "type": "Any"}, {"lineNumber": 101, "col_offset": 17, "nodeName": "spec", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "custom", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "custom", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "CustomLayerParams", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "node", "type": "Any"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "add_custom", "type": "Any"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "CustomLayerParams", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "node", "type": "Any"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 129, "col_offset": 49, "nodeName": "get", "type": "Any"}, {"lineNumber": 130, "col_offset": 46, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "add_custom", "type": "Any"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "CustomLayerParams", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "node", "type": "Any"}, {"lineNumber": 142, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 145, "col_offset": 49, "nodeName": "get", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "add_custom", "type": "Any"}, {"lineNumber": 156, "col_offset": 18, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "coreml_model", "type": "Any"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "spec", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 33, "nodeName": "custom", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 33, "nodeName": "custom", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "coreml_model", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "spec", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 180, "col_offset": 36, "nodeName": "custom", "type": "Any"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "CustomLayerParams", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "node", "type": "Any"}, {"lineNumber": 186, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 189, "col_offset": 49, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "add_custom", "type": "Any"}, {"lineNumber": 199, "col_offset": 27, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 205, "col_offset": 19, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "custom", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 208, "col_offset": 40, "nodeName": "className", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 32, "nodeName": "intValue", "type": "Any"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "output", "type": "Any"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "layers", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "layers", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "NeuralNetwork_pb2", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "builder", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "params", "type": "Any"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "NeuralNetwork_pb2", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 84, "col_offset": 49, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "builder", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "params", "type": "Any"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "convert_acos", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 71, "nodeName": "convert_topk", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "layers", "type": "Any"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "layers", "type": "Any"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "NeuralNetwork_pb2", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "builder", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 120, "col_offset": 34, "nodeName": "params", "type": "Any"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "NeuralNetwork_pb2", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 129, "col_offset": 49, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 130, "col_offset": 46, "nodeName": "node", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "builder", "type": "Any"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 136, "col_offset": 34, "nodeName": "params", "type": "Any"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "NeuralNetwork_pb2", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 145, "col_offset": 49, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "builder", "type": "Any"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 149, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 151, "col_offset": 34, "nodeName": "params", "type": "Any"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "convert_acos", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "convert_topk_generic", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "convert_topk_node_specific", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "layers", "type": "Any"}, {"lineNumber": 168, "col_offset": 29, "nodeName": "layers", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "layers", "type": "Any"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "NeuralNetwork_pb2", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 189, "col_offset": 49, "nodeName": "node", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "builder", "type": "Any"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 195, "col_offset": 34, "nodeName": "params", "type": "Any"}, {"lineNumber": 201, "col_offset": 34, "nodeName": "add_custom_layers", "type": "Any"}, {"lineNumber": 205, "col_offset": 19, "nodeName": "coreml_model", "type": "Any"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "spec", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 40, "nodeName": "custom", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 216, "col_offset": 52, "nodeName": "convert_flatten", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 223, "col_offset": 52, "nodeName": "convert_flatten", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 26, "col_offset": 44, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int], Any]]"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "acos", "type": "Any"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int], Any]]"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int], Any]]"}, {"lineNumber": 31, "col_offset": 32, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int], Any]]"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int, int, int, int], Any]]"}, {"lineNumber": 44, "col_offset": 51, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int], Any]]"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "layers", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "layers", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "node", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 84, "col_offset": 49, "nodeName": "node", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "node", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "layers", "type": "Any"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "layers", "type": "Any"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "custom", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "node", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 129, "col_offset": 49, "nodeName": "node", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "node", "type": "Any"}, {"lineNumber": 134, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 145, "col_offset": 49, "nodeName": "node", "type": "Any"}, {"lineNumber": 148, "col_offset": 21, "nodeName": "node", "type": "Any"}, {"lineNumber": 149, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 169, "col_offset": 33, "nodeName": "layers", "type": "Any"}, {"lineNumber": 170, "col_offset": 33, "nodeName": "layers", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "custom", "type": "Any"}, {"lineNumber": 180, "col_offset": 36, "nodeName": "layers", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "node", "type": "Any"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 194, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 202, "col_offset": 56, "nodeName": "convert_flatten", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 207, "col_offset": 33, "nodeName": "layers", "type": "Any"}, {"lineNumber": 209, "col_offset": 32, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 208, "col_offset": 40, "nodeName": "layers", "type": "Any"}, {"lineNumber": 209, "col_offset": 32, "nodeName": "custom", "type": "Any"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "layers", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "layers", "type": "Any"}, {"lineNumber": 209, "col_offset": 32, "nodeName": "layers", "type": "Any"}]