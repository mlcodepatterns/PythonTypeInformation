[{"lineNumber": 12, "col_offset": 0, "nodeName": "backends", "type": "List[str]"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "backends", "type": "List[str]"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "testing_reqs", "type": "module"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "input_placeholder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "input_value_dict", "type": "Dict[str, Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "expected_output_type", "type": "Tuple[int, int, int, Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "input_placeholder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "input_value_dict", "type": "Dict[str, Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "expected_output_type", "type": "Tuple[int, int, int, Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "expected_output_type", "type": "Tuple[int, int, int, Any]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "torch_pred", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "input_placeholder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "input_value_dict", "type": "Dict[str, Any]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "expected_output_type", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "input_placeholder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "input_value_dict", "type": "Dict[str, Any]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "expected_output_type", "type": "Tuple[int, int, int, int, Any]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "input_shape", "type": "List[Any]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 264, "col_offset": 34, "nodeName": "input_shape", "type": "List[Any]"}, {"lineNumber": 265, "col_offset": 11, "nodeName": "is_symbolic", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "input_placeholder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "input_value_dict", "type": "Dict[str, Any]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "expected_output_type", "type": "Tuple[Any, Any, int, int, Any]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "expected_output", "type": "Tuple[Any]"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "input_shape", "type": "Tuple[int, Any, Any, Any]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "crop_h", "type": "List[Any]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "crop_w", "type": "List[Any]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "input_placeholder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "input_value_dict", "type": "Dict[str, Any]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "expected_output_type", "type": "Tuple[int, Any, Any, Any, Any]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "input_shape", "type": "List[Any]"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 356, "col_offset": 34, "nodeName": "input_shape", "type": "List[Any]"}, {"lineNumber": 357, "col_offset": 11, "nodeName": "is_symbolic", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "input_placeholder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "input_value_dict", "type": "Dict[str, Any]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "N", "type": "int"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "roi", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "roi_normalized", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "roi_invert", "type": "Any"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "expected_output_type", "type": "List[Tuple[int, Any, Any, int, int, Any]]"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "expected_output", "type": "List[Any]"}, {"lineNumber": 506, "col_offset": 12, "nodeName": "mode", "type": "int"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 22, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 32, "col_offset": 41, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "build_mode_0", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "input_placeholder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "input_value_dict", "type": "Dict[str, Any]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "expected_output_type", "type": "Tuple[int, int, int, Any]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "build_mode_2", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "input_placeholder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "input_value_dict", "type": "Dict[str, Any]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "expected_output_type", "type": "Tuple[int, int, int, Any]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "build_mode_3", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "input_placeholder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "input_value_dict", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "expected_output_type", "type": "Tuple[int, int, int, Any]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "backend", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 130, "col_offset": 41, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "build_upsample_integer", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "input_placeholder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "input_value_dict", "type": "Dict[str, Any]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "expected_output_type", "type": "Tuple[int, int, int, Any]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 151, "col_offset": 41, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "build_upsample_fractional", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "input_placeholder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "input_value_dict", "type": "Dict[str, Any]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "expected_output_type", "type": "Tuple[int, int, int, Any]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "m", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "out", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "random_gen", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "_get_torch_upsample_prediction", "type": "Callable[..., Any]"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 198, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 208, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "build_upsample", "type": "Callable[[Any], Any]"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "input_placeholder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "input_value_dict", "type": "Dict[str, Any]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "expected_output_type", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "torch_pred", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 228, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 235, "col_offset": 44, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "input_placeholder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "input_value_dict", "type": "Dict[str, Any]"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "expected_output_type", "type": "Tuple[int, int, int, int, Any]"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 263, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 263, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 271, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "input_placeholder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "input_value_dict", "type": "Dict[str, Any]"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "expected_output_type", "type": "Tuple[Any, Any, int, int, Any]"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "expected_output", "type": "Tuple[Any]"}, {"lineNumber": 309, "col_offset": 26, "nodeName": "C", "type": "Any"}, {"lineNumber": 309, "col_offset": 29, "nodeName": "H", "type": "Any"}, {"lineNumber": 309, "col_offset": 32, "nodeName": "W", "type": "Any"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 310, "col_offset": 29, "nodeName": "input_shape", "type": "Tuple[int, Any, Any, Any]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 318, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "C", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 330, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "build", "type": "Callable[[Any], Any]"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "input_placeholder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "input_value_dict", "type": "Dict[str, Any]"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "expected_output_type", "type": "Tuple[int, Any, Any, Any, Any]"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 355, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 355, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 363, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 365, "col_offset": 14, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 506, "col_offset": 20, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 21, "col_offset": 39, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "resize_bilinear", "type": "Any"}, {"lineNumber": 32, "col_offset": 41, "nodeName": "types", "type": "module"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "resize_bilinear", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "resize_bilinear", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "build_mode_4", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "input_placeholder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "input_value_dict", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "expected_output_type", "type": "Tuple[int, int, int, Any]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "expected_output", "type": "Any"}, {"lineNumber": 122, "col_offset": 39, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "upsample_bilinear", "type": "Any"}, {"lineNumber": 130, "col_offset": 41, "nodeName": "types", "type": "module"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "upsample_bilinear", "type": "Any"}, {"lineNumber": 151, "col_offset": 41, "nodeName": "types", "type": "module"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 185, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "Upsample", "type": "Any"}, {"lineNumber": 189, "col_offset": 18, "nodeName": "m", "type": "Any"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 194, "col_offset": 56, "nodeName": "align_corners", "type": "Any"}, {"lineNumber": 197, "col_offset": 39, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "upsample_bilinear", "type": "Any"}, {"lineNumber": 208, "col_offset": 31, "nodeName": "torch_pred", "type": "Any"}, {"lineNumber": 208, "col_offset": 51, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 227, "col_offset": 39, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "upsample_nearest_neighbor", "type": "Any"}, {"lineNumber": 235, "col_offset": 44, "nodeName": "types", "type": "module"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 248, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 263, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 267, "col_offset": 41, "nodeName": "get_new_symbol", "type": "Callable[..., coremltools.converters.mil.mil.program.Symbol]"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 268, "col_offset": 41, "nodeName": "get_new_symbol", "type": "Callable[..., coremltools.converters.mil.mil.program.Symbol]"}, {"lineNumber": 270, "col_offset": 39, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 274, "col_offset": 19, "nodeName": "crop", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "types", "type": "module"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 293, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 295, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 312, "col_offset": 18, "nodeName": "randint", "type": "Any"}, {"lineNumber": 312, "col_offset": 36, "nodeName": "H", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "crop_h", "type": "List[Any]"}, {"lineNumber": 313, "col_offset": 22, "nodeName": "randint", "type": "Any"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "randint", "type": "Any"}, {"lineNumber": 314, "col_offset": 36, "nodeName": "W", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "crop_w", "type": "List[Any]"}, {"lineNumber": 315, "col_offset": 22, "nodeName": "randint", "type": "Any"}, {"lineNumber": 317, "col_offset": 39, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 321, "col_offset": 19, "nodeName": "crop", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "types", "type": "module"}, {"lineNumber": 338, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 355, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 359, "col_offset": 41, "nodeName": "get_new_symbol", "type": "Callable[..., coremltools.converters.mil.mil.program.Symbol]"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 360, "col_offset": 41, "nodeName": "get_new_symbol", "type": "Callable[..., coremltools.converters.mil.mil.program.Symbol]"}, {"lineNumber": 362, "col_offset": 39, "nodeName": "placeholder", "type": "Callable[..., Any]"}, {"lineNumber": 372, "col_offset": 15, "nodeName": "mode", "type": "Any"}, {"lineNumber": 440, "col_offset": 16, "nodeName": "N", "type": "int"}, {"lineNumber": 445, "col_offset": 16, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 448, "col_offset": 16, "nodeName": "N", "type": "int"}, {"lineNumber": 453, "col_offset": 16, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 456, "col_offset": 16, "nodeName": "N", "type": "int"}, {"lineNumber": 461, "col_offset": 16, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 464, "col_offset": 16, "nodeName": "N", "type": "int"}, {"lineNumber": 469, "col_offset": 16, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 472, "col_offset": 16, "nodeName": "N", "type": "int"}, {"lineNumber": 477, "col_offset": 16, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 480, "col_offset": 16, "nodeName": "N", "type": "int"}, {"lineNumber": 485, "col_offset": 16, "nodeName": "fp32", "type": "Any"}, {"lineNumber": 489, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 21, "col_offset": 39, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 21, "col_offset": 60, "nodeName": "shape", "type": "Any"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "array", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "array", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "array", "type": "Any"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "resize_bilinear", "type": "Any"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "backend", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 122, "col_offset": 39, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 122, "col_offset": 60, "nodeName": "shape", "type": "Any"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "array", "type": "Any"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "array", "type": "Any"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 187, "col_offset": 74, "nodeName": "align_corners", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "out", "type": "Any"}, {"lineNumber": 197, "col_offset": 39, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 197, "col_offset": 60, "nodeName": "shape", "type": "Any"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "align_corners", "type": "Any"}, {"lineNumber": 208, "col_offset": 51, "nodeName": "types", "type": "module"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 227, "col_offset": 39, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 227, "col_offset": 60, "nodeName": "shape", "type": "Any"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 232, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "array", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 270, "col_offset": 39, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 270, "col_offset": 60, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 274, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 312, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 313, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 313, "col_offset": 40, "nodeName": "H", "type": "Any"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "random", "type": "Any"}, {"lineNumber": 315, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 315, "col_offset": 40, "nodeName": "W", "type": "Any"}, {"lineNumber": 317, "col_offset": 39, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 317, "col_offset": 60, "nodeName": "input_shape", "type": "Tuple[int, Any, Any, Any]"}, {"lineNumber": 321, "col_offset": 19, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 321, "col_offset": 44, "nodeName": "crop_h", "type": "List[Any]"}, {"lineNumber": 321, "col_offset": 63, "nodeName": "crop_w", "type": "List[Any]"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "H", "type": "Any"}, {"lineNumber": 326, "col_offset": 28, "nodeName": "crop_h", "type": "List[Any]"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "W", "type": "Any"}, {"lineNumber": 327, "col_offset": 28, "nodeName": "crop_w", "type": "List[Any]"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 362, "col_offset": 39, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 362, "col_offset": 60, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 365, "col_offset": 14, "nodeName": "array", "type": "Any"}, {"lineNumber": 366, "col_offset": 25, "nodeName": "array", "type": "Any"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "array", "type": "Any"}, {"lineNumber": 373, "col_offset": 23, "nodeName": "crop_resize", "type": "Any"}, {"lineNumber": 383, "col_offset": 17, "nodeName": "mode", "type": "Any"}, {"lineNumber": 441, "col_offset": 16, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 442, "col_offset": 16, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 445, "col_offset": 16, "nodeName": "types", "type": "module"}, {"lineNumber": 449, "col_offset": 16, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 450, "col_offset": 16, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 453, "col_offset": 16, "nodeName": "types", "type": "module"}, {"lineNumber": 457, "col_offset": 16, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 458, "col_offset": 16, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 461, "col_offset": 16, "nodeName": "types", "type": "module"}, {"lineNumber": 465, "col_offset": 16, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 466, "col_offset": 16, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 469, "col_offset": 16, "nodeName": "types", "type": "module"}, {"lineNumber": 473, "col_offset": 16, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 474, "col_offset": 16, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 477, "col_offset": 16, "nodeName": "types", "type": "module"}, {"lineNumber": 481, "col_offset": 16, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 482, "col_offset": 16, "nodeName": "placeholder_input_shape", "type": "List[Any]"}, {"lineNumber": 485, "col_offset": 16, "nodeName": "types", "type": "module"}, {"lineNumber": 509, "col_offset": 16, "nodeName": "run_compare_builder", "type": "Any"}, {"lineNumber": 511, "col_offset": 20, "nodeName": "input_placeholder_dict", "type": "Dict[str, Any]"}, {"lineNumber": 512, "col_offset": 20, "nodeName": "input_value_dict", "type": "Dict[str, Any]"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 35, "nodeName": "float32", "type": "Any"}, {"lineNumber": 21, "col_offset": 60, "nodeName": "x", "type": "Any"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 66, "nodeName": "float32", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 62, "nodeName": "float32", "type": "Any"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 68, "nodeName": "float32", "type": "Any"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "array", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "float32", "type": "Any"}, {"lineNumber": 122, "col_offset": 60, "nodeName": "x", "type": "Any"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 46, "nodeName": "float32", "type": "Any"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 64, "nodeName": "float32", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 197, "col_offset": 60, "nodeName": "x", "type": "Any"}, {"lineNumber": 203, "col_offset": 36, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 204, "col_offset": 35, "nodeName": "scale_factor", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 44, "nodeName": "float32", "type": "Any"}, {"lineNumber": 227, "col_offset": 60, "nodeName": "x", "type": "Any"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 237, "col_offset": 50, "nodeName": "float32", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 18, "nodeName": "float32", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 312, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 313, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 313, "col_offset": 44, "nodeName": "crop_h", "type": "List[Any]"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 315, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 315, "col_offset": 44, "nodeName": "crop_w", "type": "List[Any]"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "crop_h", "type": "List[Any]"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "crop_w", "type": "List[Any]"}, {"lineNumber": 330, "col_offset": 34, "nodeName": "crop_h", "type": "List[Any]"}, {"lineNumber": 330, "col_offset": 46, "nodeName": "H", "type": "Any"}, {"lineNumber": 330, "col_offset": 61, "nodeName": "crop_w", "type": "List[Any]"}, {"lineNumber": 330, "col_offset": 73, "nodeName": "W", "type": "Any"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 352, "col_offset": 18, "nodeName": "float32", "type": "Any"}, {"lineNumber": 365, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 365, "col_offset": 45, "nodeName": "float32", "type": "Any"}, {"lineNumber": 366, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 367, "col_offset": 53, "nodeName": "float32", "type": "Any"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 369, "col_offset": 52, "nodeName": "float32", "type": "Any"}, {"lineNumber": 373, "col_offset": 23, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 374, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 375, "col_offset": 28, "nodeName": "roi", "type": "Any"}, {"lineNumber": 384, "col_offset": 23, "nodeName": "crop_resize", "type": "Any"}, {"lineNumber": 394, "col_offset": 17, "nodeName": "mode", "type": "Any"}, {"lineNumber": 489, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "array", "type": "Any"}, {"lineNumber": 508, "col_offset": 20, "nodeName": "backend", "type": "Any"}, {"lineNumber": 508, "col_offset": 46, "nodeName": "mode", "type": "int"}, {"lineNumber": 510, "col_offset": 20, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 510, "col_offset": 38, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 513, "col_offset": 20, "nodeName": "expected_output_type", "type": "List[Tuple[int, Any, Any, int, int, Any]]"}, {"lineNumber": 514, "col_offset": 20, "nodeName": "expected_output", "type": "List[Any]"}, {"lineNumber": 515, "col_offset": 33, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 517, "col_offset": 28, "nodeName": "backend", "type": "Any"}, {"lineNumber": 20, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 33, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 72, "nodeName": "float32", "type": "Any"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 132, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 237, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 284, "col_offset": 49, "nodeName": "float32", "type": "Any"}, {"lineNumber": 330, "col_offset": 50, "nodeName": "crop_h", "type": "List[Any]"}, {"lineNumber": 330, "col_offset": 77, "nodeName": "crop_w", "type": "List[Any]"}, {"lineNumber": 352, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 365, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 367, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 369, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 384, "col_offset": 23, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 385, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 386, "col_offset": 28, "nodeName": "roi", "type": "Any"}, {"lineNumber": 395, "col_offset": 23, "nodeName": "crop_resize", "type": "Any"}, {"lineNumber": 405, "col_offset": 17, "nodeName": "mode", "type": "Any"}, {"lineNumber": 489, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 489, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 497, "col_offset": 22, "nodeName": "float32", "type": "Any"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 499, "col_offset": 34, "nodeName": "float32", "type": "Any"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 500, "col_offset": 41, "nodeName": "float32", "type": "Any"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 501, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 502, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 502, "col_offset": 51, "nodeName": "float32", "type": "Any"}, {"lineNumber": 510, "col_offset": 20, "nodeName": "functools", "type": "module"}, {"lineNumber": 510, "col_offset": 50, "nodeName": "mode", "type": "int"}, {"lineNumber": 513, "col_offset": 41, "nodeName": "mode", "type": "int"}, {"lineNumber": 514, "col_offset": 36, "nodeName": "mode", "type": "int"}, {"lineNumber": 100, "col_offset": 72, "nodeName": "np", "type": "module"}, {"lineNumber": 284, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 395, "col_offset": 23, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 396, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 397, "col_offset": 28, "nodeName": "roi", "type": "Any"}, {"lineNumber": 406, "col_offset": 23, "nodeName": "crop_resize", "type": "Any"}, {"lineNumber": 416, "col_offset": 17, "nodeName": "mode", "type": "Any"}, {"lineNumber": 489, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 497, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 499, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 500, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 501, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 502, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 406, "col_offset": 23, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 407, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 408, "col_offset": 28, "nodeName": "roi_normalized", "type": "Any"}, {"lineNumber": 417, "col_offset": 23, "nodeName": "crop_resize", "type": "Any"}, {"lineNumber": 427, "col_offset": 17, "nodeName": "mode", "type": "Any"}, {"lineNumber": 417, "col_offset": 23, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 418, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 419, "col_offset": 28, "nodeName": "roi_invert", "type": "Any"}, {"lineNumber": 428, "col_offset": 23, "nodeName": "crop_resize", "type": "Any"}, {"lineNumber": 428, "col_offset": 23, "nodeName": "mb", "type": "Type[coremltools.converters.mil.mil.builder.Builder]"}, {"lineNumber": 429, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 430, "col_offset": 28, "nodeName": "roi_invert", "type": "Any"}]