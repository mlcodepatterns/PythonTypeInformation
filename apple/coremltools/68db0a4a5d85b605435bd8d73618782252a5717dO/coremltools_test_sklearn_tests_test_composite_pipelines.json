[{"lineNumber": 19, "col_offset": 3, "nodeName": "_HAS_SKLEARN", "type": "bool"}, {"lineNumber": 28, "col_offset": 62, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "test_boston_OHE_plus_normalizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "test_boston_OHE_plus_trees", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 62, "nodeName": "unittest", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "load_boston", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "target", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "pl", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "input_data", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "output_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "result", "type": "Dict[str, int]"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "load_boston", "type": "Any"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "target", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "pl", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "result", "type": "Dict[str, Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "pl", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "_is_macos", "type": "Callable[[], bool]"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "evaluate_transformer", "type": "Callable[..., Dict[str, int]]"}, {"lineNumber": 49, "col_offset": 42, "nodeName": "spec", "type": "Any"}, {"lineNumber": 49, "col_offset": 48, "nodeName": "input_data", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 49, "col_offset": 60, "nodeName": "output_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "pl", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "_is_macos", "type": "Callable[[], bool]"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "predict", "type": "Any"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "evaluate_regressor", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "spec", "type": "Any"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "df", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "_macos_version", "type": "Callable[[], Tuple[int, ...]]"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 46, "col_offset": 65, "nodeName": "row", "type": "Any"}, {"lineNumber": 46, "col_offset": 72, "nodeName": "data", "type": "Any"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "row", "type": "Any"}, {"lineNumber": 47, "col_offset": 44, "nodeName": "row", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "result", "type": "Dict[str, int]"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "_macos_version", "type": "Callable[[], Tuple[int, ...]]"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "pd", "type": "Any"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 70, "col_offset": 49, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "pl", "type": "Any"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "result", "type": "Dict[str, Any]"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "StandardScaler", "type": "Any"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 46, "col_offset": 55, "nodeName": "row", "type": "Any"}, {"lineNumber": 46, "col_offset": 72, "nodeName": "data", "type": "Any"}, {"lineNumber": 47, "col_offset": 51, "nodeName": "transform", "type": "Any"}, {"lineNumber": 47, "col_offset": 64, "nodeName": "data", "type": "Any"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "GradientBoostingRegressor", "type": "Any"}, {"lineNumber": 70, "col_offset": 49, "nodeName": "data", "type": "Any"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 47, "col_offset": 51, "nodeName": "pl", "type": "Any"}, {"lineNumber": 47, "col_offset": 64, "nodeName": "data", "type": "Any"}]