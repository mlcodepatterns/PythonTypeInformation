[{"lineNumber": 16, "col_offset": 0, "nodeName": "assert_op_count_match", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "assert_same_output_names", "type": "Callable[..., Any]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "assert_same_output_shapes", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "get_op_types_in_program", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "ssa_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 0, "nodeName": "to_tuple", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 0, "nodeName": "is_close", "type": "Callable[..., Any]"}, {"lineNumber": 162, "col_offset": 0, "nodeName": "run_core_ml_predict", "type": "Callable[..., Any]"}, {"lineNumber": 273, "col_offset": 0, "nodeName": "apply_pass_and_basic_check", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 7, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "count", "type": "int"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "input_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "mlmodel", "type": "Any"}, {"lineNumber": 54, "col_offset": 7, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 58, "col_offset": 7, "nodeName": "_IS_MACOS", "type": "bool"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "prog1_outputs", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "prog2_outputs", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "prog1_output_shapes", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "prog2_output_shapes", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "op_types_in_program", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "op", "type": "Any"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "operations", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "op_types_in_program", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 10, "nodeName": "float32", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "elem", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "ret", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "wrapper", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "close", "type": "Any"}, {"lineNumber": 194, "col_offset": 7, "nodeName": "_IS_MACOS", "type": "bool"}, {"lineNumber": 235, "col_offset": 7, "nodeName": "_IS_MACOS", "type": "bool"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "program", "type": "coremltools.converters.mil.mil.program.Program"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "prev_prog", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "block", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "prev_block", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "func", "type": "Any"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "items", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "o", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "operations", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "shape", "type": "Any"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "items", "type": "Any"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "convert", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "program", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "mlmodel", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "prog1_outputs", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "prog2_outputs", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "shape", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "prog1_output_shapes", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "prog2_output_shapes", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "skip_const_ops", "type": "Any"}, {"lineNumber": 99, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "astype", "type": "Any"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "int", "type": "Any"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "elem", "type": "Any"}, {"lineNumber": 118, "col_offset": 10, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "astype", "type": "Any"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "prog", "type": "coremltools.converters.mil.mil.program.Program"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "v", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "isclose", "type": "Any"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "expected", "type": "Any"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "actual", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "diff", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "num_not_close", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "msg", "type": "str"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "items", "type": "Any"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "predict", "type": "Any"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "input_key_values", "type": "Any"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "also_compare_shapes", "type": "Any"}, {"lineNumber": 256, "col_offset": 14, "nodeName": "Program", "type": "Type[coremltools.converters.mil.mil.program.Program]"}, {"lineNumber": 257, "col_offset": 41, "nodeName": "ssa_func", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "output_vars", "type": "Any"}, {"lineNumber": 268, "col_offset": 14, "nodeName": "convert", "type": "Any"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "program", "type": "coremltools.converters.mil.mil.program.Program"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "predict", "type": "Any"}, {"lineNumber": 270, "col_offset": 27, "nodeName": "input_values", "type": "Any"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 277, "col_offset": 30, "nodeName": "prog", "type": "Any"}, {"lineNumber": 278, "col_offset": 29, "nodeName": "prog", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "functions", "type": "Any"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "functions", "type": "Any"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "assert_same_output_names", "type": "Callable[..., Any]"}, {"lineNumber": 281, "col_offset": 29, "nodeName": "prev_prog", "type": "Any"}, {"lineNumber": 281, "col_offset": 40, "nodeName": "prog", "type": "Any"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "assert_same_output_shapes", "type": "Callable[..., Any]"}, {"lineNumber": 282, "col_offset": 30, "nodeName": "prev_prog", "type": "Any"}, {"lineNumber": 282, "col_offset": 41, "nodeName": "prog", "type": "Any"}, {"lineNumber": 283, "col_offset": 11, "nodeName": "prev_prog", "type": "Any"}, {"lineNumber": 283, "col_offset": 22, "nodeName": "prev_block", "type": "Any"}, {"lineNumber": 283, "col_offset": 34, "nodeName": "block", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "program", "type": "Any"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "functions", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "func", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 31, "col_offset": 32, "nodeName": "count", "type": "int"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "expect", "type": "Any"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "input_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "rand", "type": "Any"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "ct", "type": "module"}, {"lineNumber": 51, "col_offset": 59, "nodeName": "backend", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "print_network_spec", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "predict", "type": "Any"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "input_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "expected_output_shapes", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "o", "type": "Any"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "o", "type": "Any"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "o", "type": "Any"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "o", "type": "Any"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "o", "type": "Any"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "o", "type": "Any"}, {"lineNumber": 74, "col_offset": 44, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "o", "type": "Any"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "o", "type": "Any"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "prog", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "r", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "ret", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "Program", "type": "Type[coremltools.converters.mil.mil.program.Program]"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "ssa_func", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 46, "nodeName": "atol", "type": "Any"}, {"lineNumber": 147, "col_offset": 57, "nodeName": "rtol", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "all", "type": "Any"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "close", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "expected", "type": "Any"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "actual", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "num_not_close", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "input_key_values", "type": "Any"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "Image", "type": "Any"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "mlmodel", "type": "Any"}, {"lineNumber": 170, "col_offset": 56, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "run_core_ml_predict", "type": "Callable[..., Any]"}, {"lineNumber": 195, "col_offset": 35, "nodeName": "mlmodel", "type": "Any"}, {"lineNumber": 195, "col_offset": 44, "nodeName": "input_key_values", "type": "Any"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "atol", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "rtol", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "o", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "expected", "type": "Any"}, {"lineNumber": 208, "col_offset": 27, "nodeName": "items", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "pred", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "o", "type": "Any"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "expected", "type": "Any"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "items", "type": "Any"}, {"lineNumber": 247, "col_offset": 52, "nodeName": "msg", "type": "str"}, {"lineNumber": 257, "col_offset": 9, "nodeName": "Function", "type": "Any"}, {"lineNumber": 257, "col_offset": 18, "nodeName": "input_placeholders", "type": "Any"}, {"lineNumber": 258, "col_offset": 22, "nodeName": "build", "type": "Any"}, {"lineNumber": 259, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 259, "col_offset": 22, "nodeName": "output_vars", "type": "Any"}, {"lineNumber": 259, "col_offset": 35, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "output_vars", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "set_outputs", "type": "Any"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "output_vars", "type": "Union[Any, List[Any]]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "add_function", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 264, "col_offset": 37, "nodeName": "ssa_func", "type": "Any"}, {"lineNumber": 268, "col_offset": 14, "nodeName": "ct", "type": "module"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "backend", "type": "Any"}, {"lineNumber": 269, "col_offset": 39, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 270, "col_offset": 11, "nodeName": "mlmodel", "type": "Any"}, {"lineNumber": 270, "col_offset": 52, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "copy", "type": "module"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "PASS_REGISTRY", "type": "coremltools.converters.mil.mil.passes.pass_registry.PassRegistry"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "prog", "type": "Any"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "prev_prog", "type": "Any"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "program", "type": "Any"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "op", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "count", "type": "int"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "random", "type": "Any"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "shape", "type": "Any"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "mlmodel", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "out_name", "type": "Any"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "items", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "func_name", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "op_types_in_program", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "op", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "prod", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 118, "col_offset": 10, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "Function", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "func", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "close", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 152, "col_offset": 55, "nodeName": "num_not_close", "type": "Any"}, {"lineNumber": 152, "col_offset": 70, "nodeName": "size", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "Image", "type": "Any"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "compare_shapes", "type": "Callable[..., Any]"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "mlmodel", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "input_key_values", "type": "Any"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "expected_outputs", "type": "Any"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "max", "type": "Callable"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "max", "type": "Callable"}, {"lineNumber": 208, "col_offset": 27, "nodeName": "expected_outputs", "type": "Any"}, {"lineNumber": 213, "col_offset": 19, "nodeName": "is_close", "type": "Callable[..., Any]"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "expected", "type": "Any"}, {"lineNumber": 213, "col_offset": 47, "nodeName": "atol", "type": "Any"}, {"lineNumber": 213, "col_offset": 53, "nodeName": "rtol", "type": "Any"}, {"lineNumber": 213, "col_offset": 60, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "o", "type": "Any"}, {"lineNumber": 214, "col_offset": 19, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 214, "col_offset": 33, "nodeName": "input_key_values", "type": "Any"}, {"lineNumber": 214, "col_offset": 51, "nodeName": "expected", "type": "Any"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "run_core_ml_predict", "type": "Callable[..., Any]"}, {"lineNumber": 237, "col_offset": 39, "nodeName": "mlmodel", "type": "Any"}, {"lineNumber": 237, "col_offset": 48, "nodeName": "input_key_values", "type": "Any"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "expected_outputs", "type": "Any"}, {"lineNumber": 240, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "o", "type": "Any"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 241, "col_offset": 35, "nodeName": "shape", "type": "Any"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 247, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 258, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 260, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 260, "col_offset": 31, "nodeName": "output_vars", "type": "Any"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "output_vars", "type": "List[Any]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "ssa_func", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "program", "type": "coremltools.converters.mil.mil.program.Program"}, {"lineNumber": 278, "col_offset": 18, "nodeName": "pass_name", "type": "Any"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "count", "type": "int"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "mlmodel", "type": "Any"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "expected_output_shapes", "type": "Any"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "out_name", "type": "Any"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "out_shape", "type": "Any"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "prog1", "type": "Any"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "prog2", "type": "Any"}, {"lineNumber": 74, "col_offset": 44, "nodeName": "prog1", "type": "Any"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "prog2", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "op", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 67, "nodeName": "rand_min", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "allow_duplicate", "type": "Any"}, {"lineNumber": 113, "col_offset": 39, "nodeName": "r", "type": "Any"}, {"lineNumber": 113, "col_offset": 44, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "issubdtype", "type": "Any"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 115, "col_offset": 36, "nodeName": "integer", "type": "Any"}, {"lineNumber": 115, "col_offset": 78, "nodeName": "eps_from_int", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "r", "type": "Any"}, {"lineNumber": 118, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "msg", "type": "str"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "sum", "type": "Any"}, {"lineNumber": 152, "col_offset": 70, "nodeName": "expected", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 157, "col_offset": 26, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "PIL", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "input_key_values", "type": "Any"}, {"lineNumber": 167, "col_offset": 34, "nodeName": "astype", "type": "Any"}, {"lineNumber": 167, "col_offset": 43, "nodeName": "float32", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "input_key_values", "type": "Any"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "use_cpu_only", "type": "Any"}, {"lineNumber": 203, "col_offset": 21, "nodeName": "pred", "type": "Any"}, {"lineNumber": 206, "col_offset": 23, "nodeName": "atol", "type": "Any"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "rtol", "type": "Any"}, {"lineNumber": 213, "col_offset": 38, "nodeName": "pred", "type": "Any"}, {"lineNumber": 213, "col_offset": 60, "nodeName": "msg", "type": "str"}, {"lineNumber": 214, "col_offset": 61, "nodeName": "pred", "type": "Any"}, {"lineNumber": 241, "col_offset": 19, "nodeName": "expected", "type": "Any"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 245, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 247, "col_offset": 36, "nodeName": "expected", "type": "Any"}, {"lineNumber": 258, "col_offset": 30, "nodeName": "ssa_func", "type": "Any"}, {"lineNumber": 261, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 261, "col_offset": 28, "nodeName": "output_vars", "type": "Any"}, {"lineNumber": 261, "col_offset": 41, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 262, "col_offset": 27, "nodeName": "output_vars", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "lower", "type": "Any"}, {"lineNumber": 29, "col_offset": 38, "nodeName": "lower", "type": "Any"}, {"lineNumber": 68, "col_offset": 43, "nodeName": "func_name", "type": "str"}, {"lineNumber": 69, "col_offset": 43, "nodeName": "func_name", "type": "str"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "func_name", "type": "str"}, {"lineNumber": 75, "col_offset": 50, "nodeName": "func_name", "type": "str"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 51, "nodeName": "fabs", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 152, "col_offset": 40, "nodeName": "abs", "type": "Any"}, {"lineNumber": 152, "col_offset": 47, "nodeName": "diff", "type": "Any"}, {"lineNumber": 155, "col_offset": 48, "nodeName": "expected", "type": "Any"}, {"lineNumber": 156, "col_offset": 46, "nodeName": "actual", "type": "Any"}, {"lineNumber": 157, "col_offset": 45, "nodeName": "diff", "type": "Any"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "isscalar", "type": "Any"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "v", "type": "Any"}, {"lineNumber": 166, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "k", "type": "Any"}, {"lineNumber": 167, "col_offset": 34, "nodeName": "v", "type": "Any"}, {"lineNumber": 167, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "k", "type": "Any"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "v", "type": "Any"}, {"lineNumber": 169, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 213, "col_offset": 43, "nodeName": "o", "type": "Any"}, {"lineNumber": 214, "col_offset": 66, "nodeName": "o", "type": "Any"}, {"lineNumber": 241, "col_offset": 35, "nodeName": "pred", "type": "Any"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "expected", "type": "Any"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "pred", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "op_type", "type": "Any"}, {"lineNumber": 29, "col_offset": 38, "nodeName": "op", "type": "Any"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "rand_max", "type": "Any"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "rand_min", "type": "Any"}, {"lineNumber": 112, "col_offset": 46, "nodeName": "random", "type": "Any"}, {"lineNumber": 115, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 73, "nodeName": "r", "type": "Any"}, {"lineNumber": 152, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 40, "nodeName": "v", "type": "Any"}, {"lineNumber": 169, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 241, "col_offset": 40, "nodeName": "o", "type": "Any"}, {"lineNumber": 245, "col_offset": 40, "nodeName": "pred", "type": "Any"}, {"lineNumber": 247, "col_offset": 24, "nodeName": "o", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "o", "type": "Any"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "out_name", "type": "Any"}, {"lineNumber": 112, "col_offset": 46, "nodeName": "random", "type": "Any"}, {"lineNumber": 115, "col_offset": 59, "nodeName": "round", "type": "Any"}, {"lineNumber": 115, "col_offset": 68, "nodeName": "r", "type": "Any"}, {"lineNumber": 155, "col_offset": 58, "nodeName": "close", "type": "Any"}, {"lineNumber": 156, "col_offset": 54, "nodeName": "close", "type": "Any"}, {"lineNumber": 157, "col_offset": 51, "nodeName": "close", "type": "Any"}, {"lineNumber": 245, "col_offset": 45, "nodeName": "o", "type": "Any"}, {"lineNumber": 112, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 59, "nodeName": "np", "type": "module"}]