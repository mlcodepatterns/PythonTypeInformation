[{"lineNumber": 16, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "width", "type": "int"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "height", "type": "int"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "width", "type": "int"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "numLayers", "type": "int"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "channels", "type": "int"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "modelName", "type": "str"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "specificationVersion", "type": "int"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "input_", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "dataType", "type": "Any"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "DOUBLE", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "output_", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "dataType", "type": "Any"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "DOUBLE", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "coremlModel", "type": "coremltools.models.model.MLModel"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "shaper", "type": "coremltools.models.model.NeuralNetworkShaper"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "filename", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "shaper", "type": "coremltools.models.model.NeuralNetworkShaper"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "shaper", "type": "coremltools.models.model.NeuralNetworkShaper"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "random_shape", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "ranges", "type": "Dict[Any, Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "input_names", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "spec_copy", "type": "Any"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "spec", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "input_names", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "Type[ShaperTest]"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "Model", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "add", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "input_", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "MergeFromString", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 34, "col_offset": 48, "nodeName": "channels", "type": "int"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 35, "col_offset": 48, "nodeName": "height", "type": "int"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "append", "type": "Any"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "width", "type": "int"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "multiArrayType", "type": "Any"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "ArrayFeatureType", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "add", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "output_", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "MergeFromString", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "multiArrayType", "type": "Any"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "ArrayFeatureType", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "numLayers", "type": "int"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "layer", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Type[ShaperTest]"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "MLModel", "type": "Type[coremltools.models.model.MLModel]"}, {"lineNumber": 95, "col_offset": 54, "nodeName": "spec", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "NeuralNetworkShaper", "type": "Type[coremltools.models.model.NeuralNetworkShaper]"}, {"lineNumber": 99, "col_offset": 37, "nodeName": "spec", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "shaper", "type": "coremltools.models.model.NeuralNetworkShaper"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "mktemp", "type": "Callable"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "save", "type": "Callable[[Any], None]"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "filename", "type": "Any"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "NeuralNetworkShaper", "type": "Type[coremltools.models.model.NeuralNetworkShaper]"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "filename", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "shaper", "type": "coremltools.models.model.NeuralNetworkShaper"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "NeuralNetworkShaper", "type": "Type[coremltools.models.model.NeuralNetworkShaper]"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "spec", "type": "Any"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "random_shape", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "missing_shape", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "get_allowed_shape_ranges", "type": "Callable[[Any], Dict[Any, Any]]"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "spec", "type": "Any"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "_get_input_names", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 39, "nodeName": "spec", "type": "Any"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "self", "type": "ShaperTest"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "whole_range", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "constraint_range", "type": "Dict[str, Any]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "shape_range", "type": "coremltools.models.neural_network.flexible_shape_utils.NeuralNetworkMultiArrayShapeRange"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "Model_pb2", "type": "module"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "Type[ShaperTest]"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "input", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "multiArrayType", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "shape", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "type", "type": "Any"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "Model_pb2", "type": "module"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "output", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "multiArrayType", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "type", "type": "Any"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "Model_pb2", "type": "module"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "add", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "outputChannels", "type": "int"}, {"lineNumber": 60, "col_offset": 51, "nodeName": "channels", "type": "int"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "kernelChannels", "type": "int"}, {"lineNumber": 61, "col_offset": 51, "nodeName": "channels", "type": "int"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "hasBias", "type": "bool"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "outputChannels", "type": "int"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "channels", "type": "int"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "kernelChannels", "type": "int"}, {"lineNumber": 79, "col_offset": 51, "nodeName": "channels", "type": "int"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "hasBias", "type": "bool"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "models", "type": "module"}, {"lineNumber": 95, "col_offset": 54, "nodeName": "self", "type": "Type[ShaperTest]"}, {"lineNumber": 99, "col_offset": 37, "nodeName": "self", "type": "ShaperTest"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "ShaperTest"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "coremlModel", "type": "coremltools.models.model.MLModel"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "ShaperTest"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "self", "type": "ShaperTest"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "shaper", "type": "coremltools.models.model.NeuralNetworkShaper"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "ShaperTest"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "shaper", "type": "coremltools.models.model.NeuralNetworkShaper"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "ShaperTest"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "ShaperTest"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "can_allow_multiple_input_shapes", "type": "Callable[[Any], bool]"}, {"lineNumber": 126, "col_offset": 56, "nodeName": "spec", "type": "Any"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "self", "type": "ShaperTest"}, {"lineNumber": 131, "col_offset": 39, "nodeName": "self", "type": "ShaperTest"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "ranges", "type": "Dict[Any, Any]"}, {"lineNumber": 135, "col_offset": 32, "nodeName": "key", "type": "str"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "NeuralNetworkMultiArrayShapeRange", "type": "Type[coremltools.models.neural_network.flexible_shape_utils.NeuralNetworkMultiArrayShapeRange]"}, {"lineNumber": 136, "col_offset": 60, "nodeName": "constraint_range", "type": "Dict[str, Any]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "update_multiarray_shape_range", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 137, "col_offset": 42, "nodeName": "spec_copy", "type": "Any"}, {"lineNumber": 137, "col_offset": 53, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 137, "col_offset": 65, "nodeName": "shape_range", "type": "coremltools.models.neural_network.flexible_shape_utils.NeuralNetworkMultiArrayShapeRange"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "ShaperTest"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "HasField", "type": "Any"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "proto", "type": "module"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "description", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "type", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "multiArrayType", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "multiArrayType", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "multiArrayType", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "input_", "type": "Any"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "proto", "type": "module"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "description", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "type", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "output_", "type": "Any"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "proto", "type": "module"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "layers", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "numLayers", "type": "int"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "MergeFromString", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "channels", "type": "int"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "j", "type": "int"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "MergeFromString", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "channels", "type": "int"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "j", "type": "int"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "coremltools", "type": "module"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "ShaperTest"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "self", "type": "ShaperTest"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "shaper", "type": "coremltools.models.model.NeuralNetworkShaper"}, {"lineNumber": 126, "col_offset": 56, "nodeName": "self", "type": "ShaperTest"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "input_name", "type": "Any"}, {"lineNumber": 135, "col_offset": 37, "nodeName": "whole_range", "type": "Any"}, {"lineNumber": 135, "col_offset": 58, "nodeName": "key", "type": "str"}, {"lineNumber": 135, "col_offset": 65, "nodeName": "_CONSTRAINED_KEYS", "type": "List[str]"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "multiArrayType", "type": "Any"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "coremltools", "type": "module"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "spec", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "input_", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "type", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "type", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "type", "type": "Any"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "coremltools", "type": "module"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "spec", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "output_", "type": "Any"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "coremltools", "type": "module"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "input", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "kernelSize", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "kernelSize", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "same", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "channels", "type": "int"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "kernelSize", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "kernelSize", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "same", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 89, "col_offset": 38, "nodeName": "channels", "type": "int"}, {"lineNumber": 135, "col_offset": 49, "nodeName": "key", "type": "str"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "type", "type": "Any"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "self", "type": "Type[ShaperTest]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "input_", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "input_", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "input_", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "self", "type": "Type[ShaperTest]"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "spec", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 51, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "j", "type": "int"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 75, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "j", "type": "int"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "self", "type": "Type[ShaperTest]"}, {"lineNumber": 51, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "append", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "append", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "layer", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "append", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "append", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "input", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "floatValue", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "floatValue", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "floatValue", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "floatValue", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "description", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "weights", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "weights", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "weights", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "weights", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "spec_copy", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "convolution", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "layer", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "layer", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "layer", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "layer", "type": "Any"}]