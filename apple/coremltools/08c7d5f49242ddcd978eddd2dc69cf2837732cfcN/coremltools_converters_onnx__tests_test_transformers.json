[{"lineNumber": 4, "col_offset": 0, "nodeName": "onnx", "type": "Any"}, {"lineNumber": 12, "col_offset": 3, "nodeName": "_HAS_ONNX", "type": "bool"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 283, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 4, "col_offset": 7, "nodeName": "importorskip", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 283, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 4, "col_offset": 7, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "pads", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "dilations", "type": "Tuple[int, int]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "group", "type": "int"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "output_shape", "type": "Tuple[int, int, Any, Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int, int, int, int]]]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int, Any, Any], Any]]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "bias", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "graph_", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "fused_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "pads", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "dilations", "type": "Tuple[int, int]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "group", "type": "int"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "bias", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "output_shape", "type": "Tuple[int, int, Any, Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int, int, int, int]]]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int, Any, Any], Any]]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "graph_", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "fused_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int, int, int, int]]]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int, int, int], Any]]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "new_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int, int, int, int]]]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int, int, int], Any]]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "exp", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "new_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "coreml_model", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int, int, int, int]]]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int, int, int], Any]]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int, int, int, int]]]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int, int, int], Any]]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "new_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "scale_factor", "type": "int"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int, int, int, int]]]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int, int, int], Any]]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "shape1", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "shape2", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "from_array", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "_conv_pool_output_size", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "dilations", "type": "Tuple[int, int]"}, {"lineNumber": 44, "col_offset": 36, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 44, "col_offset": 50, "nodeName": "pads", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 44, "col_offset": 56, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "_random_array", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "from_array", "type": "Any"}, {"lineNumber": 64, "col_offset": 39, "nodeName": "b", "type": "Any"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "_onnx_create_model", "type": "Any"}, {"lineNumber": 74, "col_offset": 48, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int, int, int, int]]]"}, {"lineNumber": 74, "col_offset": 56, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int, Any, Any], Any]]"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "from_onnx", "type": "Callable[[Any, Any], coremltools.converters.onnx._graph.Graph]"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "graph", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "transformed", "type": "Callable"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 81, "col_offset": 61, "nodeName": "b", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "from_array", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "_random_array", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "from_array", "type": "Any"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "b", "type": "Any"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "_conv_pool_output_size", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "dilations", "type": "Tuple[int, int]"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 96, "col_offset": 50, "nodeName": "pads", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 96, "col_offset": 56, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "_onnx_create_model", "type": "Any"}, {"lineNumber": 123, "col_offset": 48, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int, int, int, int]]]"}, {"lineNumber": 123, "col_offset": 56, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int, Any, Any], Any]]"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "from_onnx", "type": "Callable[[Any, Any], coremltools.converters.onnx._graph.Graph]"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "graph", "type": "Any"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "transformed", "type": "Callable"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "from_array", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 150, "col_offset": 14, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "_onnx_create_model", "type": "Any"}, {"lineNumber": 152, "col_offset": 59, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int, int, int, int]]]"}, {"lineNumber": 152, "col_offset": 67, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int, int, int], Any]]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "from_onnx", "type": "Callable[[Any, Any], coremltools.converters.onnx._graph.Graph]"}, {"lineNumber": 154, "col_offset": 32, "nodeName": "graph", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "transformed", "type": "Callable"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "_onnx_create_model", "type": "Any"}, {"lineNumber": 176, "col_offset": 58, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int, int, int, int]]]"}, {"lineNumber": 176, "col_offset": 66, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int, int, int], Any]]"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "from_onnx", "type": "Callable[[Any, Any], coremltools.converters.onnx._graph.Graph]"}, {"lineNumber": 178, "col_offset": 32, "nodeName": "graph", "type": "Any"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "transformed", "type": "Callable"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "channelScale", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "blueBias", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "greenBias", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "redBias", "type": "Any"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 205, "col_offset": 21, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "_onnx_create_model", "type": "Any"}, {"lineNumber": 218, "col_offset": 46, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int, int, int, int]]]"}, {"lineNumber": 218, "col_offset": 54, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int, int, int], Any]]"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "channelScale", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "blueBias", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "greenBias", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "redBias", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "channelScale", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "grayBias", "type": "Any"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 243, "col_offset": 17, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 250, "col_offset": 18, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 256, "col_offset": 17, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 269, "col_offset": 21, "nodeName": "_onnx_create_model", "type": "Any"}, {"lineNumber": 269, "col_offset": 73, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int, int, int, int]]]"}, {"lineNumber": 269, "col_offset": 81, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int, int, int], Any]]"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "from_onnx", "type": "Callable[[Any, Any], coremltools.converters.onnx._graph.Graph]"}, {"lineNumber": 271, "col_offset": 32, "nodeName": "graph", "type": "Any"}, {"lineNumber": 272, "col_offset": 20, "nodeName": "transformed", "type": "Callable"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "scale_factor", "type": "int"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "scale_factor", "type": "int"}, {"lineNumber": 306, "col_offset": 17, "nodeName": "from_array", "type": "Any"}, {"lineNumber": 307, "col_offset": 17, "nodeName": "from_array", "type": "Any"}, {"lineNumber": 309, "col_offset": 17, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 312, "col_offset": 17, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 315, "col_offset": 17, "nodeName": "make_node", "type": "Any"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "_onnx_create_model", "type": "Any"}, {"lineNumber": 319, "col_offset": 38, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int, int, int, int]]]"}, {"lineNumber": 319, "col_offset": 46, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int, int, int], Any]]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "_test_onnx_model", "type": "Any"}, {"lineNumber": 321, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "numpy_helper", "type": "Any"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "_random_array", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 47, "col_offset": 64, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "output_shape", "type": "Tuple[int, int, Any, Any]"}, {"lineNumber": 50, "col_offset": 45, "nodeName": "FLOAT", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "helper", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "dilations", "type": "Tuple[int, int]"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "group", "type": "int"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "pads", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "numpy_helper", "type": "Any"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "helper", "type": "Any"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "conv", "type": "Any"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "add", "type": "Any"}, {"lineNumber": 74, "col_offset": 66, "nodeName": "weight", "type": "Any"}, {"lineNumber": 74, "col_offset": 74, "nodeName": "bias", "type": "Any"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "Graph", "type": "Type[coremltools.converters.onnx._graph.Graph]"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "model", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "graph_", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "ConvAddFuserTest"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "fused_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "ConvAddFuserTest"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "input_tensors", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "ConvAddFuserTest"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "numpy_helper", "type": "Any"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "_random_array", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "numpy_helper", "type": "Any"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 99, "col_offset": 48, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 99, "col_offset": 64, "nodeName": "output_size", "type": "Any"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "output_shape", "type": "Tuple[int, int, Any, Any]"}, {"lineNumber": 102, "col_offset": 45, "nodeName": "FLOAT", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "helper", "type": "Any"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "dilations", "type": "Tuple[int, int]"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "group", "type": "int"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "kernel_shape", "type": "Tuple[int, int]"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "pads", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "strides", "type": "Tuple[int, int]"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "helper", "type": "Any"}, {"lineNumber": 123, "col_offset": 36, "nodeName": "conv", "type": "Any"}, {"lineNumber": 123, "col_offset": 42, "nodeName": "add", "type": "Any"}, {"lineNumber": 123, "col_offset": 66, "nodeName": "weight", "type": "Any"}, {"lineNumber": 123, "col_offset": 74, "nodeName": "bias", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "Graph", "type": "Type[coremltools.converters.onnx._graph.Graph]"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "model", "type": "Any"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "graph_", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "ConvAddFuserTest"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "fused_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "ConvAddFuserTest"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "npt", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "input_tensors", "type": "Any"}, {"lineNumber": 130, "col_offset": 61, "nodeName": "b", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "ConvAddFuserTest"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 138, "col_offset": 43, "nodeName": "FLOAT", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "numpy_helper", "type": "Any"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "_random_array", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "helper", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "helper", "type": "Any"}, {"lineNumber": 150, "col_offset": 14, "nodeName": "helper", "type": "Any"}, {"lineNumber": 152, "col_offset": 41, "nodeName": "conv", "type": "Any"}, {"lineNumber": 152, "col_offset": 47, "nodeName": "drop", "type": "Any"}, {"lineNumber": 152, "col_offset": 53, "nodeName": "exp", "type": "Any"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "Graph", "type": "Type[coremltools.converters.onnx._graph.Graph]"}, {"lineNumber": 154, "col_offset": 32, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 156, "col_offset": 29, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 159, "col_offset": 55, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 164, "col_offset": 43, "nodeName": "FLOAT", "type": "Any"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "helper", "type": "Any"}, {"lineNumber": 174, "col_offset": 14, "nodeName": "helper", "type": "Any"}, {"lineNumber": 176, "col_offset": 41, "nodeName": "im_scaler", "type": "Any"}, {"lineNumber": 176, "col_offset": 52, "nodeName": "exp", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "Graph", "type": "Type[coremltools.converters.onnx._graph.Graph]"}, {"lineNumber": 178, "col_offset": 32, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "coreml_model", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 195, "col_offset": 43, "nodeName": "FLOAT", "type": "Any"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "helper", "type": "Any"}, {"lineNumber": 205, "col_offset": 21, "nodeName": "helper", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "helper", "type": "Any"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "im_scaler1", "type": "Any"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "im_scaler2", "type": "Any"}, {"lineNumber": 218, "col_offset": 37, "nodeName": "concat", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 222, "col_offset": 29, "nodeName": "layers", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "scaler", "type": "Any"}, {"lineNumber": 233, "col_offset": 48, "nodeName": "FLOAT", "type": "Any"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "helper", "type": "Any"}, {"lineNumber": 243, "col_offset": 17, "nodeName": "helper", "type": "Any"}, {"lineNumber": 250, "col_offset": 18, "nodeName": "helper", "type": "Any"}, {"lineNumber": 256, "col_offset": 17, "nodeName": "helper", "type": "Any"}, {"lineNumber": 264, "col_offset": 41, "nodeName": "FLOAT", "type": "Any"}, {"lineNumber": 265, "col_offset": 46, "nodeName": "FLOAT", "type": "Any"}, {"lineNumber": 266, "col_offset": 48, "nodeName": "FLOAT", "type": "Any"}, {"lineNumber": 267, "col_offset": 49, "nodeName": "FLOAT", "type": "Any"}, {"lineNumber": 269, "col_offset": 41, "nodeName": "conv", "type": "Any"}, {"lineNumber": 269, "col_offset": 47, "nodeName": "cast_1", "type": "Any"}, {"lineNumber": 269, "col_offset": 55, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 269, "col_offset": 64, "nodeName": "cast_2", "type": "Any"}, {"lineNumber": 269, "col_offset": 101, "nodeName": "value_info", "type": "List[Tuple[str, Tuple[int, int, int, int], Any]]"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "Graph", "type": "Type[coremltools.converters.onnx._graph.Graph]"}, {"lineNumber": 271, "col_offset": 32, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 272, "col_offset": 20, "nodeName": "graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 276, "col_offset": 29, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 278, "col_offset": 55, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "NodeRemoverTests"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "scale_factor", "type": "int"}, {"lineNumber": 291, "col_offset": 29, "nodeName": "scale_factor", "type": "int"}, {"lineNumber": 294, "col_offset": 29, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 295, "col_offset": 31, "nodeName": "output_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 295, "col_offset": 45, "nodeName": "FLOAT", "type": "Any"}, {"lineNumber": 298, "col_offset": 12, "nodeName": "output_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "output_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 306, "col_offset": 17, "nodeName": "numpy_helper", "type": "Any"}, {"lineNumber": 306, "col_offset": 41, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 306, "col_offset": 52, "nodeName": "shape1", "type": "List[int]"}, {"lineNumber": 307, "col_offset": 17, "nodeName": "numpy_helper", "type": "Any"}, {"lineNumber": 307, "col_offset": 41, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 309, "col_offset": 17, "nodeName": "helper", "type": "Any"}, {"lineNumber": 312, "col_offset": 17, "nodeName": "helper", "type": "Any"}, {"lineNumber": 315, "col_offset": 17, "nodeName": "helper", "type": "Any"}, {"lineNumber": 319, "col_offset": 13, "nodeName": "node_0", "type": "Any"}, {"lineNumber": 319, "col_offset": 21, "nodeName": "node_1", "type": "Any"}, {"lineNumber": 319, "col_offset": 29, "nodeName": "node_2", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "dims", "type": "Any"}, {"lineNumber": 50, "col_offset": 45, "nodeName": "TensorProto", "type": "Any"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "ConvAddFuser", "type": "Type[coremltools.converters.onnx._transformers.ConvAddFuser]"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "fused_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "node", "type": "Any"}, {"lineNumber": 82, "col_offset": 58, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int, Any, Any], Any]]"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "dims", "type": "Any"}, {"lineNumber": 102, "col_offset": 45, "nodeName": "TensorProto", "type": "Any"}, {"lineNumber": 125, "col_offset": 42, "nodeName": "ConvAddFuser", "type": "Type[coremltools.converters.onnx._transformers.ConvAddFuser]"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "fused_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "node", "type": "Any"}, {"lineNumber": 131, "col_offset": 58, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int, Any, Any], Any]]"}, {"lineNumber": 138, "col_offset": 43, "nodeName": "TensorProto", "type": "Any"}, {"lineNumber": 155, "col_offset": 39, "nodeName": "DropoutRemover", "type": "Type[coremltools.converters.onnx._transformers.DropoutRemover]"}, {"lineNumber": 156, "col_offset": 29, "nodeName": "graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "new_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 164, "col_offset": 43, "nodeName": "TensorProto", "type": "Any"}, {"lineNumber": 179, "col_offset": 39, "nodeName": "ImageScalerRemover", "type": "Type[coremltools.converters.onnx._transformers.ImageScalerRemover]"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "new_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 195, "col_offset": 43, "nodeName": "TensorProto", "type": "Any"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 221, "col_offset": 23, "nodeName": "onnx_model", "type": "Any"}, {"lineNumber": 222, "col_offset": 29, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 233, "col_offset": 48, "nodeName": "TensorProto", "type": "Any"}, {"lineNumber": 264, "col_offset": 41, "nodeName": "TensorProto", "type": "Any"}, {"lineNumber": 265, "col_offset": 46, "nodeName": "TensorProto", "type": "Any"}, {"lineNumber": 266, "col_offset": 48, "nodeName": "TensorProto", "type": "Any"}, {"lineNumber": 267, "col_offset": 49, "nodeName": "TensorProto", "type": "Any"}, {"lineNumber": 272, "col_offset": 39, "nodeName": "CastOpRemover", "type": "Type[coremltools.converters.onnx._transformers.CastOpRemover]"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 276, "col_offset": 29, "nodeName": "new_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 295, "col_offset": 45, "nodeName": "TensorProto", "type": "Any"}, {"lineNumber": 306, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 307, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 307, "col_offset": 52, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 307, "col_offset": 57, "nodeName": "output_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 319, "col_offset": 68, "nodeName": "shape1", "type": "Any"}, {"lineNumber": 319, "col_offset": 76, "nodeName": "shape2", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "weight", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "dims", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "dims", "type": "Any"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "weight", "type": "Any"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 159, "col_offset": 55, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 222, "col_offset": 29, "nodeName": "spec", "type": "Any"}, {"lineNumber": 223, "col_offset": 29, "nodeName": "spec", "type": "Any"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "preprocessing", "type": "Any"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 278, "col_offset": 55, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 289, "col_offset": 16, "nodeName": "input_shape", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 289, "col_offset": 34, "nodeName": "scale_factor", "type": "int"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int, int, int, int]]]"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "weight", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "conv", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int, Any, Any], Any]]"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "node", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "fused_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "weight", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int, int, int, int]]]"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "conv", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int, Any, Any], Any]]"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "node", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "fused_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "new_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "new_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 159, "col_offset": 55, "nodeName": "new_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "new_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "new_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "new_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "new_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "new_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 278, "col_offset": 55, "nodeName": "new_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "new_graph", "type": "coremltools.converters.onnx._graph.Graph"}, {"lineNumber": 310, "col_offset": 31, "nodeName": "inputs", "type": "List[Tuple[str, Tuple[int, int, int, int]]]"}, {"lineNumber": 316, "col_offset": 60, "nodeName": "outputs", "type": "List[Tuple[str, Tuple[int, int, int, int], Any]]"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "spec", "type": "Any"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "spec", "type": "Any"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "spec", "type": "Any"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "spec", "type": "Any"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "spec", "type": "Any"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "spec", "type": "Any"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "spec", "type": "Any"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "spec", "type": "Any"}, {"lineNumber": 228, "col_offset": 25, "nodeName": "spec", "type": "Any"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "spec", "type": "Any"}]