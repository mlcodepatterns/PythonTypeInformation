[{"lineNumber": 9, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "test_load_constant_remove", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "test_dead_layer_remove", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "test_conv_crop_bn_to_conv_bn_crop", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "test_conv_crop_bn_relu_to_conv_bn_relu_crop", "type": "Callable[[Any], Any]"}, {"lineNumber": 9, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 124, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "RUN_ALL_TESTS", "type": "bool"}, {"lineNumber": 126, "col_offset": 7, "nodeName": "RUN_ALL_TESTS", "type": "bool"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "input_features", "type": "List[Tuple[str, coremltools.models.datatypes.Array]]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "output_features", "type": "List[Tuple[str, None]]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "spec", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "input_features", "type": "List[Tuple[str, coremltools.models.datatypes.Array]]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "output_features", "type": "List[Tuple[str, None]]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "spec", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "input_features", "type": "List[Tuple[str, coremltools.models.datatypes.Array]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "output_features", "type": "List[Tuple[str, None]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "input_features", "type": "List[Tuple[str, coremltools.models.datatypes.Array]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "output_features", "type": "List[Tuple[str, None]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "NeuralNetworkBuilder", "type": "Type[coremltools.models.neural_network.builder.NeuralNetworkBuilder]"}, {"lineNumber": 14, "col_offset": 54, "nodeName": "input_features", "type": "List[Tuple[str, coremltools.models.datatypes.Array]]"}, {"lineNumber": 14, "col_offset": 70, "nodeName": "output_features", "type": "List[Tuple[str, None]]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "add_activation", "type": "Callable[..., Any]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "add_load_constant_nd", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "add_activation", "type": "Callable[..., Any]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "add_load_constant_nd", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "add_load_constant_nd", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "remove_disconnected_layers", "type": "Callable[[Any], None]"}, {"lineNumber": 22, "col_offset": 35, "nodeName": "spec", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "NeuralNetworkBuilder", "type": "Type[coremltools.models.neural_network.builder.NeuralNetworkBuilder]"}, {"lineNumber": 28, "col_offset": 54, "nodeName": "input_features", "type": "List[Tuple[str, coremltools.models.datatypes.Array]]"}, {"lineNumber": 28, "col_offset": 70, "nodeName": "output_features", "type": "List[Tuple[str, None]]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "add_activation", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "add_load_constant_nd", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "add_load_constant_nd", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "add_split_nd", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "add_squeeze", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "add_activation", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "add_activation", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "add_load_constant_nd", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "add_activation", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "remove_disconnected_layers", "type": "Callable[[Any], None]"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "spec", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "NeuralNetworkBuilder", "type": "Type[coremltools.models.neural_network.builder.NeuralNetworkBuilder]"}, {"lineNumber": 46, "col_offset": 54, "nodeName": "input_features", "type": "List[Tuple[str, coremltools.models.datatypes.Array]]"}, {"lineNumber": 46, "col_offset": 70, "nodeName": "output_features", "type": "List[Tuple[str, None]]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "add_convolution", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "add_crop", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "add_batchnorm", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "spec", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "transform_conv_crop", "type": "Callable[[Any], None]"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "spec", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "NeuralNetworkBuilder", "type": "Type[coremltools.models.neural_network.builder.NeuralNetworkBuilder]"}, {"lineNumber": 83, "col_offset": 54, "nodeName": "input_features", "type": "List[Tuple[str, coremltools.models.datatypes.Array]]"}, {"lineNumber": 83, "col_offset": 70, "nodeName": "output_features", "type": "List[Tuple[str, None]]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "ones", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "add_convolution", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "add_crop", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "add_batchnorm", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "add_activation", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "spec", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "transform_conv_crop", "type": "Callable[[Any], None]"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "spec", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "neural_network", "type": "module"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 21, "col_offset": 39, "nodeName": "layers", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 23, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 23, "col_offset": 39, "nodeName": "layers", "type": "Any"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "neural_network", "type": "module"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "layers", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "layers", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "neural_network", "type": "module"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 54, "col_offset": 34, "nodeName": "W", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "WhichOneof", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "WhichOneof", "type": "Any"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "WhichOneof", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "WhichOneof", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "neural_network", "type": "module"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "float32", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "W", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 112, "col_offset": 40, "nodeName": "WhichOneof", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 113, "col_offset": 45, "nodeName": "WhichOneof", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 114, "col_offset": 46, "nodeName": "WhichOneof", "type": "Any"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "builder", "type": "coremltools.models.neural_network.builder.NeuralNetworkBuilder"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 119, "col_offset": 45, "nodeName": "WhichOneof", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 120, "col_offset": 46, "nodeName": "WhichOneof", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 121, "col_offset": 40, "nodeName": "WhichOneof", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "unittest", "type": "module"}, {"lineNumber": 12, "col_offset": 35, "nodeName": "Array", "type": "Type[coremltools.models.datatypes.Array]"}, {"lineNumber": 16, "col_offset": 68, "nodeName": "ones", "type": "Any"}, {"lineNumber": 18, "col_offset": 68, "nodeName": "ones", "type": "Any"}, {"lineNumber": 19, "col_offset": 68, "nodeName": "ones", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 21, "col_offset": 39, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 39, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 26, "col_offset": 35, "nodeName": "Array", "type": "Type[coremltools.models.datatypes.Array]"}, {"lineNumber": 30, "col_offset": 68, "nodeName": "ones", "type": "Any"}, {"lineNumber": 31, "col_offset": 68, "nodeName": "ones", "type": "Any"}, {"lineNumber": 36, "col_offset": 68, "nodeName": "ones", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "neuralNetwork", "type": "Any"}, {"lineNumber": 44, "col_offset": 35, "nodeName": "Array", "type": "Type[coremltools.models.datatypes.Array]"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "astype", "type": "Any"}, {"lineNumber": 63, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "astype", "type": "Any"}, {"lineNumber": 64, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "astype", "type": "Any"}, {"lineNumber": 65, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "astype", "type": "Any"}, {"lineNumber": 66, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "Array", "type": "Type[coremltools.models.datatypes.Array]"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "astype", "type": "Any"}, {"lineNumber": 100, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "astype", "type": "Any"}, {"lineNumber": 101, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "astype", "type": "Any"}, {"lineNumber": 102, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "astype", "type": "Any"}, {"lineNumber": 103, "col_offset": 58, "nodeName": "float32", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 12, "col_offset": 35, "nodeName": "datatypes", "type": "module"}, {"lineNumber": 16, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 18, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 19, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 21, "col_offset": 39, "nodeName": "spec", "type": "Any"}, {"lineNumber": 23, "col_offset": 39, "nodeName": "spec", "type": "Any"}, {"lineNumber": 26, "col_offset": 35, "nodeName": "datatypes", "type": "module"}, {"lineNumber": 30, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "spec", "type": "Any"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "spec", "type": "Any"}, {"lineNumber": 44, "col_offset": 35, "nodeName": "datatypes", "type": "module"}, {"lineNumber": 63, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "layers", "type": "Any"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "layers", "type": "Any"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "layers", "type": "Any"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "layers", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "datatypes", "type": "module"}, {"lineNumber": 100, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 40, "nodeName": "layers", "type": "Any"}, {"lineNumber": 113, "col_offset": 45, "nodeName": "layers", "type": "Any"}, {"lineNumber": 114, "col_offset": 46, "nodeName": "layers", "type": "Any"}, {"lineNumber": 119, "col_offset": 45, "nodeName": "layers", "type": "Any"}, {"lineNumber": 120, "col_offset": 46, "nodeName": "layers", "type": "Any"}, {"lineNumber": 121, "col_offset": 40, "nodeName": "layers", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "ones", "type": "Any"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "ones", "type": "Any"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "ones", "type": "Any"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "spec", "type": "Any"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "spec", "type": "Any"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "spec", "type": "Any"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "spec", "type": "Any"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "ones", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "ones", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "ones", "type": "Any"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "ones", "type": "Any"}, {"lineNumber": 112, "col_offset": 40, "nodeName": "spec", "type": "Any"}, {"lineNumber": 113, "col_offset": 45, "nodeName": "spec", "type": "Any"}, {"lineNumber": 114, "col_offset": 46, "nodeName": "spec", "type": "Any"}, {"lineNumber": 119, "col_offset": 45, "nodeName": "spec", "type": "Any"}, {"lineNumber": 120, "col_offset": 46, "nodeName": "spec", "type": "Any"}, {"lineNumber": 121, "col_offset": 40, "nodeName": "spec", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "np", "type": "module"}]