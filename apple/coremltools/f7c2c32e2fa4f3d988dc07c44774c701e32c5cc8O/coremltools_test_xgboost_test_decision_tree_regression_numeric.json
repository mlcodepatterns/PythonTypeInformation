[{"lineNumber": 15, "col_offset": 3, "nodeName": "HAS_SKLEARN", "type": "bool"}, {"lineNumber": 20, "col_offset": 58, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 20, "col_offset": 58, "nodeName": "unittest", "type": "module"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "output_name", "type": "str"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "product", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "load_boston", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "Type[DecisionTreeRegressorBostonHousingScikitNumericTest]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "Type[DecisionTreeRegressorBostonHousingScikitNumericTest]"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "Type[DecisionTreeRegressorBostonHousingScikitNumericTest]"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "Type[DecisionTreeRegressorBostonHousingScikitNumericTest]"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Type[DecisionTreeRegressorBostonHousingScikitNumericTest]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertAlmostEquals", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertAlmostEquals", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "DecisionTreeRegressor", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "X", "type": "Any"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "target", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "convert", "type": "Union[Callable[[Any, Any, Any], Any], Callable[..., Any]]"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 57, "col_offset": 51, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 57, "col_offset": 71, "nodeName": "output_name", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "_train_convert_evaluate_assert", "type": "Callable[..., Any]"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "product", "type": "Callable"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "it", "type": "int"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "arg", "type": "Dict[nothing, nothing]"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "DecisionTreeRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "DecisionTreeRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 53, "col_offset": 65, "nodeName": "scikit_params", "type": "Dict[str, Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "self", "type": "DecisionTreeRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "self", "type": "DecisionTreeRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "skl_converter", "type": "module"}, {"lineNumber": 57, "col_offset": 51, "nodeName": "self", "type": "DecisionTreeRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 57, "col_offset": 71, "nodeName": "self", "type": "DecisionTreeRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "macos_version", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "X", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "predict", "type": "Any"}, {"lineNumber": 62, "col_offset": 52, "nodeName": "X", "type": "Any"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "evaluate_regressor", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "spec", "type": "Any"}, {"lineNumber": 65, "col_offset": 47, "nodeName": "df", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "_check_metrics", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "scikit_params", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "DecisionTreeRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "itertools", "type": "module"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 91, "col_offset": 49, "nodeName": "p", "type": "Tuple[Any, ...]"}, {"lineNumber": 91, "col_offset": 54, "nodeName": "product", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "_train_convert_evaluate_assert", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "pd", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "self", "type": "DecisionTreeRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 61, "col_offset": 46, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 62, "col_offset": 52, "nodeName": "self", "type": "DecisionTreeRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "DecisionTreeRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "values", "type": "Callable"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "p", "type": "Tuple[Any, ...]"}, {"lineNumber": 93, "col_offset": 71, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 93, "col_offset": 75, "nodeName": "args", "type": "List[Dict[nothing, nothing]]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 50, "nodeName": "arg", "type": "Dict[nothing, nothing]"}, {"lineNumber": 45, "col_offset": 54, "nodeName": "params", "type": "Any"}, {"lineNumber": 45, "col_offset": 62, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 47, "col_offset": 54, "nodeName": "params", "type": "Any"}, {"lineNumber": 47, "col_offset": 62, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 61, "col_offset": 46, "nodeName": "self", "type": "DecisionTreeRegressorBostonHousingScikitNumericTest"}, {"lineNumber": 90, "col_offset": 37, "nodeName": "options", "type": "Dict[Any, Any]"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "options", "type": "Dict[Any, Any]"}]