[{"lineNumber": 14, "col_offset": 3, "nodeName": "HAS_SKLEARN", "type": "bool"}, {"lineNumber": 24, "col_offset": 30, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "setUpClass", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "test_conversion_one_column", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "test_conversion_many_columns", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "test_conversion_one_column_of_several", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "test_boston_OHE", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "test_boston_OHE_pipeline", "type": "Callable[[Any], Any]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "test_random_sparse_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "test_conversion_bad_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 30, "nodeName": "unittest", "type": "module"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "scikit_data", "type": "List[List[int]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "scikit_data_multiple_cols", "type": "List[List[int]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "scikit_data", "type": "numpy.ndarray"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "scikit_data_multiple_cols", "type": "numpy.ndarray"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "categorical_features", "type": "List[int]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "categorical_features", "type": "List[int]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "n_columns", "type": "int"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "n_categories", "type": "int"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "categories", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "dt", "type": "str"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "scikit_data", "type": "List[List[int]]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Type[Any]"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "scikit_data", "type": "List[List[int]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "Type[Any]"}, {"lineNumber": 41, "col_offset": 41, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 41, "col_offset": 52, "nodeName": "scikit_data_multiple_cols", "type": "List[List[int]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "Type[Any]"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "scikit_data", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "test_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "scikit_output", "type": "List[Dict[str, Any]]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "metrics", "type": "Dict[str, int]"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "scikit_data_multiple_cols", "type": "numpy.ndarray"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "test_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "scikit_output", "type": "List[Dict[str, Any]]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "metrics", "type": "Dict[str, int]"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "test_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "scikit_output", "type": "List[Dict[str, Any]]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "metrics", "type": "Dict[str, int]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "load_boston", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "spec", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "input_data", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "output_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "load_boston", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "spec", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "randint", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "sparse", "type": "bool"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "sparse", "type": "bool"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "spec", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "spec", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "macos_version", "type": "Callable[[], Tuple[int, ...]]"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "evaluate_transformer", "type": "Callable[..., Dict[str, int]]"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "spec", "type": "Any"}, {"lineNumber": 53, "col_offset": 49, "nodeName": "test_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 53, "col_offset": 60, "nodeName": "scikit_output", "type": "List[Dict[str, Any]]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "spec", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "description", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "macos_version", "type": "Callable[[], Tuple[int, ...]]"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "evaluate_transformer", "type": "Callable[..., Dict[str, int]]"}, {"lineNumber": 67, "col_offset": 43, "nodeName": "spec", "type": "Any"}, {"lineNumber": 67, "col_offset": 49, "nodeName": "test_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 67, "col_offset": 60, "nodeName": "scikit_output", "type": "List[Dict[str, Any]]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "spec", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "description", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "scikit_data_multiple_cols", "type": "numpy.ndarray"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "macos_version", "type": "Callable[[], Tuple[int, ...]]"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "evaluate_transformer", "type": "Callable[..., Dict[str, int]]"}, {"lineNumber": 81, "col_offset": 43, "nodeName": "spec", "type": "Any"}, {"lineNumber": 81, "col_offset": 49, "nodeName": "test_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 81, "col_offset": 60, "nodeName": "scikit_output", "type": "List[Dict[str, Any]]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "spec", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "assertIsNotNone", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "description", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "target", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "result", "type": "Dict[str, int]"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 118, "col_offset": 40, "nodeName": "target", "type": "Any"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "input_data", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "output_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "result", "type": "Dict[str, int]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "rn", "type": "Any"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "rn", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "categorical_features", "type": "Union[str, List[int]]"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "categorical_features", "type": "Union[str, List[int]]"}, {"lineNumber": 199, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 201, "col_offset": 35, "nodeName": "model", "type": "Any"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "LinearRegression", "type": "Any"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 207, "col_offset": 35, "nodeName": "model", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 51, "col_offset": 45, "nodeName": "row", "type": "Any"}, {"lineNumber": 51, "col_offset": 54, "nodeName": "row", "type": "Any"}, {"lineNumber": 51, "col_offset": 61, "nodeName": "scikit_data", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "row", "type": "Any"}, {"lineNumber": 52, "col_offset": 47, "nodeName": "row", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "spec", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "metrics", "type": "Dict[str, int]"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 65, "col_offset": 72, "nodeName": "row", "type": "Any"}, {"lineNumber": 65, "col_offset": 79, "nodeName": "scikit_data_multiple_cols", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "row", "type": "Any"}, {"lineNumber": 66, "col_offset": 46, "nodeName": "row", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "spec", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "metrics", "type": "Dict[str, int]"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 79, "col_offset": 72, "nodeName": "row", "type": "Any"}, {"lineNumber": 79, "col_offset": 79, "nodeName": "scikit_data_multiple_cols", "type": "numpy.ndarray"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "row", "type": "Any"}, {"lineNumber": 80, "col_offset": 46, "nodeName": "row", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "spec", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "metrics", "type": "Dict[str, int]"}, {"lineNumber": 92, "col_offset": 57, "nodeName": "categorical_features", "type": "List[int]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 93, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 98, "col_offset": 65, "nodeName": "row", "type": "Any"}, {"lineNumber": 98, "col_offset": 72, "nodeName": "data", "type": "Any"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "row", "type": "Any"}, {"lineNumber": 99, "col_offset": 45, "nodeName": "row", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "macos_version", "type": "Callable[[], Tuple[int, ...]]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "evaluate_transformer", "type": "Callable[..., Dict[str, int]]"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "spec", "type": "Any"}, {"lineNumber": 102, "col_offset": 52, "nodeName": "input_data", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 102, "col_offset": 64, "nodeName": "output_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "copy", "type": "Any"}, {"lineNumber": 118, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "macos_version", "type": "Callable[[], Tuple[int, ...]]"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "evaluate_transformer", "type": "Callable[..., Dict[str, int]]"}, {"lineNumber": 127, "col_offset": 46, "nodeName": "spec", "type": "Any"}, {"lineNumber": 127, "col_offset": 52, "nodeName": "input_data", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 127, "col_offset": 64, "nodeName": "output_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 138, "col_offset": 47, "nodeName": "n_columns", "type": "int"}, {"lineNumber": 138, "col_offset": 58, "nodeName": "n_categories", "type": "int"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 56, "nodeName": "dt", "type": "str"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "spec", "type": "Any"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "spec", "type": "Any"}, {"lineNumber": 199, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 19, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 51, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 54, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "row", "type": "Any"}, {"lineNumber": 65, "col_offset": 60, "nodeName": "row", "type": "Any"}, {"lineNumber": 65, "col_offset": 79, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 53, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "row", "type": "Any"}, {"lineNumber": 79, "col_offset": 60, "nodeName": "row", "type": "Any"}, {"lineNumber": 79, "col_offset": 79, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 53, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "model", "type": "Any"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 98, "col_offset": 55, "nodeName": "row", "type": "Any"}, {"lineNumber": 98, "col_offset": 72, "nodeName": "data", "type": "Any"}, {"lineNumber": 99, "col_offset": 52, "nodeName": "transform", "type": "Any"}, {"lineNumber": 99, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "result", "type": "Dict[str, int]"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "model", "type": "Any"}, {"lineNumber": 121, "col_offset": 42, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 124, "col_offset": 69, "nodeName": "row", "type": "Any"}, {"lineNumber": 124, "col_offset": 76, "nodeName": "data", "type": "Any"}, {"lineNumber": 125, "col_offset": 40, "nodeName": "row", "type": "Any"}, {"lineNumber": 125, "col_offset": 49, "nodeName": "row", "type": "Any"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "result", "type": "Dict[str, int]"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 148, "col_offset": 62, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 148, "col_offset": 74, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 148, "col_offset": 86, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "copy", "type": "Any"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "fit", "type": "Any"}, {"lineNumber": 155, "col_offset": 30, "nodeName": "X", "type": "Any"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 43, "nodeName": "model", "type": "Any"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "X_out", "type": "Any"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "sparse", "type": "bool"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "input_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 166, "col_offset": 24, "nodeName": "output_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "result", "type": "Dict[str, int]"}, {"lineNumber": 174, "col_offset": 63, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 174, "col_offset": 75, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 174, "col_offset": 87, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "copy", "type": "Any"}, {"lineNumber": 177, "col_offset": 28, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "fit", "type": "Any"}, {"lineNumber": 180, "col_offset": 30, "nodeName": "X", "type": "Any"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "X_out", "type": "Any"}, {"lineNumber": 187, "col_offset": 27, "nodeName": "sparse", "type": "bool"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "input_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "output_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "result", "type": "Dict[str, int]"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 99, "col_offset": 52, "nodeName": "model", "type": "Any"}, {"lineNumber": 99, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "Normalizer", "type": "Any"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 121, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 124, "col_offset": 35, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 124, "col_offset": 39, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 124, "col_offset": 59, "nodeName": "row", "type": "Any"}, {"lineNumber": 124, "col_offset": 76, "nodeName": "data", "type": "Any"}, {"lineNumber": 125, "col_offset": 56, "nodeName": "transform", "type": "Any"}, {"lineNumber": 144, "col_offset": 37, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "_X", "type": "numpy.ndarray"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 152, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 152, "col_offset": 47, "nodeName": "dt", "type": "str"}, {"lineNumber": 154, "col_offset": 65, "nodeName": "categorical_features", "type": "Union[List[int], str]"}, {"lineNumber": 154, "col_offset": 94, "nodeName": "sparse", "type": "bool"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "macos_version", "type": "Callable[[], Tuple[int, ...]]"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "transform", "type": "Any"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "X", "type": "Any"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "X_out", "type": "Any"}, {"lineNumber": 168, "col_offset": 33, "nodeName": "evaluate_transformer", "type": "Callable[..., Dict[str, int]]"}, {"lineNumber": 168, "col_offset": 54, "nodeName": "spec", "type": "Any"}, {"lineNumber": 168, "col_offset": 60, "nodeName": "input_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 168, "col_offset": 72, "nodeName": "output_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "_X", "type": "numpy.ndarray"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "macos_version", "type": "Callable[[], Tuple[int, ...]]"}, {"lineNumber": 186, "col_offset": 32, "nodeName": "transform", "type": "Any"}, {"lineNumber": 186, "col_offset": 48, "nodeName": "X", "type": "Any"}, {"lineNumber": 188, "col_offset": 28, "nodeName": "X_out", "type": "Any"}, {"lineNumber": 193, "col_offset": 33, "nodeName": "evaluate_transformer", "type": "Callable[..., Dict[str, int]]"}, {"lineNumber": 193, "col_offset": 54, "nodeName": "spec", "type": "Any"}, {"lineNumber": 193, "col_offset": 60, "nodeName": "input_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 193, "col_offset": 72, "nodeName": "output_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 52, "col_offset": 54, "nodeName": "transform", "type": "Any"}, {"lineNumber": 52, "col_offset": 77, "nodeName": "scikit_data", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 53, "nodeName": "transform", "type": "Any"}, {"lineNumber": 66, "col_offset": 76, "nodeName": "scikit_data_multiple_cols", "type": "numpy.ndarray"}, {"lineNumber": 80, "col_offset": 53, "nodeName": "transform", "type": "Any"}, {"lineNumber": 80, "col_offset": 76, "nodeName": "scikit_data_multiple_cols", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 75, "nodeName": "categorical_features", "type": "List[int]"}, {"lineNumber": 124, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 125, "col_offset": 56, "nodeName": "model", "type": "Any"}, {"lineNumber": 125, "col_offset": 72, "nodeName": "copy", "type": "Any"}, {"lineNumber": 152, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "model", "type": "Any"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "todense", "type": "Any"}, {"lineNumber": 165, "col_offset": 48, "nodeName": "row", "type": "Any"}, {"lineNumber": 165, "col_offset": 57, "nodeName": "row", "type": "Any"}, {"lineNumber": 165, "col_offset": 64, "nodeName": "X", "type": "Any"}, {"lineNumber": 166, "col_offset": 48, "nodeName": "row", "type": "Any"}, {"lineNumber": 166, "col_offset": 57, "nodeName": "row", "type": "Any"}, {"lineNumber": 166, "col_offset": 64, "nodeName": "X_out", "type": "Any"}, {"lineNumber": 170, "col_offset": 31, "nodeName": "result", "type": "Dict[str, int]"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 183, "col_offset": 43, "nodeName": "model", "type": "Any"}, {"lineNumber": 186, "col_offset": 32, "nodeName": "model", "type": "Any"}, {"lineNumber": 188, "col_offset": 36, "nodeName": "todense", "type": "Any"}, {"lineNumber": 190, "col_offset": 48, "nodeName": "row", "type": "Any"}, {"lineNumber": 190, "col_offset": 57, "nodeName": "row", "type": "Any"}, {"lineNumber": 190, "col_offset": 64, "nodeName": "X", "type": "Any"}, {"lineNumber": 191, "col_offset": 48, "nodeName": "row", "type": "Any"}, {"lineNumber": 191, "col_offset": 57, "nodeName": "row", "type": "Any"}, {"lineNumber": 191, "col_offset": 64, "nodeName": "X_out", "type": "Any"}, {"lineNumber": 195, "col_offset": 31, "nodeName": "result", "type": "Dict[str, int]"}, {"lineNumber": 52, "col_offset": 54, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 52, "col_offset": 77, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 53, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 66, "col_offset": 76, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 53, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 80, "col_offset": 76, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 72, "nodeName": "data", "type": "Any"}, {"lineNumber": 158, "col_offset": 60, "nodeName": "Array", "type": "Type[coremltools.models.datatypes.Array]"}, {"lineNumber": 158, "col_offset": 66, "nodeName": "n_columns", "type": "int"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "X_out", "type": "Any"}, {"lineNumber": 177, "col_offset": 46, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 178, "col_offset": 53, "nodeName": "Normalizer", "type": "Any"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 188, "col_offset": 36, "nodeName": "X_out", "type": "Any"}, {"lineNumber": 125, "col_offset": 72, "nodeName": "data", "type": "Any"}, {"lineNumber": 177, "col_offset": 83, "nodeName": "categorical_features", "type": "Union[List[int], str]"}, {"lineNumber": 177, "col_offset": 112, "nodeName": "sparse", "type": "bool"}, {"lineNumber": 183, "col_offset": 60, "nodeName": "Array", "type": "Type[coremltools.models.datatypes.Array]"}, {"lineNumber": 183, "col_offset": 66, "nodeName": "n_columns", "type": "int"}]