[{"lineNumber": 15, "col_offset": 3, "nodeName": "HAS_SKLEARN", "type": "bool"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "setUpClass", "type": "Callable[[Any], Any]"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "test_conversion_bad_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "unittest", "type": "module"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "scikit_data", "type": "List[List[int]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "scikit_data_multiple_cols", "type": "List[List[int]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "scikit_data", "type": "numpy.ndarray"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "scikit_data_multiple_cols", "type": "numpy.ndarray"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "test_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "metrics", "type": "Dict[str, int]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "metrics", "type": "Dict[str, int]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "spec", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "metrics", "type": "Dict[str, int]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "categorical_features", "type": "List[int]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "categorical_features", "type": "List[int]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "n_columns", "type": "int"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "n_categories", "type": "int"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "categories", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "dt", "type": "str"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "scikit_data", "type": "List[List[int]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "Type[Any]"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "scikit_data", "type": "List[List[int]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "Type[Any]"}, {"lineNumber": 42, "col_offset": 41, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 42, "col_offset": 52, "nodeName": "scikit_data_multiple_cols", "type": "List[List[int]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "Type[Any]"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "evaluate_transformer", "type": "Callable[..., Dict[str, int]]"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "spec", "type": "Any"}, {"lineNumber": 57, "col_offset": 45, "nodeName": "test_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 57, "col_offset": 56, "nodeName": "scikit_output", "type": "List[Dict[str, Any]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "spec", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "description", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "scikit_data_multiple_cols", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 76, "col_offset": 18, "nodeName": "evaluate_transformer", "type": "Callable[..., Dict[str, int]]"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "spec", "type": "Any"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "test_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 76, "col_offset": 56, "nodeName": "scikit_output", "type": "List[Dict[str, Any]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "spec", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "description", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "fit", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "evaluate_transformer", "type": "Callable[..., Dict[str, int]]"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "spec", "type": "Any"}, {"lineNumber": 94, "col_offset": 45, "nodeName": "test_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 94, "col_offset": 56, "nodeName": "scikit_output", "type": "List[Dict[str, Any]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "spec", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertIsNotNone", "type": "Any"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "description", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertEquals", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "load_boston", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "spec", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "output_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "result", "type": "Dict[str, int]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "load_boston", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "spec", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "input_data", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "output_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "result", "type": "Dict[str, int]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "randint", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "sparse", "type": "bool"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "sparse", "type": "bool"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "spec", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "spec", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 40, "nodeName": "row", "type": "Any"}, {"lineNumber": 53, "col_offset": 49, "nodeName": "row", "type": "Any"}, {"lineNumber": 53, "col_offset": 56, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "spec", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "metrics", "type": "Dict[str, int]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "row", "type": "Any"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "scikit_data_multiple_cols", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "spec", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "metrics", "type": "Dict[str, int]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "scikit_data_multiple_cols", "type": "Any"}, {"lineNumber": 91, "col_offset": 38, "nodeName": "row", "type": "Any"}, {"lineNumber": 91, "col_offset": 45, "nodeName": "scikit_data_multiple_cols", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "spec", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "metrics", "type": "Dict[str, int]"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "target", "type": "Any"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "evaluate_transformer", "type": "Callable[..., Dict[str, int]]"}, {"lineNumber": 118, "col_offset": 42, "nodeName": "spec", "type": "Any"}, {"lineNumber": 118, "col_offset": 48, "nodeName": "input_data", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 118, "col_offset": 60, "nodeName": "output_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "fit", "type": "Any"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "target", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "get_spec", "type": "Any"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "evaluate_transformer", "type": "Callable[..., Dict[str, int]]"}, {"lineNumber": 146, "col_offset": 42, "nodeName": "spec", "type": "Any"}, {"lineNumber": 146, "col_offset": 48, "nodeName": "input_data", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 146, "col_offset": 60, "nodeName": "output_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "rn", "type": "Any"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "rn", "type": "Any"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 226, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 226, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 228, "col_offset": 35, "nodeName": "model", "type": "Any"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 231, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "LinearRegression", "type": "Any"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 234, "col_offset": 35, "nodeName": "model", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 53, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "row", "type": "Any"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "row", "type": "Any"}, {"lineNumber": 91, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 39, "nodeName": "categorical_features", "type": "List[int]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "row", "type": "Any"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 116, "col_offset": 35, "nodeName": "row", "type": "Any"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "row", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "result", "type": "Dict[str, int]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "copy", "type": "Any"}, {"lineNumber": 138, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 143, "col_offset": 65, "nodeName": "row", "type": "Any"}, {"lineNumber": 143, "col_offset": 72, "nodeName": "data", "type": "Any"}, {"lineNumber": 144, "col_offset": 36, "nodeName": "row", "type": "Any"}, {"lineNumber": 144, "col_offset": 45, "nodeName": "row", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "result", "type": "Dict[str, int]"}, {"lineNumber": 159, "col_offset": 47, "nodeName": "n_columns", "type": "int"}, {"lineNumber": 159, "col_offset": 58, "nodeName": "n_categories", "type": "int"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 56, "nodeName": "dt", "type": "str"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "X_out", "type": "Any"}, {"lineNumber": 186, "col_offset": 23, "nodeName": "sparse", "type": "bool"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "input_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "output_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "result", "type": "Dict[str, int]"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "X_out", "type": "Any"}, {"lineNumber": 214, "col_offset": 23, "nodeName": "sparse", "type": "bool"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "input_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "output_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "result", "type": "Dict[str, int]"}, {"lineNumber": 226, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 35, "nodeName": "model", "type": "Any"}, {"lineNumber": 112, "col_offset": 42, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 116, "col_offset": 51, "nodeName": "transform", "type": "Any"}, {"lineNumber": 116, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "model", "type": "Any"}, {"lineNumber": 141, "col_offset": 42, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 143, "col_offset": 31, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 143, "col_offset": 35, "nodeName": "feature_names", "type": "Any"}, {"lineNumber": 143, "col_offset": 55, "nodeName": "row", "type": "Any"}, {"lineNumber": 143, "col_offset": 72, "nodeName": "data", "type": "Any"}, {"lineNumber": 144, "col_offset": 52, "nodeName": "transform", "type": "Any"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 169, "col_offset": 62, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 170, "col_offset": 45, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 170, "col_offset": 58, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "copy", "type": "Any"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 176, "col_offset": 28, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "fit", "type": "Any"}, {"lineNumber": 179, "col_offset": 30, "nodeName": "X", "type": "Any"}, {"lineNumber": 182, "col_offset": 27, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "transform", "type": "Any"}, {"lineNumber": 185, "col_offset": 44, "nodeName": "X", "type": "Any"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "X_out", "type": "Any"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "evaluate_transformer", "type": "Callable[..., Dict[str, int]]"}, {"lineNumber": 192, "col_offset": 50, "nodeName": "spec", "type": "Any"}, {"lineNumber": 192, "col_offset": 56, "nodeName": "input_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 192, "col_offset": 68, "nodeName": "output_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 198, "col_offset": 62, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 199, "col_offset": 45, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 199, "col_offset": 58, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "copy", "type": "Any"}, {"lineNumber": 202, "col_offset": 28, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "fit", "type": "Any"}, {"lineNumber": 207, "col_offset": 30, "nodeName": "X", "type": "Any"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "transform", "type": "Any"}, {"lineNumber": 213, "col_offset": 44, "nodeName": "X", "type": "Any"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "X_out", "type": "Any"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "evaluate_transformer", "type": "Callable[..., Dict[str, int]]"}, {"lineNumber": 220, "col_offset": 50, "nodeName": "spec", "type": "Any"}, {"lineNumber": 220, "col_offset": 56, "nodeName": "input_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 220, "col_offset": 68, "nodeName": "output_data", "type": "List[Dict[str, Any]]"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "transform", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "scikit_data", "type": "Any"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "transform", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "scikit_data_multiple_cols", "type": "Any"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "transform", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "scikit_data_multiple_cols", "type": "Any"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 112, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 116, "col_offset": 51, "nodeName": "model", "type": "Any"}, {"lineNumber": 116, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "Normalizer", "type": "Any"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 141, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 143, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 144, "col_offset": 52, "nodeName": "model", "type": "Any"}, {"lineNumber": 144, "col_offset": 68, "nodeName": "copy", "type": "Any"}, {"lineNumber": 165, "col_offset": 37, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "_X", "type": "numpy.ndarray"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "X", "type": "Any"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 174, "col_offset": 47, "nodeName": "dt", "type": "str"}, {"lineNumber": 177, "col_offset": 45, "nodeName": "categorical_features", "type": "Union[List[int], str]"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "sparse", "type": "bool"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 182, "col_offset": 27, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "model", "type": "Any"}, {"lineNumber": 187, "col_offset": 32, "nodeName": "todense", "type": "Any"}, {"lineNumber": 189, "col_offset": 44, "nodeName": "row", "type": "Any"}, {"lineNumber": 189, "col_offset": 53, "nodeName": "row", "type": "Any"}, {"lineNumber": 189, "col_offset": 60, "nodeName": "X", "type": "Any"}, {"lineNumber": 190, "col_offset": 44, "nodeName": "row", "type": "Any"}, {"lineNumber": 190, "col_offset": 53, "nodeName": "row", "type": "Any"}, {"lineNumber": 190, "col_offset": 60, "nodeName": "X_out", "type": "Any"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "result", "type": "Dict[str, int]"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "_X", "type": "numpy.ndarray"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "model", "type": "Any"}, {"lineNumber": 215, "col_offset": 32, "nodeName": "todense", "type": "Any"}, {"lineNumber": 217, "col_offset": 44, "nodeName": "row", "type": "Any"}, {"lineNumber": 217, "col_offset": 53, "nodeName": "row", "type": "Any"}, {"lineNumber": 217, "col_offset": 60, "nodeName": "X", "type": "Any"}, {"lineNumber": 218, "col_offset": 44, "nodeName": "row", "type": "Any"}, {"lineNumber": 218, "col_offset": 53, "nodeName": "row", "type": "Any"}, {"lineNumber": 218, "col_offset": 60, "nodeName": "X_out", "type": "Any"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "result", "type": "Dict[str, int]"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "scikit_model", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 41, "nodeName": "categorical_features", "type": "List[int]"}, {"lineNumber": 144, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 174, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 32, "nodeName": "X_out", "type": "Any"}, {"lineNumber": 210, "col_offset": 27, "nodeName": "convert", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 215, "col_offset": 32, "nodeName": "X_out", "type": "Any"}, {"lineNumber": 144, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 183, "col_offset": 41, "nodeName": "Array", "type": "Type[coremltools.models.datatypes.Array]"}, {"lineNumber": 183, "col_offset": 47, "nodeName": "n_columns", "type": "int"}, {"lineNumber": 203, "col_offset": 33, "nodeName": "OneHotEncoder", "type": "Any"}, {"lineNumber": 205, "col_offset": 60, "nodeName": "Normalizer", "type": "Any"}, {"lineNumber": 210, "col_offset": 27, "nodeName": "sklearn", "type": "module"}, {"lineNumber": 204, "col_offset": 49, "nodeName": "categorical_features", "type": "Union[List[int], str]"}, {"lineNumber": 205, "col_offset": 35, "nodeName": "sparse", "type": "bool"}, {"lineNumber": 211, "col_offset": 41, "nodeName": "Array", "type": "Type[coremltools.models.datatypes.Array]"}, {"lineNumber": 211, "col_offset": 47, "nodeName": "n_columns", "type": "int"}]