[{"lineNumber": 11, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "test_interpolate_intervals", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "test_intervals_to_samples", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "test_intersect_files", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 65, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "intervals", "type": "numpy.ndarray"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "time_points", "type": "List[float]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "expected_ans", "type": "List[str]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "intervals", "type": "numpy.ndarray"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "expected_times", "type": "List[float]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "expected_labels", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "expected_times", "type": "List[float]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "expected_labels", "type": "List[str]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "flist1", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "flist2", "type": "List[str]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "expected_ans", "type": "List[str]"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "intervals_to_samples", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "intervals", "type": "numpy.ndarray"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "expected_times", "type": "List[float]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "expected_labels", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "intervals_to_samples", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "intervals", "type": "numpy.ndarray"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "expected_times", "type": "List[float]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "expected_labels", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "sublist1", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "sublist2", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "intersect_files", "type": "Callable[[Any, Any], List[List[Any]]]"}, {"lineNumber": 57, "col_offset": 50, "nodeName": "flist1", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 58, "nodeName": "flist2", "type": "List[str]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "sublist1", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "sublist2", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "sublist1", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "sublist2", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "intersect_files", "type": "Callable[[Any, Any], List[List[Any]]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "sublist1", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "sublist2", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "interpolate_intervals", "type": "Callable[..., List[Any]]"}, {"lineNumber": 28, "col_offset": 39, "nodeName": "intervals", "type": "numpy.ndarray"}, {"lineNumber": 28, "col_offset": 50, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 28, "col_offset": 58, "nodeName": "time_points", "type": "List[float]"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "util", "type": "module"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "result", "type": "Tuple[Any, Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "result", "type": "Tuple[Any, Any]"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "util", "type": "module"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "result", "type": "Tuple[Any, Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "result", "type": "Tuple[Any, Any]"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "util", "type": "module"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "util", "type": "module"}, {"lineNumber": 60, "col_offset": 50, "nodeName": "flist1", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 62, "nodeName": "flist2", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "UtilTests"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "n", "type": "int"}, {"lineNumber": 24, "col_offset": 47, "nodeName": "n", "type": "int"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "util", "type": "module"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "n", "type": "int"}, {"lineNumber": 36, "col_offset": 47, "nodeName": "n", "type": "int"}, {"lineNumber": 24, "col_offset": 34, "nodeName": "n", "type": "int"}, {"lineNumber": 24, "col_offset": 52, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "n", "type": "int"}, {"lineNumber": 36, "col_offset": 52, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 24, "col_offset": 58, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 24, "col_offset": 62, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 36, "col_offset": 58, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 36, "col_offset": 62, "nodeName": "labels", "type": "List[str]"}]