[{"lineNumber": 11, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "test_load_pattern", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "test_standard_FPR", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "test_establishment_FPR", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "test_occurrence_FPR", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "test_three_layer_FPR", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 61, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "delta", "type": "float"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "P", "type": "List[nothing]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 14, "col_offset": 21, "nodeName": "load_patterns", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "load_patterns", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 18, "col_offset": 22, "nodeName": "load_patterns", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "load_patterns", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "load_patterns", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "F", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "P", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "R", "type": "Any"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "standard_FPR", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 39, "nodeName": "ref_P", "type": "List[nothing]"}, {"lineNumber": 38, "col_offset": 51, "nodeName": "est_P", "type": "List[nothing]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "F", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "P", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "R", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "F", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "P", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "R", "type": "Any"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "establishment_FPR", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 44, "nodeName": "ref_P", "type": "List[nothing]"}, {"lineNumber": 44, "col_offset": 56, "nodeName": "est_P", "type": "List[nothing]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "F", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "P", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "R", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "F", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "P", "type": "Any"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "R", "type": "Any"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "occurrence_FPR", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "ref2_P", "type": "List[nothing]"}, {"lineNumber": 50, "col_offset": 54, "nodeName": "est2_P", "type": "List[nothing]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "F", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "P", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "R", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "F", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "P", "type": "Any"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "R", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "three_layer_FPR", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "ref_P", "type": "List[nothing]"}, {"lineNumber": 56, "col_offset": 54, "nodeName": "est_P", "type": "List[nothing]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "F", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "P", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "R", "type": "Any"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 14, "col_offset": 21, "nodeName": "input_output", "type": "module"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "input_output", "type": "module"}, {"lineNumber": 18, "col_offset": 22, "nodeName": "input_output", "type": "module"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "input_output", "type": "module"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "input_output", "type": "module"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "P", "type": "List[nothing]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "pattern", "type": "module"}, {"lineNumber": 38, "col_offset": 39, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 38, "col_offset": 51, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 39, "col_offset": 49, "nodeName": "delta", "type": "float"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 40, "col_offset": 46, "nodeName": "delta", "type": "float"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 41, "col_offset": 49, "nodeName": "delta", "type": "float"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "pattern", "type": "module"}, {"lineNumber": 44, "col_offset": 44, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 44, "col_offset": 56, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 45, "col_offset": 49, "nodeName": "delta", "type": "float"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 46, "col_offset": 49, "nodeName": "delta", "type": "float"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "delta", "type": "float"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "pattern", "type": "module"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 50, "col_offset": 54, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "delta", "type": "float"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 52, "col_offset": 49, "nodeName": "delta", "type": "float"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 53, "col_offset": 49, "nodeName": "delta", "type": "float"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "pattern", "type": "module"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 56, "col_offset": 54, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 57, "col_offset": 49, "nodeName": "delta", "type": "float"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 58, "col_offset": 49, "nodeName": "delta", "type": "float"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 59, "col_offset": 49, "nodeName": "delta", "type": "float"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "P", "type": "List[nothing]"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "P", "type": "List[nothing]"}, {"lineNumber": 39, "col_offset": 49, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 40, "col_offset": 46, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 41, "col_offset": 49, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 45, "col_offset": 49, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 46, "col_offset": 49, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 52, "col_offset": 49, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 53, "col_offset": 49, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 57, "col_offset": 49, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 58, "col_offset": 49, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 59, "col_offset": 49, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "P", "type": "List[nothing]"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "P", "type": "List[nothing]"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "P", "type": "List[nothing]"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "P", "type": "List[nothing]"}]