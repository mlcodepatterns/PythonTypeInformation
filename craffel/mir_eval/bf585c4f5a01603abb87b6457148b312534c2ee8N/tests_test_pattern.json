[{"lineNumber": 49, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "test_load_pattern", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "test_standard_FPR", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "test_establishment_FPR", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "test_occurrence_FPR", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "test_three_layer_FPR", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "test_first_five_three_layer_P", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "test_first_five_target_proportion", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 116, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "delta", "type": "float"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "results", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "P", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "P", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "R", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "R", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "load_patterns", "type": "Callable[[Any], List[List[List[Tuple[float, float]]]]]"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "load_patterns", "type": "Callable[[Any], List[List[List[Tuple[float, float]]]]]"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "load_patterns", "type": "Callable[[Any], List[List[List[Tuple[float, float]]]]]"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "load_patterns", "type": "Callable[[Any], List[List[List[Tuple[float, float]]]]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "load", "type": "Callable[[IO[str]], Any]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "load_patterns", "type": "Callable[[Any], List[List[List[Tuple[float, float]]]]]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "F", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "P", "type": "float"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "R", "type": "float"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "standard_FPR", "type": "Callable[..., Tuple[Any, float, float]]"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "ref_P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 77, "col_offset": 51, "nodeName": "est_P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "F", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "P", "type": "float"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "R", "type": "float"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "F", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "P", "type": "Any"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "R", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "establishment_FPR", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "ref_P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 83, "col_offset": 56, "nodeName": "est_P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "F", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "P", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "R", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "F", "type": "Any"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "P", "type": "Any"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "R", "type": "Any"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "occurrence_FPR", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "ref2_P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 89, "col_offset": 54, "nodeName": "est2_P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "F", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "P", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "R", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "F", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "P", "type": "Any"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "R", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "occurrence_FPR", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "ref2_P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "est2_P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "F", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "P", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "R", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "F", "type": "Any"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "P", "type": "Any"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "R", "type": "Any"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "three_layer_FPR", "type": "Callable[[Any, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "ref_P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 99, "col_offset": 54, "nodeName": "est_P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "F", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "P", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "R", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "first_n_three_layer_P", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "ref_P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 105, "col_offset": 54, "nodeName": "est_P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "P", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "first_n_three_layer_P", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "ref2_P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 107, "col_offset": 55, "nodeName": "est2_P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "P", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "first_n_target_proportion_R", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 48, "nodeName": "ref_P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 111, "col_offset": 60, "nodeName": "est_P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "R", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "first_n_target_proportion_R", "type": "Callable[..., Any]"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "ref2_P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 113, "col_offset": 61, "nodeName": "est2_P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "R", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "io", "type": "module"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "io", "type": "module"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "io", "type": "module"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "io", "type": "module"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "pickle", "type": "module"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "io", "type": "module"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 74, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "pattern", "type": "module"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 77, "col_offset": 51, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 78, "col_offset": 66, "nodeName": "delta", "type": "float"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 79, "col_offset": 66, "nodeName": "delta", "type": "float"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 80, "col_offset": 66, "nodeName": "delta", "type": "float"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "pattern", "type": "module"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 83, "col_offset": 56, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 84, "col_offset": 65, "nodeName": "delta", "type": "float"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 85, "col_offset": 65, "nodeName": "delta", "type": "float"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 86, "col_offset": 65, "nodeName": "delta", "type": "float"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "pattern", "type": "module"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 89, "col_offset": 54, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 90, "col_offset": 68, "nodeName": "delta", "type": "float"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 91, "col_offset": 68, "nodeName": "delta", "type": "float"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 92, "col_offset": 68, "nodeName": "delta", "type": "float"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "pattern", "type": "module"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 94, "col_offset": 67, "nodeName": "delta", "type": "float"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 95, "col_offset": 67, "nodeName": "delta", "type": "float"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 96, "col_offset": 67, "nodeName": "delta", "type": "float"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "pattern", "type": "module"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 99, "col_offset": 54, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 100, "col_offset": 66, "nodeName": "delta", "type": "float"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 101, "col_offset": 65, "nodeName": "delta", "type": "float"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 102, "col_offset": 65, "nodeName": "delta", "type": "float"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "pattern", "type": "module"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 105, "col_offset": 54, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 106, "col_offset": 66, "nodeName": "delta", "type": "float"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "pattern", "type": "module"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 107, "col_offset": 55, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 108, "col_offset": 68, "nodeName": "delta", "type": "float"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "pattern", "type": "module"}, {"lineNumber": 111, "col_offset": 48, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 111, "col_offset": 60, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 112, "col_offset": 66, "nodeName": "delta", "type": "float"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "pattern", "type": "module"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 113, "col_offset": 61, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 114, "col_offset": 68, "nodeName": "delta", "type": "float"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "results", "type": "Any"}, {"lineNumber": 78, "col_offset": 66, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "results", "type": "Any"}, {"lineNumber": 79, "col_offset": 66, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "results", "type": "Any"}, {"lineNumber": 80, "col_offset": 66, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "results", "type": "Any"}, {"lineNumber": 84, "col_offset": 65, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "results", "type": "Any"}, {"lineNumber": 85, "col_offset": 65, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "results", "type": "Any"}, {"lineNumber": 86, "col_offset": 65, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "results", "type": "Any"}, {"lineNumber": 90, "col_offset": 68, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "results", "type": "Any"}, {"lineNumber": 91, "col_offset": 68, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "results", "type": "Any"}, {"lineNumber": 92, "col_offset": 68, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "results", "type": "Any"}, {"lineNumber": 94, "col_offset": 67, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "results", "type": "Any"}, {"lineNumber": 95, "col_offset": 67, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "results", "type": "Any"}, {"lineNumber": 96, "col_offset": 67, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 100, "col_offset": 34, "nodeName": "results", "type": "Any"}, {"lineNumber": 100, "col_offset": 66, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "results", "type": "Any"}, {"lineNumber": 101, "col_offset": 65, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "results", "type": "Any"}, {"lineNumber": 102, "col_offset": 65, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "results", "type": "Any"}, {"lineNumber": 106, "col_offset": 66, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "results", "type": "Any"}, {"lineNumber": 108, "col_offset": 68, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "results", "type": "Any"}, {"lineNumber": 112, "col_offset": 66, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "results", "type": "Any"}, {"lineNumber": 114, "col_offset": 68, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "P", "type": "List[List[List[Tuple[float, float]]]]"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 94, "col_offset": 34, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 100, "col_offset": 34, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "self", "type": "PatternTests"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "self", "type": "PatternTests"}]