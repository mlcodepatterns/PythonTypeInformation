[{"lineNumber": 26, "col_offset": 0, "nodeName": "process_arguments", "type": "Callable[[], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 69, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "parameters", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "ref_files", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "est_files", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "ref", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "est", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "ref_intervals", "type": "List[numpy.ndarray]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "ref_labels", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "est_intervals", "type": "List[numpy.ndarray]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "est_labels", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "scores", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "process_arguments", "type": "Callable[[], Any]"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "parameters", "type": "Dict[str, Any]"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "parameters", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "evaluate", "type": "Callable[..., collections.OrderedDict[str, Any]]"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "ref_intervals", "type": "List[numpy.ndarray]"}, {"lineNumber": 85, "col_offset": 56, "nodeName": "ref_labels", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "est_intervals", "type": "List[numpy.ndarray]"}, {"lineNumber": 86, "col_offset": 56, "nodeName": "est_labels", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "print_evaluation", "type": "Any"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "scores", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 93, "col_offset": 7, "nodeName": "parameters", "type": "Dict[str, Any]"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "load_labeled_intervals", "type": "Callable[..., Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "_", "type": "Any"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "_", "type": "Any"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "ref_files", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "load_labeled_intervals", "type": "Callable[..., Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "_", "type": "Any"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "_", "type": "Any"}, {"lineNumber": 78, "col_offset": 46, "nodeName": "est_files", "type": "Any"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "seg", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 79, "col_offset": 32, "nodeName": "seg", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "ref", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "seg", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "seg", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "ref", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "seg", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "seg", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 81, "col_offset": 39, "nodeName": "est", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "seg", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "seg", "type": "Tuple[numpy.ndarray, Any]"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "est", "type": "List[Tuple[numpy.ndarray, Any]]"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "hierarchy", "type": "module"}, {"lineNumber": 88, "col_offset": 10, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "eval_utilities", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "save_results", "type": "Any"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "scores", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 87, "col_offset": 48, "nodeName": "parameters", "type": "Dict[str, Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "parameters", "type": "Dict[str, Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "eval_utilities", "type": "Any"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "parameters", "type": "Dict[str, Any]"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "sys", "type": "module"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "parameters", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 17, "nodeName": "parameters", "type": "Dict[str, Any]"}]