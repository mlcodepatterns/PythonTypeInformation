[{"lineNumber": 9, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "test_pitch_class_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "test_scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "test_well_formedness", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "test_split", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "test_join", "type": "Callable[[Any], Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "test_rotate_bitmaps_to_roots", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "test_encode", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "test_encode_many", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "test_compare_thirds", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "test_compare_thirds_inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "test_compare_triads", "type": "Callable[[Any], Any]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "test_compare_triads_inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "test_compare_tetrads", "type": "Callable[[Any], Any]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "test_compare_tetrads_inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "test_compare_majmin", "type": "Callable[[Any], Any]"}, {"lineNumber": 240, "col_offset": 4, "nodeName": "test_compare_majmin_inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "test_compare_sevenths", "type": "Callable[[Any], Any]"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "test_compare_sevenths_inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 9, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 274, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "roots", "type": "List[int]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "ans", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "STRICT_BASS_INTERVALS", "type": "bool"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "STRICT_BASS_INTERVALS", "type": "bool"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "expected_roots", "type": "List[int]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "expected_basses", "type": "List[int]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "pitch_class_to_semitone", "type": "Callable[[Any], int]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "pitch_class_to_semitone", "type": "Callable[[Any], int]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "pitch_class_to_semitone", "type": "Callable[[Any], int]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "validate_chord_label", "type": "Callable[[Any], None]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "validate_chord_label", "type": "Callable[[Any], None]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "validate_chord_label", "type": "Callable[[Any], None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "validate_chord_label", "type": "Callable[[Any], None]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "validate_chord_label", "type": "Callable[[Any], None]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "validate_chord_label", "type": "Callable[[Any], None]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "ans", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "expected_bitmaps", "type": "List[List[int]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "quality", "type": "Any"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "notes", "type": "Any"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "bass", "type": "Any"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "encode", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "root", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "bass", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "quality", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "notes", "type": "Any"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "bass", "type": "Any"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "encode", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "root", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "bass", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "chord", "type": "module"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 130, "col_offset": 41, "nodeName": "encode", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "chord", "type": "module"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 133, "col_offset": 14, "nodeName": "quality", "type": "Any"}, {"lineNumber": 133, "col_offset": 23, "nodeName": "notes", "type": "Any"}, {"lineNumber": 133, "col_offset": 30, "nodeName": "bass", "type": "Any"}, {"lineNumber": 133, "col_offset": 37, "nodeName": "encode", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "bass", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "roots", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "qualities", "type": "Any"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "notes", "type": "Any"}, {"lineNumber": 160, "col_offset": 33, "nodeName": "basses", "type": "Any"}, {"lineNumber": 160, "col_offset": 42, "nodeName": "encode_many", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 160, "col_offset": 60, "nodeName": "input_list", "type": "List[str]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 161, "col_offset": 41, "nodeName": "expected_roots", "type": "List[int]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 45, "nodeName": "expected_qualities", "type": "List[List[int]]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 41, "nodeName": "expected_notes", "type": "List[List[int]]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "expected_basses", "type": "List[int]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 35, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 177, "col_offset": 35, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 190, "col_offset": 35, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 210, "col_offset": 35, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 217, "col_offset": 35, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 224, "col_offset": 35, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 231, "col_offset": 35, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 238, "col_offset": 35, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 245, "col_offset": 35, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 251, "col_offset": 35, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 258, "col_offset": 35, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 265, "col_offset": 25, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 265, "col_offset": 35, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "computed", "type": "List[Any]"}, {"lineNumber": 272, "col_offset": 35, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "pitch_class_to_semitone", "type": "Callable[[Any], int]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "pitch_class_to_semitone", "type": "Callable[[Any], int]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "pitch_class_to_semitone", "type": "Callable[[Any], int]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "pitch_class_to_semitone", "type": "Callable[[Any], int]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "pitch_class_to_semitone", "type": "Callable[[Any], int]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "validate_chord_label", "type": "Callable[[Any], None]"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "chord_label", "type": "str"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "split", "type": "Callable[..., List[Any]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "split", "type": "Callable[..., List[Any]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "split", "type": "Callable[..., List[Any]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "split", "type": "Callable[..., List[Any]]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "join", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "join", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "join", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "join", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "join", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "join", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "join", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "chord", "type": "module"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "chord", "type": "module"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 130, "col_offset": 41, "nodeName": "chord", "type": "module"}, {"lineNumber": 133, "col_offset": 37, "nodeName": "chord", "type": "module"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 160, "col_offset": 42, "nodeName": "chord", "type": "module"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "thirds", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "thirds", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "thirds", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "thirds_inv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "triads", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "triads", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 209, "col_offset": 20, "nodeName": "triads_inv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "tetrads", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "tetrads", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "tetrads_inv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "majmin", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 244, "col_offset": 20, "nodeName": "majmin_inv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "majmin_inv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 257, "col_offset": 20, "nodeName": "sevenths", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "sevenths", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "sevenths_inv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 77, "col_offset": 56, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 79, "col_offset": 38, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 80, "col_offset": 65, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 81, "col_offset": 53, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "rotate_bitmaps_to_roots", "type": "Callable[[Any, Any], numpy.ndarray]"}, {"lineNumber": 106, "col_offset": 44, "nodeName": "bitmaps", "type": "List[List[int]]"}, {"lineNumber": 106, "col_offset": 53, "nodeName": "roots", "type": "List[int]"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "quality", "type": "Any"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "notes", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "quality", "type": "Any"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "notes", "type": "Any"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "notes", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "roots", "type": "Any"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "qualities", "type": "Any"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "notes", "type": "Any"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "basses", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "chord", "type": "module"}, {"lineNumber": 170, "col_offset": 34, "nodeName": "r", "type": "str"}, {"lineNumber": 170, "col_offset": 39, "nodeName": "e", "type": "str"}, {"lineNumber": 170, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 170, "col_offset": 67, "nodeName": "r", "type": "str"}, {"lineNumber": 170, "col_offset": 70, "nodeName": "e", "type": "str"}, {"lineNumber": 170, "col_offset": 75, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 170, "col_offset": 79, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 170, "col_offset": 84, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "chord", "type": "module"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "r", "type": "str"}, {"lineNumber": 176, "col_offset": 39, "nodeName": "e", "type": "str"}, {"lineNumber": 176, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 176, "col_offset": 67, "nodeName": "r", "type": "str"}, {"lineNumber": 176, "col_offset": 70, "nodeName": "e", "type": "str"}, {"lineNumber": 176, "col_offset": 75, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 176, "col_offset": 79, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 176, "col_offset": 84, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "chord", "type": "module"}, {"lineNumber": 182, "col_offset": 34, "nodeName": "r", "type": "str"}, {"lineNumber": 182, "col_offset": 39, "nodeName": "e", "type": "str"}, {"lineNumber": 182, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 182, "col_offset": 67, "nodeName": "r", "type": "str"}, {"lineNumber": 182, "col_offset": 70, "nodeName": "e", "type": "str"}, {"lineNumber": 182, "col_offset": 75, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 182, "col_offset": 79, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 182, "col_offset": 84, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "chord", "type": "module"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "r", "type": "str"}, {"lineNumber": 189, "col_offset": 43, "nodeName": "e", "type": "str"}, {"lineNumber": 189, "col_offset": 47, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 189, "col_offset": 71, "nodeName": "r", "type": "str"}, {"lineNumber": 189, "col_offset": 74, "nodeName": "e", "type": "str"}, {"lineNumber": 189, "col_offset": 79, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 189, "col_offset": 83, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 189, "col_offset": 88, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "chord", "type": "module"}, {"lineNumber": 196, "col_offset": 34, "nodeName": "r", "type": "str"}, {"lineNumber": 196, "col_offset": 39, "nodeName": "e", "type": "str"}, {"lineNumber": 196, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 196, "col_offset": 67, "nodeName": "r", "type": "str"}, {"lineNumber": 196, "col_offset": 70, "nodeName": "e", "type": "str"}, {"lineNumber": 196, "col_offset": 75, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 196, "col_offset": 79, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 196, "col_offset": 84, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "chord", "type": "module"}, {"lineNumber": 202, "col_offset": 34, "nodeName": "r", "type": "str"}, {"lineNumber": 202, "col_offset": 39, "nodeName": "e", "type": "str"}, {"lineNumber": 202, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 202, "col_offset": 67, "nodeName": "r", "type": "str"}, {"lineNumber": 202, "col_offset": 70, "nodeName": "e", "type": "str"}, {"lineNumber": 202, "col_offset": 75, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 202, "col_offset": 79, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 202, "col_offset": 84, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 209, "col_offset": 20, "nodeName": "chord", "type": "module"}, {"lineNumber": 209, "col_offset": 38, "nodeName": "r", "type": "str"}, {"lineNumber": 209, "col_offset": 43, "nodeName": "e", "type": "str"}, {"lineNumber": 209, "col_offset": 47, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 209, "col_offset": 71, "nodeName": "r", "type": "str"}, {"lineNumber": 209, "col_offset": 74, "nodeName": "e", "type": "str"}, {"lineNumber": 209, "col_offset": 79, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 209, "col_offset": 83, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 209, "col_offset": 88, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "chord", "type": "module"}, {"lineNumber": 216, "col_offset": 35, "nodeName": "r", "type": "str"}, {"lineNumber": 216, "col_offset": 40, "nodeName": "e", "type": "str"}, {"lineNumber": 216, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 216, "col_offset": 68, "nodeName": "r", "type": "str"}, {"lineNumber": 216, "col_offset": 71, "nodeName": "e", "type": "str"}, {"lineNumber": 216, "col_offset": 76, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 216, "col_offset": 80, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 216, "col_offset": 85, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "chord", "type": "module"}, {"lineNumber": 223, "col_offset": 35, "nodeName": "r", "type": "str"}, {"lineNumber": 223, "col_offset": 40, "nodeName": "e", "type": "str"}, {"lineNumber": 223, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 223, "col_offset": 68, "nodeName": "r", "type": "str"}, {"lineNumber": 223, "col_offset": 71, "nodeName": "e", "type": "str"}, {"lineNumber": 223, "col_offset": 76, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 223, "col_offset": 80, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 223, "col_offset": 85, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "chord", "type": "module"}, {"lineNumber": 230, "col_offset": 39, "nodeName": "r", "type": "str"}, {"lineNumber": 230, "col_offset": 44, "nodeName": "e", "type": "str"}, {"lineNumber": 230, "col_offset": 48, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 230, "col_offset": 72, "nodeName": "r", "type": "str"}, {"lineNumber": 230, "col_offset": 75, "nodeName": "e", "type": "str"}, {"lineNumber": 230, "col_offset": 80, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 230, "col_offset": 84, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 230, "col_offset": 89, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "chord", "type": "module"}, {"lineNumber": 237, "col_offset": 34, "nodeName": "r", "type": "str"}, {"lineNumber": 237, "col_offset": 39, "nodeName": "e", "type": "str"}, {"lineNumber": 237, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 237, "col_offset": 67, "nodeName": "r", "type": "str"}, {"lineNumber": 237, "col_offset": 70, "nodeName": "e", "type": "str"}, {"lineNumber": 237, "col_offset": 75, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 237, "col_offset": 79, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 237, "col_offset": 84, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 244, "col_offset": 20, "nodeName": "chord", "type": "module"}, {"lineNumber": 244, "col_offset": 38, "nodeName": "r", "type": "str"}, {"lineNumber": 244, "col_offset": 43, "nodeName": "e", "type": "str"}, {"lineNumber": 244, "col_offset": 47, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 244, "col_offset": 71, "nodeName": "r", "type": "str"}, {"lineNumber": 244, "col_offset": 74, "nodeName": "e", "type": "str"}, {"lineNumber": 244, "col_offset": 79, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 244, "col_offset": 83, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 244, "col_offset": 88, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "chord", "type": "module"}, {"lineNumber": 250, "col_offset": 38, "nodeName": "r", "type": "str"}, {"lineNumber": 250, "col_offset": 43, "nodeName": "e", "type": "str"}, {"lineNumber": 250, "col_offset": 47, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 250, "col_offset": 71, "nodeName": "r", "type": "str"}, {"lineNumber": 250, "col_offset": 74, "nodeName": "e", "type": "str"}, {"lineNumber": 250, "col_offset": 79, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 250, "col_offset": 83, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 250, "col_offset": 88, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 257, "col_offset": 20, "nodeName": "chord", "type": "module"}, {"lineNumber": 257, "col_offset": 36, "nodeName": "r", "type": "str"}, {"lineNumber": 257, "col_offset": 41, "nodeName": "e", "type": "str"}, {"lineNumber": 257, "col_offset": 45, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 257, "col_offset": 69, "nodeName": "r", "type": "str"}, {"lineNumber": 257, "col_offset": 72, "nodeName": "e", "type": "str"}, {"lineNumber": 257, "col_offset": 77, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 257, "col_offset": 81, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 257, "col_offset": 86, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "chord", "type": "module"}, {"lineNumber": 264, "col_offset": 36, "nodeName": "r", "type": "str"}, {"lineNumber": 264, "col_offset": 41, "nodeName": "e", "type": "str"}, {"lineNumber": 264, "col_offset": 45, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 264, "col_offset": 69, "nodeName": "r", "type": "str"}, {"lineNumber": 264, "col_offset": 72, "nodeName": "e", "type": "str"}, {"lineNumber": 264, "col_offset": 77, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 264, "col_offset": 81, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 264, "col_offset": 86, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "chord", "type": "module"}, {"lineNumber": 271, "col_offset": 40, "nodeName": "r", "type": "str"}, {"lineNumber": 271, "col_offset": 45, "nodeName": "e", "type": "str"}, {"lineNumber": 271, "col_offset": 49, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 271, "col_offset": 73, "nodeName": "r", "type": "str"}, {"lineNumber": 271, "col_offset": 76, "nodeName": "e", "type": "str"}, {"lineNumber": 271, "col_offset": 81, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 271, "col_offset": 85, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 271, "col_offset": 90, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "chord", "type": "module"}, {"lineNumber": 170, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 182, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 209, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 216, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 230, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 237, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 244, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 257, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 264, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 49, "nodeName": "np", "type": "module"}]