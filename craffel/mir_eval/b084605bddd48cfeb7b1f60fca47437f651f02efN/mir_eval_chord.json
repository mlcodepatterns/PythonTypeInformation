[{"lineNumber": 113, "col_offset": 0, "nodeName": "_pitch_classes", "type": "Callable[[], Any]"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "_scale_degrees", "type": "Callable[[], Any]"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "pitch_class_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 163, "col_offset": 0, "nodeName": "scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 0, "nodeName": "scale_degree_to_bitmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 235, "col_offset": 0, "nodeName": "quality_to_bitmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 277, "col_offset": 0, "nodeName": "reduce_extended_quality", "type": "Callable[[Any], Any]"}, {"lineNumber": 295, "col_offset": 0, "nodeName": "validate_chord_label", "type": "Callable[[Any], Any]"}, {"lineNumber": 320, "col_offset": 0, "nodeName": "split", "type": "Callable[..., Any]"}, {"lineNumber": 373, "col_offset": 0, "nodeName": "join", "type": "Callable[..., Any]"}, {"lineNumber": 406, "col_offset": 0, "nodeName": "encode", "type": "Callable[..., Any]"}, {"lineNumber": 458, "col_offset": 0, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 501, "col_offset": 0, "nodeName": "rotate_bitmap_to_root", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 532, "col_offset": 0, "nodeName": "rotate_bitmaps_to_roots", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 554, "col_offset": 0, "nodeName": "rotate_bass_to_root", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 571, "col_offset": 0, "nodeName": "validate", "type": "Callable[[Any], Any]"}, {"lineNumber": 615, "col_offset": 0, "nodeName": "score", "type": "Callable[[Any], Any]"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "NO_CHORD", "type": "str"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "NO_CHORD_ENCODED", "type": "Tuple[int, numpy.ndarray, numpy.ndarray, int]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "STRICT_BASS_INTERVALS", "type": "bool"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "BaseException", "type": "Type[BaseException]"}, {"lineNumber": 128, "col_offset": 0, "nodeName": "PITCH_CLASSES", "type": "Dict[str, int]"}, {"lineNumber": 160, "col_offset": 0, "nodeName": "SCALE_DEGREES", "type": "Dict[str, int]"}, {"lineNumber": 218, "col_offset": 0, "nodeName": "QUALITIES", "type": "Dict[str, List[int]]"}, {"lineNumber": 261, "col_offset": 0, "nodeName": "EXTENDED_QUALITY_REDUX", "type": "Dict[str, Tuple[str, Set[str]]]"}, {"lineNumber": 1203, "col_offset": 0, "nodeName": "METRICS", "type": "collections.OrderedDict[str, Callable[..., Any]]"}, {"lineNumber": 1205, "col_offset": 18, "nodeName": "root", "type": "Callable[..., Any]"}, {"lineNumber": 1206, "col_offset": 20, "nodeName": "majmin", "type": "Callable[..., Any]"}, {"lineNumber": 1207, "col_offset": 24, "nodeName": "majmin_inv", "type": "Callable[..., Any]"}, {"lineNumber": 1208, "col_offset": 22, "nodeName": "sevenths", "type": "Callable[..., Any]"}, {"lineNumber": 1209, "col_offset": 26, "nodeName": "sevenths_inv", "type": "Callable[..., Any]"}, {"lineNumber": 1211, "col_offset": 21, "nodeName": "mirex", "type": "Callable[..., Any]"}, {"lineNumber": 1212, "col_offset": 20, "nodeName": "thirds", "type": "Callable[..., Any]"}, {"lineNumber": 1213, "col_offset": 24, "nodeName": "thirds_inv", "type": "Callable[..., Any]"}, {"lineNumber": 1214, "col_offset": 20, "nodeName": "triads", "type": "Callable[..., Any]"}, {"lineNumber": 1215, "col_offset": 24, "nodeName": "triads_inv", "type": "Callable[..., Any]"}, {"lineNumber": 1216, "col_offset": 21, "nodeName": "tetrads", "type": "Callable[..., Any]"}, {"lineNumber": 1217, "col_offset": 25, "nodeName": "tetrads_inv", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "pitch_classes", "type": "List[str]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "semitones", "type": "List[int]"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "degrees", "type": "List[str]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "semitones", "type": "List[int]"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "_pitch_classes", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "semitone", "type": "int"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "_scale_degrees", "type": "Callable[[], Any]"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "semitone", "type": "int"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "offset", "type": "int"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "semitone", "type": "Optional[int]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "sign", "type": "int"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "edit_map", "type": "List[Union[int, Any]]"}, {"lineNumber": 212, "col_offset": 55, "nodeName": "sign", "type": "int"}, {"lineNumber": 232, "col_offset": 4, "nodeName": "NO_CHORD", "type": "str"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "one_char", "type": "str"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "parens", "type": "Any"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "chord_label", "type": "str"}, {"lineNumber": 345, "col_offset": 4, "nodeName": "bass", "type": "str"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "extensions", "type": "Set[Any]"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "quality", "type": "str"}, {"lineNumber": 366, "col_offset": 7, "nodeName": "reduce_extended_chords", "type": "Any"}, {"lineNumber": 394, "col_offset": 4, "nodeName": "chord_label", "type": "Any"}, {"lineNumber": 394, "col_offset": 18, "nodeName": "root", "type": "Any"}, {"lineNumber": 397, "col_offset": 7, "nodeName": "extensions", "type": "Any"}, {"lineNumber": 399, "col_offset": 7, "nodeName": "bass", "type": "Any"}, {"lineNumber": 402, "col_offset": 11, "nodeName": "chord_label", "type": "Any"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "root_number", "type": "int"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "bass_number", "type": "int"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "quality_bitmap", "type": "numpy.ndarray"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "note_bitmap", "type": "numpy.ndarray"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "sd", "type": "Any"}, {"lineNumber": 448, "col_offset": 4, "nodeName": "note_bitmap", "type": "Any"}, {"lineNumber": 488, "col_offset": 4, "nodeName": "num_items", "type": "int"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "local_cache", "type": "Dict[Any, Union[Tuple[int, numpy.ndarray, Any, int], Tuple[int, numpy.ndarray, numpy.ndarray, int]]]"}, {"lineNumber": 523, "col_offset": 4, "nodeName": "bitmap", "type": "numpy.ndarray"}, {"lineNumber": 525, "col_offset": 4, "nodeName": "idxs", "type": "List[Any]"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "abs_bitmap", "type": "Any"}, {"lineNumber": 529, "col_offset": 11, "nodeName": "abs_bitmap", "type": "Any"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "abs_bitmaps", "type": "List[Any]"}, {"lineNumber": 612, "col_offset": 11, "nodeName": "comparison_validated", "type": "Callable[..., Any]"}, {"lineNumber": 647, "col_offset": 11, "nodeName": "metric", "type": "Callable[..., Any]"}, {"lineNumber": 685, "col_offset": 4, "nodeName": "correct_root", "type": "Any"}, {"lineNumber": 686, "col_offset": 4, "nodeName": "correct_third", "type": "Any"}, {"lineNumber": 722, "col_offset": 4, "nodeName": "ref_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 724, "col_offset": 4, "nodeName": "est_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 727, "col_offset": 4, "nodeName": "correct_root", "type": "Any"}, {"lineNumber": 728, "col_offset": 4, "nodeName": "correct_bass", "type": "Any"}, {"lineNumber": 729, "col_offset": 4, "nodeName": "correct_third", "type": "Any"}, {"lineNumber": 768, "col_offset": 4, "nodeName": "correct_root", "type": "Any"}, {"lineNumber": 769, "col_offset": 4, "nodeName": "correct_quality", "type": "Any"}, {"lineNumber": 806, "col_offset": 4, "nodeName": "ref_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 808, "col_offset": 4, "nodeName": "est_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "correct_root", "type": "Any"}, {"lineNumber": 812, "col_offset": 4, "nodeName": "correct_bass", "type": "Any"}, {"lineNumber": 813, "col_offset": 4, "nodeName": "correct_quality", "type": "Any"}, {"lineNumber": 853, "col_offset": 4, "nodeName": "correct_root", "type": "Any"}, {"lineNumber": 854, "col_offset": 4, "nodeName": "correct_quality", "type": "Any"}, {"lineNumber": 890, "col_offset": 4, "nodeName": "ref_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 892, "col_offset": 4, "nodeName": "est_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 895, "col_offset": 4, "nodeName": "correct_root", "type": "Any"}, {"lineNumber": 896, "col_offset": 4, "nodeName": "correct_bass", "type": "Any"}, {"lineNumber": 897, "col_offset": 4, "nodeName": "correct_quality", "type": "Any"}, {"lineNumber": 935, "col_offset": 4, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 936, "col_offset": 4, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 972, "col_offset": 4, "nodeName": "MIN_INTERSECTION", "type": "int"}, {"lineNumber": 973, "col_offset": 4, "nodeName": "ref_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 974, "col_offset": 4, "nodeName": "ref_notes", "type": "numpy.ndarray"}, {"lineNumber": 975, "col_offset": 4, "nodeName": "est_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 976, "col_offset": 4, "nodeName": "est_notes", "type": "numpy.ndarray"}, {"lineNumber": 978, "col_offset": 4, "nodeName": "correct_notes", "type": "Any"}, {"lineNumber": 1016, "col_offset": 4, "nodeName": "maj_quality", "type": "numpy.ndarray"}, {"lineNumber": 1017, "col_offset": 4, "nodeName": "min_quality", "type": "numpy.ndarray"}, {"lineNumber": 1021, "col_offset": 4, "nodeName": "correct_root", "type": "Any"}, {"lineNumber": 1022, "col_offset": 4, "nodeName": "correct_quality", "type": "Any"}, {"lineNumber": 1024, "col_offset": 4, "nodeName": "comparison_scores", "type": "Any"}, {"lineNumber": 1026, "col_offset": 4, "nodeName": "is_maj", "type": "Any"}, {"lineNumber": 1027, "col_offset": 4, "nodeName": "is_min", "type": "Any"}, {"lineNumber": 1028, "col_offset": 4, "nodeName": "is_none", "type": "Any"}, {"lineNumber": 1030, "col_offset": 11, "nodeName": "comparison_scores", "type": "Any"}, {"lineNumber": 1068, "col_offset": 4, "nodeName": "maj_quality", "type": "numpy.ndarray"}, {"lineNumber": 1069, "col_offset": 4, "nodeName": "min_quality", "type": "numpy.ndarray"}, {"lineNumber": 1070, "col_offset": 4, "nodeName": "ref_codes", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 1072, "col_offset": 4, "nodeName": "est_codes", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 1075, "col_offset": 4, "nodeName": "correct_root_bass", "type": "Any"}, {"lineNumber": 1076, "col_offset": 4, "nodeName": "correct_quality", "type": "Any"}, {"lineNumber": 1078, "col_offset": 4, "nodeName": "comparison_scores", "type": "Any"}, {"lineNumber": 1081, "col_offset": 4, "nodeName": "is_maj", "type": "Any"}, {"lineNumber": 1082, "col_offset": 4, "nodeName": "is_min", "type": "Any"}, {"lineNumber": 1083, "col_offset": 4, "nodeName": "is_none", "type": "Any"}, {"lineNumber": 1087, "col_offset": 4, "nodeName": "valid_inversion", "type": "Any"}, {"lineNumber": 1088, "col_offset": 4, "nodeName": "bass_idx", "type": "Any"}, {"lineNumber": 1091, "col_offset": 11, "nodeName": "comparison_scores", "type": "Any"}, {"lineNumber": 1128, "col_offset": 4, "nodeName": "valid_qualities", "type": "List[str]"}, {"lineNumber": 1129, "col_offset": 4, "nodeName": "valid_qualities", "type": "numpy.ndarray"}, {"lineNumber": 1134, "col_offset": 4, "nodeName": "correct_root", "type": "Any"}, {"lineNumber": 1135, "col_offset": 4, "nodeName": "correct_quality", "type": "Any"}, {"lineNumber": 1136, "col_offset": 4, "nodeName": "comparison_scores", "type": "Any"}, {"lineNumber": 1138, "col_offset": 4, "nodeName": "is_valid", "type": "numpy.ndarray"}, {"lineNumber": 1141, "col_offset": 11, "nodeName": "comparison_scores", "type": "Any"}, {"lineNumber": 1178, "col_offset": 4, "nodeName": "valid_qualities", "type": "List[str]"}, {"lineNumber": 1179, "col_offset": 4, "nodeName": "valid_qualities", "type": "numpy.ndarray"}, {"lineNumber": 1181, "col_offset": 4, "nodeName": "ref_codes", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 1183, "col_offset": 4, "nodeName": "est_codes", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 1186, "col_offset": 4, "nodeName": "correct_root_bass", "type": "Any"}, {"lineNumber": 1187, "col_offset": 4, "nodeName": "correct_quality", "type": "Any"}, {"lineNumber": 1188, "col_offset": 4, "nodeName": "comparison_scores", "type": "Any"}, {"lineNumber": 1190, "col_offset": 4, "nodeName": "is_valid", "type": "numpy.ndarray"}, {"lineNumber": 1195, "col_offset": 4, "nodeName": "valid_inversion", "type": "Any"}, {"lineNumber": 1196, "col_offset": 4, "nodeName": "bass_idx", "type": "Any"}, {"lineNumber": 1199, "col_offset": 11, "nodeName": "comparison_scores", "type": "Any"}, {"lineNumber": 1203, "col_offset": 10, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 1205, "col_offset": 0, "nodeName": "METRICS", "type": "collections.OrderedDict[str, Callable[..., Any]]"}, {"lineNumber": 1206, "col_offset": 0, "nodeName": "METRICS", "type": "collections.OrderedDict[str, Callable[..., Any]]"}, {"lineNumber": 1207, "col_offset": 0, "nodeName": "METRICS", "type": "collections.OrderedDict[str, Callable[..., Any]]"}, {"lineNumber": 1208, "col_offset": 0, "nodeName": "METRICS", "type": "collections.OrderedDict[str, Callable[..., Any]]"}, {"lineNumber": 1209, "col_offset": 0, "nodeName": "METRICS", "type": "collections.OrderedDict[str, Callable[..., Any]]"}, {"lineNumber": 1211, "col_offset": 0, "nodeName": "METRICS", "type": "collections.OrderedDict[str, Callable[..., Any]]"}, {"lineNumber": 1212, "col_offset": 0, "nodeName": "METRICS", "type": "collections.OrderedDict[str, Callable[..., Any]]"}, {"lineNumber": 1213, "col_offset": 0, "nodeName": "METRICS", "type": "collections.OrderedDict[str, Callable[..., Any]]"}, {"lineNumber": 1214, "col_offset": 0, "nodeName": "METRICS", "type": "collections.OrderedDict[str, Callable[..., Any]]"}, {"lineNumber": 1215, "col_offset": 0, "nodeName": "METRICS", "type": "collections.OrderedDict[str, Callable[..., Any]]"}, {"lineNumber": 1216, "col_offset": 0, "nodeName": "METRICS", "type": "collections.OrderedDict[str, Callable[..., Any]]"}, {"lineNumber": 1217, "col_offset": 0, "nodeName": "METRICS", "type": "collections.OrderedDict[str, Callable[..., Any]]"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "message", "type": "Any"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "message", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "chord_label", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "chord_label", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "idx", "type": "int"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "char", "type": "str"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "pitch_class", "type": "str"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "semitone", "type": "Optional[int]"}, {"lineNumber": 179, "col_offset": 7, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "offset", "type": "int"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "scale_degree", "type": "str"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 186, "col_offset": 33, "nodeName": "scale_degree", "type": "str"}, {"lineNumber": 187, "col_offset": 7, "nodeName": "semitone", "type": "Optional[int]"}, {"lineNumber": 208, "col_offset": 7, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "sign", "type": "int"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "scale_degree", "type": "Any"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "edit_map", "type": "List[Union[int, Any]]"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "edit_map", "type": "List[Union[int, Any]]"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 291, "col_offset": 38, "nodeName": "quality", "type": "str"}, {"lineNumber": 340, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 340, "col_offset": 22, "nodeName": "chord_label", "type": "Any"}, {"lineNumber": 341, "col_offset": 4, "nodeName": "validate_chord_label", "type": "Callable[[Any], Any]"}, {"lineNumber": 341, "col_offset": 25, "nodeName": "chord_label", "type": "str"}, {"lineNumber": 342, "col_offset": 7, "nodeName": "chord_label", "type": "str"}, {"lineNumber": 342, "col_offset": 22, "nodeName": "NO_CHORD", "type": "str"}, {"lineNumber": 346, "col_offset": 14, "nodeName": "chord_label", "type": "str"}, {"lineNumber": 349, "col_offset": 17, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 350, "col_offset": 14, "nodeName": "chord_label", "type": "str"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "extensions", "type": "str"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "extensions", "type": "Set[Any]"}, {"lineNumber": 357, "col_offset": 14, "nodeName": "chord_label", "type": "str"}, {"lineNumber": 361, "col_offset": 11, "nodeName": "quality_name", "type": "str"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "root", "type": "str"}, {"lineNumber": 364, "col_offset": 15, "nodeName": "chord_label", "type": "str"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "root", "type": "str"}, {"lineNumber": 370, "col_offset": 18, "nodeName": "quality", "type": "str"}, {"lineNumber": 370, "col_offset": 27, "nodeName": "extensions", "type": "Set[Any]"}, {"lineNumber": 370, "col_offset": 39, "nodeName": "bass", "type": "str"}, {"lineNumber": 395, "col_offset": 7, "nodeName": "quality", "type": "Any"}, {"lineNumber": 395, "col_offset": 18, "nodeName": "extensions", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "chord_label", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "chord_label", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "chord_label", "type": "Any"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "validate_chord_label", "type": "Callable[[Any], Any]"}, {"lineNumber": 401, "col_offset": 25, "nodeName": "chord_label", "type": "Any"}, {"lineNumber": 435, "col_offset": 7, "nodeName": "chord_label", "type": "Any"}, {"lineNumber": 435, "col_offset": 22, "nodeName": "NO_CHORD", "type": "str"}, {"lineNumber": 436, "col_offset": 15, "nodeName": "NO_CHORD_ENCODED", "type": "Tuple[int, numpy.ndarray, numpy.ndarray, int]"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "root", "type": "str"}, {"lineNumber": 437, "col_offset": 10, "nodeName": "quality", "type": "str"}, {"lineNumber": 437, "col_offset": 19, "nodeName": "exts", "type": "Union[Set[nothing], Set[Any]]"}, {"lineNumber": 437, "col_offset": 25, "nodeName": "bass", "type": "str"}, {"lineNumber": 437, "col_offset": 32, "nodeName": "split", "type": "Callable[..., Any]"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "chord_label", "type": "Any"}, {"lineNumber": 440, "col_offset": 18, "nodeName": "pitch_class_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 440, "col_offset": 42, "nodeName": "root", "type": "str"}, {"lineNumber": 441, "col_offset": 18, "nodeName": "scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 441, "col_offset": 43, "nodeName": "bass", "type": "str"}, {"lineNumber": 442, "col_offset": 21, "nodeName": "quality_to_bitmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 442, "col_offset": 39, "nodeName": "quality", "type": "str"}, {"lineNumber": 444, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 444, "col_offset": 27, "nodeName": "quality_bitmap", "type": "numpy.ndarray"}, {"lineNumber": 445, "col_offset": 14, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 445, "col_offset": 19, "nodeName": "exts", "type": "Union[Set[nothing], Set[Any]]"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "note_bitmap", "type": "Any"}, {"lineNumber": 448, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 448, "col_offset": 43, "nodeName": "int", "type": "Any"}, {"lineNumber": 449, "col_offset": 40, "nodeName": "STRICT_BASS_INTERVALS", "type": "bool"}, {"lineNumber": 455, "col_offset": 11, "nodeName": "root_number", "type": "int"}, {"lineNumber": 455, "col_offset": 24, "nodeName": "quality_bitmap", "type": "numpy.ndarray"}, {"lineNumber": 455, "col_offset": 40, "nodeName": "note_bitmap", "type": "Any"}, {"lineNumber": 455, "col_offset": 53, "nodeName": "bass_number", "type": "int"}, {"lineNumber": 488, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 488, "col_offset": 20, "nodeName": "chord_labels", "type": "Any"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "roots", "type": "Any"}, {"lineNumber": 489, "col_offset": 11, "nodeName": "basses", "type": "Any"}, {"lineNumber": 489, "col_offset": 20, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "qualities", "type": "Any"}, {"lineNumber": 490, "col_offset": 15, "nodeName": "notes", "type": "Any"}, {"lineNumber": 490, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 491, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 492, "col_offset": 11, "nodeName": "label", "type": "Any"}, {"lineNumber": 492, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 492, "col_offset": 30, "nodeName": "chord_labels", "type": "Any"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "result", "type": "None"}, {"lineNumber": 497, "col_offset": 54, "nodeName": "result", "type": "Union[Tuple[int, numpy.ndarray, numpy.ndarray, int], Tuple[int, numpy.ndarray, Any, int]]"}, {"lineNumber": 498, "col_offset": 11, "nodeName": "roots", "type": "Any"}, {"lineNumber": 498, "col_offset": 18, "nodeName": "qualities", "type": "Any"}, {"lineNumber": 498, "col_offset": 29, "nodeName": "notes", "type": "Any"}, {"lineNumber": 498, "col_offset": 36, "nodeName": "basses", "type": "Any"}, {"lineNumber": 523, "col_offset": 13, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 523, "col_offset": 24, "nodeName": "bitmap", "type": "Any"}, {"lineNumber": 524, "col_offset": 11, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 525, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 526, "col_offset": 4, "nodeName": "idxs", "type": "List[Any]"}, {"lineNumber": 527, "col_offset": 17, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 527, "col_offset": 31, "nodeName": "bitmap", "type": "numpy.ndarray"}, {"lineNumber": 528, "col_offset": 4, "nodeName": "abs_bitmap", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "bitmap", "type": "Any"}, {"lineNumber": 549, "col_offset": 16, "nodeName": "root", "type": "Any"}, {"lineNumber": 549, "col_offset": 24, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 549, "col_offset": 28, "nodeName": "bitmaps", "type": "Any"}, {"lineNumber": 549, "col_offset": 37, "nodeName": "roots", "type": "Any"}, {"lineNumber": 551, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 551, "col_offset": 22, "nodeName": "abs_bitmaps", "type": "List[Any]"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "N", "type": "int"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "M", "type": "int"}, {"lineNumber": 593, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "comparison_scores", "type": "Any"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "valid_idx", "type": "Any"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "durations", "type": "Any"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "comparison_scores", "type": "Any"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "durations", "type": "Any"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "total_time", "type": "float"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "duration_weights", "type": "Any"}, {"lineNumber": 682, "col_offset": 4, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 682, "col_offset": 15, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 683, "col_offset": 4, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 683, "col_offset": 15, "nodeName": "est_qualities", "type": "Any"}, {"lineNumber": 685, "col_offset": 19, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 685, "col_offset": 32, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 687, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 687, "col_offset": 49, "nodeName": "float", "type": "Any"}, {"lineNumber": 722, "col_offset": 15, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 722, "col_offset": 27, "nodeName": "reference_labels", "type": "Any"}, {"lineNumber": 723, "col_offset": 4, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 723, "col_offset": 15, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 723, "col_offset": 30, "nodeName": "ref_bass", "type": "Any"}, {"lineNumber": 724, "col_offset": 15, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 724, "col_offset": 27, "nodeName": "estimated_labels", "type": "Any"}, {"lineNumber": 725, "col_offset": 4, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 725, "col_offset": 15, "nodeName": "est_qualities", "type": "Any"}, {"lineNumber": 725, "col_offset": 30, "nodeName": "est_bass", "type": "Any"}, {"lineNumber": 727, "col_offset": 19, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 727, "col_offset": 32, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 728, "col_offset": 19, "nodeName": "ref_bass", "type": "Any"}, {"lineNumber": 728, "col_offset": 31, "nodeName": "est_bass", "type": "Any"}, {"lineNumber": 730, "col_offset": 41, "nodeName": "astype", "type": "Any"}, {"lineNumber": 730, "col_offset": 64, "nodeName": "float", "type": "Any"}, {"lineNumber": 765, "col_offset": 4, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 765, "col_offset": 15, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 766, "col_offset": 4, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 766, "col_offset": 15, "nodeName": "est_qualities", "type": "Any"}, {"lineNumber": 768, "col_offset": 19, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 768, "col_offset": 32, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 769, "col_offset": 22, "nodeName": "all", "type": "Any"}, {"lineNumber": 771, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 771, "col_offset": 51, "nodeName": "float", "type": "Any"}, {"lineNumber": 806, "col_offset": 15, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 806, "col_offset": 27, "nodeName": "reference_labels", "type": "Any"}, {"lineNumber": 807, "col_offset": 4, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 807, "col_offset": 15, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 807, "col_offset": 30, "nodeName": "ref_bass", "type": "Any"}, {"lineNumber": 808, "col_offset": 15, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 808, "col_offset": 27, "nodeName": "estimated_labels", "type": "Any"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 809, "col_offset": 15, "nodeName": "est_qualities", "type": "Any"}, {"lineNumber": 809, "col_offset": 30, "nodeName": "est_bass", "type": "Any"}, {"lineNumber": 811, "col_offset": 19, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 811, "col_offset": 32, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 812, "col_offset": 19, "nodeName": "ref_bass", "type": "Any"}, {"lineNumber": 812, "col_offset": 31, "nodeName": "est_bass", "type": "Any"}, {"lineNumber": 813, "col_offset": 22, "nodeName": "all", "type": "Any"}, {"lineNumber": 815, "col_offset": 43, "nodeName": "astype", "type": "Any"}, {"lineNumber": 815, "col_offset": 66, "nodeName": "float", "type": "Any"}, {"lineNumber": 850, "col_offset": 4, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 850, "col_offset": 15, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 851, "col_offset": 4, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 851, "col_offset": 15, "nodeName": "est_qualities", "type": "Any"}, {"lineNumber": 853, "col_offset": 19, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 853, "col_offset": 32, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 854, "col_offset": 22, "nodeName": "all", "type": "Any"}, {"lineNumber": 855, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 855, "col_offset": 51, "nodeName": "float", "type": "Any"}, {"lineNumber": 890, "col_offset": 15, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 890, "col_offset": 27, "nodeName": "reference_labels", "type": "Any"}, {"lineNumber": 891, "col_offset": 4, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 891, "col_offset": 15, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 891, "col_offset": 30, "nodeName": "ref_bass", "type": "Any"}, {"lineNumber": 892, "col_offset": 15, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 892, "col_offset": 27, "nodeName": "estimated_labels", "type": "Any"}, {"lineNumber": 893, "col_offset": 4, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 893, "col_offset": 15, "nodeName": "est_qualities", "type": "Any"}, {"lineNumber": 893, "col_offset": 30, "nodeName": "est_bass", "type": "Any"}, {"lineNumber": 895, "col_offset": 19, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 895, "col_offset": 32, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 896, "col_offset": 19, "nodeName": "ref_bass", "type": "Any"}, {"lineNumber": 896, "col_offset": 31, "nodeName": "est_bass", "type": "Any"}, {"lineNumber": 897, "col_offset": 22, "nodeName": "all", "type": "Any"}, {"lineNumber": 898, "col_offset": 43, "nodeName": "astype", "type": "Any"}, {"lineNumber": 898, "col_offset": 66, "nodeName": "float", "type": "Any"}, {"lineNumber": 937, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 937, "col_offset": 43, "nodeName": "float", "type": "Any"}, {"lineNumber": 973, "col_offset": 15, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 973, "col_offset": 27, "nodeName": "reference_labels", "type": "Any"}, {"lineNumber": 974, "col_offset": 16, "nodeName": "rotate_bitmaps_to_roots", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 975, "col_offset": 15, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 975, "col_offset": 27, "nodeName": "estimated_labels", "type": "Any"}, {"lineNumber": 976, "col_offset": 16, "nodeName": "rotate_bitmaps_to_roots", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 978, "col_offset": 21, "nodeName": "sum", "type": "Any"}, {"lineNumber": 979, "col_offset": 12, "nodeName": "astype", "type": "Any"}, {"lineNumber": 979, "col_offset": 54, "nodeName": "float", "type": "Any"}, {"lineNumber": 1016, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1017, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1018, "col_offset": 4, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 1018, "col_offset": 15, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 1019, "col_offset": 4, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 1019, "col_offset": 15, "nodeName": "est_qualities", "type": "Any"}, {"lineNumber": 1021, "col_offset": 19, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 1021, "col_offset": 32, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 1022, "col_offset": 22, "nodeName": "all", "type": "Any"}, {"lineNumber": 1024, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 1024, "col_offset": 64, "nodeName": "float", "type": "Any"}, {"lineNumber": 1026, "col_offset": 13, "nodeName": "all", "type": "Any"}, {"lineNumber": 1027, "col_offset": 13, "nodeName": "all", "type": "Any"}, {"lineNumber": 1028, "col_offset": 14, "nodeName": "all", "type": "Any"}, {"lineNumber": 1029, "col_offset": 4, "nodeName": "comparison_scores", "type": "Any"}, {"lineNumber": 1068, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1069, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1070, "col_offset": 16, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 1070, "col_offset": 28, "nodeName": "reference_labels", "type": "Any"}, {"lineNumber": 1071, "col_offset": 4, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 1071, "col_offset": 15, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 1071, "col_offset": 30, "nodeName": "ref_bass", "type": "Any"}, {"lineNumber": 1072, "col_offset": 16, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 1072, "col_offset": 28, "nodeName": "estimated_labels", "type": "Any"}, {"lineNumber": 1073, "col_offset": 4, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 1073, "col_offset": 15, "nodeName": "est_qualities", "type": "Any"}, {"lineNumber": 1073, "col_offset": 30, "nodeName": "est_bass", "type": "Any"}, {"lineNumber": 1076, "col_offset": 22, "nodeName": "all", "type": "Any"}, {"lineNumber": 1078, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 1078, "col_offset": 69, "nodeName": "float", "type": "Any"}, {"lineNumber": 1081, "col_offset": 13, "nodeName": "all", "type": "Any"}, {"lineNumber": 1082, "col_offset": 13, "nodeName": "all", "type": "Any"}, {"lineNumber": 1083, "col_offset": 14, "nodeName": "all", "type": "Any"}, {"lineNumber": 1084, "col_offset": 4, "nodeName": "comparison_scores", "type": "Any"}, {"lineNumber": 1087, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1087, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1088, "col_offset": 15, "nodeName": "ref_bass", "type": "Any"}, {"lineNumber": 1089, "col_offset": 4, "nodeName": "valid_inversion", "type": "Any"}, {"lineNumber": 1089, "col_offset": 32, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 1090, "col_offset": 4, "nodeName": "comparison_scores", "type": "Any"}, {"lineNumber": 1129, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1131, "col_offset": 4, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 1131, "col_offset": 15, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 1132, "col_offset": 4, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 1132, "col_offset": 15, "nodeName": "est_qualities", "type": "Any"}, {"lineNumber": 1134, "col_offset": 19, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 1134, "col_offset": 32, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 1135, "col_offset": 22, "nodeName": "all", "type": "Any"}, {"lineNumber": 1136, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 1136, "col_offset": 64, "nodeName": "float", "type": "Any"}, {"lineNumber": 1138, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1140, "col_offset": 4, "nodeName": "comparison_scores", "type": "Any"}, {"lineNumber": 1179, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1181, "col_offset": 16, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 1181, "col_offset": 28, "nodeName": "reference_labels", "type": "Any"}, {"lineNumber": 1182, "col_offset": 4, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 1182, "col_offset": 15, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 1182, "col_offset": 30, "nodeName": "ref_bass", "type": "Any"}, {"lineNumber": 1183, "col_offset": 16, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 1183, "col_offset": 28, "nodeName": "estimated_labels", "type": "Any"}, {"lineNumber": 1184, "col_offset": 4, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 1184, "col_offset": 15, "nodeName": "est_qualities", "type": "Any"}, {"lineNumber": 1184, "col_offset": 30, "nodeName": "est_bass", "type": "Any"}, {"lineNumber": 1187, "col_offset": 22, "nodeName": "all", "type": "Any"}, {"lineNumber": 1188, "col_offset": 25, "nodeName": "astype", "type": "Any"}, {"lineNumber": 1188, "col_offset": 69, "nodeName": "float", "type": "Any"}, {"lineNumber": 1190, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1192, "col_offset": 4, "nodeName": "comparison_scores", "type": "Any"}, {"lineNumber": 1195, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 1195, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1196, "col_offset": 15, "nodeName": "ref_bass", "type": "Any"}, {"lineNumber": 1197, "col_offset": 4, "nodeName": "valid_inversion", "type": "Any"}, {"lineNumber": 1197, "col_offset": 32, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 1198, "col_offset": 4, "nodeName": "comparison_scores", "type": "Any"}, {"lineNumber": 1203, "col_offset": 10, "nodeName": "collections", "type": "module"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "InvalidChordException"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "InvalidChordException"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "InvalidChordException"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "semitone", "type": "int"}, {"lineNumber": 179, "col_offset": 7, "nodeName": "scale_degree", "type": "str"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "count", "type": "Callable[..., int]"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 182, "col_offset": 9, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "offset", "type": "int"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "scale_degree", "type": "str"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "SCALE_DEGREES", "type": "Dict[str, int]"}, {"lineNumber": 188, "col_offset": 14, "nodeName": "InvalidChordException", "type": "Type[InvalidChordException]"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "semitone", "type": "Optional[int]"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "offset", "type": "int"}, {"lineNumber": 208, "col_offset": 7, "nodeName": "scale_degree", "type": "Any"}, {"lineNumber": 210, "col_offset": 23, "nodeName": "strip", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 11, "nodeName": "quality", "type": "str"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "QUALITIES", "type": "Dict[str, List[int]]"}, {"lineNumber": 251, "col_offset": 14, "nodeName": "InvalidChordException", "type": "Type[InvalidChordException]"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "QUALITIES", "type": "Dict[str, List[int]]"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 264, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 266, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 267, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 270, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 271, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 272, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 273, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 274, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "EXTENDED_QUALITY_REDUX", "type": "Dict[str, Tuple[str, Set[str]]]"}, {"lineNumber": 291, "col_offset": 48, "nodeName": "quality", "type": "str"}, {"lineNumber": 313, "col_offset": 14, "nodeName": "paren", "type": "str"}, {"lineNumber": 313, "col_offset": 23, "nodeName": "chord_label", "type": "Any"}, {"lineNumber": 313, "col_offset": 39, "nodeName": "paren", "type": "str"}, {"lineNumber": 314, "col_offset": 7, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 314, "col_offset": 11, "nodeName": "parens", "type": "Any"}, {"lineNumber": 315, "col_offset": 14, "nodeName": "InvalidChordException", "type": "Type[InvalidChordException]"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "chord_label", "type": "str"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "chord_label", "type": "str"}, {"lineNumber": 347, "col_offset": 21, "nodeName": "bass", "type": "str"}, {"lineNumber": 347, "col_offset": 28, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "chord_label", "type": "str"}, {"lineNumber": 351, "col_offset": 21, "nodeName": "extensions", "type": "str"}, {"lineNumber": 351, "col_offset": 34, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 352, "col_offset": 21, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 353, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "root", "type": "str"}, {"lineNumber": 358, "col_offset": 14, "nodeName": "quality_name", "type": "str"}, {"lineNumber": 358, "col_offset": 29, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "quality", "type": "str"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "quality", "type": "str"}, {"lineNumber": 367, "col_offset": 17, "nodeName": "addl_extensions", "type": "Union[Set[str], Set[nothing]]"}, {"lineNumber": 367, "col_offset": 35, "nodeName": "reduce_extended_quality", "type": "Callable[[Any], Any]"}, {"lineNumber": 367, "col_offset": 59, "nodeName": "quality", "type": "str"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 368, "col_offset": 26, "nodeName": "addl_extensions", "type": "Union[Set[str], Set[nothing]]"}, {"lineNumber": 396, "col_offset": 31, "nodeName": "quality", "type": "Any"}, {"lineNumber": 400, "col_offset": 31, "nodeName": "bass", "type": "Any"}, {"lineNumber": 438, "col_offset": 44, "nodeName": "reduce_extended_chords", "type": "Any"}, {"lineNumber": 444, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 446, "col_offset": 23, "nodeName": "scale_degree_to_bitmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 446, "col_offset": 46, "nodeName": "sd", "type": "Any"}, {"lineNumber": 448, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 450, "col_offset": 14, "nodeName": "InvalidChordException", "type": "Type[InvalidChordException]"}, {"lineNumber": 452, "col_offset": 32, "nodeName": "chord_label", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "note_bitmap", "type": "Any"}, {"lineNumber": 489, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 489, "col_offset": 33, "nodeName": "num_items", "type": "int"}, {"lineNumber": 489, "col_offset": 51, "nodeName": "int", "type": "Any"}, {"lineNumber": 490, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 490, "col_offset": 36, "nodeName": "num_items", "type": "int"}, {"lineNumber": 490, "col_offset": 58, "nodeName": "int", "type": "Any"}, {"lineNumber": 493, "col_offset": 17, "nodeName": "get", "type": "Callable"}, {"lineNumber": 493, "col_offset": 33, "nodeName": "label", "type": "Any"}, {"lineNumber": 494, "col_offset": 11, "nodeName": "result", "type": "None"}, {"lineNumber": 495, "col_offset": 12, "nodeName": "result", "type": "Union[Tuple[int, numpy.ndarray, numpy.ndarray, int], Tuple[int, numpy.ndarray, Any, int]]"}, {"lineNumber": 496, "col_offset": 33, "nodeName": "result", "type": "Union[Tuple[int, numpy.ndarray, numpy.ndarray, int], Tuple[int, numpy.ndarray, Any, int]]"}, {"lineNumber": 523, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 524, "col_offset": 11, "nodeName": "bitmap", "type": "numpy.ndarray"}, {"lineNumber": 525, "col_offset": 16, "nodeName": "nonzero", "type": "Any"}, {"lineNumber": 525, "col_offset": 27, "nodeName": "bitmap", "type": "numpy.ndarray"}, {"lineNumber": 526, "col_offset": 27, "nodeName": "root", "type": "Any"}, {"lineNumber": 527, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 528, "col_offset": 15, "nodeName": "idxs", "type": "List[Any]"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 551, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 567, "col_offset": 12, "nodeName": "bass", "type": "Any"}, {"lineNumber": 567, "col_offset": 19, "nodeName": "root", "type": "Any"}, {"lineNumber": 587, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 587, "col_offset": 16, "nodeName": "reference_labels", "type": "Any"}, {"lineNumber": 588, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 588, "col_offset": 16, "nodeName": "estimated_labels", "type": "Any"}, {"lineNumber": 589, "col_offset": 11, "nodeName": "N", "type": "int"}, {"lineNumber": 589, "col_offset": 16, "nodeName": "M", "type": "int"}, {"lineNumber": 593, "col_offset": 23, "nodeName": "reference_labels", "type": "Any"}, {"lineNumber": 593, "col_offset": 41, "nodeName": "estimated_labels", "type": "Any"}, {"lineNumber": 594, "col_offset": 16, "nodeName": "chord_label", "type": "Any"}, {"lineNumber": 594, "col_offset": 31, "nodeName": "labels", "type": "Any"}, {"lineNumber": 606, "col_offset": 33, "nodeName": "N", "type": "int"}, {"lineNumber": 611, "col_offset": 15, "nodeName": "comparison", "type": "Callable[..., Any]"}, {"lineNumber": 611, "col_offset": 26, "nodeName": "reference_labels", "type": "Any"}, {"lineNumber": 611, "col_offset": 44, "nodeName": "estimated_labels", "type": "Any"}, {"lineNumber": 611, "col_offset": 62, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 628, "col_offset": 28, "nodeName": "comparator", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 628, "col_offset": 39, "nodeName": "reference_labels", "type": "Any"}, {"lineNumber": 628, "col_offset": 57, "nodeName": "estimated_labels", "type": "Any"}, {"lineNumber": 630, "col_offset": 21, "nodeName": "comparison_scores", "type": "Any"}, {"lineNumber": 637, "col_offset": 20, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 639, "col_offset": 28, "nodeName": "comparison_scores", "type": "Any"}, {"lineNumber": 640, "col_offset": 20, "nodeName": "durations", "type": "Any"}, {"lineNumber": 642, "col_offset": 21, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 644, "col_offset": 62, "nodeName": "total_time", "type": "float"}, {"lineNumber": 646, "col_offset": 15, "nodeName": "sum", "type": "Any"}, {"lineNumber": 682, "col_offset": 31, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 682, "col_offset": 43, "nodeName": "reference_labels", "type": "Any"}, {"lineNumber": 683, "col_offset": 31, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 683, "col_offset": 43, "nodeName": "estimated_labels", "type": "Any"}, {"lineNumber": 686, "col_offset": 20, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 686, "col_offset": 43, "nodeName": "est_qualities", "type": "Any"}, {"lineNumber": 687, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 723, "col_offset": 41, "nodeName": "ref_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 723, "col_offset": 54, "nodeName": "ref_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 723, "col_offset": 67, "nodeName": "ref_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 725, "col_offset": 41, "nodeName": "est_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 725, "col_offset": 54, "nodeName": "est_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 725, "col_offset": 67, "nodeName": "est_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 729, "col_offset": 20, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 729, "col_offset": 43, "nodeName": "est_qualities", "type": "Any"}, {"lineNumber": 730, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 765, "col_offset": 31, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 765, "col_offset": 43, "nodeName": "reference_labels", "type": "Any"}, {"lineNumber": 766, "col_offset": 31, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 766, "col_offset": 43, "nodeName": "estimated_labels", "type": "Any"}, {"lineNumber": 769, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "equal", "type": "Any"}, {"lineNumber": 771, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 807, "col_offset": 41, "nodeName": "ref_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 807, "col_offset": 54, "nodeName": "ref_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 807, "col_offset": 67, "nodeName": "ref_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 809, "col_offset": 41, "nodeName": "est_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 809, "col_offset": 54, "nodeName": "est_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 809, "col_offset": 67, "nodeName": "est_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 813, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 814, "col_offset": 8, "nodeName": "equal", "type": "Any"}, {"lineNumber": 815, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 850, "col_offset": 31, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 850, "col_offset": 43, "nodeName": "reference_labels", "type": "Any"}, {"lineNumber": 851, "col_offset": 31, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 851, "col_offset": 43, "nodeName": "estimated_labels", "type": "Any"}, {"lineNumber": 854, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 854, "col_offset": 29, "nodeName": "equal", "type": "Any"}, {"lineNumber": 854, "col_offset": 38, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 854, "col_offset": 53, "nodeName": "est_qualities", "type": "Any"}, {"lineNumber": 855, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 891, "col_offset": 41, "nodeName": "ref_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 891, "col_offset": 54, "nodeName": "ref_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 891, "col_offset": 67, "nodeName": "ref_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 893, "col_offset": 41, "nodeName": "est_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 893, "col_offset": 54, "nodeName": "est_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 893, "col_offset": 67, "nodeName": "est_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 897, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 897, "col_offset": 29, "nodeName": "equal", "type": "Any"}, {"lineNumber": 897, "col_offset": 38, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 897, "col_offset": 53, "nodeName": "est_qualities", "type": "Any"}, {"lineNumber": 898, "col_offset": 66, "nodeName": "np", "type": "module"}, {"lineNumber": 935, "col_offset": 16, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 935, "col_offset": 28, "nodeName": "reference_labels", "type": "Any"}, {"lineNumber": 936, "col_offset": 16, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 936, "col_offset": 28, "nodeName": "estimated_labels", "type": "Any"}, {"lineNumber": 937, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 974, "col_offset": 40, "nodeName": "ref_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 974, "col_offset": 53, "nodeName": "ref_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 976, "col_offset": 40, "nodeName": "est_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 976, "col_offset": 53, "nodeName": "est_data", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 979, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 1016, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 1017, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 1018, "col_offset": 31, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 1018, "col_offset": 43, "nodeName": "reference_labels", "type": "Any"}, {"lineNumber": 1019, "col_offset": 31, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 1019, "col_offset": 43, "nodeName": "estimated_labels", "type": "Any"}, {"lineNumber": 1022, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1023, "col_offset": 8, "nodeName": "equal", "type": "Any"}, {"lineNumber": 1024, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 1026, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 1026, "col_offset": 20, "nodeName": "equal", "type": "Any"}, {"lineNumber": 1026, "col_offset": 51, "nodeName": "maj_quality", "type": "numpy.ndarray"}, {"lineNumber": 1027, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 1027, "col_offset": 20, "nodeName": "equal", "type": "Any"}, {"lineNumber": 1027, "col_offset": 51, "nodeName": "min_quality", "type": "numpy.ndarray"}, {"lineNumber": 1028, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1028, "col_offset": 21, "nodeName": "equal", "type": "Any"}, {"lineNumber": 1028, "col_offset": 30, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 1068, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 1069, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 1071, "col_offset": 42, "nodeName": "ref_codes", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 1071, "col_offset": 59, "nodeName": "n", "type": "int"}, {"lineNumber": 1073, "col_offset": 42, "nodeName": "est_codes", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 1073, "col_offset": 59, "nodeName": "n", "type": "int"}, {"lineNumber": 1075, "col_offset": 25, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 1075, "col_offset": 38, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 1075, "col_offset": 52, "nodeName": "ref_bass", "type": "Any"}, {"lineNumber": 1075, "col_offset": 64, "nodeName": "est_bass", "type": "Any"}, {"lineNumber": 1076, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1077, "col_offset": 8, "nodeName": "equal", "type": "Any"}, {"lineNumber": 1078, "col_offset": 69, "nodeName": "np", "type": "module"}, {"lineNumber": 1081, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 1081, "col_offset": 20, "nodeName": "equal", "type": "Any"}, {"lineNumber": 1081, "col_offset": 51, "nodeName": "maj_quality", "type": "numpy.ndarray"}, {"lineNumber": 1082, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 1082, "col_offset": 20, "nodeName": "equal", "type": "Any"}, {"lineNumber": 1082, "col_offset": 51, "nodeName": "min_quality", "type": "numpy.ndarray"}, {"lineNumber": 1083, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 1083, "col_offset": 21, "nodeName": "equal", "type": "Any"}, {"lineNumber": 1083, "col_offset": 30, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 1087, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1087, "col_offset": 30, "nodeName": "ref_bass", "type": "Any"}, {"lineNumber": 1087, "col_offset": 52, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 1089, "col_offset": 20, "nodeName": "bass_idx", "type": "Any"}, {"lineNumber": 1129, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1131, "col_offset": 31, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 1131, "col_offset": 43, "nodeName": "reference_labels", "type": "Any"}, {"lineNumber": 1132, "col_offset": 31, "nodeName": "encode_many", "type": "Callable[..., Any]"}, {"lineNumber": 1132, "col_offset": 43, "nodeName": "estimated_labels", "type": "Any"}, {"lineNumber": 1135, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1135, "col_offset": 29, "nodeName": "equal", "type": "Any"}, {"lineNumber": 1135, "col_offset": 38, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 1135, "col_offset": 53, "nodeName": "est_qualities", "type": "Any"}, {"lineNumber": 1136, "col_offset": 64, "nodeName": "np", "type": "module"}, {"lineNumber": 1138, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1179, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1182, "col_offset": 42, "nodeName": "ref_codes", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 1182, "col_offset": 59, "nodeName": "n", "type": "int"}, {"lineNumber": 1184, "col_offset": 42, "nodeName": "est_codes", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 1184, "col_offset": 59, "nodeName": "n", "type": "int"}, {"lineNumber": 1186, "col_offset": 25, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 1186, "col_offset": 38, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 1186, "col_offset": 52, "nodeName": "ref_bass", "type": "Any"}, {"lineNumber": 1186, "col_offset": 64, "nodeName": "est_bass", "type": "Any"}, {"lineNumber": 1187, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1187, "col_offset": 29, "nodeName": "equal", "type": "Any"}, {"lineNumber": 1187, "col_offset": 38, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 1187, "col_offset": 53, "nodeName": "est_qualities", "type": "Any"}, {"lineNumber": 1188, "col_offset": 69, "nodeName": "np", "type": "module"}, {"lineNumber": 1190, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 1195, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1195, "col_offset": 30, "nodeName": "ref_bass", "type": "Any"}, {"lineNumber": 1195, "col_offset": 52, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 1197, "col_offset": 20, "nodeName": "bass_idx", "type": "Any"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "self", "type": "InvalidChordException"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "c", "type": "str"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "s", "type": "int"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "d", "type": "str"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "s", "type": "int"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "char", "type": "str"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "idx", "type": "int"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "semitone", "type": "int"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "scale_degree", "type": "str"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "scale_degree", "type": "str"}, {"lineNumber": 182, "col_offset": 9, "nodeName": "scale_degree", "type": "str"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 189, "col_offset": 51, "nodeName": "scale_degree", "type": "str"}, {"lineNumber": 210, "col_offset": 23, "nodeName": "scale_degree", "type": "Any"}, {"lineNumber": 212, "col_offset": 13, "nodeName": "scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 38, "nodeName": "scale_degree", "type": "Any"}, {"lineNumber": 253, "col_offset": 56, "nodeName": "quality", "type": "str"}, {"lineNumber": 254, "col_offset": 30, "nodeName": "quality", "type": "str"}, {"lineNumber": 291, "col_offset": 57, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 307, "col_offset": 11, "nodeName": "count", "type": "Callable[..., int]"}, {"lineNumber": 307, "col_offset": 29, "nodeName": "one_char", "type": "str"}, {"lineNumber": 308, "col_offset": 18, "nodeName": "InvalidChordException", "type": "Type[InvalidChordException]"}, {"lineNumber": 314, "col_offset": 27, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 314, "col_offset": 31, "nodeName": "parens", "type": "Any"}, {"lineNumber": 317, "col_offset": 31, "nodeName": "chord_label", "type": "str"}, {"lineNumber": 343, "col_offset": 33, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 347, "col_offset": 28, "nodeName": "chord_label", "type": "str"}, {"lineNumber": 351, "col_offset": 34, "nodeName": "chord_label", "type": "str"}, {"lineNumber": 352, "col_offset": 21, "nodeName": "extensions", "type": "str"}, {"lineNumber": 358, "col_offset": 29, "nodeName": "chord_label", "type": "str"}, {"lineNumber": 362, "col_offset": 22, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "extensions", "type": "Set[Any]"}, {"lineNumber": 398, "col_offset": 32, "nodeName": "join", "type": "Callable"}, {"lineNumber": 398, "col_offset": 41, "nodeName": "extensions", "type": "Any"}, {"lineNumber": 448, "col_offset": 19, "nodeName": "note_bitmap", "type": "Any"}, {"lineNumber": 449, "col_offset": 11, "nodeName": "note_bitmap", "type": "Any"}, {"lineNumber": 452, "col_offset": 19, "nodeName": "chord_label", "type": "Any"}, {"lineNumber": 454, "col_offset": 20, "nodeName": "bass_number", "type": "int"}, {"lineNumber": 489, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 490, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 493, "col_offset": 17, "nodeName": "local_cache", "type": "Dict[Any, Union[Tuple[int, numpy.ndarray, Any, int], Tuple[int, numpy.ndarray, numpy.ndarray, int]]]"}, {"lineNumber": 495, "col_offset": 21, "nodeName": "encode", "type": "Callable[..., Any]"}, {"lineNumber": 495, "col_offset": 28, "nodeName": "label", "type": "Any"}, {"lineNumber": 495, "col_offset": 35, "nodeName": "reduce_extended_chords", "type": "Any"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "local_cache", "type": "Dict[Any, Union[Tuple[int, numpy.ndarray, Any, int], Tuple[int, numpy.ndarray, numpy.ndarray, int]]]"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "roots", "type": "Any"}, {"lineNumber": 497, "col_offset": 18, "nodeName": "qualities", "type": "Any"}, {"lineNumber": 497, "col_offset": 32, "nodeName": "notes", "type": "Any"}, {"lineNumber": 497, "col_offset": 42, "nodeName": "basses", "type": "Any"}, {"lineNumber": 525, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 526, "col_offset": 16, "nodeName": "idxs", "type": "List[Any]"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "abs_bitmaps", "type": "List[Any]"}, {"lineNumber": 550, "col_offset": 27, "nodeName": "rotate_bitmap_to_root", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 550, "col_offset": 49, "nodeName": "bitmap", "type": "Any"}, {"lineNumber": 550, "col_offset": 57, "nodeName": "root", "type": "Any"}, {"lineNumber": 590, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 597, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 597, "col_offset": 15, "nodeName": "reference_labels", "type": "Any"}, {"lineNumber": 598, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 599, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 599, "col_offset": 15, "nodeName": "estimated_labels", "type": "Any"}, {"lineNumber": 600, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 602, "col_offset": 11, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 603, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 606, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 607, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 632, "col_offset": 11, "nodeName": "sum", "type": "Any"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 639, "col_offset": 46, "nodeName": "valid_idx", "type": "Any"}, {"lineNumber": 640, "col_offset": 30, "nodeName": "valid_idx", "type": "Any"}, {"lineNumber": 642, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 642, "col_offset": 34, "nodeName": "durations", "type": "Any"}, {"lineNumber": 644, "col_offset": 27, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 644, "col_offset": 38, "nodeName": "durations", "type": "Any"}, {"lineNumber": 646, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 646, "col_offset": 22, "nodeName": "comparison_scores", "type": "Any"}, {"lineNumber": 646, "col_offset": 40, "nodeName": "duration_weights", "type": "Any"}, {"lineNumber": 687, "col_offset": 12, "nodeName": "correct_root", "type": "Any"}, {"lineNumber": 687, "col_offset": 27, "nodeName": "correct_third", "type": "Any"}, {"lineNumber": 730, "col_offset": 43, "nodeName": "correct_bass", "type": "Any"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 770, "col_offset": 17, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 770, "col_offset": 39, "nodeName": "est_qualities", "type": "Any"}, {"lineNumber": 771, "col_offset": 12, "nodeName": "correct_root", "type": "Any"}, {"lineNumber": 771, "col_offset": 27, "nodeName": "correct_quality", "type": "Any"}, {"lineNumber": 814, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 814, "col_offset": 17, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 814, "col_offset": 39, "nodeName": "est_qualities", "type": "Any"}, {"lineNumber": 815, "col_offset": 45, "nodeName": "correct_bass", "type": "Any"}, {"lineNumber": 854, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 855, "col_offset": 12, "nodeName": "correct_root", "type": "Any"}, {"lineNumber": 855, "col_offset": 27, "nodeName": "correct_quality", "type": "Any"}, {"lineNumber": 897, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 898, "col_offset": 45, "nodeName": "correct_bass", "type": "Any"}, {"lineNumber": 937, "col_offset": 12, "nodeName": "ref_roots", "type": "Any"}, {"lineNumber": 937, "col_offset": 25, "nodeName": "est_roots", "type": "Any"}, {"lineNumber": 978, "col_offset": 21, "nodeName": "ref_notes", "type": "numpy.ndarray"}, {"lineNumber": 978, "col_offset": 33, "nodeName": "est_notes", "type": "numpy.ndarray"}, {"lineNumber": 979, "col_offset": 12, "nodeName": "correct_notes", "type": "Any"}, {"lineNumber": 979, "col_offset": 29, "nodeName": "MIN_INTERSECTION", "type": "int"}, {"lineNumber": 1016, "col_offset": 27, "nodeName": "QUALITIES", "type": "Dict[str, List[int]]"}, {"lineNumber": 1017, "col_offset": 27, "nodeName": "QUALITIES", "type": "Dict[str, List[int]]"}, {"lineNumber": 1023, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1023, "col_offset": 17, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 1023, "col_offset": 39, "nodeName": "est_qualities", "type": "Any"}, {"lineNumber": 1024, "col_offset": 25, "nodeName": "correct_root", "type": "Any"}, {"lineNumber": 1024, "col_offset": 40, "nodeName": "correct_quality", "type": "Any"}, {"lineNumber": 1026, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1026, "col_offset": 29, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 1027, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1027, "col_offset": 29, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 1028, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 1028, "col_offset": 45, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1068, "col_offset": 27, "nodeName": "QUALITIES", "type": "Dict[str, List[int]]"}, {"lineNumber": 1069, "col_offset": 27, "nodeName": "QUALITIES", "type": "Dict[str, List[int]]"}, {"lineNumber": 1071, "col_offset": 52, "nodeName": "n", "type": "int"}, {"lineNumber": 1073, "col_offset": 52, "nodeName": "n", "type": "int"}, {"lineNumber": 1077, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1077, "col_offset": 17, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 1077, "col_offset": 39, "nodeName": "est_qualities", "type": "Any"}, {"lineNumber": 1078, "col_offset": 25, "nodeName": "correct_root_bass", "type": "Any"}, {"lineNumber": 1078, "col_offset": 45, "nodeName": "correct_quality", "type": "Any"}, {"lineNumber": 1081, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1081, "col_offset": 29, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 1082, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 1082, "col_offset": 29, "nodeName": "ref_qualities", "type": "Any"}, {"lineNumber": 1083, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 1083, "col_offset": 45, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 1089, "col_offset": 46, "nodeName": "bass_idx", "type": "Any"}, {"lineNumber": 1090, "col_offset": 22, "nodeName": "valid_inversion", "type": "Any"}, {"lineNumber": 1129, "col_offset": 32, "nodeName": "QUALITIES", "type": "Dict[str, List[int]]"}, {"lineNumber": 1129, "col_offset": 52, "nodeName": "name", "type": "str"}, {"lineNumber": 1129, "col_offset": 60, "nodeName": "valid_qualities", "type": "List[str]"}, {"lineNumber": 1135, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 1136, "col_offset": 25, "nodeName": "correct_root", "type": "Any"}, {"lineNumber": 1136, "col_offset": 40, "nodeName": "correct_quality", "type": "Any"}, {"lineNumber": 1139, "col_offset": 29, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1139, "col_offset": 40, "nodeName": "valid_qualities", "type": "numpy.ndarray"}, {"lineNumber": 1179, "col_offset": 32, "nodeName": "QUALITIES", "type": "Dict[str, List[int]]"}, {"lineNumber": 1179, "col_offset": 52, "nodeName": "name", "type": "str"}, {"lineNumber": 1179, "col_offset": 60, "nodeName": "valid_qualities", "type": "List[str]"}, {"lineNumber": 1182, "col_offset": 52, "nodeName": "n", "type": "int"}, {"lineNumber": 1184, "col_offset": 52, "nodeName": "n", "type": "int"}, {"lineNumber": 1187, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 1188, "col_offset": 25, "nodeName": "correct_root_bass", "type": "Any"}, {"lineNumber": 1188, "col_offset": 45, "nodeName": "correct_quality", "type": "Any"}, {"lineNumber": 1191, "col_offset": 29, "nodeName": "quality", "type": "Any"}, {"lineNumber": 1191, "col_offset": 40, "nodeName": "valid_qualities", "type": "numpy.ndarray"}, {"lineNumber": 1197, "col_offset": 46, "nodeName": "bass_idx", "type": "Any"}, {"lineNumber": 1198, "col_offset": 22, "nodeName": "valid_inversion", "type": "Any"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "c", "type": "str"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "s", "type": "int"}, {"lineNumber": 117, "col_offset": 36, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 117, "col_offset": 40, "nodeName": "pitch_classes", "type": "List[str]"}, {"lineNumber": 117, "col_offset": 55, "nodeName": "semitones", "type": "List[int]"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "d", "type": "str"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "s", "type": "int"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "degrees", "type": "List[str]"}, {"lineNumber": 124, "col_offset": 49, "nodeName": "semitones", "type": "List[int]"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "char", "type": "str"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "idx", "type": "int"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "idx", "type": "int"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "semitone", "type": "Optional[int]"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "count", "type": "Callable[..., int]"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "scale_degree", "type": "str"}, {"lineNumber": 307, "col_offset": 11, "nodeName": "chord_label", "type": "str"}, {"lineNumber": 353, "col_offset": 26, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 353, "col_offset": 40, "nodeName": "e", "type": "str"}, {"lineNumber": 362, "col_offset": 22, "nodeName": "quality_name", "type": "str"}, {"lineNumber": 449, "col_offset": 23, "nodeName": "bass_number", "type": "int"}, {"lineNumber": 496, "col_offset": 24, "nodeName": "label", "type": "Any"}, {"lineNumber": 497, "col_offset": 14, "nodeName": "i", "type": "int"}, {"lineNumber": 497, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 497, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 497, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 595, "col_offset": 16, "nodeName": "validate_chord_label", "type": "Callable[[Any], Any]"}, {"lineNumber": 595, "col_offset": 37, "nodeName": "chord_label", "type": "Any"}, {"lineNumber": 598, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 600, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 602, "col_offset": 11, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 602, "col_offset": 34, "nodeName": "shape", "type": "Any"}, {"lineNumber": 606, "col_offset": 11, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 607, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 609, "col_offset": 64, "nodeName": "N", "type": "int"}, {"lineNumber": 625, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 625, "col_offset": 15, "nodeName": "reference_labels", "type": "Any"}, {"lineNumber": 625, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 625, "col_offset": 45, "nodeName": "estimated_labels", "type": "Any"}, {"lineNumber": 632, "col_offset": 11, "nodeName": "valid_idx", "type": "Any"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 637, "col_offset": 20, "nodeName": "abs", "type": "Any"}, {"lineNumber": 642, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 644, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 644, "col_offset": 55, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 730, "col_offset": 12, "nodeName": "correct_root", "type": "Any"}, {"lineNumber": 730, "col_offset": 27, "nodeName": "correct_third", "type": "Any"}, {"lineNumber": 815, "col_offset": 12, "nodeName": "correct_root", "type": "Any"}, {"lineNumber": 815, "col_offset": 27, "nodeName": "correct_quality", "type": "Any"}, {"lineNumber": 898, "col_offset": 12, "nodeName": "correct_root", "type": "Any"}, {"lineNumber": 898, "col_offset": 27, "nodeName": "correct_quality", "type": "Any"}, {"lineNumber": 1028, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 1029, "col_offset": 41, "nodeName": "is_none", "type": "Any"}, {"lineNumber": 1083, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 1084, "col_offset": 41, "nodeName": "is_none", "type": "Any"}, {"lineNumber": 1089, "col_offset": 56, "nodeName": "ref_bass", "type": "Any"}, {"lineNumber": 1129, "col_offset": 42, "nodeName": "name", "type": "str"}, {"lineNumber": 1140, "col_offset": 22, "nodeName": "sum", "type": "Any"}, {"lineNumber": 1140, "col_offset": 29, "nodeName": "is_valid", "type": "numpy.ndarray"}, {"lineNumber": 1179, "col_offset": 42, "nodeName": "name", "type": "str"}, {"lineNumber": 1192, "col_offset": 22, "nodeName": "sum", "type": "Any"}, {"lineNumber": 1192, "col_offset": 29, "nodeName": "is_valid", "type": "numpy.ndarray"}, {"lineNumber": 1197, "col_offset": 56, "nodeName": "ref_bass", "type": "Any"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "get", "type": "Callable"}, {"lineNumber": 152, "col_offset": 41, "nodeName": "char", "type": "str"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "InvalidChordException", "type": "Type[InvalidChordException]"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "scale_degree", "type": "str"}, {"lineNumber": 310, "col_offset": 36, "nodeName": "one_char", "type": "str"}, {"lineNumber": 310, "col_offset": 46, "nodeName": "chord_label", "type": "str"}, {"lineNumber": 353, "col_offset": 26, "nodeName": "e", "type": "str"}, {"lineNumber": 353, "col_offset": 45, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 592, "col_offset": 58, "nodeName": "N", "type": "int"}, {"lineNumber": 592, "col_offset": 61, "nodeName": "M", "type": "int"}, {"lineNumber": 602, "col_offset": 34, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 609, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 637, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 637, "col_offset": 27, "nodeName": "diff", "type": "Any"}, {"lineNumber": 637, "col_offset": 35, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 1029, "col_offset": 23, "nodeName": "is_maj", "type": "Any"}, {"lineNumber": 1029, "col_offset": 32, "nodeName": "is_min", "type": "Any"}, {"lineNumber": 1084, "col_offset": 23, "nodeName": "is_maj", "type": "Any"}, {"lineNumber": 1084, "col_offset": 32, "nodeName": "is_min", "type": "Any"}, {"lineNumber": 1089, "col_offset": 65, "nodeName": "bass_idx", "type": "Any"}, {"lineNumber": 1140, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1192, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 1197, "col_offset": 65, "nodeName": "bass_idx", "type": "Any"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "PITCH_CLASSES", "type": "Dict[str, int]"}, {"lineNumber": 155, "col_offset": 54, "nodeName": "pitch_class", "type": "str"}, {"lineNumber": 353, "col_offset": 45, "nodeName": "extensions", "type": "str"}, {"lineNumber": 609, "col_offset": 44, "nodeName": "intervals", "type": "Any"}, {"lineNumber": 637, "col_offset": 27, "nodeName": "np", "type": "module"}]