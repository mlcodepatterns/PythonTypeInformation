[{"lineNumber": 8, "col_offset": 17, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "test_pitch_class_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "test_scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "test_well_formedness", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "test_split", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "test_join", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "test_encode", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "test_score_dyads", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "test_score_dyads_inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "test_score_triads", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "test_score_triads_inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "test_score_tetrads", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "test_score_tetrads_inv", "type": "Callable[[Any], Any]"}, {"lineNumber": 8, "col_offset": 17, "nodeName": "unittest", "type": "module"}, {"lineNumber": 171, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "pitch_class_to_semitone", "type": "Callable[[Any], int]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "pitch_class_to_semitone", "type": "Callable[[Any], int]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "pitch_class_to_semitone", "type": "Callable[[Any], int]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "validate_chord_label", "type": "Callable[[Any], None]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "validate_chord_label", "type": "Callable[[Any], None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "validate_chord_label", "type": "Callable[[Any], None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "validate_chord_label", "type": "Callable[[Any], None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "validate_chord_label", "type": "Callable[[Any], None]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "validate_chord_label", "type": "Callable[[Any], None]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "quality", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "notes", "type": "Any"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "bass", "type": "Any"}, {"lineNumber": 96, "col_offset": 37, "nodeName": "encode", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "root", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "bass", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "quality", "type": "Any"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "notes", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "bass", "type": "Any"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "encode", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "root", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "bass", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "InvalidChordException", "type": "Type[mir_eval.chord.InvalidChordException]"}, {"lineNumber": 114, "col_offset": 41, "nodeName": "encode", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 63, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 63, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 63, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 67, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 64, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 64, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 68, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 65, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 65, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 69, "nodeName": "ans", "type": "List[float]"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "pitch_class_to_semitone", "type": "Callable[[Any], int]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "pitch_class_to_semitone", "type": "Callable[[Any], int]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "pitch_class_to_semitone", "type": "Callable[[Any], int]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "pitch_class_to_semitone", "type": "Callable[[Any], int]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "pitch_class_to_semitone", "type": "Callable[[Any], int]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "scale_degree_to_semitone", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "validate_chord_label", "type": "Callable[[Any], None]"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "chord_label", "type": "str"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "chord", "type": "module"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "split", "type": "Callable[..., List[Any]]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "split", "type": "Callable[..., List[Any]]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "split", "type": "Callable[..., List[Any]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "split", "type": "Callable[..., List[Any]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "join", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "join", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "join", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "join", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "join", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "join", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "join", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 37, "nodeName": "chord", "type": "module"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "chord", "type": "module"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 114, "col_offset": 41, "nodeName": "chord", "type": "module"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "ChordTests"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 76, "col_offset": 56, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 78, "col_offset": 38, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 79, "col_offset": 65, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 80, "col_offset": 53, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "chord", "type": "module"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "quality", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "notes", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "quality", "type": "Any"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "notes", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "score_dyads", "type": "Any"}, {"lineNumber": 120, "col_offset": 43, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 120, "col_offset": 48, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "score_dyads", "type": "Any"}, {"lineNumber": 124, "col_offset": 43, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 124, "col_offset": 48, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "score_dyads", "type": "Any"}, {"lineNumber": 128, "col_offset": 43, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 128, "col_offset": 48, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "score_dyads_inv", "type": "Any"}, {"lineNumber": 134, "col_offset": 47, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 52, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "score_triads", "type": "Any"}, {"lineNumber": 140, "col_offset": 44, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 140, "col_offset": 49, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "score_triads", "type": "Any"}, {"lineNumber": 144, "col_offset": 44, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 144, "col_offset": 49, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "score_triads_inv", "type": "Any"}, {"lineNumber": 150, "col_offset": 48, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 150, "col_offset": 53, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "score_tetrads", "type": "Any"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 156, "col_offset": 50, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "score_tetrads", "type": "Any"}, {"lineNumber": 162, "col_offset": 45, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 162, "col_offset": 50, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "score_tetrads_inv", "type": "Any"}, {"lineNumber": 168, "col_offset": 49, "nodeName": "ref", "type": "List[str]"}, {"lineNumber": 168, "col_offset": 54, "nodeName": "est", "type": "List[str]"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "chord", "type": "module"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "chord", "type": "module"}]