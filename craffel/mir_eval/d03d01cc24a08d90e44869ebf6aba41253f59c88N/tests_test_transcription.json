[{"lineNumber": 54, "col_offset": 0, "nodeName": "test_match_offsets", "type": "Callable[[], Any]"}, {"lineNumber": 65, "col_offset": 0, "nodeName": "test_match_offsets_strict", "type": "Callable[[], Any]"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "test_match_onsets", "type": "Callable[[], Any]"}, {"lineNumber": 87, "col_offset": 0, "nodeName": "test_match_onsets_strict", "type": "Callable[[], Any]"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "test_match_notes", "type": "Callable[[], Any]"}, {"lineNumber": 116, "col_offset": 0, "nodeName": "test_match_notes_strict", "type": "Callable[[], Any]"}, {"lineNumber": 128, "col_offset": 0, "nodeName": "test_precision_recall_f1_overlap", "type": "Callable[[], Any]"}, {"lineNumber": 156, "col_offset": 0, "nodeName": "__check_score", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 160, "col_offset": 0, "nodeName": "test_onset_precision_recall_f1", "type": "Callable[[], Any]"}, {"lineNumber": 176, "col_offset": 0, "nodeName": "test_offset_precision_recall_f1", "type": "Callable[[], Any]"}, {"lineNumber": 213, "col_offset": 0, "nodeName": "test_invalid_pitch", "type": "Callable[[], Any]"}, {"lineNumber": 224, "col_offset": 0, "nodeName": "test_inconsistent_int_pitch", "type": "Callable[[], Any]"}, {"lineNumber": 235, "col_offset": 0, "nodeName": "test_empty_ref", "type": "Callable[[], Any]"}, {"lineNumber": 256, "col_offset": 0, "nodeName": "test_empty_est", "type": "Callable[[], Any]"}, {"lineNumber": 277, "col_offset": 0, "nodeName": "test_precision_recall_f1_overlap_empty", "type": "Callable[[], Any]"}, {"lineNumber": 295, "col_offset": 0, "nodeName": "test_onset_precision_recall_f1_empty", "type": "Callable[[], Any]"}, {"lineNumber": 311, "col_offset": 0, "nodeName": "test_offset_precision_recall_f1_empty", "type": "Callable[[], Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "A_TOL", "type": "float"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "REF_GLOB", "type": "str"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "EST_GLOB", "type": "str"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "SCORES_GLOB", "type": "str"}, {"lineNumber": 17, "col_offset": 6, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 23, "col_offset": 6, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "ref_int", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "est_int", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "ref_int", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "est_int", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "ref_int", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "est_int", "type": "Any"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "ref_int", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "est_int", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "scores_gen", "type": "numpy.ndarray"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "scores_gen", "type": "numpy.ndarray"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "ref_int", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "est_int", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "scores_gen", "type": "numpy.ndarray"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "ref_int", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "est_int", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "scores_gen", "type": "numpy.ndarray"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "ref_int", "type": "numpy.ndarray"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "est_int", "type": "numpy.ndarray"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "ref_int", "type": "numpy.ndarray"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "est_int", "type": "numpy.ndarray"}, {"lineNumber": 17, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 23, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "REF", "type": "numpy.ndarray"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "EST", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "match_offsets", "type": "Callable[..., List[Tuple[Any, Any]]]"}, {"lineNumber": 60, "col_offset": 45, "nodeName": "ref_int", "type": "Any"}, {"lineNumber": 60, "col_offset": 54, "nodeName": "est_int", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "matching", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "REF", "type": "numpy.ndarray"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "EST", "type": "numpy.ndarray"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "match_offsets", "type": "Callable[..., List[Tuple[Any, Any]]]"}, {"lineNumber": 71, "col_offset": 45, "nodeName": "ref_int", "type": "Any"}, {"lineNumber": 71, "col_offset": 54, "nodeName": "est_int", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "matching", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "REF", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "EST", "type": "numpy.ndarray"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "match_onsets", "type": "Callable[..., List[Tuple[Any, Any]]]"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "ref_int", "type": "Any"}, {"lineNumber": 82, "col_offset": 53, "nodeName": "est_int", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "matching", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 89, "col_offset": 14, "nodeName": "REF", "type": "numpy.ndarray"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "EST", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "match_onsets", "type": "Callable[..., List[Tuple[Any, Any]]]"}, {"lineNumber": 93, "col_offset": 44, "nodeName": "ref_int", "type": "Any"}, {"lineNumber": 93, "col_offset": 53, "nodeName": "est_int", "type": "Any"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "matching", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "ref_int", "type": "Any"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "ref_pitch", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "est_int", "type": "Any"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "est_pitch", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "match_notes", "type": "Callable[..., List[Tuple[Any, Any]]]"}, {"lineNumber": 104, "col_offset": 43, "nodeName": "ref_int", "type": "Any"}, {"lineNumber": 104, "col_offset": 52, "nodeName": "ref_pitch", "type": "Any"}, {"lineNumber": 104, "col_offset": 63, "nodeName": "est_int", "type": "Any"}, {"lineNumber": 105, "col_offset": 43, "nodeName": "est_pitch", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "matching", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "match_notes", "type": "Callable[..., List[Tuple[Any, Any]]]"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "ref_int", "type": "Any"}, {"lineNumber": 110, "col_offset": 52, "nodeName": "ref_pitch", "type": "Any"}, {"lineNumber": 110, "col_offset": 63, "nodeName": "est_int", "type": "Any"}, {"lineNumber": 111, "col_offset": 43, "nodeName": "est_pitch", "type": "Any"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "matching", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "ref_int", "type": "numpy.ndarray"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "ref_pitch", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "est_int", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "est_pitch", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "match_notes", "type": "Callable[..., List[Tuple[Any, Any]]]"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "ref_int", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 52, "nodeName": "ref_pitch", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 63, "nodeName": "est_int", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 43, "nodeName": "est_pitch", "type": "numpy.ndarray"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "matching", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 131, "col_offset": 4, "nodeName": "ref_int", "type": "Any"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "ref_pitch", "type": "Any"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "est_int", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "est_pitch", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "precision_recall_f1_overlap", "type": "Callable[..., Tuple[float, float, Any, Any]]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "ref_int", "type": "Any"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "ref_pitch", "type": "Any"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "est_int", "type": "Any"}, {"lineNumber": 136, "col_offset": 41, "nodeName": "est_pitch", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "scores_exp", "type": "numpy.ndarray"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "scores_gen", "type": "numpy.ndarray"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "precision_recall_f1_overlap", "type": "Callable[..., Tuple[float, float, Any, Any]]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "ref_int", "type": "Any"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "ref_pitch", "type": "Any"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "est_int", "type": "Any"}, {"lineNumber": 146, "col_offset": 41, "nodeName": "est_pitch", "type": "Any"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "scores_exp", "type": "numpy.ndarray"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "scores_gen", "type": "numpy.ndarray"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 157, "col_offset": 23, "nodeName": "score", "type": "Any"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "expected_score", "type": "Any"}, {"lineNumber": 163, "col_offset": 14, "nodeName": "REF", "type": "numpy.ndarray"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "EST", "type": "numpy.ndarray"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "onset_precision_recall_f1", "type": "Callable[..., Tuple[float, float, Any]]"}, {"lineNumber": 167, "col_offset": 57, "nodeName": "ref_int", "type": "Any"}, {"lineNumber": 167, "col_offset": 66, "nodeName": "est_int", "type": "Any"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 173, "col_offset": 23, "nodeName": "scores_exp", "type": "numpy.ndarray"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "scores_gen", "type": "numpy.ndarray"}, {"lineNumber": 179, "col_offset": 14, "nodeName": "REF", "type": "numpy.ndarray"}, {"lineNumber": 180, "col_offset": 14, "nodeName": "EST", "type": "numpy.ndarray"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "offset_precision_recall_f1", "type": "Callable[..., Tuple[float, float, Any]]"}, {"lineNumber": 183, "col_offset": 58, "nodeName": "ref_int", "type": "Any"}, {"lineNumber": 183, "col_offset": 67, "nodeName": "est_int", "type": "Any"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "scores_exp", "type": "numpy.ndarray"}, {"lineNumber": 189, "col_offset": 35, "nodeName": "scores_gen", "type": "numpy.ndarray"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "ref_int", "type": "numpy.ndarray"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "ref_pitch", "type": "numpy.ndarray"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "est_int", "type": "numpy.ndarray"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "est_pitch", "type": "numpy.ndarray"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "ref_int", "type": "numpy.ndarray"}, {"lineNumber": 226, "col_offset": 13, "nodeName": "ref_pitch", "type": "numpy.ndarray"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "est_int", "type": "numpy.ndarray"}, {"lineNumber": 227, "col_offset": 13, "nodeName": "est_pitch", "type": "numpy.ndarray"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "resetwarnings", "type": "Callable[[], None]"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 239, "col_offset": 49, "nodeName": "out", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "resetwarnings", "type": "Callable[[], None]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 260, "col_offset": 49, "nodeName": "out", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "ref_int", "type": "numpy.ndarray"}, {"lineNumber": 279, "col_offset": 13, "nodeName": "ref_pitch", "type": "numpy.ndarray"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "est_int", "type": "numpy.ndarray"}, {"lineNumber": 280, "col_offset": 13, "nodeName": "est_pitch", "type": "numpy.ndarray"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "precision_recall_f1_overlap", "type": "Callable[..., Tuple[float, float, Any, Any]]"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "ref_int", "type": "numpy.ndarray"}, {"lineNumber": 284, "col_offset": 21, "nodeName": "ref_pitch", "type": "numpy.ndarray"}, {"lineNumber": 284, "col_offset": 32, "nodeName": "est_int", "type": "numpy.ndarray"}, {"lineNumber": 284, "col_offset": 41, "nodeName": "est_pitch", "type": "numpy.ndarray"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "precision_recall_f1_overlap", "type": "Callable[..., Tuple[float, float, Any, Any]]"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "est_int", "type": "numpy.ndarray"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "est_pitch", "type": "numpy.ndarray"}, {"lineNumber": 290, "col_offset": 32, "nodeName": "ref_int", "type": "numpy.ndarray"}, {"lineNumber": 290, "col_offset": 41, "nodeName": "ref_pitch", "type": "numpy.ndarray"}, {"lineNumber": 297, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 298, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "onset_precision_recall_f1", "type": "Callable[..., Tuple[float, float, Any]]"}, {"lineNumber": 301, "col_offset": 57, "nodeName": "ref_int", "type": "numpy.ndarray"}, {"lineNumber": 301, "col_offset": 66, "nodeName": "est_int", "type": "numpy.ndarray"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "onset_precision_recall_f1", "type": "Callable[..., Tuple[float, float, Any]]"}, {"lineNumber": 306, "col_offset": 57, "nodeName": "est_int", "type": "numpy.ndarray"}, {"lineNumber": 306, "col_offset": 66, "nodeName": "ref_int", "type": "numpy.ndarray"}, {"lineNumber": 313, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 314, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "offset_precision_recall_f1", "type": "Callable[..., Tuple[float, float, Any]]"}, {"lineNumber": 317, "col_offset": 58, "nodeName": "ref_int", "type": "numpy.ndarray"}, {"lineNumber": 317, "col_offset": 67, "nodeName": "est_int", "type": "numpy.ndarray"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "offset_precision_recall_f1", "type": "Callable[..., Tuple[float, float, Any]]"}, {"lineNumber": 322, "col_offset": 58, "nodeName": "est_int", "type": "numpy.ndarray"}, {"lineNumber": 322, "col_offset": 67, "nodeName": "ref_int", "type": "numpy.ndarray"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "transcription", "type": "module"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "transcription", "type": "module"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "transcription", "type": "module"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "transcription", "type": "module"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "REF", "type": "numpy.ndarray"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "REF", "type": "numpy.ndarray"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "EST", "type": "numpy.ndarray"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "EST", "type": "numpy.ndarray"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "transcription", "type": "module"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "transcription", "type": "module"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 118, "col_offset": 45, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 119, "col_offset": 48, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "transcription", "type": "module"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "REF", "type": "numpy.ndarray"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "REF", "type": "numpy.ndarray"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "EST", "type": "numpy.ndarray"}, {"lineNumber": 132, "col_offset": 37, "nodeName": "EST", "type": "numpy.ndarray"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "transcription", "type": "module"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "precision", "type": "float"}, {"lineNumber": 138, "col_offset": 38, "nodeName": "recall", "type": "float"}, {"lineNumber": 138, "col_offset": 46, "nodeName": "f_measure", "type": "Any"}, {"lineNumber": 138, "col_offset": 57, "nodeName": "avg_overlap_ratio", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 52, "nodeName": "A_TOL", "type": "float"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "transcription", "type": "module"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "precision", "type": "float"}, {"lineNumber": 148, "col_offset": 38, "nodeName": "recall", "type": "float"}, {"lineNumber": 148, "col_offset": 46, "nodeName": "f_measure", "type": "Any"}, {"lineNumber": 148, "col_offset": 57, "nodeName": "avg_overlap_ratio", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 52, "nodeName": "A_TOL", "type": "float"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 51, "nodeName": "A_TOL", "type": "float"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "transcription", "type": "module"}, {"lineNumber": 169, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "precision", "type": "float"}, {"lineNumber": 169, "col_offset": 38, "nodeName": "recall", "type": "float"}, {"lineNumber": 169, "col_offset": 46, "nodeName": "f_measure", "type": "Any"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 52, "nodeName": "A_TOL", "type": "float"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "transcription", "type": "module"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "precision", "type": "float"}, {"lineNumber": 185, "col_offset": 38, "nodeName": "recall", "type": "float"}, {"lineNumber": 185, "col_offset": 46, "nodeName": "f_measure", "type": "Any"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 52, "nodeName": "A_TOL", "type": "float"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 215, "col_offset": 45, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 216, "col_offset": 45, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 219, "col_offset": 11, "nodeName": "ref_int", "type": "numpy.ndarray"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "ref_pitch", "type": "numpy.ndarray"}, {"lineNumber": 219, "col_offset": 31, "nodeName": "est_int", "type": "numpy.ndarray"}, {"lineNumber": 219, "col_offset": 40, "nodeName": "est_pitch", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "est_int", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "est_pitch", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 31, "nodeName": "ref_int", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 40, "nodeName": "ref_pitch", "type": "numpy.ndarray"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 226, "col_offset": 53, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 227, "col_offset": 45, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "ref_int", "type": "numpy.ndarray"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "ref_pitch", "type": "numpy.ndarray"}, {"lineNumber": 230, "col_offset": 31, "nodeName": "est_int", "type": "numpy.ndarray"}, {"lineNumber": 230, "col_offset": 40, "nodeName": "est_pitch", "type": "numpy.ndarray"}, {"lineNumber": 232, "col_offset": 11, "nodeName": "est_int", "type": "numpy.ndarray"}, {"lineNumber": 232, "col_offset": 20, "nodeName": "est_pitch", "type": "numpy.ndarray"}, {"lineNumber": 232, "col_offset": 31, "nodeName": "ref_int", "type": "numpy.ndarray"}, {"lineNumber": 232, "col_offset": 40, "nodeName": "ref_pitch", "type": "numpy.ndarray"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "warnings", "type": "module"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "warnings", "type": "module"}, {"lineNumber": 239, "col_offset": 9, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "ref_int", "type": "numpy.ndarray"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "ref_pitch", "type": "numpy.ndarray"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "est_int", "type": "numpy.ndarray"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "est_pitch", "type": "numpy.ndarray"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "validate", "type": "Callable[[Any, Any, Any, Any], None]"}, {"lineNumber": 244, "col_offset": 40, "nodeName": "ref_int", "type": "numpy.ndarray"}, {"lineNumber": 244, "col_offset": 49, "nodeName": "ref_pitch", "type": "numpy.ndarray"}, {"lineNumber": 244, "col_offset": 60, "nodeName": "est_int", "type": "numpy.ndarray"}, {"lineNumber": 244, "col_offset": 69, "nodeName": "est_pitch", "type": "numpy.ndarray"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 250, "col_offset": 34, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "warnings", "type": "module"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "warnings", "type": "module"}, {"lineNumber": 260, "col_offset": 9, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "ref_int", "type": "numpy.ndarray"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "ref_pitch", "type": "numpy.ndarray"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "est_int", "type": "numpy.ndarray"}, {"lineNumber": 263, "col_offset": 17, "nodeName": "est_pitch", "type": "numpy.ndarray"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "validate", "type": "Callable[[Any, Any, Any, Any], None]"}, {"lineNumber": 265, "col_offset": 40, "nodeName": "ref_int", "type": "numpy.ndarray"}, {"lineNumber": 265, "col_offset": 49, "nodeName": "ref_pitch", "type": "numpy.ndarray"}, {"lineNumber": 265, "col_offset": 60, "nodeName": "est_int", "type": "numpy.ndarray"}, {"lineNumber": 265, "col_offset": 69, "nodeName": "est_pitch", "type": "numpy.ndarray"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 271, "col_offset": 34, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 279, "col_offset": 39, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 280, "col_offset": 45, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "transcription", "type": "module"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "precision", "type": "float"}, {"lineNumber": 286, "col_offset": 23, "nodeName": "recall", "type": "float"}, {"lineNumber": 286, "col_offset": 31, "nodeName": "f1", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "transcription", "type": "module"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "precision", "type": "float"}, {"lineNumber": 292, "col_offset": 23, "nodeName": "recall", "type": "float"}, {"lineNumber": 292, "col_offset": 31, "nodeName": "f1", "type": "Any"}, {"lineNumber": 297, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 298, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "transcription", "type": "module"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "precision", "type": "float"}, {"lineNumber": 303, "col_offset": 23, "nodeName": "recall", "type": "float"}, {"lineNumber": 303, "col_offset": 31, "nodeName": "f1", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "transcription", "type": "module"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "precision", "type": "float"}, {"lineNumber": 308, "col_offset": 23, "nodeName": "recall", "type": "float"}, {"lineNumber": 308, "col_offset": 31, "nodeName": "f1", "type": "Any"}, {"lineNumber": 313, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 314, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "transcription", "type": "module"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "precision", "type": "float"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "recall", "type": "float"}, {"lineNumber": 319, "col_offset": 31, "nodeName": "f1", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "transcription", "type": "module"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "precision", "type": "float"}, {"lineNumber": 324, "col_offset": 23, "nodeName": "recall", "type": "float"}, {"lineNumber": 324, "col_offset": 31, "nodeName": "f1", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 118, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 48, "nodeName": "np", "type": "module"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 139, "col_offset": 27, "nodeName": "SCORES", "type": "Dict[str, float]"}, {"lineNumber": 139, "col_offset": 48, "nodeName": "SCORES", "type": "Dict[str, float]"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "SCORES", "type": "Dict[str, float]"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "SCORES", "type": "Dict[str, float]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "SCORES", "type": "Dict[str, float]"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "SCORES", "type": "Dict[str, float]"}, {"lineNumber": 151, "col_offset": 27, "nodeName": "SCORES", "type": "Dict[str, float]"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "SCORES", "type": "Dict[str, float]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "ONSET_SCORES", "type": "Dict[str, float]"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "ONSET_SCORES", "type": "Dict[str, float]"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "ONSET_SCORES", "type": "Dict[str, float]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "OFFSET_SCORES", "type": "Dict[str, float]"}, {"lineNumber": 187, "col_offset": 27, "nodeName": "OFFSET_SCORES", "type": "Dict[str, float]"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "OFFSET_SCORES", "type": "Dict[str, float]"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 215, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 216, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 218, "col_offset": 30, "nodeName": "validate", "type": "Callable[[Any, Any, Any, Any], None]"}, {"lineNumber": 220, "col_offset": 30, "nodeName": "validate", "type": "Callable[[Any, Any, Any, Any], None]"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "validate", "type": "Callable[[Any, Any, Any, Any], None]"}, {"lineNumber": 231, "col_offset": 30, "nodeName": "validate", "type": "Callable[[Any, Any, Any, Any], None]"}, {"lineNumber": 239, "col_offset": 9, "nodeName": "warnings", "type": "module"}, {"lineNumber": 241, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 241, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 242, "col_offset": 49, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "transcription", "type": "module"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "out", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 260, "col_offset": 9, "nodeName": "warnings", "type": "module"}, {"lineNumber": 262, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 262, "col_offset": 49, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 263, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "transcription", "type": "module"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 268, "col_offset": 19, "nodeName": "out", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 279, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 279, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 280, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "raises", "type": "Any"}, {"lineNumber": 218, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 218, "col_offset": 30, "nodeName": "transcription", "type": "module"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "raises", "type": "Any"}, {"lineNumber": 220, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 220, "col_offset": 30, "nodeName": "transcription", "type": "module"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "raises", "type": "Any"}, {"lineNumber": 229, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "transcription", "type": "module"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "raises", "type": "Any"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 231, "col_offset": 30, "nodeName": "transcription", "type": "module"}, {"lineNumber": 241, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 241, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 242, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "out", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 262, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 262, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 263, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "out", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 218, "col_offset": 30, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 220, "col_offset": 30, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 229, "col_offset": 30, "nodeName": "mir_eval", "type": "module"}, {"lineNumber": 231, "col_offset": 30, "nodeName": "mir_eval", "type": "module"}]