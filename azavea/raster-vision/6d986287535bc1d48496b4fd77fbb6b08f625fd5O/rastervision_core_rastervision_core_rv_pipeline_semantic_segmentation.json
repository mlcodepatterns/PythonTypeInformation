[{"lineNumber": 14, "col_offset": 0, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "RVPipeline", "type": "Any"}, {"lineNumber": 14, "col_offset": 6, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 14, "col_offset": 24, "nodeName": "__name__", "type": "str"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "co", "type": "Any"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "raster_source", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "raster_source", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "extent", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "label_source", "type": "Any"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "ground_truth_label_source", "type": "Any"}, {"lineNumber": 64, "col_offset": 42, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 21, "col_offset": 60, "nodeName": "List", "type": "Any"}, {"lineNumber": 14, "col_offset": 6, "nodeName": "logging", "type": "module"}, {"lineNumber": 21, "col_offset": 45, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "scene", "type": "Any"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "get_extent", "type": "Any"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "scene", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "total_windows", "type": "int"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "aoi_polygons", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "filt_windows", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "windows", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "filt_windows", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 50, "nodeName": "List", "type": "Any"}, {"lineNumber": 76, "col_offset": 7, "nodeName": "window_method", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "sliding", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "stride", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "a_window", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 21, "col_offset": 65, "nodeName": "Box", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "scene_cfg", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "img_channels", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "chip", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "null_class_id", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "chip", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "null_class_id", "type": "Any"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "labels", "type": "Any"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "raster_source", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "windows", "type": "Sequence[Any]"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "scene", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "windows", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "chip", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "null_labels", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 55, "nodeName": "Box", "type": "Any"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "Box", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "negative_survival_prob", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "should_use", "type": "Any"}, {"lineNumber": 76, "col_offset": 7, "nodeName": "co", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "SemanticSegmentationWindowMethod", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "stride", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "window_method", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "attempts", "type": "int"}, {"lineNumber": 105, "col_offset": 60, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 106, "col_offset": 33, "nodeName": "tmp_dir", "type": "str"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "img_channels", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "img_channels", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "train_scenes", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "build", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "tmp_dir", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "img_channels", "type": "Any"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "num_channels", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "chip", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "get_train_windows", "type": "Callable[..., List[Any]]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "scene", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "train_chip_sz", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "get_labels", "type": "Any"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "sample", "type": "Any"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "get_label_arr", "type": "Any"}, {"lineNumber": 144, "col_offset": 48, "nodeName": "window", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "get_null_class_id", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "fill_no_data", "type": "Any"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "img", "type": "Any"}, {"lineNumber": 146, "col_offset": 40, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 146, "col_offset": 51, "nodeName": "null_class_id", "type": "Any"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "get_null_class_id", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "window", "type": "Any"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "chip", "type": "Any"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 152, "col_offset": 32, "nodeName": "windows", "type": "Any"}, {"lineNumber": 152, "col_offset": 41, "nodeName": "chips", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 154, "col_offset": 51, "nodeName": "null_class_id", "type": "Any"}, {"lineNumber": 35, "col_offset": 32, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "filter_by_aoi", "type": "Any"}, {"lineNumber": 43, "col_offset": 40, "nodeName": "windows", "type": "Sequence[Any]"}, {"lineNumber": 43, "col_offset": 49, "nodeName": "aoi_polygons", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "get_chip", "type": "Any"}, {"lineNumber": 49, "col_offset": 42, "nodeName": "w", "type": "Any"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "nodata_below_threshold", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "chip", "type": "Any"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "chip_nodata_threshold", "type": "float"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "get_label_arr", "type": "Any"}, {"lineNumber": 53, "col_offset": 65, "nodeName": "w", "type": "Any"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "nodata_below_thresh", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "co", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "target_class_ids", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "enough_target_pixels", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "window", "type": "Any"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "target_count_threshold", "type": "Any"}, {"lineNumber": 71, "col_offset": 51, "nodeName": "target_class_ids", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "is_pos", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "co", "type": "Any"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "filter_windows", "type": "Callable[[Sequence[Any]], List[Any]]"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "should_use_window", "type": "Callable[[Any], bool]"}, {"lineNumber": 80, "col_offset": 49, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "a_window", "type": "Any"}, {"lineNumber": 83, "col_offset": 9, "nodeName": "co", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "SemanticSegmentationWindowMethod", "type": "Any"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "attempts", "type": "int"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "chips_per_scene", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "window", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "attempts", "type": "int"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 108, "col_offset": 47, "nodeName": "get_img_channels", "type": "Callable[[], Any]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "validate_config", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "validate_config", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "scene_cfg", "type": "Any"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "activate", "type": "Any"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "raster_source", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 128, "col_offset": 37, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 136, "col_offset": 34, "nodeName": "chip_nodata_threshold", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "ground_truth_label_source", "type": "Any"}, {"lineNumber": 139, "col_offset": 65, "nodeName": "window", "type": "Any"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "labels", "type": "Any"}, {"lineNumber": 144, "col_offset": 48, "nodeName": "sample", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "get_label_arr", "type": "Any"}, {"lineNumber": 153, "col_offset": 45, "nodeName": "window", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "set_label_arr", "type": "Any"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "window", "type": "Any"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "Box", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "Box", "type": "Any"}, {"lineNumber": 43, "col_offset": 49, "nodeName": "scene", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "raster_source", "type": "Any"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "get_null_class_id", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 57, "col_offset": 36, "nodeName": "w", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "co", "type": "Any"}, {"lineNumber": 68, "col_offset": 54, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "label_source", "type": "Any"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "co", "type": "Any"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "negative_survival_prob", "type": "Any"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "round", "type": "Callable"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "get_windows", "type": "Any"}, {"lineNumber": 78, "col_offset": 58, "nodeName": "chip_size", "type": "int"}, {"lineNumber": 78, "col_offset": 69, "nodeName": "stride", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "co", "type": "Any"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "make_random_square", "type": "Any"}, {"lineNumber": 88, "col_offset": 47, "nodeName": "chip_size", "type": "int"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "negative_survival_prob", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 108, "col_offset": 47, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "scene", "type": "Any"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "scene", "type": "Any"}, {"lineNumber": 127, "col_offset": 34, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 136, "col_offset": 34, "nodeName": "config", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "scene", "type": "Any"}, {"lineNumber": 144, "col_offset": 20, "nodeName": "sample", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "labels", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 44, "col_offset": 54, "nodeName": "total_windows", "type": "int"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "get_labels", "type": "Any"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "w", "type": "Any"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "all", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "null_labels", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "filt_windows", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "filt_windows", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "windows", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "rand", "type": "Any"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "co", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "chip_size", "type": "int"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "extent", "type": "Any"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "extent", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "filter_windows", "type": "Callable[[Sequence[Any]], List[Any]]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "co", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "window", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 127, "col_offset": 34, "nodeName": "config", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 136, "col_offset": 34, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "windows", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "label_source", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "random", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "window", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "attempts", "type": "int"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "chips_per_scene", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "window", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "should_use_window", "type": "Callable[[Any], bool]"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "window", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 127, "col_offset": 34, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "sum", "type": "Any"}, {"lineNumber": 154, "col_offset": 29, "nodeName": "chip", "type": "Any"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "co", "type": "Any"}, {"lineNumber": 95, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 95, "col_offset": 56, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "window", "type": "Any"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "windows", "type": "List[Any]"}]