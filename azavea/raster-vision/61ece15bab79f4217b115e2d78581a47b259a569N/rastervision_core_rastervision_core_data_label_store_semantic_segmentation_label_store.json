[{"lineNumber": 12, "col_offset": 37, "nodeName": "LabelStore", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "uri", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "uri", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "extent", "type": "Any"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "extent", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "crs_transformer", "type": "Any"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "crs_transformer", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "tmp_dir", "type": "Any"}, {"lineNumber": 42, "col_offset": 23, "nodeName": "tmp_dir", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "source", "type": "None"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "extent", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "raw_labels", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "labels", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "local_path", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "transform", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "crs", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "band_count", "type": "int"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "class_trans", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "class_trans", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "class_trans", "type": "None"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "file_exists", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "uri", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "source", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "source", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "source", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "SemanticSegmentationLabels", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "get_extent", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "get_raw_chip", "type": "Any"}, {"lineNumber": 70, "col_offset": 46, "nodeName": "extent", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "set_label_arr", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "extent", "type": "Any"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "get_local_path", "type": "Any"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "uri", "type": "Any"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "tmp_dir", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "make_dir", "type": "Any"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "local_path", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "get_affine_transform", "type": "Any"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "get_image_crs", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "band_count", "type": "int"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "window", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "upload_or_copy", "type": "Any"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "local_path", "type": "Any"}, {"lineNumber": 128, "col_offset": 35, "nodeName": "uri", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "vo", "type": "Any"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "SemanticSegmentationLabels", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 45, "col_offset": 31, "nodeName": "SegmentationClassTransformer", "type": "Any"}, {"lineNumber": 45, "col_offset": 60, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "build", "type": "Any"}, {"lineNumber": 51, "col_offset": 65, "nodeName": "tmp_dir", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "source", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "source", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "source", "type": "Any"}, {"lineNumber": 71, "col_offset": 47, "nodeName": "class_trans", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "raw_labels", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "rgb_to_class", "type": "Any"}, {"lineNumber": 72, "col_offset": 51, "nodeName": "raw_labels", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "crs_transformer", "type": "Any"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "crs_transformer", "type": "Any"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "open", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "local_path", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "get_windows", "type": "Any"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "window", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "window", "type": "Any"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "class_trans", "type": "Any"}, {"lineNumber": 128, "col_offset": 35, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "denoise_radius", "type": "Any"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "denoise", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "uri", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "uri", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "mode", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "class_mask", "type": "numpy.ndarray"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "uri", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 71, "col_offset": 47, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "class_trans", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "rasterio", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "ymax", "type": "Any"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "xmax", "type": "Any"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "band_count", "type": "int"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "transform", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "crs", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "labels", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "get_label_arr", "type": "Any"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "window", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "intersection", "type": "Any"}, {"lineNumber": 110, "col_offset": 45, "nodeName": "extent", "type": "Any"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "mask", "type": "Any"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "rasterio_format", "type": "Any"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "rgb_labels", "type": "Any"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "chan", "type": "int"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "img", "type": "Any"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "vo", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "vo", "type": "Any"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "get_mode", "type": "Any"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "vo", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "denoise_radius", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "class_mask", "type": "Any"}, {"lineNumber": 147, "col_offset": 19, "nodeName": "uri", "type": "Any"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "geojson", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "str_to_file", "type": "Any"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "geojson", "type": "Any"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "uri", "type": "Any"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "RasterioSourceConfig", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "extent", "type": "Any"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "extent", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "labels", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "window", "type": "Any"}, {"lineNumber": 110, "col_offset": 45, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "mask", "type": "Any"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "window", "type": "Any"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "class_to_rgb", "type": "Any"}, {"lineNumber": 120, "col_offset": 63, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "astype", "type": "Any"}, {"lineNumber": 125, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "write_band", "type": "Any"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "img", "type": "Any"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "vo", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 139, "col_offset": 38, "nodeName": "mask", "type": "Any"}, {"lineNumber": 139, "col_offset": 46, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 139, "col_offset": 62, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "pixel_to_map", "type": "Any"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "denoise", "type": "Any"}, {"lineNumber": 145, "col_offset": 49, "nodeName": "class_mask", "type": "numpy.ndarray"}, {"lineNumber": 145, "col_offset": 61, "nodeName": "denoise_radius", "type": "Any"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "mode", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "geojson_from_mask", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "uri", "type": "Any"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "geojson", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "class_trans", "type": "Any"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "write_band", "type": "Any"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 126, "col_offset": 54, "nodeName": "window", "type": "Any"}, {"lineNumber": 139, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "crs_transformer", "type": "Any"}, {"lineNumber": 142, "col_offset": 62, "nodeName": "x", "type": "Any"}, {"lineNumber": 142, "col_offset": 65, "nodeName": "y", "type": "Any"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "denoise", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "vectorification", "type": "Any"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "class_mask", "type": "Any"}, {"lineNumber": 150, "col_offset": 34, "nodeName": "transform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "mode", "type": "Any"}, {"lineNumber": 152, "col_offset": 41, "nodeName": "min_aspect_ratio", "type": "Any"}, {"lineNumber": 153, "col_offset": 33, "nodeName": "min_area", "type": "Any"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "element_width_factor", "type": "Any"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "element_thickness", "type": "Any"}, {"lineNumber": 156, "col_offset": 29, "nodeName": "mode", "type": "Any"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "geojson_from_mask", "type": "Any"}, {"lineNumber": 51, "col_offset": 53, "nodeName": "uri", "type": "Any"}, {"lineNumber": 111, "col_offset": 40, "nodeName": "get_height", "type": "Any"}, {"lineNumber": 112, "col_offset": 38, "nodeName": "get_width", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "xmax", "type": "Any"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 123, "col_offset": 28, "nodeName": "chan", "type": "int"}, {"lineNumber": 123, "col_offset": 38, "nodeName": "rgb_labels", "type": "Any"}, {"lineNumber": 123, "col_offset": 69, "nodeName": "window", "type": "Any"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 152, "col_offset": 41, "nodeName": "vo", "type": "Any"}, {"lineNumber": 153, "col_offset": 33, "nodeName": "vo", "type": "Any"}, {"lineNumber": 154, "col_offset": 37, "nodeName": "vo", "type": "Any"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "vo", "type": "Any"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "vectorification", "type": "Any"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "class_mask", "type": "Any"}, {"lineNumber": 158, "col_offset": 51, "nodeName": "transform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 158, "col_offset": 67, "nodeName": "mode", "type": "Any"}, {"lineNumber": 111, "col_offset": 40, "nodeName": "window", "type": "Any"}, {"lineNumber": 112, "col_offset": 38, "nodeName": "window", "type": "Any"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "window", "type": "Any"}, {"lineNumber": 115, "col_offset": 37, "nodeName": "window", "type": "Any"}, {"lineNumber": 115, "col_offset": 50, "nodeName": "window", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "window", "type": "Any"}, {"lineNumber": 123, "col_offset": 55, "nodeName": "chan", "type": "int"}]