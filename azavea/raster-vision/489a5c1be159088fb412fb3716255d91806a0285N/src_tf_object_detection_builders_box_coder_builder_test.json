[{"lineNumber": 28, "col_offset": 26, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "test", "type": "Any"}, {"lineNumber": 106, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "tf", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "box_coder_proto", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "box_coder_object", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "box_coder_proto", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "box_coder_object", "type": "Any"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "box_coder_proto", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "box_coder_object", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "box_coder_proto", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "box_coder_object", "type": "Any"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "box_coder_proto", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "box_coder_object", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "box_coder_proto", "type": "Any"}, {"lineNumber": 107, "col_offset": 2, "nodeName": "main", "type": "Any"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "BoxCoder", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "box_coder_text_proto", "type": "str"}, {"lineNumber": 36, "col_offset": 44, "nodeName": "box_coder_proto", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "build", "type": "Any"}, {"lineNumber": 37, "col_offset": 47, "nodeName": "box_coder_proto", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "_scale_factors", "type": "Any"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "BoxCoder", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "box_coder_text_proto", "type": "str"}, {"lineNumber": 52, "col_offset": 44, "nodeName": "box_coder_proto", "type": "Any"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "build", "type": "Any"}, {"lineNumber": 53, "col_offset": 47, "nodeName": "box_coder_proto", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "_scale_factors", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "BoxCoder", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "box_coder_text_proto", "type": "str"}, {"lineNumber": 64, "col_offset": 44, "nodeName": "box_coder_proto", "type": "Any"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "build", "type": "Any"}, {"lineNumber": 65, "col_offset": 47, "nodeName": "box_coder_proto", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "BoxCoder", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "box_coder_text_proto", "type": "str"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "box_coder_proto", "type": "Any"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "build", "type": "Any"}, {"lineNumber": 77, "col_offset": 47, "nodeName": "box_coder_proto", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "_scale_factors", "type": "Any"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "BoxCoder", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "box_coder_text_proto", "type": "str"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "box_coder_proto", "type": "Any"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "build", "type": "Any"}, {"lineNumber": 92, "col_offset": 47, "nodeName": "box_coder_proto", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "_scale_factors", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "BoxCoder", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "box_coder_text_proto", "type": "str"}, {"lineNumber": 101, "col_offset": 44, "nodeName": "box_coder_proto", "type": "Any"}, {"lineNumber": 107, "col_offset": 2, "nodeName": "test", "type": "Any"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "box_coder_pb2", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "box_coder_builder", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "self", "type": "BoxCoderBuilderTest"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "box_coder_object", "type": "Any"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "FasterRcnnBoxCoder", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "self", "type": "BoxCoderBuilderTest"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "box_coder_object", "type": "Any"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "box_coder_pb2", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "box_coder_builder", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "self", "type": "BoxCoderBuilderTest"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "box_coder_object", "type": "Any"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "FasterRcnnBoxCoder", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "self", "type": "BoxCoderBuilderTest"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "box_coder_object", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "box_coder_pb2", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "box_coder_builder", "type": "Any"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "self", "type": "BoxCoderBuilderTest"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "box_coder_object", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "MeanStddevBoxCoder", "type": "Any"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "box_coder_pb2", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "box_coder_builder", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "self", "type": "BoxCoderBuilderTest"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "box_coder_object", "type": "Any"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "SquareBoxCoder", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "self", "type": "BoxCoderBuilderTest"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "box_coder_object", "type": "Any"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "box_coder_pb2", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 92, "col_offset": 23, "nodeName": "box_coder_builder", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "self", "type": "BoxCoderBuilderTest"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "box_coder_object", "type": "Any"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "SquareBoxCoder", "type": "Any"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "self", "type": "BoxCoderBuilderTest"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "box_coder_object", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "box_coder_pb2", "type": "Any"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 102, "col_offset": 9, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 103, "col_offset": 6, "nodeName": "build", "type": "Any"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "box_coder_proto", "type": "Any"}, {"lineNumber": 107, "col_offset": 2, "nodeName": "tf", "type": "Any"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "faster_rcnn_box_coder", "type": "Any"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "faster_rcnn_box_coder", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "mean_stddev_box_coder", "type": "Any"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "square_box_coder", "type": "Any"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "square_box_coder", "type": "Any"}, {"lineNumber": 102, "col_offset": 9, "nodeName": "self", "type": "BoxCoderBuilderTest"}, {"lineNumber": 103, "col_offset": 6, "nodeName": "box_coder_builder", "type": "Any"}]