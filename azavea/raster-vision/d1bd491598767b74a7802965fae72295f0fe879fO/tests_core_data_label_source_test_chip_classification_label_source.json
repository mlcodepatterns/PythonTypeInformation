[{"lineNumber": 17, "col_offset": 40, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "test_infer_cell1", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "test_infer_cell2", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "test_infer_cell3", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "test_infer_cell4", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "test_infer_cell5", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "test_infer_cell6", "type": "Callable[[Any], Any]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "test_infer_cell7", "type": "Callable[[Any], Any]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "test_infer_cell8", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "test_get_labels_inferred", "type": "Callable[[Any], Any]"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "test_get_labels_small_extent", "type": "Callable[[Any], Any]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "test_get_labels", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 40, "nodeName": "unittest", "type": "module"}, {"lineNumber": 246, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "crs_transformer", "type": "tests.core.data.mock_crs_transformer.DoubleCRSTransformer"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "box1", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "box2", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "class_id1", "type": "int"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "class_id2", "type": "int"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "background_class_id", "type": "int"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "geoms", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "f", "type": "Union[Dict[str, Union[str, Dict[str, Union[str, List[List[List[List[float]]]]]], Dict[str, Union[str, int, float]]]], Dict[str, Union[str, Dict[str, Union[str, List[List[List[float]]]]], Dict[str, Union[float, str, int]]]]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "str_tree", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "file_name", "type": "str"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "tmp_dir", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "uri", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "ioa_thresh", "type": "float"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "use_intersection_over_cell", "type": "bool"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "background_class_id", "type": "None"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "pick_min_class_id", "type": "bool"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "ioa_thresh", "type": "float"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "use_intersection_over_cell", "type": "bool"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "background_class_id", "type": "None"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "pick_min_class_id", "type": "bool"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "ioa_thresh", "type": "float"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "use_intersection_over_cell", "type": "bool"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "background_class_id", "type": "None"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "pick_min_class_id", "type": "bool"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "ioa_thresh", "type": "float"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "use_intersection_over_cell", "type": "bool"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "background_class_id", "type": "None"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "pick_min_class_id", "type": "bool"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "ioa_thresh", "type": "float"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "use_intersection_over_cell", "type": "bool"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "background_class_id", "type": "None"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "pick_min_class_id", "type": "bool"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "ioa_thresh", "type": "float"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "use_intersection_over_cell", "type": "bool"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "background_class_id", "type": "int"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "background_class_id", "type": "int"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "pick_min_class_id", "type": "bool"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "ioa_thresh", "type": "float"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "use_intersection_over_cell", "type": "bool"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "background_class_id", "type": "None"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "pick_min_class_id", "type": "bool"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "cell", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "ioa_thresh", "type": "float"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "use_intersection_over_cell", "type": "bool"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "background_class_id", "type": "None"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "pick_min_class_id", "type": "bool"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "extent", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "cells", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "extent", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "cells", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "extent", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "cells", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 19, "col_offset": 31, "nodeName": "DoubleCRSTransformer", "type": "Type[tests.core.data.mock_crs_transformer.DoubleCRSTransformer]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "ClassConfig", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "geojson", "type": "Dict[str, Union[str, List[Union[Dict[str, Union[str, Dict[str, Union[str, List[List[List[List[float]]]]]], Dict[str, Union[str, int, float]]]], Dict[str, Union[str, Dict[str, Union[str, List[List[List[float]]]]], Dict[str, Union[float, str, int]]]]]]]]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "g", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "class_id", "type": "int"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "STRtree", "type": "Any"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "geoms", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "get_tmp_dir", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 69, "col_offset": 51, "nodeName": "file_name", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "json_to_file", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "geojson", "type": "Dict[str, Union[str, List[Union[Dict[str, Union[str, Dict[str, Union[str, List[List[List[List[float]]]]]], Dict[str, Union[str, int, float]]]], Dict[str, Union[str, Dict[str, Union[str, List[List[List[float]]]]], Dict[str, Union[float, str, int]]]]]]]]"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "uri", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "cleanup", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "infer_cell", "type": "Any"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "cell", "type": "Any"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "str_tree", "type": "Any"}, {"lineNumber": 83, "col_offset": 51, "nodeName": "ioa_thresh", "type": "float"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "use_intersection_over_cell", "type": "bool"}, {"lineNumber": 84, "col_offset": 58, "nodeName": "background_class_id", "type": "None"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "pick_min_class_id", "type": "bool"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "class_id1", "type": "int"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "infer_cell", "type": "Any"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "cell", "type": "Any"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "str_tree", "type": "Any"}, {"lineNumber": 96, "col_offset": 51, "nodeName": "ioa_thresh", "type": "float"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "use_intersection_over_cell", "type": "bool"}, {"lineNumber": 97, "col_offset": 58, "nodeName": "background_class_id", "type": "None"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "pick_min_class_id", "type": "bool"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "class_id2", "type": "int"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "infer_cell", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "cell", "type": "Any"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "str_tree", "type": "Any"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "ioa_thresh", "type": "float"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "use_intersection_over_cell", "type": "bool"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "background_class_id", "type": "None"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "pick_min_class_id", "type": "bool"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "infer_cell", "type": "Any"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "cell", "type": "Any"}, {"lineNumber": 123, "col_offset": 36, "nodeName": "str_tree", "type": "Any"}, {"lineNumber": 123, "col_offset": 51, "nodeName": "ioa_thresh", "type": "float"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "use_intersection_over_cell", "type": "bool"}, {"lineNumber": 124, "col_offset": 58, "nodeName": "background_class_id", "type": "None"}, {"lineNumber": 125, "col_offset": 30, "nodeName": "pick_min_class_id", "type": "bool"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "infer_cell", "type": "Any"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "cell", "type": "Any"}, {"lineNumber": 137, "col_offset": 36, "nodeName": "str_tree", "type": "Any"}, {"lineNumber": 137, "col_offset": 51, "nodeName": "ioa_thresh", "type": "float"}, {"lineNumber": 138, "col_offset": 30, "nodeName": "use_intersection_over_cell", "type": "bool"}, {"lineNumber": 138, "col_offset": 58, "nodeName": "background_class_id", "type": "None"}, {"lineNumber": 139, "col_offset": 30, "nodeName": "pick_min_class_id", "type": "bool"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "class_id1", "type": "int"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "infer_cell", "type": "Any"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "cell", "type": "Any"}, {"lineNumber": 150, "col_offset": 36, "nodeName": "str_tree", "type": "Any"}, {"lineNumber": 150, "col_offset": 51, "nodeName": "ioa_thresh", "type": "float"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "use_intersection_over_cell", "type": "bool"}, {"lineNumber": 151, "col_offset": 58, "nodeName": "background_class_id", "type": "int"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "pick_min_class_id", "type": "bool"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "background_class_id", "type": "int"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "infer_cell", "type": "Any"}, {"lineNumber": 163, "col_offset": 30, "nodeName": "cell", "type": "Any"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "str_tree", "type": "Any"}, {"lineNumber": 163, "col_offset": 51, "nodeName": "ioa_thresh", "type": "float"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "use_intersection_over_cell", "type": "bool"}, {"lineNumber": 164, "col_offset": 58, "nodeName": "background_class_id", "type": "None"}, {"lineNumber": 165, "col_offset": 30, "nodeName": "pick_min_class_id", "type": "bool"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "infer_cell", "type": "Any"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "cell", "type": "Any"}, {"lineNumber": 177, "col_offset": 36, "nodeName": "str_tree", "type": "Any"}, {"lineNumber": 177, "col_offset": 51, "nodeName": "ioa_thresh", "type": "float"}, {"lineNumber": 178, "col_offset": 30, "nodeName": "use_intersection_over_cell", "type": "bool"}, {"lineNumber": 178, "col_offset": 58, "nodeName": "background_class_id", "type": "None"}, {"lineNumber": 179, "col_offset": 30, "nodeName": "pick_min_class_id", "type": "bool"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "class_id2", "type": "int"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "ChipClassificationLabelSourceConfig", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "build", "type": "Any"}, {"lineNumber": 194, "col_offset": 30, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 194, "col_offset": 49, "nodeName": "crs_transformer", "type": "tests.core.data.mock_crs_transformer.DoubleCRSTransformer"}, {"lineNumber": 194, "col_offset": 71, "nodeName": "extent", "type": "Any"}, {"lineNumber": 195, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "get_labels", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "get_cells", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 62, "nodeName": "class_id1", "type": "int"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 62, "nodeName": "class_id2", "type": "int"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "background_class_id", "type": "int"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "background_class_id", "type": "int"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 213, "col_offset": 17, "nodeName": "ChipClassificationLabelSourceConfig", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "build", "type": "Any"}, {"lineNumber": 216, "col_offset": 30, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 216, "col_offset": 49, "nodeName": "crs_transformer", "type": "tests.core.data.mock_crs_transformer.DoubleCRSTransformer"}, {"lineNumber": 216, "col_offset": 71, "nodeName": "extent", "type": "Any"}, {"lineNumber": 217, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 218, "col_offset": 17, "nodeName": "get_labels", "type": "Any"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "get_cells", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "get_cell_class_id", "type": "Any"}, {"lineNumber": 222, "col_offset": 44, "nodeName": "box1", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 223, "col_offset": 35, "nodeName": "class_id1", "type": "int"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "get_cell_class_id", "type": "Any"}, {"lineNumber": 224, "col_offset": 44, "nodeName": "box2", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 231, "col_offset": 17, "nodeName": "ChipClassificationLabelSourceConfig", "type": "Any"}, {"lineNumber": 234, "col_offset": 17, "nodeName": "build", "type": "Any"}, {"lineNumber": 234, "col_offset": 30, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 234, "col_offset": 49, "nodeName": "crs_transformer", "type": "tests.core.data.mock_crs_transformer.DoubleCRSTransformer"}, {"lineNumber": 234, "col_offset": 71, "nodeName": "extent", "type": "Any"}, {"lineNumber": 235, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "get_labels", "type": "Any"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "get_cells", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 240, "col_offset": 19, "nodeName": "get_cell_class_id", "type": "Any"}, {"lineNumber": 240, "col_offset": 44, "nodeName": "box1", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 241, "col_offset": 35, "nodeName": "class_id1", "type": "int"}, {"lineNumber": 242, "col_offset": 19, "nodeName": "get_cell_class_id", "type": "Any"}, {"lineNumber": 242, "col_offset": 44, "nodeName": "box2", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 243, "col_offset": 35, "nodeName": "class_id2", "type": "int"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "Box", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "Box", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "g", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "g", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "rv_config", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "tmp_dir", "type": "Any"}, {"lineNumber": 69, "col_offset": 51, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "tmp_dir", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "Box", "type": "Any"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "Box", "type": "Any"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "Box", "type": "Any"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "Box", "type": "Any"}, {"lineNumber": 123, "col_offset": 36, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "Box", "type": "Any"}, {"lineNumber": 137, "col_offset": 36, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 140, "col_offset": 35, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "Box", "type": "Any"}, {"lineNumber": 150, "col_offset": 36, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "Box", "type": "Any"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "Box", "type": "Any"}, {"lineNumber": 177, "col_offset": 36, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "Box", "type": "Any"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "background_class_id", "type": "int"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "config", "type": "Any"}, {"lineNumber": 194, "col_offset": 30, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 194, "col_offset": 49, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 195, "col_offset": 30, "nodeName": "tmp_dir", "type": "Any"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "source", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "labels", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "cells", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "get_cell_class_id", "type": "Any"}, {"lineNumber": 200, "col_offset": 50, "nodeName": "box1", "type": "Any"}, {"lineNumber": 200, "col_offset": 62, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "get_cell_class_id", "type": "Any"}, {"lineNumber": 201, "col_offset": 50, "nodeName": "box2", "type": "Any"}, {"lineNumber": 201, "col_offset": 62, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "get_cell_class_id", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "get_cell_class_id", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "Box", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "config", "type": "Any"}, {"lineNumber": 216, "col_offset": 30, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 216, "col_offset": 49, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 217, "col_offset": 30, "nodeName": "tmp_dir", "type": "Any"}, {"lineNumber": 218, "col_offset": 17, "nodeName": "source", "type": "Any"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "labels", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "cells", "type": "Any"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "labels", "type": "Any"}, {"lineNumber": 222, "col_offset": 44, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 223, "col_offset": 35, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "labels", "type": "Any"}, {"lineNumber": 224, "col_offset": 44, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 229, "col_offset": 17, "nodeName": "Box", "type": "Any"}, {"lineNumber": 234, "col_offset": 17, "nodeName": "config", "type": "Any"}, {"lineNumber": 234, "col_offset": 30, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 234, "col_offset": 49, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 235, "col_offset": 30, "nodeName": "tmp_dir", "type": "Any"}, {"lineNumber": 236, "col_offset": 17, "nodeName": "source", "type": "Any"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "labels", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 239, "col_offset": 29, "nodeName": "cells", "type": "Any"}, {"lineNumber": 240, "col_offset": 19, "nodeName": "labels", "type": "Any"}, {"lineNumber": 240, "col_offset": 44, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 241, "col_offset": 35, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 242, "col_offset": 19, "nodeName": "labels", "type": "Any"}, {"lineNumber": 242, "col_offset": 44, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 243, "col_offset": 35, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "f", "type": "Union[Dict[str, Union[str, Dict[str, Union[str, List[List[List[float]]]]], Dict[str, Union[float, str, int]]]], Dict[str, Union[str, Dict[str, Union[str, List[List[List[List[float]]]]]], Dict[str, Union[str, int, float]]]]]"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "f", "type": "Union[Dict[str, Union[str, Dict[str, Union[str, List[List[List[float]]]]], Dict[str, Union[float, str, int]]]], Dict[str, Union[str, Dict[str, Union[str, List[List[List[List[float]]]]]], Dict[str, Union[str, int, float]]]]]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "geoms", "type": "List[Any]"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "GeoJSONVectorSourceConfig", "type": "Any"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 195, "col_offset": 30, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "labels", "type": "Any"}, {"lineNumber": 200, "col_offset": 50, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "labels", "type": "Any"}, {"lineNumber": 201, "col_offset": 50, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 203, "col_offset": 37, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 206, "col_offset": 37, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 214, "col_offset": 26, "nodeName": "GeoJSONVectorSourceConfig", "type": "Any"}, {"lineNumber": 217, "col_offset": 30, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "GeoJSONVectorSourceConfig", "type": "Any"}, {"lineNumber": 235, "col_offset": 30, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "uri", "type": "Any"}, {"lineNumber": 203, "col_offset": 37, "nodeName": "Box", "type": "Any"}, {"lineNumber": 206, "col_offset": 37, "nodeName": "Box", "type": "Any"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "uri", "type": "Any"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "uri", "type": "Any"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "self", "type": "TestChipClassificationLabelSource"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "self", "type": "TestChipClassificationLabelSource"}]