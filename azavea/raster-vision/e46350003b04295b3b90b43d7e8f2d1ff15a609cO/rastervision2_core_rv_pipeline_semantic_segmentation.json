[{"lineNumber": 72, "col_offset": 0, "nodeName": "fill_no_data", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "RVPipeline", "type": "Type[rastervision2.core.rv_pipeline.rv_pipeline.RVPipeline]"}, {"lineNumber": 11, "col_offset": 6, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 11, "col_offset": 24, "nodeName": "__name__", "type": "str"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "co", "type": "Any"}, {"lineNumber": 24, "col_offset": 9, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "raster_source", "type": "Any"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "raster_source", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "extent", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "label_source", "type": "Any"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "ground_truth_label_source", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 15, "col_offset": 39, "nodeName": "List", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "null_inds", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "img_shape", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "shape", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "img", "type": "Any"}, {"lineNumber": 11, "col_offset": 6, "nodeName": "logging", "type": "module"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "scene", "type": "Any"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "get_extent", "type": "Any"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "scene", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "aoi_polygons", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "windows", "type": "Union[List[Any], Any]"}, {"lineNumber": 43, "col_offset": 7, "nodeName": "window_method", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "sliding", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "stride", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 15, "col_offset": 44, "nodeName": "Box", "type": "Type[rastervision2.core.box.Box]"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "null_class_id", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "img", "type": "Any"}, {"lineNumber": 77, "col_offset": 7, "nodeName": "any", "type": "Any"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "null_inds", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "chip", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "null_class_id", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "chip", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "sample", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "null_class_id", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "labels", "type": "Any"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "raster_source", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "scene", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "filt_windows", "type": "List[Any]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "w", "type": "Any"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "filt_windows", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 7, "nodeName": "co", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "SemanticSegmentationWindowMethod", "type": "Type[rastervision2.core.rv_pipeline.semantic_segmentation_config.SemanticSegmentationWindowMethod]"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "stride", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 46, "col_offset": 9, "nodeName": "window_method", "type": "Any"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "random_sample", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "attempts", "type": "int"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 77, "col_offset": 7, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "img", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "img", "type": "Any"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "img", "type": "Any"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "img_shape", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "get_train_windows", "type": "Callable[[Any, Any, Any, Any], List[rastervision2.core.box.Box]]"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "scene", "type": "Any"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "train_chip_sz", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "get_labels", "type": "Any"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "sample", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "get_label_arr", "type": "Any"}, {"lineNumber": 96, "col_offset": 48, "nodeName": "window", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "get_null_class_id", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "sample", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "fill_no_data", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "img", "type": "Any"}, {"lineNumber": 98, "col_offset": 40, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 98, "col_offset": 51, "nodeName": "null_class_id", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "get_null_class_id", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "window", "type": "Any"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "chip", "type": "Any"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "windows", "type": "Any"}, {"lineNumber": 104, "col_offset": 41, "nodeName": "chips", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 106, "col_offset": 51, "nodeName": "null_class_id", "type": "Any"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "filter_by_aoi", "type": "Callable[[Any, Any], List[Any]]"}, {"lineNumber": 31, "col_offset": 40, "nodeName": "windows", "type": "Any"}, {"lineNumber": 31, "col_offset": 49, "nodeName": "aoi_polygons", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "co", "type": "Any"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "filter_windows", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 9, "nodeName": "co", "type": "Any"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "SemanticSegmentationWindowMethod", "type": "Type[rastervision2.core.rv_pipeline.semantic_segmentation_config.SemanticSegmentationWindowMethod]"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "target_class_ids", "type": "Any"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "attempts", "type": "int"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "chips_per_scene", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "window", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "attempts", "type": "int"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "config", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "config", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "ground_truth_label_source", "type": "Any"}, {"lineNumber": 91, "col_offset": 65, "nodeName": "window", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "labels", "type": "Any"}, {"lineNumber": 96, "col_offset": 48, "nodeName": "sample", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "get_label_arr", "type": "Any"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "window", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "set_label_arr", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "window", "type": "Any"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "Box", "type": "Type[rastervision2.core.box.Box]"}, {"lineNumber": 31, "col_offset": 49, "nodeName": "scene", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "get_label_arr", "type": "Any"}, {"lineNumber": 35, "col_offset": 69, "nodeName": "w", "type": "Any"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "round", "type": "Callable"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "get_windows", "type": "Any"}, {"lineNumber": 45, "col_offset": 58, "nodeName": "chip_size", "type": "Any"}, {"lineNumber": 45, "col_offset": 69, "nodeName": "stride", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "co", "type": "Any"}, {"lineNumber": 47, "col_offset": 50, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "co", "type": "Any"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "make_random_square", "type": "Any"}, {"lineNumber": 53, "col_offset": 47, "nodeName": "chip_size", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "negative_survival_prob", "type": "Any"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "img_shape", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "null_inds", "type": "Any"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "config", "type": "Any"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "scene", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "sample", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "labels", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "get_null_class_id", "type": "Any"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "all", "type": "Any"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "null_inds", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "w", "type": "Any"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "chip_size", "type": "Any"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "extent", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "extent", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "filter_windows", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "co", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "window", "type": "Any"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "get_labels", "type": "Any"}, {"lineNumber": 35, "col_offset": 52, "nodeName": "w", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "filt_windows", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "window", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "attempts", "type": "int"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "chips_per_scene", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "window", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "enough_target_pixels", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "window", "type": "Any"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "target_count_threshold", "type": "Any"}, {"lineNumber": 65, "col_offset": 55, "nodeName": "target_class_ids", "type": "Any"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "is_pos", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "sum", "type": "Any"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "chip", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "label_source", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "co", "type": "Any"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 60, "col_offset": 56, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "label_source", "type": "Any"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "co", "type": "Any"}, {"lineNumber": 66, "col_offset": 49, "nodeName": "negative_survival_prob", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "window", "type": "Any"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "rand", "type": "Any"}, {"lineNumber": 66, "col_offset": 49, "nodeName": "co", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "random", "type": "Any"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "np", "type": "module"}]