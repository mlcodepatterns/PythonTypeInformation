[{"lineNumber": 12, "col_offset": 33, "nodeName": "TaskConfig", "type": "Any"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "TaskConfigBuilder", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "class_map", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "class_map", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "chip_size", "type": "Any"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "chip_size", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "self", "type": "SemanticSegmentationConfig"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "msg", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "msg", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "config", "type": "Dict[nothing, nothing]"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "prev", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "conf", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "semantic_segmentation_config", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "negative_survival_probability", "type": "Any"}, {"lineNumber": 92, "col_offset": 40, "nodeName": "negative_survival_probability", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 131, "col_offset": 32, "nodeName": "chip_size", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "window_method", "type": "str"}, {"lineNumber": 22, "col_offset": 33, "nodeName": "window_method", "type": "str"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "target_classes", "type": "None"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "target_classes", "type": "None"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "debug_chip_probability", "type": "float"}, {"lineNumber": 24, "col_offset": 42, "nodeName": "debug_chip_probability", "type": "float"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "negative_survival_probability", "type": "float"}, {"lineNumber": 25, "col_offset": 49, "nodeName": "negative_survival_probability", "type": "float"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "chips_per_scene", "type": "int"}, {"lineNumber": 26, "col_offset": 35, "nodeName": "chips_per_scene", "type": "int"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "target_count_threshold", "type": "int"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "target_count_threshold", "type": "int"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "stride", "type": "None"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "stride", "type": "None"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "SEMANTIC_SEGMENTATION", "type": "str"}, {"lineNumber": 37, "col_offset": 51, "nodeName": "predict_batch_size", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "predict_package_uri", "type": "Any"}, {"lineNumber": 38, "col_offset": 46, "nodeName": "debug", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationConfig"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationConfig"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationConfig"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "self", "type": "SemanticSegmentationConfig"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "SemanticSegmentation", "type": "Any"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "self", "type": "SemanticSegmentationConfig"}, {"lineNumber": 52, "col_offset": 42, "nodeName": "backend", "type": "Any"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "to_proto", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "ChipOptions", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "SemanticSegmentationConfig", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "MergeFrom", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "SemanticSegmentationConfig", "type": "Type[SemanticSegmentationConfig]"}, {"lineNumber": 87, "col_offset": 53, "nodeName": "config", "type": "Union[Dict[str, Any], Dict[nothing, nothing]]"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "msg", "type": "Any"}, {"lineNumber": 92, "col_offset": 40, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "self", "type": "SemanticSegmentationConfigBuilder"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "construct_from", "type": "Callable"}, {"lineNumber": 121, "col_offset": 56, "nodeName": "classes", "type": "Union[List[rastervision.core.class_map.ClassItem], rastervision.core.class_map.ClassMap, Dict[str, int], List[str], Dict[str, Tuple[int, str]], List[Any]]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "self", "type": "SemanticSegmentationConfigBuilder"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "self", "type": "SemanticSegmentationConfigBuilder"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "ChipOptions", "type": "Type[Any]"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "rv", "type": "module"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "ChipOptions", "type": "Type[Any]"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "SemanticSegmentationConfig", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "window_method", "type": "Union[Any, str]"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "target_classes", "type": "Any"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "debug_chip_probability", "type": "Union[Any, float]"}, {"lineNumber": 60, "col_offset": 42, "nodeName": "negative_survival_probability", "type": "Union[Any, float]"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "chips_per_scene", "type": "Union[Any, int]"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "target_count_threshold", "type": "Union[Any, int]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "stride", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "TaskConfigMsg", "type": "Any"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "chip_size", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "msg", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "TaskConfigMsg", "type": "Any"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "predict_batch_size", "type": "Any"}, {"lineNumber": 81, "col_offset": 39, "nodeName": "predict_package_uri", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "debug", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "class_map", "type": "Any"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "chip_size", "type": "Any"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 92, "col_offset": 40, "nodeName": "conf", "type": "Any"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "window_method", "type": "Any"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "debug_chip_probability", "type": "Any"}, {"lineNumber": 104, "col_offset": 50, "nodeName": "negative_survival_probability", "type": "Any"}, {"lineNumber": 105, "col_offset": 36, "nodeName": "chips_per_scene", "type": "Any"}, {"lineNumber": 106, "col_offset": 43, "nodeName": "target_count_threshold", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "stride", "type": "Any"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "Union", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "ClassMap", "type": "Type[rastervision.core.class_map.ClassMap]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "SemanticSegmentationConfig", "type": "Type[SemanticSegmentationConfig]"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "window_method", "type": "Any"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "target_classes", "type": "Any"}, {"lineNumber": 171, "col_offset": 35, "nodeName": "debug_chip_probability", "type": "Any"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "negative_survival_probability", "type": "Any"}, {"lineNumber": 173, "col_offset": 28, "nodeName": "chips_per_scene", "type": "Any"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "target_count_threshold", "type": "Any"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "stride", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "SemanticSegmentationConfig", "type": "Type[SemanticSegmentationConfig]"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "TaskConfigMsg", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 60, "col_offset": 42, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "self", "type": "SemanticSegmentationConfig"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "to_proto", "type": "Any"}, {"lineNumber": 70, "col_offset": 65, "nodeName": "conf", "type": "Any"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "prev", "type": "Any"}, {"lineNumber": 81, "col_offset": 39, "nodeName": "prev", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "prev", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "prev", "type": "Any"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "prev", "type": "Any"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "prev", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "chip_size", "type": "Any"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "target_classes", "type": "Any"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 105, "col_offset": 36, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 106, "col_offset": 43, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "self", "type": "SemanticSegmentationConfig"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "self", "type": "SemanticSegmentationConfig"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "self", "type": "SemanticSegmentationConfig"}, {"lineNumber": 60, "col_offset": 42, "nodeName": "self", "type": "SemanticSegmentationConfig"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "self", "type": "SemanticSegmentationConfig"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "self", "type": "SemanticSegmentationConfig"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "self", "type": "SemanticSegmentationConfig"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "class_map", "type": "Any"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "conf", "type": "Any"}, {"lineNumber": 101, "col_offset": 34, "nodeName": "conf", "type": "Any"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "conf", "type": "Any"}, {"lineNumber": 105, "col_offset": 36, "nodeName": "conf", "type": "Any"}, {"lineNumber": 106, "col_offset": 43, "nodeName": "conf", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "conf", "type": "Any"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "ClassMap", "type": "Type[rastervision.core.class_map.ClassMap]"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "self", "type": "SemanticSegmentationConfig"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "debug", "type": "Any"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "conf", "type": "Any"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "List", "type": "Any"}, {"lineNumber": 110, "col_offset": 54, "nodeName": "List", "type": "Any"}, {"lineNumber": 110, "col_offset": 74, "nodeName": "List", "type": "Any"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 111, "col_offset": 44, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "msg", "type": "Any"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 110, "col_offset": 59, "nodeName": "ClassItemMsg", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "ClassItem", "type": "Type[rastervision.core.class_map.ClassItem]"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "predict_package_uri", "type": "Any"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 111, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "msg", "type": "Any"}, {"lineNumber": 111, "col_offset": 54, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "with_predict_batch_size", "type": "Any"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "predict_batch_size", "type": "Any"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "msg", "type": "Any"}, {"lineNumber": 111, "col_offset": 60, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 111, "col_offset": 65, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "with_classes", "type": "Callable[[Union[rastervision.core.class_map.ClassMap, List[str], List[Any], List[rastervision.core.class_map.ClassItem], Dict[str, int], Dict[str, Tuple[int, str]]]], Any]"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "self", "type": "SemanticSegmentationConfigBuilder"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "class_items", "type": "Any"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "conf", "type": "Any"}]