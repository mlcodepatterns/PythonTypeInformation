[{"lineNumber": 9, "col_offset": 37, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 9, "col_offset": 37, "nodeName": "unittest", "type": "module"}, {"lineNumber": 77, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "labels", "type": "rastervision.data.label.semantic_segmentation_labels.SemanticSegmentationLabels"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "extent", "type": "rastervision.core.box.Box"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "extent", "type": "rastervision.core.box.Box"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "clipped", "type": "rastervision.data.label.semantic_segmentation_labels.SemanticSegmentationLabels"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "pairs", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "expected_pairs", "type": "List[Tuple[Tuple[Any, Any, Any, Any], Any]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "labels", "type": "rastervision.data.label.semantic_segmentation_labels.SemanticSegmentationLabels"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "pairs", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "expected_arr", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "labels", "type": "rastervision.data.label.semantic_segmentation_labels.SemanticSegmentationLabels"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "aoi_polygons", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "expected_arr", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 11, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "SemanticSegmentationLabels", "type": "Type[rastervision.data.label.semantic_segmentation_labels.SemanticSegmentationLabels]"}, {"lineNumber": 23, "col_offset": 49, "nodeName": "label_pairs", "type": "List[Tuple[rastervision.core.box.Box, Any]]"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "get_extent", "type": "Callable[[], rastervision.core.box.Box]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "make_square", "type": "Callable[[Any, Any, Any], rastervision.core.box.Box]"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "get_clipped_labels", "type": "Callable"}, {"lineNumber": 32, "col_offset": 49, "nodeName": "extent", "type": "rastervision.core.box.Box"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "get_label_pairs", "type": "Callable[[], Any]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "to_tuple", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "pairs", "type": "Any"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "to_tuple", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "expected_pairs", "type": "List[Tuple[rastervision.core.box.Box, Any]]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "pair", "type": "Tuple[Any, Any]"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "expected_pair", "type": "Tuple[Tuple[Any, Any, Any, Any], Any]"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "expected_pairs", "type": "List[Tuple[Tuple[Any, Any, Any, Any], Any]]"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "from_array", "type": "Callable[[Any], rastervision.data.label.semantic_segmentation_labels.SemanticSegmentationLabels]"}, {"lineNumber": 55, "col_offset": 55, "nodeName": "arr", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "get_label_pairs", "type": "Callable[[], Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 59, "col_offset": 51, "nodeName": "arr", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "to_array", "type": "Callable[[], Any]"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 64, "col_offset": 38, "nodeName": "arr", "type": "Any"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "expected_arr", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "ones", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "from_array", "type": "Callable[[Any], rastervision.data.label.semantic_segmentation_labels.SemanticSegmentationLabels]"}, {"lineNumber": 68, "col_offset": 55, "nodeName": "arr", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "filter_by_aoi", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "aoi_polygons", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "to_array", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "expected_arr", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "arr", "type": "Any"}, {"lineNumber": 74, "col_offset": 43, "nodeName": "expected_arr", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 11, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 41, "nodeName": "labels", "type": "Any"}, {"lineNumber": 16, "col_offset": 43, "nodeName": "labels", "type": "Any"}, {"lineNumber": 17, "col_offset": 43, "nodeName": "labels", "type": "Any"}, {"lineNumber": 18, "col_offset": 43, "nodeName": "labels", "type": "Any"}, {"lineNumber": 19, "col_offset": 45, "nodeName": "labels", "type": "Any"}, {"lineNumber": 20, "col_offset": 45, "nodeName": "labels", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "labels", "type": "rastervision.data.label.semantic_segmentation_labels.SemanticSegmentationLabels"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "get_width", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "get_height", "type": "Callable[[], Any]"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "labels", "type": "rastervision.data.label.semantic_segmentation_labels.SemanticSegmentationLabels"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "clipped", "type": "rastervision.data.label.semantic_segmentation_labels.SemanticSegmentationLabels"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "pair", "type": "Tuple[Any, Any]"}, {"lineNumber": 51, "col_offset": 40, "nodeName": "expected_pair", "type": "Tuple[Tuple[Any, Any, Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "SemanticSegmentationLabels", "type": "Type[rastervision.data.label.semantic_segmentation_labels.SemanticSegmentationLabels]"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "labels", "type": "rastervision.data.label.semantic_segmentation_labels.SemanticSegmentationLabels"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "pairs", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "make_square", "type": "Callable[[Any, Any, Any], rastervision.core.box.Box]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "labels", "type": "rastervision.data.label.semantic_segmentation_labels.SemanticSegmentationLabels"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "SemanticSegmentationLabels", "type": "Type[rastervision.data.label.semantic_segmentation_labels.SemanticSegmentationLabels]"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "to_shapely", "type": "Callable[[], Any]"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "labels", "type": "rastervision.data.label.semantic_segmentation_labels.SemanticSegmentationLabels"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "labels", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "make_square", "type": "Callable[[Any, Any, Any], rastervision.core.box.Box]"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "make_square", "type": "Callable[[Any, Any, Any], rastervision.core.box.Box]"}, {"lineNumber": 17, "col_offset": 13, "nodeName": "make_square", "type": "Callable[[Any, Any, Any], rastervision.core.box.Box]"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "make_square", "type": "Callable[[Any, Any, Any], rastervision.core.box.Box]"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "make_square", "type": "Callable[[Any, Any, Any], rastervision.core.box.Box]"}, {"lineNumber": 20, "col_offset": 13, "nodeName": "make_square", "type": "Callable[[Any, Any, Any], rastervision.core.box.Box]"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "extent", "type": "rastervision.core.box.Box"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "extent", "type": "rastervision.core.box.Box"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 38, "col_offset": 36, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 40, "col_offset": 13, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 46, "col_offset": 58, "nodeName": "p", "type": "Any"}, {"lineNumber": 46, "col_offset": 63, "nodeName": "label_pairs", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "pairs", "type": "Any"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "pairs", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 17, "col_offset": 13, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 20, "col_offset": 13, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "tuple_format", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "make_square", "type": "Callable[[Any, Any, Any], rastervision.core.box.Box]"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "p", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "p", "type": "Any"}]