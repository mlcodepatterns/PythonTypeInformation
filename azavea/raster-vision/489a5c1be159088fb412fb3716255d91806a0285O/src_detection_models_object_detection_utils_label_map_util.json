[{"lineNumber": 25, "col_offset": 0, "nodeName": "_validate_label_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "create_category_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "load_labelmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 127, "col_offset": 0, "nodeName": "get_label_map_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 6, "nodeName": "item", "type": "Any"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "item", "type": "Any"}, {"lineNumber": 52, "col_offset": 2, "nodeName": "category_index", "type": "Dict[Any, Any]"}, {"lineNumber": 53, "col_offset": 6, "nodeName": "cat", "type": "Any"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "categories", "type": "Any"}, {"lineNumber": 55, "col_offset": 9, "nodeName": "category_index", "type": "Dict[Any, Any]"}, {"lineNumber": 83, "col_offset": 2, "nodeName": "categories", "type": "List[Dict[str, Union[str, int]]]"}, {"lineNumber": 84, "col_offset": 2, "nodeName": "list_of_ids_already_added", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 6, "nodeName": "item", "type": "Any"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "item", "type": "Any"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "categories", "type": "List[Dict[str, Union[str, int]]]"}, {"lineNumber": 124, "col_offset": 9, "nodeName": "label_map", "type": "Any"}, {"lineNumber": 136, "col_offset": 2, "nodeName": "label_map", "type": "Any"}, {"lineNumber": 137, "col_offset": 2, "nodeName": "label_map_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 138, "col_offset": 6, "nodeName": "item", "type": "Any"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "item", "type": "Any"}, {"lineNumber": 140, "col_offset": 9, "nodeName": "label_map_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "label_map", "type": "Any"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "cat", "type": "Any"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "label_map", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "label_id_offset", "type": "int"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "class_id", "type": "int"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "categories", "type": "List[Dict[str, Union[str, int]]]"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "label_map", "type": "Any"}, {"lineNumber": 116, "col_offset": 36, "nodeName": "fid", "type": "Any"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "label_map_string", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "label_map", "type": "Any"}, {"lineNumber": 123, "col_offset": 2, "nodeName": "_validate_label_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "label_map", "type": "Any"}, {"lineNumber": 136, "col_offset": 14, "nodeName": "load_labelmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "label_map_path", "type": "Any"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "label_map", "type": "Any"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "id", "type": "Any"}, {"lineNumber": 35, "col_offset": 7, "nodeName": "id", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "category_index", "type": "Dict[Any, Any]"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 87, "col_offset": 26, "nodeName": "max_num_classes", "type": "Any"}, {"lineNumber": 98, "col_offset": 7, "nodeName": "use_display_name", "type": "Any"}, {"lineNumber": 99, "col_offset": 6, "nodeName": "name", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "display_name", "type": "Any"}, {"lineNumber": 101, "col_offset": 6, "nodeName": "name", "type": "Any"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "name", "type": "Any"}, {"lineNumber": 102, "col_offset": 7, "nodeName": "id", "type": "Any"}, {"lineNumber": 102, "col_offset": 22, "nodeName": "list_of_ids_already_added", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 7, "nodeName": "GFile", "type": "Any"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "path", "type": "Any"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "read", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "StringIntLabelMap", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "ParseError", "type": "Any"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "label_map_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "item", "type": "Any"}, {"lineNumber": 35, "col_offset": 7, "nodeName": "item", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 88, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "id", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "max_num_classes", "type": "Any"}, {"lineNumber": 95, "col_offset": 6, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "id", "type": "Any"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "HasField", "type": "Any"}, {"lineNumber": 99, "col_offset": 13, "nodeName": "item", "type": "Any"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "item", "type": "Any"}, {"lineNumber": 102, "col_offset": 7, "nodeName": "item", "type": "Any"}, {"lineNumber": 103, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "id", "type": "Any"}, {"lineNumber": 104, "col_offset": 6, "nodeName": "append", "type": "Callable"}, {"lineNumber": 116, "col_offset": 7, "nodeName": "gfile", "type": "Any"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "fid", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "string_int_label_map_pb2", "type": "Any"}, {"lineNumber": 120, "col_offset": 6, "nodeName": "Merge", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "label_map_string", "type": "Any"}, {"lineNumber": 120, "col_offset": 42, "nodeName": "label_map", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "cat", "type": "Any"}, {"lineNumber": 88, "col_offset": 6, "nodeName": "categories", "type": "List[Dict[str, Union[str, int]]]"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "item", "type": "Any"}, {"lineNumber": 95, "col_offset": 6, "nodeName": "logging", "type": "module"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "item", "type": "Any"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "item", "type": "Any"}, {"lineNumber": 103, "col_offset": 6, "nodeName": "list_of_ids_already_added", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 39, "nodeName": "item", "type": "Any"}, {"lineNumber": 104, "col_offset": 6, "nodeName": "categories", "type": "List[Dict[str, Union[str, int]]]"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "id", "type": "Any"}, {"lineNumber": 104, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 116, "col_offset": 7, "nodeName": "tf", "type": "Any"}, {"lineNumber": 120, "col_offset": 6, "nodeName": "text_format", "type": "Any"}, {"lineNumber": 122, "col_offset": 6, "nodeName": "ParseFromString", "type": "Any"}, {"lineNumber": 122, "col_offset": 32, "nodeName": "label_map_string", "type": "Any"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "item", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "class_id", "type": "int"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "label_id_offset", "type": "int"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 122, "col_offset": 6, "nodeName": "label_map", "type": "Any"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "class_id", "type": "int"}, {"lineNumber": 90, "col_offset": 50, "nodeName": "label_id_offset", "type": "int"}]