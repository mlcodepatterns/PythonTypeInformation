[{"lineNumber": 26, "col_offset": 0, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "Learner", "type": "Any"}, {"lineNumber": 2, "col_offset": 0, "nodeName": "filterwarnings", "type": "Callable[..., None]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "use", "type": "Any"}, {"lineNumber": 26, "col_offset": 6, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "__name__", "type": "str"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "Module", "type": "Any"}, {"lineNumber": 2, "col_offset": 0, "nodeName": "warnings", "type": "module"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "matplotlib", "type": "Any"}, {"lineNumber": 26, "col_offset": 6, "nodeName": "logging", "type": "module"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "out_classes", "type": "int"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "ignore_last_class", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "input_channels", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "img_channels", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "old_conv", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "args", "type": "Dict[str, Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "loss_weights", "type": "Any"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "class_loss_weights", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "ignore_last_class", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "batch", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "batch", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "val_loss", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "num_labels", "type": "int"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "out", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "conf_mat", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "conf_mat", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "metrics", "type": "Dict[Any, Any]"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "metrics", "type": "Dict[Any, Any]"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "channel_groups", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "channel_display_groups", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "nrows", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "batch_sz", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "ncols", "type": "int"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "channel_groups", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "channel_display_groups", "type": "Any"}, {"lineNumber": 210, "col_offset": 18, "nodeName": "ax", "type": "Iterable[Any]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "img_axes", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "label_ax", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "class_colors", "type": "Any"}, {"lineNumber": 228, "col_offset": 23, "nodeName": "class_colors", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "colors", "type": "List[Any]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "colors", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "cmap", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "class_names", "type": "Any"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "class_names", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "class_names", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "solver", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "out_classes", "type": "int"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "_segm_resnet", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "out_classes", "type": "int"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "backbone", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "input_channels", "type": "Any"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "out_channels", "type": "Any"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "kernel_size", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "stride", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "padding", "type": "Any"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "dilation", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "groups", "type": "Any"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "bias", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "new_conv", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "conv1", "type": "Any"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "new_conv", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "input_channels", "type": "Any"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "new_conv_channels", "type": "Any"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "solver", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "loss_weights", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "loss_weights", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "solver", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "CrossEntropyLoss", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "post_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "post_forward", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "loss", "type": "Any"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "out", "type": "Any"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "y", "type": "Any"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "class_names", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "view", "type": "Any"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "view", "type": "Any"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "compute_conf_mat", "type": "Any"}, {"lineNumber": 119, "col_offset": 36, "nodeName": "out", "type": "Any"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "y", "type": "Any"}, {"lineNumber": 119, "col_offset": 44, "nodeName": "num_labels", "type": "int"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "val_loss", "type": "Any"}, {"lineNumber": 121, "col_offset": 50, "nodeName": "conf_mat", "type": "Any"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 126, "col_offset": 59, "nodeName": "num_samples", "type": "Any"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "compute_conf_mat_metrics", "type": "Any"}, {"lineNumber": 127, "col_offset": 52, "nodeName": "conf_mat", "type": "Any"}, {"lineNumber": 128, "col_offset": 52, "nodeName": "class_names", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "conf_mat_metrics", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "batch_sz", "type": "Any"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "c", "type": "Any"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "h", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "w", "type": "Any"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 160, "col_offset": 68, "nodeName": "batch_sz", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "z", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "ncols", "type": "int"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "subplots", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "permute", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "transform", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "tf", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 184, "col_offset": 23, "nodeName": "batch_sz", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "ax", "type": "Tuple[Any, Any]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "make_dir", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "output_path", "type": "str"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "savefig", "type": "Any"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "output_path", "type": "str"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "close", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "fig", "type": "Any"}, {"lineNumber": 210, "col_offset": 13, "nodeName": "ax", "type": "Any"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "ax", "type": "Any"}, {"lineNumber": 212, "col_offset": 19, "nodeName": "ax", "type": "Any"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "ch_ax", "type": "Any"}, {"lineNumber": 215, "col_offset": 35, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 215, "col_offset": 63, "nodeName": "img_axes", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "im", "type": "Any"}, {"lineNumber": 228, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "ListedColormap", "type": "Any"}, {"lineNumber": 231, "col_offset": 48, "nodeName": "colors", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "imshow", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "set_title", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "set_xticks", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "set_yticks", "type": "Any"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "z", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "pred_ax", "type": "Any"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "legend", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "segmentation", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "get_backbone_str", "type": "Any"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "pretrained", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "old_conv", "type": "Any"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "old_conv", "type": "Any"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "old_conv", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "old_conv", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "old_conv", "type": "Any"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "old_conv", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "old_conv", "type": "Any"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "old_conv", "type": "Any"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "backbone", "type": "Any"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "old_conv", "type": "Any"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "input_channels", "type": "Any"}, {"lineNumber": 70, "col_offset": 49, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 80, "col_offset": 13, "nodeName": "input_channels", "type": "Any"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 95, "col_offset": 40, "nodeName": "loss_weights", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "class_names", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "update", "type": "Callable"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "args", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "model", "type": "Any"}, {"lineNumber": 108, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "loss", "type": "Any"}, {"lineNumber": 109, "col_offset": 40, "nodeName": "out", "type": "Any"}, {"lineNumber": 109, "col_offset": 45, "nodeName": "y", "type": "Any"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "model", "type": "Any"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 114, "col_offset": 19, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 128, "col_offset": 52, "nodeName": "data", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "metrics", "type": "Dict[Any, Any]"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 160, "col_offset": 39, "nodeName": "batch_limit", "type": "Optional[int]"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "batch_limit", "type": "Optional[int]"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "channel_groups", "type": "Any"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "plt", "type": "Any"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "nrows", "type": "Any"}, {"lineNumber": 171, "col_offset": 18, "nodeName": "ncols", "type": "int"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "plot_options", "type": "Any"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "from_dict", "type": "Any"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "transform", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 182, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "fig", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "z", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "plt", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "plt", "type": "Any"}, {"lineNumber": 199, "col_offset": 20, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "channel_groups", "type": "Any"}, {"lineNumber": 204, "col_offset": 42, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "title", "type": "Any"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "chs", "type": "Any"}, {"lineNumber": 215, "col_offset": 39, "nodeName": "items", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "im", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "imshow", "type": "Any"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "im", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "set_title", "type": "Any"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "title", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "set_xticks", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "set_yticks", "type": "Any"}, {"lineNumber": 228, "col_offset": 23, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 229, "col_offset": 18, "nodeName": "color_to_triple", "type": "Any"}, {"lineNumber": 229, "col_offset": 34, "nodeName": "c", "type": "Any"}, {"lineNumber": 229, "col_offset": 41, "nodeName": "c", "type": "Any"}, {"lineNumber": 229, "col_offset": 46, "nodeName": "class_colors", "type": "Any"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "colors", "type": "List[Any]"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "colors", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "label_ax", "type": "Any"}, {"lineNumber": 235, "col_offset": 46, "nodeName": "cmap", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "label_ax", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "label_ax", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "label_ax", "type": "Any"}, {"lineNumber": 242, "col_offset": 22, "nodeName": "ax", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "imshow", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "z", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "set_title", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "set_xticks", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "set_yticks", "type": "Any"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 256, "col_offset": 20, "nodeName": "legend_items", "type": "List[Any]"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "segmentation", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 63, "col_offset": 45, "nodeName": "input_channels", "type": "Any"}, {"lineNumber": 63, "col_offset": 63, "nodeName": "old_conv_args", "type": "Dict[str, Any]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 70, "col_offset": 49, "nodeName": "old_conv", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "new_conv_channels", "type": "Any"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "old_conv_args", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "SplitTensor", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "Parallel", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "old_conv", "type": "Any"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "new_conv", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "AddTensors", "type": "Any"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "old_conv", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "Conv2d", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "ConfigError", "type": "Any"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 95, "col_offset": 61, "nodeName": "device", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "args", "type": "Dict[str, Any]"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "loss_weights", "type": "Any"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "args", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "prob_to_pred", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "out", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "o", "type": "Any"}, {"lineNumber": 124, "col_offset": 42, "nodeName": "o", "type": "Any"}, {"lineNumber": 124, "col_offset": 47, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 128, "col_offset": 52, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "val_loss", "type": "Any"}, {"lineNumber": 148, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "A", "type": "Any"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "plot_options", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "tf", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "axes", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "plot_xyz", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "ax", "type": "Tuple[Any, Any]"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "plot_xyz", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "ax", "type": "Tuple[Any, Any]"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "chs", "type": "Any"}, {"lineNumber": 207, "col_offset": 27, "nodeName": "channel_groups", "type": "Any"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "channel_groups", "type": "Any"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 212, "col_offset": 26, "nodeName": "channel_groups", "type": "Any"}, {"lineNumber": 215, "col_offset": 39, "nodeName": "channel_groups", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "chs", "type": "Any"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "expand", "type": "Any"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "third_channel", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "im", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "ch_ax", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "ch_ax", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "ch_ax", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "ch_ax", "type": "Any"}, {"lineNumber": 228, "col_offset": 23, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 230, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "matplotlib", "type": "Any"}, {"lineNumber": 235, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 235, "col_offset": 32, "nodeName": "colors", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "pred_ax", "type": "Any"}, {"lineNumber": 244, "col_offset": 50, "nodeName": "cmap", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "pred_ax", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "pred_ax", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "pred_ax", "type": "Any"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "col", "type": "Any"}, {"lineNumber": 253, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 253, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 253, "col_offset": 33, "nodeName": "colors", "type": "Any"}, {"lineNumber": 253, "col_offset": 41, "nodeName": "class_names", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "ax", "type": "Any"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "models", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "in_channels", "type": "Any"}, {"lineNumber": 75, "col_offset": 51, "nodeName": "new_conv_channels", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "input_channels", "type": "Any"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "old_conv_args", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "weight", "type": "Any"}, {"lineNumber": 95, "col_offset": 61, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "stack", "type": "Any"}, {"lineNumber": 128, "col_offset": 52, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "ncols", "type": "int"}, {"lineNumber": 173, "col_offset": 36, "nodeName": "nrows", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 187, "col_offset": 40, "nodeName": "y", "type": "Any"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 189, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 189, "col_offset": 40, "nodeName": "y", "type": "Any"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "chs", "type": "Any"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "im", "type": "Any"}, {"lineNumber": 219, "col_offset": 17, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "chs", "type": "Any"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "h", "type": "Any"}, {"lineNumber": 220, "col_offset": 19, "nodeName": "w", "type": "Any"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "_", "type": "Any"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "full", "type": "Any"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "cat", "type": "Any"}, {"lineNumber": 244, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 244, "col_offset": 36, "nodeName": "colors", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "old_conv", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "old_conv", "type": "Any"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "input_channels", "type": "Any"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 187, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 187, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 189, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 189, "col_offset": 42, "nodeName": "i", "type": "int"}, {"lineNumber": 189, "col_offset": 48, "nodeName": "z", "type": "Any"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 221, "col_offset": 44, "nodeName": "h", "type": "Any"}, {"lineNumber": 221, "col_offset": 47, "nodeName": "w", "type": "Any"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 222, "col_offset": 32, "nodeName": "im", "type": "Any"}, {"lineNumber": 222, "col_offset": 36, "nodeName": "third_channel", "type": "Any"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "o", "type": "Any"}, {"lineNumber": 126, "col_offset": 41, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "self", "type": "SemanticSegmentationLearner"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 189, "col_offset": 50, "nodeName": "i", "type": "int"}]