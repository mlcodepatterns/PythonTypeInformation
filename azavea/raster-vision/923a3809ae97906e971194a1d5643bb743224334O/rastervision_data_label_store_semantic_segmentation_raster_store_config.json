[{"lineNumber": 10, "col_offset": 44, "nodeName": "LabelStoreConfig", "type": "Any"}, {"lineNumber": 106, "col_offset": 51, "nodeName": "LabelStoreConfigBuilder", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "uri", "type": "Any"}, {"lineNumber": 13, "col_offset": 19, "nodeName": "uri", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 14, "col_offset": 29, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 15, "col_offset": 19, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "msg", "type": "Any"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "uri", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "msg", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "class_map", "type": "None"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "io_def", "type": "Union[Any, rastervision.core.command_io_definition.CommandIODefinition]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "io_def", "type": "Union[Any, rastervision.core.command_io_definition.CommandIODefinition]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "config", "type": "Dict[nothing, nothing]"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "prev", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "valid_modes", "type": "Set[str]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "uri", "type": "Any"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "uri", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "vo", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "uri", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "ar", "type": "List[Dict[str, Any]]"}, {"lineNumber": 171, "col_offset": 36, "nodeName": "ar", "type": "List[Dict[str, Any]]"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 180, "col_offset": 26, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfig"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfig"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfig"}, {"lineNumber": 18, "col_offset": 14, "nodeName": "to_proto", "type": "Any"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfig"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "uri", "type": "Any"}, {"lineNumber": 20, "col_offset": 57, "nodeName": "uri", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfig"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "ar", "type": "List[Any]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "vo", "type": "Any"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "semantic_segmentation_raster_store", "type": "Any"}, {"lineNumber": 32, "col_offset": 53, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfig"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfig"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "class_map", "type": "Any"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "class_map", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "SemanticSegmentationRasterStore", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "uri", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "extent", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "crs_transformer", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "tmp_dir", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "io_def", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "command_type", "type": "Any"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "PREDICT", "type": "str"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "vo", "type": "Any"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "command_type", "type": "Any"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "EVAL", "type": "str"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "uri", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "vo", "type": "Any"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 116, "col_offset": 25, "nodeName": "SemanticSegmentationRasterStoreConfig", "type": "Type[SemanticSegmentationRasterStoreConfig]"}, {"lineNumber": 116, "col_offset": 64, "nodeName": "config", "type": "Union[Dict[str, Any], Dict[nothing, nothing]]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfigBuilder"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "semantic_segmentation_raster_store", "type": "Any"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "semantic_segmentation_raster_store", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "semantic_segmentation_raster_store", "type": "Any"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfigBuilder"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfigBuilder"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "vo", "type": "Any"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "vo", "type": "Any"}, {"lineNumber": 163, "col_offset": 22, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfigBuilder"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "get", "type": "Any"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "vo", "type": "Any"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 12, "col_offset": 36, "nodeName": "SEMANTIC_SEGMENTATION_RASTER", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "semantic_segmentation_raster_store", "type": "Any"}, {"lineNumber": 20, "col_offset": 57, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfig"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfig"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "msg2", "type": "Any"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "denoise", "type": "Union[Any, int]"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "uri", "type": "Union[Any, str]"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "mode", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "extend", "type": "Any"}, {"lineNumber": 31, "col_offset": 72, "nodeName": "ar", "type": "List[Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "msg", "type": "Any"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "task_config", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfig"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "class_map", "type": "Optional[Any]"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "CommandIODefinition", "type": "Type[rastervision.core.command_io_definition.CommandIODefinition]"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "rv", "type": "module"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "uri", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "root", "type": "Any"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "predict_uri", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "uri", "type": "None"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "c", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "context", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "uri", "type": "Optional[str]"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfig"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "c", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "context", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "add_output", "type": "Union[Any, Callable[[Any], None]]"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "uri", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "rv", "type": "module"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfig"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "msg", "type": "str"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfig"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "uri", "type": "Any"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "rgb", "type": "Any"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "msg", "type": "Any"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "msg", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "msg", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "config", "type": "Any"}, {"lineNumber": 199, "col_offset": 13, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "vo", "type": "Any"}, {"lineNumber": 200, "col_offset": 22, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 12, "col_offset": 36, "nodeName": "rv", "type": "module"}, {"lineNumber": 18, "col_offset": 14, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "msg", "type": "Any"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "VectorOutput", "type": "Any"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "msg2", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "msg2", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "msg2", "type": "Any"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "vo", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "msg2", "type": "Any"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "vo", "type": "Any"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "msg2", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "with_uri", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "label_uri", "type": "Any"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfig"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "core", "type": "module"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfig"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "experiment_config", "type": "Any"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "uri", "type": "Optional[str]"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "uri", "type": "Optional[str]"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "add_output", "type": "Union[Any, Callable[[Any], None]]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "io_def", "type": "Union[Any, rastervision.core.command_io_definition.CommandIODefinition]"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfig"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "add_input", "type": "Union[Any, Callable[[Any], None]]"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "uri", "type": "Optional[Union[Any, str]]"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "add_missing", "type": "Union[Any, Callable[[Any], None]]"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "msg", "type": "str"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "add_input", "type": "Union[Any, Callable[[Any], None]]"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "prev", "type": "Any"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "prev", "type": "Any"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "prev", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "with_vector_output", "type": "Any"}, {"lineNumber": 125, "col_offset": 39, "nodeName": "vo", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfigBuilder"}, {"lineNumber": 186, "col_offset": 33, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 186, "col_offset": 44, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 186, "col_offset": 59, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "mode", "type": "Any"}, {"lineNumber": 195, "col_offset": 34, "nodeName": "valid_modes", "type": "Set[str]"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 199, "col_offset": 42, "nodeName": "vector_output", "type": "Any"}, {"lineNumber": 199, "col_offset": 57, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "SemanticSegmentationRasterStore", "type": "Any"}, {"lineNumber": 26, "col_offset": 31, "nodeName": "vo", "type": "Any"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "vo", "type": "Any"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "ar", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "semantic_segmentation_raster_store", "type": "Any"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "rv", "type": "module"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "c", "type": "Any"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "SceneConfig", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "uri", "type": "str"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfig"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "add_output", "type": "Union[Any, Callable[[Any], None]]"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "uri", "type": "Optional[str]"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "ConfigError", "type": "Any"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "root", "type": "Any"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "predict_uri", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "mode", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "io_def", "type": "Union[Any, rastervision.core.command_io_definition.CommandIODefinition]"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "vo", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "io_def", "type": "Union[Any, rastervision.core.command_io_definition.CommandIODefinition]"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfig"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "io_def", "type": "Union[Any, rastervision.core.command_io_definition.CommandIODefinition]"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "io_def", "type": "Union[Any, rastervision.core.command_io_definition.CommandIODefinition]"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "vo", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "ar", "type": "List[Dict[str, Any]]"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "copy", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "ar", "type": "List[Dict[str, Any]]"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "denoise", "type": "Any"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "uri", "type": "Any"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "mode", "type": "Any"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 188, "col_offset": 23, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 188, "col_offset": 31, "nodeName": "vo", "type": "Any"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "ConfigError", "type": "Any"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "vo", "type": "Any"}, {"lineNumber": 195, "col_offset": 34, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfigBuilder"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "ConfigError", "type": "Any"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "LabelStoreConfigMsg", "type": "Any"}, {"lineNumber": 26, "col_offset": 61, "nodeName": "keys", "type": "Any"}, {"lineNumber": 27, "col_offset": 49, "nodeName": "keys", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "msg", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "to_builder", "type": "Any"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "rv", "type": "module"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 68, "col_offset": 43, "nodeName": "root", "type": "Any"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "io_def", "type": "Union[Any, rastervision.core.command_io_definition.CommandIODefinition]"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "rv", "type": "module"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "c", "type": "Any"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "SceneConfig", "type": "Any"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "experiment_config", "type": "Any"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "vo", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "vo", "type": "Any"}, {"lineNumber": 86, "col_offset": 36, "nodeName": "join", "type": "Callable"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "root", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "with_uri", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "uri", "type": "Any"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "vo", "type": "Any"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "vo", "type": "Any"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "vo", "type": "Any"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "vo", "type": "Any"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "vo", "type": "Any"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "rv", "type": "module"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "rv", "type": "module"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "valid_modes", "type": "Set[str]"}, {"lineNumber": 201, "col_offset": 23, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 201, "col_offset": 34, "nodeName": "vo", "type": "Any"}, {"lineNumber": 201, "col_offset": 38, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 202, "col_offset": 26, "nodeName": "ConfigError", "type": "Any"}, {"lineNumber": 209, "col_offset": 39, "nodeName": "valid_modes", "type": "Set[str]"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "ConfigError", "type": "Any"}, {"lineNumber": 26, "col_offset": 61, "nodeName": "vo", "type": "Any"}, {"lineNumber": 27, "col_offset": 49, "nodeName": "vo", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfig"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "path", "type": "module"}, {"lineNumber": 68, "col_offset": 49, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 68, "col_offset": 65, "nodeName": "id", "type": "Any"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "rv", "type": "module"}, {"lineNumber": 86, "col_offset": 36, "nodeName": "path", "type": "module"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "id", "type": "Any"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 88, "col_offset": 48, "nodeName": "mode", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfigBuilder"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfigBuilder"}, {"lineNumber": 202, "col_offset": 26, "nodeName": "rv", "type": "module"}, {"lineNumber": 208, "col_offset": 33, "nodeName": "keys", "type": "Any"}, {"lineNumber": 209, "col_offset": 21, "nodeName": "vo", "type": "Any"}, {"lineNumber": 209, "col_offset": 39, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfigBuilder"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "rv", "type": "module"}, {"lineNumber": 211, "col_offset": 24, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "valid_modes", "type": "Set[str]"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 68, "col_offset": 65, "nodeName": "c", "type": "Any"}, {"lineNumber": 81, "col_offset": 68, "nodeName": "keys", "type": "Any"}, {"lineNumber": 82, "col_offset": 62, "nodeName": "vo", "type": "Any"}, {"lineNumber": 86, "col_offset": 36, "nodeName": "os", "type": "module"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "c", "type": "Any"}, {"lineNumber": 208, "col_offset": 33, "nodeName": "vo", "type": "Any"}, {"lineNumber": 212, "col_offset": 32, "nodeName": "self", "type": "SemanticSegmentationRasterStoreConfigBuilder"}, {"lineNumber": 81, "col_offset": 68, "nodeName": "vo", "type": "Any"}]