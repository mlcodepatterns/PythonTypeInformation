[{"lineNumber": 9, "col_offset": 37, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 9, "col_offset": 37, "nodeName": "unittest", "type": "module"}, {"lineNumber": 49, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "labels", "type": "rastervision.data.label.semantic_segmentation_labels.SemanticSegmentationLabels"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "extent", "type": "rastervision.core.box.Box"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "extent", "type": "rastervision.core.box.Box"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "clipped", "type": "rastervision.data.label.semantic_segmentation_labels.SemanticSegmentationLabels"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "pairs", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "expected_pairs", "type": "List[Tuple[Tuple[Any, Any, Any, Any], Any]]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 11, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "SemanticSegmentationLabels", "type": "Type[rastervision.data.label.semantic_segmentation_labels.SemanticSegmentationLabels]"}, {"lineNumber": 21, "col_offset": 49, "nodeName": "label_pairs", "type": "List[Tuple[rastervision.core.box.Box, Any]]"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "get_extent", "type": "Callable[[], rastervision.core.box.Box]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "make_square", "type": "Callable[[Any, Any, Any], rastervision.core.box.Box]"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "get_clipped_labels", "type": "Callable"}, {"lineNumber": 29, "col_offset": 49, "nodeName": "extent", "type": "rastervision.core.box.Box"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "get_label_pairs", "type": "Callable[[], Any]"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "to_tuple", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "pairs", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "to_tuple", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "expected_pairs", "type": "List[Tuple[rastervision.core.box.Box, Any]]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "pair", "type": "Tuple[Any, Any]"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "expected_pair", "type": "Tuple[Tuple[Any, Any, Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 35, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "pairs", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 45, "col_offset": 46, "nodeName": "expected_pairs", "type": "List[Tuple[Tuple[Any, Any, Any, Any], Any]]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 11, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 41, "nodeName": "labels", "type": "Any"}, {"lineNumber": 16, "col_offset": 43, "nodeName": "labels", "type": "Any"}, {"lineNumber": 17, "col_offset": 43, "nodeName": "labels", "type": "Any"}, {"lineNumber": 18, "col_offset": 45, "nodeName": "labels", "type": "Any"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "labels", "type": "rastervision.data.label.semantic_segmentation_labels.SemanticSegmentationLabels"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "extent", "type": "rastervision.core.box.Box"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "labels", "type": "rastervision.data.label.semantic_segmentation_labels.SemanticSegmentationLabels"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "clipped", "type": "rastervision.data.label.semantic_segmentation_labels.SemanticSegmentationLabels"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "pair", "type": "Tuple[Any, Any]"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "expected_pair", "type": "Tuple[Tuple[Any, Any, Any, Any], Any]"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "make_square", "type": "Callable[[Any, Any, Any], rastervision.core.box.Box]"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "make_square", "type": "Callable[[Any, Any, Any], rastervision.core.box.Box]"}, {"lineNumber": 17, "col_offset": 13, "nodeName": "make_square", "type": "Callable[[Any, Any, Any], rastervision.core.box.Box]"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "make_square", "type": "Callable[[Any, Any, Any], rastervision.core.box.Box]"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 25, "col_offset": 34, "nodeName": "make_square", "type": "Callable[[Any, Any, Any], rastervision.core.box.Box]"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "make_square", "type": "Callable[[Any, Any, Any], rastervision.core.box.Box]"}, {"lineNumber": 33, "col_offset": 41, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 34, "col_offset": 36, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 41, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "p", "type": "Any"}, {"lineNumber": 41, "col_offset": 63, "nodeName": "label_pairs", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 17, "col_offset": 13, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 25, "col_offset": 34, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "Box", "type": "Type[rastervision.core.box.Box]"}, {"lineNumber": 33, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "tuple_format", "type": "Any"}, {"lineNumber": 41, "col_offset": 42, "nodeName": "p", "type": "Any"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "p", "type": "Any"}]