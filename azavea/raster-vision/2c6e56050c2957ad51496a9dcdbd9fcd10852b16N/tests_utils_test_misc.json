[{"lineNumber": 7, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 7, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "mod", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "lst", "type": "List[int]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "g1", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "g2", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "g3", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "g4", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 56, "nodeName": "expected", "type": "Dict[str, Union[Dict[str, Union[Dict[str, str], List[Union[Dict[str, str], Dict[str, int]]], str, int]], int, str]]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "set_nested_keys", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "d", "type": "Dict[str, Union[Dict[str, Union[Dict[str, int], List[Dict[str, int]], int]], int]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "d", "type": "Dict[str, Union[Dict[str, Union[Dict[str, int], List[Dict[str, int]], int]], int]]"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "expected", "type": "Dict[str, Union[Dict[str, Union[Dict[str, int], List[Dict[str, int]], int]], int]]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "set_nested_keys", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "d", "type": "Dict[str, Union[Dict[str, Union[Dict[str, int], List[Dict[str, int]], int]], int]]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "d", "type": "Dict[str, Union[Dict[str, Union[Dict[str, int], List[Dict[str, int]], int]], int]]"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "expected", "type": "Dict[str, Union[Dict[str, Union[Dict[str, int], List[Dict[str, int]], int]], int]]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "set_nested_keys", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 24, "nodeName": "d", "type": "Dict[str, Union[Dict[str, Union[Dict[str, int], List[Dict[str, int]], int]], int]]"}, {"lineNumber": 209, "col_offset": 27, "nodeName": "mod", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "d", "type": "Dict[str, Union[Dict[str, Union[Dict[str, int], List[Dict[str, int]], int]], int]]"}, {"lineNumber": 211, "col_offset": 28, "nodeName": "expected", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, int], List[Dict[str, int]]]], int]]"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "split_into_groups", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "g1", "type": "Any"}, {"lineNumber": 219, "col_offset": 13, "nodeName": "split_into_groups", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 219, "col_offset": 31, "nodeName": "lst", "type": "List[int]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "g2", "type": "Any"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "split_into_groups", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "g3", "type": "Any"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "split_into_groups", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 225, "col_offset": 31, "nodeName": "lst", "type": "List[int]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "g4", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestMiscUtils"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "replace_nones_in_dict", "type": "Callable"}, {"lineNumber": 55, "col_offset": 47, "nodeName": "d", "type": "Dict[str, Optional[Union[Dict[str, Optional[Union[Dict[str, None], List[Union[Dict[str, None], Dict[str, int]]], int]]], int]]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestMiscUtils"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "TestMiscUtils"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "TestMiscUtils"}, {"lineNumber": 216, "col_offset": 31, "nodeName": "lst", "type": "List[int]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "TestMiscUtils"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "TestMiscUtils"}, {"lineNumber": 222, "col_offset": 31, "nodeName": "lst", "type": "List[int]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "TestMiscUtils"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "TestMiscUtils"}]