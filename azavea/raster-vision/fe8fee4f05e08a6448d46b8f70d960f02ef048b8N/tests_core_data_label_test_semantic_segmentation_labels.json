[{"lineNumber": 56, "col_offset": 0, "nodeName": "make_random_scores", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 11, "col_offset": 37, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "test_build", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 45, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "test_get", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "test_get_with_aoi", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "test_pixel_scores", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "test_get_scores_arr", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "test_get_label_arr", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "test_pixel_hits", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "test_eq", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "test_get_with_aoi", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 37, "nodeName": "unittest", "type": "module"}, {"lineNumber": 30, "col_offset": 45, "nodeName": "unittest", "type": "module"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "arr", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "arr", "type": "Any"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "unittest", "type": "module"}, {"lineNumber": 141, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "label_arr0", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "label_arr1", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "label_arr0", "type": "Any"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "label_arr1", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "null_class_id", "type": "int"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "aoi_polygons", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "exp_label_arr", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 57, "col_offset": 10, "nodeName": "normal", "type": "Any"}, {"lineNumber": 59, "col_offset": 10, "nodeName": "exp", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "arr", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "sum", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "scores_left", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "scores_mid", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "scores_right", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "scores_left", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "scores_mid", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "scores_right", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "extent", "type": "Any"}, {"lineNumber": 83, "col_offset": 39, "nodeName": "scores_left", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "scores_mid", "type": "Any"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "scores_right", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "scores_left", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "scores_mid", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "scores_right", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "expected_scores", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "arr", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "hits", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "expected_hits", "type": "Any"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "hits", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "avg_scores", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "avg_scores", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "pixel_hits", "type": "Any"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "expected_hits", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "pixel_scores", "type": "Any"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "expected_scores", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "null_class_id", "type": "int"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "aoi", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "aoi_polygons", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "exp_label_arr", "type": "Any"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "null_class_id", "type": "int"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "aoi", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "SemanticSegmentationDiscreteLabels", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertIsInstance", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "SemanticSegmentationSmoothLabels", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationDiscreteLabels"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationDiscreteLabels"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "choice", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationDiscreteLabels"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "choice", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationDiscreteLabels"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "SemanticSegmentationDiscreteLabels", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "self", "type": "TestSemanticSegmentationDiscreteLabels"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "self", "type": "TestSemanticSegmentationDiscreteLabels"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 41, "col_offset": 56, "nodeName": "label_arr0", "type": "Any"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "full", "type": "Any"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 47, "col_offset": 55, "nodeName": "null_class_id", "type": "int"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "exp_label_arr", "type": "Any"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "label_arr1", "type": "Any"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "filter_by_aoi", "type": "Any"}, {"lineNumber": 50, "col_offset": 43, "nodeName": "aoi_polygons", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 57, "nodeName": "null_class_id", "type": "int"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "get_label_arr", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 52, "col_offset": 49, "nodeName": "exp_label_arr", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 10, "nodeName": "random", "type": "Any"}, {"lineNumber": 59, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "arr", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "arr", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "make_random_scores", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 46, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "make_random_scores", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 45, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "make_random_scores", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 47, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "astype", "type": "Any"}, {"lineNumber": 76, "col_offset": 51, "nodeName": "float16", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "astype", "type": "Any"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "float16", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "astype", "type": "Any"}, {"lineNumber": 78, "col_offset": 53, "nodeName": "float16", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "Box", "type": "Any"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "SemanticSegmentationSmoothLabels", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 83, "col_offset": 39, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "arr", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "hits", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "hits", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "hits", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 100, "col_offset": 45, "nodeName": "expected_scores", "type": "Any"}, {"lineNumber": 101, "col_offset": 45, "nodeName": "pixel_scores", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "expected_scores", "type": "Any"}, {"lineNumber": 104, "col_offset": 44, "nodeName": "expected_hits", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "avg_scores", "type": "Any"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "expected_scores", "type": "Any"}, {"lineNumber": 109, "col_offset": 44, "nodeName": "expected_hits", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "avg_scores", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "labels", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "expected_hits", "type": "Any"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "pixel_hits", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "SemanticSegmentationSmoothLabels", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "get_label_arr", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "exp_label_arr", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "y0", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "x0", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "y1", "type": "Any"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "x1", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "x0", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "x1", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "exp_label_arr", "type": "Any"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "get_label_arr", "type": "Any"}, {"lineNumber": 134, "col_offset": 64, "nodeName": "aoi", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "filter_by_aoi", "type": "Any"}, {"lineNumber": 136, "col_offset": 43, "nodeName": "aoi_polygons", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 57, "nodeName": "null_class_id", "type": "int"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "get_label_arr", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 138, "col_offset": 38, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 138, "col_offset": 49, "nodeName": "exp_label_arr", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "build", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "build", "type": "Any"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 32, "col_offset": 51, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "random", "type": "Any"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "random", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationDiscreteLabels"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationDiscreteLabels"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "get_label_arr", "type": "Any"}, {"lineNumber": 41, "col_offset": 56, "nodeName": "self", "type": "TestSemanticSegmentationDiscreteLabels"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "to_shapely", "type": "Any"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "label_arr1", "type": "Any"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "self", "type": "TestSemanticSegmentationDiscreteLabels"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "labels", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "labels", "type": "Any"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationDiscreteLabels"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "window_to_label_arr", "type": "Any"}, {"lineNumber": 57, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 57, "col_offset": 46, "nodeName": "h", "type": "int"}, {"lineNumber": 57, "col_offset": 49, "nodeName": "w", "type": "int"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 72, "col_offset": 46, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 73, "col_offset": 45, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 74, "col_offset": 47, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "scores_left", "type": "Any"}, {"lineNumber": 76, "col_offset": 51, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "scores_mid", "type": "Any"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "scores_right", "type": "Any"}, {"lineNumber": 78, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "extent", "type": "Any"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 87, "col_offset": 57, "nodeName": "float16", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 40, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 100, "col_offset": 45, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 101, "col_offset": 45, "nodeName": "labels", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 104, "col_offset": 44, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "get_score_arr", "type": "Any"}, {"lineNumber": 106, "col_offset": 50, "nodeName": "extent", "type": "Any"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 109, "col_offset": 44, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 112, "col_offset": 38, "nodeName": "get_label_arr", "type": "Any"}, {"lineNumber": 112, "col_offset": 64, "nodeName": "extent", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "labels", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "extent", "type": "Any"}, {"lineNumber": 120, "col_offset": 44, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "labels", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "labels", "type": "Any"}, {"lineNumber": 128, "col_offset": 14, "nodeName": "Box", "type": "Any"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "to_shapely", "type": "Any"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "labels", "type": "Any"}, {"lineNumber": 130, "col_offset": 50, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "x0", "type": "Any"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "x1", "type": "Any"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "labels", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "labels", "type": "Any"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "labels", "type": "Any"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "SemanticSegmentationLabels", "type": "Any"}, {"lineNumber": 18, "col_offset": 32, "nodeName": "build", "type": "Any"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "build", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "SemanticSegmentationLabels", "type": "Any"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "Box", "type": "Any"}, {"lineNumber": 32, "col_offset": 51, "nodeName": "Box", "type": "Any"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "self", "type": "TestSemanticSegmentationDiscreteLabels"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "self", "type": "TestSemanticSegmentationDiscreteLabels"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "self", "type": "TestSemanticSegmentationDiscreteLabels"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "labels", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "Box", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "Box", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "Box", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 82, "col_offset": 44, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 87, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 101, "col_offset": 45, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "labels", "type": "Any"}, {"lineNumber": 106, "col_offset": 50, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 112, "col_offset": 38, "nodeName": "labels", "type": "Any"}, {"lineNumber": 112, "col_offset": 64, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 120, "col_offset": 44, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 129, "col_offset": 24, "nodeName": "aoi", "type": "Any"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 130, "col_offset": 50, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "y0", "type": "Any"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "y1", "type": "Any"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "x0", "type": "Any"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "x1", "type": "Any"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 18, "col_offset": 32, "nodeName": "SemanticSegmentationLabels", "type": "Any"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "SemanticSegmentationLabels", "type": "Any"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "Box", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "self", "type": "TestSemanticSegmentationDiscreteLabels"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "self", "type": "TestSemanticSegmentationDiscreteLabels"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "TestSemanticSegmentationDiscreteLabels"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "self", "type": "TestSemanticSegmentationDiscreteLabels"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 112, "col_offset": 38, "nodeName": "self", "type": "TestSemanticSegmentationSmoothLabels"}, {"lineNumber": 22, "col_offset": 36, "nodeName": "Box", "type": "Any"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "Box", "type": "Any"}]