[{"lineNumber": 13, "col_offset": 33, "nodeName": "Labels", "type": "Any"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "SemanticSegmentationLabels", "type": "Type[SemanticSegmentationLabels]"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "SemanticSegmentationLabels", "type": "Type[SemanticSegmentationLabels]"}, {"lineNumber": 22, "col_offset": 61, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 143, "col_offset": 69, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 217, "col_offset": 67, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 235, "col_offset": 42, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 258, "col_offset": 44, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 270, "col_offset": 44, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 39, "nodeName": "List", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "window", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "self", "type": "SemanticSegmentationLabels"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "window_geom", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "label_arr", "type": "numpy.ndarray"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "window_aois", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "aoi", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "aoi_polygons", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "window_aois", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "window_to_label_arr", "type": "Dict[Any, Any]"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "self", "type": "SemanticSegmentationDiscreteLabels"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self_windows", "type": "Set[Any]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "other_windows", "type": "Set[nothing]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "self_windows", "type": "Set[Any]"}, {"lineNumber": 158, "col_offset": 43, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 39, "nodeName": "List", "type": "Any"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 49, "nodeName": "fill_value", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "local_extent", "type": "Any"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "extent", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 187, "col_offset": 27, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 188, "col_offset": 37, "nodeName": "extent", "type": "Any"}, {"lineNumber": 189, "col_offset": 34, "nodeName": "size", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "float16", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "pixel_hits", "type": "Any"}, {"lineNumber": 200, "col_offset": 33, "nodeName": "window", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "ymax", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "xmax", "type": "Any"}, {"lineNumber": 198, "col_offset": 47, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "extents_equal", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "coords_equal", "type": "bool"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "pixel_scores", "type": "Any"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "pixel_scores", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "pixel_hits", "type": "Any"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "pixel_hits", "type": "Any"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "extents_equal", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "coords_equal", "type": "bool"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "scores_equal", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "hits_equal", "type": "Any"}, {"lineNumber": 235, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "chip_sz", "type": "Optional[int]"}, {"lineNumber": 238, "col_offset": 39, "nodeName": "List", "type": "Any"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "values", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "scores", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "hits", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "avg_scores", "type": "Any"}, {"lineNumber": 268, "col_offset": 15, "nodeName": "avg_scores", "type": "Any"}, {"lineNumber": 258, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "avg_scores", "type": "numpy.ndarray"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "labels", "type": "Any"}, {"lineNumber": 270, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 282, "col_offset": 19, "nodeName": "fill_value", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 26, "col_offset": 34, "nodeName": "Box", "type": "Any"}, {"lineNumber": 26, "col_offset": 47, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 32, "col_offset": 34, "nodeName": "Box", "type": "Any"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "Box", "type": "Any"}, {"lineNumber": 42, "col_offset": 44, "nodeName": "Box", "type": "Any"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 46, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "aoi_polygons", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "self", "type": "SemanticSegmentationLabels"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "get_windows", "type": "Callable[..., List[Any]]"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "Box", "type": "Any"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "Any", "type": "Any"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "Box", "type": "Any"}, {"lineNumber": 63, "col_offset": 63, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 64, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "to_shapely", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "self", "type": "SemanticSegmentationLabels"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "window_aoi", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "smooth", "type": "bool"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationDiscreteLabels"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 140, "col_offset": 40, "nodeName": "window_to_label_arr", "type": "Any"}, {"lineNumber": 145, "col_offset": 23, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "self_windows", "type": "Set[Any]"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "other_windows", "type": "Set[nothing]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "arr2", "type": "numpy.ndarray"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "Box", "type": "Any"}, {"lineNumber": 157, "col_offset": 47, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "window_to_label_arr", "type": "Dict[Any, Any]"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "Box", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "window_to_label_arr", "type": "Dict[Any, Any]"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "Box", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "get_label_arr", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 164, "col_offset": 34, "nodeName": "window", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "Box", "type": "Any"}, {"lineNumber": 169, "col_offset": 36, "nodeName": "Box", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "window_to_label_arr", "type": "Dict[Any, Any]"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "Box", "type": "Any"}, {"lineNumber": 172, "col_offset": 43, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 173, "col_offset": 30, "nodeName": "Any", "type": "Any"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "Box", "type": "Any"}, {"lineNumber": 178, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "ymin", "type": "Any"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "xmin", "type": "Any"}, {"lineNumber": 188, "col_offset": 30, "nodeName": "_", "type": "Any"}, {"lineNumber": 188, "col_offset": 33, "nodeName": "_", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "height", "type": "Any"}, {"lineNumber": 189, "col_offset": 21, "nodeName": "width", "type": "Any"}, {"lineNumber": 189, "col_offset": 34, "nodeName": "extent", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 198, "col_offset": 39, "nodeName": "Box", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "ymin", "type": "Any"}, {"lineNumber": 200, "col_offset": 14, "nodeName": "xmin", "type": "Any"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "ymax", "type": "Any"}, {"lineNumber": 200, "col_offset": 26, "nodeName": "xmax", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "min", "type": "Callable"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "ymax", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "height", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "min", "type": "Callable"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "xmax", "type": "Any"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "width", "type": "Any"}, {"lineNumber": 203, "col_offset": 52, "nodeName": "ymax", "type": "Any"}, {"lineNumber": 203, "col_offset": 58, "nodeName": "xmax", "type": "Any"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "local_extent", "type": "Any"}, {"lineNumber": 208, "col_offset": 45, "nodeName": "local_extent", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "other", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "other", "type": "Any"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "local_extent", "type": "Any"}, {"lineNumber": 218, "col_offset": 45, "nodeName": "local_extent", "type": "Any"}, {"lineNumber": 222, "col_offset": 23, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 222, "col_offset": 35, "nodeName": "pixel_scores", "type": "Any"}, {"lineNumber": 222, "col_offset": 54, "nodeName": "pixel_scores", "type": "Any"}, {"lineNumber": 223, "col_offset": 21, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 223, "col_offset": 36, "nodeName": "pixel_hits", "type": "Any"}, {"lineNumber": 223, "col_offset": 53, "nodeName": "pixel_hits", "type": "Any"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "scores_equal", "type": "Any"}, {"lineNumber": 224, "col_offset": 33, "nodeName": "hits_equal", "type": "Any"}, {"lineNumber": 226, "col_offset": 34, "nodeName": "Box", "type": "Any"}, {"lineNumber": 226, "col_offset": 47, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "add_window", "type": "Callable[[Any, numpy.ndarray], None]"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "window", "type": "Any"}, {"lineNumber": 227, "col_offset": 32, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 229, "col_offset": 34, "nodeName": "Box", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "y0", "type": "int"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "x0", "type": "int"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "y1", "type": "int"}, {"lineNumber": 231, "col_offset": 20, "nodeName": "x1", "type": "int"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "_to_local_coords", "type": "Callable[[Any], Tuple[int, int, int, int]]"}, {"lineNumber": 231, "col_offset": 47, "nodeName": "window", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "pixel_scores", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "pixel_hits", "type": "Any"}, {"lineNumber": 235, "col_offset": 34, "nodeName": "Box", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "get_score_arr", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 236, "col_offset": 34, "nodeName": "window", "type": "Any"}, {"lineNumber": 246, "col_offset": 33, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 247, "col_offset": 11, "nodeName": "chip_sz", "type": "Optional[int]"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "get_windows", "type": "Any"}, {"lineNumber": 249, "col_offset": 45, "nodeName": "chip_sz", "type": "Optional[int]"}, {"lineNumber": 249, "col_offset": 54, "nodeName": "chip_sz", "type": "Optional[int]"}, {"lineNumber": 238, "col_offset": 44, "nodeName": "Box", "type": "Any"}, {"lineNumber": 251, "col_offset": 33, "nodeName": "Box", "type": "Any"}, {"lineNumber": 251, "col_offset": 46, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "astype", "type": "Any"}, {"lineNumber": 252, "col_offset": 31, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "y0", "type": "int"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "x0", "type": "int"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "y1", "type": "int"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "x1", "type": "int"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "_to_local_coords", "type": "Callable[[Any], Tuple[int, int, int, int]]"}, {"lineNumber": 253, "col_offset": 47, "nodeName": "window", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "h", "type": "int"}, {"lineNumber": 254, "col_offset": 11, "nodeName": "w", "type": "int"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "pixel_scores", "type": "Any"}, {"lineNumber": 255, "col_offset": 48, "nodeName": "values", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "pixel_hits", "type": "Any"}, {"lineNumber": 258, "col_offset": 36, "nodeName": "Box", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "y0", "type": "int"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "x0", "type": "int"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "y1", "type": "int"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "x1", "type": "int"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "_to_local_coords", "type": "Callable[[Any], Tuple[int, int, int, int]]"}, {"lineNumber": 264, "col_offset": 47, "nodeName": "window", "type": "Any"}, {"lineNumber": 265, "col_offset": 17, "nodeName": "pixel_scores", "type": "Any"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "pixel_hits", "type": "Any"}, {"lineNumber": 267, "col_offset": 21, "nodeName": "scores", "type": "Any"}, {"lineNumber": 267, "col_offset": 30, "nodeName": "hits", "type": "Any"}, {"lineNumber": 270, "col_offset": 36, "nodeName": "Box", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "y0", "type": "int"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "x0", "type": "int"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "y1", "type": "int"}, {"lineNumber": 272, "col_offset": 20, "nodeName": "x1", "type": "int"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "_to_local_coords", "type": "Callable[[Any], Tuple[int, int, int, int]]"}, {"lineNumber": 272, "col_offset": 47, "nodeName": "window", "type": "Any"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "get_score_arr", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 273, "col_offset": 40, "nodeName": "window", "type": "Any"}, {"lineNumber": 274, "col_offset": 17, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 274, "col_offset": 27, "nodeName": "avg_scores", "type": "numpy.ndarray"}, {"lineNumber": 277, "col_offset": 32, "nodeName": "Box", "type": "Any"}, {"lineNumber": 277, "col_offset": 43, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 278, "col_offset": 30, "nodeName": "Any", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "y0", "type": "int"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "x0", "type": "int"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "y1", "type": "int"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "x1", "type": "int"}, {"lineNumber": 283, "col_offset": 25, "nodeName": "_to_local_coords", "type": "Callable[[Any], Tuple[int, int, int, int]]"}, {"lineNumber": 283, "col_offset": 47, "nodeName": "window", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "h", "type": "int"}, {"lineNumber": 284, "col_offset": 11, "nodeName": "w", "type": "int"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 26, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "self", "type": "SemanticSegmentationLabels"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "_filter_window_by_aoi", "type": "Callable[[Any, List[Any], int], None]"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "window", "type": "Any"}, {"lineNumber": 52, "col_offset": 47, "nodeName": "aoi_polygons", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 61, "nodeName": "null_class_id", "type": "int"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "window", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "window", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "intersection", "type": "Any"}, {"lineNumber": 72, "col_offset": 42, "nodeName": "window_geom", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "is_empty", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "window_aoi", "type": "Any"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "rasterize", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "astype", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "bool", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "mask_fill", "type": "Callable[[Any, numpy.ndarray, Any], None]"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "window", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "mask", "type": "Any"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "null_class_id", "type": "int"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "self", "type": "SemanticSegmentationLabels"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "SemanticSegmentationDiscreteLabels", "type": "Type[SemanticSegmentationDiscreteLabels]"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "extent", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "num_classes", "type": "Optional[int]"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "SemanticSegmentationSmoothLabels", "type": "Type[SemanticSegmentationSmoothLabels]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "window_to_label_arr", "type": "Dict[Any, Any]"}, {"lineNumber": 140, "col_offset": 40, "nodeName": "other", "type": "Any"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "get_label_arr", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 151, "col_offset": 38, "nodeName": "w", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "get_label_arr", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 152, "col_offset": 39, "nodeName": "w", "type": "Any"}, {"lineNumber": 157, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationDiscreteLabels"}, {"lineNumber": 158, "col_offset": 33, "nodeName": "window", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "self", "type": "SemanticSegmentationDiscreteLabels"}, {"lineNumber": 161, "col_offset": 37, "nodeName": "window", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "self", "type": "SemanticSegmentationDiscreteLabels"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "self", "type": "SemanticSegmentationDiscreteLabels"}, {"lineNumber": 170, "col_offset": 40, "nodeName": "window", "type": "Any"}, {"lineNumber": 172, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "window_to_label_arr", "type": "Dict[Any, Any]"}, {"lineNumber": 174, "col_offset": 41, "nodeName": "mask", "type": "numpy.ndarray"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 189, "col_offset": 21, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 195, "col_offset": 13, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 195, "col_offset": 26, "nodeName": "height", "type": "Any"}, {"lineNumber": 195, "col_offset": 39, "nodeName": "width", "type": "Any"}, {"lineNumber": 195, "col_offset": 58, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 196, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 36, "nodeName": "height", "type": "Any"}, {"lineNumber": 196, "col_offset": 49, "nodeName": "width", "type": "Any"}, {"lineNumber": 196, "col_offset": 68, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "ymin", "type": "Any"}, {"lineNumber": 203, "col_offset": 23, "nodeName": "ymin", "type": "Any"}, {"lineNumber": 203, "col_offset": 34, "nodeName": "xmin", "type": "Any"}, {"lineNumber": 203, "col_offset": 41, "nodeName": "xmin", "type": "Any"}, {"lineNumber": 198, "col_offset": 53, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 198, "col_offset": 58, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 198, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 198, "col_offset": 68, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 208, "col_offset": 45, "nodeName": "other", "type": "Any"}, {"lineNumber": 209, "col_offset": 24, "nodeName": "ymin", "type": "Any"}, {"lineNumber": 209, "col_offset": 35, "nodeName": "xmin", "type": "Any"}, {"lineNumber": 209, "col_offset": 50, "nodeName": "ymin", "type": "Any"}, {"lineNumber": 209, "col_offset": 62, "nodeName": "xmin", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "extents_equal", "type": "Any"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "coords_equal", "type": "bool"}, {"lineNumber": 211, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 218, "col_offset": 45, "nodeName": "other", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "ymin", "type": "Any"}, {"lineNumber": 219, "col_offset": 35, "nodeName": "xmin", "type": "Any"}, {"lineNumber": 219, "col_offset": 50, "nodeName": "ymin", "type": "Any"}, {"lineNumber": 219, "col_offset": 62, "nodeName": "xmin", "type": "Any"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "extents_equal", "type": "Any"}, {"lineNumber": 220, "col_offset": 34, "nodeName": "coords_equal", "type": "bool"}, {"lineNumber": 222, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 35, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 222, "col_offset": 54, "nodeName": "other", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 223, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 36, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 223, "col_offset": 53, "nodeName": "other", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 226, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 246, "col_offset": 33, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 248, "col_offset": 20, "nodeName": "local_extent", "type": "Any"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "local_extent", "type": "Any"}, {"lineNumber": 249, "col_offset": 65, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 251, "col_offset": 46, "nodeName": "np", "type": "module"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "values", "type": "numpy.ndarray"}, {"lineNumber": 252, "col_offset": 31, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "y1", "type": "int"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "y0", "type": "int"}, {"lineNumber": 254, "col_offset": 24, "nodeName": "x1", "type": "int"}, {"lineNumber": 254, "col_offset": 29, "nodeName": "x0", "type": "int"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 265, "col_offset": 17, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 273, "col_offset": 21, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 274, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 277, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 283, "col_offset": 25, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "y1", "type": "int"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "y0", "type": "int"}, {"lineNumber": 284, "col_offset": 24, "nodeName": "x1", "type": "int"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "x0", "type": "int"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "pixel_scores", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "pixel_scores", "type": "Any"}, {"lineNumber": 287, "col_offset": 50, "nodeName": "mask", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "pixel_hits", "type": "Any"}, {"lineNumber": 288, "col_offset": 38, "nodeName": "mask", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "SemanticSegmentationLabels"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "aoi", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "window_aoi", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "transform", "type": "Any"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "transform_shape", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 56, "nodeName": "window_aoi", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "window_aoi", "type": "Any"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "mask", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "self", "type": "SemanticSegmentationLabels"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "window", "type": "Any"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "extent", "type": "Any"}, {"lineNumber": 126, "col_offset": 43, "nodeName": "num_classes", "type": "Optional[int]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationDiscreteLabels"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "window_to_label_arr", "type": "Dict[Any, Any]"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "window_to_label_arr", "type": "Dict[nothing, nothing]"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "self", "type": "SemanticSegmentationDiscreteLabels"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "other", "type": "SemanticSegmentationDiscreteLabels"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "arr1", "type": "numpy.ndarray"}, {"lineNumber": 153, "col_offset": 40, "nodeName": "arr2", "type": "numpy.ndarray"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "window_to_label_arr", "type": "Dict[Any, Any]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationDiscreteLabels"}, {"lineNumber": 174, "col_offset": 33, "nodeName": "window", "type": "Any"}, {"lineNumber": 195, "col_offset": 26, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 195, "col_offset": 39, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 195, "col_offset": 58, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 196, "col_offset": 36, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 196, "col_offset": 49, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 196, "col_offset": 68, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 23, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 203, "col_offset": 41, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 209, "col_offset": 24, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 209, "col_offset": 35, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 209, "col_offset": 50, "nodeName": "other", "type": "Any"}, {"lineNumber": 209, "col_offset": 62, "nodeName": "other", "type": "Any"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 219, "col_offset": 35, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 219, "col_offset": 50, "nodeName": "other", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 219, "col_offset": 62, "nodeName": "other", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 232, "col_offset": 31, "nodeName": "y0", "type": "int"}, {"lineNumber": 232, "col_offset": 34, "nodeName": "y1", "type": "int"}, {"lineNumber": 232, "col_offset": 38, "nodeName": "x0", "type": "int"}, {"lineNumber": 232, "col_offset": 41, "nodeName": "x1", "type": "int"}, {"lineNumber": 233, "col_offset": 29, "nodeName": "y0", "type": "int"}, {"lineNumber": 233, "col_offset": 32, "nodeName": "y1", "type": "int"}, {"lineNumber": 233, "col_offset": 36, "nodeName": "x0", "type": "int"}, {"lineNumber": 233, "col_offset": 39, "nodeName": "x1", "type": "int"}, {"lineNumber": 248, "col_offset": 20, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 255, "col_offset": 31, "nodeName": "y0", "type": "int"}, {"lineNumber": 255, "col_offset": 34, "nodeName": "y1", "type": "int"}, {"lineNumber": 255, "col_offset": 38, "nodeName": "x0", "type": "int"}, {"lineNumber": 255, "col_offset": 41, "nodeName": "x1", "type": "int"}, {"lineNumber": 255, "col_offset": 61, "nodeName": "h", "type": "int"}, {"lineNumber": 255, "col_offset": 65, "nodeName": "w", "type": "int"}, {"lineNumber": 256, "col_offset": 24, "nodeName": "y0", "type": "int"}, {"lineNumber": 256, "col_offset": 27, "nodeName": "y1", "type": "int"}, {"lineNumber": 256, "col_offset": 31, "nodeName": "x0", "type": "int"}, {"lineNumber": 256, "col_offset": 34, "nodeName": "x1", "type": "int"}, {"lineNumber": 265, "col_offset": 40, "nodeName": "y0", "type": "int"}, {"lineNumber": 265, "col_offset": 43, "nodeName": "y1", "type": "int"}, {"lineNumber": 265, "col_offset": 47, "nodeName": "x0", "type": "int"}, {"lineNumber": 265, "col_offset": 50, "nodeName": "x1", "type": "int"}, {"lineNumber": 266, "col_offset": 31, "nodeName": "y0", "type": "int"}, {"lineNumber": 266, "col_offset": 34, "nodeName": "y1", "type": "int"}, {"lineNumber": 266, "col_offset": 38, "nodeName": "x0", "type": "int"}, {"lineNumber": 266, "col_offset": 41, "nodeName": "x1", "type": "int"}, {"lineNumber": 285, "col_offset": 21, "nodeName": "h", "type": "int"}, {"lineNumber": 285, "col_offset": 25, "nodeName": "w", "type": "int"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 286, "col_offset": 50, "nodeName": "mask", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationSmoothLabels"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "window_aois", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "p", "type": "Any"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "window_aois", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "self", "type": "SemanticSegmentationDiscreteLabels"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "other", "type": "SemanticSegmentationDiscreteLabels"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "self", "type": "SemanticSegmentationDiscreteLabels"}, {"lineNumber": 286, "col_offset": 31, "nodeName": "y0", "type": "int"}, {"lineNumber": 286, "col_offset": 34, "nodeName": "y1", "type": "int"}, {"lineNumber": 286, "col_offset": 38, "nodeName": "x0", "type": "int"}, {"lineNumber": 286, "col_offset": 41, "nodeName": "x1", "type": "int"}, {"lineNumber": 287, "col_offset": 26, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 287, "col_offset": 36, "nodeName": "y0", "type": "int"}, {"lineNumber": 287, "col_offset": 39, "nodeName": "y1", "type": "int"}, {"lineNumber": 287, "col_offset": 43, "nodeName": "x0", "type": "int"}, {"lineNumber": 287, "col_offset": 46, "nodeName": "x1", "type": "int"}, {"lineNumber": 288, "col_offset": 24, "nodeName": "y0", "type": "int"}, {"lineNumber": 288, "col_offset": 27, "nodeName": "y1", "type": "int"}, {"lineNumber": 288, "col_offset": 31, "nodeName": "x0", "type": "int"}, {"lineNumber": 288, "col_offset": 34, "nodeName": "x1", "type": "int"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "xmin", "type": "Any"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "y", "type": "Any"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "ymin", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "label_arr", "type": "numpy.ndarray"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "window", "type": "Any"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "window", "type": "Any"}]