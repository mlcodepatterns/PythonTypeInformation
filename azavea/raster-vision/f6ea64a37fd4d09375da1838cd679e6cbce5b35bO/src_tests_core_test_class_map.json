[{"lineNumber": 8, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 8, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 59, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "source", "type": "List[str]"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "cm", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "cm", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "cm", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "source", "type": "Dict[str, int]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "cm", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "source", "type": "Dict[str, int]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "source", "type": "Dict[str, Tuple[int, str]]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "cm", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "source", "type": "Dict[str, Tuple[int, str]]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 11, "col_offset": 13, "nodeName": "construct_from", "type": "Any"}, {"lineNumber": 11, "col_offset": 37, "nodeName": "source", "type": "List[str]"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 12, "col_offset": 15, "nodeName": "name", "type": "str"}, {"lineNumber": 12, "col_offset": 23, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 12, "col_offset": 33, "nodeName": "source", "type": "List[str]"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "actual", "type": "Any"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "construct_from", "type": "Any"}, {"lineNumber": 23, "col_offset": 37, "nodeName": "source", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "msg", "type": "Any"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 24, "col_offset": 32, "nodeName": "source", "type": "List[Any]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "actual", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "construct_from", "type": "Any"}, {"lineNumber": 35, "col_offset": 37, "nodeName": "source", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "item", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "source", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "item", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "actual", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "construct_from", "type": "Any"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "source", "type": "Dict[str, int]"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "expected", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "actual", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "construct_from", "type": "Any"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "source", "type": "Dict[str, Tuple[int, str]]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "actual", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 11, "col_offset": 13, "nodeName": "ClassMap", "type": "Any"}, {"lineNumber": 13, "col_offset": 23, "nodeName": "ClassItem", "type": "Any"}, {"lineNumber": 14, "col_offset": 21, "nodeName": "get_by_id", "type": "Any"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 15, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 15, "col_offset": 37, "nodeName": "expected", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "ClassItemMsg", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "ClassItemMsg", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "ClassItemMsg", "type": "Any"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "ClassMap", "type": "Any"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "from_proto", "type": "Any"}, {"lineNumber": 25, "col_offset": 44, "nodeName": "msg", "type": "Any"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "get_by_id", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "expected", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "ClassItem", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "ClassItem", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "ClassItem", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "ClassMap", "type": "Any"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "get_by_id", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "expected", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "ClassMap", "type": "Any"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "ClassItem", "type": "Any"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "get_by_id", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "expected", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "ClassMap", "type": "Any"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "ClassItem", "type": "Any"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "get_by_id", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "actual", "type": "Any"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "expected", "type": "Any"}, {"lineNumber": 13, "col_offset": 48, "nodeName": "name", "type": "str"}, {"lineNumber": 14, "col_offset": 21, "nodeName": "cm", "type": "Any"}, {"lineNumber": 14, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "self", "type": "TestClassMap"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "ClassItem", "type": "Any"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "cm", "type": "Any"}, {"lineNumber": 26, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "self", "type": "TestClassMap"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "cm", "type": "Any"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "self", "type": "TestClassMap"}, {"lineNumber": 45, "col_offset": 55, "nodeName": "name", "type": "str"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "cm", "type": "Any"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "source", "type": "Dict[str, int]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "TestClassMap"}, {"lineNumber": 54, "col_offset": 41, "nodeName": "name", "type": "str"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "cm", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "TestClassMap"}, {"lineNumber": 13, "col_offset": 36, "nodeName": "i", "type": "int"}, {"lineNumber": 45, "col_offset": 36, "nodeName": "source", "type": "Dict[str, int]"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "name", "type": "str"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "source", "type": "Dict[str, Tuple[int, str]]"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "name", "type": "str"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "source", "type": "Dict[str, Tuple[int, str]]"}, {"lineNumber": 54, "col_offset": 53, "nodeName": "source", "type": "Dict[str, Tuple[int, str]]"}, {"lineNumber": 55, "col_offset": 41, "nodeName": "name", "type": "str"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "name", "type": "str"}, {"lineNumber": 54, "col_offset": 60, "nodeName": "name", "type": "str"}]