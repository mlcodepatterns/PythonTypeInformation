[{"lineNumber": 6, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 6, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "mod", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 56, "nodeName": "expected", "type": "Dict[str, Union[Dict[str, Union[Dict[str, str], List[Union[Dict[str, str], Dict[str, int]]], str, int]], int, str]]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "set_nested_keys", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "d", "type": "Dict[str, Union[Dict[str, Union[Dict[str, int], List[Dict[str, int]], int]], int]]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "d", "type": "Dict[str, Union[Dict[str, Union[Dict[str, int], List[Dict[str, int]], int]], int]]"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "expected", "type": "Dict[str, Union[Dict[str, Union[Dict[str, int], List[Dict[str, int]], int]], int]]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "set_nested_keys", "type": "Any"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "d", "type": "Dict[str, Union[Dict[str, Union[Dict[str, int], List[Dict[str, int]], int]], int]]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "d", "type": "Dict[str, Union[Dict[str, Union[Dict[str, int], List[Dict[str, int]], int]], int]]"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "expected", "type": "Dict[str, Union[Dict[str, Union[Dict[str, int], List[Dict[str, int]], int]], int]]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "set_nested_keys", "type": "Any"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "d", "type": "Dict[str, Union[Dict[str, Union[Dict[str, int], List[Dict[str, int]], int]], int]]"}, {"lineNumber": 208, "col_offset": 27, "nodeName": "mod", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "d", "type": "Dict[str, Union[Dict[str, Union[Dict[str, int], List[Dict[str, int]], int]], int]]"}, {"lineNumber": 210, "col_offset": 28, "nodeName": "expected", "type": "Dict[str, Union[Dict[str, Union[int, Dict[str, int], List[Dict[str, int]]]], int]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestMiscUtils"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "replace_nones_in_dict", "type": "Any"}, {"lineNumber": 54, "col_offset": 47, "nodeName": "d", "type": "Dict[str, Optional[Union[Dict[str, Optional[Union[Dict[str, None], List[Union[Dict[str, None], Dict[str, int]]], int]]], int]]]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestMiscUtils"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "TestMiscUtils"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestMiscUtils"}]