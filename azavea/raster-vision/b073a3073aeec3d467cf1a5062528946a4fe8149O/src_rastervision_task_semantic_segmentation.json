[{"lineNumber": 10, "col_offset": 0, "nodeName": "get_random_sample_train_windows", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "Task", "type": "Any"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "prob", "type": "Any"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "negative_survival_probability", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "target_count_threshold", "type": "Any"}, {"lineNumber": 13, "col_offset": 29, "nodeName": "target_count_threshold", "type": "Any"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "target_classes", "type": "Any"}, {"lineNumber": 14, "col_offset": 21, "nodeName": "target_classes", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "number_of_chips", "type": "Any"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "number_of_chips", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "attempts", "type": "int"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 61, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 13, "col_offset": 29, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 14, "col_offset": 21, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "target_classes", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "all_class_ids", "type": "List[Any]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "target_classes", "type": "List[Any]"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "all_class_ids", "type": "List[Any]"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "attempts", "type": "int"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "number_of_chips", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "candidate_window", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "attempts", "type": "int"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "raster_source", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "raster_source", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "extent", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "label_store", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "ground_truth_label_source", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "chip_size", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "chip_size", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 45, "col_offset": 49, "nodeName": "List", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "label_store", "type": "Any"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "ground_truth_label_source", "type": "Any"}, {"lineNumber": 80, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "chip_size", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "chip_size", "type": "Any"}, {"lineNumber": 97, "col_offset": 50, "nodeName": "List", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "labels", "type": "Any"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "id", "type": "Any"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "make_random_square", "type": "Any"}, {"lineNumber": 24, "col_offset": 53, "nodeName": "chip_size", "type": "Any"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "attempts", "type": "int"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "prob", "type": "Any"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "Scene", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "aoi_polygons", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "windows", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "scene", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "get_extent", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "scene", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "config", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "window_method", "type": "Any"}, {"lineNumber": 45, "col_offset": 54, "nodeName": "Box", "type": "Any"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "Box", "type": "Any"}, {"lineNumber": 80, "col_offset": 51, "nodeName": "Scene", "type": "Any"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "scene", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "get_labels", "type": "Any"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "window", "type": "Any"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "Box", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "config", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "get_windows", "type": "Any"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "chip_size", "type": "Any"}, {"lineNumber": 108, "col_offset": 45, "nodeName": "chip_size", "type": "Any"}, {"lineNumber": 97, "col_offset": 55, "nodeName": "Box", "type": "Any"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "item", "type": "Any"}, {"lineNumber": 18, "col_offset": 37, "nodeName": "item", "type": "Any"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "extent", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "filter_windows", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "candidate_window", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "scene", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "windows", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "raster_source", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "get_random_sample_train_windows", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "label_store", "type": "Any"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "chip_size", "type": "Any"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "class_map", "type": "Any"}, {"lineNumber": 70, "col_offset": 63, "nodeName": "extent", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "filter_windows", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "window_method", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "stride", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "stride", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "label_store", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "extent", "type": "Any"}, {"lineNumber": 18, "col_offset": 45, "nodeName": "get_items", "type": "Any"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "candidate_window", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "attempts", "type": "int"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "number_of_chips", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "candidate_window", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "enough_target_pixels", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "candidate_window", "type": "Any"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "target_count_threshold", "type": "Any"}, {"lineNumber": 35, "col_offset": 58, "nodeName": "target_classes", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "good", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "filter_by_aoi", "type": "Any"}, {"lineNumber": 58, "col_offset": 44, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 53, "nodeName": "aoi_polygons", "type": "Any"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "config", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "chip_options", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "stride", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "stride", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 18, "col_offset": 45, "nodeName": "class_map", "type": "Any"}, {"lineNumber": 31, "col_offset": 45, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 31, "col_offset": 49, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "label_store", "type": "Any"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "prob", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "candidate_window", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "Box", "type": "Any"}, {"lineNumber": 58, "col_offset": 53, "nodeName": "scene", "type": "Any"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "self", "type": "SemanticSegmentation"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "chip_size", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "filter_windows", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "rand", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "get_windows", "type": "Any"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "chip_size", "type": "Any"}, {"lineNumber": 78, "col_offset": 62, "nodeName": "stride", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "random", "type": "Any"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "extent", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "np", "type": "module"}]