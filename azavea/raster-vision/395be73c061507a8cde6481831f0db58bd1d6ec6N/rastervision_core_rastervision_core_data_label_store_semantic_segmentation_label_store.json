[{"lineNumber": 19, "col_offset": 0, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 22, "col_offset": 37, "nodeName": "LabelStore", "type": "Any"}, {"lineNumber": 19, "col_offset": 6, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "__name__", "type": "str"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "SemanticSegmentationLabels", "type": "Any"}, {"lineNumber": 131, "col_offset": 28, "nodeName": "SemanticSegmentationLabels", "type": "Any"}, {"lineNumber": 260, "col_offset": 57, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 330, "col_offset": 30, "nodeName": "SemanticSegmentationLabels", "type": "Any"}, {"lineNumber": 361, "col_offset": 57, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 19, "col_offset": 6, "nodeName": "logging", "type": "module"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "root_uri", "type": "str"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "uri", "type": "str"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "label_uri", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "score_uri", "type": "str"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "hits_uri", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "vector_outputs", "type": "Optional[Sequence[Any]]"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "vector_outputs", "type": "Optional[Sequence[Any]]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "extent", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "extent", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "crs_transformer", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "crs_transformer", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "tmp_dir", "type": "str"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "tmp_dir", "type": "str"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "smooth_output", "type": "bool"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "smooth_output", "type": "bool"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "smooth_as_uint8", "type": "bool"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "smooth_as_uint8", "type": "bool"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "rasterio_block_size", "type": "int"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "rasterio_block_size", "type": "int"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "class_transformer", "type": "None"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "save_as_rgb", "type": "bool"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "label_raster_source", "type": "None"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "score_raster_source", "type": "None"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "smooth_output", "type": "bool"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "components", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "components", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "extent", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "raw_labels", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "labels", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "extent", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "score_arr", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "score_arr", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "pixel_scores", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "pixel_hits", "type": "Any"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "hits_arr", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "labels", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "local_root", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "out_profile", "type": "Dict[str, Any]"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "score_raster_source", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "smooth_output", "type": "bool"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "vector_outputs", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "num_bands", "type": "int"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "windows", "type": "Any"}, {"lineNumber": 260, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "label_arr", "type": "numpy.ndarray"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 336, "col_offset": 15, "nodeName": "labels", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "window", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "clipped_window", "type": "Any"}, {"lineNumber": 354, "col_offset": 29, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "score_arr", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "score_arr", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "score_arr", "type": "Any"}, {"lineNumber": 366, "col_offset": 15, "nodeName": "score_arr", "type": "Any"}, {"lineNumber": 361, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "uri", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "uri", "type": "str"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "uri", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "class_transformer", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "file_exists", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "label_uri", "type": "str"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "label_raster_source", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "label_raster_source", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "score_raster_source", "type": "Any"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "label_raster_source", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "get_extent", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "get_raw_chip", "type": "Any"}, {"lineNumber": 121, "col_offset": 59, "nodeName": "extent", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "class_transformer", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "empty_labels", "type": "Callable[[], Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "score_raster_source", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "get_extent", "type": "Any"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "get_chip", "type": "Any"}, {"lineNumber": 143, "col_offset": 54, "nodeName": "extent", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "hits_arr", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "FileNotFoundError", "type": "Type[FileNotFoundError]"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "score_arr", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "score_arr", "type": "Any"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "empty_labels", "type": "Callable[[], Any]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "score_arr", "type": "Any"}, {"lineNumber": 159, "col_offset": 42, "nodeName": "hits_arr", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "SemanticSegmentationLabels", "type": "Any"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "get_local_path", "type": "Any"}, {"lineNumber": 173, "col_offset": 36, "nodeName": "root_uri", "type": "str"}, {"lineNumber": 173, "col_offset": 51, "nodeName": "tmp_dir", "type": "str"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "make_dir", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "local_root", "type": "Any"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "ymax", "type": "Any"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "xmax", "type": "Any"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "rasterio_block_size", "type": "int"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "rasterio_block_size", "type": "int"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "old_labels", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "old_labels", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "write_discrete_raster_output", "type": "Callable[[Dict[Any, Any], str, Any], None]"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "out_profile", "type": "Dict[str, Any]"}, {"lineNumber": 193, "col_offset": 71, "nodeName": "labels", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "sync_to_dir", "type": "Any"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "local_root", "type": "Any"}, {"lineNumber": 206, "col_offset": 32, "nodeName": "root_uri", "type": "str"}, {"lineNumber": 214, "col_offset": 28, "nodeName": "smooth_as_uint8", "type": "bool"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 214, "col_offset": 54, "nodeName": "float32", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "chip_sz", "type": "Optional[int]"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "windows", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 226, "col_offset": 58, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "hits_path", "type": "str"}, {"lineNumber": 235, "col_offset": 27, "nodeName": "pixel_hits", "type": "Any"}, {"lineNumber": 238, "col_offset": 31, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 238, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 239, "col_offset": 20, "nodeName": "SemanticSegmentationLabels", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 244, "col_offset": 18, "nodeName": "get_windows", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 51, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 260, "col_offset": 26, "nodeName": "SemanticSegmentationLabels", "type": "Any"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 264, "col_offset": 19, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 289, "col_offset": 43, "nodeName": "SemanticSegmentationLabels", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 296, "col_offset": 20, "nodeName": "_labels_to_full_label_arr", "type": "Callable[[Any], numpy.ndarray]"}, {"lineNumber": 296, "col_offset": 51, "nodeName": "labels", "type": "Any"}, {"lineNumber": 297, "col_offset": 55, "nodeName": "bar", "type": "click._termui_impl.ProgressBar[Any]"}, {"lineNumber": 332, "col_offset": 17, "nodeName": "build", "type": "Any"}, {"lineNumber": 338, "col_offset": 36, "nodeName": "DatasetReader", "type": "Any"}, {"lineNumber": 338, "col_offset": 63, "nodeName": "Box", "type": "Any"}, {"lineNumber": 339, "col_offset": 26, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 343, "col_offset": 17, "nodeName": "rasterio_format", "type": "Any"}, {"lineNumber": 355, "col_offset": 25, "nodeName": "intersection", "type": "Any"}, {"lineNumber": 355, "col_offset": 45, "nodeName": "extent", "type": "Any"}, {"lineNumber": 356, "col_offset": 11, "nodeName": "arr", "type": "Optional[numpy.ndarray]"}, {"lineNumber": 357, "col_offset": 19, "nodeName": "size", "type": "Any"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "arr", "type": "Any"}, {"lineNumber": 359, "col_offset": 15, "nodeName": "clipped_window", "type": "Any"}, {"lineNumber": 359, "col_offset": 31, "nodeName": "arr", "type": "Any"}, {"lineNumber": 361, "col_offset": 42, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 364, "col_offset": 20, "nodeName": "around", "type": "Any"}, {"lineNumber": 364, "col_offset": 30, "nodeName": "score_arr", "type": "Any"}, {"lineNumber": 365, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 365, "col_offset": 37, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "SegmentationClassTransformer", "type": "Any"}, {"lineNumber": 81, "col_offset": 66, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "RasterioSourceConfig", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "build", "type": "Any"}, {"lineNumber": 88, "col_offset": 49, "nodeName": "tmp_dir", "type": "str"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "file_exists", "type": "Any"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "score_uri", "type": "str"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "raster_source", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "extents_equal", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "bands_equal", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "self_dtype", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "dtypes_equal", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "label_raster_source", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "score_raster_source", "type": "Any"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "FileNotFoundError", "type": "Type[FileNotFoundError]"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "label_raster_source", "type": "Any"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "label_raster_source", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "raw_labels", "type": "Any"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "rgb_to_class", "type": "Any"}, {"lineNumber": 125, "col_offset": 60, "nodeName": "raw_labels", "type": "Any"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "extent", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 138, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "score_raster_source", "type": "Any"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "score_raster_source", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "score_arr", "type": "Any"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "load", "type": "Any"}, {"lineNumber": 147, "col_offset": 31, "nodeName": "hits_uri", "type": "str"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "hits_arr", "type": "Any"}, {"lineNumber": 154, "col_offset": 11, "nodeName": "score_arr", "type": "Any"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "astype", "type": "Any"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "float16", "type": "Any"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 173, "col_offset": 36, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 173, "col_offset": 51, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "extent", "type": "Any"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "extent", "type": "Any"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "get_affine_transform", "type": "Any"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "get_image_crs", "type": "Any"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "get_scores", "type": "Callable[[], Any]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "get_local_path", "type": "Any"}, {"lineNumber": 193, "col_offset": 40, "nodeName": "label_uri", "type": "str"}, {"lineNumber": 193, "col_offset": 56, "nodeName": "tmp_dir", "type": "str"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "write_smooth_raster_output", "type": "Callable[..., None]"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "out_profile", "type": "Dict[str, Any]"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "labels", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "write_vector_outputs", "type": "Callable[[Any], None]"}, {"lineNumber": 204, "col_offset": 38, "nodeName": "labels", "type": "Any"}, {"lineNumber": 206, "col_offset": 32, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 213, "col_offset": 44, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 214, "col_offset": 28, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 214, "col_offset": 54, "nodeName": "np", "type": "module"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "out_profile", "type": "Dict[Any, Any]"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 221, "col_offset": 23, "nodeName": "extent", "type": "Any"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "get_windows", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 226, "col_offset": 13, "nodeName": "open", "type": "Any"}, {"lineNumber": 226, "col_offset": 22, "nodeName": "scores_path", "type": "str"}, {"lineNumber": 227, "col_offset": 47, "nodeName": "bar", "type": "click._termui_impl.ProgressBar[Any]"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "window", "type": "Any"}, {"lineNumber": 228, "col_offset": 30, "nodeName": "bar", "type": "click._termui_impl.ProgressBar[Any]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 235, "col_offset": 27, "nodeName": "labels", "type": "Any"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "class_transformer", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "out_profile", "type": "Dict[Any, Any]"}, {"lineNumber": 242, "col_offset": 37, "nodeName": "num_bands", "type": "int"}, {"lineNumber": 242, "col_offset": 57, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 244, "col_offset": 18, "nodeName": "labels", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "open", "type": "Any"}, {"lineNumber": 247, "col_offset": 22, "nodeName": "path", "type": "str"}, {"lineNumber": 248, "col_offset": 47, "nodeName": "bar", "type": "click._termui_impl.ProgressBar[Any]"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "window", "type": "Any"}, {"lineNumber": 249, "col_offset": 30, "nodeName": "bar", "type": "click._termui_impl.ProgressBar[Any]"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "get_label_arr", "type": "Any"}, {"lineNumber": 263, "col_offset": 45, "nodeName": "extent", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 296, "col_offset": 20, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 297, "col_offset": 13, "nodeName": "progressbar", "type": "Callable"}, {"lineNumber": 297, "col_offset": 31, "nodeName": "vector_outputs", "type": "Any"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "vo", "type": "nothing"}, {"lineNumber": 298, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 298, "col_offset": 35, "nodeName": "bar", "type": "click._termui_impl.ProgressBar[Any]"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "uri", "type": "Any"}, {"lineNumber": 304, "col_offset": 16, "nodeName": "denoise_radius", "type": "nothing"}, {"lineNumber": 304, "col_offset": 33, "nodeName": "denoise", "type": "nothing"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "mode", "type": "nothing"}, {"lineNumber": 306, "col_offset": 16, "nodeName": "class_mask", "type": "Any"}, {"lineNumber": 332, "col_offset": 17, "nodeName": "SemanticSegmentationLabels", "type": "Any"}, {"lineNumber": 333, "col_offset": 19, "nodeName": "smooth_output", "type": "bool"}, {"lineNumber": 334, "col_offset": 19, "nodeName": "extent", "type": "Any"}, {"lineNumber": 338, "col_offset": 36, "nodeName": "rio", "type": "Any"}, {"lineNumber": 339, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 343, "col_offset": 17, "nodeName": "window", "type": "Any"}, {"lineNumber": 344, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 344, "col_offset": 15, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "write_band", "type": "Any"}, {"lineNumber": 345, "col_offset": 34, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 347, "col_offset": 19, "nodeName": "band", "type": "Any"}, {"lineNumber": 347, "col_offset": 27, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 347, "col_offset": 37, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 353, "col_offset": 29, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 355, "col_offset": 25, "nodeName": "window", "type": "Any"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 357, "col_offset": 15, "nodeName": "w", "type": "Any"}, {"lineNumber": 357, "col_offset": 19, "nodeName": "clipped_window", "type": "Any"}, {"lineNumber": 358, "col_offset": 18, "nodeName": "arr", "type": "Optional[numpy.ndarray]"}, {"lineNumber": 354, "col_offset": 35, "nodeName": "Box", "type": "Any"}, {"lineNumber": 361, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 364, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 364, "col_offset": 45, "nodeName": "score_arr", "type": "Any"}, {"lineNumber": 365, "col_offset": 20, "nodeName": "score_arr", "type": "Any"}, {"lineNumber": 365, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "RasterioSourceConfig", "type": "Any"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "build", "type": "Any"}, {"lineNumber": 93, "col_offset": 42, "nodeName": "tmp_dir", "type": "str"}, {"lineNumber": 94, "col_offset": 62, "nodeName": "extent", "type": "Any"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "num_channels", "type": "Any"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "smooth_as_uint8", "type": "bool"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 96, "col_offset": 67, "nodeName": "float32", "type": "Any"}, {"lineNumber": 97, "col_offset": 60, "nodeName": "self_dtype", "type": "Any"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "extents_equal", "type": "Any"}, {"lineNumber": 99, "col_offset": 37, "nodeName": "bands_equal", "type": "Any"}, {"lineNumber": 99, "col_offset": 53, "nodeName": "dtypes_equal", "type": "Any"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "score_raster_source", "type": "Any"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "raster_source", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "components", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "components", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "class_transformer", "type": "Any"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 31, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "warn", "type": "Callable[..., None]"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "ones", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "score_arr", "type": "Any"}, {"lineNumber": 155, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "crs_transformer", "type": "Any"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "crs_transformer", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 193, "col_offset": 40, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 193, "col_offset": 56, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "get_local_path", "type": "Any"}, {"lineNumber": 198, "col_offset": 31, "nodeName": "score_uri", "type": "str"}, {"lineNumber": 198, "col_offset": 47, "nodeName": "tmp_dir", "type": "str"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "get_local_path", "type": "Any"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "hits_uri", "type": "str"}, {"lineNumber": 199, "col_offset": 46, "nodeName": "tmp_dir", "type": "str"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "rasterio_block_size", "type": "int"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 213, "col_offset": 53, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "labels", "type": "Any"}, {"lineNumber": 221, "col_offset": 23, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "labels", "type": "Any"}, {"lineNumber": 223, "col_offset": 49, "nodeName": "chip_sz", "type": "Optional[int]"}, {"lineNumber": 226, "col_offset": 13, "nodeName": "rio", "type": "Any"}, {"lineNumber": 226, "col_offset": 42, "nodeName": "out_profile", "type": "Dict[Any, Any]"}, {"lineNumber": 227, "col_offset": 17, "nodeName": "progressbar", "type": "Callable"}, {"lineNumber": 227, "col_offset": 35, "nodeName": "windows", "type": "Any"}, {"lineNumber": 230, "col_offset": 20, "nodeName": "score_arr", "type": "Any"}, {"lineNumber": 231, "col_offset": 23, "nodeName": "smooth_as_uint8", "type": "bool"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 242, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 247, "col_offset": 13, "nodeName": "rio", "type": "Any"}, {"lineNumber": 247, "col_offset": 35, "nodeName": "out_profile", "type": "Dict[Any, Any]"}, {"lineNumber": 248, "col_offset": 17, "nodeName": "progressbar", "type": "Callable"}, {"lineNumber": 248, "col_offset": 35, "nodeName": "windows", "type": "Any"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "labels", "type": "Any"}, {"lineNumber": 263, "col_offset": 45, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 297, "col_offset": 13, "nodeName": "click", "type": "module"}, {"lineNumber": 297, "col_offset": 31, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 299, "col_offset": 19, "nodeName": "uri", "type": "nothing"}, {"lineNumber": 303, "col_offset": 22, "nodeName": "get_local_path", "type": "Any"}, {"lineNumber": 303, "col_offset": 37, "nodeName": "uri", "type": "nothing"}, {"lineNumber": 303, "col_offset": 45, "nodeName": "tmp_dir", "type": "str"}, {"lineNumber": 304, "col_offset": 33, "nodeName": "vo", "type": "nothing"}, {"lineNumber": 305, "col_offset": 23, "nodeName": "get_mode", "type": "nothing"}, {"lineNumber": 306, "col_offset": 30, "nodeName": "astype", "type": "Any"}, {"lineNumber": 306, "col_offset": 63, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 311, "col_offset": 19, "nodeName": "denoise_radius", "type": "nothing"}, {"lineNumber": 312, "col_offset": 20, "nodeName": "class_mask", "type": "Any"}, {"lineNumber": 314, "col_offset": 19, "nodeName": "mode", "type": "nothing"}, {"lineNumber": 315, "col_offset": 20, "nodeName": "geojson", "type": "Any"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "str_to_file", "type": "Any"}, {"lineNumber": 327, "col_offset": 28, "nodeName": "geojson", "type": "Any"}, {"lineNumber": 327, "col_offset": 37, "nodeName": "uri", "type": "Any"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "upload_or_copy", "type": "Any"}, {"lineNumber": 328, "col_offset": 31, "nodeName": "uri", "type": "Any"}, {"lineNumber": 328, "col_offset": 36, "nodeName": "uri", "type": "nothing"}, {"lineNumber": 333, "col_offset": 19, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 334, "col_offset": 19, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 335, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 335, "col_offset": 28, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 344, "col_offset": 15, "nodeName": "arr", "type": "numpy.ndarray"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 345, "col_offset": 46, "nodeName": "window", "type": "Any"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "write_band", "type": "Any"}, {"lineNumber": 348, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 348, "col_offset": 38, "nodeName": "band", "type": "Any"}, {"lineNumber": 353, "col_offset": 38, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 354, "col_offset": 40, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "label_uri", "type": "str"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 94, "col_offset": 32, "nodeName": "get_extent", "type": "Any"}, {"lineNumber": 94, "col_offset": 62, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "raster_source", "type": "Any"}, {"lineNumber": 95, "col_offset": 60, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 95, "col_offset": 64, "nodeName": "class_config", "type": "Any"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 96, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "get_dtype", "type": "Any"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 151, "col_offset": 59, "nodeName": "uint8", "type": "Any"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 198, "col_offset": 31, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 198, "col_offset": 47, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 199, "col_offset": 46, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 227, "col_offset": 17, "nodeName": "click", "type": "module"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "window", "type": "Any"}, {"lineNumber": 229, "col_offset": 28, "nodeName": "_", "type": "Optional[numpy.ndarray]"}, {"lineNumber": 229, "col_offset": 32, "nodeName": "_clip_to_extent", "type": "Callable[..., Tuple[Any, Optional[numpy.ndarray]]]"}, {"lineNumber": 229, "col_offset": 53, "nodeName": "extent", "type": "Any"}, {"lineNumber": 229, "col_offset": 66, "nodeName": "window", "type": "Any"}, {"lineNumber": 230, "col_offset": 32, "nodeName": "get_score_arr", "type": "Any"}, {"lineNumber": 230, "col_offset": 53, "nodeName": "window", "type": "Any"}, {"lineNumber": 231, "col_offset": 23, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 232, "col_offset": 24, "nodeName": "score_arr", "type": "numpy.ndarray"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "_write_array", "type": "Callable[[Any, Any, numpy.ndarray], None]"}, {"lineNumber": 233, "col_offset": 38, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 233, "col_offset": 47, "nodeName": "window", "type": "Any"}, {"lineNumber": 233, "col_offset": 55, "nodeName": "score_arr", "type": "Any"}, {"lineNumber": 248, "col_offset": 17, "nodeName": "click", "type": "module"}, {"lineNumber": 250, "col_offset": 32, "nodeName": "get_label_arr", "type": "Any"}, {"lineNumber": 250, "col_offset": 53, "nodeName": "window", "type": "Any"}, {"lineNumber": 251, "col_offset": 20, "nodeName": "window", "type": "Any"}, {"lineNumber": 251, "col_offset": 28, "nodeName": "label_arr", "type": "Optional[numpy.ndarray]"}, {"lineNumber": 251, "col_offset": 40, "nodeName": "_clip_to_extent", "type": "Callable[..., Tuple[Any, Optional[numpy.ndarray]]]"}, {"lineNumber": 252, "col_offset": 24, "nodeName": "extent", "type": "Any"}, {"lineNumber": 252, "col_offset": 37, "nodeName": "window", "type": "Any"}, {"lineNumber": 252, "col_offset": 45, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "class_transformer", "type": "Any"}, {"lineNumber": 254, "col_offset": 24, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 256, "col_offset": 24, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 257, "col_offset": 20, "nodeName": "_write_array", "type": "Callable[[Any, Any, numpy.ndarray], None]"}, {"lineNumber": 257, "col_offset": 38, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 257, "col_offset": 47, "nodeName": "window", "type": "Any"}, {"lineNumber": 257, "col_offset": 55, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 299, "col_offset": 19, "nodeName": "vo", "type": "nothing"}, {"lineNumber": 300, "col_offset": 20, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 303, "col_offset": 37, "nodeName": "vo", "type": "nothing"}, {"lineNumber": 303, "col_offset": 45, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 305, "col_offset": 23, "nodeName": "vo", "type": "nothing"}, {"lineNumber": 306, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 309, "col_offset": 27, "nodeName": "pixel_to_map", "type": "Any"}, {"lineNumber": 312, "col_offset": 33, "nodeName": "denoise", "type": "Any"}, {"lineNumber": 312, "col_offset": 49, "nodeName": "class_mask", "type": "Any"}, {"lineNumber": 312, "col_offset": 61, "nodeName": "denoise_radius", "type": "nothing"}, {"lineNumber": 315, "col_offset": 30, "nodeName": "geojson_from_mask", "type": "Any"}, {"lineNumber": 323, "col_offset": 21, "nodeName": "mode", "type": "nothing"}, {"lineNumber": 324, "col_offset": 20, "nodeName": "geojson", "type": "Any"}, {"lineNumber": 328, "col_offset": 36, "nodeName": "vo", "type": "nothing"}, {"lineNumber": 335, "col_offset": 28, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 348, "col_offset": 51, "nodeName": "window", "type": "Any"}, {"lineNumber": 353, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 358, "col_offset": 23, "nodeName": "h", "type": "Any"}, {"lineNumber": 358, "col_offset": 27, "nodeName": "w", "type": "Any"}, {"lineNumber": 354, "col_offset": 49, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "score_uri", "type": "str"}, {"lineNumber": 94, "col_offset": 32, "nodeName": "raster_source", "type": "Any"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "raster_source", "type": "Any"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "score_arr", "type": "Any"}, {"lineNumber": 151, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 32, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 229, "col_offset": 53, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 230, "col_offset": 32, "nodeName": "labels", "type": "Any"}, {"lineNumber": 232, "col_offset": 36, "nodeName": "_scores_to_uint8", "type": "Callable[[numpy.ndarray], numpy.ndarray]"}, {"lineNumber": 232, "col_offset": 58, "nodeName": "score_arr", "type": "Any"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 250, "col_offset": 32, "nodeName": "labels", "type": "Any"}, {"lineNumber": 251, "col_offset": 40, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 252, "col_offset": 24, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 253, "col_offset": 23, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 254, "col_offset": 36, "nodeName": "class_to_rgb", "type": "Any"}, {"lineNumber": 255, "col_offset": 28, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 256, "col_offset": 36, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 257, "col_offset": 20, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 300, "col_offset": 20, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 306, "col_offset": 30, "nodeName": "label_arr", "type": "numpy.ndarray"}, {"lineNumber": 306, "col_offset": 43, "nodeName": "class_id", "type": "nothing"}, {"lineNumber": 309, "col_offset": 27, "nodeName": "crs_transformer", "type": "Any"}, {"lineNumber": 309, "col_offset": 62, "nodeName": "x", "type": "Any"}, {"lineNumber": 309, "col_offset": 65, "nodeName": "y", "type": "Any"}, {"lineNumber": 312, "col_offset": 33, "nodeName": "denoise", "type": "Any"}, {"lineNumber": 315, "col_offset": 30, "nodeName": "vectorification", "type": "Any"}, {"lineNumber": 316, "col_offset": 29, "nodeName": "class_mask", "type": "Any"}, {"lineNumber": 317, "col_offset": 34, "nodeName": "transform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 318, "col_offset": 29, "nodeName": "mode", "type": "nothing"}, {"lineNumber": 319, "col_offset": 41, "nodeName": "min_aspect_ratio", "type": "nothing"}, {"lineNumber": 320, "col_offset": 33, "nodeName": "min_area", "type": "nothing"}, {"lineNumber": 321, "col_offset": 37, "nodeName": "element_width_factor", "type": "nothing"}, {"lineNumber": 322, "col_offset": 34, "nodeName": "element_thickness", "type": "nothing"}, {"lineNumber": 324, "col_offset": 30, "nodeName": "geojson_from_mask", "type": "Any"}, {"lineNumber": 354, "col_offset": 49, "nodeName": "np", "type": "module"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 232, "col_offset": 36, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 254, "col_offset": 36, "nodeName": "class_transformer", "type": "Any"}, {"lineNumber": 256, "col_offset": 36, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 306, "col_offset": 43, "nodeName": "vo", "type": "nothing"}, {"lineNumber": 309, "col_offset": 27, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}, {"lineNumber": 319, "col_offset": 41, "nodeName": "vo", "type": "nothing"}, {"lineNumber": 320, "col_offset": 33, "nodeName": "vo", "type": "nothing"}, {"lineNumber": 321, "col_offset": 37, "nodeName": "vo", "type": "nothing"}, {"lineNumber": 322, "col_offset": 34, "nodeName": "vo", "type": "nothing"}, {"lineNumber": 324, "col_offset": 30, "nodeName": "vectorification", "type": "Any"}, {"lineNumber": 325, "col_offset": 29, "nodeName": "class_mask", "type": "Any"}, {"lineNumber": 325, "col_offset": 51, "nodeName": "transform", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 325, "col_offset": 67, "nodeName": "mode", "type": "nothing"}, {"lineNumber": 254, "col_offset": 36, "nodeName": "self", "type": "SemanticSegmentationLabelStore"}]