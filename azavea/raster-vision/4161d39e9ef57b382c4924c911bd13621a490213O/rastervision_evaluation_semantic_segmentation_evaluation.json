[{"lineNumber": 8, "col_offset": 0, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 11, "col_offset": 37, "nodeName": "ClassificationEvaluation", "type": "Any"}, {"lineNumber": 8, "col_offset": 6, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 8, "col_offset": 24, "nodeName": "__name__", "type": "str"}, {"lineNumber": 8, "col_offset": 6, "nodeName": "logging", "type": "module"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "class_map", "type": "Any"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "class_map", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "ground_truth", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "ground_truth_labels", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "prediction_labels", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "evaluation_items", "type": "List[Any]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationEvaluation"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "geometries_from_geojson", "type": "Any"}, {"lineNumber": 23, "col_offset": 63, "nodeName": "gt_filename", "type": "Any"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "geometries_from_geojson", "type": "Any"}, {"lineNumber": 24, "col_offset": 62, "nodeName": "pred_filename", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "results", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "true_positives", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "false_positives", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "false_negatives", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "recall", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "count_error", "type": "int"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "gt_count", "type": "int"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "class_name", "type": "str"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "to_array", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "to_array", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 67, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "get_keys", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "not_dont_care", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "gt", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "pred", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "not_gt", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "not_pred", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "true_positives", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "false_positives", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "false_negatives", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "recall", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "f1", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "count_error", "type": "int"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "gt_count", "type": "int"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "compute_avg", "type": "Any"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "vectorification", "type": "Any"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "vectorification", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "spacenet", "type": "Any"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 27, "col_offset": 50, "nodeName": "ground_truth", "type": "Any"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "results", "type": "Any"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "results", "type": "Any"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "results", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "f1", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "f1", "type": "float"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "ground_truth", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 41, "col_offset": 44, "nodeName": "mode", "type": "Any"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "ClassEvaluationItem", "type": "Any"}, {"lineNumber": 43, "col_offset": 50, "nodeName": "precision", "type": "Any"}, {"lineNumber": 43, "col_offset": 61, "nodeName": "recall", "type": "Any"}, {"lineNumber": 43, "col_offset": 69, "nodeName": "f1", "type": "Any"}, {"lineNumber": 44, "col_offset": 50, "nodeName": "count_error", "type": "int"}, {"lineNumber": 44, "col_offset": 63, "nodeName": "gt_count", "type": "int"}, {"lineNumber": 45, "col_offset": 61, "nodeName": "class_name", "type": "str"}, {"lineNumber": 50, "col_offset": 53, "nodeName": "evaluation_item", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "compute_avg", "type": "Any"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "ground_truth_labels", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "prediction_labels", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "log", "type": "logging.Logger"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "ground_truth_labels", "type": "Any"}, {"lineNumber": 67, "col_offset": 40, "nodeName": "prediction_labels", "type": "Any"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "class_map", "type": "Any"}, {"lineNumber": 74, "col_offset": 29, "nodeName": "ground_truth_labels", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "ground_truth_labels", "type": "Any"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "prediction_labels", "type": "Any"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "ground_truth_labels", "type": "Any"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "prediction_labels", "type": "Any"}, {"lineNumber": 78, "col_offset": 45, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "sum", "type": "Any"}, {"lineNumber": 81, "col_offset": 45, "nodeName": "sum", "type": "Any"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "sum", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "isnan", "type": "Callable[[SupportsFloat], bool]"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "precision", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "precision", "type": "None"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "precision", "type": "float"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "isnan", "type": "Callable[[SupportsFloat], bool]"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "recall", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "recall", "type": "None"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "recall", "type": "float"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "isnan", "type": "Callable[[SupportsFloat], bool]"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "f1", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "f1", "type": "None"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "f1", "type": "float"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "ClassEvaluationItem", "type": "Any"}, {"lineNumber": 105, "col_offset": 50, "nodeName": "precision", "type": "Optional[float]"}, {"lineNumber": 105, "col_offset": 61, "nodeName": "recall", "type": "Optional[float]"}, {"lineNumber": 105, "col_offset": 69, "nodeName": "f1", "type": "Optional[float]"}, {"lineNumber": 106, "col_offset": 50, "nodeName": "count_error", "type": "int"}, {"lineNumber": 106, "col_offset": 63, "nodeName": "gt_count", "type": "int"}, {"lineNumber": 107, "col_offset": 50, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 107, "col_offset": 60, "nodeName": "class_name", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "evaluation_item", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 111, "col_offset": 43, "nodeName": "evaluation_items", "type": "List[Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "SemanticSegmentationEvaluation"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "ground_truth", "type": "Any"}, {"lineNumber": 26, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 26, "col_offset": 41, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "score", "type": "Any"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 32, "col_offset": 30, "nodeName": "true_positives", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "true_positives", "type": "Any"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "false_positives", "type": "Any"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "true_positives", "type": "Any"}, {"lineNumber": 34, "col_offset": 46, "nodeName": "true_positives", "type": "Any"}, {"lineNumber": 34, "col_offset": 63, "nodeName": "false_negatives", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "precision", "type": "Any"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "recall", "type": "Any"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "false_positives", "type": "Any"}, {"lineNumber": 39, "col_offset": 48, "nodeName": "false_negatives", "type": "Any"}, {"lineNumber": 45, "col_offset": 51, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "self", "type": "SemanticSegmentationEvaluation"}, {"lineNumber": 48, "col_offset": 55, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "class_to_eval_item", "type": "Dict[Any, Any]"}, {"lineNumber": 49, "col_offset": 45, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "class_to_eval_item", "type": "Dict[Any, Any]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "SemanticSegmentationEvaluation"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "ground_truth_labels", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "prediction_labels", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "self", "type": "SemanticSegmentationEvaluation"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "true_positives", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "true_positives", "type": "Any"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "false_positives", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "true_positives", "type": "Any"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "true_positives", "type": "Any"}, {"lineNumber": 86, "col_offset": 63, "nodeName": "false_negatives", "type": "Any"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "precision", "type": "Any"}, {"lineNumber": 87, "col_offset": 57, "nodeName": "recall", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "false_positives", "type": "Any"}, {"lineNumber": 88, "col_offset": 48, "nodeName": "false_negatives", "type": "Any"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "get_by_id", "type": "Any"}, {"lineNumber": 90, "col_offset": 50, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "math", "type": "module"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "precision", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "math", "type": "module"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "recall", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "math", "type": "module"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "f1", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "evaluation_items", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "get_keys", "type": "Any"}, {"lineNumber": 36, "col_offset": 49, "nodeName": "precision", "type": "Any"}, {"lineNumber": 36, "col_offset": 61, "nodeName": "recall", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "self", "type": "SemanticSegmentationEvaluation"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "self", "type": "SemanticSegmentationEvaluation"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "gt", "type": "Any"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "pred", "type": "Any"}, {"lineNumber": 81, "col_offset": 47, "nodeName": "not_dont_care", "type": "Any"}, {"lineNumber": 82, "col_offset": 47, "nodeName": "not_dont_care", "type": "Any"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "precision", "type": "Any"}, {"lineNumber": 87, "col_offset": 34, "nodeName": "recall", "type": "Any"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "gt", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "class_map", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "class_map", "type": "Any"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "precision", "type": "Any"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "recall", "type": "Any"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "class_id", "type": "Any"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "not_gt", "type": "Any"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "pred", "type": "Any"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "gt", "type": "Any"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "not_pred", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "self", "type": "SemanticSegmentationEvaluation"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "self", "type": "SemanticSegmentationEvaluation"}]