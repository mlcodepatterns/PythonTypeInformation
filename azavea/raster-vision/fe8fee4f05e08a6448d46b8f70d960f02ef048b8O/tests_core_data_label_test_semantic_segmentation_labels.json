[{"lineNumber": 9, "col_offset": 37, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "test_get", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "test_get_with_aoi", "type": "Callable[[Any], Any]"}, {"lineNumber": 9, "col_offset": 37, "nodeName": "unittest", "type": "module"}, {"lineNumber": 35, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "label_arr0", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "label_arr1", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "null_class_id", "type": "int"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "aoi_polygons", "type": "List[Any]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "exp_label_arr", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 12, "col_offset": 26, "nodeName": "choice", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 13, "col_offset": 26, "nodeName": "choice", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "SemanticSegmentationLabels", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "set_label_arr", "type": "Any"}, {"lineNumber": 15, "col_offset": 51, "nodeName": "label_arr0", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "set_label_arr", "type": "Any"}, {"lineNumber": 16, "col_offset": 51, "nodeName": "label_arr1", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 20, "col_offset": 56, "nodeName": "label_arr0", "type": "Any"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "full", "type": "Any"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 26, "col_offset": 55, "nodeName": "null_class_id", "type": "int"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "exp_label_arr", "type": "Any"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "label_arr1", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "filter_by_aoi", "type": "Any"}, {"lineNumber": 29, "col_offset": 43, "nodeName": "aoi_polygons", "type": "List[Any]"}, {"lineNumber": 29, "col_offset": 57, "nodeName": "null_class_id", "type": "int"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "get_label_arr", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 31, "col_offset": 38, "nodeName": "label_arr", "type": "Any"}, {"lineNumber": 31, "col_offset": 49, "nodeName": "exp_label_arr", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 11, "col_offset": 24, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 11, "col_offset": 51, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 12, "col_offset": 26, "nodeName": "random", "type": "Any"}, {"lineNumber": 13, "col_offset": 26, "nodeName": "random", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 15, "col_offset": 34, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 15, "col_offset": 51, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "labels", "type": "Any"}, {"lineNumber": 16, "col_offset": 34, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 16, "col_offset": 51, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "get_label_arr", "type": "Any"}, {"lineNumber": 20, "col_offset": 56, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "to_shapely", "type": "Any"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "label_arr1", "type": "Any"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "labels", "type": "Any"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "labels", "type": "Any"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "window_to_label_arr", "type": "Any"}, {"lineNumber": 11, "col_offset": 24, "nodeName": "Box", "type": "Any"}, {"lineNumber": 11, "col_offset": 51, "nodeName": "Box", "type": "Any"}, {"lineNumber": 12, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 13, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 15, "col_offset": 34, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 16, "col_offset": 34, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 20, "col_offset": 38, "nodeName": "windows", "type": "List[Any]"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "labels", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 20, "col_offset": 38, "nodeName": "self", "type": "TestSemanticSegmentationLabels"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "make_square", "type": "Any"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "Box", "type": "Any"}]