[{"lineNumber": 14, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "test_s3", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "test_local", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "test_wrong_s3", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "test_wrong_local", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "write_config_file", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "test_valid", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "test_bogus_field", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "test_bogus_value", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "test_invalid_json", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 124, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "mock_s3", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "file_name", "type": "str"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "temp_dir", "type": "tempfile.TemporaryDirectory"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "file_contents", "type": "str"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "s3", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "bucket_name", "type": "str"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "s3_path", "type": "str"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "str", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "str", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "wrong_path", "type": "str"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "wrong_path", "type": "str"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "file_name", "type": "str"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "temp_dir", "type": "tempfile.TemporaryDirectory"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "file_contents", "type": "str"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "ml_config", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "config", "type": "Dict[str, str]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "mock_s3", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "TemporaryDirectory", "type": "Type[tempfile.TemporaryDirectory]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 22, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 22, "col_offset": 58, "nodeName": "file_name", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 24, "col_offset": 42, "nodeName": "myfile", "type": "file"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "client", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "create_bucket", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 31, "col_offset": 43, "nodeName": "bucket_name", "type": "str"}, {"lineNumber": 31, "col_offset": 61, "nodeName": "file_name", "type": "str"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "upload_file", "type": "Any"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 32, "col_offset": 44, "nodeName": "bucket_name", "type": "str"}, {"lineNumber": 32, "col_offset": 62, "nodeName": "file_name", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "cleanup", "type": "Callable[[], None]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "stop", "type": "Any"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "file_to_str", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "s3_path", "type": "str"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "str", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "file_contents", "type": "str"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "file_to_str", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "str", "type": "Any"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "file_contents", "type": "str"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "bucket_name", "type": "str"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "TemporaryDirectory", "type": "Type[tempfile.TemporaryDirectory]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 61, "col_offset": 58, "nodeName": "file_name", "type": "str"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "cleanup", "type": "Callable[[], None]"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "config", "type": "Dict[str, Union[str, List[Dict[str, Union[int, str]]], int]]"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "myfile", "type": "file"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "write_config_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "config", "type": "Dict[str, Union[str, List[Dict[str, Union[int, str]]]]]"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "load_json_config", "type": "Any"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "task", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "backend", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "id", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "write_config_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "config", "type": "Dict[str, Union[str, List[Dict[str, Union[int, str]]], int]]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "write_config_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "config", "type": "Dict[str, str]"}, {"lineNumber": 117, "col_offset": 42, "nodeName": "myfile", "type": "file"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "mock_s3", "type": "Any"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 22, "col_offset": 38, "nodeName": "temp_dir", "type": "tempfile.TemporaryDirectory"}, {"lineNumber": 22, "col_offset": 58, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "file_contents", "type": "str"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "boto3", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "s3", "type": "Any"}, {"lineNumber": 30, "col_offset": 37, "nodeName": "bucket_name", "type": "str"}, {"lineNumber": 31, "col_offset": 43, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 31, "col_offset": 61, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "s3", "type": "Any"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 32, "col_offset": 44, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 32, "col_offset": 62, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "temp_dir", "type": "tempfile.TemporaryDirectory"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "mock_s3", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "NotFoundException", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "file_to_str", "type": "Any"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "wrong_path", "type": "str"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "NotFoundException", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "file_to_str", "type": "Any"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "wrong_path", "type": "str"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "path", "type": "module"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "temp_dir", "type": "tempfile.TemporaryDirectory"}, {"lineNumber": 61, "col_offset": 58, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "temp_dir", "type": "tempfile.TemporaryDirectory"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "json", "type": "module"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "file_contents", "type": "str"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 81, "col_offset": 53, "nodeName": "MachineLearning", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "ml_config", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "Value", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "ml_config", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "Value", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "class_items", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "ProtobufParseException", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "load_json_config", "type": "Any"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "ProtobufParseException", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "load_json_config", "type": "Any"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "invalid_json_str", "type": "str"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "ProtobufParseException", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "load_json_config", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 22, "col_offset": 38, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "myfile", "type": "file"}, {"lineNumber": 25, "col_offset": 25, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 30, "col_offset": 37, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "self", "type": "TestFileToStr"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "os", "type": "module"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "myfile", "type": "file"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "Backend", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "Task", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "class_items", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "class_items", "type": "Any"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "ml_config", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 103, "col_offset": 45, "nodeName": "MachineLearning", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 109, "col_offset": 45, "nodeName": "MachineLearning", "type": "Any"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "myfile", "type": "file"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "self", "type": "TestLoadJsonConfig"}, {"lineNumber": 121, "col_offset": 45, "nodeName": "MachineLearning", "type": "Any"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "MachineLearning", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "MachineLearning", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "ml_config", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "ml_config", "type": "Any"}]