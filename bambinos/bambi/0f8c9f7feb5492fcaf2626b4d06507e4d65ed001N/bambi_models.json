[{"lineNumber": 9, "col_offset": 12, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "intercept", "type": "Any"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "intercept", "type": "Any"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "intercept", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "contrasts", "type": "collections.OrderedDict[nothing, nothing]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "terms", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "y", "type": "None"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "built", "type": "bool"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "built", "type": "bool"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "term", "type": "Term"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "built", "type": "bool"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "variable", "type": "Union[List[str], str]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "label", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "categorical", "type": "bool"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "categorical", "type": "bool"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "random", "type": "bool"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "random", "type": "bool"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "split_by", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "split_by", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "drop_first", "type": "bool"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "drop_first", "type": "bool"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "prior", "type": "None"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "prior", "type": "None"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "levels", "type": "None"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 171, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "values", "type": "Any"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "values", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "backend", "type": "bambi.backends.PyMC3BackEnd"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "build", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "self", "type": "Model"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "built", "type": "bool"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "run", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "y", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "label", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "split_by", "type": "None"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "Term", "type": "Type[Term]"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "variable", "type": "str"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "label", "type": "None"}, {"lineNumber": 87, "col_offset": 43, "nodeName": "categorical", "type": "bool"}, {"lineNumber": 87, "col_offset": 56, "nodeName": "random", "type": "bool"}, {"lineNumber": 87, "col_offset": 64, "nodeName": "split_by", "type": "None"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "drop_first", "type": "bool"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "terms", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "Term"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "listify", "type": "Callable"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "variable", "type": "str"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "Term"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "label", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "Term"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "Term"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "Term"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "Term"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "Term"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "Term"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "Term"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "Term"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "_setup", "type": "Callable[[], Any]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "self", "type": "Term"}, {"lineNumber": 149, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 149, "col_offset": 28, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "categorical", "type": "bool"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "Term"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "Term"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "split_by", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "values", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "prior", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 21, "col_offset": 34, "nodeName": "columns", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "add_term", "type": "Callable[..., Any]"}, {"lineNumber": 30, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "lower", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "self", "type": "Model"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "PyMC3BackEnd", "type": "Type[bambi.backends.PyMC3BackEnd]"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "set_y", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "y", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "backend", "type": "bambi.backends.PyMC3BackEnd"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "self", "type": "Model"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "build", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "backend", "type": "bambi.backends.PyMC3BackEnd"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "self", "type": "Model"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "terms", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "self", "type": "Model"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "terms", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "self", "type": "Model"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "split_by", "type": "Any"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "terms", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "split_by", "type": "Term"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "split_by", "type": "Term"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "label", "type": "Any"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 129, "col_offset": 39, "nodeName": "variable", "type": "Union[List[str], str]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "Term"}, {"lineNumber": 149, "col_offset": 28, "nodeName": "pd", "type": "Any"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "copy", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "self", "type": "Term"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "n_cols", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "levels", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "mapping", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "levels", "type": "Any"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "levels", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "recoded", "type": "Any"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "values", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "self", "type": "Term"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "self", "type": "Term"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "self", "type": "Term"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "einsum", "type": "Any"}, {"lineNumber": 176, "col_offset": 50, "nodeName": "values", "type": "Any"}, {"lineNumber": 176, "col_offset": 63, "nodeName": "values", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "self", "type": "Term"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "label", "type": "str"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "prior", "type": "Dict[str, Union[str, Dict[str, Union[float, int, str, Dict[str, int]]]]]"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "random", "type": "bool"}, {"lineNumber": 21, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "self", "type": "Model"}, {"lineNumber": 30, "col_offset": 39, "nodeName": "self", "type": "Model"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "backend", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "Model"}, {"lineNumber": 48, "col_offset": 13, "nodeName": "self", "type": "Model"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "self", "type": "Model"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "Model"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "label", "type": "Any"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "self", "type": "Model"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "self", "type": "Model"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "terms", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "Term", "type": "Type[Term]"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "split_by", "type": "Any"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "term", "type": "Term"}, {"lineNumber": 129, "col_offset": 39, "nodeName": "self", "type": "Term"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "nunique", "type": "Any"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "self", "type": "Term"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "get_dummies", "type": "Any"}, {"lineNumber": 162, "col_offset": 38, "nodeName": "recoded", "type": "Any"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "convert_objects", "type": "Any"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 50, "nodeName": "self", "type": "Term"}, {"lineNumber": 176, "col_offset": 63, "nodeName": "split_by", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "self", "type": "Term"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "self", "type": "Term"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "default_priors", "type": "Dict[str, Dict[str, Union[str, Dict[str, Union[float, int, str, Dict[str, int]]]]]]"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "self", "type": "Term"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "prior", "type": "Dict[str, Union[str, Dict[str, Union[float, int, str, Dict[str, int]]]]]"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "prior", "type": "Dict[str, Union[str, Dict[str, Union[float, int, str, Dict[str, int]]]]]"}, {"lineNumber": 21, "col_offset": 34, "nodeName": "self", "type": "Model"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "self", "type": "Model"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "nunique", "type": "Any"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "self", "type": "Model"}, {"lineNumber": 82, "col_offset": 38, "nodeName": "split_by", "type": "Any"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "self", "type": "Model"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 155, "col_offset": 27, "nodeName": "stack", "type": "Any"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 159, "col_offset": 38, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 159, "col_offset": 42, "nodeName": "levels", "type": "Any"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "replace", "type": "Any"}, {"lineNumber": 161, "col_offset": 61, "nodeName": "mapping", "type": "collections.OrderedDict[Any, Any]"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "pd", "type": "Any"}, {"lineNumber": 162, "col_offset": 58, "nodeName": "drop_first", "type": "bool"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "variable", "type": "Union[Any, List[Any]]"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 176, "col_offset": 63, "nodeName": "self", "type": "Term"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "self", "type": "Term"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "default_priors", "type": "Dict[str, Dict[str, Union[str, Dict[str, Union[float, int, str, Dict[str, int]]]]]]"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "self", "type": "Term"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "default_priors", "type": "Dict[str, Dict[str, Union[str, Dict[str, Union[float, int, str, Dict[str, int]]]]]]"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "warnings", "type": "module"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "self", "type": "Model"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "variable", "type": "Union[List[Any], Any]"}, {"lineNumber": 155, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 159, "col_offset": 50, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 162, "col_offset": 58, "nodeName": "self", "type": "Term"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "self", "type": "Term"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "self", "type": "Term"}, {"lineNumber": 159, "col_offset": 55, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 159, "col_offset": 61, "nodeName": "n_cols", "type": "Any"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "loc", "type": "Any"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "self", "type": "Model"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 161, "col_offset": 38, "nodeName": "variable", "type": "Union[List[Any], Any]"}, {"lineNumber": 161, "col_offset": 38, "nodeName": "self", "type": "Term"}]