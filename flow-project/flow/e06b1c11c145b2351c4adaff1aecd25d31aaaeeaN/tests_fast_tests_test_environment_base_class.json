[{"lineNumber": 23, "col_offset": 0, "nodeName": "WHITE", "type": "Tuple[int, int, int]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "CYAN", "type": "Tuple[int, int, int]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "RED", "type": "Tuple[int, int, int]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "YELLOW", "type": "Tuple[int, int, int]"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "Env", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "action_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "observation_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "get_state", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "Env", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "action_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "observation_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "_apply_rl_actions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "test_shuffle", "type": "Callable[[Any], Any]"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "test_emission", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "test_apply_acceleration", "type": "Callable[[Any], Any]"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "test_apply_lane_change_errors", "type": "Callable[[Any], Any]"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "test_apply_lane_change_direction", "type": "Callable[[Any], Any]"}, {"lineNumber": 292, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "test_it_works", "type": "Callable[[Any], Any]"}, {"lineNumber": 316, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "test_it_works", "type": "Callable[[Any], Any]"}, {"lineNumber": 342, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 349, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "test_abstract_base_class", "type": "Callable[[Any], Any]"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "test_get_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "test__apply_rl_actions", "type": "Callable[[Any], Any]"}, {"lineNumber": 380, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "test_all", "type": "Callable[[Any], Any]"}, {"lineNumber": 422, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 425, "col_offset": 4, "nodeName": "test_num_spawned", "type": "Callable[[Any], Any]"}, {"lineNumber": 441, "col_offset": 13, "nodeName": "Env", "type": "Any"}, {"lineNumber": 444, "col_offset": 4, "nodeName": "get_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "action_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "observation_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "_apply_rl_actions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 459, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 465, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "test_clip_box_actions", "type": "Callable[[Any], Any]"}, {"lineNumber": 486, "col_offset": 15, "nodeName": "Env", "type": "Any"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "get_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "action_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 499, "col_offset": 4, "nodeName": "observation_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "_apply_rl_actions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 507, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 513, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 522, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 526, "col_offset": 4, "nodeName": "test_clip_tuple_actions", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 292, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 316, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 342, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 380, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 422, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 459, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 507, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 544, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "accel_step0", "type": "numpy.ndarray"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "expected_vel1", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "accel_step1", "type": "numpy.ndarray"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "expected_vel2", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "bad_directions", "type": "numpy.ndarray"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "max_lanes", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "direction0", "type": "numpy.ndarray"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "direction1", "type": "numpy.ndarray"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "warmup_step", "type": "int"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "t1", "type": "int"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "t2", "type": "Any"}, {"lineNumber": 310, "col_offset": 13, "nodeName": "time_counter", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "sims_per_step", "type": "int"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "t1", "type": "Any"}, {"lineNumber": 332, "col_offset": 13, "nodeName": "time_counter", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "t2", "type": "Any"}, {"lineNumber": 336, "col_offset": 13, "nodeName": "time_counter", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "render", "type": "bool"}, {"lineNumber": 413, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "actions", "type": "List[Union[float, int]]"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "clipped_actions", "type": "List[Union[float, int]]"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "_actions", "type": "Any"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "_actions", "type": "Any"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "Box", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "Box", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "Box", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "Box", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.ring.RingNetwork, Dict[Any, Any]]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestShuffle"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Any"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "before_reset", "type": "List[Any]"}, {"lineNumber": 112, "col_offset": 44, "nodeName": "after_reset", "type": "List[Any]"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "_", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "_", "type": "Dict[Any, Any]"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.ring.RingNetwork, Dict[Any, Any]]]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "emission_path", "type": "Any"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.ring.RingNetwork, Dict[Any, Any]]]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 189, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "apply_acceleration", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "simulation_step", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "clip", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 208, "col_offset": 45, "nodeName": "vel1", "type": "numpy.ndarray"}, {"lineNumber": 208, "col_offset": 51, "nodeName": "expected_vel1", "type": "Any"}, {"lineNumber": 211, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "apply_acceleration", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "simulation_step", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "clip", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 224, "col_offset": 45, "nodeName": "vel2", "type": "numpy.ndarray"}, {"lineNumber": 224, "col_offset": 51, "nodeName": "expected_vel2", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "apply_lane_change", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 251, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 257, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "apply_lane_change", "type": "Any"}, {"lineNumber": 258, "col_offset": 45, "nodeName": "ids", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "simulation_step", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 268, "col_offset": 26, "nodeName": "clip", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 271, "col_offset": 45, "nodeName": "lane1", "type": "numpy.ndarray"}, {"lineNumber": 271, "col_offset": 52, "nodeName": "expected_lane1", "type": "Any"}, {"lineNumber": 275, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "apply_lane_change", "type": "Any"}, {"lineNumber": 276, "col_offset": 45, "nodeName": "ids", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "simulation_step", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 286, "col_offset": 26, "nodeName": "clip", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 289, "col_offset": 45, "nodeName": "lane2", "type": "numpy.ndarray"}, {"lineNumber": 289, "col_offset": 52, "nodeName": "expected_lane2", "type": "Any"}, {"lineNumber": 301, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 303, "col_offset": 13, "nodeName": "_", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "_", "type": "Dict[Any, Any]"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.ring.RingNetwork, Dict[Any, Any]]]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 310, "col_offset": 13, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 313, "col_offset": 34, "nodeName": "warmup_step", "type": "int"}, {"lineNumber": 325, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 328, "col_offset": 13, "nodeName": "_", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 328, "col_offset": 16, "nodeName": "_", "type": "Dict[Any, Any]"}, {"lineNumber": 328, "col_offset": 20, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.ring.RingNetwork, Dict[Any, Any]]]"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 332, "col_offset": 13, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 336, "col_offset": 13, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 339, "col_offset": 34, "nodeName": "sims_per_step", "type": "int"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 350, "col_offset": 18, "nodeName": "network", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 350, "col_offset": 32, "nodeName": "_", "type": "Dict[Any, Any]"}, {"lineNumber": 350, "col_offset": 36, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.ring.RingNetwork, Dict[Any, Any]]]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 351, "col_offset": 26, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 352, "col_offset": 26, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 383, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "_", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 388, "col_offset": 11, "nodeName": "network", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 388, "col_offset": 20, "nodeName": "_", "type": "Dict[Any, Any]"}, {"lineNumber": 388, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.ring.RingNetwork, Dict[Any, Any]]]"}, {"lineNumber": 389, "col_offset": 14, "nodeName": "TestEnv", "type": "Type[flow.envs.test.TestEnv]"}, {"lineNumber": 389, "col_offset": 49, "nodeName": "network", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "set_observed", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 400, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "set_observed", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 413, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 426, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 432, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 435, "col_offset": 26, "nodeName": "FatalFlowError", "type": "Type[flow.utils.exceptions.FatalFlowError]"}, {"lineNumber": 436, "col_offset": 26, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.highway.HighwayNetwork, Dict[Any, Any]]]"}, {"lineNumber": 449, "col_offset": 15, "nodeName": "Box", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 466, "col_offset": 13, "nodeName": "network", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 466, "col_offset": 22, "nodeName": "_", "type": "Dict[Any, Any]"}, {"lineNumber": 466, "col_offset": 26, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.ring.RingNetwork, Dict[Any, Any]]]"}, {"lineNumber": 467, "col_offset": 21, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 468, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 469, "col_offset": 19, "nodeName": "BoxEnv", "type": "Type[BoxEnv]"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "self", "type": "TestClipBoxActions"}, {"lineNumber": 482, "col_offset": 19, "nodeName": "clip_actions", "type": "Any"}, {"lineNumber": 482, "col_offset": 41, "nodeName": "actions", "type": "List[Union[float, int]]"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 514, "col_offset": 13, "nodeName": "network", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 514, "col_offset": 22, "nodeName": "_", "type": "Dict[Any, Any]"}, {"lineNumber": 514, "col_offset": 26, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.ring.RingNetwork, Dict[Any, Any]]]"}, {"lineNumber": 515, "col_offset": 21, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 516, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 517, "col_offset": 19, "nodeName": "TupleEnv", "type": "Type[TupleEnv]"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "self", "type": "TestClipTupleActions"}, {"lineNumber": 538, "col_offset": 19, "nodeName": "clip_actions", "type": "Any"}, {"lineNumber": 538, "col_offset": 41, "nodeName": "actions", "type": "List[Union[List[int], List[Union[float, int]], int]]"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 545, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 35, "col_offset": 52, "nodeName": "float32", "type": "Any"}, {"lineNumber": 40, "col_offset": 52, "nodeName": "float32", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 52, "nodeName": "float32", "type": "Any"}, {"lineNumber": 58, "col_offset": 52, "nodeName": "float32", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "ids", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "ids", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestShuffle"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 126, "col_offset": 56, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 153, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 173, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 173, "col_offset": 46, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 173, "col_offset": 67, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 189, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 196, "col_offset": 54, "nodeName": "ids", "type": "Any"}, {"lineNumber": 196, "col_offset": 63, "nodeName": "accel_step0", "type": "numpy.ndarray"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "simulation", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 211, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 212, "col_offset": 54, "nodeName": "ids", "type": "Any"}, {"lineNumber": 212, "col_offset": 63, "nodeName": "accel_step1", "type": "numpy.ndarray"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "simulation", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 240, "col_offset": 20, "nodeName": "ids", "type": "Any"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "bad_directions", "type": "numpy.ndarray"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 251, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 257, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 258, "col_offset": 60, "nodeName": "direction0", "type": "numpy.ndarray"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "simulation", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 275, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 276, "col_offset": 60, "nodeName": "direction1", "type": "numpy.ndarray"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "simulation", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "warmup_step", "type": "int"}, {"lineNumber": 302, "col_offset": 56, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 303, "col_offset": 51, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "TestWarmUpSteps"}, {"lineNumber": 313, "col_offset": 25, "nodeName": "t2", "type": "Any"}, {"lineNumber": 313, "col_offset": 30, "nodeName": "t1", "type": "int"}, {"lineNumber": 326, "col_offset": 26, "nodeName": "sims_per_step", "type": "int"}, {"lineNumber": 327, "col_offset": 30, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 328, "col_offset": 51, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "TestSimsPerStep"}, {"lineNumber": 339, "col_offset": 25, "nodeName": "t2", "type": "Any"}, {"lineNumber": 339, "col_offset": 30, "nodeName": "t1", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 350, "col_offset": 18, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 356, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 356, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "Env", "type": "Any"}, {"lineNumber": 365, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 365, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "TestFailGetStateEnv", "type": "Type[TestFailGetStateEnv]"}, {"lineNumber": 374, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 374, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "TestFailRLActionsEnv", "type": "Type[TestFailRLActionsEnv]"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 388, "col_offset": 53, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 389, "col_offset": 22, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 389, "col_offset": 35, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 400, "col_offset": 22, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 401, "col_offset": 62, "nodeName": "YELLOW", "type": "Tuple[int, int, int]"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 413, "col_offset": 22, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 414, "col_offset": 15, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "self", "type": "TestNotEnoughVehicles"}, {"lineNumber": 437, "col_offset": 41, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 438, "col_offset": 35, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 449, "col_offset": 15, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 470, "col_offset": 23, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 471, "col_offset": 23, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 472, "col_offset": 21, "nodeName": "network", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "env", "type": "BoxEnv"}, {"lineNumber": 482, "col_offset": 19, "nodeName": "env", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "self", "type": "TestClipBoxActions"}, {"lineNumber": 483, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 494, "col_offset": 15, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 518, "col_offset": 23, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 519, "col_offset": 23, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 520, "col_offset": 20, "nodeName": "network", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "env", "type": "TupleEnv"}, {"lineNumber": 538, "col_offset": 19, "nodeName": "env", "type": "Any"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "self", "type": "TestClipTupleActions"}, {"lineNumber": 539, "col_offset": 26, "nodeName": "_actions", "type": "Any"}, {"lineNumber": 539, "col_offset": 39, "nodeName": "clipped_actions", "type": "List[Union[List[int], List[Union[float, int]], int]]"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "self", "type": "TestClipTupleActions"}, {"lineNumber": 540, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "self", "type": "TestClipTupleActions"}, {"lineNumber": 541, "col_offset": 26, "nodeName": "_actions", "type": "Any"}, {"lineNumber": 541, "col_offset": 39, "nodeName": "clipped_actions", "type": "List[Union[List[int], List[Union[float, int]], int]]"}, {"lineNumber": 35, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestShuffle"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestShuffle"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "env", "type": "Any"}, {"lineNumber": 163, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 164, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 165, "col_offset": 33, "nodeName": "SumoCarFollowingParams", "type": "Type[flow.core.params.SumoCarFollowingParams]"}, {"lineNumber": 167, "col_offset": 31, "nodeName": "SumoLaneChangeParams", "type": "Type[flow.core.params.SumoLaneChangeParams]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 189, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "get_speed", "type": "Any"}, {"lineNumber": 192, "col_offset": 42, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 192, "col_offset": 54, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 192, "col_offset": 64, "nodeName": "ids", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "ids", "type": "Any"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "vel0", "type": "numpy.ndarray"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "ids", "type": "Any"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "vel1", "type": "numpy.ndarray"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 251, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 253, "col_offset": 13, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 253, "col_offset": 41, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 253, "col_offset": 53, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 253, "col_offset": 63, "nodeName": "ids", "type": "Any"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "env", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 266, "col_offset": 26, "nodeName": "ids", "type": "Any"}, {"lineNumber": 268, "col_offset": 26, "nodeName": "lane0", "type": "numpy.ndarray"}, {"lineNumber": 269, "col_offset": 23, "nodeName": "max_lanes", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 284, "col_offset": 26, "nodeName": "ids", "type": "Any"}, {"lineNumber": 286, "col_offset": 26, "nodeName": "lane1", "type": "numpy.ndarray"}, {"lineNumber": 287, "col_offset": 23, "nodeName": "max_lanes", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 356, "col_offset": 13, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 357, "col_offset": 27, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 358, "col_offset": 27, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 359, "col_offset": 24, "nodeName": "network", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 365, "col_offset": 13, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 366, "col_offset": 43, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 367, "col_offset": 43, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 368, "col_offset": 40, "nodeName": "network", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 374, "col_offset": 13, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 375, "col_offset": 44, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 376, "col_offset": 44, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 377, "col_offset": 41, "nodeName": "network", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 386, "col_offset": 52, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 400, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "self", "type": "TestVehicleColoring"}, {"lineNumber": 401, "col_offset": 29, "nodeName": "get_color", "type": "Any"}, {"lineNumber": 401, "col_offset": 53, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 413, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 415, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 415, "col_offset": 66, "nodeName": "CYAN", "type": "Tuple[int, int, int]"}, {"lineNumber": 416, "col_offset": 17, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "self", "type": "TestClipBoxActions"}, {"lineNumber": 482, "col_offset": 19, "nodeName": "self", "type": "TestClipBoxActions"}, {"lineNumber": 495, "col_offset": 12, "nodeName": "Box", "type": "Any"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "Box", "type": "Any"}, {"lineNumber": 497, "col_offset": 12, "nodeName": "Discrete", "type": "Any"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "self", "type": "TestClipTupleActions"}, {"lineNumber": 538, "col_offset": 19, "nodeName": "self", "type": "TestClipTupleActions"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 189, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 206, "col_offset": 32, "nodeName": "accel_step0", "type": "numpy.ndarray"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 222, "col_offset": 32, "nodeName": "accel_step1", "type": "numpy.ndarray"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 251, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 253, "col_offset": 13, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 268, "col_offset": 34, "nodeName": "sign", "type": "Any"}, {"lineNumber": 268, "col_offset": 42, "nodeName": "direction0", "type": "numpy.ndarray"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 286, "col_offset": 34, "nodeName": "sign", "type": "Any"}, {"lineNumber": 286, "col_offset": 42, "nodeName": "direction1", "type": "numpy.ndarray"}, {"lineNumber": 357, "col_offset": 27, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 358, "col_offset": 27, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 359, "col_offset": 24, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 366, "col_offset": 43, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 367, "col_offset": 43, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 368, "col_offset": 40, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 375, "col_offset": 44, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 376, "col_offset": 44, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 377, "col_offset": 41, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 400, "col_offset": 22, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 401, "col_offset": 29, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 413, "col_offset": 22, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 415, "col_offset": 16, "nodeName": "self", "type": "TestVehicleColoring"}, {"lineNumber": 415, "col_offset": 33, "nodeName": "get_color", "type": "Any"}, {"lineNumber": 415, "col_offset": 57, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 417, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 417, "col_offset": 66, "nodeName": "RED", "type": "Tuple[int, int, int]"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 419, "col_offset": 66, "nodeName": "WHITE", "type": "Tuple[int, int, int]"}, {"lineNumber": 483, "col_offset": 25, "nodeName": "_actions", "type": "Any"}, {"lineNumber": 483, "col_offset": 37, "nodeName": "clipped_actions", "type": "List[Union[float, int]]"}, {"lineNumber": 495, "col_offset": 12, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 497, "col_offset": 12, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "self", "type": "TestShuffle"}, {"lineNumber": 189, "col_offset": 14, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 251, "col_offset": 14, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 253, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 268, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 286, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 401, "col_offset": 29, "nodeName": "k", "type": "Any"}, {"lineNumber": 415, "col_offset": 33, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 417, "col_offset": 16, "nodeName": "self", "type": "TestVehicleColoring"}, {"lineNumber": 417, "col_offset": 33, "nodeName": "get_color", "type": "Any"}, {"lineNumber": 417, "col_offset": 57, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "self", "type": "TestVehicleColoring"}, {"lineNumber": 419, "col_offset": 33, "nodeName": "get_color", "type": "Any"}, {"lineNumber": 419, "col_offset": 57, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 540, "col_offset": 25, "nodeName": "_actions", "type": "Any"}, {"lineNumber": 540, "col_offset": 40, "nodeName": "clipped_actions", "type": "List[Union[List[int], List[Union[float, int]], int]]"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "env", "type": "Any"}, {"lineNumber": 253, "col_offset": 13, "nodeName": "env", "type": "Any"}, {"lineNumber": 401, "col_offset": 29, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 415, "col_offset": 33, "nodeName": "k", "type": "Any"}, {"lineNumber": 417, "col_offset": 33, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 419, "col_offset": 33, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 192, "col_offset": 13, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 253, "col_offset": 13, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 415, "col_offset": 33, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 417, "col_offset": 33, "nodeName": "k", "type": "Any"}, {"lineNumber": 419, "col_offset": 33, "nodeName": "k", "type": "Any"}, {"lineNumber": 417, "col_offset": 33, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 419, "col_offset": 33, "nodeName": "env", "type": "flow.envs.test.TestEnv"}]