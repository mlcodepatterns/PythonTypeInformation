[{"lineNumber": 31, "col_offset": 0, "nodeName": "N_CPUS", "type": "int"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 11, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "init", "type": "Any"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 187, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "ray", "type": "Any"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "N_CPUS", "type": "int"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "HORIZON", "type": "int"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "agent_cls", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "HORIZON", "type": "int"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "flow_json", "type": "str"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "get_agent_class", "type": "Any"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "copy", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "make_create_env", "type": "Callable[..., Tuple[Callable[..., Any], Any]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "register_env", "type": "Any"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "env_name", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "create_env", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "PPOAgent", "type": "Any"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "num_runs", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "checkpoint_path", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 175, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "mkdir", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "shutil", "type": "module"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "_default_config", "type": "Any"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "json", "type": "module"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "FlowParamsEncoder", "type": "Type[flow.utils.rllib.FlowParamsEncoder]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 71, "col_offset": 54, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 72, "col_offset": 55, "nodeName": "version", "type": "Any"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "ppo", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "env_name", "type": "Any"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "config", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "train", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "save", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "bottleneck0", "type": "module"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "bottleneck1", "type": "module"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "bottleneck2", "type": "module"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "figureeight0", "type": "module"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "figureeight1", "type": "module"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 137, "col_offset": 27, "nodeName": "figureeight2", "type": "module"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "grid0", "type": "module"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "grid1", "type": "module"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 166, "col_offset": 27, "nodeName": "merge0", "type": "module"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 175, "col_offset": 27, "nodeName": "merge1", "type": "module"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "merge2", "type": "module"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "agent_cls", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "alg", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "alg", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 83, "col_offset": 56, "nodeName": "checkpoint_path", "type": "Any"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "path", "type": "module"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "os", "type": "module"}]