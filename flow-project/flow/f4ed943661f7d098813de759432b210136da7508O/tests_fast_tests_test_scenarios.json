[{"lineNumber": 189, "col_offset": 0, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 16, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 37, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 16, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 122, "col_offset": 37, "nodeName": "unittest", "type": "module"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 233, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "new_add", "type": "Dict[str, int]"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "additional_params", "type": "Dict[str, int]"}, {"lineNumber": 208, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "new_add", "type": "Dict[str, int]"}, {"lineNumber": 234, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestBottleneckScenario"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestFigure8Scenario"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGridScenario"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestHighwayScenario"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "TestLoopScenario"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TestTwoLoopsOneMergingScenario"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TestMergeScenario"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "self", "type": "TestMultiLoopScenario"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 208, "col_offset": 18, "nodeName": "additional_params", "type": "Dict[str, int]"}, {"lineNumber": 209, "col_offset": 20, "nodeName": "key", "type": "str"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "scenario_class", "type": "Type[flow.scenarios.bottleneck.BottleneckScenario]"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "BottleneckScenario", "type": "Type[flow.scenarios.bottleneck.BottleneckScenario]"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "Figure8Scenario", "type": "Type[flow.scenarios.figure_eight.Figure8Scenario]"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "SimpleGridScenario", "type": "Type[flow.scenarios.grid.SimpleGridScenario]"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "HighwayScenario", "type": "Type[flow.scenarios.highway.HighwayScenario]"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "LoopScenario", "type": "Type[flow.scenarios.loop.LoopScenario]"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "TwoLoopsOneMergingScenario", "type": "Type[flow.scenarios.loop_merge.TwoLoopsOneMergingScenario]"}, {"lineNumber": 151, "col_offset": 31, "nodeName": "MergeScenario", "type": "Type[flow.scenarios.merge.MergeScenario]"}, {"lineNumber": 172, "col_offset": 31, "nodeName": "MultiLoopScenario", "type": "Type[flow.scenarios.multi_loop.MultiLoopScenario]"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 215, "col_offset": 27, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 215, "col_offset": 55, "nodeName": "new_add", "type": "Dict[str, int]"}]