[{"lineNumber": 37, "col_offset": 0, "nodeName": "N_CPUS", "type": "int"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "test_bottleneck0", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 4, "nodeName": "test_bottleneck1", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "test_bottleneck2", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "test_figure_eight0", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "test_figure_eight1", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "test_figure_eight2", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "test_grid0", "type": "Callable[[Any], Any]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "test_grid1", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "test_merge0", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "test_merge1", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "test_merge2", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "test_parse_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "test_trpo_runner", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "init", "type": "Any"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 230, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "ray", "type": "Any"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "N_CPUS", "type": "int"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "HORIZON", "type": "int"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "agent_cls", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "HORIZON", "type": "int"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "flow_json", "type": "str"}, {"lineNumber": 75, "col_offset": 38, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "flags", "type": "argparse.Namespace"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "flags", "type": "argparse.Namespace"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "flags", "type": "argparse.Namespace"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "flags", "type": "argparse.Namespace"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "get_agent_class", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "copy", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "make_create_env", "type": "Callable[..., Tuple[Callable[..., Any], Any]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "register_env", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "env_name", "type": "Any"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "create_env", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "PPOAgent", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "num_runs", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "checkpoint_path", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "ray_runner", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 190, "col_offset": 27, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "parse_args", "type": "Callable[[Any], argparse.Namespace]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "benchmark_name", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "rollout_size", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "num_cpus", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "parse_args", "type": "Callable[[Any], argparse.Namespace]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "num_cpus", "type": "Any"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "parse_args", "type": "Callable[[Any], argparse.Namespace]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "rollout_size", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "parse_args", "type": "Callable[[Any], argparse.Namespace]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "num_steps", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "run_model", "type": "Callable[..., Any]"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "ensure_dir", "type": "Callable"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "save_model", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "model", "type": "Any"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "files", "type": "List[str]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 231, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "mkdir", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "shutil", "type": "module"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "_default_config", "type": "Any"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "json", "type": "module"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "FlowParamsEncoder", "type": "Type[flow.utils.rllib.FlowParamsEncoder]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 77, "col_offset": 54, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 78, "col_offset": 55, "nodeName": "version", "type": "Any"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "ppo", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "env_name", "type": "Any"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "config", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "train", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "save", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "bottleneck0", "type": "module"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "bottleneck1", "type": "module"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "bottleneck2", "type": "module"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "figureeight0", "type": "module"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "figureeight1", "type": "module"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "figureeight2", "type": "module"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "grid0", "type": "module"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "grid1", "type": "module"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "merge0", "type": "module"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "merge1", "type": "module"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 190, "col_offset": 27, "nodeName": "merge2", "type": "module"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "TestTRPORunner"}, {"lineNumber": 198, "col_offset": 25, "nodeName": "flags", "type": "argparse.Namespace"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "TestTRPORunner"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "flags", "type": "argparse.Namespace"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "TestTRPORunner"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "flags", "type": "argparse.Namespace"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "TestTRPORunner"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "flags", "type": "argparse.Namespace"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "TestTRPORunner"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "flags", "type": "argparse.Namespace"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "TestTRPORunner"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "flags", "type": "argparse.Namespace"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "TestTRPORunner"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "flags", "type": "argparse.Namespace"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "figureeight0", "type": "module"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "figureeight0", "type": "module"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "TestTRPORunner"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "shutil", "type": "module"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "agent_cls", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "alg", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "alg", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "self", "type": "TestBenchmarks"}, {"lineNumber": 222, "col_offset": 30, "nodeName": "f", "type": "str"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 89, "col_offset": 56, "nodeName": "checkpoint_path", "type": "Any"}, {"lineNumber": 222, "col_offset": 35, "nodeName": "listdir", "type": "Callable"}, {"lineNumber": 223, "col_offset": 27, "nodeName": "isfile", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "path", "type": "module"}, {"lineNumber": 223, "col_offset": 34, "nodeName": "join", "type": "Callable"}, {"lineNumber": 223, "col_offset": 61, "nodeName": "f", "type": "str"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "os", "type": "module"}]