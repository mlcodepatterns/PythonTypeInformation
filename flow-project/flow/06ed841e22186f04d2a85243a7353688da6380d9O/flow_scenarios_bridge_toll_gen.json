[{"lineNumber": 4, "col_offset": 22, "nodeName": "Generator", "type": "Type[flow.core.generator.Generator]"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "nodes", "type": "List[Dict[str, str]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "scaling", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "edges", "type": "List[Dict[str, str]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "scaling", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "conn", "type": "List[Dict[str, str]]"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "conn", "type": "List[Dict[str, str]]"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "rts", "type": "Dict[str, List[str]]"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "get", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "scaling", "type": "Any"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "get", "type": "Any"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "scaling", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "scaling", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 40, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 43, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 46, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 49, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 52, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 52, "col_offset": 58, "nodeName": "scaling", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 40, "col_offset": 60, "nodeName": "scaling", "type": "Any"}, {"lineNumber": 43, "col_offset": 60, "nodeName": "scaling", "type": "Any"}, {"lineNumber": 46, "col_offset": 60, "nodeName": "scaling", "type": "Any"}, {"lineNumber": 49, "col_offset": 60, "nodeName": "scaling", "type": "Any"}, {"lineNumber": 64, "col_offset": 58, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 64, "col_offset": 62, "nodeName": "i", "type": "int"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 67, "col_offset": 58, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 67, "col_offset": 62, "nodeName": "i", "type": "int"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 65, "col_offset": 40, "nodeName": "floor", "type": "Any"}, {"lineNumber": 68, "col_offset": 40, "nodeName": "floor", "type": "Any"}, {"lineNumber": 65, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "i", "type": "int"}, {"lineNumber": 68, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 49, "nodeName": "i", "type": "int"}]