[{"lineNumber": 9, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 9, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 123, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "traffic_lights", "type": "flow.core.traffic_lights.TrafficLights"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "traffic_lights", "type": "flow.core.traffic_lights.TrafficLights"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "traffic_lights", "type": "flow.core.traffic_lights.TrafficLights"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestUpdateGetState"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "TrafficLights", "type": "Type[flow.core.traffic_lights.TrafficLights]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "_step", "type": "Callable[[Any], Tuple[Any, Any, Any, Dict[str, Any]]]"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "get_state", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "TrafficLights", "type": "Type[flow.core.traffic_lights.TrafficLights]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "get_state", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "TrafficLights", "type": "Type[flow.core.traffic_lights.TrafficLights]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "set_state", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "get_state", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "set_state", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "get_state", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "traffic_lights", "type": "flow.core.traffic_lights.TrafficLights"}, {"lineNumber": 29, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 32, "col_offset": 60, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 33, "col_offset": 64, "nodeName": "traffic_lights", "type": "flow.core.traffic_lights.TrafficLights"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "traffic_lights", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestUpdateGetState"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "traffic_lights", "type": "flow.core.traffic_lights.TrafficLights"}, {"lineNumber": 50, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 53, "col_offset": 60, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 54, "col_offset": 64, "nodeName": "traffic_lights", "type": "flow.core.traffic_lights.TrafficLights"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "traffic_lights", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestUpdateGetState"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "traffic_lights", "type": "flow.core.traffic_lights.TrafficLights"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 80, "col_offset": 60, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 81, "col_offset": 64, "nodeName": "traffic_lights", "type": "flow.core.traffic_lights.TrafficLights"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "traffic_lights", "type": "Any"}, {"lineNumber": 95, "col_offset": 61, "nodeName": "env", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "traffic_lights", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "traffic_lights", "type": "Any"}, {"lineNumber": 111, "col_offset": 61, "nodeName": "env", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "traffic_lights", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "TestUpdateGetState"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestUpdateGetState"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestUpdateGetState"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestUpdateGetState"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestUpdateGetState"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 95, "col_offset": 61, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 111, "col_offset": 61, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "self", "type": "TestUpdateGetState"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "self", "type": "TestUpdateGetState"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "self", "type": "TestSetState"}]