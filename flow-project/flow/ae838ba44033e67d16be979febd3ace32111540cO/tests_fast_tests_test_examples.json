[{"lineNumber": 28, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 177, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.SumoExperiment"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.SumoExperiment"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.SumoExperiment"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.SumoExperiment"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.SumoExperiment"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.SumoExperiment"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.SumoExperiment"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.SumoExperiment"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.SumoExperiment"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "init", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "bottleneck_example", "type": "Callable[..., flow.core.experiment.SumoExperiment]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "run", "type": "Callable[..., Dict[str, List[Any]]]"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "figure_eight_example", "type": "Callable[..., flow.core.experiment.SumoExperiment]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "run", "type": "Callable[..., Dict[str, List[Any]]]"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "grid_example", "type": "Callable[..., flow.core.experiment.SumoExperiment]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "run", "type": "Callable[..., Dict[str, List[Any]]]"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "highway_example", "type": "Callable[..., flow.core.experiment.SumoExperiment]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "run", "type": "Callable[..., Dict[str, List[Any]]]"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "merge_example", "type": "Callable[..., flow.core.experiment.SumoExperiment]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "run", "type": "Callable[..., Dict[str, List[Any]]]"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "sugiyama_example", "type": "Callable[..., flow.core.experiment.SumoExperiment]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "run", "type": "Callable[..., Dict[str, List[Any]]]"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "loop_merge_example", "type": "Callable[..., flow.core.experiment.SumoExperiment]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "run", "type": "Callable[..., Dict[str, List[Any]]]"}, {"lineNumber": 103, "col_offset": 14, "nodeName": "bay_bridge_toll_example", "type": "Callable[..., flow.core.experiment.SumoExperiment]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "run", "type": "Callable[..., Dict[str, List[Any]]]"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "minicity_example", "type": "Callable[..., flow.core.experiment.SumoExperiment]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "run", "type": "Callable[..., Dict[str, List[Any]]]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "env_name", "type": "Any"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "coop_setup", "type": "Callable[[], Tuple[str, Any, Any]]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "env_name", "type": "Any"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "config", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "env_name", "type": "Any"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 130, "col_offset": 36, "nodeName": "figure_eight_setup", "type": "Callable[[], Tuple[str, Any, Any]]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "env_name", "type": "Any"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "config", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "env_name", "type": "Any"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "green_wave_setup", "type": "Callable[[], Tuple[str, Any, Any]]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "env_name", "type": "Any"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "config", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "env_name", "type": "Any"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "highway_setup", "type": "Callable[[], Tuple[str, Any, Any]]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 139, "col_offset": 30, "nodeName": "env_name", "type": "Any"}, {"lineNumber": 139, "col_offset": 40, "nodeName": "config", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 142, "col_offset": 17, "nodeName": "env_name", "type": "Any"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 142, "col_offset": 36, "nodeName": "ring_setup", "type": "Callable[[], Tuple[str, Any, Any]]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "env_name", "type": "Any"}, {"lineNumber": 143, "col_offset": 40, "nodeName": "config", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 146, "col_offset": 17, "nodeName": "env_name", "type": "Any"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 146, "col_offset": 36, "nodeName": "bottleneck_setup", "type": "Callable[[], Tuple[str, Any, Any]]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "env_name", "type": "Any"}, {"lineNumber": 147, "col_offset": 40, "nodeName": "config", "type": "Any"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "run_experiments", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "ray", "type": "Any"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.SumoExperiment"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.SumoExperiment"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.SumoExperiment"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.SumoExperiment"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.SumoExperiment"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.SumoExperiment"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.SumoExperiment"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.SumoExperiment"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.SumoExperiment"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "init", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "ray", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "alg_run", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "env_name", "type": "Any"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "config", "type": "Any"}]