[{"lineNumber": 18, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 366, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 426, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 493, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 534, "col_offset": 38, "nodeName": "TestEvenStartPosVariableLanes", "type": "Type[TestEvenStartPosVariableLanes]"}, {"lineNumber": 551, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 586, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 620, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 653, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 678, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 705, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 366, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 426, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 493, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 551, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 586, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 620, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 653, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 678, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 705, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 773, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "edge_1", "type": "str"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "pos_1", "type": "float"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "edge_2", "type": "str"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "pos_2", "type": "float"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "x1", "type": "int"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "x2", "type": "float"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "x0", "type": "int"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "bunching", "type": "int"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "bunching", "type": "int"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "veh_lanes", "type": "List[Any]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "inf", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "spacing", "type": "str"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 468, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "expected_num_vehicles", "type": "Any"}, {"lineNumber": 521, "col_offset": 32, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 543, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "edge_list", "type": "Any"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "junction_list", "type": "List[Any]"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 739, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 774, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 49, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "length", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "length", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 183, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 188, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "length", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 196, "col_offset": 66, "nodeName": "bunching", "type": "int"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 214, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 218, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "length", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 237, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 240, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 243, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 245, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 252, "col_offset": 23, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "randint", "type": "Any"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 279, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 282, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 299, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 302, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 304, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 311, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 311, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 331, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 334, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 338, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "startpos", "type": "Any"}, {"lineNumber": 353, "col_offset": 18, "nodeName": "startlanes", "type": "Any"}, {"lineNumber": 353, "col_offset": 31, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 355, "col_offset": 25, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 357, "col_offset": 25, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 360, "col_offset": 31, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 376, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 382, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 385, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 399, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 400, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 404, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 405, "col_offset": 29, "nodeName": "length", "type": "Any"}, {"lineNumber": 410, "col_offset": 15, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 431, "col_offset": 49, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 438, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 441, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 448, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 464, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 465, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 468, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 480, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 484, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 488, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 496, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 502, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 506, "col_offset": 29, "nodeName": "variable_lanes_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 521, "col_offset": 32, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 523, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 526, "col_offset": 25, "nodeName": "expected_num_vehicles", "type": "Any"}, {"lineNumber": 526, "col_offset": 48, "nodeName": "actual_num_vehicles", "type": "int"}, {"lineNumber": 529, "col_offset": 16, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 530, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 531, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 537, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 543, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 547, "col_offset": 29, "nodeName": "variable_lanes_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 562, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 565, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 565, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 575, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 578, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 578, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 597, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 600, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 600, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 610, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 613, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 613, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 631, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 634, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 634, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 644, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 647, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 647, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 649, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 650, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 661, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 661, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 668, "col_offset": 20, "nodeName": "get_edge_list", "type": "Callable[[], Any]"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 675, "col_offset": 30, "nodeName": "edge_list", "type": "Any"}, {"lineNumber": 675, "col_offset": 41, "nodeName": "expected_edge_list", "type": "List[str]"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 686, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 686, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 693, "col_offset": 24, "nodeName": "get_junction_list", "type": "Callable[[], List[Any]]"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 702, "col_offset": 30, "nodeName": "junction_list", "type": "List[Any]"}, {"lineNumber": 702, "col_offset": 45, "nodeName": "expected_junction_list", "type": "List[str]"}, {"lineNumber": 717, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 717, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 717, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 718, "col_offset": 20, "nodeName": "next_edge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 722, "col_offset": 30, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 722, "col_offset": 41, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 728, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 728, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 729, "col_offset": 20, "nodeName": "prev_edge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 732, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 732, "col_offset": 30, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 732, "col_offset": 41, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 738, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 738, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 739, "col_offset": 20, "nodeName": "next_edge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 742, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 742, "col_offset": 30, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 742, "col_offset": 41, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 748, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 748, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 748, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 749, "col_offset": 20, "nodeName": "prev_edge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 752, "col_offset": 30, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 752, "col_offset": 41, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 759, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 759, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.highway.scenario.HighwayScenario"}, {"lineNumber": 759, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.scenario.HighwayScenario]]"}, {"lineNumber": 760, "col_offset": 20, "nodeName": "next_edge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 768, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.highway.scenario.HighwayScenario"}, {"lineNumber": 768, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.scenario.HighwayScenario]]"}, {"lineNumber": 769, "col_offset": 20, "nodeName": "prev_edge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 774, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "get_x", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 51, "nodeName": "edge_1", "type": "str"}, {"lineNumber": 37, "col_offset": 59, "nodeName": "pos_1", "type": "float"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "get_x", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 51, "nodeName": "edge_2", "type": "str"}, {"lineNumber": 42, "col_offset": 59, "nodeName": "pos_2", "type": "float"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "get_edge", "type": "Callable[[Any], Optional[Tuple[Any, Any]]]"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "x1", "type": "int"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "get_edge", "type": "Callable[[Any], Optional[Tuple[Any, Any]]]"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "x2", "type": "float"}, {"lineNumber": 89, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 99, "col_offset": 60, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 100, "col_offset": 64, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 101, "col_offset": 58, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 66, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 148, "col_offset": 42, "nodeName": "x0", "type": "int"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 66, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 163, "col_offset": 37, "nodeName": "x0", "type": "int"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "length", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 177, "col_offset": 48, "nodeName": "bunching", "type": "int"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 183, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 66, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 207, "col_offset": 48, "nodeName": "bunching", "type": "int"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 214, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 218, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 218, "col_offset": 66, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 237, "col_offset": 58, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 243, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 257, "col_offset": 23, "nodeName": "length", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 259, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 262, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 262, "col_offset": 49, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 276, "col_offset": 58, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 282, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 283, "col_offset": 48, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 283, "col_offset": 60, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 283, "col_offset": 70, "nodeName": "ids", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 296, "col_offset": 58, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 302, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 311, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "length", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 318, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 331, "col_offset": 58, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 338, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 339, "col_offset": 57, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 340, "col_offset": 22, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 353, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 354, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 354, "col_offset": 29, "nodeName": "startpos", "type": "Any"}, {"lineNumber": 355, "col_offset": 25, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 356, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 356, "col_offset": 29, "nodeName": "startlanes", "type": "Any"}, {"lineNumber": 357, "col_offset": 25, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 360, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 362, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 362, "col_offset": 29, "nodeName": "startpos", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 363, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 363, "col_offset": 29, "nodeName": "startlanes", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 386, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 387, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 399, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 400, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 404, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 404, "col_offset": 66, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 405, "col_offset": 29, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 409, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 414, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 438, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 448, "col_offset": 60, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 449, "col_offset": 64, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 450, "col_offset": 58, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 468, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 470, "col_offset": 20, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 471, "col_offset": 22, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 481, "col_offset": 58, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 488, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 489, "col_offset": 57, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 490, "col_offset": 22, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 507, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 507, "col_offset": 46, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 521, "col_offset": 32, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 523, "col_offset": 16, "nodeName": "getIDList", "type": "Any"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 529, "col_offset": 16, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 529, "col_offset": 43, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 548, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 548, "col_offset": 46, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 562, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 565, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 567, "col_offset": 25, "nodeName": "edge_length", "type": "Callable[[Any], Any]"}, {"lineNumber": 576, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 578, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 581, "col_offset": 12, "nodeName": "edge_length", "type": "Callable[[Any], Any]"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 583, "col_offset": 12, "nodeName": "edge_length", "type": "Callable[[Any], Any]"}, {"lineNumber": 597, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 600, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 602, "col_offset": 31, "nodeName": "speed_limit", "type": "Callable[[Any], Any]"}, {"lineNumber": 611, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 613, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 615, "col_offset": 31, "nodeName": "speed_limit", "type": "Callable[[Any], Any]"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 617, "col_offset": 31, "nodeName": "speed_limit", "type": "Callable[[Any], Any]"}, {"lineNumber": 631, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 634, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 636, "col_offset": 25, "nodeName": "num_lanes", "type": "Callable[[Any], Any]"}, {"lineNumber": 645, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 647, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 649, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 649, "col_offset": 25, "nodeName": "num_lanes", "type": "Callable[[Any], Any]"}, {"lineNumber": 650, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 650, "col_offset": 25, "nodeName": "num_lanes", "type": "Callable[[Any], Any]"}, {"lineNumber": 661, "col_offset": 13, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 668, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 686, "col_offset": 13, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 693, "col_offset": 24, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 718, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 729, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 732, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 739, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 742, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 749, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 760, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.highway.scenario.HighwayScenario"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 769, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.highway.scenario.HighwayScenario"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 94, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 124, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 124, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "append", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 155, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 155, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 155, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "append", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 183, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 184, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 184, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 184, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 184, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "append", "type": "Any"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 192, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 196, "col_offset": 31, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 196, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 214, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 214, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 214, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 214, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "append", "type": "Any"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 243, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 257, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 262, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 263, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 284, "col_offset": 35, "nodeName": "veh_lanes", "type": "List[Any]"}, {"lineNumber": 302, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 311, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 338, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 339, "col_offset": 15, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 339, "col_offset": 42, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 353, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 355, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 357, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 360, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 378, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 379, "col_offset": 41, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 399, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 400, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 400, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 400, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 400, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 404, "col_offset": 29, "nodeName": "append", "type": "Any"}, {"lineNumber": 405, "col_offset": 29, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 414, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 443, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 444, "col_offset": 41, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 468, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 469, "col_offset": 15, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 469, "col_offset": 42, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 470, "col_offset": 20, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 488, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 489, "col_offset": 15, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 489, "col_offset": 42, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 498, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 499, "col_offset": 41, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 521, "col_offset": 32, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 523, "col_offset": 16, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 529, "col_offset": 16, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 529, "col_offset": 43, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 530, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 530, "col_offset": 24, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 530, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 539, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 540, "col_offset": 41, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 567, "col_offset": 25, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 581, "col_offset": 12, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 583, "col_offset": 12, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 602, "col_offset": 31, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 615, "col_offset": 31, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 617, "col_offset": 31, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 636, "col_offset": 25, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 649, "col_offset": 25, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 650, "col_offset": 25, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 668, "col_offset": 20, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 693, "col_offset": 24, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 760, "col_offset": 39, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 761, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 761, "col_offset": 28, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 769, "col_offset": 39, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 770, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 770, "col_offset": 28, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 39, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 128, "col_offset": 52, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 52, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 166, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 183, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 184, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 39, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 188, "col_offset": 52, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 192, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 214, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 218, "col_offset": 39, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 218, "col_offset": 52, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 223, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 243, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 245, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 247, "col_offset": 32, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 247, "col_offset": 42, "nodeName": "ids", "type": "Any"}, {"lineNumber": 256, "col_offset": 23, "nodeName": "append", "type": "Any"}, {"lineNumber": 256, "col_offset": 66, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 257, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 259, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 262, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 263, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 282, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 284, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 302, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 306, "col_offset": 32, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 306, "col_offset": 42, "nodeName": "ids", "type": "Any"}, {"lineNumber": 311, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 315, "col_offset": 23, "nodeName": "append", "type": "Any"}, {"lineNumber": 315, "col_offset": 66, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 318, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 338, "col_offset": 22, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 339, "col_offset": 15, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 353, "col_offset": 31, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 355, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 357, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 360, "col_offset": 31, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 399, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 400, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 404, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 404, "col_offset": 39, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 404, "col_offset": 52, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 405, "col_offset": 29, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 409, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 468, "col_offset": 22, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 469, "col_offset": 15, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 488, "col_offset": 22, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 489, "col_offset": 15, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 523, "col_offset": 16, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 529, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 529, "col_offset": 43, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 530, "col_offset": 39, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 760, "col_offset": 39, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 769, "col_offset": 39, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 184, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 192, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 214, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 223, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 69, "nodeName": "i", "type": "int"}, {"lineNumber": 256, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 256, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 257, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 259, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 262, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 307, "col_offset": 69, "nodeName": "i", "type": "int"}, {"lineNumber": 315, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 315, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 318, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 318, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 339, "col_offset": 15, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 355, "col_offset": 25, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 357, "col_offset": 25, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 400, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 409, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 409, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 409, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 414, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 414, "col_offset": 31, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 423, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 469, "col_offset": 15, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 489, "col_offset": 15, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 523, "col_offset": 16, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 529, "col_offset": 43, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 760, "col_offset": 39, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 769, "col_offset": 39, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 248, "col_offset": 31, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 248, "col_offset": 58, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 256, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 256, "col_offset": 49, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 259, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 263, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 263, "col_offset": 45, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 307, "col_offset": 31, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 307, "col_offset": 58, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 315, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 315, "col_offset": 49, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 318, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 318, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 339, "col_offset": 15, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 409, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 415, "col_offset": 19, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 415, "col_offset": 36, "nodeName": "mean", "type": "Any"}, {"lineNumber": 415, "col_offset": 44, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 418, "col_offset": 27, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 418, "col_offset": 48, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 418, "col_offset": 60, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 420, "col_offset": 72, "nodeName": "pos_i", "type": "Any"}, {"lineNumber": 421, "col_offset": 34, "nodeName": "pos", "type": "List[Any]"}, {"lineNumber": 423, "col_offset": 20, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 423, "col_offset": 36, "nodeName": "any", "type": "Any"}, {"lineNumber": 469, "col_offset": 15, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 489, "col_offset": 15, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 523, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 248, "col_offset": 31, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 256, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 256, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 307, "col_offset": 31, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 315, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 315, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 415, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 415, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 418, "col_offset": 27, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 420, "col_offset": 31, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 420, "col_offset": 58, "nodeName": "pos_i", "type": "Any"}, {"lineNumber": 423, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 307, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 418, "col_offset": 27, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 419, "col_offset": 28, "nodeName": "ids", "type": "Any"}, {"lineNumber": 419, "col_offset": 40, "nodeName": "ids", "type": "Any"}, {"lineNumber": 420, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 423, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 423, "col_offset": 52, "nodeName": "rel_pos", "type": "List[Any]"}, {"lineNumber": 248, "col_offset": 31, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 307, "col_offset": 31, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 419, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 420, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 423, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 419, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 420, "col_offset": 31, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}]