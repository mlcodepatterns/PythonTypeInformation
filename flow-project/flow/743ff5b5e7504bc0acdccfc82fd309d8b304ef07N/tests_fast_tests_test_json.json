[{"lineNumber": 69, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "test_json", "type": "Callable[[Any], Any]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "env_name", "type": "str"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "sumo_params_dict", "type": "Any"}, {"lineNumber": 33, "col_offset": 38, "nodeName": "sumo", "type": "str"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "env_params_dict", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "net_params_dict", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "veh_params", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "init_params", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 140, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "flow_env_name", "type": "str"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "sumo_params_dict", "type": "Any"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "v_param", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "veh_params", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "env", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "create_env", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "env_name", "type": "str"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "horizon", "type": "int"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "flow_env_name", "type": "str"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "exp_tag", "type": "str"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "flow_env_name", "type": "str"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "exp_tag", "type": "str"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 117, "col_offset": 46, "nodeName": "flow_json", "type": "str"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "json_out_file", "type": "str"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 30, "col_offset": 40, "nodeName": "version", "type": "int"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "sumo_params_dict", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "env_params_dict", "type": "Any"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "net_params_dict", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "LoopScenario", "type": "Type[flow.scenarios.loop.loop_scenario.LoopScenario]"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "exp_tag", "type": "str"}, {"lineNumber": 55, "col_offset": 41, "nodeName": "CircleGenerator", "type": "Type[flow.scenarios.loop.gen.CircleGenerator]"}, {"lineNumber": 55, "col_offset": 58, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 55, "col_offset": 68, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "flow_env_name", "type": "str"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 58, "col_offset": 51, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 58, "col_offset": 61, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 59, "col_offset": 51, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 59, "col_offset": 61, "nodeName": "version", "type": "int"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "register_env", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "make", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "env_name", "type": "str"}, {"lineNumber": 80, "col_offset": 60, "nodeName": "horizon", "type": "int"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "make_create_env", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 47, "nodeName": "flow_env_name", "type": "str"}, {"lineNumber": 109, "col_offset": 62, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "copy", "type": "Any"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 121, "col_offset": 62, "nodeName": "outfile", "type": "file"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "get_rllib_config", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "get_flow_params", "type": "Callable[[Any], Tuple[Any, Any]]"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "config", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "remove", "type": "Callable[[Union[str, unicode]], None]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "cleanup", "type": "Any"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 41, "nodeName": "init_params", "type": "Any"}, {"lineNumber": 56, "col_offset": 47, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "pass_params", "type": "Tuple[str, flow.core.params.SumoParams, flow.core.vehicles.Vehicles, flow.core.params.EnvParams, flow.core.params.NetParams, flow.core.params.InitialConfig, flow.scenarios.loop.loop_scenario.LoopScenario, int]"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "envs", "type": "Any"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "vehicle_params", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 111, "col_offset": 55, "nodeName": "exp_tag", "type": "str"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "DEFAULT_CONFIG", "type": "Any"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "json", "type": "module"}, {"lineNumber": 115, "col_offset": 48, "nodeName": "NameEncoder", "type": "Type[flow.core.util.NameEncoder]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "config", "type": "Any"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "outfile", "type": "file"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "expanduser", "type": "Callable"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestJSON"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "imported_flow_params", "type": "Any"}, {"lineNumber": 131, "col_offset": 48, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "expanduser", "type": "Callable"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "worker", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "v_param", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "gym", "type": "Any"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "ppo", "type": "Any"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "expanduser", "type": "Callable"}, {"lineNumber": 121, "col_offset": 37, "nodeName": "json_out_file", "type": "str"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "json", "type": "module"}, {"lineNumber": 122, "col_offset": 43, "nodeName": "NameEncoder", "type": "Type[flow.core.util.NameEncoder]"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "path", "type": "module"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "ray", "type": "Any"}, {"lineNumber": 84, "col_offset": 56, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 85, "col_offset": 51, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 87, "col_offset": 56, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 88, "col_offset": 51, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "additional_env_params", "type": "Dict[str, int]"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 121, "col_offset": 18, "nodeName": "os", "type": "module"}]