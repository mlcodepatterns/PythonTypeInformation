[{"lineNumber": 26, "col_offset": 0, "nodeName": "HORIZON", "type": "int"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "BROKEN_TESTS", "type": "Union[str, bool]"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "unittest", "type": "module"}, {"lineNumber": 117, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "num_workers", "type": "int"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "num_workers", "type": "int"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "HORIZON", "type": "int"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "HORIZON", "type": "int"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "flow_env_name", "type": "str"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "num_workers", "type": "int"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "num_workers", "type": "int"}, {"lineNumber": 102, "col_offset": 39, "nodeName": "HORIZON", "type": "int"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "HORIZON", "type": "int"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "copy", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "min", "type": "Callable"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 55, "col_offset": 50, "nodeName": "LoopScenario", "type": "Type[flow.scenarios.loop.loop_scenario.LoopScenario]"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "create_env", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "env_name", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "make_create_env", "type": "Callable[..., Tuple[Callable[..., Any], Any]]"}, {"lineNumber": 76, "col_offset": 47, "nodeName": "flow_env_name", "type": "str"}, {"lineNumber": 76, "col_offset": 62, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "register_env", "type": "Any"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "env_name", "type": "Any"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "create_env", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "PPOAgent", "type": "Any"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "checkpoint_path", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "copy", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 98, "col_offset": 40, "nodeName": "min", "type": "Callable"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "fn_choose_subpolicy", "type": "str"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "cleanup", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "os", "type": "module"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "DEFAULT_CONFIG", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "ray", "type": "Any"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "num_workers", "type": "int"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "HORIZON", "type": "int"}, {"lineNumber": 46, "col_offset": 54, "nodeName": "num_workers", "type": "int"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "vehicle_params", "type": "List[Dict[Any, Any]]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "registry", "type": "Any"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "ppo", "type": "Any"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "env_name", "type": "Any"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "config", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "train", "type": "Any"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "save", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "DEFAULT_CONFIG", "type": "Any"}, {"lineNumber": 98, "col_offset": 44, "nodeName": "HORIZON", "type": "int"}, {"lineNumber": 98, "col_offset": 54, "nodeName": "num_workers", "type": "int"}, {"lineNumber": 111, "col_offset": 50, "nodeName": "options", "type": "Dict[str, Union[List[List[int]], str, int]]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "worker", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "ppo", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 81, "col_offset": 50, "nodeName": "get_registry", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "alg", "type": "Any"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "alg", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "self", "type": "TestRay"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "ppo", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "ray", "type": "Any"}, {"lineNumber": 59, "col_offset": 56, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 60, "col_offset": 51, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 62, "col_offset": 56, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 63, "col_offset": 51, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "HORIZON", "type": "int"}, {"lineNumber": 68, "col_offset": 56, "nodeName": "additional_env_params", "type": "Dict[str, Union[Type[flow.scenarios.loop.loop_scenario.LoopScenario], int]]"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 81, "col_offset": 50, "nodeName": "registry", "type": "Any"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 86, "col_offset": 56, "nodeName": "checkpoint_path", "type": "Any"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "path", "type": "module"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "os", "type": "module"}]