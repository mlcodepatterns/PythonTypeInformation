[{"lineNumber": 14, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 358, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 417, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 483, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 523, "col_offset": 38, "nodeName": "TestEvenStartPosVariableLanes", "type": "Type[TestEvenStartPosVariableLanes]"}, {"lineNumber": 540, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 574, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 606, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 638, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 662, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 688, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 358, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 417, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 483, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 540, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 574, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 606, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 638, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 662, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 688, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 755, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "edge_1", "type": "str"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "pos_1", "type": "float"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "edge_2", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "pos_2", "type": "float"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "x1", "type": "int"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "x2", "type": "float"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "x0", "type": "int"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "bunching", "type": "int"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "bunching", "type": "int"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "veh_lanes", "type": "List[Any]"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 287, "col_offset": 29, "nodeName": "inf", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "spacing", "type": "str"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 458, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 478, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "expected_num_vehicles", "type": "Any"}, {"lineNumber": 511, "col_offset": 32, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "actual_num_vehicles", "type": "int"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 649, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "edge_list", "type": "Any"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 676, "col_offset": 8, "nodeName": "junction_list", "type": "List[Any]"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 712, "col_offset": 8, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 721, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 731, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 732, "col_offset": 8, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 742, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 756, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "array", "type": "Any"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "length", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "array", "type": "Any"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "length", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "array", "type": "Any"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "length", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 188, "col_offset": 66, "nodeName": "bunching", "type": "int"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 202, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 205, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "array", "type": "Any"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "length", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 229, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 232, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 235, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 237, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 244, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "randint", "type": "Any"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 271, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 274, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 287, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 288, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 291, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 294, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 296, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 303, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 303, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 326, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "startpos", "type": "Any"}, {"lineNumber": 345, "col_offset": 18, "nodeName": "startlanes", "type": "Any"}, {"lineNumber": 345, "col_offset": 31, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 352, "col_offset": 31, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 367, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 373, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 376, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 390, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 391, "col_offset": 18, "nodeName": "array", "type": "Any"}, {"lineNumber": 395, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 396, "col_offset": 29, "nodeName": "length", "type": "Any"}, {"lineNumber": 401, "col_offset": 15, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 421, "col_offset": 49, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 428, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 431, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 438, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 454, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 455, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 458, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 470, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 474, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 478, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 486, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 492, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 496, "col_offset": 29, "nodeName": "variable_lanes_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 511, "col_offset": 32, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 512, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 515, "col_offset": 25, "nodeName": "expected_num_vehicles", "type": "Any"}, {"lineNumber": 515, "col_offset": 48, "nodeName": "actual_num_vehicles", "type": "int"}, {"lineNumber": 518, "col_offset": 16, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 519, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 520, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 526, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 532, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 536, "col_offset": 29, "nodeName": "variable_lanes_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 550, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 553, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 553, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 563, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 566, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 566, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 584, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 587, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 587, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 597, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 600, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 600, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 600, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 616, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 619, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 619, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 629, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 632, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 632, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 645, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 645, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 649, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 652, "col_offset": 20, "nodeName": "get_edge_list", "type": "Callable[[], Any]"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 659, "col_offset": 30, "nodeName": "edge_list", "type": "Any"}, {"lineNumber": 659, "col_offset": 41, "nodeName": "expected_edge_list", "type": "List[str]"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 669, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 669, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 676, "col_offset": 24, "nodeName": "get_junction_list", "type": "Callable[[], List[Any]]"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 685, "col_offset": 30, "nodeName": "junction_list", "type": "List[Any]"}, {"lineNumber": 685, "col_offset": 45, "nodeName": "expected_junction_list", "type": "List[str]"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 699, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 699, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 700, "col_offset": 20, "nodeName": "next_edge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 704, "col_offset": 30, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 704, "col_offset": 41, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 710, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 710, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 710, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 711, "col_offset": 20, "nodeName": "prev_edge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 714, "col_offset": 30, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 714, "col_offset": 41, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 720, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 720, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 721, "col_offset": 20, "nodeName": "next_edge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 724, "col_offset": 30, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 724, "col_offset": 41, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 730, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 730, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 731, "col_offset": 20, "nodeName": "prev_edge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 734, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 734, "col_offset": 30, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 734, "col_offset": 41, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 741, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.highway.scenario.HighwayScenario"}, {"lineNumber": 741, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.highway.scenario.HighwayScenario]]"}, {"lineNumber": 742, "col_offset": 20, "nodeName": "next_edge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 750, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.highway.scenario.HighwayScenario"}, {"lineNumber": 750, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.highway.scenario.HighwayScenario]]"}, {"lineNumber": 751, "col_offset": 20, "nodeName": "prev_edge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 756, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "get_x", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 51, "nodeName": "edge_1", "type": "str"}, {"lineNumber": 31, "col_offset": 59, "nodeName": "pos_1", "type": "float"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "get_x", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 36, "col_offset": 51, "nodeName": "edge_2", "type": "str"}, {"lineNumber": 36, "col_offset": 59, "nodeName": "pos_2", "type": "float"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "get_edge", "type": "Callable[[Any], Optional[Tuple[Any, Any]]]"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "x1", "type": "int"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "get_edge", "type": "Callable[[Any], Optional[Tuple[Any, Any]]]"}, {"lineNumber": 62, "col_offset": 35, "nodeName": "x2", "type": "float"}, {"lineNumber": 81, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 91, "col_offset": 60, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 92, "col_offset": 64, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 93, "col_offset": 58, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 66, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 140, "col_offset": 42, "nodeName": "x0", "type": "int"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 66, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 155, "col_offset": 37, "nodeName": "x0", "type": "int"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "length", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 169, "col_offset": 48, "nodeName": "bunching", "type": "int"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 66, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 199, "col_offset": 48, "nodeName": "bunching", "type": "int"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 205, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 206, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 66, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 229, "col_offset": 58, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 235, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 249, "col_offset": 23, "nodeName": "length", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 254, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 254, "col_offset": 49, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 268, "col_offset": 58, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 274, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 275, "col_offset": 21, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 275, "col_offset": 48, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 275, "col_offset": 60, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 275, "col_offset": 70, "nodeName": "ids", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 288, "col_offset": 58, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 294, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 296, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 303, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 307, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 308, "col_offset": 23, "nodeName": "length", "type": "Any"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 310, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 323, "col_offset": 58, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 331, "col_offset": 57, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 332, "col_offset": 22, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 345, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 346, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 346, "col_offset": 29, "nodeName": "startpos", "type": "Any"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 348, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 348, "col_offset": 29, "nodeName": "startlanes", "type": "Any"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 352, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 354, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 354, "col_offset": 29, "nodeName": "startpos", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 355, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 355, "col_offset": 29, "nodeName": "startlanes", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 377, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 378, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 390, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 391, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 395, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 395, "col_offset": 66, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 396, "col_offset": 29, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 400, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 405, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 428, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 438, "col_offset": 60, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 439, "col_offset": 64, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 440, "col_offset": 58, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 458, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 460, "col_offset": 20, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 461, "col_offset": 22, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 471, "col_offset": 58, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 478, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 479, "col_offset": 57, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 480, "col_offset": 22, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 497, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 497, "col_offset": 46, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 511, "col_offset": 32, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 512, "col_offset": 34, "nodeName": "getIDList", "type": "Any"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 518, "col_offset": 16, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 527, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 537, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 537, "col_offset": 46, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 550, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 553, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 555, "col_offset": 25, "nodeName": "edge_length", "type": "Callable[[Any], Any]"}, {"lineNumber": 564, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 566, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 569, "col_offset": 12, "nodeName": "edge_length", "type": "Callable[[Any], Any]"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 571, "col_offset": 12, "nodeName": "edge_length", "type": "Callable[[Any], Any]"}, {"lineNumber": 584, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 587, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 589, "col_offset": 31, "nodeName": "speed_limit", "type": "Callable[[Any], Any]"}, {"lineNumber": 598, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 600, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 602, "col_offset": 31, "nodeName": "speed_limit", "type": "Callable[[Any], Any]"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 603, "col_offset": 31, "nodeName": "speed_limit", "type": "Callable[[Any], Any]"}, {"lineNumber": 616, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 619, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 621, "col_offset": 25, "nodeName": "num_lanes", "type": "Callable[[Any], Any]"}, {"lineNumber": 630, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 632, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 634, "col_offset": 25, "nodeName": "num_lanes", "type": "Callable[[Any], Any]"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 635, "col_offset": 25, "nodeName": "num_lanes", "type": "Callable[[Any], Any]"}, {"lineNumber": 645, "col_offset": 13, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 652, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 669, "col_offset": 13, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 676, "col_offset": 24, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 700, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 711, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 721, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 731, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 734, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 742, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.highway.scenario.HighwayScenario"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 751, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.highway.scenario.HighwayScenario"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 87, "col_offset": 41, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 116, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 116, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "append", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 147, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 147, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 147, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "append", "type": "Any"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 176, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 176, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 176, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "append", "type": "Any"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 188, "col_offset": 31, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 188, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 205, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 206, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 206, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 206, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 210, "col_offset": 29, "nodeName": "append", "type": "Any"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 235, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 254, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 255, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 274, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 275, "col_offset": 21, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 276, "col_offset": 35, "nodeName": "veh_lanes", "type": "List[Any]"}, {"lineNumber": 294, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 296, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 303, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 307, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 308, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 331, "col_offset": 42, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 345, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 352, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 369, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 370, "col_offset": 41, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 390, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 391, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 391, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 391, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 391, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 395, "col_offset": 29, "nodeName": "append", "type": "Any"}, {"lineNumber": 396, "col_offset": 29, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 405, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 433, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 434, "col_offset": 41, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 458, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 459, "col_offset": 15, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 459, "col_offset": 42, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 460, "col_offset": 20, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 478, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 479, "col_offset": 15, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 479, "col_offset": 42, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 488, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 489, "col_offset": 41, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 511, "col_offset": 32, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 512, "col_offset": 34, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 518, "col_offset": 16, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 519, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 519, "col_offset": 24, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 519, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 528, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 529, "col_offset": 41, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 555, "col_offset": 25, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 569, "col_offset": 12, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 571, "col_offset": 12, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 589, "col_offset": 31, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 602, "col_offset": 31, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 603, "col_offset": 31, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 621, "col_offset": 25, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 634, "col_offset": 25, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 635, "col_offset": 25, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 652, "col_offset": 20, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 676, "col_offset": 24, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 742, "col_offset": 39, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 743, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 743, "col_offset": 28, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 751, "col_offset": 39, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 752, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 752, "col_offset": 28, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 31, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 115, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 39, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 120, "col_offset": 52, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 127, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 127, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 146, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 147, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 151, "col_offset": 39, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 151, "col_offset": 52, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 158, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 175, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 176, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 39, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 180, "col_offset": 52, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 181, "col_offset": 29, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 205, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 210, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 39, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 210, "col_offset": 52, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 215, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 215, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 235, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 239, "col_offset": 32, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 239, "col_offset": 42, "nodeName": "ids", "type": "Any"}, {"lineNumber": 248, "col_offset": 23, "nodeName": "append", "type": "Any"}, {"lineNumber": 248, "col_offset": 66, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 249, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 254, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 255, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 274, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 275, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 276, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 294, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 296, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 298, "col_offset": 32, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 298, "col_offset": 42, "nodeName": "ids", "type": "Any"}, {"lineNumber": 303, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "append", "type": "Any"}, {"lineNumber": 307, "col_offset": 66, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 308, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 310, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 330, "col_offset": 22, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 345, "col_offset": 31, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 352, "col_offset": 31, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 390, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 391, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 395, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 395, "col_offset": 39, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 395, "col_offset": 52, "nodeName": "veh_pos", "type": "Any"}, {"lineNumber": 396, "col_offset": 29, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 400, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 458, "col_offset": 22, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 459, "col_offset": 15, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 478, "col_offset": 22, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 479, "col_offset": 15, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 512, "col_offset": 34, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 518, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 519, "col_offset": 39, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 742, "col_offset": 39, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 751, "col_offset": 39, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 127, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 147, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 184, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 215, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 240, "col_offset": 69, "nodeName": "i", "type": "int"}, {"lineNumber": 248, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 249, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 251, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 251, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 254, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 275, "col_offset": 21, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 299, "col_offset": 69, "nodeName": "i", "type": "int"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 307, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 308, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 310, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 310, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 391, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 400, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 400, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 400, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 405, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 405, "col_offset": 31, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 414, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 459, "col_offset": 15, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 479, "col_offset": 15, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 512, "col_offset": 34, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 742, "col_offset": 39, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 751, "col_offset": 39, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 240, "col_offset": 31, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 240, "col_offset": 58, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 248, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 248, "col_offset": 49, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 251, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 251, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 255, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 255, "col_offset": 45, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 299, "col_offset": 58, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 307, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 307, "col_offset": 49, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 310, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 310, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 400, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 406, "col_offset": 19, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 406, "col_offset": 36, "nodeName": "mean", "type": "Any"}, {"lineNumber": 406, "col_offset": 44, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 409, "col_offset": 27, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 409, "col_offset": 48, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 409, "col_offset": 60, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 411, "col_offset": 72, "nodeName": "pos_i", "type": "Any"}, {"lineNumber": 412, "col_offset": 34, "nodeName": "pos", "type": "List[Any]"}, {"lineNumber": 414, "col_offset": 20, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 414, "col_offset": 36, "nodeName": "any", "type": "Any"}, {"lineNumber": 459, "col_offset": 15, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 479, "col_offset": 15, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 512, "col_offset": 34, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 240, "col_offset": 31, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 248, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 248, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 307, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 307, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 406, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 406, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 409, "col_offset": 27, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 411, "col_offset": 31, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 411, "col_offset": 58, "nodeName": "pos_i", "type": "Any"}, {"lineNumber": 414, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 240, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 409, "col_offset": 27, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 410, "col_offset": 28, "nodeName": "ids", "type": "Any"}, {"lineNumber": 410, "col_offset": 40, "nodeName": "ids", "type": "Any"}, {"lineNumber": 411, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 414, "col_offset": 43, "nodeName": "array", "type": "Any"}, {"lineNumber": 414, "col_offset": 52, "nodeName": "rel_pos", "type": "List[Any]"}, {"lineNumber": 240, "col_offset": 31, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 410, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 411, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 414, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 410, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 411, "col_offset": 31, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}]