[{"lineNumber": 18, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 384, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 448, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 519, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 560, "col_offset": 38, "nodeName": "TestEvenStartPosVariableLanes", "type": "Type[TestEvenStartPosVariableLanes]"}, {"lineNumber": 578, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 621, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 664, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 705, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 732, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 760, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 384, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 448, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 519, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 578, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 621, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 664, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 705, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 732, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 760, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 830, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "edge_1", "type": "str"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "pos_1", "type": "float"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "edge_2", "type": "str"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "pos_2", "type": "float"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "x1", "type": "int"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "x2", "type": "float"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "x0", "type": "int"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "bunching", "type": "int"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "bunching", "type": "int"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "veh_lanes", "type": "List[Any]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 313, "col_offset": 29, "nodeName": "inf", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "spacing", "type": "str"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 496, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 515, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "expected_num_vehicles", "type": "Any"}, {"lineNumber": 548, "col_offset": 32, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 563, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 679, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 721, "col_offset": 8, "nodeName": "edge_list", "type": "Any"}, {"lineNumber": 745, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 748, "col_offset": 8, "nodeName": "junction_list", "type": "Any"}, {"lineNumber": 773, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 785, "col_offset": 8, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 794, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 795, "col_offset": 8, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 804, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 805, "col_offset": 8, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "_", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 49, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.params.Vehicles]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 163, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 191, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 194, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 200, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 209, "col_offset": 66, "nodeName": "bunching", "type": "int"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 223, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "startpos", "type": "Any"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "_", "type": "Any"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 228, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 256, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 262, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 293, "col_offset": 29, "nodeName": "randint", "type": "Any"}, {"lineNumber": 294, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 297, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 300, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 313, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 314, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 317, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 321, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 323, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 323, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 331, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 331, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 351, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 354, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 358, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 372, "col_offset": 21, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 374, "col_offset": 35, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 375, "col_offset": 37, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 378, "col_offset": 21, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 394, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.params.Vehicles]"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 401, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 404, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 416, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 417, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 422, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 429, "col_offset": 15, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 453, "col_offset": 49, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 464, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 467, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.params.Vehicles]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 475, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 492, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 493, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 496, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 507, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 511, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 515, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 522, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.params.Vehicles]"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 529, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 533, "col_offset": 29, "nodeName": "variable_lanes_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, tests.setup_scripts.VariableLanesScenario]]"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 548, "col_offset": 32, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 550, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 553, "col_offset": 25, "nodeName": "expected_num_vehicles", "type": "Any"}, {"lineNumber": 553, "col_offset": 48, "nodeName": "actual_num_vehicles", "type": "int"}, {"lineNumber": 556, "col_offset": 16, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 563, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.params.Vehicles]"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 570, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 574, "col_offset": 29, "nodeName": "variable_lanes_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, tests.setup_scripts.VariableLanesScenario]]"}, {"lineNumber": 593, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 596, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 596, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 610, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 613, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 613, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 636, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 639, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 639, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 653, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 656, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 656, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 679, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 682, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 682, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 696, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 699, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 699, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 713, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 713, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 717, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 721, "col_offset": 20, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 729, "col_offset": 30, "nodeName": "edge_list", "type": "Any"}, {"lineNumber": 729, "col_offset": 41, "nodeName": "expected_edge_list", "type": "List[str]"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 740, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 740, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 745, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 748, "col_offset": 24, "nodeName": "get_junction_list", "type": "Any"}, {"lineNumber": 757, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 757, "col_offset": 30, "nodeName": "junction_list", "type": "Any"}, {"lineNumber": 757, "col_offset": 45, "nodeName": "expected_junction_list", "type": "List[str]"}, {"lineNumber": 772, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 772, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 772, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 773, "col_offset": 20, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 777, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 777, "col_offset": 30, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 777, "col_offset": 41, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 783, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 783, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 784, "col_offset": 20, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 787, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 787, "col_offset": 30, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 787, "col_offset": 41, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 793, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 793, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 793, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 794, "col_offset": 20, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 797, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 797, "col_offset": 30, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 797, "col_offset": 41, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 803, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 803, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 804, "col_offset": 20, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 807, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 807, "col_offset": 30, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 807, "col_offset": 41, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 814, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 814, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.highway.HighwayScenario"}, {"lineNumber": 814, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.HighwayScenario]]"}, {"lineNumber": 815, "col_offset": 20, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 817, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 824, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 824, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.highway.HighwayScenario"}, {"lineNumber": 824, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.HighwayScenario]]"}, {"lineNumber": 825, "col_offset": 20, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 827, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 831, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "get_x", "type": "Any"}, {"lineNumber": 37, "col_offset": 57, "nodeName": "edge_1", "type": "str"}, {"lineNumber": 37, "col_offset": 65, "nodeName": "pos_1", "type": "float"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "get_x", "type": "Any"}, {"lineNumber": 42, "col_offset": 57, "nodeName": "edge_2", "type": "str"}, {"lineNumber": 42, "col_offset": 65, "nodeName": "pos_2", "type": "float"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "x1", "type": "int"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "x2", "type": "float"}, {"lineNumber": 94, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 157, "col_offset": 42, "nodeName": "x0", "type": "int"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 163, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 164, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 174, "col_offset": 37, "nodeName": "x0", "type": "int"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 188, "col_offset": 48, "nodeName": "bunching", "type": "int"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 194, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 200, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 220, "col_offset": 48, "nodeName": "bunching", "type": "int"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 228, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 234, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 253, "col_offset": 58, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 277, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 280, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 280, "col_offset": 31, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 293, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 294, "col_offset": 58, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 300, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 301, "col_offset": 21, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 301, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 301, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 301, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 314, "col_offset": 58, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 321, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 335, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 338, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 351, "col_offset": 58, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 358, "col_offset": 22, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 372, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 374, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 374, "col_offset": 29, "nodeName": "pos", "type": "Any"}, {"lineNumber": 374, "col_offset": 35, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 375, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 375, "col_offset": 29, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 375, "col_offset": 37, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 378, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 380, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 380, "col_offset": 29, "nodeName": "pos", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 381, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 381, "col_offset": 29, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 405, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 405, "col_offset": 52, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 416, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 417, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 422, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 423, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 428, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 433, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 464, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 476, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 477, "col_offset": 27, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 478, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 496, "col_offset": 22, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 497, "col_offset": 12, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 498, "col_offset": 28, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 508, "col_offset": 49, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 515, "col_offset": 22, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 516, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 534, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 534, "col_offset": 46, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 548, "col_offset": 32, "nodeName": "k", "type": "Any"}, {"lineNumber": 550, "col_offset": 16, "nodeName": "getIDList", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 556, "col_offset": 16, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 556, "col_offset": 44, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 557, "col_offset": 25, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 575, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 575, "col_offset": 46, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 593, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 596, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 598, "col_offset": 25, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 611, "col_offset": 55, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 613, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 616, "col_offset": 12, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 618, "col_offset": 12, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 636, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 639, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 641, "col_offset": 31, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 654, "col_offset": 55, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 656, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 659, "col_offset": 12, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 661, "col_offset": 12, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 679, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 682, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 684, "col_offset": 25, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 697, "col_offset": 55, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 699, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 701, "col_offset": 25, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 702, "col_offset": 25, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 717, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 721, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 748, "col_offset": 24, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 757, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 773, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 777, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 784, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 787, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 794, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 797, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 804, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 807, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 815, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 817, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 825, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 827, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 132, "col_offset": 32, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 132, "col_offset": 42, "nodeName": "ids", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 163, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 165, "col_offset": 42, "nodeName": "ids", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 174, "col_offset": 42, "nodeName": "length", "type": "Any"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 194, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 196, "col_offset": 32, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 196, "col_offset": 42, "nodeName": "ids", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 209, "col_offset": 31, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 209, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 229, "col_offset": 32, "nodeName": "pos", "type": "Any"}, {"lineNumber": 229, "col_offset": 39, "nodeName": "startpos", "type": "Any"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "length", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 281, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 293, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 300, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 301, "col_offset": 21, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 302, "col_offset": 35, "nodeName": "veh_lanes", "type": "List[Any]"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 321, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 335, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 336, "col_offset": 23, "nodeName": "length", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 358, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 359, "col_offset": 67, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 372, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 373, "col_offset": 27, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 374, "col_offset": 35, "nodeName": "k", "type": "Any"}, {"lineNumber": 375, "col_offset": 37, "nodeName": "k", "type": "Any"}, {"lineNumber": 378, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 379, "col_offset": 27, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 397, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 398, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 416, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 418, "col_offset": 32, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 418, "col_offset": 42, "nodeName": "ids", "type": "Any"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 433, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 470, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 471, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 496, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 497, "col_offset": 12, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 497, "col_offset": 28, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 497, "col_offset": 56, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 498, "col_offset": 28, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 515, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 516, "col_offset": 12, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 516, "col_offset": 67, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 525, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 526, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 548, "col_offset": 32, "nodeName": "env", "type": "Any"}, {"lineNumber": 550, "col_offset": 16, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 556, "col_offset": 16, "nodeName": "k", "type": "Any"}, {"lineNumber": 556, "col_offset": 44, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 566, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 567, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 598, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 616, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 618, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 641, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 659, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 661, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 684, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 701, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 702, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 717, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 721, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 748, "col_offset": 24, "nodeName": "k", "type": "Any"}, {"lineNumber": 773, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 784, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 794, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 804, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 815, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 816, "col_offset": 12, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 817, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 817, "col_offset": 28, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 825, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 826, "col_offset": 12, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 827, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 827, "col_offset": 28, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 137, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 144, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 163, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 170, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 174, "col_offset": 42, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 177, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 177, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 194, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 201, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 205, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 234, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 239, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 239, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 264, "col_offset": 59, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 264, "col_offset": 69, "nodeName": "ids", "type": "Any"}, {"lineNumber": 274, "col_offset": 23, "nodeName": "append", "type": "Any"}, {"lineNumber": 274, "col_offset": 66, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 277, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 281, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 300, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 301, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 321, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 325, "col_offset": 59, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 325, "col_offset": 69, "nodeName": "ids", "type": "Any"}, {"lineNumber": 335, "col_offset": 23, "nodeName": "append", "type": "Any"}, {"lineNumber": 335, "col_offset": 66, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 336, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 338, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 358, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 359, "col_offset": 28, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 359, "col_offset": 56, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 372, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 374, "col_offset": 35, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 375, "col_offset": 37, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 378, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 416, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 423, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 423, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 428, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 496, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 497, "col_offset": 28, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 515, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 516, "col_offset": 28, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 516, "col_offset": 56, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 548, "col_offset": 32, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 550, "col_offset": 16, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 556, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 556, "col_offset": 44, "nodeName": "k", "type": "Any"}, {"lineNumber": 557, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 557, "col_offset": 38, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 557, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 598, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 616, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 618, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 641, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 659, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 661, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 684, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 701, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 702, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 721, "col_offset": 20, "nodeName": "env", "type": "Any"}, {"lineNumber": 748, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 773, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 784, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 794, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 804, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 815, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 816, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 825, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 826, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 174, "col_offset": 42, "nodeName": "k", "type": "Any"}, {"lineNumber": 177, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 205, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 239, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 265, "col_offset": 58, "nodeName": "i", "type": "int"}, {"lineNumber": 274, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 274, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 277, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 277, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 300, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 301, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 321, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 326, "col_offset": 58, "nodeName": "i", "type": "int"}, {"lineNumber": 335, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 335, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 336, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 338, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 338, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 358, "col_offset": 22, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 359, "col_offset": 28, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 372, "col_offset": 21, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 374, "col_offset": 35, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 375, "col_offset": 37, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 378, "col_offset": 21, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 416, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 428, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 428, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 428, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 433, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 433, "col_offset": 31, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 445, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 496, "col_offset": 22, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 497, "col_offset": 28, "nodeName": "k", "type": "Any"}, {"lineNumber": 515, "col_offset": 22, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 516, "col_offset": 28, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 550, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 556, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 556, "col_offset": 44, "nodeName": "env", "type": "Any"}, {"lineNumber": 557, "col_offset": 53, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 598, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 616, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 618, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 641, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 659, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 661, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 684, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 701, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 702, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 721, "col_offset": 20, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 748, "col_offset": 24, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 816, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 826, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 174, "col_offset": 42, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 265, "col_offset": 47, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 274, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 274, "col_offset": 49, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 277, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 277, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 281, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 281, "col_offset": 45, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 301, "col_offset": 21, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 326, "col_offset": 19, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 326, "col_offset": 47, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 335, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 335, "col_offset": 49, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 336, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 338, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 338, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 359, "col_offset": 28, "nodeName": "k", "type": "Any"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 428, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 434, "col_offset": 19, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 434, "col_offset": 36, "nodeName": "mean", "type": "Any"}, {"lineNumber": 434, "col_offset": 44, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 439, "col_offset": 28, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 442, "col_offset": 67, "nodeName": "pos_i", "type": "Any"}, {"lineNumber": 442, "col_offset": 76, "nodeName": "pos", "type": "List[Any]"}, {"lineNumber": 445, "col_offset": 20, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 445, "col_offset": 36, "nodeName": "any", "type": "Any"}, {"lineNumber": 497, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 516, "col_offset": 28, "nodeName": "k", "type": "Any"}, {"lineNumber": 550, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 556, "col_offset": 44, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 816, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 826, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 174, "col_offset": 42, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 274, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 274, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 326, "col_offset": 19, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 335, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 335, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 336, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 359, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 434, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 434, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 442, "col_offset": 24, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 442, "col_offset": 53, "nodeName": "pos_i", "type": "Any"}, {"lineNumber": 445, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 497, "col_offset": 28, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 516, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 326, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 359, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 439, "col_offset": 39, "nodeName": "ids", "type": "Any"}, {"lineNumber": 439, "col_offset": 51, "nodeName": "ids", "type": "Any"}, {"lineNumber": 442, "col_offset": 24, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 445, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 445, "col_offset": 52, "nodeName": "rel_pos", "type": "List[Any]"}, {"lineNumber": 516, "col_offset": 28, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 326, "col_offset": 19, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 439, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 442, "col_offset": 24, "nodeName": "k", "type": "Any"}, {"lineNumber": 445, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 326, "col_offset": 19, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 439, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 442, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 442, "col_offset": 24, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}]