[{"lineNumber": 17, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 142, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 293, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 343, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 369, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 17, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 142, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 293, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 343, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 369, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 396, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "offset", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "after_reset", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "before_reset", "type": "List[Any]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "after_reset", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "accel_step0", "type": "numpy.ndarray"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "expected_vel1", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "veh_obs", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "id_list", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "accel_step1", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "expected_vel2", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "bad_directions", "type": "numpy.ndarray"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "direction0", "type": "numpy.ndarray"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "veh_obs", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "id_list", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "direction1", "type": "numpy.ndarray"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "additional_env_params", "type": "Dict[str, int]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "sorted_ids", "type": "Any"}, {"lineNumber": 314, "col_offset": 21, "nodeName": "sorted_ids", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "positions", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "additional_env_params", "type": "Dict[str, int]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "sorted_ids", "type": "List[Any]"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "warmup_step", "type": "int"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "additional_params", "type": "Dict[str, int]"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "t1", "type": "int"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "time_counter", "type": "int"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "t2", "type": "int"}, {"lineNumber": 363, "col_offset": 13, "nodeName": "time_counter", "type": "int"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "sims_per_step", "type": "int"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "additional_params", "type": "Dict[str, int]"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "t1", "type": "int"}, {"lineNumber": 386, "col_offset": 13, "nodeName": "time_counter", "type": "int"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "t2", "type": "int"}, {"lineNumber": 390, "col_offset": 13, "nodeName": "time_counter", "type": "int"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestStartingPositionShuffle"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 66, "col_offset": 51, "nodeName": "length", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "before_reset", "type": "numpy.ndarray"}, {"lineNumber": 68, "col_offset": 59, "nodeName": "after_reset", "type": "Any"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestVehicleArrangementShuffle"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "before_reset", "type": "List[Any]"}, {"lineNumber": 115, "col_offset": 44, "nodeName": "after_reset", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 129, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "emission_path", "type": "Any"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 185, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "apply_acceleration", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "simulationStep", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "clip", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 201, "col_offset": 45, "nodeName": "vel1", "type": "numpy.ndarray"}, {"lineNumber": 201, "col_offset": 51, "nodeName": "expected_vel1", "type": "Any"}, {"lineNumber": 204, "col_offset": 18, "nodeName": "getSubscriptionResults", "type": "Any"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "getSubscriptionResults", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 210, "col_offset": 33, "nodeName": "veh_obs", "type": "Any"}, {"lineNumber": 210, "col_offset": 42, "nodeName": "id_list", "type": "Any"}, {"lineNumber": 210, "col_offset": 51, "nodeName": "env", "type": "Any"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "apply_acceleration", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "simulationStep", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "clip", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 223, "col_offset": 45, "nodeName": "vel2", "type": "numpy.ndarray"}, {"lineNumber": 223, "col_offset": 51, "nodeName": "expected_vel2", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 230, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "apply_lane_change", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 248, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 253, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "apply_lane_change", "type": "Any"}, {"lineNumber": 254, "col_offset": 35, "nodeName": "ids", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "simulationStep", "type": "Any"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 262, "col_offset": 26, "nodeName": "clip", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 265, "col_offset": 45, "nodeName": "lane1", "type": "numpy.ndarray"}, {"lineNumber": 265, "col_offset": 52, "nodeName": "expected_lane1", "type": "Any"}, {"lineNumber": 268, "col_offset": 18, "nodeName": "getSubscriptionResults", "type": "Any"}, {"lineNumber": 271, "col_offset": 18, "nodeName": "getSubscriptionResults", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 274, "col_offset": 33, "nodeName": "veh_obs", "type": "Any"}, {"lineNumber": 274, "col_offset": 42, "nodeName": "id_list", "type": "Any"}, {"lineNumber": 274, "col_offset": 51, "nodeName": "env", "type": "Any"}, {"lineNumber": 278, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "apply_lane_change", "type": "Any"}, {"lineNumber": 279, "col_offset": 35, "nodeName": "ids", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "simulationStep", "type": "Any"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 287, "col_offset": 26, "nodeName": "clip", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 290, "col_offset": 45, "nodeName": "lane2", "type": "numpy.ndarray"}, {"lineNumber": 290, "col_offset": 52, "nodeName": "expected_lane2", "type": "Any"}, {"lineNumber": 303, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 305, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 306, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 308, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 314, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 315, "col_offset": 20, "nodeName": "get_absolute_position", "type": "Any"}, {"lineNumber": 315, "col_offset": 60, "nodeName": "sorted_ids", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 325, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 327, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 328, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 330, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 336, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 336, "col_offset": 26, "nodeName": "sorted_ids", "type": "Any"}, {"lineNumber": 337, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 340, "col_offset": 29, "nodeName": "sorted_ids", "type": "List[Any]"}, {"lineNumber": 340, "col_offset": 41, "nodeName": "ids", "type": "Any"}, {"lineNumber": 354, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 356, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 356, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 363, "col_offset": 13, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 366, "col_offset": 34, "nodeName": "warmup_step", "type": "int"}, {"lineNumber": 380, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 382, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 382, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 386, "col_offset": 13, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "step", "type": "Callable[[Any], Tuple[List[Any], Any, Any, Dict[Any, Any]]]"}, {"lineNumber": 390, "col_offset": 13, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 393, "col_offset": 34, "nodeName": "sims_per_step", "type": "int"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 38, "col_offset": 60, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 39, "col_offset": 64, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 40, "col_offset": 58, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "after_reset", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "before_reset", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "after_reset", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 43, "nodeName": "offset", "type": "Any"}, {"lineNumber": 66, "col_offset": 51, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 92, "col_offset": 60, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 93, "col_offset": 64, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 94, "col_offset": 58, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 45, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 107, "col_offset": 57, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 107, "col_offset": 67, "nodeName": "ids", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 44, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 113, "col_offset": 56, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 113, "col_offset": 66, "nodeName": "ids", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestVehicleArrangementShuffle"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 129, "col_offset": 61, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 151, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 167, "col_offset": 60, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 168, "col_offset": 60, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 169, "col_offset": 58, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 185, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 192, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 192, "col_offset": 53, "nodeName": "accel_step0", "type": "numpy.ndarray"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 204, "col_offset": 18, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "simulation", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 210, "col_offset": 51, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 214, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 214, "col_offset": 53, "nodeName": "accel_step1", "type": "numpy.ndarray"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 230, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 238, "col_offset": 48, "nodeName": "ids", "type": "Any"}, {"lineNumber": 238, "col_offset": 63, "nodeName": "bad_directions", "type": "numpy.ndarray"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 248, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 253, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 254, "col_offset": 50, "nodeName": "direction0", "type": "numpy.ndarray"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 268, "col_offset": 18, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 271, "col_offset": 18, "nodeName": "simulation", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 274, "col_offset": 51, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 278, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 279, "col_offset": 50, "nodeName": "direction1", "type": "numpy.ndarray"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 303, "col_offset": 49, "nodeName": "additional_env_params", "type": "Dict[str, int]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 308, "col_offset": 60, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 309, "col_offset": 64, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 310, "col_offset": 58, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 314, "col_offset": 21, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 315, "col_offset": 20, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 318, "col_offset": 24, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 325, "col_offset": 49, "nodeName": "additional_env_params", "type": "Dict[str, int]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 330, "col_offset": 60, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 331, "col_offset": 64, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 332, "col_offset": 58, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 336, "col_offset": 26, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 337, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 354, "col_offset": 44, "nodeName": "warmup_step", "type": "int"}, {"lineNumber": 355, "col_offset": 49, "nodeName": "additional_params", "type": "Dict[str, int]"}, {"lineNumber": 356, "col_offset": 55, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "self", "type": "TestWarmUpSteps"}, {"lineNumber": 366, "col_offset": 25, "nodeName": "t2", "type": "int"}, {"lineNumber": 366, "col_offset": 30, "nodeName": "t1", "type": "int"}, {"lineNumber": 380, "col_offset": 45, "nodeName": "sims_per_step", "type": "int"}, {"lineNumber": 381, "col_offset": 49, "nodeName": "additional_params", "type": "Dict[str, int]"}, {"lineNumber": 382, "col_offset": 55, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "self", "type": "TestSimsPerStep"}, {"lineNumber": 393, "col_offset": 25, "nodeName": "t2", "type": "int"}, {"lineNumber": 393, "col_offset": 30, "nodeName": "t1", "type": "int"}, {"lineNumber": 31, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 32, "col_offset": 41, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestStartingPositionShuffle"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 54, "col_offset": 55, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 54, "col_offset": 65, "nodeName": "ids", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestStartingPositionShuffle"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 61, "col_offset": 55, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 61, "col_offset": 65, "nodeName": "ids", "type": "Any"}, {"lineNumber": 66, "col_offset": 51, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestVehicleArrangementShuffle"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestVehicleArrangementShuffle"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 160, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 161, "col_offset": 41, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 162, "col_offset": 47, "nodeName": "SumoCarFollowingParams", "type": "Type[flow.core.params.SumoCarFollowingParams]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 185, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 188, "col_offset": 39, "nodeName": "ids", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 198, "col_offset": 39, "nodeName": "ids", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "vel0", "type": "numpy.ndarray"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 204, "col_offset": 18, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 220, "col_offset": 39, "nodeName": "ids", "type": "Any"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "vel1", "type": "numpy.ndarray"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 230, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 248, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 250, "col_offset": 30, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 250, "col_offset": 40, "nodeName": "ids", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 261, "col_offset": 17, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 261, "col_offset": 27, "nodeName": "ids", "type": "Any"}, {"lineNumber": 262, "col_offset": 26, "nodeName": "lane0", "type": "numpy.ndarray"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 268, "col_offset": 18, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 271, "col_offset": 18, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 286, "col_offset": 27, "nodeName": "ids", "type": "Any"}, {"lineNumber": 287, "col_offset": 26, "nodeName": "lane1", "type": "numpy.ndarray"}, {"lineNumber": 288, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 315, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 336, "col_offset": 26, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 337, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "self", "type": "TestStartingPositionShuffle"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 66, "col_offset": 51, "nodeName": "self", "type": "TestStartingPositionShuffle"}, {"lineNumber": 104, "col_offset": 14, "nodeName": "self", "type": "TestVehicleArrangementShuffle"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "self", "type": "TestVehicleArrangementShuffle"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "self", "type": "TestVehicleArrangementShuffle"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 185, "col_offset": 14, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "accel_step0", "type": "numpy.ndarray"}, {"lineNumber": 204, "col_offset": 18, "nodeName": "env", "type": "Any"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "env", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "accel_step1", "type": "numpy.ndarray"}, {"lineNumber": 230, "col_offset": 14, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 248, "col_offset": 14, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 262, "col_offset": 34, "nodeName": "sign", "type": "Any"}, {"lineNumber": 262, "col_offset": 42, "nodeName": "direction0", "type": "numpy.ndarray"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 268, "col_offset": 18, "nodeName": "env", "type": "Any"}, {"lineNumber": 271, "col_offset": 18, "nodeName": "env", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 287, "col_offset": 34, "nodeName": "sign", "type": "Any"}, {"lineNumber": 287, "col_offset": 42, "nodeName": "direction1", "type": "numpy.ndarray"}, {"lineNumber": 288, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 315, "col_offset": 20, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 319, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 337, "col_offset": 14, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "self", "type": "TestStartingPositionShuffle"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "self", "type": "TestStartingPositionShuffle"}, {"lineNumber": 204, "col_offset": 18, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 207, "col_offset": 18, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 262, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "env", "type": "Any"}, {"lineNumber": 268, "col_offset": 18, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 271, "col_offset": 18, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 287, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 288, "col_offset": 23, "nodeName": "env", "type": "Any"}, {"lineNumber": 319, "col_offset": 37, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 288, "col_offset": 23, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 319, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 319, "col_offset": 47, "nodeName": "positions", "type": "Any"}]