[{"lineNumber": 16, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 3, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 241, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 3, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "default_minGap", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "error_state", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "error_state_rl", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "actual_lane_leaders", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "expected_lane_leaders", "type": "List[str]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "actual_lane_head", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "expected_lane_head", "type": "List[Union[float, int]]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "actual_lane_followers", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "expected_lane_followers", "type": "List[str]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "actual_lane_tail", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "expected_lane_tail", "type": "List[float]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "expected_ids", "type": "List[str]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "controller_params", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 57, "nodeName": "default_minGap", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "num_vehicles", "type": "int"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "num_vehicles", "type": "int"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "get_state", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "error_state", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "get_state", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 26, "nodeName": "error_state_rl", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "num_vehicles", "type": "int"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "num_rl_vehicles", "type": "int"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "get_lane_leaders", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 30, "nodeName": "actual_lane_leaders", "type": "Any"}, {"lineNumber": 191, "col_offset": 51, "nodeName": "expected_lane_leaders", "type": "List[str]"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "get_lane_headways", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 30, "nodeName": "actual_lane_head", "type": "Any"}, {"lineNumber": 196, "col_offset": 48, "nodeName": "expected_lane_head", "type": "List[Union[float, int]]"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "get_lane_followers", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 30, "nodeName": "actual_lane_followers", "type": "Any"}, {"lineNumber": 201, "col_offset": 53, "nodeName": "expected_lane_followers", "type": "List[str]"}, {"lineNumber": 204, "col_offset": 27, "nodeName": "get_lane_tailways", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 206, "col_offset": 45, "nodeName": "actual_lane_tail", "type": "Any"}, {"lineNumber": 207, "col_offset": 45, "nodeName": "expected_lane_tail", "type": "List[float]"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 227, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "TestIdsByEdge"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 236, "col_offset": 14, "nodeName": "get_ids_by_edge", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 238, "col_offset": 30, "nodeName": "ids", "type": "Any"}, {"lineNumber": 238, "col_offset": 35, "nodeName": "expected_ids", "type": "List[str]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "get_speed_mode", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "get_lane_change_mode", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "get_speed_mode", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "get_lane_change_mode", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "get_speed_mode", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "get_lane_change_mode", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 112, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "get_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 134, "col_offset": 23, "nodeName": "get_human_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 135, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "get_controlled_lc_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "get_controlled_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 139, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "get_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 141, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "get_rl_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 143, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 153, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 153, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 156, "col_offset": 51, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 174, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 183, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 184, "col_offset": 53, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 185, "col_offset": 59, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "TestMultiLaneData"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TestMultiLaneData"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "TestMultiLaneData"}, {"lineNumber": 204, "col_offset": 27, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "TestIdsByEdge"}, {"lineNumber": 227, "col_offset": 58, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 236, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "TestIdsByEdge"}, {"lineNumber": 28, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 36, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 59, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "SumoCarFollowingController", "type": "Type[flow.controllers.car_following_models.SumoCarFollowingController]"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "SumoCarFollowingParams", "type": "Type[flow.core.params.SumoCarFollowingParams]"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "StaticLaneChanger", "type": "Type[flow.controllers.lane_change_controllers.StaticLaneChanger]"}, {"lineNumber": 91, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "get_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "get_rl_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "get_human_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "get_controlled_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "get_controlled_lc_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 107, "col_offset": 46, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "get_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "get_rl_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "get_human_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "get_controlled_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "get_controlled_lc_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 125, "col_offset": 46, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 134, "col_offset": 23, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 153, "col_offset": 52, "nodeName": "get_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 156, "col_offset": 55, "nodeName": "get_rl_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 178, "col_offset": 46, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 181, "col_offset": 58, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 204, "col_offset": 27, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "self", "type": "TestIdsByEdge"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "TestIdsByEdge"}, {"lineNumber": 236, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "types", "type": "List[Tuple[Any, Dict[Any, Any]]]"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "types", "type": "List[Tuple[Any, Dict[Any, Any]]]"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 153, "col_offset": 52, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 156, "col_offset": 55, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 236, "col_offset": 14, "nodeName": "self", "type": "TestIdsByEdge"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}]