[{"lineNumber": 20, "col_offset": 0, "nodeName": "WHITE", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "CYAN", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "RED", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 25, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 321, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 374, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 398, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 424, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 477, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 25, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 321, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 374, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 398, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 424, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 477, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 531, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "offset", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "after_reset", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "before_reset", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "after_reset", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "accel_step0", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "expected_vel1", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "veh_obs", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "id_list", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "accel_step1", "type": "numpy.ndarray"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "expected_vel2", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "bad_directions", "type": "numpy.ndarray"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "direction0", "type": "numpy.ndarray"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "veh_obs", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "id_list", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "direction1", "type": "numpy.ndarray"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "additional_env_params", "type": "Dict[str, int]"}, {"lineNumber": 330, "col_offset": 32, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "sorted_ids", "type": "Any"}, {"lineNumber": 343, "col_offset": 21, "nodeName": "sorted_ids", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "positions", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "additional_env_params", "type": "Dict[str, int]"}, {"lineNumber": 354, "col_offset": 32, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "sorted_ids", "type": "List[Any]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "warmup_step", "type": "int"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "t1", "type": "Any"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "time_counter", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "t2", "type": "Any"}, {"lineNumber": 392, "col_offset": 13, "nodeName": "time_counter", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "sims_per_step", "type": "int"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "t1", "type": "Any"}, {"lineNumber": 414, "col_offset": 13, "nodeName": "time_counter", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "t2", "type": "Any"}, {"lineNumber": 418, "col_offset": 13, "nodeName": "time_counter", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 504, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "render", "type": "bool"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestStartingPositionShuffle"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 77, "col_offset": 51, "nodeName": "length", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 79, "col_offset": 45, "nodeName": "before_reset", "type": "numpy.ndarray"}, {"lineNumber": 79, "col_offset": 59, "nodeName": "after_reset", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestVehicleArrangementShuffle"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 30, "nodeName": "before_reset", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 44, "nodeName": "after_reset", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 143, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "emission_path", "type": "Any"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 178, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 205, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 211, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "apply_acceleration", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "simulationStep", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "clip", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 223, "col_offset": 45, "nodeName": "vel1", "type": "numpy.ndarray"}, {"lineNumber": 223, "col_offset": 51, "nodeName": "expected_vel1", "type": "Any"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "getSubscriptionResults", "type": "Any"}, {"lineNumber": 229, "col_offset": 18, "nodeName": "getSubscriptionResults", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 232, "col_offset": 33, "nodeName": "veh_obs", "type": "Any"}, {"lineNumber": 232, "col_offset": 42, "nodeName": "id_list", "type": "Any"}, {"lineNumber": 232, "col_offset": 51, "nodeName": "env", "type": "Any"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "apply_acceleration", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "simulationStep", "type": "Any"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "clip", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 247, "col_offset": 45, "nodeName": "vel2", "type": "numpy.ndarray"}, {"lineNumber": 247, "col_offset": 51, "nodeName": "expected_vel2", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 254, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "apply_lane_change", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 274, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 275, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "apply_lane_change", "type": "Any"}, {"lineNumber": 280, "col_offset": 35, "nodeName": "ids", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "simulationStep", "type": "Any"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 289, "col_offset": 26, "nodeName": "clip", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 292, "col_offset": 45, "nodeName": "lane1", "type": "numpy.ndarray"}, {"lineNumber": 292, "col_offset": 52, "nodeName": "expected_lane1", "type": "Any"}, {"lineNumber": 295, "col_offset": 18, "nodeName": "getSubscriptionResults", "type": "Any"}, {"lineNumber": 298, "col_offset": 18, "nodeName": "getSubscriptionResults", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 301, "col_offset": 33, "nodeName": "veh_obs", "type": "Any"}, {"lineNumber": 301, "col_offset": 42, "nodeName": "id_list", "type": "Any"}, {"lineNumber": 301, "col_offset": 51, "nodeName": "env", "type": "Any"}, {"lineNumber": 305, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "apply_lane_change", "type": "Any"}, {"lineNumber": 306, "col_offset": 35, "nodeName": "ids", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "simulationStep", "type": "Any"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "clip", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 318, "col_offset": 45, "nodeName": "lane2", "type": "numpy.ndarray"}, {"lineNumber": 318, "col_offset": 52, "nodeName": "expected_lane2", "type": "Any"}, {"lineNumber": 331, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 333, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 334, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 336, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 343, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 344, "col_offset": 20, "nodeName": "get_absolute_position", "type": "Any"}, {"lineNumber": 344, "col_offset": 60, "nodeName": "sorted_ids", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 355, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 357, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 358, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 360, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 367, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 367, "col_offset": 26, "nodeName": "sorted_ids", "type": "Any"}, {"lineNumber": 368, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "sorted_ids", "type": "List[Any]"}, {"lineNumber": 371, "col_offset": 41, "nodeName": "ids", "type": "Any"}, {"lineNumber": 383, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 385, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 385, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 388, "col_offset": 13, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 392, "col_offset": 13, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 395, "col_offset": 34, "nodeName": "warmup_step", "type": "int"}, {"lineNumber": 407, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 410, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 410, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 414, "col_offset": 13, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 418, "col_offset": 13, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 421, "col_offset": 34, "nodeName": "sims_per_step", "type": "int"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 432, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 432, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 433, "col_offset": 22, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 434, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 435, "col_offset": 19, "nodeName": "Env", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 447, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 448, "col_offset": 15, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 454, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 455, "col_offset": 15, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 461, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 462, "col_offset": 15, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 472, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 473, "col_offset": 15, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 480, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "_", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 485, "col_offset": 11, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 485, "col_offset": 22, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 489, "col_offset": 22, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 490, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 491, "col_offset": 14, "nodeName": "Env", "type": "Any"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "set_observed", "type": "Any"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "update_vehicle_colors", "type": "Any"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "simulationStep", "type": "Any"}, {"lineNumber": 504, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "set_observed", "type": "Any"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "update_vehicle_colors", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "simulationStep", "type": "Any"}, {"lineNumber": 519, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 532, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "after_reset", "type": "numpy.ndarray"}, {"lineNumber": 74, "col_offset": 34, "nodeName": "before_reset", "type": "numpy.ndarray"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "after_reset", "type": "numpy.ndarray"}, {"lineNumber": 77, "col_offset": 43, "nodeName": "offset", "type": "Any"}, {"lineNumber": 77, "col_offset": 51, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 121, "col_offset": 45, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 121, "col_offset": 57, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 121, "col_offset": 67, "nodeName": "ids", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 127, "col_offset": 44, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 127, "col_offset": 56, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 127, "col_offset": 66, "nodeName": "ids", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TestVehicleArrangementShuffle"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 143, "col_offset": 61, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 170, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 175, "col_offset": 30, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 189, "col_offset": 46, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 189, "col_offset": 67, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 205, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 211, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 212, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 212, "col_offset": 53, "nodeName": "accel_step0", "type": "numpy.ndarray"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 229, "col_offset": 18, "nodeName": "simulation", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 232, "col_offset": 51, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 236, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 236, "col_offset": 53, "nodeName": "accel_step1", "type": "numpy.ndarray"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 254, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "ids", "type": "Any"}, {"lineNumber": 264, "col_offset": 22, "nodeName": "bad_directions", "type": "numpy.ndarray"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 274, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 275, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 280, "col_offset": 50, "nodeName": "direction0", "type": "numpy.ndarray"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 295, "col_offset": 18, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 298, "col_offset": 18, "nodeName": "simulation", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 301, "col_offset": 51, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 305, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 306, "col_offset": 50, "nodeName": "direction1", "type": "numpy.ndarray"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 332, "col_offset": 30, "nodeName": "additional_env_params", "type": "Dict[str, int]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 337, "col_offset": 23, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 338, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 339, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 343, "col_offset": 21, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 344, "col_offset": 20, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 356, "col_offset": 30, "nodeName": "additional_env_params", "type": "Dict[str, int]"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 361, "col_offset": 23, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 362, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 363, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 367, "col_offset": 26, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 368, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 384, "col_offset": 25, "nodeName": "warmup_step", "type": "int"}, {"lineNumber": 384, "col_offset": 56, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 385, "col_offset": 55, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "self", "type": "TestWarmUpSteps"}, {"lineNumber": 395, "col_offset": 25, "nodeName": "t2", "type": "Any"}, {"lineNumber": 395, "col_offset": 30, "nodeName": "t1", "type": "Any"}, {"lineNumber": 408, "col_offset": 26, "nodeName": "sims_per_step", "type": "int"}, {"lineNumber": 409, "col_offset": 30, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 410, "col_offset": 55, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "self", "type": "TestSimsPerStep"}, {"lineNumber": 421, "col_offset": 25, "nodeName": "t2", "type": "Any"}, {"lineNumber": 421, "col_offset": 30, "nodeName": "t1", "type": "Any"}, {"lineNumber": 435, "col_offset": 35, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 436, "col_offset": 34, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 437, "col_offset": 32, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "get_state", "type": "Any"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 467, "col_offset": 25, "nodeName": "compute_reward", "type": "Any"}, {"lineNumber": 471, "col_offset": 12, "nodeName": "_apply_rl_actions", "type": "Any"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 485, "col_offset": 51, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 491, "col_offset": 30, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 492, "col_offset": 29, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 493, "col_offset": 27, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 504, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 505, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 506, "col_offset": 63, "nodeName": "WHITE", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 519, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 520, "col_offset": 15, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 41, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestStartingPositionShuffle"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 65, "col_offset": 55, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 65, "col_offset": 65, "nodeName": "ids", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestStartingPositionShuffle"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 72, "col_offset": 43, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 72, "col_offset": 55, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 72, "col_offset": 65, "nodeName": "ids", "type": "Any"}, {"lineNumber": 77, "col_offset": 51, "nodeName": "env", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestVehicleArrangementShuffle"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "TestVehicleArrangementShuffle"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "env", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "env", "type": "Any"}, {"lineNumber": 181, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 182, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 183, "col_offset": 38, "nodeName": "SumoCarFollowingParams", "type": "Type[flow.core.params.SumoCarFollowingParams]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 205, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 208, "col_offset": 13, "nodeName": "get_speed", "type": "Any"}, {"lineNumber": 208, "col_offset": 41, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 208, "col_offset": 53, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 208, "col_offset": 63, "nodeName": "ids", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 219, "col_offset": 26, "nodeName": "ids", "type": "Any"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "vel0", "type": "numpy.ndarray"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 229, "col_offset": 18, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 243, "col_offset": 26, "nodeName": "ids", "type": "Any"}, {"lineNumber": 245, "col_offset": 25, "nodeName": "vel1", "type": "numpy.ndarray"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 254, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 274, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 276, "col_offset": 13, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 276, "col_offset": 40, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 276, "col_offset": 52, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 276, "col_offset": 62, "nodeName": "ids", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 287, "col_offset": 26, "nodeName": "ids", "type": "Any"}, {"lineNumber": 289, "col_offset": 26, "nodeName": "lane0", "type": "numpy.ndarray"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 295, "col_offset": 18, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 298, "col_offset": 18, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 313, "col_offset": 26, "nodeName": "ids", "type": "Any"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "lane1", "type": "numpy.ndarray"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 344, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 367, "col_offset": 26, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 368, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 467, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 471, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 483, "col_offset": 52, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 504, "col_offset": 22, "nodeName": "env", "type": "Any"}, {"lineNumber": 505, "col_offset": 12, "nodeName": "self", "type": "TestVehicleColoring"}, {"lineNumber": 506, "col_offset": 16, "nodeName": "getColor", "type": "Any"}, {"lineNumber": 506, "col_offset": 54, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 512, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 519, "col_offset": 22, "nodeName": "env", "type": "Any"}, {"lineNumber": 521, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 522, "col_offset": 67, "nodeName": "CYAN", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 523, "col_offset": 17, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "self", "type": "TestStartingPositionShuffle"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "env", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "env", "type": "Any"}, {"lineNumber": 77, "col_offset": 51, "nodeName": "self", "type": "TestStartingPositionShuffle"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "self", "type": "TestVehicleArrangementShuffle"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "self", "type": "TestVehicleArrangementShuffle"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "self", "type": "TestVehicleArrangementShuffle"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 205, "col_offset": 14, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 208, "col_offset": 13, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "accel_step0", "type": "numpy.ndarray"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "env", "type": "Any"}, {"lineNumber": 229, "col_offset": 18, "nodeName": "env", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "accel_step1", "type": "numpy.ndarray"}, {"lineNumber": 254, "col_offset": 14, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 274, "col_offset": 14, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 276, "col_offset": 13, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 289, "col_offset": 34, "nodeName": "sign", "type": "Any"}, {"lineNumber": 289, "col_offset": 42, "nodeName": "direction0", "type": "numpy.ndarray"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 295, "col_offset": 18, "nodeName": "env", "type": "Any"}, {"lineNumber": 298, "col_offset": 18, "nodeName": "env", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 315, "col_offset": 34, "nodeName": "sign", "type": "Any"}, {"lineNumber": 315, "col_offset": 42, "nodeName": "direction1", "type": "numpy.ndarray"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 344, "col_offset": 20, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 349, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 368, "col_offset": 14, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 467, "col_offset": 25, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 471, "col_offset": 12, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 506, "col_offset": 16, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 521, "col_offset": 16, "nodeName": "self", "type": "TestVehicleColoring"}, {"lineNumber": 522, "col_offset": 20, "nodeName": "getColor", "type": "Any"}, {"lineNumber": 522, "col_offset": 58, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 524, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 525, "col_offset": 67, "nodeName": "RED", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 527, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 528, "col_offset": 67, "nodeName": "WHITE", "type": "Tuple[int, int, int, int]"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "self", "type": "TestStartingPositionShuffle"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "self", "type": "TestStartingPositionShuffle"}, {"lineNumber": 208, "col_offset": 13, "nodeName": "env", "type": "Any"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 229, "col_offset": 18, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 276, "col_offset": 13, "nodeName": "env", "type": "Any"}, {"lineNumber": 289, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "env", "type": "Any"}, {"lineNumber": 295, "col_offset": 18, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 298, "col_offset": 18, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 315, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "env", "type": "Any"}, {"lineNumber": 349, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 506, "col_offset": 16, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 522, "col_offset": 20, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 524, "col_offset": 16, "nodeName": "self", "type": "TestVehicleColoring"}, {"lineNumber": 525, "col_offset": 20, "nodeName": "getColor", "type": "Any"}, {"lineNumber": 525, "col_offset": 58, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 527, "col_offset": 16, "nodeName": "self", "type": "TestVehicleColoring"}, {"lineNumber": 528, "col_offset": 20, "nodeName": "getColor", "type": "Any"}, {"lineNumber": 528, "col_offset": 58, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 208, "col_offset": 13, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 276, "col_offset": 13, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 290, "col_offset": 23, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 506, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 522, "col_offset": 20, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 525, "col_offset": 20, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 528, "col_offset": 20, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 349, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 349, "col_offset": 35, "nodeName": "positions", "type": "Any"}, {"lineNumber": 522, "col_offset": 20, "nodeName": "env", "type": "Any"}, {"lineNumber": 525, "col_offset": 20, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 528, "col_offset": 20, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 525, "col_offset": 20, "nodeName": "env", "type": "Any"}, {"lineNumber": 528, "col_offset": 20, "nodeName": "env", "type": "Any"}]