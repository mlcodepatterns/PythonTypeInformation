[{"lineNumber": 711, "col_offset": 0, "nodeName": "test_additional_params", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 756, "col_offset": 0, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 780, "col_offset": 0, "nodeName": "test_observed", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "test_additional_env_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "test_observation_action_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "test_observed", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "test_additional_env_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "test_observation_action_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "test_observed", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "test_additional_env_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "test_observation_action_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "test_observed", "type": "Callable[[Any], Any]"}, {"lineNumber": 264, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "test_additional_env_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "test_observation_action_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 338, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 358, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "test_additional_env_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "test_observation_action_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "test_observed", "type": "Callable[[Any], Any]"}, {"lineNumber": 414, "col_offset": 4, "nodeName": "test_reset", "type": "Callable[[Any], Any]"}, {"lineNumber": 438, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 440, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 459, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 464, "col_offset": 4, "nodeName": "test_additional_env_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 479, "col_offset": 4, "nodeName": "test_observation_action_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 500, "col_offset": 4, "nodeName": "test_observed", "type": "Callable[[Any], Any]"}, {"lineNumber": 513, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 515, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 535, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 540, "col_offset": 4, "nodeName": "test_additional_env_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 556, "col_offset": 4, "nodeName": "test_observation_action_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 577, "col_offset": 4, "nodeName": "test_observed", "type": "Callable[[Any], Any]"}, {"lineNumber": 590, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 594, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 605, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 609, "col_offset": 4, "nodeName": "test_obs_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 614, "col_offset": 4, "nodeName": "test_action_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 619, "col_offset": 4, "nodeName": "test_get_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 622, "col_offset": 4, "nodeName": "test_compute_reward", "type": "Callable[[Any], Any]"}, {"lineNumber": 634, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 638, "col_offset": 4, "nodeName": "test_reset_inflows", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 264, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 338, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 438, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 513, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 590, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 627, "col_offset": 8, "nodeName": "reward_fn", "type": "Callable[..., Any]"}, {"lineNumber": 634, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 734, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 816, "col_offset": 11, "nodeName": "test_mask", "type": "Any"}, {"lineNumber": 823, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "sumo_params", "type": "None"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "env_params", "type": "None"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "sumo_params", "type": "None"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "env_params", "type": "None"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "sumo_params", "type": "None"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "env_params", "type": "None"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "sumo_params", "type": "None"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "env_params", "type": "None"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "sumo_params", "type": "None"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "env_params", "type": "None"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "sumo_params", "type": "None"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "env_params", "type": "None"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "sumo_params", "type": "None"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "env_params", "type": "None"}, {"lineNumber": 595, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 630, "col_offset": 61, "nodeName": "reward_fn", "type": "Callable[..., Any]"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 646, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 672, "col_offset": 8, "nodeName": "inflow", "type": "flow.core.params.InFlows"}, {"lineNumber": 689, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 692, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "expected_inflow", "type": "float"}, {"lineNumber": 701, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 734, "col_offset": 15, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 736, "col_offset": 8, "nodeName": "new_add", "type": "Dict[str, int]"}, {"lineNumber": 805, "col_offset": 10, "nodeName": "env_class", "type": "Any"}, {"lineNumber": 808, "col_offset": 4, "nodeName": "step", "type": "Any"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "additional_command", "type": "Any"}, {"lineNumber": 810, "col_offset": 16, "nodeName": "all", "type": "Any"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 824, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "VehicleParams", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "LoopScenario", "type": "Type[flow.scenarios.loop.LoopScenario]"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "LaneChangeAccelEnv", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "VehicleParams", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "LoopScenario", "type": "Type[flow.scenarios.loop.LoopScenario]"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 14, "nodeName": "LaneChangeAccelPOEnv", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "VehicleParams", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 193, "col_offset": 27, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 194, "col_offset": 24, "nodeName": "LoopScenario", "type": "Type[flow.scenarios.loop.LoopScenario]"}, {"lineNumber": 199, "col_offset": 26, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 229, "col_offset": 14, "nodeName": "AccelEnv", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "VehicleParams", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "TestTwoLoopsMergeEnv"}, {"lineNumber": 271, "col_offset": 27, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 272, "col_offset": 24, "nodeName": "TwoLoopsOneMergingScenario", "type": "Type[flow.scenarios.loop_merge.TwoLoopsOneMergingScenario]"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "self", "type": "TestTwoLoopsMergeEnv"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "self", "type": "TestTwoLoopsMergeEnv"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "self", "type": "TestTwoLoopsMergeEnv"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 316, "col_offset": 14, "nodeName": "TwoLoopsMergePOEnv", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 341, "col_offset": 19, "nodeName": "VehicleParams", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 345, "col_offset": 27, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 346, "col_offset": 24, "nodeName": "LoopScenario", "type": "Type[flow.scenarios.loop.LoopScenario]"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 356, "col_offset": 26, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 380, "col_offset": 14, "nodeName": "WaveAttenuationEnv", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 424, "col_offset": 14, "nodeName": "WaveAttenuationEnv", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 431, "col_offset": 25, "nodeName": "length", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 433, "col_offset": 25, "nodeName": "length", "type": "Any"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 435, "col_offset": 25, "nodeName": "length", "type": "Any"}, {"lineNumber": 441, "col_offset": 19, "nodeName": "VehicleParams", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 445, "col_offset": 27, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 446, "col_offset": 24, "nodeName": "LoopScenario", "type": "Type[flow.scenarios.loop.LoopScenario]"}, {"lineNumber": 451, "col_offset": 26, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 482, "col_offset": 14, "nodeName": "WaveAttenuationPOEnv", "type": "Any"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 516, "col_offset": 19, "nodeName": "VehicleParams", "type": "Any"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 520, "col_offset": 27, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 521, "col_offset": 24, "nodeName": "MergeScenario", "type": "Type[flow.scenarios.merge.MergeScenario]"}, {"lineNumber": 526, "col_offset": 26, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 536, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 538, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 559, "col_offset": 14, "nodeName": "WaveAttenuationMergePOEnv", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 595, "col_offset": 19, "nodeName": "VehicleParams", "type": "Any"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 597, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 598, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 599, "col_offset": 22, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 600, "col_offset": 19, "nodeName": "LoopScenario", "type": "Type[flow.scenarios.loop.LoopScenario]"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 603, "col_offset": 19, "nodeName": "TestEnv", "type": "Any"}, {"lineNumber": 603, "col_offset": 27, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 603, "col_offset": 39, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 603, "col_offset": 52, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 644, "col_offset": 22, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 646, "col_offset": 19, "nodeName": "VehicleParams", "type": "Any"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 656, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 672, "col_offset": 17, "nodeName": "InFlows", "type": "Type[flow.core.params.InFlows]"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 679, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 684, "col_offset": 19, "nodeName": "BottleneckScenario", "type": "Type[flow.scenarios.bottleneck.BottleneckScenario]"}, {"lineNumber": 689, "col_offset": 14, "nodeName": "DesiredVelocityEnv", "type": "Any"}, {"lineNumber": 689, "col_offset": 33, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 689, "col_offset": 45, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 689, "col_offset": 58, "nodeName": "scenario", "type": "flow.scenarios.bottleneck.BottleneckScenario"}, {"lineNumber": 692, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 701, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 734, "col_offset": 15, "nodeName": "additional_params", "type": "Dict[str, int]"}, {"lineNumber": 736, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 737, "col_offset": 12, "nodeName": "new_add", "type": "Dict[str, int]"}, {"lineNumber": 775, "col_offset": 33, "nodeName": "expected_size", "type": "Any"}, {"lineNumber": 776, "col_offset": 12, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 777, "col_offset": 12, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 805, "col_offset": 32, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 806, "col_offset": 29, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 807, "col_offset": 31, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 808, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 809, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 810, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 814, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 824, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "test_observed", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "test_observed", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 230, "col_offset": 24, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "test_observed", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 274, "col_offset": 21, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "TestTwoLoopsMergeEnv"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 317, "col_offset": 24, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 318, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "self", "type": "TestTwoLoopsMergeEnv"}, {"lineNumber": 323, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "self", "type": "TestTwoLoopsMergeEnv"}, {"lineNumber": 328, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 348, "col_offset": 21, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 356, "col_offset": 54, "nodeName": "params", "type": "Dict[str, Union[int, List[int]]]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 381, "col_offset": 24, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 382, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 383, "col_offset": 23, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 387, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 393, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "test_observed", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 425, "col_offset": 24, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 426, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 431, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 433, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 435, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 448, "col_offset": 21, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 467, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 484, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 485, "col_offset": 23, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 489, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 494, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 495, "col_offset": 12, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 503, "col_offset": 12, "nodeName": "test_observed", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 523, "col_offset": 21, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 543, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 560, "col_offset": 24, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 561, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 562, "col_offset": 23, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 566, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 567, "col_offset": 12, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 571, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 572, "col_offset": 12, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 575, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 580, "col_offset": 12, "nodeName": "test_observed", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 597, "col_offset": 49, "nodeName": "LOOP_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 601, "col_offset": 41, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 602, "col_offset": 43, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 610, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 611, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 611, "col_offset": 29, "nodeName": "high", "type": "Any"}, {"lineNumber": 612, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 612, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 612, "col_offset": 29, "nodeName": "low", "type": "Any"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 615, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 616, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 616, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 616, "col_offset": 29, "nodeName": "high", "type": "Any"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 617, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 617, "col_offset": 29, "nodeName": "low", "type": "Any"}, {"lineNumber": 620, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 620, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 624, "col_offset": 25, "nodeName": "compute_reward", "type": "Any"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 631, "col_offset": 25, "nodeName": "compute_reward", "type": "Any"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "inflow", "type": "flow.core.params.InFlows"}, {"lineNumber": 680, "col_offset": 20, "nodeName": "inflow", "type": "flow.core.params.InFlows"}, {"lineNumber": 686, "col_offset": 21, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 687, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 693, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "self", "type": "TestDesiredVelocityEnv"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 702, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "self", "type": "TestDesiredVelocityEnv"}, {"lineNumber": 704, "col_offset": 46, "nodeName": "expected_inflow", "type": "float"}, {"lineNumber": 736, "col_offset": 18, "nodeName": "additional_params", "type": "Dict[str, int]"}, {"lineNumber": 737, "col_offset": 20, "nodeName": "key", "type": "str"}, {"lineNumber": 740, "col_offset": 12, "nodeName": "env_class", "type": "Any"}, {"lineNumber": 775, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 776, "col_offset": 16, "nodeName": "high", "type": "Any"}, {"lineNumber": 776, "col_offset": 34, "nodeName": "expected_max", "type": "int"}, {"lineNumber": 777, "col_offset": 16, "nodeName": "low", "type": "Any"}, {"lineNumber": 777, "col_offset": 33, "nodeName": "expected_min", "type": "int"}, {"lineNumber": 811, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 812, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 812, "col_offset": 17, "nodeName": "expected_observed", "type": "List[str]"}, {"lineNumber": 25, "col_offset": 52, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 26, "col_offset": 55, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "LaneChangeAccelEnv", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "LaneChangeAccelEnv", "type": "Any"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 110, "col_offset": 52, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 111, "col_offset": 55, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 137, "col_offset": 26, "nodeName": "LaneChangeAccelPOEnv", "type": "Any"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "LaneChangeAccelPOEnv", "type": "Any"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 190, "col_offset": 52, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 191, "col_offset": 55, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 197, "col_offset": 23, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "AccelEnv", "type": "Any"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 230, "col_offset": 24, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 231, "col_offset": 21, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 244, "col_offset": 26, "nodeName": "num_rl_vehicles", "type": "Any"}, {"lineNumber": 255, "col_offset": 26, "nodeName": "AccelEnv", "type": "Any"}, {"lineNumber": 256, "col_offset": 28, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 258, "col_offset": 27, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 268, "col_offset": 52, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 269, "col_offset": 55, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 300, "col_offset": 26, "nodeName": "TwoLoopsMergePOEnv", "type": "Any"}, {"lineNumber": 301, "col_offset": 28, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 317, "col_offset": 24, "nodeName": "self", "type": "TestTwoLoopsMergeEnv"}, {"lineNumber": 318, "col_offset": 21, "nodeName": "self", "type": "TestTwoLoopsMergeEnv"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "self", "type": "TestTwoLoopsMergeEnv"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 330, "col_offset": 26, "nodeName": "num_rl_vehicles", "type": "Any"}, {"lineNumber": 342, "col_offset": 52, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 343, "col_offset": 55, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 367, "col_offset": 26, "nodeName": "WaveAttenuationEnv", "type": "Any"}, {"lineNumber": 368, "col_offset": 28, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 369, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 381, "col_offset": 24, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 382, "col_offset": 21, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 383, "col_offset": 23, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 395, "col_offset": 26, "nodeName": "num_rl_vehicles", "type": "Any"}, {"lineNumber": 406, "col_offset": 26, "nodeName": "WaveAttenuationEnv", "type": "Any"}, {"lineNumber": 407, "col_offset": 28, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 408, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 409, "col_offset": 27, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 425, "col_offset": 24, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 426, "col_offset": 21, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 431, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 433, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 435, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 442, "col_offset": 52, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 443, "col_offset": 55, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 449, "col_offset": 23, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 468, "col_offset": 26, "nodeName": "WaveAttenuationPOEnv", "type": "Any"}, {"lineNumber": 469, "col_offset": 28, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 470, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 484, "col_offset": 21, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 485, "col_offset": 23, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 495, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 504, "col_offset": 26, "nodeName": "WaveAttenuationPOEnv", "type": "Any"}, {"lineNumber": 505, "col_offset": 28, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 506, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 507, "col_offset": 27, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 517, "col_offset": 52, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 518, "col_offset": 55, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 524, "col_offset": 23, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 544, "col_offset": 26, "nodeName": "WaveAttenuationMergePOEnv", "type": "Any"}, {"lineNumber": 545, "col_offset": 28, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 546, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 560, "col_offset": 24, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 561, "col_offset": 21, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 562, "col_offset": 23, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 567, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 572, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 581, "col_offset": 26, "nodeName": "WaveAttenuationMergePOEnv", "type": "Any"}, {"lineNumber": 582, "col_offset": 28, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 583, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 584, "col_offset": 27, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 610, "col_offset": 25, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 611, "col_offset": 29, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 612, "col_offset": 29, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 615, "col_offset": 25, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 616, "col_offset": 29, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 617, "col_offset": 29, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 620, "col_offset": 29, "nodeName": "get_state", "type": "Any"}, {"lineNumber": 624, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 631, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 661, "col_offset": 39, "nodeName": "controlled_segments", "type": "List[Tuple[str, int, bool]]"}, {"lineNumber": 663, "col_offset": 37, "nodeName": "num_observed_segments", "type": "List[Tuple[str, int]]"}, {"lineNumber": 693, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 694, "col_offset": 31, "nodeName": "get_inflow_rate", "type": "Any"}, {"lineNumber": 702, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 704, "col_offset": 12, "nodeName": "get_inflow_rate", "type": "Any"}, {"lineNumber": 741, "col_offset": 28, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 742, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 775, "col_offset": 11, "nodeName": "gym_space", "type": "Any"}, {"lineNumber": 776, "col_offset": 16, "nodeName": "gym_space", "type": "Any"}, {"lineNumber": 777, "col_offset": 16, "nodeName": "gym_space", "type": "Any"}, {"lineNumber": 811, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 811, "col_offset": 17, "nodeName": "get_observed_ids", "type": "Any"}, {"lineNumber": 812, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "num_rl_vehicles", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 217, "col_offset": 28, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 238, "col_offset": 30, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 244, "col_offset": 26, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 256, "col_offset": 28, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 258, "col_offset": 27, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 301, "col_offset": 28, "nodeName": "self", "type": "TestTwoLoopsMergeEnv"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "self", "type": "TestTwoLoopsMergeEnv"}, {"lineNumber": 325, "col_offset": 59, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 330, "col_offset": 26, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 368, "col_offset": 28, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 369, "col_offset": 25, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 389, "col_offset": 30, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 395, "col_offset": 26, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 397, "col_offset": 25, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 407, "col_offset": 28, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 408, "col_offset": 25, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 409, "col_offset": 27, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 469, "col_offset": 28, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 470, "col_offset": 25, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 505, "col_offset": 28, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 506, "col_offset": 25, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 507, "col_offset": 27, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 545, "col_offset": 28, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 546, "col_offset": 25, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 582, "col_offset": 28, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 583, "col_offset": 25, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 584, "col_offset": 27, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 610, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 611, "col_offset": 29, "nodeName": "env", "type": "Any"}, {"lineNumber": 612, "col_offset": 29, "nodeName": "env", "type": "Any"}, {"lineNumber": 615, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 616, "col_offset": 29, "nodeName": "env", "type": "Any"}, {"lineNumber": 617, "col_offset": 29, "nodeName": "env", "type": "Any"}, {"lineNumber": 620, "col_offset": 29, "nodeName": "env", "type": "Any"}, {"lineNumber": 624, "col_offset": 25, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 631, "col_offset": 25, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 694, "col_offset": 31, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 704, "col_offset": 12, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 743, "col_offset": 27, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 811, "col_offset": 17, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 32, "col_offset": 51, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 51, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 167, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 51, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 238, "col_offset": 30, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 244, "col_offset": 26, "nodeName": "env", "type": "Any"}, {"lineNumber": 245, "col_offset": 26, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 277, "col_offset": 34, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 330, "col_offset": 26, "nodeName": "env", "type": "Any"}, {"lineNumber": 331, "col_offset": 26, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 349, "col_offset": 51, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 389, "col_offset": 30, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 395, "col_offset": 26, "nodeName": "env", "type": "Any"}, {"lineNumber": 396, "col_offset": 26, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 397, "col_offset": 25, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 449, "col_offset": 51, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 524, "col_offset": 51, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 610, "col_offset": 25, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 611, "col_offset": 29, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 612, "col_offset": 29, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 615, "col_offset": 25, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 616, "col_offset": 29, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 617, "col_offset": 29, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 620, "col_offset": 29, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 694, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 704, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 743, "col_offset": 55, "nodeName": "new_add", "type": "Dict[str, int]"}, {"lineNumber": 811, "col_offset": 17, "nodeName": "env", "type": "Any"}, {"lineNumber": 32, "col_offset": 51, "nodeName": "LOOP_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "env", "type": "Any"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "env", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 117, "col_offset": 51, "nodeName": "LOOP_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 197, "col_offset": 51, "nodeName": "LOOP_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 238, "col_offset": 30, "nodeName": "env", "type": "Any"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 277, "col_offset": 34, "nodeName": "LM_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 331, "col_offset": 30, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 349, "col_offset": 51, "nodeName": "LOOP_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 389, "col_offset": 30, "nodeName": "env", "type": "Any"}, {"lineNumber": 396, "col_offset": 30, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 397, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 449, "col_offset": 51, "nodeName": "LOOP_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 524, "col_offset": 51, "nodeName": "MERGE_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 331, "col_offset": 30, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 396, "col_offset": 30, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "env", "type": "Any"}, {"lineNumber": 331, "col_offset": 30, "nodeName": "env", "type": "Any"}, {"lineNumber": 396, "col_offset": 30, "nodeName": "env", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "env", "type": "Any"}]