[{"lineNumber": 227, "col_offset": 0, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "test_ghost_edge", "type": "Callable[[Any], Any]"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 53, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 202, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 271, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "new_add", "type": "Dict[str, int]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.highway.HighwayNetwork, Dict[Any, Any]]]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 20, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.highway.HighwayNetwork, Dict[Any, Any]]]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "additional_params", "type": "Dict[str, int]"}, {"lineNumber": 246, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "new_add", "type": "Dict[str, int]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestBottleneckNetwork"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestFigureEightNetwork"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestTrafficLightGridNetwork"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestHighwayNetwork"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "TestHighwayNetwork"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "length", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TestHighwayNetwork"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestHighwayNetwork"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TestHighwayNetwork"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "length", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "TestHighwayNetwork"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "TestHighwayNetwork"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "TestHighwayNetwork"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "TestRingNetwork"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "TestMergeNetwork"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "TestMultiRingNetwork"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 246, "col_offset": 18, "nodeName": "additional_params", "type": "Dict[str, int]"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "key", "type": "str"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "network_class", "type": "Type[flow.networks.bottleneck.BottleneckNetwork]"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "BottleneckNetwork", "type": "Type[flow.networks.bottleneck.BottleneckNetwork]"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "FigureEightNetwork", "type": "Type[flow.networks.figure_eight.FigureEightNetwork]"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "TrafficLightGridNetwork", "type": "Type[flow.networks.traffic_light_grid.TrafficLightGridNetwork]"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "HighwayNetwork", "type": "Type[flow.networks.highway.HighwayNetwork]"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "network", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "network", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "network", "type": "Any"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "network", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "network", "type": "Any"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "network", "type": "Any"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "network", "type": "Any"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "RingNetwork", "type": "Type[flow.networks.ring.RingNetwork]"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "MergeNetwork", "type": "Type[flow.networks.merge.MergeNetwork]"}, {"lineNumber": 210, "col_offset": 30, "nodeName": "MultiRingNetwork", "type": "Type[flow.networks.multi_ring.MultiRingNetwork]"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 252, "col_offset": 25, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 253, "col_offset": 27, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 253, "col_offset": 55, "nodeName": "new_add", "type": "Dict[str, int]"}]