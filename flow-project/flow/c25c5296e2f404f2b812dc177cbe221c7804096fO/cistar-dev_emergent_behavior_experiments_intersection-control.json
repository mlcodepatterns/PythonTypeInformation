[{"lineNumber": 29, "col_offset": 0, "nodeName": "sumo_binary", "type": "str"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "cfg_params", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "initial_config", "type": "Dict[str, bool]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "num_cars", "type": "int"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "num_auto", "type": "int"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "exp_type", "type": "int"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "exp_tag", "type": "str"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 99, "col_offset": 0, "nodeName": "env", "type": "Any"}, {"lineNumber": 101, "col_offset": 0, "nodeName": "env", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "basicConfig", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "stub", "type": "Any"}, {"lineNumber": 48, "col_offset": 3, "nodeName": "exp_type", "type": "int"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "Figure8Scenario", "type": "Any"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "exp_tag", "type": "str"}, {"lineNumber": 97, "col_offset": 36, "nodeName": "type_params", "type": "Dict[str, Tuple[int, Tuple[Any, Dict[nothing, nothing]], Tuple[Any, Dict[nothing, nothing]], int]]"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "net_params", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 97, "col_offset": 61, "nodeName": "cfg_params", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 99, "col_offset": 6, "nodeName": "SimpleAccelerationEnvironment", "type": "Any"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "env_params", "type": "Dict[str, int]"}, {"lineNumber": 99, "col_offset": 48, "nodeName": "sumo_binary", "type": "str"}, {"lineNumber": 99, "col_offset": 61, "nodeName": "sumo_params", "type": "Dict[str, Union[str, bool, float]]"}, {"lineNumber": 99, "col_offset": 74, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 101, "col_offset": 6, "nodeName": "normalize", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "baseline", "type": "Any"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "logging", "type": "module"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "INFO", "type": "int"}, {"lineNumber": 24, "col_offset": 5, "nodeName": "globals", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "num_auto", "type": "int"}, {"lineNumber": 57, "col_offset": 5, "nodeName": "exp_type", "type": "int"}, {"lineNumber": 97, "col_offset": 88, "nodeName": "initial_config", "type": "Dict[str, bool]"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "GaussianMLPPolicy", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "LinearFeatureBaseline", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "TRPO", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "run_experiment_lite", "type": "Any"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "logging", "type": "module"}, {"lineNumber": 43, "col_offset": 33, "nodeName": "RLController", "type": "Any"}, {"lineNumber": 43, "col_offset": 53, "nodeName": "StaticLaneChanger", "type": "Any"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "num_cars", "type": "int"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "num_auto", "type": "int"}, {"lineNumber": 44, "col_offset": 45, "nodeName": "IDMController", "type": "Any"}, {"lineNumber": 44, "col_offset": 66, "nodeName": "StaticLaneChanger", "type": "Any"}, {"lineNumber": 65, "col_offset": 5, "nodeName": "exp_type", "type": "int"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 95, "col_offset": 40, "nodeName": "num_auto", "type": "int"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "spec", "type": "Any"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "spec", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "policy", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "baseline", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "seed", "type": "int"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "exp_tag", "type": "str"}, {"lineNumber": 77, "col_offset": 5, "nodeName": "exp_type", "type": "int"}, {"lineNumber": 95, "col_offset": 10, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "num_cars", "type": "int"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "env", "type": "Any"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "env", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "algo", "type": "Any"}]