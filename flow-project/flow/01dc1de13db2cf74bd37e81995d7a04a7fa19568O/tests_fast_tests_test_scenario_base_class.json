[{"lineNumber": 18, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 412, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 476, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 568, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 600, "col_offset": 38, "nodeName": "TestEvenStartPosVariableLanes", "type": "Type[TestEvenStartPosVariableLanes]"}, {"lineNumber": 618, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 664, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 710, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 754, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 777, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 801, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 412, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 476, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 568, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 618, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 664, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 710, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 754, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 777, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 801, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 870, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "edge_1", "type": "str"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "pos_1", "type": "float"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "edge_2", "type": "str"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "pos_2", "type": "float"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "edge", "type": "str"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "pos", "type": "float"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "x1", "type": "int"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "x2", "type": "float"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "x0", "type": "int"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "bunching", "type": "int"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "bunching", "type": "int"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "veh_lanes", "type": "List[Any]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "inf", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "edge", "type": "str"}, {"lineNumber": 385, "col_offset": 20, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "spacing", "type": "str"}, {"lineNumber": 492, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 524, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 543, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 563, "col_offset": 12, "nodeName": "edge", "type": "str"}, {"lineNumber": 563, "col_offset": 20, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 610, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 679, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 725, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 767, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "edge_list", "type": "Any"}, {"lineNumber": 790, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 793, "col_offset": 8, "nodeName": "junction_list", "type": "Any"}, {"lineNumber": 814, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 815, "col_offset": 8, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 824, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 825, "col_offset": 8, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 834, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 835, "col_offset": 8, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 844, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 871, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "_", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 49, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 196, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 199, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 200, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 214, "col_offset": 66, "nodeName": "bunching", "type": "int"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 228, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 235, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 240, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 260, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 263, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 267, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 269, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 277, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 277, "col_offset": 23, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 287, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 300, "col_offset": 29, "nodeName": "randint", "type": "Any"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 304, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 321, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 324, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 325, "col_offset": 16, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 330, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 330, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 338, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 338, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 358, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 361, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 365, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 376, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 377, "col_offset": 26, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 377, "col_offset": 42, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 382, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 383, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 400, "col_offset": 21, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 402, "col_offset": 35, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 403, "col_offset": 37, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 406, "col_offset": 21, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 422, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 429, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 432, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 444, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 445, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 450, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 457, "col_offset": 15, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 481, "col_offset": 49, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 492, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 495, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 503, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 520, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 521, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 524, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 535, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 539, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 543, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 554, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 555, "col_offset": 26, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 555, "col_offset": 42, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 560, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 561, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 571, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 578, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 582, "col_offset": 29, "nodeName": "variable_lanes_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, tests.setup_scripts.VariableLanesScenario]]"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 596, "col_offset": 16, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 603, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 610, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 614, "col_offset": 29, "nodeName": "variable_lanes_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, tests.setup_scripts.VariableLanesScenario]]"}, {"lineNumber": 633, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 636, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 636, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 653, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 656, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 656, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 679, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 682, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 682, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 687, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 699, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 702, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 702, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 725, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 728, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 728, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 733, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 745, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 748, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 748, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 748, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 762, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 762, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 762, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 767, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 770, "col_offset": 20, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 774, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 774, "col_offset": 30, "nodeName": "edge_list", "type": "Any"}, {"lineNumber": 774, "col_offset": 41, "nodeName": "expected_edge_list", "type": "List[str]"}, {"lineNumber": 785, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 785, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 785, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 790, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 793, "col_offset": 24, "nodeName": "get_junction_list", "type": "Any"}, {"lineNumber": 798, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 798, "col_offset": 30, "nodeName": "junction_list", "type": "Any"}, {"lineNumber": 798, "col_offset": 45, "nodeName": "expected_junction_list", "type": "List[str]"}, {"lineNumber": 813, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 813, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 813, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 814, "col_offset": 20, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 817, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 817, "col_offset": 30, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 817, "col_offset": 41, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 823, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 823, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 823, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 824, "col_offset": 20, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 827, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 827, "col_offset": 30, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 827, "col_offset": 41, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 833, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 833, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 833, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 834, "col_offset": 20, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 837, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 837, "col_offset": 30, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 837, "col_offset": 41, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 843, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 843, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 843, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 844, "col_offset": 20, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 847, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 847, "col_offset": 30, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 847, "col_offset": 41, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 854, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 854, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.highway.HighwayScenario"}, {"lineNumber": 854, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.HighwayScenario]]"}, {"lineNumber": 855, "col_offset": 20, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 857, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 864, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 864, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.highway.HighwayScenario"}, {"lineNumber": 864, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.HighwayScenario]]"}, {"lineNumber": 865, "col_offset": 20, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 867, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 871, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "get_x", "type": "Any"}, {"lineNumber": 37, "col_offset": 57, "nodeName": "edge_1", "type": "str"}, {"lineNumber": 37, "col_offset": 65, "nodeName": "pos_1", "type": "float"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "get_x", "type": "Any"}, {"lineNumber": 42, "col_offset": 57, "nodeName": "edge_2", "type": "str"}, {"lineNumber": 42, "col_offset": 65, "nodeName": "pos_2", "type": "float"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "get_x", "type": "Any"}, {"lineNumber": 47, "col_offset": 57, "nodeName": "edge", "type": "str"}, {"lineNumber": 47, "col_offset": 63, "nodeName": "pos", "type": "float"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "x1", "type": "int"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "x2", "type": "float"}, {"lineNumber": 99, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 162, "col_offset": 42, "nodeName": "x0", "type": "int"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 179, "col_offset": 37, "nodeName": "x0", "type": "int"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 193, "col_offset": 48, "nodeName": "bunching", "type": "int"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 199, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 200, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 206, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 225, "col_offset": 48, "nodeName": "bunching", "type": "int"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 231, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 235, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 240, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 241, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 260, "col_offset": 58, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 267, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 287, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 287, "col_offset": 31, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 300, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 301, "col_offset": 58, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 308, "col_offset": 21, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 308, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 308, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 308, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 321, "col_offset": 58, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 325, "col_offset": 16, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 342, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 345, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 358, "col_offset": 58, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 365, "col_offset": 22, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 376, "col_offset": 58, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 377, "col_offset": 42, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 378, "col_offset": 41, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 382, "col_offset": 58, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 400, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 402, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 402, "col_offset": 29, "nodeName": "pos", "type": "Any"}, {"lineNumber": 402, "col_offset": 35, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 403, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 403, "col_offset": 29, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 403, "col_offset": 37, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 406, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 408, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 408, "col_offset": 29, "nodeName": "pos", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 409, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 409, "col_offset": 29, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 433, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 433, "col_offset": 52, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 444, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 445, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 450, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 451, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 456, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 461, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 492, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 504, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 505, "col_offset": 27, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 506, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 524, "col_offset": 22, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 526, "col_offset": 28, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 536, "col_offset": 49, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 543, "col_offset": 22, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 544, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 554, "col_offset": 58, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 555, "col_offset": 42, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 556, "col_offset": 41, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 560, "col_offset": 58, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 564, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 583, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 583, "col_offset": 46, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 596, "col_offset": 16, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 596, "col_offset": 44, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 597, "col_offset": 25, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 615, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 615, "col_offset": 46, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 633, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 636, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 638, "col_offset": 25, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 641, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 641, "col_offset": 31, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 654, "col_offset": 55, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 656, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 659, "col_offset": 12, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 661, "col_offset": 12, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 679, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 682, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 684, "col_offset": 31, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 687, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 687, "col_offset": 31, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 700, "col_offset": 55, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 702, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 705, "col_offset": 12, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 706, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 707, "col_offset": 12, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 725, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 728, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 730, "col_offset": 25, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 733, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 733, "col_offset": 31, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 746, "col_offset": 55, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 748, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 750, "col_offset": 25, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 751, "col_offset": 25, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 762, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 770, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 774, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 785, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 793, "col_offset": 24, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 798, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 814, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 817, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 824, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 827, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 834, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 837, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 844, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 847, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 855, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 857, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 865, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 867, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 137, "col_offset": 42, "nodeName": "ids", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 170, "col_offset": 42, "nodeName": "ids", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 179, "col_offset": 42, "nodeName": "length", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 199, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 201, "col_offset": 32, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 201, "col_offset": 42, "nodeName": "ids", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 214, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 236, "col_offset": 32, "nodeName": "pos", "type": "Any"}, {"lineNumber": 236, "col_offset": 39, "nodeName": "startpos", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 267, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "length", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 300, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 308, "col_offset": 21, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 309, "col_offset": 35, "nodeName": "veh_lanes", "type": "List[Any]"}, {"lineNumber": 325, "col_offset": 16, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 342, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 343, "col_offset": 23, "nodeName": "length", "type": "Any"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 365, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 366, "col_offset": 67, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 386, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 387, "col_offset": 29, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 400, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 401, "col_offset": 27, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 402, "col_offset": 35, "nodeName": "k", "type": "Any"}, {"lineNumber": 403, "col_offset": 37, "nodeName": "k", "type": "Any"}, {"lineNumber": 406, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 407, "col_offset": 27, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 425, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 426, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 437, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 444, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 446, "col_offset": 32, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 446, "col_offset": 42, "nodeName": "ids", "type": "Any"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 461, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 498, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 499, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 524, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 525, "col_offset": 28, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 525, "col_offset": 56, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 526, "col_offset": 28, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 543, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 544, "col_offset": 12, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 544, "col_offset": 67, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 564, "col_offset": 12, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 564, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 565, "col_offset": 29, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 574, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 575, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 596, "col_offset": 16, "nodeName": "k", "type": "Any"}, {"lineNumber": 596, "col_offset": 44, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 606, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 607, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 638, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 641, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 659, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 661, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 684, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 687, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 705, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 707, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 730, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 733, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 750, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 751, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 770, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 793, "col_offset": 24, "nodeName": "k", "type": "Any"}, {"lineNumber": 814, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 824, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 834, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 844, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 855, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 856, "col_offset": 12, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 857, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 857, "col_offset": 28, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 865, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 866, "col_offset": 12, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 867, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 867, "col_offset": 28, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 149, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 149, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 179, "col_offset": 42, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 182, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 199, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 206, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 206, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 210, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 241, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 246, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 246, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 267, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 271, "col_offset": 59, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 271, "col_offset": 69, "nodeName": "ids", "type": "Any"}, {"lineNumber": 281, "col_offset": 23, "nodeName": "append", "type": "Any"}, {"lineNumber": 281, "col_offset": 66, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 288, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 308, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 325, "col_offset": 16, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 332, "col_offset": 59, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 332, "col_offset": 69, "nodeName": "ids", "type": "Any"}, {"lineNumber": 342, "col_offset": 23, "nodeName": "append", "type": "Any"}, {"lineNumber": 342, "col_offset": 66, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 343, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 345, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 365, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 366, "col_offset": 28, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 366, "col_offset": 56, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 386, "col_offset": 33, "nodeName": "get_ids_by_edge", "type": "Any"}, {"lineNumber": 386, "col_offset": 68, "nodeName": "edge", "type": "str"}, {"lineNumber": 387, "col_offset": 35, "nodeName": "edge", "type": "str"}, {"lineNumber": 400, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 402, "col_offset": 35, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 403, "col_offset": 37, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 406, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 444, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 451, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 451, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 451, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 456, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 524, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 525, "col_offset": 28, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 543, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 544, "col_offset": 28, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 544, "col_offset": 56, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 564, "col_offset": 33, "nodeName": "get_ids_by_edge", "type": "Any"}, {"lineNumber": 564, "col_offset": 68, "nodeName": "edge", "type": "str"}, {"lineNumber": 565, "col_offset": 35, "nodeName": "edge", "type": "str"}, {"lineNumber": 596, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 596, "col_offset": 44, "nodeName": "k", "type": "Any"}, {"lineNumber": 597, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 597, "col_offset": 38, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 597, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 638, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 641, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 659, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 661, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 684, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 687, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 705, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 707, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 730, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 733, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 750, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 751, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 770, "col_offset": 20, "nodeName": "env", "type": "Any"}, {"lineNumber": 793, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 814, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 824, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 834, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 844, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 855, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 856, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 865, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 866, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 149, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 179, "col_offset": 42, "nodeName": "k", "type": "Any"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 199, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 210, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 246, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 267, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 272, "col_offset": 58, "nodeName": "i", "type": "int"}, {"lineNumber": 281, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 281, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 284, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 307, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 308, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 325, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 328, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 333, "col_offset": 58, "nodeName": "i", "type": "int"}, {"lineNumber": 342, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 342, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 343, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 345, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 345, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 365, "col_offset": 22, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 366, "col_offset": 28, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 386, "col_offset": 33, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 400, "col_offset": 21, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 402, "col_offset": 35, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 403, "col_offset": 37, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 406, "col_offset": 21, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 444, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 456, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 456, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 456, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 461, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 461, "col_offset": 31, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 473, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 524, "col_offset": 22, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 525, "col_offset": 28, "nodeName": "k", "type": "Any"}, {"lineNumber": 543, "col_offset": 22, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 544, "col_offset": 28, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 564, "col_offset": 33, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 596, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 596, "col_offset": 44, "nodeName": "env", "type": "Any"}, {"lineNumber": 597, "col_offset": 53, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 638, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 641, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 659, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 661, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 684, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 687, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 705, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 707, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 730, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 733, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 750, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 751, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 770, "col_offset": 20, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 793, "col_offset": 24, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 856, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 866, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 179, "col_offset": 42, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 272, "col_offset": 47, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 281, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 281, "col_offset": 49, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 284, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 284, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 288, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 288, "col_offset": 45, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 308, "col_offset": 21, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 333, "col_offset": 19, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 333, "col_offset": 47, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 342, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 342, "col_offset": 49, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 343, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 345, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 345, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 366, "col_offset": 28, "nodeName": "k", "type": "Any"}, {"lineNumber": 386, "col_offset": 33, "nodeName": "k", "type": "Any"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 456, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 462, "col_offset": 19, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 462, "col_offset": 36, "nodeName": "mean", "type": "Any"}, {"lineNumber": 462, "col_offset": 44, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 467, "col_offset": 28, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 470, "col_offset": 67, "nodeName": "pos_i", "type": "Any"}, {"lineNumber": 470, "col_offset": 76, "nodeName": "pos", "type": "List[Any]"}, {"lineNumber": 473, "col_offset": 20, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 473, "col_offset": 36, "nodeName": "any", "type": "Any"}, {"lineNumber": 525, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 544, "col_offset": 28, "nodeName": "k", "type": "Any"}, {"lineNumber": 564, "col_offset": 33, "nodeName": "k", "type": "Any"}, {"lineNumber": 596, "col_offset": 44, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 856, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 866, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 179, "col_offset": 42, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 281, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 281, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 333, "col_offset": 19, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 342, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 342, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 343, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 366, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 386, "col_offset": 33, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 462, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 462, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 470, "col_offset": 24, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 470, "col_offset": 53, "nodeName": "pos_i", "type": "Any"}, {"lineNumber": 473, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 525, "col_offset": 28, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 544, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 564, "col_offset": 33, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 333, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 366, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 386, "col_offset": 33, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 467, "col_offset": 39, "nodeName": "ids", "type": "Any"}, {"lineNumber": 467, "col_offset": 51, "nodeName": "ids", "type": "Any"}, {"lineNumber": 470, "col_offset": 24, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 473, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 473, "col_offset": 52, "nodeName": "rel_pos", "type": "List[Any]"}, {"lineNumber": 544, "col_offset": 28, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 564, "col_offset": 33, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 333, "col_offset": 19, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 467, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 470, "col_offset": 24, "nodeName": "k", "type": "Any"}, {"lineNumber": 473, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 333, "col_offset": 19, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 467, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 470, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 470, "col_offset": 24, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}]