[{"lineNumber": 18, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 388, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 451, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 522, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 563, "col_offset": 38, "nodeName": "TestEvenStartPosVariableLanes", "type": "Type[TestEvenStartPosVariableLanes]"}, {"lineNumber": 581, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 627, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 673, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 717, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 744, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 772, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 50, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 388, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 451, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 522, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 581, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 627, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 673, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 717, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 744, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 772, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 842, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "edge_1", "type": "str"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "pos_1", "type": "float"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "edge_2", "type": "str"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "pos_2", "type": "float"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "edge", "type": "str"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "pos", "type": "float"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "x1", "type": "int"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "x2", "type": "float"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "x0", "type": "int"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "bunching", "type": "int"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "bunching", "type": "int"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 266, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "veh_lanes", "type": "List[Any]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 317, "col_offset": 29, "nodeName": "inf", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "spacing", "type": "str"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 509, "col_offset": 8, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "expected_num_vehicles", "type": "Any"}, {"lineNumber": 551, "col_offset": 32, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 596, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 733, "col_offset": 8, "nodeName": "edge_list", "type": "Any"}, {"lineNumber": 757, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 760, "col_offset": 8, "nodeName": "junction_list", "type": "Any"}, {"lineNumber": 785, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 797, "col_offset": 8, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 806, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 807, "col_offset": 8, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 816, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 817, "col_offset": 8, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 843, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "_", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 59, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 49, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 194, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 197, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 198, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 211, "col_offset": 66, "nodeName": "bunching", "type": "int"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 222, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 225, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 232, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 237, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 257, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 260, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 264, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 266, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 266, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 274, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 274, "col_offset": 23, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 284, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 297, "col_offset": 29, "nodeName": "randint", "type": "Any"}, {"lineNumber": 298, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 301, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 304, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 317, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 318, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 321, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 325, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 327, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 335, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 335, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 355, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 358, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 362, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 376, "col_offset": 21, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 378, "col_offset": 35, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 379, "col_offset": 37, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 382, "col_offset": 21, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 398, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 405, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 408, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 420, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 421, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 425, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 432, "col_offset": 15, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 456, "col_offset": 49, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 467, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 470, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 478, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 495, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 496, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 499, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 510, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 514, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 518, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 525, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 532, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 536, "col_offset": 29, "nodeName": "variable_lanes_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, tests.setup_scripts.VariableLanesScenario]]"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 551, "col_offset": 32, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 553, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 556, "col_offset": 25, "nodeName": "expected_num_vehicles", "type": "Any"}, {"lineNumber": 556, "col_offset": 48, "nodeName": "actual_num_vehicles", "type": "int"}, {"lineNumber": 559, "col_offset": 16, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 566, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 573, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 577, "col_offset": 29, "nodeName": "variable_lanes_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, tests.setup_scripts.VariableLanesScenario]]"}, {"lineNumber": 596, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 599, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 599, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 616, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 619, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 619, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 642, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 645, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 645, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 645, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 650, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 662, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 665, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 665, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 665, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 688, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 691, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 691, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 691, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 708, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 711, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 711, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 725, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 725, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 725, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 733, "col_offset": 20, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 741, "col_offset": 30, "nodeName": "edge_list", "type": "Any"}, {"lineNumber": 741, "col_offset": 41, "nodeName": "expected_edge_list", "type": "List[str]"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 752, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 752, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 757, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 760, "col_offset": 24, "nodeName": "get_junction_list", "type": "Any"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 769, "col_offset": 30, "nodeName": "junction_list", "type": "Any"}, {"lineNumber": 769, "col_offset": 45, "nodeName": "expected_junction_list", "type": "List[str]"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 784, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 784, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 785, "col_offset": 20, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 789, "col_offset": 30, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 789, "col_offset": 41, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 795, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 795, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 795, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 796, "col_offset": 20, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 799, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 799, "col_offset": 30, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 799, "col_offset": 41, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 805, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 805, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 805, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 806, "col_offset": 20, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 809, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 809, "col_offset": 30, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 809, "col_offset": 41, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 815, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 815, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 815, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 816, "col_offset": 20, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 819, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 819, "col_offset": 30, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 819, "col_offset": 41, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 826, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 826, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.highway.HighwayScenario"}, {"lineNumber": 826, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.HighwayScenario]]"}, {"lineNumber": 827, "col_offset": 20, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 829, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 836, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 836, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.highway.HighwayScenario"}, {"lineNumber": 836, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.HighwayScenario]]"}, {"lineNumber": 837, "col_offset": 20, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 839, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 843, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "get_x", "type": "Any"}, {"lineNumber": 37, "col_offset": 57, "nodeName": "edge_1", "type": "str"}, {"lineNumber": 37, "col_offset": 65, "nodeName": "pos_1", "type": "float"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "get_x", "type": "Any"}, {"lineNumber": 42, "col_offset": 57, "nodeName": "edge_2", "type": "str"}, {"lineNumber": 42, "col_offset": 65, "nodeName": "pos_2", "type": "float"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "get_x", "type": "Any"}, {"lineNumber": 47, "col_offset": 57, "nodeName": "edge", "type": "str"}, {"lineNumber": 47, "col_offset": 63, "nodeName": "pos", "type": "float"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "x1", "type": "int"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "x2", "type": "float"}, {"lineNumber": 99, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 113, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 161, "col_offset": 42, "nodeName": "x0", "type": "int"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 168, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 177, "col_offset": 37, "nodeName": "x0", "type": "int"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 191, "col_offset": 48, "nodeName": "bunching", "type": "int"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 197, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 198, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 222, "col_offset": 48, "nodeName": "bunching", "type": "int"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 228, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 232, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 237, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 238, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 257, "col_offset": 58, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 264, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 281, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 284, "col_offset": 31, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 297, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 298, "col_offset": 58, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 304, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 305, "col_offset": 21, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 305, "col_offset": 48, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 305, "col_offset": 60, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 305, "col_offset": 70, "nodeName": "ids", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 318, "col_offset": 58, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 325, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 339, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 342, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 355, "col_offset": 58, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 362, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 376, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 378, "col_offset": 29, "nodeName": "pos", "type": "Any"}, {"lineNumber": 378, "col_offset": 35, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 379, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 379, "col_offset": 29, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 379, "col_offset": 37, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 382, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 384, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 384, "col_offset": 29, "nodeName": "pos", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 385, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 385, "col_offset": 29, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 409, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 409, "col_offset": 52, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 420, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 421, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 425, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 426, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 427, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 431, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 436, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 467, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 479, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 480, "col_offset": 27, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 481, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 499, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 501, "col_offset": 28, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 511, "col_offset": 49, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 518, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 537, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 537, "col_offset": 46, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 551, "col_offset": 32, "nodeName": "env", "type": "Any"}, {"lineNumber": 553, "col_offset": 16, "nodeName": "getIDList", "type": "Any"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 559, "col_offset": 16, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 559, "col_offset": 43, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 560, "col_offset": 25, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 578, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 578, "col_offset": 46, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 596, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 599, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 601, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 601, "col_offset": 25, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 604, "col_offset": 31, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 617, "col_offset": 55, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 619, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 621, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 622, "col_offset": 12, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 624, "col_offset": 12, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 642, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 645, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 647, "col_offset": 31, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 650, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 650, "col_offset": 31, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 663, "col_offset": 55, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 665, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 668, "col_offset": 12, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 669, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 670, "col_offset": 12, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 688, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 691, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 693, "col_offset": 25, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 696, "col_offset": 31, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 709, "col_offset": 55, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 711, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 713, "col_offset": 25, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 714, "col_offset": 25, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 725, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 733, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 760, "col_offset": 24, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 785, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 796, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 799, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 806, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 809, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 816, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 819, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 827, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 829, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 837, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 839, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 136, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 136, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 136, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 168, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 168, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 168, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 177, "col_offset": 42, "nodeName": "length", "type": "Any"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 197, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 198, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 198, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 198, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 198, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 211, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 233, "col_offset": 32, "nodeName": "pos", "type": "Any"}, {"lineNumber": 233, "col_offset": 39, "nodeName": "startpos", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 264, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "length", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 297, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 304, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 305, "col_offset": 21, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 306, "col_offset": 35, "nodeName": "veh_lanes", "type": "List[Any]"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 325, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 339, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 340, "col_offset": 23, "nodeName": "length", "type": "Any"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 362, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 363, "col_offset": 66, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 376, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 377, "col_offset": 27, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 378, "col_offset": 35, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 379, "col_offset": 37, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 382, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 383, "col_offset": 27, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 401, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 402, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 420, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 421, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 421, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 421, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 421, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 427, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 436, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 473, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 474, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 499, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 500, "col_offset": 12, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 500, "col_offset": 28, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 500, "col_offset": 55, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 501, "col_offset": 28, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 518, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 519, "col_offset": 66, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 528, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 529, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 541, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 551, "col_offset": 32, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 553, "col_offset": 16, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 559, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 559, "col_offset": 43, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 569, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 570, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 601, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 604, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 622, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 624, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 647, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 650, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 668, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 670, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 693, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 696, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 713, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 714, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 733, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 756, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 760, "col_offset": 24, "nodeName": "k", "type": "Any"}, {"lineNumber": 785, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 796, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 806, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 816, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 827, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 828, "col_offset": 12, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 829, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 829, "col_offset": 28, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 837, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 838, "col_offset": 12, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 839, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 839, "col_offset": 28, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 148, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 177, "col_offset": 42, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 180, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 197, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 198, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 238, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 238, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 243, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 243, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 264, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 268, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 268, "col_offset": 59, "nodeName": "ids", "type": "Any"}, {"lineNumber": 278, "col_offset": 23, "nodeName": "append", "type": "Any"}, {"lineNumber": 278, "col_offset": 66, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 281, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 285, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 304, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 305, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 325, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 329, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 329, "col_offset": 59, "nodeName": "ids", "type": "Any"}, {"lineNumber": 339, "col_offset": 23, "nodeName": "append", "type": "Any"}, {"lineNumber": 339, "col_offset": 66, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 340, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 342, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 362, "col_offset": 22, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 363, "col_offset": 28, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 363, "col_offset": 55, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 376, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 378, "col_offset": 35, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 379, "col_offset": 37, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 382, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 420, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 421, "col_offset": 28, "nodeName": "env", "type": "Any"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 426, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 426, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 427, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 431, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 499, "col_offset": 22, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 500, "col_offset": 28, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 518, "col_offset": 22, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 519, "col_offset": 28, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 519, "col_offset": 55, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 553, "col_offset": 16, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 559, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 559, "col_offset": 43, "nodeName": "env", "type": "Any"}, {"lineNumber": 560, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 560, "col_offset": 38, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 560, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 601, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 604, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 622, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 624, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 647, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 650, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 668, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 670, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 693, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 696, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 713, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 714, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 733, "col_offset": 20, "nodeName": "env", "type": "Any"}, {"lineNumber": 760, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 785, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 796, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 806, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 816, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 827, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 828, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 837, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 838, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 148, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 177, "col_offset": 42, "nodeName": "k", "type": "Any"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 198, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 207, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 243, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 269, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 278, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 278, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 281, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 281, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 305, "col_offset": 21, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 330, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 339, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 339, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 340, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 342, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 342, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 363, "col_offset": 28, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 376, "col_offset": 21, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 382, "col_offset": 21, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 421, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 427, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 431, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 431, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 431, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 436, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 436, "col_offset": 31, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 448, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 500, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 519, "col_offset": 28, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 553, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 559, "col_offset": 43, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 560, "col_offset": 53, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 601, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 604, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 622, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 624, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 647, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 650, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 668, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 670, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 693, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 696, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 713, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 714, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 733, "col_offset": 20, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 760, "col_offset": 24, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 828, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 838, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 177, "col_offset": 42, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 269, "col_offset": 46, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 278, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 278, "col_offset": 49, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 281, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 281, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 285, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 285, "col_offset": 45, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 330, "col_offset": 19, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 330, "col_offset": 46, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 339, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 339, "col_offset": 49, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 340, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 342, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 342, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 363, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 427, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 431, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 437, "col_offset": 19, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 437, "col_offset": 36, "nodeName": "mean", "type": "Any"}, {"lineNumber": 437, "col_offset": 44, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 442, "col_offset": 28, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 445, "col_offset": 67, "nodeName": "pos_i", "type": "Any"}, {"lineNumber": 445, "col_offset": 76, "nodeName": "pos", "type": "List[Any]"}, {"lineNumber": 448, "col_offset": 20, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 448, "col_offset": 36, "nodeName": "any", "type": "Any"}, {"lineNumber": 500, "col_offset": 28, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 519, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 553, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 828, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 838, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 177, "col_offset": 42, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 278, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 278, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 330, "col_offset": 19, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 339, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 339, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 340, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 363, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 437, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 437, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 445, "col_offset": 24, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 445, "col_offset": 53, "nodeName": "pos_i", "type": "Any"}, {"lineNumber": 448, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 519, "col_offset": 28, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 330, "col_offset": 19, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 442, "col_offset": 39, "nodeName": "ids", "type": "Any"}, {"lineNumber": 442, "col_offset": 51, "nodeName": "ids", "type": "Any"}, {"lineNumber": 445, "col_offset": 24, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 448, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 448, "col_offset": 52, "nodeName": "rel_pos", "type": "List[Any]"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 330, "col_offset": 19, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 442, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 445, "col_offset": 24, "nodeName": "k", "type": "Any"}, {"lineNumber": 448, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 442, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 445, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 445, "col_offset": 24, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}]