[{"lineNumber": 14, "col_offset": 0, "nodeName": "parse_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "flags", "type": "argparse.Namespace"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "module", "type": "module"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "render", "type": "bool"}, {"lineNumber": 73, "col_offset": 7, "nodeName": "gen_emission", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "exp", "type": "flow.core.experiment.Experiment"}, {"lineNumber": 22, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "parse_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "__import__", "type": "Callable[..., module]"}, {"lineNumber": 63, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "callables", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "custom_callables", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "callables", "type": "None"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "no_render", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 70, "col_offset": 43, "nodeName": "aimsun", "type": "Any"}, {"lineNumber": 73, "col_offset": 7, "nodeName": "flags", "type": "argparse.Namespace"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "emission_path", "type": "str"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "json_filename", "type": "Any"}, {"lineNumber": 83, "col_offset": 10, "nodeName": "Experiment", "type": "Type[flow.core.experiment.Experiment]"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 83, "col_offset": 34, "nodeName": "callables", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "run", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "num_runs", "type": "Any"}, {"lineNumber": 22, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "RawDescriptionHelpFormatter", "type": "Type[argparse.RawDescriptionHelpFormatter]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "parse_known_args", "type": "Callable[..., Tuple[argparse.Namespace, List[str]]]"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "argv", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "module", "type": "module"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "exp_config", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "module", "type": "module"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "exp_config", "type": "Any"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "flags", "type": "argparse.Namespace"}, {"lineNumber": 70, "col_offset": 43, "nodeName": "flags", "type": "argparse.Namespace"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 78, "col_offset": 99, "nodeName": "outfile", "type": "file"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "exp", "type": "flow.core.experiment.Experiment"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "flags", "type": "argparse.Namespace"}, {"lineNumber": 86, "col_offset": 43, "nodeName": "gen_emission", "type": "Any"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "argparse", "type": "module"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "sys", "type": "module"}, {"lineNumber": 59, "col_offset": 56, "nodeName": "exp_config", "type": "Any"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "flags", "type": "argparse.Namespace"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "flags", "type": "argparse.Namespace"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "module", "type": "module"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "exp_config", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "outfile", "type": "file"}, {"lineNumber": 86, "col_offset": 43, "nodeName": "flags", "type": "argparse.Namespace"}, {"lineNumber": 59, "col_offset": 56, "nodeName": "flags", "type": "argparse.Namespace"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "flags", "type": "argparse.Namespace"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "json", "type": "module"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "FlowParamsEncoder", "type": "Type[flow.utils.rllib.FlowParamsEncoder]"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "emission_path", "type": "Any"}, {"lineNumber": 78, "col_offset": 65, "nodeName": "json_filename", "type": "Any"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "flow_params", "type": "Any"}]