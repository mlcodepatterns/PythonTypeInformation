[{"lineNumber": 11, "col_offset": 0, "nodeName": "E", "type": "Any"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "Element", "type": "Any"}, {"lineNumber": 14, "col_offset": 26, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "etree", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "merge_in_len", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "merge_out_len", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "length", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "merge_out_len", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "type_params", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "type_params", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "type_list", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "num_cars", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "merge_in_len", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "merge_out_len", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "merge_in_angle", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "merge_out_angle", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "nodes", "type": "List[Dict[str, str]]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "merge_in_len", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "merge_out_len", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "in_angle", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "out_angle", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "r", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "edges", "type": "List[Dict[str, str]]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "types", "type": "List[Dict[str, str]]"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "types", "type": "List[Dict[str, str]]"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "rts", "type": "Dict[str, List[str]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 31, "col_offset": 37, "nodeName": "net_path", "type": "Any"}, {"lineNumber": 31, "col_offset": 47, "nodeName": "cfg_path", "type": "Any"}, {"lineNumber": 31, "col_offset": 57, "nodeName": "base", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "LoopMergesGenerator"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "LoopMergesGenerator"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "type_list", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "routes", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "vehicle_ids", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "positions", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "ring_positions", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "merge_positions", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "i_merge", "type": "int"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "i_ring", "type": "int"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "merge_out_len", "type": "Any"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 137, "col_offset": 24, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 141, "col_offset": 14, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "merge_out_len", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "merge_out_len", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "merge_in_len", "type": "Any"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "merge_out_len", "type": "Any"}, {"lineNumber": 37, "col_offset": 57, "nodeName": "r", "type": "Any"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "base", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "length", "type": "Any"}, {"lineNumber": 38, "col_offset": 49, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "tup", "type": "Any"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "tup", "type": "Any"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "type_params", "type": "Any"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "makexml", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "tp", "type": "Any"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "type_list", "type": "List[Any]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "num_cars", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "positions", "type": "Any"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "positions", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "vehicle_ids", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "indx_type", "type": "int"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "type_depart_speed", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "printxml", "type": "Any"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "routes", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "self", "type": "LoopMergesGenerator"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 37, "col_offset": 52, "nodeName": "pi", "type": "Any"}, {"lineNumber": 50, "col_offset": 43, "nodeName": "SumoController", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "sumo_attributes", "type": "Dict[Union[str, Any], Union[Any, str]]"}, {"lineNumber": 52, "col_offset": 44, "nodeName": "tp", "type": "Any"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "key", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "tp", "type": "Any"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "type_list", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "type_count", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "j", "type": "int"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "vehicle_ids", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "type", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "id", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "type", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "i_merge", "type": "int"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "i_ring", "type": "int"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "cfg_path", "type": "Any"}, {"lineNumber": 88, "col_offset": 45, "nodeName": "roufn", "type": "Any"}, {"lineNumber": 184, "col_offset": 48, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 184, "col_offset": 53, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 184, "col_offset": 70, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 184, "col_offset": 75, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 51, "col_offset": 38, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "sumo_attributes", "type": "Dict[Union[str, Any], Union[Any, str]]"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "sumo_attributes", "type": "Dict[Union[str, Any], Union[Any, str]]"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "keys", "type": "Any"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "append", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "append", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "type_count", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 71, "col_offset": 62, "nodeName": "num_merge_vehicles", "type": "Any"}, {"lineNumber": 72, "col_offset": 40, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 72, "col_offset": 62, "nodeName": "num_merge_vehicles", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "route", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "pos", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "merge_positions", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "route", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "pos", "type": "Any"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "ring_positions", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "type_params", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "routes", "type": "Any"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "type", "type": "Any"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "self", "type": "LoopMergesGenerator"}, {"lineNumber": 88, "col_offset": 45, "nodeName": "self", "type": "LoopMergesGenerator"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 119, "col_offset": 27, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 146, "col_offset": 68, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 146, "col_offset": 73, "nodeName": "merge_in_len", "type": "Any"}, {"lineNumber": 149, "col_offset": 69, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 149, "col_offset": 74, "nodeName": "merge_out_len", "type": "Any"}, {"lineNumber": 152, "col_offset": 66, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 157, "col_offset": 66, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 158, "col_offset": 31, "nodeName": "join", "type": "Callable"}, {"lineNumber": 163, "col_offset": 88, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 163, "col_offset": 93, "nodeName": "merge_in_len", "type": "Any"}, {"lineNumber": 167, "col_offset": 67, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "join", "type": "Callable"}, {"lineNumber": 172, "col_offset": 67, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "join", "type": "Callable"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "sumo_attributes", "type": "Dict[Union[str, Any], Union[Any, str]]"}, {"lineNumber": 55, "col_offset": 47, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "routes", "type": "Any"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "E", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "routes", "type": "Any"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "E", "type": "Any"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "type_params", "type": "Any"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 71, "col_offset": 62, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 72, "col_offset": 40, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 72, "col_offset": 62, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "i_merge", "type": "int"}, {"lineNumber": 80, "col_offset": 48, "nodeName": "i_ring", "type": "int"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 84, "col_offset": 48, "nodeName": "indx_type", "type": "int"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "self", "type": "LoopMergesGenerator"}, {"lineNumber": 85, "col_offset": 59, "nodeName": "route", "type": "Any"}, {"lineNumber": 86, "col_offset": 89, "nodeName": "id", "type": "Any"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "r", "type": "Any"}, {"lineNumber": 111, "col_offset": 32, "nodeName": "r", "type": "Any"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "r", "type": "Any"}, {"lineNumber": 115, "col_offset": 32, "nodeName": "r", "type": "Any"}, {"lineNumber": 123, "col_offset": 32, "nodeName": "r", "type": "Any"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "r", "type": "Any"}, {"lineNumber": 127, "col_offset": 32, "nodeName": "r", "type": "Any"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "r", "type": "Any"}, {"lineNumber": 152, "col_offset": 107, "nodeName": "r", "type": "Any"}, {"lineNumber": 157, "col_offset": 107, "nodeName": "r", "type": "Any"}, {"lineNumber": 167, "col_offset": 72, "nodeName": "pi", "type": "Any"}, {"lineNumber": 167, "col_offset": 77, "nodeName": "r", "type": "Any"}, {"lineNumber": 172, "col_offset": 72, "nodeName": "pi", "type": "Any"}, {"lineNumber": 172, "col_offset": 77, "nodeName": "r", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "type_params", "type": "Any"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "key", "type": "Any"}, {"lineNumber": 56, "col_offset": 52, "nodeName": "sumo_attributes", "type": "Dict[Union[str, Any], Union[Any, str]]"}, {"lineNumber": 58, "col_offset": 48, "nodeName": "tp", "type": "Any"}, {"lineNumber": 63, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "vehicle_ids", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "tp", "type": "Any"}, {"lineNumber": 83, "col_offset": 40, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 83, "col_offset": 81, "nodeName": "type", "type": "Any"}, {"lineNumber": 86, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "type_depart_speed", "type": "Any"}, {"lineNumber": 86, "col_offset": 76, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 86, "col_offset": 80, "nodeName": "pos", "type": "Any"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "r", "type": "Any"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "merge_in_len", "type": "Any"}, {"lineNumber": 102, "col_offset": 53, "nodeName": "cos", "type": "Any"}, {"lineNumber": 102, "col_offset": 57, "nodeName": "merge_in_angle", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "r", "type": "Any"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "merge_in_len", "type": "Any"}, {"lineNumber": 103, "col_offset": 53, "nodeName": "sin", "type": "Any"}, {"lineNumber": 103, "col_offset": 57, "nodeName": "merge_in_angle", "type": "Any"}, {"lineNumber": 106, "col_offset": 33, "nodeName": "r", "type": "Any"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "merge_out_len", "type": "Any"}, {"lineNumber": 106, "col_offset": 54, "nodeName": "cos", "type": "Any"}, {"lineNumber": 106, "col_offset": 58, "nodeName": "merge_out_angle", "type": "Any"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "r", "type": "Any"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "merge_out_len", "type": "Any"}, {"lineNumber": 107, "col_offset": 54, "nodeName": "sin", "type": "Any"}, {"lineNumber": 107, "col_offset": 58, "nodeName": "merge_out_angle", "type": "Any"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "cos", "type": "Any"}, {"lineNumber": 110, "col_offset": 40, "nodeName": "merge_in_angle", "type": "Any"}, {"lineNumber": 111, "col_offset": 36, "nodeName": "sin", "type": "Any"}, {"lineNumber": 111, "col_offset": 40, "nodeName": "merge_in_angle", "type": "Any"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "cos", "type": "Any"}, {"lineNumber": 114, "col_offset": 40, "nodeName": "merge_out_angle", "type": "Any"}, {"lineNumber": 115, "col_offset": 36, "nodeName": "sin", "type": "Any"}, {"lineNumber": 115, "col_offset": 40, "nodeName": "merge_out_angle", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "r", "type": "Any"}, {"lineNumber": 119, "col_offset": 37, "nodeName": "merge_in_len", "type": "Any"}, {"lineNumber": 119, "col_offset": 53, "nodeName": "cos", "type": "Any"}, {"lineNumber": 119, "col_offset": 57, "nodeName": "merge_in_angle", "type": "Any"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "r", "type": "Any"}, {"lineNumber": 120, "col_offset": 37, "nodeName": "merge_in_len", "type": "Any"}, {"lineNumber": 120, "col_offset": 53, "nodeName": "sin", "type": "Any"}, {"lineNumber": 120, "col_offset": 57, "nodeName": "merge_in_angle", "type": "Any"}, {"lineNumber": 123, "col_offset": 36, "nodeName": "cos", "type": "Any"}, {"lineNumber": 123, "col_offset": 40, "nodeName": "merge_in_angle", "type": "Any"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "sin", "type": "Any"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "merge_in_angle", "type": "Any"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "cos", "type": "Any"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "sin", "type": "Any"}, {"lineNumber": 154, "col_offset": 45, "nodeName": "t", "type": "Any"}, {"lineNumber": 159, "col_offset": 45, "nodeName": "t", "type": "Any"}, {"lineNumber": 169, "col_offset": 46, "nodeName": "t", "type": "Any"}, {"lineNumber": 174, "col_offset": 46, "nodeName": "t", "type": "Any"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 73, "nodeName": "key", "type": "Any"}, {"lineNumber": 83, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 83, "col_offset": 50, "nodeName": "type_list", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 65, "nodeName": "type_list", "type": "List[Any]"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "merge_in_angle", "type": "Any"}, {"lineNumber": 127, "col_offset": 57, "nodeName": "pi", "type": "Any"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "merge_in_angle", "type": "Any"}, {"lineNumber": 128, "col_offset": 57, "nodeName": "pi", "type": "Any"}, {"lineNumber": 152, "col_offset": 72, "nodeName": "out_angle", "type": "Any"}, {"lineNumber": 152, "col_offset": 84, "nodeName": "in_angle", "type": "Any"}, {"lineNumber": 152, "col_offset": 101, "nodeName": "pi", "type": "Any"}, {"lineNumber": 154, "col_offset": 50, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 154, "col_offset": 59, "nodeName": "in_angle", "type": "Any"}, {"lineNumber": 154, "col_offset": 69, "nodeName": "out_angle", "type": "Any"}, {"lineNumber": 154, "col_offset": 80, "nodeName": "res", "type": "Any"}, {"lineNumber": 157, "col_offset": 72, "nodeName": "in_angle", "type": "Any"}, {"lineNumber": 157, "col_offset": 83, "nodeName": "out_angle", "type": "Any"}, {"lineNumber": 157, "col_offset": 101, "nodeName": "pi", "type": "Any"}, {"lineNumber": 159, "col_offset": 50, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 159, "col_offset": 59, "nodeName": "out_angle", "type": "Any"}, {"lineNumber": 159, "col_offset": 89, "nodeName": "res", "type": "Any"}, {"lineNumber": 169, "col_offset": 51, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 169, "col_offset": 60, "nodeName": "in_angle", "type": "Any"}, {"lineNumber": 169, "col_offset": 85, "nodeName": "res", "type": "Any"}, {"lineNumber": 174, "col_offset": 51, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 174, "col_offset": 94, "nodeName": "res", "type": "Any"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "type_params", "type": "Any"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "tp", "type": "Any"}, {"lineNumber": 65, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 65, "col_offset": 63, "nodeName": "j", "type": "int"}, {"lineNumber": 83, "col_offset": 75, "nodeName": "i", "type": "int"}, {"lineNumber": 159, "col_offset": 79, "nodeName": "in_angle", "type": "Any"}, {"lineNumber": 169, "col_offset": 70, "nodeName": "in_angle", "type": "Any"}, {"lineNumber": 169, "col_offset": 81, "nodeName": "pi", "type": "Any"}, {"lineNumber": 174, "col_offset": 60, "nodeName": "in_angle", "type": "Any"}, {"lineNumber": 174, "col_offset": 71, "nodeName": "pi", "type": "Any"}, {"lineNumber": 174, "col_offset": 75, "nodeName": "in_angle", "type": "Any"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 55, "col_offset": 52, "nodeName": "type_params", "type": "Any"}, {"lineNumber": 159, "col_offset": 74, "nodeName": "pi", "type": "Any"}, {"lineNumber": 174, "col_offset": 90, "nodeName": "pi", "type": "Any"}, {"lineNumber": 55, "col_offset": 64, "nodeName": "i", "type": "int"}]