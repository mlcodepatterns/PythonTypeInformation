[{"lineNumber": 19, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 413, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 477, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 569, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 601, "col_offset": 38, "nodeName": "TestEvenStartPosVariableLanes", "type": "Type[TestEvenStartPosVariableLanes]"}, {"lineNumber": 619, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 665, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 711, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 755, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 778, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 802, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 413, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 477, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 569, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 619, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 665, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 711, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 755, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 778, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 802, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 871, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "edge_1", "type": "str"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "pos_1", "type": "float"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "edge_2", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "pos_2", "type": "float"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "edge", "type": "str"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "pos", "type": "float"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "x1", "type": "int"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "x2", "type": "float"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "x0", "type": "int"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "bunching", "type": "int"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "bunching", "type": "int"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "veh_lanes", "type": "List[Any]"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "inf", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "edge", "type": "str"}, {"lineNumber": 386, "col_offset": 20, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "spacing", "type": "str"}, {"lineNumber": 493, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 544, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 564, "col_offset": 12, "nodeName": "edge", "type": "str"}, {"lineNumber": 564, "col_offset": 20, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 572, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 579, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 634, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 726, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "edge_list", "type": "Any"}, {"lineNumber": 791, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 794, "col_offset": 8, "nodeName": "junction_list", "type": "Any"}, {"lineNumber": 815, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 816, "col_offset": 8, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 825, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 826, "col_offset": 8, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 835, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 836, "col_offset": 8, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 846, "col_offset": 8, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 872, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "_", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 49, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 136, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 175, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 194, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 200, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 201, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 206, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 215, "col_offset": 66, "nodeName": "bunching", "type": "int"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 264, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 268, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 278, "col_offset": 23, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 288, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 301, "col_offset": 29, "nodeName": "randint", "type": "Any"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 305, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 308, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 321, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 325, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 329, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 331, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 331, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 339, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 339, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 359, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 362, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 366, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 377, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 378, "col_offset": 26, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 378, "col_offset": 42, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 383, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 384, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 401, "col_offset": 21, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 403, "col_offset": 35, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 404, "col_offset": 37, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 407, "col_offset": 21, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 423, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 430, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 433, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 445, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 446, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 451, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 458, "col_offset": 15, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 482, "col_offset": 49, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 493, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 496, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 504, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 521, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 522, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 525, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 536, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 540, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 544, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 555, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 556, "col_offset": 26, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 556, "col_offset": 42, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 561, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 562, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 572, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 579, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 583, "col_offset": 29, "nodeName": "variable_lanes_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, tests.setup_scripts.VariableLanesScenario]]"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 591, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 597, "col_offset": 16, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 604, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 611, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 615, "col_offset": 29, "nodeName": "variable_lanes_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, tests.setup_scripts.VariableLanesScenario]]"}, {"lineNumber": 634, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 637, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 637, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 654, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 657, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 657, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 657, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 680, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 683, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 683, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 700, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 703, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 703, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 705, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 726, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 729, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 729, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 731, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 734, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 746, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 749, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 749, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 749, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 763, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 763, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 763, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 767, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 771, "col_offset": 20, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 775, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 775, "col_offset": 30, "nodeName": "edge_list", "type": "Any"}, {"lineNumber": 775, "col_offset": 41, "nodeName": "expected_edge_list", "type": "List[str]"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 786, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 786, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 790, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 791, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 794, "col_offset": 24, "nodeName": "get_junction_list", "type": "Any"}, {"lineNumber": 799, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 799, "col_offset": 30, "nodeName": "junction_list", "type": "Any"}, {"lineNumber": 799, "col_offset": 45, "nodeName": "expected_junction_list", "type": "List[str]"}, {"lineNumber": 814, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 814, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 814, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 815, "col_offset": 20, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 818, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 818, "col_offset": 30, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 818, "col_offset": 41, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 824, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 824, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 824, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 825, "col_offset": 20, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 828, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 828, "col_offset": 30, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 828, "col_offset": 41, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 834, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 834, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 834, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 835, "col_offset": 20, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 838, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 838, "col_offset": 30, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 838, "col_offset": 41, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 844, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 844, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 844, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 845, "col_offset": 20, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 848, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 848, "col_offset": 30, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 848, "col_offset": 41, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 855, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 855, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.highway.HighwayScenario"}, {"lineNumber": 855, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.HighwayScenario]]"}, {"lineNumber": 856, "col_offset": 20, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 858, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 865, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 865, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.highway.HighwayScenario"}, {"lineNumber": 865, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.HighwayScenario]]"}, {"lineNumber": 866, "col_offset": 20, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 868, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 872, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "get_x", "type": "Any"}, {"lineNumber": 38, "col_offset": 57, "nodeName": "edge_1", "type": "str"}, {"lineNumber": 38, "col_offset": 65, "nodeName": "pos_1", "type": "float"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "get_x", "type": "Any"}, {"lineNumber": 43, "col_offset": 57, "nodeName": "edge_2", "type": "str"}, {"lineNumber": 43, "col_offset": 65, "nodeName": "pos_2", "type": "float"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "get_x", "type": "Any"}, {"lineNumber": 48, "col_offset": 57, "nodeName": "edge", "type": "str"}, {"lineNumber": 48, "col_offset": 63, "nodeName": "pos", "type": "float"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "x1", "type": "int"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "x2", "type": "float"}, {"lineNumber": 100, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 136, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "x0", "type": "int"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 180, "col_offset": 37, "nodeName": "x0", "type": "int"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 194, "col_offset": 48, "nodeName": "bunching", "type": "int"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 200, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 201, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 206, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 226, "col_offset": 48, "nodeName": "bunching", "type": "int"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 232, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 236, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 241, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 242, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 261, "col_offset": 58, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 268, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 288, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 288, "col_offset": 31, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 301, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 302, "col_offset": 58, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 308, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 309, "col_offset": 21, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 309, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 309, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 309, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 322, "col_offset": 58, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 329, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 346, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 359, "col_offset": 58, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 366, "col_offset": 22, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 377, "col_offset": 58, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 378, "col_offset": 42, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 379, "col_offset": 41, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 383, "col_offset": 58, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 401, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 403, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 403, "col_offset": 29, "nodeName": "pos", "type": "Any"}, {"lineNumber": 403, "col_offset": 35, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 404, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 404, "col_offset": 29, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 404, "col_offset": 37, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 407, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 409, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 409, "col_offset": 29, "nodeName": "pos", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 410, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 410, "col_offset": 29, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 434, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 434, "col_offset": 52, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 445, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 446, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 451, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 452, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 457, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 462, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 493, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 505, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 506, "col_offset": 27, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 507, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 525, "col_offset": 22, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 526, "col_offset": 12, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 527, "col_offset": 28, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 537, "col_offset": 49, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 544, "col_offset": 22, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 545, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 555, "col_offset": 58, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 556, "col_offset": 42, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 557, "col_offset": 41, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 561, "col_offset": 58, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 565, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 584, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 584, "col_offset": 46, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 597, "col_offset": 16, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 597, "col_offset": 44, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 598, "col_offset": 25, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 616, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 616, "col_offset": 46, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 634, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 637, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 639, "col_offset": 25, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 642, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 642, "col_offset": 31, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 655, "col_offset": 55, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 657, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 660, "col_offset": 12, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 661, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 662, "col_offset": 12, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 680, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 683, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 685, "col_offset": 31, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 688, "col_offset": 31, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 701, "col_offset": 55, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 703, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 705, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 706, "col_offset": 12, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 708, "col_offset": 12, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 726, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 729, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 731, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 731, "col_offset": 25, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 734, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 734, "col_offset": 31, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 747, "col_offset": 55, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 749, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 751, "col_offset": 25, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 752, "col_offset": 25, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 763, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 767, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 771, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 775, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 790, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 794, "col_offset": 24, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 799, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 815, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 818, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 825, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 828, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 835, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 838, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 845, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 848, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 856, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 858, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 866, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 868, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 136, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 138, "col_offset": 42, "nodeName": "ids", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "ids", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 180, "col_offset": 42, "nodeName": "length", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 200, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 202, "col_offset": 32, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 202, "col_offset": 42, "nodeName": "ids", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 215, "col_offset": 31, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 215, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 237, "col_offset": 32, "nodeName": "pos", "type": "Any"}, {"lineNumber": 237, "col_offset": 39, "nodeName": "startpos", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 268, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 282, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 283, "col_offset": 23, "nodeName": "length", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 289, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 301, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 308, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 309, "col_offset": 21, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 310, "col_offset": 35, "nodeName": "veh_lanes", "type": "List[Any]"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 329, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 344, "col_offset": 23, "nodeName": "length", "type": "Any"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 366, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 367, "col_offset": 67, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 387, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 388, "col_offset": 29, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 401, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 402, "col_offset": 27, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 403, "col_offset": 35, "nodeName": "k", "type": "Any"}, {"lineNumber": 404, "col_offset": 37, "nodeName": "k", "type": "Any"}, {"lineNumber": 407, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 408, "col_offset": 27, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 426, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 427, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 445, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 447, "col_offset": 32, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 447, "col_offset": 42, "nodeName": "ids", "type": "Any"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 462, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 499, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 500, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 525, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 526, "col_offset": 12, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 526, "col_offset": 28, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 526, "col_offset": 56, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 527, "col_offset": 28, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 544, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 545, "col_offset": 12, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 545, "col_offset": 67, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 565, "col_offset": 12, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 565, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 566, "col_offset": 29, "nodeName": "edges", "type": "Dict[str, int]"}, {"lineNumber": 575, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 576, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 597, "col_offset": 16, "nodeName": "k", "type": "Any"}, {"lineNumber": 597, "col_offset": 44, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 607, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 608, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 639, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 642, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 660, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 662, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 685, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 688, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 706, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 708, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 731, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 734, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 751, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 752, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 767, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 771, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 790, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 794, "col_offset": 24, "nodeName": "k", "type": "Any"}, {"lineNumber": 815, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 825, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 835, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 845, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 856, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 857, "col_offset": 12, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 858, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 858, "col_offset": 28, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 866, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 867, "col_offset": 12, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 868, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 868, "col_offset": 28, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 136, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 143, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 150, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 176, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 180, "col_offset": 42, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 183, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 200, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 207, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 211, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 242, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 242, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 247, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 247, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 268, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 272, "col_offset": 59, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 272, "col_offset": 69, "nodeName": "ids", "type": "Any"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "append", "type": "Any"}, {"lineNumber": 282, "col_offset": 66, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 283, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 289, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 308, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 309, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 310, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 329, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 333, "col_offset": 59, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 333, "col_offset": 69, "nodeName": "ids", "type": "Any"}, {"lineNumber": 343, "col_offset": 23, "nodeName": "append", "type": "Any"}, {"lineNumber": 343, "col_offset": 66, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 344, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 346, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 366, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 367, "col_offset": 28, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 367, "col_offset": 56, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 387, "col_offset": 33, "nodeName": "get_ids_by_edge", "type": "Any"}, {"lineNumber": 387, "col_offset": 68, "nodeName": "edge", "type": "str"}, {"lineNumber": 388, "col_offset": 35, "nodeName": "edge", "type": "str"}, {"lineNumber": 401, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 403, "col_offset": 35, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 404, "col_offset": 37, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 407, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 445, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 452, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 452, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 452, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 457, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 525, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 526, "col_offset": 28, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 544, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 545, "col_offset": 28, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 545, "col_offset": 56, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 565, "col_offset": 33, "nodeName": "get_ids_by_edge", "type": "Any"}, {"lineNumber": 565, "col_offset": 68, "nodeName": "edge", "type": "str"}, {"lineNumber": 566, "col_offset": 35, "nodeName": "edge", "type": "str"}, {"lineNumber": 597, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 597, "col_offset": 44, "nodeName": "k", "type": "Any"}, {"lineNumber": 598, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 598, "col_offset": 38, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 598, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 639, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 642, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 660, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 662, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 685, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 688, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 706, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 708, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 731, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 734, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 751, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 752, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 771, "col_offset": 20, "nodeName": "env", "type": "Any"}, {"lineNumber": 794, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 815, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 825, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 835, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 845, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 856, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 857, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 866, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 867, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 136, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 169, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 180, "col_offset": 42, "nodeName": "k", "type": "Any"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 200, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 211, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 211, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 247, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 268, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 273, "col_offset": 58, "nodeName": "i", "type": "int"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 282, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 283, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 285, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 308, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 309, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 329, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 334, "col_offset": 58, "nodeName": "i", "type": "int"}, {"lineNumber": 343, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 343, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 344, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 346, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 346, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 366, "col_offset": 22, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 367, "col_offset": 28, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 387, "col_offset": 33, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 401, "col_offset": 21, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 403, "col_offset": 35, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 404, "col_offset": 37, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 407, "col_offset": 21, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 445, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 457, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 457, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 457, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 462, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 462, "col_offset": 31, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 474, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 525, "col_offset": 22, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 526, "col_offset": 28, "nodeName": "k", "type": "Any"}, {"lineNumber": 544, "col_offset": 22, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 545, "col_offset": 28, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 565, "col_offset": 33, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 597, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 597, "col_offset": 44, "nodeName": "env", "type": "Any"}, {"lineNumber": 598, "col_offset": 53, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 639, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 642, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 660, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 662, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 685, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 688, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 706, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 708, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 731, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 734, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 751, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 752, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 771, "col_offset": 20, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 794, "col_offset": 24, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 857, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 867, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 180, "col_offset": 42, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 273, "col_offset": 19, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 273, "col_offset": 47, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 282, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 282, "col_offset": 49, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 283, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 285, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 285, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 289, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 289, "col_offset": 45, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 309, "col_offset": 21, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 334, "col_offset": 19, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 334, "col_offset": 47, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 343, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 343, "col_offset": 49, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 344, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 346, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 346, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 367, "col_offset": 28, "nodeName": "k", "type": "Any"}, {"lineNumber": 387, "col_offset": 33, "nodeName": "k", "type": "Any"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 457, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 463, "col_offset": 19, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 463, "col_offset": 36, "nodeName": "mean", "type": "Any"}, {"lineNumber": 463, "col_offset": 44, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 468, "col_offset": 28, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 471, "col_offset": 67, "nodeName": "pos_i", "type": "Any"}, {"lineNumber": 471, "col_offset": 76, "nodeName": "pos", "type": "List[Any]"}, {"lineNumber": 474, "col_offset": 20, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 474, "col_offset": 36, "nodeName": "any", "type": "Any"}, {"lineNumber": 526, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 545, "col_offset": 28, "nodeName": "k", "type": "Any"}, {"lineNumber": 565, "col_offset": 33, "nodeName": "k", "type": "Any"}, {"lineNumber": 597, "col_offset": 44, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 857, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 867, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 180, "col_offset": 42, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 273, "col_offset": 19, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 282, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 282, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 283, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 334, "col_offset": 19, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 343, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 343, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 344, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 367, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 387, "col_offset": 33, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 463, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 463, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 471, "col_offset": 24, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 471, "col_offset": 53, "nodeName": "pos_i", "type": "Any"}, {"lineNumber": 474, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 526, "col_offset": 28, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 545, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 565, "col_offset": 33, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 273, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 334, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 367, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 387, "col_offset": 33, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 468, "col_offset": 39, "nodeName": "ids", "type": "Any"}, {"lineNumber": 468, "col_offset": 51, "nodeName": "ids", "type": "Any"}, {"lineNumber": 471, "col_offset": 24, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 474, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 474, "col_offset": 52, "nodeName": "rel_pos", "type": "List[Any]"}, {"lineNumber": 545, "col_offset": 28, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 565, "col_offset": 33, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 273, "col_offset": 19, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 334, "col_offset": 19, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 468, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 471, "col_offset": 24, "nodeName": "k", "type": "Any"}, {"lineNumber": 474, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 273, "col_offset": 19, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 334, "col_offset": 19, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 468, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 471, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 471, "col_offset": 24, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}]