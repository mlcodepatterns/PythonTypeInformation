[{"lineNumber": 18, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 379, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 442, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 513, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 554, "col_offset": 38, "nodeName": "TestEvenStartPosVariableLanes", "type": "Type[TestEvenStartPosVariableLanes]"}, {"lineNumber": 572, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 615, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 658, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 699, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 726, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 754, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 379, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 442, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 513, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 572, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 615, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 658, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 699, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 726, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 754, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 824, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "edge_1", "type": "str"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "pos_1", "type": "float"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "edge_2", "type": "str"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "pos_2", "type": "float"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "x1", "type": "int"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "x2", "type": "float"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "x0", "type": "int"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "bunching", "type": "int"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "bunching", "type": "int"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "veh_lanes", "type": "List[Any]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 308, "col_offset": 29, "nodeName": "inf", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 411, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "spacing", "type": "str"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 500, "col_offset": 8, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 509, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 542, "col_offset": 8, "nodeName": "expected_num_vehicles", "type": "Any"}, {"lineNumber": 542, "col_offset": 32, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 550, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 557, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 630, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 712, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 715, "col_offset": 8, "nodeName": "edge_list", "type": "Any"}, {"lineNumber": 739, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 742, "col_offset": 8, "nodeName": "junction_list", "type": "Any"}, {"lineNumber": 767, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 778, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 788, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 798, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 799, "col_offset": 8, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 825, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "_", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 49, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.params.Vehicles]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 189, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 206, "col_offset": 66, "nodeName": "bunching", "type": "int"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 220, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 224, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 228, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 255, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 257, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 257, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 265, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 265, "col_offset": 23, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 275, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "randint", "type": "Any"}, {"lineNumber": 289, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 292, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 295, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 297, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 308, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 309, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 312, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 316, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 318, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 318, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 326, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 326, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 346, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 349, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 353, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 367, "col_offset": 29, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 369, "col_offset": 35, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 370, "col_offset": 37, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 373, "col_offset": 29, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 389, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.params.Vehicles]"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 396, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 399, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 411, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 412, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 416, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 423, "col_offset": 15, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 447, "col_offset": 49, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 458, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 461, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.params.Vehicles]"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 469, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 479, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 486, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 487, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 490, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 501, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 505, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 509, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 516, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.params.Vehicles]"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 523, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 527, "col_offset": 29, "nodeName": "variable_lanes_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, tests.setup_scripts.VariableLanesScenario]]"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 542, "col_offset": 32, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 544, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 547, "col_offset": 25, "nodeName": "expected_num_vehicles", "type": "Any"}, {"lineNumber": 547, "col_offset": 48, "nodeName": "actual_num_vehicles", "type": "int"}, {"lineNumber": 550, "col_offset": 16, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 557, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.params.Vehicles]"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 564, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 568, "col_offset": 29, "nodeName": "variable_lanes_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, tests.setup_scripts.VariableLanesScenario]]"}, {"lineNumber": 587, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 590, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 590, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 604, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 607, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 607, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 630, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 633, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 633, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 647, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 650, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 650, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 650, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 673, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 676, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 676, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 676, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 678, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 690, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 693, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 693, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 707, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 707, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 712, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 715, "col_offset": 20, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 723, "col_offset": 30, "nodeName": "edge_list", "type": "Any"}, {"lineNumber": 723, "col_offset": 41, "nodeName": "expected_edge_list", "type": "List[str]"}, {"lineNumber": 734, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 734, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 734, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 739, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 742, "col_offset": 24, "nodeName": "get_junction_list", "type": "Any"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 751, "col_offset": 30, "nodeName": "junction_list", "type": "Any"}, {"lineNumber": 751, "col_offset": 45, "nodeName": "expected_junction_list", "type": "List[str]"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 766, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 766, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 767, "col_offset": 20, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 771, "col_offset": 30, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 771, "col_offset": 41, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 777, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 777, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 777, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 778, "col_offset": 20, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 781, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 781, "col_offset": 30, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 781, "col_offset": 41, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 787, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 787, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 787, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 788, "col_offset": 20, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 791, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 791, "col_offset": 30, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 791, "col_offset": 41, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 797, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 797, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 797, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 798, "col_offset": 20, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 801, "col_offset": 30, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 801, "col_offset": 41, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 808, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 808, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.highway.HighwayScenario"}, {"lineNumber": 808, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.HighwayScenario]]"}, {"lineNumber": 809, "col_offset": 20, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 811, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 818, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 818, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.highway.HighwayScenario"}, {"lineNumber": 818, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.HighwayScenario]]"}, {"lineNumber": 819, "col_offset": 20, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 821, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 825, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "get_x", "type": "Any"}, {"lineNumber": 37, "col_offset": 57, "nodeName": "edge_1", "type": "str"}, {"lineNumber": 37, "col_offset": 65, "nodeName": "pos_1", "type": "float"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "get_x", "type": "Any"}, {"lineNumber": 42, "col_offset": 57, "nodeName": "edge_2", "type": "str"}, {"lineNumber": 42, "col_offset": 65, "nodeName": "pos_2", "type": "float"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "x1", "type": "int"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "x2", "type": "float"}, {"lineNumber": 94, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 156, "col_offset": 42, "nodeName": "x0", "type": "int"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "x0", "type": "int"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 186, "col_offset": 48, "nodeName": "bunching", "type": "int"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 198, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 217, "col_offset": 48, "nodeName": "bunching", "type": "int"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 224, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 228, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 248, "col_offset": 58, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 255, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 272, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 275, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 275, "col_offset": 31, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 289, "col_offset": 58, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 295, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 296, "col_offset": 21, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 296, "col_offset": 48, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 296, "col_offset": 60, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 296, "col_offset": 70, "nodeName": "ids", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 309, "col_offset": 58, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 316, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 333, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 346, "col_offset": 58, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 353, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 367, "col_offset": 29, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 369, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 369, "col_offset": 29, "nodeName": "pos", "type": "Any"}, {"lineNumber": 369, "col_offset": 35, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 370, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 370, "col_offset": 29, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 370, "col_offset": 37, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 373, "col_offset": 29, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 375, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 375, "col_offset": 29, "nodeName": "pos", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 376, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 376, "col_offset": 29, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 400, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 400, "col_offset": 52, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 411, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 412, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 416, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 417, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 422, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 427, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 458, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 470, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 471, "col_offset": 27, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 472, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 490, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 491, "col_offset": 12, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 492, "col_offset": 28, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 502, "col_offset": 49, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 509, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 510, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 528, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 528, "col_offset": 46, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 542, "col_offset": 32, "nodeName": "env", "type": "Any"}, {"lineNumber": 544, "col_offset": 16, "nodeName": "getIDList", "type": "Any"}, {"lineNumber": 547, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 550, "col_offset": 16, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 550, "col_offset": 43, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 551, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 551, "col_offset": 25, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 558, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 569, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.Vehicles"}, {"lineNumber": 569, "col_offset": 46, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 587, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 590, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 592, "col_offset": 25, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 605, "col_offset": 55, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 607, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 612, "col_offset": 12, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 630, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 633, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 635, "col_offset": 31, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 648, "col_offset": 55, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 650, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 653, "col_offset": 12, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 655, "col_offset": 12, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 673, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 676, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 678, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 678, "col_offset": 25, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 691, "col_offset": 55, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 693, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 695, "col_offset": 25, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 696, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 696, "col_offset": 25, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 715, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 734, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 742, "col_offset": 24, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 767, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 778, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 781, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 788, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 791, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 798, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 809, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 811, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 819, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 821, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 131, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 131, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 131, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 131, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 163, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 163, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 163, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "length", "type": "Any"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 193, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 193, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 193, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 206, "col_offset": 31, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 206, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 224, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 224, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 224, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 255, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "length", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 276, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 288, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 295, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 296, "col_offset": 21, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 297, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 297, "col_offset": 35, "nodeName": "veh_lanes", "type": "List[Any]"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 316, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 331, "col_offset": 23, "nodeName": "length", "type": "Any"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 353, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 354, "col_offset": 66, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 367, "col_offset": 29, "nodeName": "k", "type": "Any"}, {"lineNumber": 368, "col_offset": 27, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 369, "col_offset": 35, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 370, "col_offset": 37, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 373, "col_offset": 29, "nodeName": "k", "type": "Any"}, {"lineNumber": 374, "col_offset": 27, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 392, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 393, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 411, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 412, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 412, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 412, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 412, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 427, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 464, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 465, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 490, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 491, "col_offset": 12, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 491, "col_offset": 28, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 491, "col_offset": 55, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 492, "col_offset": 28, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 509, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 510, "col_offset": 12, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 510, "col_offset": 66, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 519, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 520, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 532, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 542, "col_offset": 32, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 544, "col_offset": 16, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 550, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 550, "col_offset": 43, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 560, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 561, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 592, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 612, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 635, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 653, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 655, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 678, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 695, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 696, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 715, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 738, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 742, "col_offset": 24, "nodeName": "k", "type": "Any"}, {"lineNumber": 767, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 778, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 788, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 798, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 809, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 810, "col_offset": 12, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 811, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 811, "col_offset": 28, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 819, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 820, "col_offset": 12, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 821, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 821, "col_offset": 28, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 131, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 143, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 175, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 198, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 229, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 234, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 234, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 234, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 255, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 259, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 259, "col_offset": 59, "nodeName": "ids", "type": "Any"}, {"lineNumber": 269, "col_offset": 23, "nodeName": "append", "type": "Any"}, {"lineNumber": 269, "col_offset": 66, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 272, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 276, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 295, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 296, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 297, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 316, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 320, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 320, "col_offset": 59, "nodeName": "ids", "type": "Any"}, {"lineNumber": 330, "col_offset": 23, "nodeName": "append", "type": "Any"}, {"lineNumber": 330, "col_offset": 66, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 331, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 333, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 353, "col_offset": 22, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 354, "col_offset": 28, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 354, "col_offset": 55, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 367, "col_offset": 29, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 369, "col_offset": 35, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 370, "col_offset": 37, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 373, "col_offset": 29, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 411, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 412, "col_offset": 28, "nodeName": "env", "type": "Any"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 417, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 417, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 422, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 490, "col_offset": 22, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 491, "col_offset": 28, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 509, "col_offset": 22, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 510, "col_offset": 28, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 510, "col_offset": 55, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 544, "col_offset": 16, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 550, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 550, "col_offset": 43, "nodeName": "env", "type": "Any"}, {"lineNumber": 551, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 551, "col_offset": 38, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 551, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 592, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 612, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 635, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 653, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 655, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 678, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 695, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 696, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 715, "col_offset": 20, "nodeName": "env", "type": "Any"}, {"lineNumber": 742, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 767, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 778, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 788, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 798, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 809, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 810, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 819, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 820, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 131, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 143, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "k", "type": "Any"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 224, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 234, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 269, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 269, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 272, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 272, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 296, "col_offset": 21, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 321, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 330, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 330, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 331, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 333, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 333, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 354, "col_offset": 28, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 367, "col_offset": 29, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 373, "col_offset": 29, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 412, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 422, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 422, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 422, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 427, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 427, "col_offset": 31, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 439, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 491, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 510, "col_offset": 28, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 544, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 550, "col_offset": 43, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 551, "col_offset": 53, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 592, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 612, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 635, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 653, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 655, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 678, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 695, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 696, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 715, "col_offset": 20, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 742, "col_offset": 24, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 810, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 820, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 260, "col_offset": 46, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 269, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 269, "col_offset": 49, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 272, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 272, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 276, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 276, "col_offset": 45, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 321, "col_offset": 19, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 321, "col_offset": 46, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 330, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 330, "col_offset": 49, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 331, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 333, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 333, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 354, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 422, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 428, "col_offset": 19, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 428, "col_offset": 36, "nodeName": "mean", "type": "Any"}, {"lineNumber": 428, "col_offset": 44, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 433, "col_offset": 28, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 436, "col_offset": 67, "nodeName": "pos_i", "type": "Any"}, {"lineNumber": 436, "col_offset": 76, "nodeName": "pos", "type": "List[Any]"}, {"lineNumber": 439, "col_offset": 20, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 439, "col_offset": 36, "nodeName": "any", "type": "Any"}, {"lineNumber": 491, "col_offset": 28, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 510, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 544, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 810, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 820, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 269, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 269, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 321, "col_offset": 19, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 330, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 330, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 331, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 354, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 428, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 428, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 436, "col_offset": 24, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 436, "col_offset": 53, "nodeName": "pos_i", "type": "Any"}, {"lineNumber": 439, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 510, "col_offset": 28, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 321, "col_offset": 19, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 433, "col_offset": 39, "nodeName": "ids", "type": "Any"}, {"lineNumber": 433, "col_offset": 51, "nodeName": "ids", "type": "Any"}, {"lineNumber": 436, "col_offset": 24, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 439, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 439, "col_offset": 52, "nodeName": "rel_pos", "type": "List[Any]"}, {"lineNumber": 260, "col_offset": 19, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 321, "col_offset": 19, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 433, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 436, "col_offset": 24, "nodeName": "k", "type": "Any"}, {"lineNumber": 439, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 433, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 436, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 436, "col_offset": 24, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}]