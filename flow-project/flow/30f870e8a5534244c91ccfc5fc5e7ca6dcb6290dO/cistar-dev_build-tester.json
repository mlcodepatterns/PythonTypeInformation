[{"lineNumber": 10, "col_offset": 0, "nodeName": "tot_cars", "type": "int"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "auton_cars", "type": "int"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "human_cars", "type": "int"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "sumo_params", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "sumo_binary", "type": "str"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "type_params", "type": "Dict[str, Union[Tuple[int, Any], Tuple[int, None]]]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "env_params", "type": "Dict[str, int]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "net_params", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "cfg_params", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "initial_config", "type": "Dict[str, Union[bool, List[Tuple[str, int]]]]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "exp", "type": "Any"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "env", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "basicConfig", "type": "Callable[..., None]"}, {"lineNumber": 13, "col_offset": 13, "nodeName": "tot_cars", "type": "int"}, {"lineNumber": 13, "col_offset": 24, "nodeName": "auton_cars", "type": "int"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "initial_positions", "type": "List[Tuple[str, int]]"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "LoopScenario", "type": "Any"}, {"lineNumber": 34, "col_offset": 36, "nodeName": "tot_cars", "type": "int"}, {"lineNumber": 34, "col_offset": 46, "nodeName": "type_params", "type": "Dict[str, Union[Tuple[int, Any], Tuple[int, None]]]"}, {"lineNumber": 34, "col_offset": 59, "nodeName": "cfg_params", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 34, "col_offset": 71, "nodeName": "net_params", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 36, "col_offset": 6, "nodeName": "SumoExperiment", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "SimpleVelocityEnvironment", "type": "Any"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "env_params", "type": "Dict[str, int]"}, {"lineNumber": 36, "col_offset": 60, "nodeName": "sumo_binary", "type": "str"}, {"lineNumber": 36, "col_offset": 73, "nodeName": "sumo_params", "type": "Dict[str, Union[float, int]]"}, {"lineNumber": 36, "col_offset": 86, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 6, "nodeName": "normalize", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "baseline", "type": "Any"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "logging", "type": "module"}, {"lineNumber": 8, "col_offset": 26, "nodeName": "INFO", "type": "int"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "auton_cars", "type": "int"}, {"lineNumber": 20, "col_offset": 51, "nodeName": "human_cars", "type": "int"}, {"lineNumber": 34, "col_offset": 98, "nodeName": "initial_config", "type": "Dict[str, Union[bool, List[Tuple[str, int]]]]"}, {"lineNumber": 34, "col_offset": 130, "nodeName": "CircleGenerator", "type": "Any"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "logging", "type": "module"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "exp", "type": "Any"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "GaussianMLPPolicy", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "LinearFeatureBaseline", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "TRPO", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "run_experiment_lite", "type": "Any"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "env", "type": "Any"}, {"lineNumber": 8, "col_offset": 26, "nodeName": "logging", "type": "module"}, {"lineNumber": 20, "col_offset": 63, "nodeName": "make_better_cfm", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "spec", "type": "Any"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "spec", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "policy", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "baseline", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "seed", "type": "int"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "exp", "type": "Any"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "env", "type": "Any"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "env", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "algo", "type": "Any"}]