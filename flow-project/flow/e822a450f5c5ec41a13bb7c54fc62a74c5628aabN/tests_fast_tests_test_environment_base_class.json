[{"lineNumber": 18, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 149, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 319, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 372, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 396, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 18, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 149, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 319, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 372, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 396, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 422, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "offset", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "after_reset", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "before_reset", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "after_reset", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "accel_step0", "type": "numpy.ndarray"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "expected_vel1", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "id_list", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "accel_step1", "type": "numpy.ndarray"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "expected_vel2", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "bad_directions", "type": "numpy.ndarray"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "direction0", "type": "numpy.ndarray"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "id_list", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "direction1", "type": "numpy.ndarray"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "additional_env_params", "type": "Dict[str, int]"}, {"lineNumber": 328, "col_offset": 32, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "sorted_ids", "type": "Any"}, {"lineNumber": 341, "col_offset": 21, "nodeName": "sorted_ids", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "positions", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "additional_env_params", "type": "Dict[str, int]"}, {"lineNumber": 352, "col_offset": 32, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "sorted_ids", "type": "List[Any]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "warmup_step", "type": "int"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "t1", "type": "int"}, {"lineNumber": 386, "col_offset": 13, "nodeName": "time_counter", "type": "int"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "t2", "type": "int"}, {"lineNumber": 390, "col_offset": 13, "nodeName": "time_counter", "type": "int"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "sims_per_step", "type": "int"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "t1", "type": "int"}, {"lineNumber": 412, "col_offset": 13, "nodeName": "time_counter", "type": "int"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "t2", "type": "int"}, {"lineNumber": 416, "col_offset": 13, "nodeName": "time_counter", "type": "int"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestStartingPositionShuffle"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 70, "col_offset": 51, "nodeName": "length", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "before_reset", "type": "numpy.ndarray"}, {"lineNumber": 72, "col_offset": 59, "nodeName": "after_reset", "type": "Any"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TestVehicleArrangementShuffle"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "before_reset", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 44, "nodeName": "after_reset", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "emission_path", "type": "Any"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 199, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "apply_acceleration", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "simulationStep", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "clip", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 217, "col_offset": 45, "nodeName": "vel1", "type": "numpy.ndarray"}, {"lineNumber": 217, "col_offset": 51, "nodeName": "expected_vel1", "type": "Any"}, {"lineNumber": 220, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "getSubscriptionResults", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 228, "col_offset": 33, "nodeName": "veh_obs", "type": "Dict[Any, Any]"}, {"lineNumber": 228, "col_offset": 42, "nodeName": "id_list", "type": "Any"}, {"lineNumber": 228, "col_offset": 51, "nodeName": "env", "type": "Any"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "apply_acceleration", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "simulationStep", "type": "Any"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "clip", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 243, "col_offset": 45, "nodeName": "vel2", "type": "numpy.ndarray"}, {"lineNumber": 243, "col_offset": 51, "nodeName": "expected_vel2", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 250, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "apply_lane_change", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 270, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 275, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "apply_lane_change", "type": "Any"}, {"lineNumber": 276, "col_offset": 35, "nodeName": "ids", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "simulationStep", "type": "Any"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 285, "col_offset": 26, "nodeName": "clip", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 288, "col_offset": 45, "nodeName": "lane1", "type": "numpy.ndarray"}, {"lineNumber": 288, "col_offset": 52, "nodeName": "expected_lane1", "type": "Any"}, {"lineNumber": 291, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 296, "col_offset": 18, "nodeName": "getSubscriptionResults", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 299, "col_offset": 33, "nodeName": "veh_obs", "type": "Dict[Any, Any]"}, {"lineNumber": 299, "col_offset": 42, "nodeName": "id_list", "type": "Any"}, {"lineNumber": 299, "col_offset": 51, "nodeName": "env", "type": "Any"}, {"lineNumber": 303, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "apply_lane_change", "type": "Any"}, {"lineNumber": 304, "col_offset": 35, "nodeName": "ids", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "simulationStep", "type": "Any"}, {"lineNumber": 309, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 313, "col_offset": 26, "nodeName": "clip", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 316, "col_offset": 45, "nodeName": "lane2", "type": "numpy.ndarray"}, {"lineNumber": 316, "col_offset": 52, "nodeName": "expected_lane2", "type": "Any"}, {"lineNumber": 329, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 331, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 332, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 334, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 341, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 342, "col_offset": 20, "nodeName": "get_absolute_position", "type": "Any"}, {"lineNumber": 342, "col_offset": 60, "nodeName": "sorted_ids", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 353, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 355, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 356, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 358, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 365, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 365, "col_offset": 26, "nodeName": "sorted_ids", "type": "Any"}, {"lineNumber": 366, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 369, "col_offset": 29, "nodeName": "sorted_ids", "type": "List[Any]"}, {"lineNumber": 369, "col_offset": 41, "nodeName": "ids", "type": "Any"}, {"lineNumber": 381, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 383, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 383, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 386, "col_offset": 13, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 390, "col_offset": 13, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 393, "col_offset": 34, "nodeName": "warmup_step", "type": "int"}, {"lineNumber": 405, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 408, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 408, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 412, "col_offset": 13, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "step", "type": "Callable[[Any], Tuple[Any, Any, Any, Dict[Any, Any]]]"}, {"lineNumber": 416, "col_offset": 13, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 419, "col_offset": 34, "nodeName": "sims_per_step", "type": "int"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 28, "col_offset": 30, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 42, "col_offset": 23, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "after_reset", "type": "numpy.ndarray"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "before_reset", "type": "numpy.ndarray"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "after_reset", "type": "numpy.ndarray"}, {"lineNumber": 70, "col_offset": 43, "nodeName": "offset", "type": "Any"}, {"lineNumber": 70, "col_offset": 51, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 114, "col_offset": 45, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 114, "col_offset": 57, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 114, "col_offset": 67, "nodeName": "ids", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 120, "col_offset": 44, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 120, "col_offset": 56, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 120, "col_offset": 66, "nodeName": "ids", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "TestVehicleArrangementShuffle"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 136, "col_offset": 61, "nodeName": "sumo_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "sumo_params", "type": "Any"}, {"lineNumber": 163, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 168, "col_offset": 30, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 183, "col_offset": 46, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 183, "col_offset": 67, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 199, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 206, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 206, "col_offset": 53, "nodeName": "accel_step0", "type": "numpy.ndarray"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "simulation", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 228, "col_offset": 51, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 232, "col_offset": 44, "nodeName": "ids", "type": "Any"}, {"lineNumber": 232, "col_offset": 53, "nodeName": "accel_step1", "type": "numpy.ndarray"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 250, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 259, "col_offset": 20, "nodeName": "ids", "type": "Any"}, {"lineNumber": 260, "col_offset": 22, "nodeName": "bad_directions", "type": "numpy.ndarray"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 270, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 275, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 276, "col_offset": 50, "nodeName": "direction0", "type": "numpy.ndarray"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 296, "col_offset": 18, "nodeName": "simulation", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 299, "col_offset": 51, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 303, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 304, "col_offset": 50, "nodeName": "direction1", "type": "numpy.ndarray"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 309, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 330, "col_offset": 30, "nodeName": "additional_env_params", "type": "Dict[str, int]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 335, "col_offset": 23, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 336, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 337, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 341, "col_offset": 21, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 342, "col_offset": 20, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 354, "col_offset": 30, "nodeName": "additional_env_params", "type": "Dict[str, int]"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 359, "col_offset": 23, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 360, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 361, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 365, "col_offset": 26, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 366, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 382, "col_offset": 25, "nodeName": "warmup_step", "type": "int"}, {"lineNumber": 382, "col_offset": 56, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 383, "col_offset": 55, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "self", "type": "TestWarmUpSteps"}, {"lineNumber": 393, "col_offset": 25, "nodeName": "t2", "type": "int"}, {"lineNumber": 393, "col_offset": 30, "nodeName": "t1", "type": "int"}, {"lineNumber": 406, "col_offset": 26, "nodeName": "sims_per_step", "type": "int"}, {"lineNumber": 407, "col_offset": 30, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 408, "col_offset": 55, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "self", "type": "TestSimsPerStep"}, {"lineNumber": 419, "col_offset": 25, "nodeName": "t2", "type": "int"}, {"lineNumber": 419, "col_offset": 30, "nodeName": "t1", "type": "int"}, {"lineNumber": 34, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 35, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestStartingPositionShuffle"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 58, "col_offset": 55, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 58, "col_offset": 65, "nodeName": "ids", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestStartingPositionShuffle"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 65, "col_offset": 55, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 65, "col_offset": 65, "nodeName": "ids", "type": "Any"}, {"lineNumber": 70, "col_offset": 51, "nodeName": "env", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestVehicleArrangementShuffle"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "TestVehicleArrangementShuffle"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "env", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "env", "type": "Any"}, {"lineNumber": 174, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 176, "col_offset": 38, "nodeName": "SumoCarFollowingParams", "type": "Type[flow.core.params.SumoCarFollowingParams]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 199, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "get_speed", "type": "Any"}, {"lineNumber": 202, "col_offset": 41, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 202, "col_offset": 53, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 202, "col_offset": 63, "nodeName": "ids", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 213, "col_offset": 16, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 213, "col_offset": 26, "nodeName": "ids", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "vel0", "type": "numpy.ndarray"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 239, "col_offset": 26, "nodeName": "ids", "type": "Any"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "vel1", "type": "numpy.ndarray"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 250, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 270, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 272, "col_offset": 13, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 272, "col_offset": 40, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 272, "col_offset": 52, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 272, "col_offset": 62, "nodeName": "ids", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 283, "col_offset": 26, "nodeName": "ids", "type": "Any"}, {"lineNumber": 285, "col_offset": 26, "nodeName": "lane0", "type": "numpy.ndarray"}, {"lineNumber": 286, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 293, "col_offset": 27, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 296, "col_offset": 18, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 311, "col_offset": 26, "nodeName": "ids", "type": "Any"}, {"lineNumber": 313, "col_offset": 26, "nodeName": "lane1", "type": "numpy.ndarray"}, {"lineNumber": 314, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 342, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 365, "col_offset": 26, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 366, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "self", "type": "TestStartingPositionShuffle"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "env", "type": "Any"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "env", "type": "Any"}, {"lineNumber": 70, "col_offset": 51, "nodeName": "self", "type": "TestStartingPositionShuffle"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "self", "type": "TestVehicleArrangementShuffle"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "self", "type": "TestVehicleArrangementShuffle"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "self", "type": "TestVehicleArrangementShuffle"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 199, "col_offset": 14, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 215, "col_offset": 32, "nodeName": "accel_step0", "type": "numpy.ndarray"}, {"lineNumber": 222, "col_offset": 37, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "env", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 241, "col_offset": 32, "nodeName": "accel_step1", "type": "numpy.ndarray"}, {"lineNumber": 250, "col_offset": 14, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 270, "col_offset": 14, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 272, "col_offset": 13, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 285, "col_offset": 34, "nodeName": "sign", "type": "Any"}, {"lineNumber": 285, "col_offset": 42, "nodeName": "direction0", "type": "numpy.ndarray"}, {"lineNumber": 286, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 293, "col_offset": 37, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 296, "col_offset": 18, "nodeName": "env", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 313, "col_offset": 34, "nodeName": "sign", "type": "Any"}, {"lineNumber": 313, "col_offset": 42, "nodeName": "direction1", "type": "numpy.ndarray"}, {"lineNumber": 314, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 342, "col_offset": 20, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 347, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 366, "col_offset": 14, "nodeName": "self", "type": "TestSorting"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "self", "type": "TestStartingPositionShuffle"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "self", "type": "TestStartingPositionShuffle"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "env", "type": "Any"}, {"lineNumber": 222, "col_offset": 37, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 272, "col_offset": 13, "nodeName": "env", "type": "Any"}, {"lineNumber": 285, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 286, "col_offset": 23, "nodeName": "env", "type": "Any"}, {"lineNumber": 293, "col_offset": 37, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 296, "col_offset": 18, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 313, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 314, "col_offset": 23, "nodeName": "env", "type": "Any"}, {"lineNumber": 347, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 222, "col_offset": 37, "nodeName": "env", "type": "Any"}, {"lineNumber": 272, "col_offset": 13, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 286, "col_offset": 23, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 293, "col_offset": 37, "nodeName": "env", "type": "Any"}, {"lineNumber": 314, "col_offset": 23, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 222, "col_offset": 37, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 293, "col_offset": 37, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 347, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 347, "col_offset": 35, "nodeName": "positions", "type": "Any"}]