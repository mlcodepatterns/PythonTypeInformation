[{"lineNumber": 18, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 368, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 428, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 495, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 536, "col_offset": 38, "nodeName": "TestEvenStartPosVariableLanes", "type": "Type[TestEvenStartPosVariableLanes]"}, {"lineNumber": 553, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 588, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 622, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 655, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 680, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 707, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 368, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 428, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 495, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 553, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 588, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 622, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 655, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 680, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 707, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 775, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "edge_1", "type": "str"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "pos_1", "type": "float"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "edge_2", "type": "str"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "pos_2", "type": "float"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "x1", "type": "int"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "x2", "type": "float"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "x0", "type": "int"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "bunching", "type": "int"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "bunching", "type": "int"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "veh_lanes", "type": "List[Any]"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 297, "col_offset": 29, "nodeName": "inf", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "spacing", "type": "str"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 470, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "expected_num_vehicles", "type": "Any"}, {"lineNumber": 523, "col_offset": 32, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 531, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 539, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 564, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 599, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 670, "col_offset": 8, "nodeName": "edge_list", "type": "Any"}, {"lineNumber": 692, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "junction_list", "type": "List[Any]"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 731, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 732, "col_offset": 8, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 742, "col_offset": 8, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 762, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 771, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 776, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 49, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "length", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "length", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 184, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "length", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 197, "col_offset": 66, "nodeName": "bunching", "type": "int"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 208, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 216, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "length", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 242, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 245, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 247, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 254, "col_offset": 23, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 277, "col_offset": 29, "nodeName": "randint", "type": "Any"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 281, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 284, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 297, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 298, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 301, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 304, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 306, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 306, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 313, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 313, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 333, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 336, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 340, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "startpos", "type": "Any"}, {"lineNumber": 355, "col_offset": 18, "nodeName": "startlanes", "type": "Any"}, {"lineNumber": 355, "col_offset": 31, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 357, "col_offset": 25, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 359, "col_offset": 25, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 362, "col_offset": 31, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 378, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 384, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 387, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 401, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 402, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 406, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 407, "col_offset": 29, "nodeName": "length", "type": "Any"}, {"lineNumber": 412, "col_offset": 15, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 433, "col_offset": 49, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 435, "col_offset": 8, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 440, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 443, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 450, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 466, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 467, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 470, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 482, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 486, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 490, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 498, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 504, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 508, "col_offset": 29, "nodeName": "variable_lanes_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 523, "col_offset": 32, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 525, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 528, "col_offset": 25, "nodeName": "expected_num_vehicles", "type": "Any"}, {"lineNumber": 528, "col_offset": 48, "nodeName": "actual_num_vehicles", "type": "int"}, {"lineNumber": 531, "col_offset": 16, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 532, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 533, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 539, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 545, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 549, "col_offset": 29, "nodeName": "variable_lanes_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 564, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 567, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 567, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 577, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 580, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 580, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 580, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 599, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 602, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 602, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 612, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 615, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 615, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 615, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 633, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 636, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 636, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 636, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 646, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 649, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 649, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 649, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 663, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 663, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 663, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 667, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 670, "col_offset": 20, "nodeName": "get_edge_list", "type": "Callable[[], Any]"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 677, "col_offset": 30, "nodeName": "edge_list", "type": "Any"}, {"lineNumber": 677, "col_offset": 41, "nodeName": "expected_edge_list", "type": "List[str]"}, {"lineNumber": 688, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 688, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 688, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 692, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 695, "col_offset": 24, "nodeName": "get_junction_list", "type": "Callable[[], List[Any]]"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 704, "col_offset": 30, "nodeName": "junction_list", "type": "List[Any]"}, {"lineNumber": 704, "col_offset": 45, "nodeName": "expected_junction_list", "type": "List[str]"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 719, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 719, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 720, "col_offset": 20, "nodeName": "next_edge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 724, "col_offset": 30, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 724, "col_offset": 41, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 730, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 730, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure8.figure8_scenario.Figure8Scenario]]"}, {"lineNumber": 731, "col_offset": 20, "nodeName": "prev_edge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 734, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 734, "col_offset": 30, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 734, "col_offset": 41, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 740, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 740, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 741, "col_offset": 20, "nodeName": "next_edge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 744, "col_offset": 30, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 744, "col_offset": 41, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 750, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 750, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 751, "col_offset": 20, "nodeName": "prev_edge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 754, "col_offset": 30, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 754, "col_offset": 41, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 761, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.highway.scenario.HighwayScenario"}, {"lineNumber": 761, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.scenario.HighwayScenario]]"}, {"lineNumber": 762, "col_offset": 20, "nodeName": "next_edge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 763, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 770, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 770, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.highway.scenario.HighwayScenario"}, {"lineNumber": 770, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.scenario.HighwayScenario]]"}, {"lineNumber": 771, "col_offset": 20, "nodeName": "prev_edge", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 772, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 776, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "get_x", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 37, "col_offset": 51, "nodeName": "edge_1", "type": "str"}, {"lineNumber": 37, "col_offset": 59, "nodeName": "pos_1", "type": "float"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "get_x", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 42, "col_offset": 51, "nodeName": "edge_2", "type": "str"}, {"lineNumber": 42, "col_offset": 59, "nodeName": "pos_2", "type": "float"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "get_edge", "type": "Callable[[Any], Optional[Tuple[Any, Any]]]"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "x1", "type": "int"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "get_edge", "type": "Callable[[Any], Optional[Tuple[Any, Any]]]"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "x2", "type": "float"}, {"lineNumber": 89, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 99, "col_offset": 60, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 100, "col_offset": 64, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 101, "col_offset": 58, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 66, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 148, "col_offset": 42, "nodeName": "x0", "type": "int"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 66, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 163, "col_offset": 37, "nodeName": "x0", "type": "int"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "length", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 177, "col_offset": 48, "nodeName": "bunching", "type": "int"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 184, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 185, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 66, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 208, "col_offset": 48, "nodeName": "bunching", "type": "int"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 216, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 66, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 239, "col_offset": 58, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 245, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 259, "col_offset": 23, "nodeName": "length", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 261, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 264, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 264, "col_offset": 49, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 277, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 278, "col_offset": 58, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 284, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 285, "col_offset": 21, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 285, "col_offset": 48, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 285, "col_offset": 60, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 285, "col_offset": 70, "nodeName": "ids", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 298, "col_offset": 58, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 304, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 306, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 313, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 318, "col_offset": 23, "nodeName": "length", "type": "Any"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 333, "col_offset": 58, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 340, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 341, "col_offset": 57, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 342, "col_offset": 22, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 355, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 356, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 356, "col_offset": 29, "nodeName": "startpos", "type": "Any"}, {"lineNumber": 357, "col_offset": 25, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 358, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 358, "col_offset": 29, "nodeName": "startlanes", "type": "Any"}, {"lineNumber": 359, "col_offset": 25, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 362, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 364, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 364, "col_offset": 29, "nodeName": "startpos", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 365, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 365, "col_offset": 29, "nodeName": "startlanes", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 388, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 389, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 401, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 402, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 406, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 406, "col_offset": 66, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 407, "col_offset": 29, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 411, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 416, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 440, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 450, "col_offset": 60, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 451, "col_offset": 64, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 452, "col_offset": 58, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 470, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 472, "col_offset": 20, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 473, "col_offset": 22, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 483, "col_offset": 58, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 490, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 491, "col_offset": 57, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 492, "col_offset": 22, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 509, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 509, "col_offset": 46, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 523, "col_offset": 32, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 525, "col_offset": 16, "nodeName": "getIDList", "type": "Any"}, {"lineNumber": 528, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 531, "col_offset": 16, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 531, "col_offset": 43, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 550, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 550, "col_offset": 46, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 564, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 567, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 569, "col_offset": 25, "nodeName": "edge_length", "type": "Callable[[Any], Any]"}, {"lineNumber": 578, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 580, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 582, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 583, "col_offset": 12, "nodeName": "edge_length", "type": "Callable[[Any], Any]"}, {"lineNumber": 584, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 585, "col_offset": 12, "nodeName": "edge_length", "type": "Callable[[Any], Any]"}, {"lineNumber": 599, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 602, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 604, "col_offset": 31, "nodeName": "speed_limit", "type": "Callable[[Any], Any]"}, {"lineNumber": 613, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 615, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 617, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 617, "col_offset": 31, "nodeName": "speed_limit", "type": "Callable[[Any], Any]"}, {"lineNumber": 619, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 619, "col_offset": 31, "nodeName": "speed_limit", "type": "Callable[[Any], Any]"}, {"lineNumber": 633, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 636, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 638, "col_offset": 25, "nodeName": "num_lanes", "type": "Callable[[Any], Any]"}, {"lineNumber": 647, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 649, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 651, "col_offset": 25, "nodeName": "num_lanes", "type": "Callable[[Any], Any]"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 652, "col_offset": 25, "nodeName": "num_lanes", "type": "Callable[[Any], Any]"}, {"lineNumber": 663, "col_offset": 13, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 670, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 677, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 688, "col_offset": 13, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 695, "col_offset": 24, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 720, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 724, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 731, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 734, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 741, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 751, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 762, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.highway.scenario.HighwayScenario"}, {"lineNumber": 763, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 771, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.highway.scenario.HighwayScenario"}, {"lineNumber": 772, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 94, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 124, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 124, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 124, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "append", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 155, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 155, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 155, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "append", "type": "Any"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 184, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 185, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 185, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "append", "type": "Any"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 197, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 216, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 216, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "append", "type": "Any"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 245, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 259, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 264, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 265, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 277, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 284, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 285, "col_offset": 21, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 286, "col_offset": 35, "nodeName": "veh_lanes", "type": "List[Any]"}, {"lineNumber": 304, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 306, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 313, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 318, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 340, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 341, "col_offset": 42, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 355, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 357, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 359, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 362, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 380, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 381, "col_offset": 41, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 401, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 402, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 402, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 402, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 402, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 406, "col_offset": 29, "nodeName": "append", "type": "Any"}, {"lineNumber": 407, "col_offset": 29, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 416, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 445, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 446, "col_offset": 41, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 470, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 471, "col_offset": 15, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 471, "col_offset": 42, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 472, "col_offset": 20, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 490, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 491, "col_offset": 15, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 491, "col_offset": 42, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 500, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 501, "col_offset": 41, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 513, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 523, "col_offset": 32, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 525, "col_offset": 16, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 531, "col_offset": 16, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 531, "col_offset": 43, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 532, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 532, "col_offset": 24, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 532, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 541, "col_offset": 46, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 542, "col_offset": 41, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 569, "col_offset": 25, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 583, "col_offset": 12, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 585, "col_offset": 12, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 604, "col_offset": 31, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 617, "col_offset": 31, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 619, "col_offset": 31, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 638, "col_offset": 25, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 651, "col_offset": 25, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 652, "col_offset": 25, "nodeName": "scenario", "type": "flow.scenarios.figure8.figure8_scenario.Figure8Scenario"}, {"lineNumber": 670, "col_offset": 20, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 695, "col_offset": 24, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 762, "col_offset": 39, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 763, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 763, "col_offset": 28, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 771, "col_offset": 39, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 772, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 772, "col_offset": 28, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 39, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 128, "col_offset": 52, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 154, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 52, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 166, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 184, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 39, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 189, "col_offset": 52, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 39, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 220, "col_offset": 52, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 225, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 225, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 225, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 245, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 249, "col_offset": 32, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 249, "col_offset": 42, "nodeName": "ids", "type": "Any"}, {"lineNumber": 258, "col_offset": 23, "nodeName": "append", "type": "Any"}, {"lineNumber": 258, "col_offset": 66, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 259, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 261, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 264, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 265, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 284, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 285, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 286, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 304, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 306, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 308, "col_offset": 32, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 308, "col_offset": 42, "nodeName": "ids", "type": "Any"}, {"lineNumber": 313, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 317, "col_offset": 23, "nodeName": "append", "type": "Any"}, {"lineNumber": 317, "col_offset": 66, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 318, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 340, "col_offset": 22, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 355, "col_offset": 31, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 357, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 359, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 362, "col_offset": 31, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 401, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 402, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 406, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 406, "col_offset": 39, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 406, "col_offset": 52, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 407, "col_offset": 29, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 411, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 470, "col_offset": 22, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 471, "col_offset": 15, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 490, "col_offset": 22, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 491, "col_offset": 15, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 525, "col_offset": 16, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 531, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 531, "col_offset": 43, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 532, "col_offset": 39, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 762, "col_offset": 39, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 771, "col_offset": 39, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 193, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 225, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 69, "nodeName": "i", "type": "int"}, {"lineNumber": 258, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 258, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 259, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 261, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 261, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 264, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 285, "col_offset": 21, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 309, "col_offset": 69, "nodeName": "i", "type": "int"}, {"lineNumber": 317, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 317, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 318, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 320, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 357, "col_offset": 25, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 359, "col_offset": 25, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 402, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 411, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 411, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 411, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 416, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 416, "col_offset": 31, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 425, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 471, "col_offset": 15, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 491, "col_offset": 15, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 525, "col_offset": 16, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 531, "col_offset": 43, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 762, "col_offset": 39, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 771, "col_offset": 39, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 250, "col_offset": 31, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 250, "col_offset": 58, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 258, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 258, "col_offset": 49, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 261, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 261, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 265, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 265, "col_offset": 45, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 309, "col_offset": 31, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 309, "col_offset": 58, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 317, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 317, "col_offset": 49, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 320, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 320, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 411, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 417, "col_offset": 19, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 417, "col_offset": 36, "nodeName": "mean", "type": "Any"}, {"lineNumber": 417, "col_offset": 44, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 420, "col_offset": 27, "nodeName": "get_x_by_id", "type": "Callable[[Any], Any]"}, {"lineNumber": 420, "col_offset": 48, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 420, "col_offset": 60, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 422, "col_offset": 72, "nodeName": "pos_i", "type": "Any"}, {"lineNumber": 423, "col_offset": 34, "nodeName": "pos", "type": "List[Any]"}, {"lineNumber": 425, "col_offset": 20, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 425, "col_offset": 36, "nodeName": "any", "type": "Any"}, {"lineNumber": 471, "col_offset": 15, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 491, "col_offset": 15, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 525, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 250, "col_offset": 31, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 258, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 258, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 309, "col_offset": 31, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 317, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 317, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 417, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 417, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 420, "col_offset": 27, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 422, "col_offset": 31, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 422, "col_offset": 58, "nodeName": "pos_i", "type": "Any"}, {"lineNumber": 425, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 250, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 309, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 420, "col_offset": 27, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 421, "col_offset": 28, "nodeName": "ids", "type": "Any"}, {"lineNumber": 421, "col_offset": 40, "nodeName": "ids", "type": "Any"}, {"lineNumber": 422, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 425, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 425, "col_offset": 52, "nodeName": "rel_pos", "type": "List[Any]"}, {"lineNumber": 250, "col_offset": 31, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 309, "col_offset": 31, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 421, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 422, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 425, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 421, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 422, "col_offset": 31, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}]