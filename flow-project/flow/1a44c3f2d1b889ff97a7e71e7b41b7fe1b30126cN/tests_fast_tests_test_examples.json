[{"lineNumber": 45, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "unittest", "type": "module"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 240, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "random", "type": "module"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "render", "type": "bool"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "horizon", "type": "int"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.Experiment"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable, Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 243, "col_offset": 11, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "main", "type": "Type[unittest.main.TestProgram]"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "shutdown", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "non_rl_bottleneck", "type": "Dict[Any, Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "non_rl_figure_eight", "type": "Dict[Any, Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "non_rl_traffic_light_grid", "type": "Dict[Any, Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "non_rl_highway", "type": "Dict[Any, Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "non_rl_highway_ramps", "type": "Dict[Any, Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "non_rl_merge", "type": "Dict[Any, Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "non_rl_ring", "type": "Dict[Any, Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "non_rl_bay_bridge", "type": "Dict[Any, Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "non_rl_bay_bridge_toll", "type": "Dict[Any, Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "non_rl_minicity", "type": "Dict[Any, Any]"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "Experiment", "type": "Type[flow.core.experiment.Experiment]"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "run", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "run_stable_baselines_model", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "singleagent_figure_eight", "type": "Dict[Any, Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "singleagent_merge", "type": "Dict[Any, Any]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 21, "nodeName": "singleagent_ring", "type": "Dict[Any, Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "singleagent_bottleneck", "type": "Dict[Any, Any]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "singleagent_figure_eight", "type": "Dict[Any, Any]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 21, "nodeName": "singleagent_merge", "type": "Dict[Any, Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "singleagent_ring", "type": "Dict[Any, Any]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 21, "nodeName": "singleagent_bottleneck", "type": "Dict[Any, Any]"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "mf8pg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 179, "col_offset": 33, "nodeName": "mf8pmf", "type": "Callable"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "multiagent_figure_eight", "type": "Dict[Any, Any]"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "mrpg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "mrpt", "type": "List[str]"}, {"lineNumber": 191, "col_offset": 33, "nodeName": "mrpmf", "type": "Callable[[Any], str]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 193, "col_offset": 21, "nodeName": "multiagent_ring", "type": "Dict[Any, Any]"}, {"lineNumber": 204, "col_offset": 29, "nodeName": "mhpg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 205, "col_offset": 33, "nodeName": "mhpt", "type": "List[str]"}, {"lineNumber": 206, "col_offset": 33, "nodeName": "mhpmf", "type": "Callable[[Any], str]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "multiagent_highway", "type": "Dict[Any, Any]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "env_name", "type": "str"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 212, "col_offset": 36, "nodeName": "setup_rllib_exps", "type": "Callable[..., Tuple[str, str, Any]]"}, {"lineNumber": 212, "col_offset": 53, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 216, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "run_experiments", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "ray", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.Experiment"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "TestStableBaselineExamples"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "TestStableBaselineExamples"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "TestStableBaselineExamples"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "TestStableBaselineExamples"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "is_initialized", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "init", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 181, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Union[Callable, Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 193, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 208, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 212, "col_offset": 74, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "init", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "ray", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "e", "type": "Exception"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "ray", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "ray", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "ray", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 217, "col_offset": 27, "nodeName": "e", "type": "Exception"}, {"lineNumber": 226, "col_offset": 23, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 227, "col_offset": 23, "nodeName": "env_name", "type": "str"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "config", "type": "Any"}]