[{"lineNumber": 8, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "test_split_edge", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "test_convert_edge", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "gen_edges", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "test_get_distance_to_intersection", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "test_get_relative_node", "type": "Callable[[Any], Any]"}, {"lineNumber": 8, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 139, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.Experiment"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "exp", "type": "None"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "dists", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "grid", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "short_length", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "d_list", "type": "Any"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "dists", "type": "List[Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "veh_edges", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "junction_veh", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.Experiment"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "exp", "type": "None"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "env", "type": "flow.envs.traffic_light_grid.TrafficLightGridTestEnv"}, {"lineNumber": 12, "col_offset": 18, "nodeName": "_", "type": "flow.networks.traffic_light_grid.TrafficLightGridNetwork"}, {"lineNumber": 12, "col_offset": 21, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 12, "col_offset": 35, "nodeName": "traffic_light_grid_mxn_exp_setup", "type": "Callable[..., Tuple[flow.envs.traffic_light_grid.TrafficLightGridTestEnv, flow.networks.traffic_light_grid.TrafficLightGridNetwork, Dict[Any, Any]]]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 16, "col_offset": 19, "nodeName": "Experiment", "type": "Type[flow.core.experiment.Experiment]"}, {"lineNumber": 16, "col_offset": 30, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "edge", "type": "str"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "col_num", "type": "int"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "row_num", "type": "int"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "grid", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "d", "type": "Any"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "d_list", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "env", "type": "flow.envs.traffic_light_grid.TrafficLightGridTestEnv"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "_", "type": "flow.networks.traffic_light_grid.TrafficLightGridNetwork"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "traffic_light_grid_mxn_exp_setup", "type": "Callable[..., Tuple[flow.envs.traffic_light_grid.TrafficLightGridTestEnv, flow.networks.traffic_light_grid.TrafficLightGridNetwork, Dict[Any, Any]]]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 103, "col_offset": 19, "nodeName": "Experiment", "type": "Type[flow.core.experiment.Experiment]"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "_get_relative_node", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "_get_relative_node", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "_get_relative_node", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "_get_relative_node", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "_get_relative_node", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "node", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "_get_relative_node", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "node", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "env", "type": "flow.envs.traffic_light_grid.TrafficLightGridTestEnv"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "env", "type": "flow.envs.traffic_light_grid.TrafficLightGridTestEnv"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "get_ids_by_edge", "type": "Any"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "e", "type": "str"}, {"lineNumber": 67, "col_offset": 54, "nodeName": "e", "type": "str"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "get_distance_to_intersection", "type": "Any"}, {"lineNumber": 69, "col_offset": 55, "nodeName": "v", "type": "Any"}, {"lineNumber": 69, "col_offset": 62, "nodeName": "v", "type": "Any"}, {"lineNumber": 69, "col_offset": 67, "nodeName": "veh_ids", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "d_list", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "env", "type": "flow.envs.traffic_light_grid.TrafficLightGridTestEnv"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "env", "type": "flow.envs.traffic_light_grid.TrafficLightGridTestEnv"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "env", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "env", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "env", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "_get_relative_node", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "env", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "env", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "env", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "_get_relative_node", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "_split_edge", "type": "Any"}, {"lineNumber": 38, "col_offset": 50, "nodeName": "edge", "type": "str"}, {"lineNumber": 38, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "_convert_edge", "type": "Any"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "i", "type": "int"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 67, "col_offset": 59, "nodeName": "gen_edges", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "env", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "env", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "dists", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "assertLessEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "d", "type": "Any"}, {"lineNumber": 80, "col_offset": 40, "nodeName": "short_length", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "assertGreaterEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "d", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "edge", "type": "Any"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "edge", "type": "Any"}, {"lineNumber": 86, "col_offset": 48, "nodeName": "veh_edges", "type": "Any"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "get_distance_to_intersection", "type": "Any"}, {"lineNumber": 92, "col_offset": 70, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 135, "col_offset": 13, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "env", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "env", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 53, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 54, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 54, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 59, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 59, "col_offset": 49, "nodeName": "col_num", "type": "int"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 67, "col_offset": 59, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "env", "type": "Any"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "k", "type": "Any"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 87, "col_offset": 46, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "env", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "self", "type": "Test2x2Environment"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "env", "type": "Any"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "k", "type": "Any"}, {"lineNumber": 87, "col_offset": 46, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "k", "type": "Any"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "row_num", "type": "int"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "env", "type": "Any"}, {"lineNumber": 87, "col_offset": 46, "nodeName": "k", "type": "Any"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "env", "type": "Any"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 87, "col_offset": 46, "nodeName": "env", "type": "Any"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "self", "type": "Test1x1Environment"}, {"lineNumber": 87, "col_offset": 46, "nodeName": "self", "type": "Test1x1Environment"}]