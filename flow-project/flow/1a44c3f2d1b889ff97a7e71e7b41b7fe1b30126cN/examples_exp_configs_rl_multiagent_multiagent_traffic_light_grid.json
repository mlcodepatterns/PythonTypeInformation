[{"lineNumber": 39, "col_offset": 0, "nodeName": "make_flow_params", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 161, "col_offset": 0, "nodeName": "setup_exps_PPO", "type": "Callable[[Any], Any]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "N_ROLLOUTS", "type": "int"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "N_CPUS", "type": "int"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "HORIZON", "type": "int"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "V_ENTER", "type": "int"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "INNER_LENGTH", "type": "int"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "LONG_LENGTH", "type": "int"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "SHORT_LENGTH", "type": "int"}, {"lineNumber": 212, "col_offset": 4, "nodeName": "policy_mapping_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 9, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "N_LEFT", "type": "int"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "N_RIGHT", "type": "int"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "N_TOP", "type": "int"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "N_BOTTOM", "type": "int"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "outer_edges", "type": "List[str]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "outer_edges", "type": "List[str]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "outer_edges", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "outer_edges", "type": "List[str]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "outer_edges", "type": "List[str]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "inflow", "type": "flow.core.params.InFlows"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "edge", "type": "str"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "outer_edges", "type": "List[str]"}, {"lineNumber": 158, "col_offset": 11, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "agent_cls", "type": "Any"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "HORIZON", "type": "int"}, {"lineNumber": 194, "col_offset": 42, "nodeName": "flow_json", "type": "str"}, {"lineNumber": 195, "col_offset": 34, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "test_env", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "obs_space", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "act_space", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "policy_graphs", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 227, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "EDGE_INFLOW", "type": "Any"}, {"lineNumber": 255, "col_offset": 18, "nodeName": "inflow_rate", "type": "Any"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "N_ROWS", "type": "Any"}, {"lineNumber": 256, "col_offset": 13, "nodeName": "num_rows", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "N_COLUMNS", "type": "Any"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "num_cols", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "upload_dir", "type": "Any"}, {"lineNumber": 261, "col_offset": 17, "nodeName": "upload_dir", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "RUN_MODE", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "run_mode", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "ALGO", "type": "Any"}, {"lineNumber": 263, "col_offset": 11, "nodeName": "algo", "type": "Any"}, {"lineNumber": 289, "col_offset": 7, "nodeName": "upload_dir", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "InFlows", "type": "Type[flow.core.params.InFlows]"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "get_agent_class", "type": "Any"}, {"lineNumber": 179, "col_offset": 32, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "min", "type": "Callable"}, {"lineNumber": 181, "col_offset": 32, "nodeName": "N_CPUS", "type": "int"}, {"lineNumber": 181, "col_offset": 40, "nodeName": "N_ROLLOUTS", "type": "int"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 182, "col_offset": 33, "nodeName": "HORIZON", "type": "int"}, {"lineNumber": 182, "col_offset": 43, "nodeName": "N_ROLLOUTS", "type": "int"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "update", "type": "Any"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "grid_search", "type": "Any"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "create_env", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "env_name", "type": "str"}, {"lineNumber": 197, "col_offset": 27, "nodeName": "make_create_env", "type": "Callable[..., Tuple[Callable[..., Any], str]]"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "register_env", "type": "Any"}, {"lineNumber": 200, "col_offset": 17, "nodeName": "env_name", "type": "str"}, {"lineNumber": 200, "col_offset": 27, "nodeName": "create_env", "type": "Callable[..., Any]"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "create_env", "type": "Callable[..., Any]"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "test_env", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "test_env", "type": "Any"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "update", "type": "Any"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "env_name", "type": "str"}, {"lineNumber": 224, "col_offset": 30, "nodeName": "config", "type": "Any"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 253, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 255, "col_offset": 18, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 256, "col_offset": 13, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 259, "col_offset": 18, "nodeName": "make_flow_params", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 259, "col_offset": 35, "nodeName": "N_ROWS", "type": "Any"}, {"lineNumber": 259, "col_offset": 43, "nodeName": "N_COLUMNS", "type": "Any"}, {"lineNumber": 259, "col_offset": 54, "nodeName": "EDGE_INFLOW", "type": "Any"}, {"lineNumber": 261, "col_offset": 17, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 263, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 265, "col_offset": 7, "nodeName": "ALGO", "type": "Any"}, {"lineNumber": 268, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 270, "col_offset": 7, "nodeName": "RUN_MODE", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "N_ITER", "type": "int"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "env_name", "type": "str"}, {"lineNumber": 285, "col_offset": 18, "nodeName": "config", "type": "Any"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "run_experiments", "type": "Any"}, {"lineNumber": 60, "col_offset": 40, "nodeName": "n_columns", "type": "Any"}, {"lineNumber": 60, "col_offset": 73, "nodeName": "n_rows", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "n_rows", "type": "Any"}, {"lineNumber": 75, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 75, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 78, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "n_columns", "type": "Any"}, {"lineNumber": 78, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "MultiTrafficLightGridPOEnv", "type": "Type[flow.envs.multiagent.traffic_light_grid.MultiTrafficLightGridPOEnv]"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "TrafficLightGridNetwork", "type": "Type[flow.networks.traffic_light_grid.TrafficLightGridNetwork]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "_default_config", "type": "Any"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "tune", "type": "Any"}, {"lineNumber": 192, "col_offset": 16, "nodeName": "json", "type": "module"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "FlowParamsEncoder", "type": "Type[flow.utils.rllib.FlowParamsEncoder]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 195, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 197, "col_offset": 50, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "PPOTFPolicy", "type": "Any"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "obs_space", "type": "Any"}, {"lineNumber": 207, "col_offset": 39, "nodeName": "act_space", "type": "Any"}, {"lineNumber": 210, "col_offset": 27, "nodeName": "gen_policy", "type": "Callable[[], Any]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "RawDescriptionHelpFormatter", "type": "Type[argparse.RawDescriptionHelpFormatter]"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "EXAMPLE_USAGE", "type": "str"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 239, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 243, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 245, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 247, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 249, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 249, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 251, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 251, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 253, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 266, "col_offset": 17, "nodeName": "env_name", "type": "str"}, {"lineNumber": 266, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 266, "col_offset": 36, "nodeName": "setup_exps_PPO", "type": "Callable[[Any], Any]"}, {"lineNumber": 266, "col_offset": 51, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 273, "col_offset": 9, "nodeName": "RUN_MODE", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "N_ITER", "type": "int"}, {"lineNumber": 283, "col_offset": 34, "nodeName": "N_ITER", "type": "int"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "exp_tag", "type": "Dict[str, Any]"}, {"lineNumber": 290, "col_offset": 32, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 290, "col_offset": 49, "nodeName": "upload_dir", "type": "Any"}, {"lineNumber": 294, "col_offset": 36, "nodeName": "exp_tag", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "N_LEFT", "type": "int"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "N_RIGHT", "type": "int"}, {"lineNumber": 60, "col_offset": 53, "nodeName": "N_BOTTOM", "type": "int"}, {"lineNumber": 60, "col_offset": 64, "nodeName": "N_TOP", "type": "int"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "SimCarFollowingController", "type": "Type[flow.controllers.car_following_models.SimCarFollowingController]"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "SumoCarFollowingParams", "type": "Type[flow.core.params.SumoCarFollowingParams]"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "GridRouter", "type": "Type[flow.controllers.routing_controllers.GridRouter]"}, {"lineNumber": 75, "col_offset": 59, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 75, "col_offset": 65, "nodeName": "n_columns", "type": "Any"}, {"lineNumber": 76, "col_offset": 51, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 76, "col_offset": 57, "nodeName": "n_rows", "type": "Any"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 77, "col_offset": 55, "nodeName": "n_rows", "type": "Any"}, {"lineNumber": 78, "col_offset": 61, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 78, "col_offset": 67, "nodeName": "n_rows", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "inflow", "type": "flow.core.params.InFlows"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "edge", "type": "str"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "edge_inflow", "type": "Any"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "V_ENTER", "type": "int"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 92, "col_offset": 53, "nodeName": "n_rows", "type": "Any"}, {"lineNumber": 92, "col_offset": 61, "nodeName": "n_columns", "type": "Any"}, {"lineNumber": 93, "col_offset": 53, "nodeName": "edge_inflow", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "agent_cls", "type": "Any"}, {"lineNumber": 185, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "policy_graphs", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "argparse", "type": "module"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "ray", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "V_ENTER", "type": "int"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "HORIZON", "type": "int"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "inflow", "type": "flow.core.params.InFlows"}, {"lineNumber": 219, "col_offset": 33, "nodeName": "function", "type": "Any"}, {"lineNumber": 219, "col_offset": 47, "nodeName": "policy_mapping_fn", "type": "Callable[[Any], Any]"}, {"lineNumber": 271, "col_offset": 26, "nodeName": "N_CPUS", "type": "int"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "ray", "type": "Any"}, {"lineNumber": 219, "col_offset": 33, "nodeName": "tune", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "V_ENTER", "type": "int"}, {"lineNumber": 132, "col_offset": 36, "nodeName": "SHORT_LENGTH", "type": "int"}, {"lineNumber": 133, "col_offset": 36, "nodeName": "INNER_LENGTH", "type": "int"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "LONG_LENGTH", "type": "int"}, {"lineNumber": 135, "col_offset": 31, "nodeName": "n_rows", "type": "Any"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "n_columns", "type": "Any"}, {"lineNumber": 137, "col_offset": 33, "nodeName": "N_LEFT", "type": "int"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "N_RIGHT", "type": "int"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "N_TOP", "type": "int"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "N_BOTTOM", "type": "int"}]