[{"lineNumber": 53, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "unittest", "type": "module"}, {"lineNumber": 189, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 401, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "random", "type": "module"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "render", "type": "bool"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "horizon", "type": "int"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.Experiment"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "train_model", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable, Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "test_env", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "obs_space", "type": "Any"}, {"lineNumber": 337, "col_offset": 20, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "act_space", "type": "Any"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "POLICY_GRAPHS", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "test_env", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "obs_space", "type": "Any"}, {"lineNumber": 359, "col_offset": 20, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "act_space", "type": "Any"}, {"lineNumber": 360, "col_offset": 20, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "POLICY_GRAPHS", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 404, "col_offset": 11, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 406, "col_offset": 4, "nodeName": "main", "type": "Type[unittest.main.TestProgram]"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "shutdown", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 28, "nodeName": "non_rl_bottleneck", "type": "Dict[Any, Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "non_rl_figure_eight", "type": "Dict[Any, Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "non_rl_traffic_light_grid", "type": "Dict[Any, Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "non_rl_highway", "type": "Dict[Any, Any]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "non_rl_highway_ramps", "type": "Dict[Any, Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "non_rl_merge", "type": "Dict[Any, Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "non_rl_ring", "type": "Dict[Any, Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "non_rl_bay_bridge", "type": "Dict[Any, Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "non_rl_bay_bridge_toll", "type": "Dict[Any, Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "non_rl_minicity", "type": "Dict[Any, Any]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "non_rl_i210", "type": "Dict[Any, Any]"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "Experiment", "type": "Type[flow.core.experiment.Experiment]"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "run", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "parse_train_args", "type": "Callable[[Any], argparse.Namespace]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "parse_train_args", "type": "Callable[[Any], argparse.Namespace]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "run_stable_baselines_model", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 49, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "close", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "singleagent_figure_eight", "type": "Dict[Any, Any]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "singleagent_traffic_light_grid", "type": "Dict[Any, Any]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "singleagent_merge", "type": "Dict[Any, Any]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 183, "col_offset": 21, "nodeName": "singleagent_ring", "type": "Dict[Any, Any]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 21, "nodeName": "singleagent_bottleneck", "type": "Dict[Any, Any]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "train_h_baselines", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 227, "col_offset": 21, "nodeName": "singleagent_figure_eight", "type": "Dict[Any, Any]"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 230, "col_offset": 21, "nodeName": "singleagent_traffic_light_grid", "type": "Dict[Any, Any]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 236, "col_offset": 21, "nodeName": "singleagent_merge", "type": "Dict[Any, Any]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 239, "col_offset": 21, "nodeName": "singleagent_ring", "type": "Dict[Any, Any]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 242, "col_offset": 21, "nodeName": "singleagent_bottleneck", "type": "Dict[Any, Any]"}, {"lineNumber": 249, "col_offset": 29, "nodeName": "af8pg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 250, "col_offset": 33, "nodeName": "af8pmf", "type": "Callable"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 252, "col_offset": 21, "nodeName": "adversarial_figure_eight", "type": "Dict[Any, Any]"}, {"lineNumber": 259, "col_offset": 29, "nodeName": "mf8pg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 260, "col_offset": 33, "nodeName": "mf8pmf", "type": "Callable[[Any], str]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 262, "col_offset": 21, "nodeName": "multiagent_figure_eight", "type": "Dict[Any, Any]"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "ltrpg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 271, "col_offset": 33, "nodeName": "ltrpt", "type": "List[str]"}, {"lineNumber": 272, "col_offset": 33, "nodeName": "ltrpmf", "type": "Callable[[Any], str]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 274, "col_offset": 21, "nodeName": "lord_of_the_rings", "type": "Dict[Any, Any]"}, {"lineNumber": 281, "col_offset": 29, "nodeName": "mrpg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 282, "col_offset": 33, "nodeName": "mrpmf", "type": "Callable[[Any], str]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 284, "col_offset": 21, "nodeName": "multiagent_ring", "type": "Dict[Any, Any]"}, {"lineNumber": 291, "col_offset": 29, "nodeName": "mmpg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 292, "col_offset": 33, "nodeName": "mmpmf", "type": "Callable[[Any], str]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 294, "col_offset": 21, "nodeName": "multiagent_merge", "type": "Dict[Any, Any]"}, {"lineNumber": 302, "col_offset": 29, "nodeName": "mtlpg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 303, "col_offset": 33, "nodeName": "mtlpt", "type": "List[str]"}, {"lineNumber": 304, "col_offset": 33, "nodeName": "mtlpmf", "type": "Callable[[Any], str]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 306, "col_offset": 21, "nodeName": "multiagent_traffic_light_grid", "type": "Dict[Any, Any]"}, {"lineNumber": 314, "col_offset": 29, "nodeName": "mhpg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 315, "col_offset": 33, "nodeName": "mhpt", "type": "List[str]"}, {"lineNumber": 316, "col_offset": 33, "nodeName": "mhpmf", "type": "Callable[[Any], str]"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 318, "col_offset": 21, "nodeName": "multiagent_highway", "type": "Dict[Any, Any]"}, {"lineNumber": 328, "col_offset": 22, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 328, "col_offset": 31, "nodeName": "multiagent_i210", "type": "Dict[Any, Any]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "create_env", "type": "Callable[..., Any]"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "env_name", "type": "str"}, {"lineNumber": 330, "col_offset": 31, "nodeName": "make_create_env", "type": "Callable[..., Tuple[Callable[..., Any], str]]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "register_env", "type": "Any"}, {"lineNumber": 333, "col_offset": 21, "nodeName": "env_name", "type": "str"}, {"lineNumber": 333, "col_offset": 31, "nodeName": "create_env", "type": "Callable[..., Any]"}, {"lineNumber": 336, "col_offset": 19, "nodeName": "create_env", "type": "Callable[..., Any]"}, {"lineNumber": 337, "col_offset": 20, "nodeName": "test_env", "type": "Any"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "test_env", "type": "Any"}, {"lineNumber": 343, "col_offset": 29, "nodeName": "POLICY_GRAPHS", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 344, "col_offset": 33, "nodeName": "mi210pr", "type": "List[str]"}, {"lineNumber": 345, "col_offset": 33, "nodeName": "mi210mf", "type": "Callable[[Any], str]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 347, "col_offset": 21, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 350, "col_offset": 22, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 350, "col_offset": 31, "nodeName": "multiagent_i210", "type": "Dict[Any, Any]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "create_env", "type": "Callable[..., Any]"}, {"lineNumber": 352, "col_offset": 20, "nodeName": "env_name", "type": "str"}, {"lineNumber": 352, "col_offset": 31, "nodeName": "make_create_env", "type": "Callable[..., Tuple[Callable[..., Any], str]]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "register_env", "type": "Any"}, {"lineNumber": 355, "col_offset": 21, "nodeName": "env_name", "type": "str"}, {"lineNumber": 355, "col_offset": 31, "nodeName": "create_env", "type": "Callable[..., Any]"}, {"lineNumber": 358, "col_offset": 19, "nodeName": "create_env", "type": "Callable[..., Any]"}, {"lineNumber": 359, "col_offset": 20, "nodeName": "test_env", "type": "Any"}, {"lineNumber": 360, "col_offset": 20, "nodeName": "test_env", "type": "Any"}, {"lineNumber": 365, "col_offset": 29, "nodeName": "POLICY_GRAPHS", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 366, "col_offset": 33, "nodeName": "mi210pr", "type": "List[str]"}, {"lineNumber": 367, "col_offset": 33, "nodeName": "mi210mf", "type": "Callable[[Any], str]"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 373, "col_offset": 17, "nodeName": "env_name", "type": "str"}, {"lineNumber": 373, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 373, "col_offset": 36, "nodeName": "setup_rllib_exps", "type": "Callable[..., Tuple[str, str, Any]]"}, {"lineNumber": 373, "col_offset": 53, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 377, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 381, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 382, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "run_experiments", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 406, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "ray", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.Experiment"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TestTrain"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "TestTrain"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 152, "col_offset": 34, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "TestStableBaselineExamples"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "TestStableBaselineExamples"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestStableBaselineExamples"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "self", "type": "TestStableBaselineExamples"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "TestStableBaselineExamples"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "multiagent", "type": "bool"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "TestHBaselineExamples"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "TestHBaselineExamples"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "is_initialized", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "init", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 252, "col_offset": 49, "nodeName": "kwargs", "type": "Dict[str, Union[Callable, Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 262, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 274, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 284, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 294, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 306, "col_offset": 54, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 318, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 330, "col_offset": 54, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 340, "col_offset": 32, "nodeName": "PPOTFPolicy", "type": "Any"}, {"lineNumber": 340, "col_offset": 45, "nodeName": "obs_space", "type": "Any"}, {"lineNumber": 340, "col_offset": 56, "nodeName": "act_space", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 347, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 352, "col_offset": 54, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 362, "col_offset": 32, "nodeName": "PPOTFPolicy", "type": "Any"}, {"lineNumber": 362, "col_offset": 45, "nodeName": "obs_space", "type": "Any"}, {"lineNumber": 362, "col_offset": 56, "nodeName": "act_space", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 369, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 373, "col_offset": 74, "nodeName": "kwargs", "type": "Dict[str, Union[Callable, Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "init", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "ray", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 405, "col_offset": 23, "nodeName": "e", "type": "Exception"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "train_model", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "singleagent_ring", "type": "Dict[Any, Any]"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "multiagent_ring", "type": "Dict[Any, Any]"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "ray", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "ray", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "ray", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 378, "col_offset": 27, "nodeName": "e", "type": "Exception"}, {"lineNumber": 387, "col_offset": 23, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 388, "col_offset": 23, "nodeName": "env_name", "type": "str"}, {"lineNumber": 390, "col_offset": 22, "nodeName": "config", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "flow_params", "type": "Dict[Any, Any]"}]