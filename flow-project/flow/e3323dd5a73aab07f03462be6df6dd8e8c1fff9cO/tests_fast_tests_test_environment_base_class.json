[{"lineNumber": 21, "col_offset": 0, "nodeName": "WHITE", "type": "Tuple[int, int, int]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "CYAN", "type": "Tuple[int, int, int]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "RED", "type": "Tuple[int, int, int]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "YELLOW", "type": "Tuple[int, int, int]"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 254, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 350, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 392, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 254, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 278, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 350, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 392, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 411, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "accel_step0", "type": "numpy.ndarray"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "expected_vel1", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "accel_step1", "type": "numpy.ndarray"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "expected_vel2", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "bad_directions", "type": "numpy.ndarray"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "max_lanes", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "direction0", "type": "numpy.ndarray"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "direction1", "type": "numpy.ndarray"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "warmup_step", "type": "int"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "t1", "type": "int"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "t2", "type": "Any"}, {"lineNumber": 272, "col_offset": 13, "nodeName": "time_counter", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "sims_per_step", "type": "int"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "t1", "type": "Any"}, {"lineNumber": 294, "col_offset": 13, "nodeName": "time_counter", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "t2", "type": "Any"}, {"lineNumber": 298, "col_offset": 13, "nodeName": "time_counter", "type": "Any"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "render", "type": "bool"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestShuffle"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "before_reset", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "after_reset", "type": "List[Any]"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "emission_path", "type": "Any"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 123, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 151, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "apply_acceleration", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "simulation_step", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "clip", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 170, "col_offset": 45, "nodeName": "vel1", "type": "numpy.ndarray"}, {"lineNumber": 170, "col_offset": 51, "nodeName": "expected_vel1", "type": "Any"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "apply_acceleration", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "simulation_step", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "clip", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 186, "col_offset": 45, "nodeName": "vel2", "type": "numpy.ndarray"}, {"lineNumber": 186, "col_offset": 51, "nodeName": "expected_vel2", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "apply_lane_change", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "apply_lane_change", "type": "Any"}, {"lineNumber": 220, "col_offset": 45, "nodeName": "ids", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "simulation_step", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "clip", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 233, "col_offset": 45, "nodeName": "lane1", "type": "numpy.ndarray"}, {"lineNumber": 233, "col_offset": 52, "nodeName": "expected_lane1", "type": "Any"}, {"lineNumber": 237, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "apply_lane_change", "type": "Any"}, {"lineNumber": 238, "col_offset": 45, "nodeName": "ids", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "simulation_step", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 248, "col_offset": 26, "nodeName": "clip", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 251, "col_offset": 45, "nodeName": "lane2", "type": "numpy.ndarray"}, {"lineNumber": 251, "col_offset": 52, "nodeName": "expected_lane2", "type": "Any"}, {"lineNumber": 263, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 265, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 272, "col_offset": 13, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 34, "nodeName": "warmup_step", "type": "int"}, {"lineNumber": 287, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 290, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 290, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 294, "col_offset": 13, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 298, "col_offset": 13, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 301, "col_offset": 34, "nodeName": "sims_per_step", "type": "int"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 312, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 312, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 313, "col_offset": 21, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 314, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 315, "col_offset": 19, "nodeName": "Env", "type": "Any"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 325, "col_offset": 26, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 325, "col_offset": 47, "nodeName": "get_state", "type": "Any"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 330, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 337, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 346, "col_offset": 26, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 346, "col_offset": 47, "nodeName": "_apply_rl_actions", "type": "Any"}, {"lineNumber": 353, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "_", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 358, "col_offset": 11, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 358, "col_offset": 22, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 359, "col_offset": 14, "nodeName": "TestEnv", "type": "Type[flow.envs.test.TestEnv]"}, {"lineNumber": 359, "col_offset": 49, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "set_observed", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 370, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "set_observed", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 383, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 396, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 402, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 405, "col_offset": 26, "nodeName": "FatalFlowError", "type": "Type[flow.utils.exceptions.FatalFlowError]"}, {"lineNumber": 406, "col_offset": 26, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.HighwayScenario]]"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "ids", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "ids", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestShuffle"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 89, "col_offset": 60, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 116, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 120, "col_offset": 30, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 135, "col_offset": 46, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 135, "col_offset": 67, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 151, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 158, "col_offset": 54, "nodeName": "ids", "type": "Any"}, {"lineNumber": 158, "col_offset": 63, "nodeName": "accel_step0", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "simulation", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 174, "col_offset": 54, "nodeName": "ids", "type": "Any"}, {"lineNumber": 174, "col_offset": 63, "nodeName": "accel_step1", "type": "numpy.ndarray"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "simulation", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "ids", "type": "Any"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "bad_directions", "type": "numpy.ndarray"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 220, "col_offset": 60, "nodeName": "direction0", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "simulation", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 237, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 238, "col_offset": 60, "nodeName": "direction1", "type": "numpy.ndarray"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "simulation", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "warmup_step", "type": "int"}, {"lineNumber": 264, "col_offset": 56, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 265, "col_offset": 55, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "TestWarmUpSteps"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "t2", "type": "Any"}, {"lineNumber": 275, "col_offset": 30, "nodeName": "t1", "type": "int"}, {"lineNumber": 288, "col_offset": 26, "nodeName": "sims_per_step", "type": "int"}, {"lineNumber": 289, "col_offset": 30, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 290, "col_offset": 55, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "TestSimsPerStep"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "t2", "type": "Any"}, {"lineNumber": 301, "col_offset": 30, "nodeName": "t1", "type": "Any"}, {"lineNumber": 315, "col_offset": 34, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 316, "col_offset": 34, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 317, "col_offset": 32, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 325, "col_offset": 47, "nodeName": "env", "type": "Any"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "compute_reward", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 346, "col_offset": 47, "nodeName": "env", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 358, "col_offset": 51, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 359, "col_offset": 22, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 359, "col_offset": 35, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 370, "col_offset": 22, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 371, "col_offset": 62, "nodeName": "YELLOW", "type": "Tuple[int, int, int]"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 383, "col_offset": 22, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 384, "col_offset": 15, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 403, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "self", "type": "TestNotEnoughVehicles"}, {"lineNumber": 407, "col_offset": 41, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 408, "col_offset": 35, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 43, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestShuffle"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestShuffle"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "env", "type": "Any"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 127, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "SumoCarFollowingParams", "type": "Type[flow.core.params.SumoCarFollowingParams]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 151, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "get_speed", "type": "Any"}, {"lineNumber": 154, "col_offset": 42, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 154, "col_offset": 54, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 154, "col_offset": 64, "nodeName": "ids", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "ids", "type": "Any"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "vel0", "type": "numpy.ndarray"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "ids", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "vel1", "type": "numpy.ndarray"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 215, "col_offset": 41, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 215, "col_offset": 53, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 215, "col_offset": 63, "nodeName": "ids", "type": "Any"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "ids", "type": "Any"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "lane0", "type": "numpy.ndarray"}, {"lineNumber": 231, "col_offset": 23, "nodeName": "max_lanes", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 246, "col_offset": 26, "nodeName": "ids", "type": "Any"}, {"lineNumber": 248, "col_offset": 26, "nodeName": "lane1", "type": "numpy.ndarray"}, {"lineNumber": 249, "col_offset": 23, "nodeName": "max_lanes", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 325, "col_offset": 47, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 346, "col_offset": 47, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 356, "col_offset": 52, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 370, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "self", "type": "TestVehicleColoring"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "get_color", "type": "Any"}, {"lineNumber": 371, "col_offset": 53, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 383, "col_offset": 22, "nodeName": "k", "type": "Any"}, {"lineNumber": 385, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 385, "col_offset": 66, "nodeName": "CYAN", "type": "Tuple[int, int, int]"}, {"lineNumber": 386, "col_offset": 17, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 151, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "accel_step0", "type": "numpy.ndarray"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 184, "col_offset": 32, "nodeName": "accel_step1", "type": "numpy.ndarray"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "env", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 230, "col_offset": 34, "nodeName": "sign", "type": "Any"}, {"lineNumber": 230, "col_offset": 42, "nodeName": "direction0", "type": "numpy.ndarray"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 248, "col_offset": 34, "nodeName": "sign", "type": "Any"}, {"lineNumber": 248, "col_offset": 42, "nodeName": "direction1", "type": "numpy.ndarray"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 370, "col_offset": 22, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 383, "col_offset": 22, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 385, "col_offset": 16, "nodeName": "self", "type": "TestVehicleColoring"}, {"lineNumber": 385, "col_offset": 33, "nodeName": "get_color", "type": "Any"}, {"lineNumber": 385, "col_offset": 57, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 387, "col_offset": 66, "nodeName": "RED", "type": "Tuple[int, int, int]"}, {"lineNumber": 389, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 389, "col_offset": 66, "nodeName": "WHITE", "type": "Tuple[int, int, int]"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "self", "type": "TestShuffle"}, {"lineNumber": 151, "col_offset": 14, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 193, "col_offset": 14, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 230, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 248, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "k", "type": "Any"}, {"lineNumber": 385, "col_offset": 33, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "self", "type": "TestVehicleColoring"}, {"lineNumber": 387, "col_offset": 33, "nodeName": "get_color", "type": "Any"}, {"lineNumber": 387, "col_offset": 57, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 389, "col_offset": 16, "nodeName": "self", "type": "TestVehicleColoring"}, {"lineNumber": 389, "col_offset": 33, "nodeName": "get_color", "type": "Any"}, {"lineNumber": 389, "col_offset": 57, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "env", "type": "Any"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "env", "type": "Any"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 385, "col_offset": 33, "nodeName": "k", "type": "Any"}, {"lineNumber": 387, "col_offset": 33, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 389, "col_offset": 33, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 385, "col_offset": 33, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 387, "col_offset": 33, "nodeName": "k", "type": "Any"}, {"lineNumber": 389, "col_offset": 33, "nodeName": "k", "type": "Any"}, {"lineNumber": 387, "col_offset": 33, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 389, "col_offset": 33, "nodeName": "env", "type": "flow.envs.test.TestEnv"}]