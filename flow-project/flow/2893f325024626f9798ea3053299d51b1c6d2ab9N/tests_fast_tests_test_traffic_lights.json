[{"lineNumber": 10, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 3, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 10, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 124, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 3, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "traffic_lights", "type": "flow.core.traffic_lights.TrafficLights"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "traffic_lights", "type": "flow.core.traffic_lights.TrafficLights"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "traffic_lights", "type": "flow.core.traffic_lights.TrafficLights"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestUpdateGetState"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "TrafficLights", "type": "Type[flow.core.traffic_lights.TrafficLights]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "step", "type": "Callable[[Any], Tuple[List[Any], Any, Any, Dict[Any, Any]]]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "get_state", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "TrafficLights", "type": "Type[flow.core.traffic_lights.TrafficLights]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "step", "type": "Callable[[Any], Tuple[List[Any], Any, Any, Dict[Any, Any]]]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "get_state", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "TrafficLights", "type": "Type[flow.core.traffic_lights.TrafficLights]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "set_state", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "get_state", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "set_state", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "get_state", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "traffic_lights", "type": "flow.core.traffic_lights.TrafficLights"}, {"lineNumber": 30, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 33, "col_offset": 60, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 34, "col_offset": 64, "nodeName": "traffic_lights", "type": "flow.core.traffic_lights.TrafficLights"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "traffic_lights", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestUpdateGetState"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "traffic_lights", "type": "flow.core.traffic_lights.TrafficLights"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 54, "col_offset": 60, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 55, "col_offset": 64, "nodeName": "traffic_lights", "type": "flow.core.traffic_lights.TrafficLights"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "traffic_lights", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestUpdateGetState"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "traffic_lights", "type": "flow.core.traffic_lights.TrafficLights"}, {"lineNumber": 78, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 81, "col_offset": 60, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 82, "col_offset": 64, "nodeName": "traffic_lights", "type": "flow.core.traffic_lights.TrafficLights"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "traffic_lights", "type": "Any"}, {"lineNumber": 96, "col_offset": 61, "nodeName": "env", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "traffic_lights", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "traffic_lights", "type": "Any"}, {"lineNumber": 112, "col_offset": 61, "nodeName": "env", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "traffic_lights", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "TestUpdateGetState"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestUpdateGetState"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestUpdateGetState"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestUpdateGetState"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestUpdateGetState"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "env", "type": "flow.envs.loop_accel.AccelEnv"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 96, "col_offset": 61, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 112, "col_offset": 61, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "self", "type": "TestUpdateGetState"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "self", "type": "TestUpdateGetState"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestSetState"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "self", "type": "TestSetState"}]