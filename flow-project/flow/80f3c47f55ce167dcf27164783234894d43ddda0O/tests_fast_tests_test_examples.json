[{"lineNumber": 48, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "unittest", "type": "module"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 280, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "random", "type": "module"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "render", "type": "bool"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "horizon", "type": "int"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.Experiment"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "train_model", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable, Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 283, "col_offset": 11, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "main", "type": "Type[unittest.main.TestProgram]"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "shutdown", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "non_rl_bottleneck", "type": "Dict[Any, Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "non_rl_figure_eight", "type": "Dict[Any, Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "non_rl_traffic_light_grid", "type": "Dict[Any, Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "non_rl_highway", "type": "Dict[Any, Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "non_rl_highway_ramps", "type": "Dict[Any, Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "non_rl_merge", "type": "Dict[Any, Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "non_rl_ring", "type": "Dict[Any, Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "non_rl_bay_bridge", "type": "Dict[Any, Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "non_rl_bay_bridge_toll", "type": "Dict[Any, Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "non_rl_minicity", "type": "Dict[Any, Any]"}, {"lineNumber": 111, "col_offset": 14, "nodeName": "Experiment", "type": "Type[flow.core.experiment.Experiment]"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "run", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "run_stable_baselines_model", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 49, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "close", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "singleagent_figure_eight", "type": "Dict[Any, Any]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "singleagent_traffic_light_grid", "type": "Dict[Any, Any]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "singleagent_merge", "type": "Dict[Any, Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 138, "col_offset": 21, "nodeName": "singleagent_ring", "type": "Dict[Any, Any]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 141, "col_offset": 21, "nodeName": "singleagent_bottleneck", "type": "Dict[Any, Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "singleagent_figure_eight", "type": "Dict[Any, Any]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "singleagent_traffic_light_grid", "type": "Dict[Any, Any]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "singleagent_merge", "type": "Dict[Any, Any]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "singleagent_ring", "type": "Dict[Any, Any]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "singleagent_bottleneck", "type": "Dict[Any, Any]"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "af8pg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "af8pmf", "type": "Callable"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "adversarial_figure_eight", "type": "Dict[Any, Any]"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "mf8pg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "mf8pmf", "type": "Callable[[Any], str]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "multiagent_figure_eight", "type": "Dict[Any, Any]"}, {"lineNumber": 200, "col_offset": 29, "nodeName": "ltrpg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 201, "col_offset": 33, "nodeName": "ltrpt", "type": "List[str]"}, {"lineNumber": 202, "col_offset": 33, "nodeName": "ltrpmf", "type": "Callable[[Any], str]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "lord_of_the_rings", "type": "Dict[Any, Any]"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "mrpg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "mrpmf", "type": "Callable[[Any], str]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 214, "col_offset": 21, "nodeName": "multiagent_ring", "type": "Dict[Any, Any]"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "mmpg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 222, "col_offset": 33, "nodeName": "mmpmf", "type": "Callable[[Any], str]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 224, "col_offset": 21, "nodeName": "multiagent_merge", "type": "Dict[Any, Any]"}, {"lineNumber": 232, "col_offset": 29, "nodeName": "mtlpg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 233, "col_offset": 33, "nodeName": "mtlpt", "type": "List[str]"}, {"lineNumber": 234, "col_offset": 33, "nodeName": "mtlpmf", "type": "Callable[[Any], str]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 236, "col_offset": 21, "nodeName": "multiagent_traffic_light_grid", "type": "Dict[Any, Any]"}, {"lineNumber": 244, "col_offset": 29, "nodeName": "mhpg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 245, "col_offset": 33, "nodeName": "mhpt", "type": "List[str]"}, {"lineNumber": 246, "col_offset": 33, "nodeName": "mhpmf", "type": "Callable[[Any], str]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 248, "col_offset": 21, "nodeName": "multiagent_highway", "type": "Dict[Any, Any]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 252, "col_offset": 17, "nodeName": "env_name", "type": "str"}, {"lineNumber": 252, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 252, "col_offset": 36, "nodeName": "setup_rllib_exps", "type": "Callable[..., Tuple[str, str, Any]]"}, {"lineNumber": 252, "col_offset": 53, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "run_experiments", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "ray", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.Experiment"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TestStableBaselineExamples"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestStableBaselineExamples"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "TestStableBaselineExamples"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestStableBaselineExamples"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "TestStableBaselineExamples"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "is_initialized", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "init", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 182, "col_offset": 49, "nodeName": "kwargs", "type": "Dict[str, Union[Callable, Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 192, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 204, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 214, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 224, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 236, "col_offset": 54, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 248, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 252, "col_offset": 74, "nodeName": "kwargs", "type": "Dict[str, Union[Callable, Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "init", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "ray", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "e", "type": "Exception"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "train_model", "type": "Any"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "ray", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "ray", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "ray", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 257, "col_offset": 27, "nodeName": "e", "type": "Exception"}, {"lineNumber": 266, "col_offset": 23, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "env_name", "type": "str"}, {"lineNumber": 269, "col_offset": 22, "nodeName": "config", "type": "Any"}]