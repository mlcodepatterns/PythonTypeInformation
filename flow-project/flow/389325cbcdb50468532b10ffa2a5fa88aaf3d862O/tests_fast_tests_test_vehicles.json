[{"lineNumber": 18, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 466, "col_offset": 20, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 490, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 18, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 466, "col_offset": 20, "nodeName": "unittest", "type": "module"}, {"lineNumber": 490, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 519, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "default_mingap", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "error_state", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "error_state_rl", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "actual_lane_leaders", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "expected_lane_leaders", "type": "List[str]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "actual_lane_head", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "expected_lane_head", "type": "List[Union[float, int]]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "actual_lane_followers", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "expected_lane_followers", "type": "List[str]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "actual_lane_tail", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "expected_lane_tail", "type": "List[float]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "spacing", "type": "str"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "initial_pos", "type": "Dict[str, Union[List[Tuple[str, int]], List[int]]]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "additional_params", "type": "Dict[str, Union[List[Tuple[str, int]], List[int]]]"}, {"lineNumber": 256, "col_offset": 43, "nodeName": "initial_pos", "type": "Dict[str, Union[List[Tuple[str, int]], List[int]]]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "actual_lane_leaders", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "expected_lane_leaders", "type": "List[str]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "actual_lane_headways", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "expected_lane_headways", "type": "List[Union[int, float]]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "actual_lane_followers", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "expected_lane_followers", "type": "List[str]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "actual_lane_tailways", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "expected_lane_tailways", "type": "List[Union[float, int]]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "spacing", "type": "str"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "initial_pos", "type": "Dict[str, Union[List[Tuple[str, int]], List[int]]]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "additional_params", "type": "Dict[str, Union[List[Tuple[str, int]], List[int]]]"}, {"lineNumber": 320, "col_offset": 43, "nodeName": "initial_pos", "type": "Dict[str, Union[List[Tuple[str, int]], List[int]]]"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "actual_lane_leaders", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "expected_lane_leaders", "type": "List[str]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "actual_lane_headways", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "expected_lane_headways", "type": "List[Union[float, int]]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "actual_lane_followers", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "expected_lane_followers", "type": "List[str]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "actual_lane_tailways", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "expected_lane_tailways", "type": "List[Union[float, int]]"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "spacing", "type": "str"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "initial_pos", "type": "Dict[str, Union[List[Union[Tuple[str, float], Tuple[str, int]]], List[int]]]"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "additional_params", "type": "Dict[str, Union[List[Union[Tuple[str, float], Tuple[str, int]]], List[int]]]"}, {"lineNumber": 373, "col_offset": 43, "nodeName": "initial_pos", "type": "Dict[str, Union[List[Union[Tuple[str, float], Tuple[str, int]]], List[int]]]"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "actual_lane_leaders", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "expected_lane_leaders", "type": "List[str]"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "actual_lane_headways", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "expected_lane_headways", "type": "List[Union[int, float]]"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "actual_lane_followers", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "expected_lane_followers", "type": "List[str]"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "actual_lane_tailways", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "expected_lane_tailways", "type": "List[Union[float, int]]"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 422, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "spacing", "type": "str"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "initial_pos", "type": "Dict[str, Union[List[Union[Tuple[str, float], Tuple[str, int]]], List[int]]]"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "additional_params", "type": "Dict[str, Union[List[Union[Tuple[str, float], Tuple[str, int]]], List[int]]]"}, {"lineNumber": 429, "col_offset": 43, "nodeName": "initial_pos", "type": "Dict[str, Union[List[Union[Tuple[str, float], Tuple[str, int]]], List[int]]]"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "actual_lane_leaders", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "expected_lane_leaders", "type": "List[str]"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "actual_lane_headways", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "expected_lane_headways", "type": "List[Union[float, int]]"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "actual_lane_followers", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "expected_lane_followers", "type": "List[str]"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "actual_lane_tailways", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "expected_lane_tailways", "type": "List[Union[float, int]]"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 486, "col_offset": 8, "nodeName": "expected_ids", "type": "List[str]"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "controller_params", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "default_mingap", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "num_vehicles", "type": "int"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "num_vehicles", "type": "int"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 163, "col_offset": 22, "nodeName": "get_state", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "error_state", "type": "Any"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "get_state", "type": "Callable[..., Any]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "error_state_rl", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "num_vehicles", "type": "int"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "num_rl_vehicles", "type": "int"}, {"lineNumber": 194, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 204, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 211, "col_offset": 30, "nodeName": "get_lane_leaders", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 213, "col_offset": 30, "nodeName": "actual_lane_leaders", "type": "Any"}, {"lineNumber": 213, "col_offset": 51, "nodeName": "expected_lane_leaders", "type": "List[str]"}, {"lineNumber": 216, "col_offset": 27, "nodeName": "get_lane_headways", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 30, "nodeName": "actual_lane_head", "type": "Any"}, {"lineNumber": 218, "col_offset": 48, "nodeName": "expected_lane_head", "type": "List[Union[float, int]]"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "get_lane_followers", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 223, "col_offset": 30, "nodeName": "actual_lane_followers", "type": "Any"}, {"lineNumber": 223, "col_offset": 53, "nodeName": "expected_lane_followers", "type": "List[str]"}, {"lineNumber": 226, "col_offset": 27, "nodeName": "get_lane_tailways", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 228, "col_offset": 45, "nodeName": "actual_lane_tail", "type": "Any"}, {"lineNumber": 229, "col_offset": 45, "nodeName": "expected_lane_tail", "type": "List[float]"}, {"lineNumber": 239, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 240, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "initial_pos", "type": "Dict[str, Union[List[Tuple[str, int]], List[int]]]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 258, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.scenario.HighwayScenario]]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 269, "col_offset": 30, "nodeName": "get_lane_leaders", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 272, "col_offset": 31, "nodeName": "get_lane_headways", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 274, "col_offset": 45, "nodeName": "actual_lane_headways", "type": "Any"}, {"lineNumber": 275, "col_offset": 45, "nodeName": "expected_lane_headways", "type": "List[Union[int, float]]"}, {"lineNumber": 277, "col_offset": 32, "nodeName": "get_lane_followers", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 280, "col_offset": 31, "nodeName": "get_lane_tailways", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 282, "col_offset": 45, "nodeName": "actual_lane_tailways", "type": "Any"}, {"lineNumber": 283, "col_offset": 45, "nodeName": "expected_lane_tailways", "type": "List[Union[float, int]]"}, {"lineNumber": 299, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 306, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "initial_pos", "type": "Dict[str, Union[List[Tuple[str, int]], List[int]]]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 322, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.scenario.HighwayScenario]]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 329, "col_offset": 30, "nodeName": "get_lane_leaders", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 333, "col_offset": 31, "nodeName": "get_lane_headways", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 335, "col_offset": 45, "nodeName": "actual_lane_headways", "type": "Any"}, {"lineNumber": 336, "col_offset": 45, "nodeName": "expected_lane_headways", "type": "List[Union[float, int]]"}, {"lineNumber": 338, "col_offset": 32, "nodeName": "get_lane_followers", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 342, "col_offset": 31, "nodeName": "get_lane_tailways", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 344, "col_offset": 45, "nodeName": "actual_lane_tailways", "type": "Any"}, {"lineNumber": 345, "col_offset": 45, "nodeName": "expected_lane_tailways", "type": "List[Union[float, int]]"}, {"lineNumber": 356, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 357, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 366, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "initial_pos", "type": "Dict[str, Union[List[Union[Tuple[str, float], Tuple[str, int]]], List[int]]]"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 375, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.scenario.HighwayScenario]]"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 387, "col_offset": 30, "nodeName": "get_lane_leaders", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 390, "col_offset": 31, "nodeName": "get_lane_headways", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 392, "col_offset": 45, "nodeName": "actual_lane_headways", "type": "Any"}, {"lineNumber": 393, "col_offset": 45, "nodeName": "expected_lane_headways", "type": "List[Union[int, float]]"}, {"lineNumber": 395, "col_offset": 32, "nodeName": "get_lane_followers", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 398, "col_offset": 31, "nodeName": "get_lane_tailways", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 400, "col_offset": 45, "nodeName": "actual_lane_tailways", "type": "Any"}, {"lineNumber": 401, "col_offset": 45, "nodeName": "expected_lane_tailways", "type": "List[Union[float, int]]"}, {"lineNumber": 412, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 413, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 422, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 423, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "initial_pos", "type": "Dict[str, Union[List[Union[Tuple[str, float], Tuple[str, int]]], List[int]]]"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 431, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.scenario.HighwayScenario]]"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 442, "col_offset": 30, "nodeName": "get_lane_leaders", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 445, "col_offset": 31, "nodeName": "get_lane_headways", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 447, "col_offset": 45, "nodeName": "actual_lane_headways", "type": "Any"}, {"lineNumber": 448, "col_offset": 45, "nodeName": "expected_lane_headways", "type": "List[Union[float, int]]"}, {"lineNumber": 450, "col_offset": 32, "nodeName": "get_lane_followers", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 453, "col_offset": 31, "nodeName": "get_lane_tailways", "type": "Any"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 455, "col_offset": 45, "nodeName": "actual_lane_tailways", "type": "Any"}, {"lineNumber": 456, "col_offset": 45, "nodeName": "expected_lane_tailways", "type": "List[Union[float, int]]"}, {"lineNumber": 473, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 476, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.loop.loop_scenario.LoopScenario"}, {"lineNumber": 476, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.loop_scenario.LoopScenario]]"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "self", "type": "TestIdsByEdge"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 485, "col_offset": 14, "nodeName": "get_ids_by_edge", "type": "Any"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 487, "col_offset": 30, "nodeName": "ids", "type": "Any"}, {"lineNumber": 487, "col_offset": 35, "nodeName": "expected_ids", "type": "List[str]"}, {"lineNumber": 494, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "set_observed", "type": "Callable[[Any], None]"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "set_observed", "type": "Callable[[Any], None]"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "set_observed", "type": "Callable[[Any], None]"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "remove_observed", "type": "Callable[[Any], None]"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "remove_observed", "type": "Callable[[Any], None]"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 520, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "get_speed_mode", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "get_lane_change_mode", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "get_speed_mode", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "get_lane_change_mode", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "get_speed_mode", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "get_lane_change_mode", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "get_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 149, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "get_human_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 151, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "get_controlled_lc_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "get_controlled_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 155, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "get_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "get_rl_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 163, "col_offset": 22, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 169, "col_offset": 48, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestVehiclesClass"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 172, "col_offset": 51, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 194, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 205, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 206, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 207, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 211, "col_offset": 30, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "TestMultiLaneData"}, {"lineNumber": 216, "col_offset": 27, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "TestMultiLaneData"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "TestMultiLaneData"}, {"lineNumber": 226, "col_offset": 27, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 239, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 260, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 261, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 262, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 269, "col_offset": 30, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "TestMultiLaneData"}, {"lineNumber": 271, "col_offset": 24, "nodeName": "actual_lane_leaders", "type": "Any"}, {"lineNumber": 271, "col_offset": 47, "nodeName": "expected_lane_leaders", "type": "List[str]"}, {"lineNumber": 272, "col_offset": 31, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 277, "col_offset": 32, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "TestMultiLaneData"}, {"lineNumber": 279, "col_offset": 24, "nodeName": "actual_lane_followers", "type": "Any"}, {"lineNumber": 279, "col_offset": 49, "nodeName": "expected_lane_followers", "type": "List[str]"}, {"lineNumber": 280, "col_offset": 31, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 299, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 324, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 325, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 326, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 329, "col_offset": 30, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "self", "type": "TestMultiLaneData"}, {"lineNumber": 331, "col_offset": 24, "nodeName": "actual_lane_leaders", "type": "Any"}, {"lineNumber": 331, "col_offset": 47, "nodeName": "expected_lane_leaders", "type": "List[str]"}, {"lineNumber": 333, "col_offset": 31, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 338, "col_offset": 32, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "self", "type": "TestMultiLaneData"}, {"lineNumber": 340, "col_offset": 24, "nodeName": "actual_lane_followers", "type": "Any"}, {"lineNumber": 340, "col_offset": 49, "nodeName": "expected_lane_followers", "type": "List[str]"}, {"lineNumber": 342, "col_offset": 31, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 356, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 377, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 378, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 379, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 380, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 387, "col_offset": 30, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "self", "type": "TestMultiLaneData"}, {"lineNumber": 389, "col_offset": 24, "nodeName": "actual_lane_leaders", "type": "Any"}, {"lineNumber": 389, "col_offset": 47, "nodeName": "expected_lane_leaders", "type": "List[str]"}, {"lineNumber": 390, "col_offset": 31, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 395, "col_offset": 32, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "self", "type": "TestMultiLaneData"}, {"lineNumber": 397, "col_offset": 24, "nodeName": "actual_lane_followers", "type": "Any"}, {"lineNumber": 397, "col_offset": 49, "nodeName": "expected_lane_followers", "type": "List[str]"}, {"lineNumber": 398, "col_offset": 31, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 412, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 433, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 434, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 435, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 442, "col_offset": 30, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "self", "type": "TestMultiLaneData"}, {"lineNumber": 444, "col_offset": 24, "nodeName": "actual_lane_leaders", "type": "Any"}, {"lineNumber": 444, "col_offset": 47, "nodeName": "expected_lane_leaders", "type": "List[str]"}, {"lineNumber": 445, "col_offset": 31, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 450, "col_offset": 32, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "self", "type": "TestMultiLaneData"}, {"lineNumber": 452, "col_offset": 24, "nodeName": "actual_lane_followers", "type": "Any"}, {"lineNumber": 452, "col_offset": 49, "nodeName": "expected_lane_followers", "type": "List[str]"}, {"lineNumber": 453, "col_offset": 31, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "self", "type": "TestIdsByEdge"}, {"lineNumber": 476, "col_offset": 58, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 485, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "self", "type": "TestIdsByEdge"}, {"lineNumber": 495, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "self", "type": "TestObservedIDs"}, {"lineNumber": 499, "col_offset": 30, "nodeName": "get_observed_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 501, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "self", "type": "TestObservedIDs"}, {"lineNumber": 502, "col_offset": 30, "nodeName": "get_observed_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 506, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "self", "type": "TestObservedIDs"}, {"lineNumber": 507, "col_offset": 29, "nodeName": "get_observed_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 511, "col_offset": 8, "nodeName": "self", "type": "TestObservedIDs"}, {"lineNumber": 511, "col_offset": 30, "nodeName": "get_observed_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 516, "col_offset": 8, "nodeName": "self", "type": "TestObservedIDs"}, {"lineNumber": 516, "col_offset": 30, "nodeName": "get_observed_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 31, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 49, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "SumoCarFollowingController", "type": "Type[flow.controllers.car_following_models.SumoCarFollowingController]"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "SumoCarFollowingParams", "type": "Type[flow.core.params.SumoCarFollowingParams]"}, {"lineNumber": 97, "col_offset": 36, "nodeName": "StaticLaneChanger", "type": "Type[flow.controllers.lane_change_controllers.StaticLaneChanger]"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "get_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "get_rl_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "get_human_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "get_controlled_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "get_controlled_lc_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 121, "col_offset": 37, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "get_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "get_rl_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "get_human_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "get_controlled_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "get_controlled_lc_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 141, "col_offset": 37, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 154, "col_offset": 23, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 169, "col_offset": 52, "nodeName": "get_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 172, "col_offset": 55, "nodeName": "get_rl_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 199, "col_offset": 37, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 202, "col_offset": 58, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 211, "col_offset": 30, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 216, "col_offset": 27, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 226, "col_offset": 27, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 243, "col_offset": 37, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 249, "col_offset": 58, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 259, "col_offset": 24, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 269, "col_offset": 30, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 272, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 277, "col_offset": 32, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 280, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 303, "col_offset": 37, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 306, "col_offset": 58, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 323, "col_offset": 24, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 329, "col_offset": 30, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 333, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 338, "col_offset": 32, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 342, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 360, "col_offset": 37, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 366, "col_offset": 58, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 376, "col_offset": 24, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 387, "col_offset": 30, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 390, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 395, "col_offset": 32, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 398, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 416, "col_offset": 37, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 422, "col_offset": 58, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 432, "col_offset": 24, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 442, "col_offset": 30, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 445, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 450, "col_offset": 32, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 453, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "self", "type": "TestIdsByEdge"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "self", "type": "TestIdsByEdge"}, {"lineNumber": 485, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 499, "col_offset": 30, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 502, "col_offset": 30, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 507, "col_offset": 29, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 511, "col_offset": 30, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 516, "col_offset": 30, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "types", "type": "List[Dict[str, Any]]"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "types", "type": "List[Dict[str, Any]]"}, {"lineNumber": 106, "col_offset": 29, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 127, "col_offset": 29, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 169, "col_offset": 52, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 172, "col_offset": 55, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 485, "col_offset": 14, "nodeName": "self", "type": "TestIdsByEdge"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}]