[{"lineNumber": 54, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 167, "col_offset": 33, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 167, "col_offset": 33, "nodeName": "unittest", "type": "module"}, {"lineNumber": 194, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 406, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "random", "type": "module"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "render", "type": "bool"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "horizon", "type": "int"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.Experiment"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "train_model", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable, Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "test_env", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "obs_space", "type": "Any"}, {"lineNumber": 342, "col_offset": 20, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "act_space", "type": "Any"}, {"lineNumber": 343, "col_offset": 20, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "POLICY_GRAPHS", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "test_env", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "obs_space", "type": "Any"}, {"lineNumber": 364, "col_offset": 20, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "act_space", "type": "Any"}, {"lineNumber": 365, "col_offset": 20, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "POLICY_GRAPHS", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 409, "col_offset": 11, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "main", "type": "Type[unittest.main.TestProgram]"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "shutdown", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "non_rl_bottleneck", "type": "Dict[Any, Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "non_rl_figure_eight", "type": "Dict[Any, Any]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "non_rl_traffic_light_grid", "type": "Dict[Any, Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "non_rl_highway", "type": "Dict[Any, Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "non_rl_highway_ramps", "type": "Dict[Any, Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "non_rl_merge", "type": "Dict[Any, Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 28, "nodeName": "non_rl_ring", "type": "Dict[Any, Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "non_rl_bay_bridge", "type": "Dict[Any, Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "non_rl_bay_bridge_toll", "type": "Dict[Any, Any]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "non_rl_minicity", "type": "Dict[Any, Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "non_rl_i210", "type": "Dict[Any, Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "run_simulation", "type": "Callable[[Any], Any]"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "non_rl_highway_single", "type": "Dict[Any, Any]"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "Experiment", "type": "Type[flow.core.experiment.Experiment]"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "run", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "parse_train_args", "type": "Callable[[Any], argparse.Namespace]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "parse_train_args", "type": "Callable[[Any], argparse.Namespace]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertDictEqual", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 22, "nodeName": "run_stable_baselines_model", "type": "Callable[..., Any]"}, {"lineNumber": 175, "col_offset": 49, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "close", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 179, "col_offset": 21, "nodeName": "singleagent_figure_eight", "type": "Dict[Any, Any]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "singleagent_traffic_light_grid", "type": "Dict[Any, Any]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 185, "col_offset": 21, "nodeName": "singleagent_merge", "type": "Dict[Any, Any]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "singleagent_ring", "type": "Dict[Any, Any]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any], Any]"}, {"lineNumber": 191, "col_offset": 21, "nodeName": "singleagent_bottleneck", "type": "Dict[Any, Any]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "train_h_baselines", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 232, "col_offset": 21, "nodeName": "singleagent_figure_eight", "type": "Dict[Any, Any]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 235, "col_offset": 21, "nodeName": "singleagent_traffic_light_grid", "type": "Dict[Any, Any]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 241, "col_offset": 21, "nodeName": "singleagent_merge", "type": "Dict[Any, Any]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 244, "col_offset": 21, "nodeName": "singleagent_ring", "type": "Dict[Any, Any]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 247, "col_offset": 21, "nodeName": "singleagent_bottleneck", "type": "Dict[Any, Any]"}, {"lineNumber": 254, "col_offset": 29, "nodeName": "af8pg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 255, "col_offset": 33, "nodeName": "af8pmf", "type": "Callable"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 257, "col_offset": 21, "nodeName": "adversarial_figure_eight", "type": "Dict[Any, Any]"}, {"lineNumber": 264, "col_offset": 29, "nodeName": "mf8pg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 265, "col_offset": 33, "nodeName": "mf8pmf", "type": "Callable[[Any], str]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 267, "col_offset": 21, "nodeName": "multiagent_figure_eight", "type": "Dict[Any, Any]"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "ltrpg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 276, "col_offset": 33, "nodeName": "ltrpt", "type": "List[str]"}, {"lineNumber": 277, "col_offset": 33, "nodeName": "ltrpmf", "type": "Callable[[Any], str]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "lord_of_the_rings", "type": "Dict[Any, Any]"}, {"lineNumber": 286, "col_offset": 29, "nodeName": "mrpg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 287, "col_offset": 33, "nodeName": "mrpmf", "type": "Callable[[Any], str]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 289, "col_offset": 21, "nodeName": "multiagent_ring", "type": "Dict[Any, Any]"}, {"lineNumber": 296, "col_offset": 29, "nodeName": "mmpg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 297, "col_offset": 33, "nodeName": "mmpmf", "type": "Callable[[Any], str]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 299, "col_offset": 21, "nodeName": "multiagent_merge", "type": "Dict[Any, Any]"}, {"lineNumber": 307, "col_offset": 29, "nodeName": "mtlpg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 308, "col_offset": 33, "nodeName": "mtlpt", "type": "List[str]"}, {"lineNumber": 309, "col_offset": 33, "nodeName": "mtlpmf", "type": "Callable[[Any], str]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 311, "col_offset": 21, "nodeName": "multiagent_traffic_light_grid", "type": "Dict[Any, Any]"}, {"lineNumber": 319, "col_offset": 29, "nodeName": "mhpg", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 320, "col_offset": 33, "nodeName": "mhpt", "type": "List[str]"}, {"lineNumber": 321, "col_offset": 33, "nodeName": "mhpmf", "type": "Callable[[Any], str]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 323, "col_offset": 21, "nodeName": "multiagent_highway", "type": "Dict[Any, Any]"}, {"lineNumber": 333, "col_offset": 22, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 333, "col_offset": 31, "nodeName": "multiagent_i210", "type": "Dict[Any, Any]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "create_env", "type": "Callable[..., Any]"}, {"lineNumber": 335, "col_offset": 20, "nodeName": "env_name", "type": "str"}, {"lineNumber": 335, "col_offset": 31, "nodeName": "make_create_env", "type": "Callable[..., Tuple[Callable[..., Any], str]]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "register_env", "type": "Any"}, {"lineNumber": 338, "col_offset": 21, "nodeName": "env_name", "type": "str"}, {"lineNumber": 338, "col_offset": 31, "nodeName": "create_env", "type": "Callable[..., Any]"}, {"lineNumber": 341, "col_offset": 19, "nodeName": "create_env", "type": "Callable[..., Any]"}, {"lineNumber": 342, "col_offset": 20, "nodeName": "test_env", "type": "Any"}, {"lineNumber": 343, "col_offset": 20, "nodeName": "test_env", "type": "Any"}, {"lineNumber": 348, "col_offset": 29, "nodeName": "POLICY_GRAPHS", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 349, "col_offset": 33, "nodeName": "mi210pr", "type": "List[str]"}, {"lineNumber": 350, "col_offset": 33, "nodeName": "mi210mf", "type": "Callable[[Any], str]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 352, "col_offset": 21, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 355, "col_offset": 22, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 355, "col_offset": 31, "nodeName": "multiagent_i210", "type": "Dict[Any, Any]"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "create_env", "type": "Callable[..., Any]"}, {"lineNumber": 357, "col_offset": 20, "nodeName": "env_name", "type": "str"}, {"lineNumber": 357, "col_offset": 31, "nodeName": "make_create_env", "type": "Callable[..., Tuple[Callable[..., Any], str]]"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "register_env", "type": "Any"}, {"lineNumber": 360, "col_offset": 21, "nodeName": "env_name", "type": "str"}, {"lineNumber": 360, "col_offset": 31, "nodeName": "create_env", "type": "Callable[..., Any]"}, {"lineNumber": 363, "col_offset": 19, "nodeName": "create_env", "type": "Callable[..., Any]"}, {"lineNumber": 364, "col_offset": 20, "nodeName": "test_env", "type": "Any"}, {"lineNumber": 365, "col_offset": 20, "nodeName": "test_env", "type": "Any"}, {"lineNumber": 370, "col_offset": 29, "nodeName": "POLICY_GRAPHS", "type": "Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]"}, {"lineNumber": 371, "col_offset": 33, "nodeName": "mi210pr", "type": "List[str]"}, {"lineNumber": 372, "col_offset": 33, "nodeName": "mi210mf", "type": "Callable[[Any], str]"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "run_exp", "type": "Callable[..., Any]"}, {"lineNumber": 374, "col_offset": 21, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 378, "col_offset": 17, "nodeName": "env_name", "type": "str"}, {"lineNumber": 378, "col_offset": 27, "nodeName": "config", "type": "Any"}, {"lineNumber": 378, "col_offset": 36, "nodeName": "setup_rllib_exps", "type": "Callable[..., Tuple[str, str, Any]]"}, {"lineNumber": 378, "col_offset": 53, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 382, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "run_experiments", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 412, "col_offset": 4, "nodeName": "ray", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "TestNonRLExamples"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "exp", "type": "flow.core.experiment.Experiment"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestTrain"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "TestTrain"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "TestStableBaselineExamples"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "TestStableBaselineExamples"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "TestStableBaselineExamples"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "TestStableBaselineExamples"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "TestStableBaselineExamples"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "flow_params", "type": "Dict[Any, Any]"}, {"lineNumber": 209, "col_offset": 23, "nodeName": "multiagent", "type": "bool"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "TestHBaselineExamples"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "TestHBaselineExamples"}, {"lineNumber": 216, "col_offset": 21, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "is_initialized", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "init", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 257, "col_offset": 49, "nodeName": "kwargs", "type": "Dict[str, Union[Callable, Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 267, "col_offset": 48, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 279, "col_offset": 42, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 289, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 299, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 311, "col_offset": 54, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 323, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 335, "col_offset": 54, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 345, "col_offset": 32, "nodeName": "PPOTFPolicy", "type": "Any"}, {"lineNumber": 345, "col_offset": 45, "nodeName": "obs_space", "type": "Any"}, {"lineNumber": 345, "col_offset": 56, "nodeName": "act_space", "type": "Any"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 352, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 357, "col_offset": 54, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 367, "col_offset": 32, "nodeName": "PPOTFPolicy", "type": "Any"}, {"lineNumber": 367, "col_offset": 45, "nodeName": "obs_space", "type": "Any"}, {"lineNumber": 367, "col_offset": 56, "nodeName": "act_space", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "self", "type": "TestRllibExamples"}, {"lineNumber": 374, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Union[Callable[[Any], str], List[str], Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 378, "col_offset": 74, "nodeName": "kwargs", "type": "Dict[str, Union[Callable, Dict[str, Tuple[Any, Any, Any, Dict[nothing, nothing]]]]]"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "init", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "ray", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 410, "col_offset": 23, "nodeName": "e", "type": "Exception"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "train_model", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 213, "col_offset": 21, "nodeName": "singleagent_ring", "type": "Dict[Any, Any]"}, {"lineNumber": 216, "col_offset": 21, "nodeName": "multiagent_ring", "type": "Dict[Any, Any]"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "ray", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "ray", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "flow_params", "type": "Any"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "ray", "type": "Any"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 383, "col_offset": 27, "nodeName": "e", "type": "Exception"}, {"lineNumber": 392, "col_offset": 23, "nodeName": "alg_run", "type": "str"}, {"lineNumber": 393, "col_offset": 23, "nodeName": "env_name", "type": "str"}, {"lineNumber": 395, "col_offset": 22, "nodeName": "config", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "flow_params", "type": "Dict[Any, Any]"}]