[{"lineNumber": 955, "col_offset": 0, "nodeName": "test_additional_params", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 1000, "col_offset": 0, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 1024, "col_offset": 0, "nodeName": "test_observed", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 22, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 459, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 600, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 677, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 721, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 804, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 873, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 22, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 459, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 600, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 677, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 721, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 804, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 873, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 978, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 1061, "col_offset": 11, "nodeName": "test_mask", "type": "Any"}, {"lineNumber": 1068, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "sim_params", "type": "None"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "env_params", "type": "None"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "sim_params", "type": "None"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "env_params", "type": "None"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "sim_params", "type": "None"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "env_params", "type": "None"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 276, "col_offset": 21, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "shuffle", "type": "bool"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "sorted_ids", "type": "Any"}, {"lineNumber": 289, "col_offset": 21, "nodeName": "sorted_ids", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "positions", "type": "List[Any]"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 300, "col_offset": 21, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "shuffle", "type": "bool"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "sorted_ids", "type": "List[Any]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "sim_params", "type": "None"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "env_params", "type": "None"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "sim_params", "type": "None"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "env_params", "type": "None"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "sim_params", "type": "None"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "env_params", "type": "None"}, {"lineNumber": 682, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 684, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 685, "col_offset": 8, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 686, "col_offset": 8, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 717, "col_offset": 61, "nodeName": "reward_fn", "type": "Callable[..., Any]"}, {"lineNumber": 726, "col_offset": 8, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 728, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 809, "col_offset": 8, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 811, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 883, "col_offset": 8, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 885, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 911, "col_offset": 8, "nodeName": "inflow", "type": "flow.core.params.InFlows"}, {"lineNumber": 928, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 932, "col_offset": 8, "nodeName": "expected_inflow", "type": "float"}, {"lineNumber": 935, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 942, "col_offset": 8, "nodeName": "expected_inflow", "type": "float"}, {"lineNumber": 945, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 978, "col_offset": 15, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 980, "col_offset": 8, "nodeName": "new_add", "type": "Union[Dict[str, bool], Dict[str, int]]"}, {"lineNumber": 1049, "col_offset": 10, "nodeName": "env_class", "type": "Any"}, {"lineNumber": 1052, "col_offset": 4, "nodeName": "reset", "type": "Any"}, {"lineNumber": 1053, "col_offset": 4, "nodeName": "step", "type": "Any"}, {"lineNumber": 1054, "col_offset": 4, "nodeName": "additional_command", "type": "Any"}, {"lineNumber": 1055, "col_offset": 16, "nodeName": "all", "type": "Any"}, {"lineNumber": 1059, "col_offset": 4, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 1069, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "LoopScenario", "type": "Type[flow.scenarios.loop.LoopScenario]"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "LaneChangeAccelEnv", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "LoopScenario", "type": "Type[flow.scenarios.loop.LoopScenario]"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 14, "nodeName": "LaneChangeAccelPOEnv", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 198, "col_offset": 26, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 199, "col_offset": 24, "nodeName": "LoopScenario", "type": "Type[flow.scenarios.loop.LoopScenario]"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 236, "col_offset": 14, "nodeName": "AccelEnv", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 276, "col_offset": 21, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 280, "col_offset": 14, "nodeName": "AccelEnv", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "additional_command", "type": "Any"}, {"lineNumber": 289, "col_offset": 21, "nodeName": "env", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 300, "col_offset": 21, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 304, "col_offset": 14, "nodeName": "AccelEnv", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "additional_command", "type": "Any"}, {"lineNumber": 313, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 313, "col_offset": 26, "nodeName": "sorted_ids", "type": "Any"}, {"lineNumber": 314, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "assertListEqual", "type": "Callable[..., None]"}, {"lineNumber": 317, "col_offset": 29, "nodeName": "sorted_ids", "type": "List[Any]"}, {"lineNumber": 317, "col_offset": 41, "nodeName": "ids", "type": "Any"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 327, "col_offset": 26, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 330, "col_offset": 24, "nodeName": "LoopScenario", "type": "Type[flow.scenarios.loop.LoopScenario]"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 340, "col_offset": 26, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 364, "col_offset": 14, "nodeName": "WaveAttenuationEnv", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 408, "col_offset": 14, "nodeName": "WaveAttenuationEnv", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 441, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 441, "col_offset": 30, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 445, "col_offset": 14, "nodeName": "WaveAttenuationEnv", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 462, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 466, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 466, "col_offset": 26, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 467, "col_offset": 24, "nodeName": "LoopScenario", "type": "Type[flow.scenarios.loop.LoopScenario]"}, {"lineNumber": 472, "col_offset": 26, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 503, "col_offset": 14, "nodeName": "WaveAttenuationPOEnv", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 544, "col_offset": 14, "nodeName": "WaveAttenuationPOEnv", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "test_set_speed", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "test_set_speed", "type": "Any"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "test_set_speed", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "test_set_speed", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "test_set_speed", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "test_set_speed", "type": "Any"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "test_set_speed", "type": "Any"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "test_set_speed", "type": "Any"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "test_set_speed", "type": "Any"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "test_set_speed", "type": "Any"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "test_set_speed", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "test_set_speed", "type": "Any"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 603, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 607, "col_offset": 26, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 608, "col_offset": 24, "nodeName": "MergeScenario", "type": "Type[flow.scenarios.merge.MergeScenario]"}, {"lineNumber": 613, "col_offset": 26, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 623, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 624, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 625, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 646, "col_offset": 14, "nodeName": "WaveAttenuationMergePOEnv", "type": "Any"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 682, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 684, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 685, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 686, "col_offset": 21, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 687, "col_offset": 19, "nodeName": "LoopScenario", "type": "Type[flow.scenarios.loop.LoopScenario]"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 690, "col_offset": 19, "nodeName": "TestEnv", "type": "Any"}, {"lineNumber": 690, "col_offset": 27, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 690, "col_offset": 39, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 690, "col_offset": 51, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 694, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 717, "col_offset": 8, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 726, "col_offset": 8, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 726, "col_offset": 26, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 728, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 731, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 741, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 745, "col_offset": 24, "nodeName": "BottleneckScenario", "type": "Type[flow.scenarios.bottleneck.BottleneckScenario]"}, {"lineNumber": 750, "col_offset": 8, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 750, "col_offset": 19, "nodeName": "BottleneckEnv", "type": "Any"}, {"lineNumber": 750, "col_offset": 33, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 750, "col_offset": 45, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 750, "col_offset": 62, "nodeName": "scenario", "type": "flow.scenarios.bottleneck.BottleneckScenario"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 755, "col_offset": 12, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 759, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 775, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 776, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 782, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 788, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 809, "col_offset": 8, "nodeName": "self", "type": "TestBottleneckAccelEnv"}, {"lineNumber": 809, "col_offset": 26, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 811, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 812, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 814, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 826, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 830, "col_offset": 24, "nodeName": "BottleneckScenario", "type": "Type[flow.scenarios.bottleneck.BottleneckScenario]"}, {"lineNumber": 835, "col_offset": 19, "nodeName": "BottleNeckAccelEnv", "type": "Any"}, {"lineNumber": 836, "col_offset": 12, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 836, "col_offset": 24, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 836, "col_offset": 41, "nodeName": "scenario", "type": "flow.scenarios.bottleneck.BottleneckScenario"}, {"lineNumber": 837, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 840, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 841, "col_offset": 12, "nodeName": "self", "type": "TestBottleneckAccelEnv"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 865, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 881, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 883, "col_offset": 21, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 885, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 886, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 887, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 895, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 911, "col_offset": 17, "nodeName": "InFlows", "type": "Type[flow.core.params.InFlows]"}, {"lineNumber": 912, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 918, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 923, "col_offset": 19, "nodeName": "BottleneckScenario", "type": "Type[flow.scenarios.bottleneck.BottleneckScenario]"}, {"lineNumber": 928, "col_offset": 14, "nodeName": "DesiredVelocityEnv", "type": "Any"}, {"lineNumber": 928, "col_offset": 33, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 928, "col_offset": 45, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 928, "col_offset": 57, "nodeName": "scenario", "type": "flow.scenarios.bottleneck.BottleneckScenario"}, {"lineNumber": 931, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 935, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 937, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 941, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 945, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 947, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 978, "col_offset": 15, "nodeName": "additional_params", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 980, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 981, "col_offset": 12, "nodeName": "new_add", "type": "Union[Dict[str, int], Dict[str, bool]]"}, {"lineNumber": 1019, "col_offset": 33, "nodeName": "expected_size", "type": "Any"}, {"lineNumber": 1020, "col_offset": 12, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 1021, "col_offset": 12, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 1049, "col_offset": 31, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 1050, "col_offset": 29, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 1051, "col_offset": 31, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 1052, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 1053, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 1054, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 1055, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 1059, "col_offset": 4, "nodeName": "env", "type": "Any"}, {"lineNumber": 1069, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "test_observed", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "test_observed", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 201, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 239, "col_offset": 23, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 243, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "test_observed", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 281, "col_offset": 23, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 282, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 283, "col_offset": 23, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "absolute_position", "type": "Any"}, {"lineNumber": 290, "col_offset": 55, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 290, "col_offset": 65, "nodeName": "sorted_ids", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 305, "col_offset": 23, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 306, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 313, "col_offset": 26, "nodeName": "env", "type": "Any"}, {"lineNumber": 314, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 332, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 340, "col_offset": 54, "nodeName": "params", "type": "Dict[str, Union[List[int], int]]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 365, "col_offset": 23, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 366, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 367, "col_offset": 23, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 371, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 377, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "test_observed", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 409, "col_offset": 23, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 410, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 411, "col_offset": 23, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 415, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 415, "col_offset": 25, "nodeName": "length", "type": "Any"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 417, "col_offset": 25, "nodeName": "length", "type": "Any"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 419, "col_offset": 25, "nodeName": "length", "type": "Any"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 427, "col_offset": 12, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 441, "col_offset": 30, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 446, "col_offset": 23, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 447, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 448, "col_offset": 23, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 452, "col_offset": 25, "nodeName": "length", "type": "Any"}, {"lineNumber": 452, "col_offset": 50, "nodeName": "LOOP_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 454, "col_offset": 25, "nodeName": "length", "type": "Any"}, {"lineNumber": 454, "col_offset": 50, "nodeName": "LOOP_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 455, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 456, "col_offset": 25, "nodeName": "length", "type": "Any"}, {"lineNumber": 456, "col_offset": 50, "nodeName": "LOOP_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 469, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 504, "col_offset": 23, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 505, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 506, "col_offset": 23, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 510, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 510, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 511, "col_offset": 12, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 518, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 522, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 526, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 527, "col_offset": 12, "nodeName": "test_observed", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 545, "col_offset": 23, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 546, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 547, "col_offset": 23, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "compute_reward", "type": "Any"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 563, "col_offset": 12, "nodeName": "compute_reward", "type": "Any"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 570, "col_offset": 12, "nodeName": "compute_reward", "type": "Any"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 578, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "compute_reward", "type": "Any"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 587, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 588, "col_offset": 12, "nodeName": "compute_reward", "type": "Any"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 595, "col_offset": 12, "nodeName": "compute_reward", "type": "Any"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 610, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 629, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 630, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 647, "col_offset": 23, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 648, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 649, "col_offset": 23, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 653, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 654, "col_offset": 12, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 658, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 658, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 659, "col_offset": 12, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 662, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 666, "col_offset": 8, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 667, "col_offset": 12, "nodeName": "test_observed", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 683, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 684, "col_offset": 49, "nodeName": "LOOP_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 688, "col_offset": 41, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 689, "col_offset": 43, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 697, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 698, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 698, "col_offset": 29, "nodeName": "high", "type": "Any"}, {"lineNumber": 699, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 699, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 699, "col_offset": 29, "nodeName": "low", "type": "Any"}, {"lineNumber": 702, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 702, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 703, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 703, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 703, "col_offset": 29, "nodeName": "high", "type": "Any"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 704, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 704, "col_offset": 29, "nodeName": "low", "type": "Any"}, {"lineNumber": 707, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 707, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 711, "col_offset": 25, "nodeName": "compute_reward", "type": "Any"}, {"lineNumber": 717, "col_offset": 8, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 718, "col_offset": 25, "nodeName": "compute_reward", "type": "Any"}, {"lineNumber": 729, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 747, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 748, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 750, "col_offset": 45, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 750, "col_offset": 62, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 759, "col_offset": 8, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 760, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 775, "col_offset": 8, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 775, "col_offset": 25, "nodeName": "distance_to_bottleneck", "type": "Any"}, {"lineNumber": 776, "col_offset": 8, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 776, "col_offset": 25, "nodeName": "distance_to_bottleneck", "type": "Any"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 779, "col_offset": 25, "nodeName": "get_bottleneck_density", "type": "Any"}, {"lineNumber": 782, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 783, "col_offset": 31, "nodeName": "get_avg_bottleneck_velocity", "type": "Any"}, {"lineNumber": 788, "col_offset": 8, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 788, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 789, "col_offset": 12, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 796, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 797, "col_offset": 12, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 812, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 832, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 833, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 836, "col_offset": 24, "nodeName": "self", "type": "TestBottleneckAccelEnv"}, {"lineNumber": 836, "col_offset": 41, "nodeName": "self", "type": "TestBottleneckAccelEnv"}, {"lineNumber": 837, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 840, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 845, "col_offset": 8, "nodeName": "self", "type": "TestBottleneckAccelEnv"}, {"lineNumber": 846, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 865, "col_offset": 8, "nodeName": "self", "type": "TestBottleneckAccelEnv"}, {"lineNumber": 865, "col_offset": 24, "nodeName": "test_space", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 866, "col_offset": 12, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 881, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 886, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 887, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 912, "col_offset": 8, "nodeName": "inflow", "type": "flow.core.params.InFlows"}, {"lineNumber": 919, "col_offset": 20, "nodeName": "inflow", "type": "flow.core.params.InFlows"}, {"lineNumber": 925, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 926, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 931, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 936, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 937, "col_offset": 8, "nodeName": "self", "type": "TestDesiredVelocityEnv"}, {"lineNumber": 938, "col_offset": 47, "nodeName": "expected_inflow", "type": "float"}, {"lineNumber": 941, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 946, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 947, "col_offset": 8, "nodeName": "self", "type": "TestDesiredVelocityEnv"}, {"lineNumber": 948, "col_offset": 47, "nodeName": "expected_inflow", "type": "float"}, {"lineNumber": 980, "col_offset": 18, "nodeName": "additional_params", "type": "Dict[str, Union[bool, int]]"}, {"lineNumber": 981, "col_offset": 20, "nodeName": "key", "type": "str"}, {"lineNumber": 984, "col_offset": 12, "nodeName": "env_class", "type": "Any"}, {"lineNumber": 1019, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 1020, "col_offset": 16, "nodeName": "high", "type": "Any"}, {"lineNumber": 1020, "col_offset": 34, "nodeName": "expected_max", "type": "int"}, {"lineNumber": 1021, "col_offset": 16, "nodeName": "low", "type": "Any"}, {"lineNumber": 1021, "col_offset": 33, "nodeName": "expected_min", "type": "int"}, {"lineNumber": 1056, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1057, "col_offset": 8, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 1057, "col_offset": 17, "nodeName": "expected_observed", "type": "List[str]"}, {"lineNumber": 26, "col_offset": 52, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 27, "col_offset": 55, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "LaneChangeAccelEnv", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "LaneChangeAccelEnv", "type": "Any"}, {"lineNumber": 101, "col_offset": 27, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 113, "col_offset": 52, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 114, "col_offset": 55, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "LaneChangeAccelPOEnv", "type": "Any"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "LaneChangeAccelPOEnv", "type": "Any"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 195, "col_offset": 52, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 196, "col_offset": 55, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 202, "col_offset": 23, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "AccelEnv", "type": "Any"}, {"lineNumber": 223, "col_offset": 27, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 238, "col_offset": 21, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 239, "col_offset": 23, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 251, "col_offset": 26, "nodeName": "num_rl_vehicles", "type": "Any"}, {"lineNumber": 262, "col_offset": 26, "nodeName": "AccelEnv", "type": "Any"}, {"lineNumber": 263, "col_offset": 27, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 265, "col_offset": 27, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 281, "col_offset": 23, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 282, "col_offset": 21, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "env", "type": "Any"}, {"lineNumber": 290, "col_offset": 43, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 305, "col_offset": 23, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 306, "col_offset": 21, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 314, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 324, "col_offset": 52, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 325, "col_offset": 55, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 351, "col_offset": 26, "nodeName": "WaveAttenuationEnv", "type": "Any"}, {"lineNumber": 352, "col_offset": 27, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 365, "col_offset": 23, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 366, "col_offset": 21, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 367, "col_offset": 23, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 379, "col_offset": 26, "nodeName": "num_rl_vehicles", "type": "Any"}, {"lineNumber": 390, "col_offset": 26, "nodeName": "WaveAttenuationEnv", "type": "Any"}, {"lineNumber": 391, "col_offset": 27, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 392, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 393, "col_offset": 27, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 409, "col_offset": 23, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 410, "col_offset": 21, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 411, "col_offset": 23, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 415, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 417, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 419, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 446, "col_offset": 23, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 447, "col_offset": 21, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 452, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 454, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 456, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 463, "col_offset": 52, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 464, "col_offset": 55, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 470, "col_offset": 23, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 489, "col_offset": 26, "nodeName": "WaveAttenuationPOEnv", "type": "Any"}, {"lineNumber": 490, "col_offset": 27, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 491, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 504, "col_offset": 23, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 505, "col_offset": 21, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 506, "col_offset": 23, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 511, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 528, "col_offset": 26, "nodeName": "WaveAttenuationPOEnv", "type": "Any"}, {"lineNumber": 529, "col_offset": 27, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 530, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 531, "col_offset": 27, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 545, "col_offset": 23, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 546, "col_offset": 21, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 547, "col_offset": 23, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 563, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 570, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 579, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 588, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 595, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 604, "col_offset": 52, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 605, "col_offset": 55, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 611, "col_offset": 23, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 631, "col_offset": 26, "nodeName": "WaveAttenuationMergePOEnv", "type": "Any"}, {"lineNumber": 632, "col_offset": 27, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 633, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 647, "col_offset": 23, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 648, "col_offset": 21, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 649, "col_offset": 23, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 654, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 659, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 668, "col_offset": 26, "nodeName": "WaveAttenuationMergePOEnv", "type": "Any"}, {"lineNumber": 669, "col_offset": 27, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 670, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 671, "col_offset": 27, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 697, "col_offset": 25, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 698, "col_offset": 29, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 699, "col_offset": 29, "nodeName": "observation_space", "type": "Any"}, {"lineNumber": 702, "col_offset": 25, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 703, "col_offset": 29, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 704, "col_offset": 29, "nodeName": "action_space", "type": "Any"}, {"lineNumber": 707, "col_offset": 29, "nodeName": "get_state", "type": "Any"}, {"lineNumber": 711, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 717, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 718, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 761, "col_offset": 26, "nodeName": "BottleneckEnv", "type": "Any"}, {"lineNumber": 762, "col_offset": 27, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 763, "col_offset": 25, "nodeName": "scenario", "type": "flow.scenarios.bottleneck.BottleneckScenario"}, {"lineNumber": 775, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 776, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 779, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 782, "col_offset": 8, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 783, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 789, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 797, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 837, "col_offset": 8, "nodeName": "self", "type": "TestBottleneckAccelEnv"}, {"lineNumber": 840, "col_offset": 8, "nodeName": "self", "type": "TestBottleneckAccelEnv"}, {"lineNumber": 847, "col_offset": 26, "nodeName": "BottleNeckAccelEnv", "type": "Any"}, {"lineNumber": 848, "col_offset": 27, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 849, "col_offset": 25, "nodeName": "scenario", "type": "flow.scenarios.bottleneck.BottleneckScenario"}, {"lineNumber": 866, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 881, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 900, "col_offset": 39, "nodeName": "controlled_segments", "type": "List[Tuple[str, int, bool]]"}, {"lineNumber": 902, "col_offset": 37, "nodeName": "num_observed_segments", "type": "List[Tuple[str, int]]"}, {"lineNumber": 936, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 938, "col_offset": 12, "nodeName": "get_inflow_rate", "type": "Any"}, {"lineNumber": 946, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 948, "col_offset": 12, "nodeName": "get_inflow_rate", "type": "Any"}, {"lineNumber": 985, "col_offset": 27, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 986, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 1019, "col_offset": 11, "nodeName": "gym_space", "type": "Any"}, {"lineNumber": 1020, "col_offset": 16, "nodeName": "gym_space", "type": "Any"}, {"lineNumber": 1021, "col_offset": 16, "nodeName": "gym_space", "type": "Any"}, {"lineNumber": 1056, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 1056, "col_offset": 17, "nodeName": "get_observed_ids", "type": "Any"}, {"lineNumber": 1057, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "num_rl_vehicles", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 101, "col_offset": 27, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "self", "type": "TestLaneChangeAccelEnv"}, {"lineNumber": 142, "col_offset": 27, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 183, "col_offset": 27, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "self", "type": "TestLaneChangeAccelPOEnv"}, {"lineNumber": 223, "col_offset": 27, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 224, "col_offset": 25, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 251, "col_offset": 26, "nodeName": "initial_vehicles", "type": "Any"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 263, "col_offset": 27, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 265, "col_offset": 27, "nodeName": "self", "type": "TestAccelEnv"}, {"lineNumber": 295, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 314, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 352, "col_offset": 27, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 373, "col_offset": 30, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 379, "col_offset": 26, "nodeName": "initial_vehicles", "type": "Any"}, {"lineNumber": 381, "col_offset": 25, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 391, "col_offset": 27, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 392, "col_offset": 25, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 393, "col_offset": 27, "nodeName": "self", "type": "TestWaveAttenuationEnv"}, {"lineNumber": 415, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 417, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 419, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 427, "col_offset": 18, "nodeName": "fsolve", "type": "Any"}, {"lineNumber": 427, "col_offset": 25, "nodeName": "v_eq_max_function", "type": "Callable[..., Any]"}, {"lineNumber": 432, "col_offset": 18, "nodeName": "fsolve", "type": "Any"}, {"lineNumber": 432, "col_offset": 25, "nodeName": "v_eq_max_function", "type": "Callable[..., Any]"}, {"lineNumber": 452, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 454, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 456, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 490, "col_offset": 27, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 491, "col_offset": 25, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 514, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 529, "col_offset": 27, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 530, "col_offset": 25, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 531, "col_offset": 27, "nodeName": "self", "type": "TestWaveAttenuationPOEnv"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 561, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 567, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 568, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 577, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 586, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 593, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 632, "col_offset": 27, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 633, "col_offset": 25, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 669, "col_offset": 27, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 670, "col_offset": 25, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 671, "col_offset": 27, "nodeName": "self", "type": "TestWaveAttenuationMergePOEnv"}, {"lineNumber": 697, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 698, "col_offset": 29, "nodeName": "env", "type": "Any"}, {"lineNumber": 699, "col_offset": 29, "nodeName": "env", "type": "Any"}, {"lineNumber": 702, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 703, "col_offset": 29, "nodeName": "env", "type": "Any"}, {"lineNumber": 704, "col_offset": 29, "nodeName": "env", "type": "Any"}, {"lineNumber": 707, "col_offset": 29, "nodeName": "env", "type": "Any"}, {"lineNumber": 711, "col_offset": 25, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 717, "col_offset": 8, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 718, "col_offset": 25, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 762, "col_offset": 27, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 763, "col_offset": 25, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 775, "col_offset": 25, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 776, "col_offset": 25, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 779, "col_offset": 25, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 783, "col_offset": 31, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 789, "col_offset": 12, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 792, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 797, "col_offset": 12, "nodeName": "self", "type": "TestBottleneckEnv"}, {"lineNumber": 800, "col_offset": 25, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 848, "col_offset": 27, "nodeName": "self", "type": "TestBottleneckAccelEnv"}, {"lineNumber": 849, "col_offset": 25, "nodeName": "self", "type": "TestBottleneckAccelEnv"}, {"lineNumber": 866, "col_offset": 12, "nodeName": "self", "type": "TestBottleneckAccelEnv"}, {"lineNumber": 938, "col_offset": 12, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 948, "col_offset": 12, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 987, "col_offset": 27, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 1056, "col_offset": 17, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 33, "col_offset": 51, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "initial_vehicles", "type": "Any"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "initial_vehicles", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 51, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 51, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "initial_vehicles", "type": "Any"}, {"lineNumber": 251, "col_offset": 26, "nodeName": "env", "type": "Any"}, {"lineNumber": 252, "col_offset": 26, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 333, "col_offset": 51, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 373, "col_offset": 30, "nodeName": "initial_vehicles", "type": "Any"}, {"lineNumber": 379, "col_offset": 26, "nodeName": "env", "type": "Any"}, {"lineNumber": 380, "col_offset": 26, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 381, "col_offset": 25, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 415, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 417, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 419, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 427, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 432, "col_offset": 44, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 452, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 454, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 456, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 470, "col_offset": 51, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 513, "col_offset": 26, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 611, "col_offset": 51, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 697, "col_offset": 25, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 698, "col_offset": 29, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 699, "col_offset": 29, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 702, "col_offset": 25, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 703, "col_offset": 29, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 704, "col_offset": 29, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 707, "col_offset": 29, "nodeName": "self", "type": "TestTestEnv"}, {"lineNumber": 791, "col_offset": 26, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 799, "col_offset": 26, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 938, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 948, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 987, "col_offset": 55, "nodeName": "new_add", "type": "Union[Dict[str, int], Dict[str, bool]]"}, {"lineNumber": 1056, "col_offset": 17, "nodeName": "k", "type": "Any"}, {"lineNumber": 33, "col_offset": 51, "nodeName": "LOOP_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 79, "col_offset": 30, "nodeName": "env", "type": "Any"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "env", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 120, "col_offset": 51, "nodeName": "LOOP_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 202, "col_offset": 51, "nodeName": "LOOP_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "env", "type": "Any"}, {"lineNumber": 252, "col_offset": 30, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 253, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 333, "col_offset": 51, "nodeName": "LOOP_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 373, "col_offset": 30, "nodeName": "env", "type": "Any"}, {"lineNumber": 380, "col_offset": 30, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 381, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 427, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 432, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 470, "col_offset": 51, "nodeName": "LOOP_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 611, "col_offset": 51, "nodeName": "MERGE_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 938, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 948, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 1056, "col_offset": 17, "nodeName": "env", "type": "Any"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 252, "col_offset": 30, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 295, "col_offset": 31, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 295, "col_offset": 35, "nodeName": "positions", "type": "List[Any]"}, {"lineNumber": 380, "col_offset": 30, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "env_params", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 252, "col_offset": 30, "nodeName": "env", "type": "Any"}, {"lineNumber": 380, "col_offset": 30, "nodeName": "env", "type": "Any"}, {"lineNumber": 89, "col_offset": 17, "nodeName": "env", "type": "Any"}]