[{"lineNumber": 168, "col_offset": 0, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "test_additional_net_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 212, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "new_add", "type": "Dict[str, int]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "additional_params", "type": "Dict[str, int]"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "new_add", "type": "Dict[str, int]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestBottleneckNetwork"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestFigureEightNetwork"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestTrafficLightGridNetwork"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestHighwayNetwork"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "TestRingNetwork"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TestMergeNetwork"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TestMultiRingNetwork"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "test_additional_params", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "additional_params", "type": "Dict[str, int]"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "key", "type": "str"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "network_class", "type": "Type[flow.networks.bottleneck.BottleneckNetwork]"}, {"lineNumber": 24, "col_offset": 30, "nodeName": "BottleneckNetwork", "type": "Type[flow.networks.bottleneck.BottleneckNetwork]"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "FigureEightNetwork", "type": "Type[flow.networks.figure_eight.FigureEightNetwork]"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "TrafficLightGridNetwork", "type": "Type[flow.networks.traffic_light_grid.TrafficLightGridNetwork]"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "HighwayNetwork", "type": "Type[flow.networks.highway.HighwayNetwork]"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "RingNetwork", "type": "Type[flow.networks.ring.RingNetwork]"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "MergeNetwork", "type": "Type[flow.networks.merge.MergeNetwork]"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "MultiRingNetwork", "type": "Type[flow.networks.multi_ring.MultiRingNetwork]"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 194, "col_offset": 27, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 194, "col_offset": 55, "nodeName": "new_add", "type": "Dict[str, int]"}]