[{"lineNumber": 18, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 381, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 444, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 515, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 556, "col_offset": 38, "nodeName": "TestEvenStartPosVariableLanes", "type": "Type[TestEvenStartPosVariableLanes]"}, {"lineNumber": 574, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 617, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 660, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 701, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 728, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 756, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 381, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 444, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 515, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 574, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 617, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 660, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 701, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 728, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 756, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 826, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "edge_1", "type": "str"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "pos_1", "type": "float"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "edge_2", "type": "str"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "pos_2", "type": "float"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "x1", "type": "int"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "x2", "type": "float"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "x0", "type": "int"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "bunching", "type": "int"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "bunching", "type": "int"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "veh_lanes", "type": "List[Any]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 310, "col_offset": 29, "nodeName": "inf", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "spacing", "type": "str"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 463, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 488, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 492, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 502, "col_offset": 8, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 511, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 518, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 525, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "expected_num_vehicles", "type": "Any"}, {"lineNumber": 544, "col_offset": 32, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 552, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 559, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 566, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 589, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 717, "col_offset": 8, "nodeName": "edge_list", "type": "Any"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "junction_list", "type": "Any"}, {"lineNumber": 769, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 780, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 781, "col_offset": 8, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 790, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 791, "col_offset": 8, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 800, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 801, "col_offset": 8, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 827, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "_", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 49, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 189, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 206, "col_offset": 66, "nodeName": "bunching", "type": "int"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 217, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 220, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "startpos", "type": "Any"}, {"lineNumber": 222, "col_offset": 18, "nodeName": "_", "type": "Any"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 253, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 257, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 259, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 259, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 277, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "randint", "type": "Any"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 294, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 297, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 310, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 311, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 314, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 318, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 320, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 320, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 328, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 328, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 348, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 351, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 355, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 371, "col_offset": 35, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 372, "col_offset": 37, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 375, "col_offset": 21, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 391, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 398, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 401, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 413, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 414, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 418, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 425, "col_offset": 15, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 449, "col_offset": 49, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 460, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 463, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 471, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 488, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 489, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 492, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 503, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 507, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 511, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 518, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 525, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 529, "col_offset": 29, "nodeName": "variable_lanes_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, tests.setup_scripts.VariableLanesScenario]]"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 537, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 544, "col_offset": 32, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 546, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 549, "col_offset": 25, "nodeName": "expected_num_vehicles", "type": "Any"}, {"lineNumber": 549, "col_offset": 48, "nodeName": "actual_num_vehicles", "type": "int"}, {"lineNumber": 552, "col_offset": 16, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 559, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 566, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 570, "col_offset": 29, "nodeName": "variable_lanes_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, tests.setup_scripts.VariableLanesScenario]]"}, {"lineNumber": 589, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 592, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 592, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 592, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 606, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 609, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 609, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 632, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 635, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 635, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 635, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 649, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 652, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 652, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 675, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 678, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 678, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 678, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 692, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 695, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 695, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 695, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 709, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 709, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 717, "col_offset": 20, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 725, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 725, "col_offset": 30, "nodeName": "edge_list", "type": "Any"}, {"lineNumber": 725, "col_offset": 41, "nodeName": "expected_edge_list", "type": "List[str]"}, {"lineNumber": 736, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 736, "col_offset": 18, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 736, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 741, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 744, "col_offset": 24, "nodeName": "get_junction_list", "type": "Any"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 753, "col_offset": 30, "nodeName": "junction_list", "type": "Any"}, {"lineNumber": 753, "col_offset": 45, "nodeName": "expected_junction_list", "type": "List[str]"}, {"lineNumber": 768, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 768, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 768, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 769, "col_offset": 20, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 773, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 773, "col_offset": 30, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 773, "col_offset": 41, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 779, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 779, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 779, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 780, "col_offset": 20, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 783, "col_offset": 30, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 783, "col_offset": 41, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 789, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 789, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 789, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 790, "col_offset": 20, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 793, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 793, "col_offset": 30, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 793, "col_offset": 41, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 799, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 799, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 799, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 800, "col_offset": 20, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 803, "col_offset": 30, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 803, "col_offset": 41, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 810, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 810, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.highway.HighwayScenario"}, {"lineNumber": 810, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.HighwayScenario]]"}, {"lineNumber": 811, "col_offset": 20, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 813, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 820, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 820, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.highway.HighwayScenario"}, {"lineNumber": 820, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.HighwayScenario]]"}, {"lineNumber": 821, "col_offset": 20, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 823, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 827, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "get_x", "type": "Any"}, {"lineNumber": 37, "col_offset": 57, "nodeName": "edge_1", "type": "str"}, {"lineNumber": 37, "col_offset": 65, "nodeName": "pos_1", "type": "float"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "get_x", "type": "Any"}, {"lineNumber": 42, "col_offset": 57, "nodeName": "edge_2", "type": "str"}, {"lineNumber": 42, "col_offset": 65, "nodeName": "pos_2", "type": "float"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "x1", "type": "int"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "x2", "type": "float"}, {"lineNumber": 94, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 156, "col_offset": 42, "nodeName": "x0", "type": "int"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 163, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "x0", "type": "int"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 186, "col_offset": 48, "nodeName": "bunching", "type": "int"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 198, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 217, "col_offset": 48, "nodeName": "bunching", "type": "int"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 225, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 231, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 250, "col_offset": 58, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 257, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 277, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 277, "col_offset": 31, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 291, "col_offset": 58, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 297, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 298, "col_offset": 21, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 298, "col_offset": 48, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 298, "col_offset": 60, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 298, "col_offset": 70, "nodeName": "ids", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 311, "col_offset": 58, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 318, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 335, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 348, "col_offset": 58, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 355, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 371, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 371, "col_offset": 29, "nodeName": "pos", "type": "Any"}, {"lineNumber": 371, "col_offset": 35, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 372, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 372, "col_offset": 29, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 372, "col_offset": 37, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 375, "col_offset": 21, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 377, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 377, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 377, "col_offset": 29, "nodeName": "pos", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 378, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 378, "col_offset": 29, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 402, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 402, "col_offset": 52, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 413, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 414, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 418, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 419, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 424, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 429, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 460, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 464, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 472, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 473, "col_offset": 27, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 474, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 492, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 494, "col_offset": 28, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 504, "col_offset": 49, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 511, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 530, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 530, "col_offset": 46, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 544, "col_offset": 32, "nodeName": "env", "type": "Any"}, {"lineNumber": 546, "col_offset": 16, "nodeName": "getIDList", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 552, "col_offset": 16, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 552, "col_offset": 43, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 553, "col_offset": 25, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 560, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 571, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 571, "col_offset": 46, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 589, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 592, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 594, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 594, "col_offset": 25, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 607, "col_offset": 55, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 609, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 611, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 612, "col_offset": 12, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 614, "col_offset": 12, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 632, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 635, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 637, "col_offset": 31, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 650, "col_offset": 55, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 652, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 654, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 655, "col_offset": 12, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 657, "col_offset": 12, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 675, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 678, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 680, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 680, "col_offset": 25, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 693, "col_offset": 55, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 695, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 697, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 697, "col_offset": 25, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 698, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 698, "col_offset": 25, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 717, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 725, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 736, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 744, "col_offset": 24, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 753, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 769, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 773, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 780, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 790, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 793, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 800, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 811, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 813, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 821, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 823, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 131, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 131, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 131, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 131, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 163, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 163, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 163, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "length", "type": "Any"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 193, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 193, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 193, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 206, "col_offset": 31, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 206, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 226, "col_offset": 32, "nodeName": "pos", "type": "Any"}, {"lineNumber": 226, "col_offset": 39, "nodeName": "startpos", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 257, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "length", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 278, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 290, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 297, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 298, "col_offset": 21, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 299, "col_offset": 35, "nodeName": "veh_lanes", "type": "List[Any]"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 318, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "length", "type": "Any"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 355, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 356, "col_offset": 66, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 370, "col_offset": 27, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 371, "col_offset": 35, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 372, "col_offset": 37, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 375, "col_offset": 21, "nodeName": "k", "type": "Any"}, {"lineNumber": 376, "col_offset": 27, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 394, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 395, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 413, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 414, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 414, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 414, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 414, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 429, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 466, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 467, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 492, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 493, "col_offset": 28, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 493, "col_offset": 55, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 494, "col_offset": 28, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 511, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 512, "col_offset": 12, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 512, "col_offset": 66, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 521, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 522, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 534, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 544, "col_offset": 32, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 546, "col_offset": 16, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 552, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 552, "col_offset": 43, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 562, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 563, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 594, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 612, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 614, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 637, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 655, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 657, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 680, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 697, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 698, "col_offset": 25, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 717, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 740, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 744, "col_offset": 24, "nodeName": "k", "type": "Any"}, {"lineNumber": 769, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 780, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 790, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 800, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 811, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 812, "col_offset": 12, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 813, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 813, "col_offset": 28, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 821, "col_offset": 20, "nodeName": "k", "type": "Any"}, {"lineNumber": 822, "col_offset": 12, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 823, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 823, "col_offset": 28, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 131, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 143, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 143, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 175, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 175, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 192, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 198, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 198, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 231, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 236, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 236, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 257, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 261, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 261, "col_offset": 59, "nodeName": "ids", "type": "Any"}, {"lineNumber": 271, "col_offset": 23, "nodeName": "append", "type": "Any"}, {"lineNumber": 271, "col_offset": 66, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 278, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 297, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 298, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 318, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 322, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 322, "col_offset": 59, "nodeName": "ids", "type": "Any"}, {"lineNumber": 332, "col_offset": 23, "nodeName": "append", "type": "Any"}, {"lineNumber": 332, "col_offset": 66, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 335, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 355, "col_offset": 22, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 356, "col_offset": 28, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 356, "col_offset": 55, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 371, "col_offset": 35, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 372, "col_offset": 37, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 375, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 413, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 414, "col_offset": 28, "nodeName": "env", "type": "Any"}, {"lineNumber": 419, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 419, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 419, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 424, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 492, "col_offset": 22, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 493, "col_offset": 28, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 511, "col_offset": 22, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 512, "col_offset": 28, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 512, "col_offset": 55, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 546, "col_offset": 16, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 552, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 552, "col_offset": 43, "nodeName": "env", "type": "Any"}, {"lineNumber": 553, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 553, "col_offset": 38, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 553, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 594, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 612, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 614, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 637, "col_offset": 31, "nodeName": "k", "type": "Any"}, {"lineNumber": 655, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 657, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 680, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 697, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 698, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 717, "col_offset": 20, "nodeName": "env", "type": "Any"}, {"lineNumber": 744, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 769, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 780, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 790, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 800, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 811, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 812, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 821, "col_offset": 20, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 822, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "env", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 131, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 143, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "k", "type": "Any"}, {"lineNumber": 175, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 236, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 262, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 271, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 271, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 274, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 298, "col_offset": 21, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 323, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 332, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 332, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "k", "type": "Any"}, {"lineNumber": 335, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 335, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 356, "col_offset": 28, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 375, "col_offset": 21, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 414, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 424, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 424, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 424, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 429, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 429, "col_offset": 31, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 441, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 493, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 512, "col_offset": 28, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 546, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 552, "col_offset": 43, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 553, "col_offset": 53, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 594, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 612, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 614, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 637, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 655, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 657, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 680, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 697, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 698, "col_offset": 25, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 717, "col_offset": 20, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 744, "col_offset": 24, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 812, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 822, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 262, "col_offset": 19, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 262, "col_offset": 46, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 271, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 271, "col_offset": 49, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 274, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 274, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 278, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 278, "col_offset": 45, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 323, "col_offset": 46, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 332, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 332, "col_offset": 49, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 335, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 335, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 356, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 424, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 430, "col_offset": 19, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 430, "col_offset": 36, "nodeName": "mean", "type": "Any"}, {"lineNumber": 430, "col_offset": 44, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 435, "col_offset": 28, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 438, "col_offset": 67, "nodeName": "pos_i", "type": "Any"}, {"lineNumber": 438, "col_offset": 76, "nodeName": "pos", "type": "List[Any]"}, {"lineNumber": 441, "col_offset": 20, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 441, "col_offset": 36, "nodeName": "any", "type": "Any"}, {"lineNumber": 493, "col_offset": 28, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 512, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 546, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 812, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 822, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 262, "col_offset": 19, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 271, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 271, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 332, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 332, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 356, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 430, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 430, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 438, "col_offset": 24, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 438, "col_offset": 53, "nodeName": "pos_i", "type": "Any"}, {"lineNumber": 441, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 512, "col_offset": 28, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 262, "col_offset": 19, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 435, "col_offset": 39, "nodeName": "ids", "type": "Any"}, {"lineNumber": 435, "col_offset": 51, "nodeName": "ids", "type": "Any"}, {"lineNumber": 438, "col_offset": 24, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 441, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 441, "col_offset": 52, "nodeName": "rel_pos", "type": "List[Any]"}, {"lineNumber": 262, "col_offset": 19, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 323, "col_offset": 19, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 435, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 438, "col_offset": 24, "nodeName": "k", "type": "Any"}, {"lineNumber": 441, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 435, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 438, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 438, "col_offset": 24, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}]