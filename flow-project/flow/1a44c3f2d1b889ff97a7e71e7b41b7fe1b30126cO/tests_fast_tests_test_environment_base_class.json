[{"lineNumber": 22, "col_offset": 0, "nodeName": "WHITE", "type": "Tuple[int, int, int]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "CYAN", "type": "Tuple[int, int, int]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "RED", "type": "Tuple[int, int, int]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "YELLOW", "type": "Tuple[int, int, int]"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "test_shuffle", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "test_emission", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "test_apply_acceleration", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "test_apply_lane_change_errors", "type": "Callable[[Any], Any]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "test_apply_lane_change_direction", "type": "Callable[[Any], Any]"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "test_it_works", "type": "Callable[[Any], Any]"}, {"lineNumber": 280, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "test_it_works", "type": "Callable[[Any], Any]"}, {"lineNumber": 306, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "test_get_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "test_compute_reward", "type": "Callable[[Any], Any]"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "test__apply_rl_actions", "type": "Callable[[Any], Any]"}, {"lineNumber": 338, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 340, "col_offset": 4, "nodeName": "test_all", "type": "Callable[[Any], Any]"}, {"lineNumber": 380, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "test_num_spawned", "type": "Callable[[Any], Any]"}, {"lineNumber": 399, "col_offset": 13, "nodeName": "Env", "type": "Type[flow.envs.base.Env]"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "get_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 405, "col_offset": 4, "nodeName": "action_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "observation_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 413, "col_offset": 4, "nodeName": "_apply_rl_actions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 417, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 423, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 432, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 436, "col_offset": 4, "nodeName": "test_clip_box_actions", "type": "Callable[[Any], Any]"}, {"lineNumber": 444, "col_offset": 15, "nodeName": "Env", "type": "Type[flow.envs.base.Env]"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "get_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 450, "col_offset": 4, "nodeName": "action_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 457, "col_offset": 4, "nodeName": "observation_space", "type": "Callable[[Any], Any]"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "_apply_rl_actions", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 465, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 471, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 480, "col_offset": 4, "nodeName": "tearDown", "type": "Callable[[Any], Any]"}, {"lineNumber": 484, "col_offset": 4, "nodeName": "test_clip_tuple_actions", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "unittest", "type": "module"}, {"lineNumber": 256, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 280, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 306, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 338, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 380, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 417, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 465, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 502, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "accel_step0", "type": "numpy.ndarray"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "expected_vel1", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "accel_step1", "type": "numpy.ndarray"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "expected_vel2", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "bad_directions", "type": "numpy.ndarray"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "max_lanes", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "direction0", "type": "numpy.ndarray"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "direction1", "type": "numpy.ndarray"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "warmup_step", "type": "int"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "t1", "type": "int"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "t2", "type": "int"}, {"lineNumber": 274, "col_offset": 13, "nodeName": "time_counter", "type": "int"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "sims_per_step", "type": "int"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "t1", "type": "int"}, {"lineNumber": 296, "col_offset": 13, "nodeName": "time_counter", "type": "int"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "t2", "type": "int"}, {"lineNumber": 300, "col_offset": 13, "nodeName": "time_counter", "type": "int"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "render", "type": "bool"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 390, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "actions", "type": "List[Union[float, int]]"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "clipped_actions", "type": "List[Union[float, int]]"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "_actions", "type": "Any"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 496, "col_offset": 8, "nodeName": "_actions", "type": "Any"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.ring.RingNetwork]]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestShuffle"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "before_reset", "type": "List[Any]"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "after_reset", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "_", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.ring.RingNetwork]]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertIsNone", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "emission_path", "type": "Any"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.ring.RingNetwork]]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "apply_acceleration", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "simulation_step", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "clip", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 172, "col_offset": 45, "nodeName": "vel1", "type": "numpy.ndarray"}, {"lineNumber": 172, "col_offset": 51, "nodeName": "expected_vel1", "type": "Any"}, {"lineNumber": 175, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "apply_acceleration", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "simulation_step", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "clip", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 188, "col_offset": 45, "nodeName": "vel2", "type": "numpy.ndarray"}, {"lineNumber": 188, "col_offset": 51, "nodeName": "expected_vel2", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "apply_lane_change", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "additional_params", "type": "Any"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "apply_lane_change", "type": "Any"}, {"lineNumber": 222, "col_offset": 45, "nodeName": "ids", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "simulation_step", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "clip", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 235, "col_offset": 45, "nodeName": "lane1", "type": "numpy.ndarray"}, {"lineNumber": 235, "col_offset": 52, "nodeName": "expected_lane1", "type": "Any"}, {"lineNumber": 239, "col_offset": 21, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "apply_lane_change", "type": "Any"}, {"lineNumber": 240, "col_offset": 45, "nodeName": "ids", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "simulation_step", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "update", "type": "Any"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 250, "col_offset": 26, "nodeName": "clip", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 253, "col_offset": 45, "nodeName": "lane2", "type": "numpy.ndarray"}, {"lineNumber": 253, "col_offset": 52, "nodeName": "expected_lane2", "type": "Any"}, {"lineNumber": 265, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "_", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.ring.RingNetwork]]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 274, "col_offset": 13, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 277, "col_offset": 34, "nodeName": "warmup_step", "type": "int"}, {"lineNumber": 289, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 292, "col_offset": 13, "nodeName": "_", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 292, "col_offset": 17, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.ring.RingNetwork]]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 296, "col_offset": 13, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "step", "type": "Callable[[Any], Tuple[Any, Any, bool, Dict[Any, Any]]]"}, {"lineNumber": 300, "col_offset": 13, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 303, "col_offset": 34, "nodeName": "sims_per_step", "type": "int"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 314, "col_offset": 13, "nodeName": "network", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 314, "col_offset": 23, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.ring.RingNetwork]]"}, {"lineNumber": 315, "col_offset": 21, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 317, "col_offset": 19, "nodeName": "Env", "type": "Type[flow.envs.base.Env]"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 327, "col_offset": 26, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 327, "col_offset": 47, "nodeName": "get_state", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 334, "col_offset": 26, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 334, "col_offset": 47, "nodeName": "_apply_rl_actions", "type": "Any"}, {"lineNumber": 341, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "_", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 346, "col_offset": 11, "nodeName": "network", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 346, "col_offset": 21, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.ring.RingNetwork]]"}, {"lineNumber": 347, "col_offset": 14, "nodeName": "TestEnv", "type": "Type[flow.envs.test.TestEnv]"}, {"lineNumber": 347, "col_offset": 49, "nodeName": "network", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "set_observed", "type": "Callable[[Any], None]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "step", "type": "Callable[[Any], Tuple[Any, Any, bool, Dict[Any, Any]]]"}, {"lineNumber": 358, "col_offset": 22, "nodeName": "get_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "set_observed", "type": "Callable[[Any], None]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "step", "type": "Callable[[Any], Tuple[Any, Any, bool, Dict[Any, Any]]]"}, {"lineNumber": 371, "col_offset": 22, "nodeName": "get_ids", "type": "Callable[[], List[Any]]"}, {"lineNumber": 384, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 390, "col_offset": 19, "nodeName": "VehicleParams", "type": "Type[flow.core.params.VehicleParams]"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 393, "col_offset": 26, "nodeName": "FatalFlowError", "type": "Type[flow.utils.exceptions.FatalFlowError]"}, {"lineNumber": 394, "col_offset": 26, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.highway.HighwayNetwork]]"}, {"lineNumber": 407, "col_offset": 15, "nodeName": "Box", "type": "Any"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 424, "col_offset": 13, "nodeName": "network", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 424, "col_offset": 23, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.ring.RingNetwork]]"}, {"lineNumber": 425, "col_offset": 21, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 426, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 427, "col_offset": 19, "nodeName": "BoxEnv", "type": "Type[BoxEnv]"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "self", "type": "TestClipBoxActions"}, {"lineNumber": 440, "col_offset": 19, "nodeName": "clip_actions", "type": "Any"}, {"lineNumber": 440, "col_offset": 41, "nodeName": "actions", "type": "List[Union[float, int]]"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 452, "col_offset": 15, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 472, "col_offset": 13, "nodeName": "scenario", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 472, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.ring.accel.AccelEnv, flow.networks.ring.RingNetwork]]"}, {"lineNumber": 473, "col_offset": 21, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 474, "col_offset": 21, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 475, "col_offset": 19, "nodeName": "TupleEnv", "type": "Type[TupleEnv]"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "terminate", "type": "Callable[[], None]"}, {"lineNumber": 482, "col_offset": 8, "nodeName": "self", "type": "TestClipTupleActions"}, {"lineNumber": 496, "col_offset": 19, "nodeName": "clip_actions", "type": "Any"}, {"lineNumber": 496, "col_offset": 41, "nodeName": "actions", "type": "List[Union[List[int], List[Union[float, int]], int]]"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "assertEquals", "type": "Callable[..., None]"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "ids", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "ids", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestShuffle"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 90, "col_offset": 53, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "sim_params", "type": "Any"}, {"lineNumber": 117, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 137, "col_offset": 67, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 160, "col_offset": 54, "nodeName": "ids", "type": "Any"}, {"lineNumber": 160, "col_offset": 63, "nodeName": "accel_step0", "type": "numpy.ndarray"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "simulation", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 175, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 176, "col_offset": 54, "nodeName": "ids", "type": "Any"}, {"lineNumber": 176, "col_offset": 63, "nodeName": "accel_step1", "type": "numpy.ndarray"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "simulation", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 204, "col_offset": 20, "nodeName": "ids", "type": "Any"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "bad_directions", "type": "numpy.ndarray"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "net_params", "type": "Any"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 222, "col_offset": 60, "nodeName": "direction0", "type": "numpy.ndarray"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "simulation", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 239, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 240, "col_offset": 60, "nodeName": "direction1", "type": "numpy.ndarray"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "simulation", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "warmup_step", "type": "int"}, {"lineNumber": 266, "col_offset": 56, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 267, "col_offset": 48, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "TestWarmUpSteps"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "t2", "type": "int"}, {"lineNumber": 277, "col_offset": 30, "nodeName": "t1", "type": "int"}, {"lineNumber": 290, "col_offset": 26, "nodeName": "sims_per_step", "type": "int"}, {"lineNumber": 291, "col_offset": 30, "nodeName": "ADDITIONAL_ENV_PARAMS", "type": "Dict[str, int]"}, {"lineNumber": 292, "col_offset": 48, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "env", "type": "flow.envs.ring.accel.AccelEnv"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "self", "type": "TestSimsPerStep"}, {"lineNumber": 303, "col_offset": 25, "nodeName": "t2", "type": "int"}, {"lineNumber": 303, "col_offset": 30, "nodeName": "t1", "type": "int"}, {"lineNumber": 317, "col_offset": 34, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 318, "col_offset": 34, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 319, "col_offset": 31, "nodeName": "network", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "env", "type": "flow.envs.base.Env"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 327, "col_offset": 47, "nodeName": "env", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 331, "col_offset": 25, "nodeName": "compute_reward", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 334, "col_offset": 47, "nodeName": "env", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 346, "col_offset": 50, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 347, "col_offset": 22, "nodeName": "EnvParams", "type": "Type[flow.core.params.EnvParams]"}, {"lineNumber": 347, "col_offset": 35, "nodeName": "SumoParams", "type": "Type[flow.core.params.SumoParams]"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "vehicle", "type": "Union[flow.core.kernel.vehicle.aimsun.AimsunKernelVehicle, flow.core.kernel.vehicle.traci.TraCIVehicle]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 358, "col_offset": 22, "nodeName": "vehicle", "type": "Union[flow.core.kernel.vehicle.aimsun.AimsunKernelVehicle, flow.core.kernel.vehicle.traci.TraCIVehicle]"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 359, "col_offset": 62, "nodeName": "YELLOW", "type": "Tuple[int, int, int]"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "vehicle", "type": "Union[flow.core.kernel.vehicle.aimsun.AimsunKernelVehicle, flow.core.kernel.vehicle.traci.TraCIVehicle]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 371, "col_offset": 22, "nodeName": "vehicle", "type": "Union[flow.core.kernel.vehicle.aimsun.AimsunKernelVehicle, flow.core.kernel.vehicle.traci.TraCIVehicle]"}, {"lineNumber": 372, "col_offset": 15, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "self", "type": "TestNotEnoughVehicles"}, {"lineNumber": 395, "col_offset": 41, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 396, "col_offset": 35, "nodeName": "vehicles", "type": "flow.core.params.VehicleParams"}, {"lineNumber": 407, "col_offset": 15, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 428, "col_offset": 23, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 429, "col_offset": 23, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 430, "col_offset": 21, "nodeName": "network", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "env", "type": "BoxEnv"}, {"lineNumber": 440, "col_offset": 19, "nodeName": "env", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "self", "type": "TestClipBoxActions"}, {"lineNumber": 441, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 452, "col_offset": 15, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 476, "col_offset": 23, "nodeName": "sim_params", "type": "flow.core.params.SumoParams"}, {"lineNumber": 477, "col_offset": 23, "nodeName": "env_params", "type": "flow.core.params.EnvParams"}, {"lineNumber": 478, "col_offset": 21, "nodeName": "scenario", "type": "flow.networks.ring.RingNetwork"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "env", "type": "TupleEnv"}, {"lineNumber": 496, "col_offset": 19, "nodeName": "env", "type": "Any"}, {"lineNumber": 497, "col_offset": 8, "nodeName": "self", "type": "TestClipTupleActions"}, {"lineNumber": 497, "col_offset": 26, "nodeName": "_actions", "type": "Any"}, {"lineNumber": 497, "col_offset": 39, "nodeName": "clipped_actions", "type": "List[Union[List[int], List[Union[float, int]], int]]"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "self", "type": "TestClipTupleActions"}, {"lineNumber": 498, "col_offset": 25, "nodeName": "all", "type": "Any"}, {"lineNumber": 499, "col_offset": 8, "nodeName": "self", "type": "TestClipTupleActions"}, {"lineNumber": 499, "col_offset": 26, "nodeName": "_actions", "type": "Any"}, {"lineNumber": 499, "col_offset": 39, "nodeName": "clipped_actions", "type": "List[Union[List[int], List[Union[float, int]], int]]"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestShuffle"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestShuffle"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "env", "type": "Any"}, {"lineNumber": 127, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "SumoCarFollowingParams", "type": "Type[flow.core.params.SumoCarFollowingParams]"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "SumoLaneChangeParams", "type": "Type[flow.core.params.SumoLaneChangeParams]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "get_speed", "type": "Any"}, {"lineNumber": 156, "col_offset": 42, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 156, "col_offset": 54, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 156, "col_offset": 64, "nodeName": "ids", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "ids", "type": "Any"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "vel0", "type": "numpy.ndarray"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 184, "col_offset": 26, "nodeName": "ids", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "vel1", "type": "numpy.ndarray"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "k", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 217, "col_offset": 13, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 217, "col_offset": 41, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 217, "col_offset": 53, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 217, "col_offset": 63, "nodeName": "ids", "type": "Any"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "env", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "ids", "type": "Any"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "lane0", "type": "numpy.ndarray"}, {"lineNumber": 233, "col_offset": 23, "nodeName": "max_lanes", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "k", "type": "Any"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 248, "col_offset": 26, "nodeName": "ids", "type": "Any"}, {"lineNumber": 250, "col_offset": 26, "nodeName": "lane1", "type": "numpy.ndarray"}, {"lineNumber": 251, "col_offset": 23, "nodeName": "max_lanes", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 327, "col_offset": 47, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 331, "col_offset": 25, "nodeName": "env", "type": "Any"}, {"lineNumber": 334, "col_offset": 47, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 344, "col_offset": 52, "nodeName": "RLController", "type": "Type[flow.controllers.rlcontroller.RLController]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "k", "type": "flow.core.kernel.kernel.Kernel"}, {"lineNumber": 358, "col_offset": 22, "nodeName": "k", "type": "flow.core.kernel.kernel.Kernel"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "self", "type": "TestVehicleColoring"}, {"lineNumber": 359, "col_offset": 29, "nodeName": "get_color", "type": "Union[Callable[[Any], Any], Callable[[Any], Tuple[Any, Any, Any]]]"}, {"lineNumber": 359, "col_offset": 53, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "k", "type": "flow.core.kernel.kernel.Kernel"}, {"lineNumber": 371, "col_offset": 22, "nodeName": "k", "type": "flow.core.kernel.kernel.Kernel"}, {"lineNumber": 373, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 373, "col_offset": 66, "nodeName": "CYAN", "type": "Tuple[int, int, int]"}, {"lineNumber": 374, "col_offset": 17, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "self", "type": "TestClipBoxActions"}, {"lineNumber": 440, "col_offset": 19, "nodeName": "self", "type": "TestClipBoxActions"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "Box", "type": "Any"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "Box", "type": "Any"}, {"lineNumber": 455, "col_offset": 12, "nodeName": "Discrete", "type": "Any"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "self", "type": "TestClipTupleActions"}, {"lineNumber": 496, "col_offset": 19, "nodeName": "self", "type": "TestClipTupleActions"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "self", "type": "TestEmissionPath"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "accel_step0", "type": "numpy.ndarray"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 186, "col_offset": 32, "nodeName": "accel_step1", "type": "numpy.ndarray"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 217, "col_offset": 13, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 218, "col_offset": 20, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 232, "col_offset": 34, "nodeName": "sign", "type": "Any"}, {"lineNumber": 232, "col_offset": 42, "nodeName": "direction0", "type": "numpy.ndarray"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "env", "type": "Any"}, {"lineNumber": 250, "col_offset": 34, "nodeName": "sign", "type": "Any"}, {"lineNumber": 250, "col_offset": 42, "nodeName": "direction1", "type": "numpy.ndarray"}, {"lineNumber": 331, "col_offset": 25, "nodeName": "self", "type": "TestAbstractMethods"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 358, "col_offset": 22, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 359, "col_offset": 29, "nodeName": "vehicle", "type": "Union[flow.core.kernel.vehicle.aimsun.AimsunKernelVehicle, flow.core.kernel.vehicle.traci.TraCIVehicle]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 371, "col_offset": 22, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 373, "col_offset": 16, "nodeName": "self", "type": "TestVehicleColoring"}, {"lineNumber": 373, "col_offset": 33, "nodeName": "get_color", "type": "Union[Callable[[Any], Any], Callable[[Any], Tuple[Any, Any, Any]]]"}, {"lineNumber": 373, "col_offset": 57, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 375, "col_offset": 66, "nodeName": "RED", "type": "Tuple[int, int, int]"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 377, "col_offset": 66, "nodeName": "WHITE", "type": "Tuple[int, int, int]"}, {"lineNumber": 441, "col_offset": 25, "nodeName": "_actions", "type": "Any"}, {"lineNumber": 441, "col_offset": 37, "nodeName": "clipped_actions", "type": "List[Union[float, int]]"}, {"lineNumber": 453, "col_offset": 12, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 454, "col_offset": 12, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 455, "col_offset": 12, "nodeName": "spaces", "type": "Any"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "self", "type": "TestShuffle"}, {"lineNumber": 153, "col_offset": 14, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 215, "col_offset": 14, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 217, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 232, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 250, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 359, "col_offset": 29, "nodeName": "k", "type": "flow.core.kernel.kernel.Kernel"}, {"lineNumber": 373, "col_offset": 33, "nodeName": "vehicle", "type": "Union[flow.core.kernel.vehicle.aimsun.AimsunKernelVehicle, flow.core.kernel.vehicle.traci.TraCIVehicle]"}, {"lineNumber": 375, "col_offset": 16, "nodeName": "self", "type": "TestVehicleColoring"}, {"lineNumber": 375, "col_offset": 33, "nodeName": "get_color", "type": "Union[Callable[[Any], Any], Callable[[Any], Tuple[Any, Any, Any]]]"}, {"lineNumber": 375, "col_offset": 57, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "self", "type": "TestVehicleColoring"}, {"lineNumber": 377, "col_offset": 33, "nodeName": "get_color", "type": "Union[Callable[[Any], Any], Callable[[Any], Tuple[Any, Any, Any]]]"}, {"lineNumber": 377, "col_offset": 57, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 498, "col_offset": 25, "nodeName": "_actions", "type": "Any"}, {"lineNumber": 498, "col_offset": 40, "nodeName": "clipped_actions", "type": "List[Union[List[int], List[Union[float, int]], int]]"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "env", "type": "Any"}, {"lineNumber": 217, "col_offset": 13, "nodeName": "env", "type": "Any"}, {"lineNumber": 359, "col_offset": 29, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 373, "col_offset": 33, "nodeName": "k", "type": "flow.core.kernel.kernel.Kernel"}, {"lineNumber": 375, "col_offset": 33, "nodeName": "vehicle", "type": "Union[flow.core.kernel.vehicle.aimsun.AimsunKernelVehicle, flow.core.kernel.vehicle.traci.TraCIVehicle]"}, {"lineNumber": 377, "col_offset": 33, "nodeName": "vehicle", "type": "Union[flow.core.kernel.vehicle.aimsun.AimsunKernelVehicle, flow.core.kernel.vehicle.traci.TraCIVehicle]"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 217, "col_offset": 13, "nodeName": "self", "type": "TestApplyingActionsWithSumo"}, {"lineNumber": 373, "col_offset": 33, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 375, "col_offset": 33, "nodeName": "k", "type": "flow.core.kernel.kernel.Kernel"}, {"lineNumber": 377, "col_offset": 33, "nodeName": "k", "type": "flow.core.kernel.kernel.Kernel"}, {"lineNumber": 375, "col_offset": 33, "nodeName": "env", "type": "flow.envs.test.TestEnv"}, {"lineNumber": 377, "col_offset": 33, "nodeName": "env", "type": "flow.envs.test.TestEnv"}]