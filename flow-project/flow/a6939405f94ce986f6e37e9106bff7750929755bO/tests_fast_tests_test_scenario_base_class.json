[{"lineNumber": 18, "col_offset": 15, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 377, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 440, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 511, "col_offset": 36, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 552, "col_offset": 38, "nodeName": "TestEvenStartPosVariableLanes", "type": "Type[TestEvenStartPosVariableLanes]"}, {"lineNumber": 570, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 613, "col_offset": 21, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 655, "col_offset": 19, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 696, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 722, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 749, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "unittest", "type": "module"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "unittest", "type": "module"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 377, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 440, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 511, "col_offset": 36, "nodeName": "unittest", "type": "module"}, {"lineNumber": 570, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 613, "col_offset": 21, "nodeName": "unittest", "type": "module"}, {"lineNumber": 655, "col_offset": 19, "nodeName": "unittest", "type": "module"}, {"lineNumber": 696, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 722, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 749, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 817, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "os", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "edge_1", "type": "str"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "pos_1", "type": "float"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "edge_2", "type": "str"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "pos_2", "type": "float"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "x1", "type": "int"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "x2", "type": "float"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "x0", "type": "int"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "bunching", "type": "int"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "bunching", "type": "int"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "veh_lanes", "type": "List[Any]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 306, "col_offset": 29, "nodeName": "inf", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 313, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "ids", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "spacing", "type": "str"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 488, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 498, "col_offset": 8, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 507, "col_offset": 12, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 514, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 521, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "env", "type": "None"}, {"lineNumber": 540, "col_offset": 8, "nodeName": "expected_num_vehicles", "type": "Any"}, {"lineNumber": 540, "col_offset": 32, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 548, "col_offset": 8, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 555, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 585, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 628, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 670, "col_offset": 8, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 711, "col_offset": 8, "nodeName": "edge_list", "type": "Any"}, {"lineNumber": 734, "col_offset": 8, "nodeName": "scenario", "type": "None"}, {"lineNumber": 737, "col_offset": 8, "nodeName": "junction_list", "type": "Any"}, {"lineNumber": 762, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 773, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 774, "col_offset": 8, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 783, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 784, "col_offset": 8, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 793, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 794, "col_offset": 8, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 804, "col_offset": 8, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 813, "col_offset": 8, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 818, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertTupleEqual", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 49, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 188, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 205, "col_offset": 66, "nodeName": "bunching", "type": "int"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 219, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 222, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 255, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 263, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 273, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 286, "col_offset": 29, "nodeName": "randint", "type": "Any"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 290, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 293, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 306, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 310, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 313, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 315, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 315, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 323, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 323, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "tearDown_gen_start_pos", "type": "Callable[[], Any]"}, {"lineNumber": 343, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 346, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 350, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "startpos", "type": "Any"}, {"lineNumber": 364, "col_offset": 18, "nodeName": "startlanes", "type": "Any"}, {"lineNumber": 364, "col_offset": 31, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 366, "col_offset": 27, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 368, "col_offset": 29, "nodeName": "num_vehicles", "type": "Any"}, {"lineNumber": 371, "col_offset": 31, "nodeName": "generate_starting_positions", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 387, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 394, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 397, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 409, "col_offset": 14, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 410, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 414, "col_offset": 22, "nodeName": "mod", "type": "Any"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 421, "col_offset": 15, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 445, "col_offset": 49, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 456, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 459, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 467, "col_offset": 29, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 484, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 488, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 499, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "setUp_gen_start_pos", "type": "Callable[..., Any]"}, {"lineNumber": 503, "col_offset": 33, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 507, "col_offset": 22, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 514, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 521, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 525, "col_offset": 29, "nodeName": "variable_lanes_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, tests.setup_scripts.VariableLanesScenario]]"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "terminate", "type": "Any"}, {"lineNumber": 533, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 540, "col_offset": 32, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 542, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 545, "col_offset": 25, "nodeName": "expected_num_vehicles", "type": "Any"}, {"lineNumber": 545, "col_offset": 48, "nodeName": "actual_num_vehicles", "type": "int"}, {"lineNumber": 548, "col_offset": 16, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 555, "col_offset": 19, "nodeName": "Vehicles", "type": "Type[flow.core.vehicles.Vehicles]"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "add", "type": "Callable[..., None]"}, {"lineNumber": 562, "col_offset": 25, "nodeName": "InitialConfig", "type": "Type[flow.core.params.InitialConfig]"}, {"lineNumber": 566, "col_offset": 29, "nodeName": "variable_lanes_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, tests.setup_scripts.VariableLanesScenario]]"}, {"lineNumber": 585, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 588, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 588, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 588, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 602, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 605, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 605, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 628, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 631, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 631, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 631, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 645, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 648, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 648, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 650, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 670, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 673, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 673, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 673, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 687, "col_offset": 21, "nodeName": "NetParams", "type": "Type[flow.core.params.NetParams]"}, {"lineNumber": 690, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 690, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 690, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 692, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 704, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 704, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 711, "col_offset": 20, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 719, "col_offset": 30, "nodeName": "edge_list", "type": "Any"}, {"lineNumber": 719, "col_offset": 41, "nodeName": "expected_edge_list", "type": "List[str]"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 730, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 730, "col_offset": 29, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 734, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 737, "col_offset": 24, "nodeName": "get_junction_list", "type": "Any"}, {"lineNumber": 746, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 746, "col_offset": 30, "nodeName": "junction_list", "type": "Any"}, {"lineNumber": 746, "col_offset": 45, "nodeName": "expected_junction_list", "type": "List[str]"}, {"lineNumber": 761, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 761, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 761, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 762, "col_offset": 20, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 766, "col_offset": 30, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 766, "col_offset": 41, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 772, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 772, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 772, "col_offset": 24, "nodeName": "figure_eight_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.figure_eight.Figure8Scenario]]"}, {"lineNumber": 773, "col_offset": 20, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 776, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 776, "col_offset": 30, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 776, "col_offset": 41, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 782, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 782, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 782, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 783, "col_offset": 20, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 786, "col_offset": 30, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 786, "col_offset": 41, "nodeName": "expected_next_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 792, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 792, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 792, "col_offset": 24, "nodeName": "ring_road_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.loop.LoopScenario]]"}, {"lineNumber": 793, "col_offset": 20, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "assertCountEqual", "type": "Callable[..., None]"}, {"lineNumber": 796, "col_offset": 30, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 796, "col_offset": 41, "nodeName": "expected_prev_edge", "type": "List[Tuple[str, int]]"}, {"lineNumber": 803, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 803, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.highway.HighwayScenario"}, {"lineNumber": 803, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.HighwayScenario]]"}, {"lineNumber": 804, "col_offset": 20, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 805, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 812, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 812, "col_offset": 13, "nodeName": "scenario", "type": "flow.scenarios.highway.HighwayScenario"}, {"lineNumber": 812, "col_offset": 24, "nodeName": "highway_exp_setup", "type": "Callable[..., Tuple[flow.envs.loop.loop_accel.AccelEnv, flow.scenarios.highway.HighwayScenario]]"}, {"lineNumber": 813, "col_offset": 20, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 814, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 818, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "get_x", "type": "Any"}, {"lineNumber": 37, "col_offset": 51, "nodeName": "edge_1", "type": "str"}, {"lineNumber": 37, "col_offset": 59, "nodeName": "pos_1", "type": "float"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "get_x", "type": "Any"}, {"lineNumber": 42, "col_offset": 51, "nodeName": "edge_2", "type": "str"}, {"lineNumber": 42, "col_offset": 59, "nodeName": "pos_2", "type": "float"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "x1", "type": "int"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "x2", "type": "float"}, {"lineNumber": 93, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "x0", "type": "int"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 162, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 171, "col_offset": 37, "nodeName": "x0", "type": "int"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "length", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 185, "col_offset": 48, "nodeName": "bunching", "type": "int"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 216, "col_offset": 48, "nodeName": "bunching", "type": "int"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 222, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 223, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 228, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 247, "col_offset": 58, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 255, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "length", "type": "Any"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 273, "col_offset": 49, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 286, "col_offset": 29, "nodeName": "random", "type": "Any"}, {"lineNumber": 287, "col_offset": 58, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 293, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 294, "col_offset": 21, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 294, "col_offset": 48, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 294, "col_offset": 60, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 294, "col_offset": 70, "nodeName": "ids", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 307, "col_offset": 58, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 313, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 315, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 323, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "mod", "type": "Any"}, {"lineNumber": 328, "col_offset": 23, "nodeName": "length", "type": "Any"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 330, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 343, "col_offset": 58, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 350, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 364, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 366, "col_offset": 16, "nodeName": "startpos", "type": "Any"}, {"lineNumber": 366, "col_offset": 27, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 368, "col_offset": 16, "nodeName": "startlanes", "type": "Any"}, {"lineNumber": 368, "col_offset": 29, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 371, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 373, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 373, "col_offset": 29, "nodeName": "startpos", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 374, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 374, "col_offset": 29, "nodeName": "startlanes", "type": "Any"}, {"lineNumber": 388, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 398, "col_offset": 27, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 398, "col_offset": 52, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 409, "col_offset": 14, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 410, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 414, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 415, "col_offset": 49, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 420, "col_offset": 29, "nodeName": "size", "type": "Any"}, {"lineNumber": 425, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 456, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 468, "col_offset": 23, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 469, "col_offset": 27, "nodeName": "initial_config", "type": "Any"}, {"lineNumber": 470, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 488, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 489, "col_offset": 12, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 490, "col_offset": 28, "nodeName": "lanes_distribution", "type": "Any"}, {"lineNumber": 500, "col_offset": 49, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 503, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 507, "col_offset": 22, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 515, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 526, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 526, "col_offset": 46, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 540, "col_offset": 32, "nodeName": "env", "type": "Any"}, {"lineNumber": 542, "col_offset": 16, "nodeName": "getIDList", "type": "Any"}, {"lineNumber": 545, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 548, "col_offset": 16, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 548, "col_offset": 43, "nodeName": "get_ids", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 549, "col_offset": 25, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 556, "col_offset": 8, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 567, "col_offset": 21, "nodeName": "vehicles", "type": "flow.core.vehicles.Vehicles"}, {"lineNumber": 567, "col_offset": 46, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 585, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 588, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 590, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 590, "col_offset": 25, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 603, "col_offset": 55, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 605, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 607, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 609, "col_offset": 8, "nodeName": "self", "type": "TestEdgeLength"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "edge_length", "type": "Any"}, {"lineNumber": 628, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 631, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 633, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 633, "col_offset": 31, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 646, "col_offset": 55, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 648, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 650, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 651, "col_offset": 12, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "self", "type": "TestSpeedLimit"}, {"lineNumber": 652, "col_offset": 31, "nodeName": "speed_limit", "type": "Any"}, {"lineNumber": 670, "col_offset": 49, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 673, "col_offset": 55, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 675, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 675, "col_offset": 25, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 688, "col_offset": 55, "nodeName": "additional_net_params", "type": "Dict[str, int]"}, {"lineNumber": 690, "col_offset": 58, "nodeName": "net_params", "type": "flow.core.params.NetParams"}, {"lineNumber": 692, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 692, "col_offset": 25, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 693, "col_offset": 8, "nodeName": "self", "type": "TestNumLanes"}, {"lineNumber": 693, "col_offset": 25, "nodeName": "num_lanes", "type": "Any"}, {"lineNumber": 704, "col_offset": 13, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 711, "col_offset": 20, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 730, "col_offset": 13, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 737, "col_offset": 24, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 746, "col_offset": 8, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 762, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 766, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 773, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 776, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 783, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 786, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 793, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 796, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 804, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.highway.HighwayScenario"}, {"lineNumber": 805, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 813, "col_offset": 20, "nodeName": "scenario", "type": "flow.scenarios.highway.HighwayScenario"}, {"lineNumber": 814, "col_offset": 8, "nodeName": "self", "type": "TestNextPrevEdge"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 99, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 130, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 130, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 130, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 162, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 162, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 162, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 192, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 192, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 192, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 205, "col_offset": 31, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 205, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 222, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 223, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 223, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 223, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 255, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 286, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 293, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 294, "col_offset": 21, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "unique", "type": "Any"}, {"lineNumber": 295, "col_offset": 35, "nodeName": "veh_lanes", "type": "List[Any]"}, {"lineNumber": 313, "col_offset": 14, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 315, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 323, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 328, "col_offset": 23, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 350, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 351, "col_offset": 66, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 364, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 366, "col_offset": 27, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 368, "col_offset": 29, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 371, "col_offset": 31, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 390, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 391, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 409, "col_offset": 14, "nodeName": "env", "type": "Any"}, {"lineNumber": 410, "col_offset": 28, "nodeName": "get_x_by_id", "type": "Any"}, {"lineNumber": 410, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 410, "col_offset": 61, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 410, "col_offset": 71, "nodeName": "ids", "type": "Any"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "env", "type": "Any"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 425, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 462, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 463, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 488, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 489, "col_offset": 12, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 489, "col_offset": 28, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 489, "col_offset": 55, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 490, "col_offset": 28, "nodeName": "initial_config", "type": "flow.core.params.InitialConfig"}, {"lineNumber": 507, "col_offset": 22, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 508, "col_offset": 12, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 508, "col_offset": 66, "nodeName": "edges", "type": "List[str]"}, {"lineNumber": 517, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 518, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 540, "col_offset": 32, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 542, "col_offset": 16, "nodeName": "vehicle", "type": "Any"}, {"lineNumber": 548, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 548, "col_offset": 43, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 558, "col_offset": 37, "nodeName": "IDMController", "type": "Type[flow.controllers.car_following_models.IDMController]"}, {"lineNumber": 559, "col_offset": 32, "nodeName": "ContinuousRouter", "type": "Type[flow.controllers.routing_controllers.ContinuousRouter]"}, {"lineNumber": 590, "col_offset": 25, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 608, "col_offset": 12, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 633, "col_offset": 31, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 651, "col_offset": 12, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 652, "col_offset": 31, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 675, "col_offset": 25, "nodeName": "scenario", "type": "flow.scenarios.loop.LoopScenario"}, {"lineNumber": 692, "col_offset": 25, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 693, "col_offset": 25, "nodeName": "scenario", "type": "flow.scenarios.figure_eight.Figure8Scenario"}, {"lineNumber": 711, "col_offset": 20, "nodeName": "self", "type": "TestGetEdgeList"}, {"lineNumber": 737, "col_offset": 24, "nodeName": "self", "type": "TestGetJunctionList"}, {"lineNumber": 804, "col_offset": 39, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 805, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 805, "col_offset": 28, "nodeName": "next_edge", "type": "Any"}, {"lineNumber": 813, "col_offset": 39, "nodeName": "get_edge_list", "type": "Any"}, {"lineNumber": 814, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 814, "col_offset": 28, "nodeName": "prev_edge", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "self", "type": "TestGetX"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "self", "type": "TestGetEdge"}, {"lineNumber": 129, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 142, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 161, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 167, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 174, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 191, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 222, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 228, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 228, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 233, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 233, "col_offset": 35, "nodeName": "around", "type": "Any"}, {"lineNumber": 233, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 255, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 257, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 257, "col_offset": 59, "nodeName": "ids", "type": "Any"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "append", "type": "Any"}, {"lineNumber": 267, "col_offset": 66, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 274, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 293, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 294, "col_offset": 21, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 313, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 315, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 317, "col_offset": 49, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 317, "col_offset": 59, "nodeName": "ids", "type": "Any"}, {"lineNumber": 323, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "append", "type": "Any"}, {"lineNumber": 327, "col_offset": 66, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 328, "col_offset": 23, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 330, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 350, "col_offset": 22, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 351, "col_offset": 28, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 351, "col_offset": 55, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 364, "col_offset": 31, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 366, "col_offset": 27, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 368, "col_offset": 29, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 371, "col_offset": 31, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 409, "col_offset": 14, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 410, "col_offset": 28, "nodeName": "env", "type": "Any"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 415, "col_offset": 22, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 415, "col_offset": 35, "nodeName": "veh_pos", "type": "numpy.ndarray"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 420, "col_offset": 29, "nodeName": "unique", "type": "Any"}, {"lineNumber": 488, "col_offset": 22, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 489, "col_offset": 28, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 507, "col_offset": 22, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 508, "col_offset": 28, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 508, "col_offset": 55, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 542, "col_offset": 16, "nodeName": "traci_connection", "type": "Any"}, {"lineNumber": 548, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 548, "col_offset": 43, "nodeName": "env", "type": "Any"}, {"lineNumber": 549, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 549, "col_offset": 38, "nodeName": "lanes", "type": "Any"}, {"lineNumber": 549, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 804, "col_offset": 39, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 813, "col_offset": 39, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 171, "col_offset": 42, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 201, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 201, "col_offset": 45, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 233, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 258, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 267, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 270, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 270, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 273, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 294, "col_offset": 21, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 318, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 327, "col_offset": 74, "nodeName": "i", "type": "int"}, {"lineNumber": 328, "col_offset": 23, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 330, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 330, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 351, "col_offset": 28, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 366, "col_offset": 27, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 368, "col_offset": 29, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 410, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 420, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 420, "col_offset": 39, "nodeName": "around", "type": "Any"}, {"lineNumber": 420, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 425, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 425, "col_offset": 31, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 437, "col_offset": 20, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 489, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 508, "col_offset": 28, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 542, "col_offset": 16, "nodeName": "env", "type": "Any"}, {"lineNumber": 548, "col_offset": 43, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 549, "col_offset": 53, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 804, "col_offset": 39, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 813, "col_offset": 39, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 258, "col_offset": 46, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 267, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 267, "col_offset": 49, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 270, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 270, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 274, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 274, "col_offset": 45, "nodeName": "lanes_distribution", "type": "int"}, {"lineNumber": 318, "col_offset": 19, "nodeName": "get_lane", "type": "Any"}, {"lineNumber": 318, "col_offset": 46, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 327, "col_offset": 33, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 327, "col_offset": 49, "nodeName": "veh_pos", "type": "List[List[Any]]"}, {"lineNumber": 330, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 330, "col_offset": 49, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 351, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 420, "col_offset": 39, "nodeName": "np", "type": "module"}, {"lineNumber": 426, "col_offset": 19, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 426, "col_offset": 36, "nodeName": "mean", "type": "Any"}, {"lineNumber": 426, "col_offset": 44, "nodeName": "nth_headway", "type": "Any"}, {"lineNumber": 431, "col_offset": 28, "nodeName": "veh_id", "type": "Any"}, {"lineNumber": 434, "col_offset": 65, "nodeName": "pos_i", "type": "Any"}, {"lineNumber": 434, "col_offset": 74, "nodeName": "pos", "type": "List[Any]"}, {"lineNumber": 437, "col_offset": 20, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}, {"lineNumber": 437, "col_offset": 36, "nodeName": "any", "type": "Any"}, {"lineNumber": 489, "col_offset": 28, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 508, "col_offset": 28, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 542, "col_offset": 16, "nodeName": "self", "type": "TestEvenStartPosVariableLanes"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 267, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 267, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 318, "col_offset": 19, "nodeName": "vehicles", "type": "Any"}, {"lineNumber": 327, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 327, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 351, "col_offset": 28, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 426, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 426, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 434, "col_offset": 24, "nodeName": "get_edge", "type": "Any"}, {"lineNumber": 434, "col_offset": 51, "nodeName": "pos_i", "type": "Any"}, {"lineNumber": 437, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 508, "col_offset": 28, "nodeName": "self", "type": "TestRandomStartPos"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 318, "col_offset": 19, "nodeName": "env", "type": "flow.envs.loop.loop_accel.AccelEnv"}, {"lineNumber": 431, "col_offset": 39, "nodeName": "ids", "type": "Any"}, {"lineNumber": 431, "col_offset": 51, "nodeName": "ids", "type": "Any"}, {"lineNumber": 434, "col_offset": 24, "nodeName": "scenario", "type": "Any"}, {"lineNumber": 437, "col_offset": 43, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 437, "col_offset": 52, "nodeName": "rel_pos", "type": "List[Any]"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 318, "col_offset": 19, "nodeName": "self", "type": "TestEvenStartPos"}, {"lineNumber": 431, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 434, "col_offset": 24, "nodeName": "env", "type": "Any"}, {"lineNumber": 437, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 431, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 434, "col_offset": 24, "nodeName": "self", "type": "TestEvenStartPosInternalLinks"}]