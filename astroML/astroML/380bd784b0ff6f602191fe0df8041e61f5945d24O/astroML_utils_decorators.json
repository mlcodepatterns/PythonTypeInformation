[{"lineNumber": 8, "col_offset": 0, "nodeName": "pickle_results", "type": "Callable[..., Any]"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "pickle_func", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "filename", "type": "Any"}, {"lineNumber": 46, "col_offset": 50, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "new_f", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "filename", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "filename", "type": "str"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "Dargs", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "Dkwargs", "type": "Any"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "retval", "type": "Any"}, {"lineNumber": 48, "col_offset": 41, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "D", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "cache_exists", "type": "bool"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "get", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "args_match", "type": "bool"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "kwargs_match", "type": "bool"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "args_match", "type": "Any"}, {"lineNumber": 78, "col_offset": 39, "nodeName": "kwargs_match", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "retval", "type": "Any"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "retval", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "funcdict", "type": "Dict[Any, Any]"}, {"lineNumber": 48, "col_offset": 41, "nodeName": "f", "type": "Any"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "D", "type": "Dict[nothing, nothing]"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "cache_exists", "type": "bool"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "D", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "D", "type": "Any"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "Dargs", "type": "Any"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "args_match", "type": "Any"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 42, "nodeName": "Dkwargs", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "kwargs_match", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 77, "col_offset": 57, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "D", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "cache_exists", "type": "bool"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "f", "type": "Any"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 96, "col_offset": 45, "nodeName": "outfile", "type": "BinaryIO"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "pickle", "type": "module"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "open", "type": "Callable"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "filename", "type": "Union[Any, str]"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "all", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "D", "type": "Any"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "get", "type": "Any"}, {"lineNumber": 77, "col_offset": 57, "nodeName": "f", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 92, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 94, "col_offset": 60, "nodeName": "retval", "type": "Any"}, {"lineNumber": 95, "col_offset": 37, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 95, "col_offset": 50, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "open", "type": "Callable"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "filename", "type": "Union[Any, str]"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "dump", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "funcdict", "type": "Dict[Any, Any]"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "outfile", "type": "BinaryIO"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "all", "type": "Any"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "D", "type": "Any"}, {"lineNumber": 81, "col_offset": 48, "nodeName": "filename", "type": "Union[Any, str]"}, {"lineNumber": 87, "col_offset": 49, "nodeName": "filename", "type": "Union[Any, str]"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "f", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "pickle", "type": "module"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 68, "nodeName": "filename", "type": "Union[Any, str]"}, {"lineNumber": 90, "col_offset": 57, "nodeName": "args_match", "type": "Any"}, {"lineNumber": 91, "col_offset": 57, "nodeName": "kwargs_match", "type": "Any"}, {"lineNumber": 66, "col_offset": 42, "nodeName": "a1", "type": "Any"}, {"lineNumber": 66, "col_offset": 46, "nodeName": "a2", "type": "Any"}, {"lineNumber": 66, "col_offset": 53, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 66, "col_offset": 57, "nodeName": "Dargs", "type": "Any"}, {"lineNumber": 66, "col_offset": 64, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "keys", "type": "Any"}, {"lineNumber": 72, "col_offset": 43, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "key", "type": "str"}, {"lineNumber": 75, "col_offset": 56, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 71, "col_offset": 40, "nodeName": "Dkwargs", "type": "Any"}, {"lineNumber": 72, "col_offset": 43, "nodeName": "kwargs", "type": "Dict[str, Any]"}]