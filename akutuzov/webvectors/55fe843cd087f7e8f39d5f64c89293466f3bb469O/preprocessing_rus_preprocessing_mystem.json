[{"lineNumber": 23, "col_offset": 0, "nodeName": "tag_mystem", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "mystem2upos", "type": "Dict[str, str]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "pair", "type": "str"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "m", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "line", "type": "str"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "stdin", "type": "IO[str]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "processed", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "tagged", "type": "List[Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "w", "type": "Any"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "processed", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "tagged", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "install_aliases", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "get", "type": "Callable[..., requests.models.Response]"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "mapping_url", "type": "str"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "pair", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "Mystem", "type": "Any"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "res", "type": "str"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "analyze", "type": "Any"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "text", "type": "str"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "pos", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "tagged", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "standard_library", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "requests", "type": "module"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "text", "type": "str"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "stderr", "type": "IO[str]"}, {"lineNumber": 65, "col_offset": 10, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "tag_mystem", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "m", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "pos", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "pos", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "mapping", "type": "Dict[str, str]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "KeyError", "type": "Type[KeyError]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "pair", "type": "str"}, {"lineNumber": 57, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "pair", "type": "List[str]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "mystem2upos", "type": "Dict[str, str]"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "pair", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "sys", "type": "module"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "sys", "type": "module"}, {"lineNumber": 65, "col_offset": 10, "nodeName": "line", "type": "str"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "res", "type": "str"}, {"lineNumber": 66, "col_offset": 42, "nodeName": "mystem2upos", "type": "Dict[str, str]"}, {"lineNumber": 67, "col_offset": 10, "nodeName": "join", "type": "Callable"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "strip", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "strip", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "t", "type": "Any"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "tagged", "type": "List[Any]"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "split", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "pos", "type": "Any"}, {"lineNumber": 35, "col_offset": 26, "nodeName": "mapping", "type": "Dict[str, str]"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "pos", "type": "str"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "pos", "type": "str"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "tagged", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 48, "nodeName": "pos", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "split", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "pair", "type": "List[str]"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "lower", "type": "Any"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "mapping", "type": "Dict[str, str]"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "t", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "split", "type": "Any"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "pos", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "lower", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "pos", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "lemma", "type": "Any"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "w", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "w", "type": "Any"}]