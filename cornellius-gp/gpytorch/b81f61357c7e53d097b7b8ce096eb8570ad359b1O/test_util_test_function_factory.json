[{"lineNumber": 12, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 278, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 373, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 12, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 134, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 278, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 373, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 417, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "log_det", "type": "float"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "log_det_grad_output", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "log_det_grad_output", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "actual_mat_grad", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "log_det_grad_output", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 406, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 418, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 22, "col_offset": 32, "nodeName": "mat", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 23, "col_offset": 38, "nodeName": "mat", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 24, "col_offset": 32, "nodeName": "vec", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 25, "col_offset": 38, "nodeName": "vec", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 26, "col_offset": 33, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 27, "col_offset": 39, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 31, "col_offset": 51, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 44, "col_offset": 51, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "mats", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 72, "col_offset": 39, "nodeName": "mats", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 78, "col_offset": 52, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "mat", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 101, "col_offset": 29, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 101, "col_offset": 38, "nodeName": "mat", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "vec", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 103, "col_offset": 38, "nodeName": "vec", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 105, "col_offset": 39, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "inv_matmul", "type": "Any"}, {"lineNumber": 109, "col_offset": 55, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 110, "col_offset": 53, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 14, "nodeName": "inv_matmul", "type": "Any"}, {"lineNumber": 122, "col_offset": 55, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 123, "col_offset": 53, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 149, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 149, "col_offset": 33, "nodeName": "mats", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 150, "col_offset": 39, "nodeName": "mats", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 152, "col_offset": 39, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "inv_matmul", "type": "Any"}, {"lineNumber": 156, "col_offset": 56, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 182, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 185, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 185, "col_offset": 32, "nodeName": "mat", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 186, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 186, "col_offset": 32, "nodeName": "vec", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 187, "col_offset": 33, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "mat", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "vec", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 190, "col_offset": 30, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 190, "col_offset": 39, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 191, "col_offset": 23, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 194, "col_offset": 19, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 199, "col_offset": 26, "nodeName": "dot", "type": "Any"}, {"lineNumber": 199, "col_offset": 86, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "nlv", "type": "gpytorch.lazy.non_lazy_variable.NonLazyVariable"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 204, "col_offset": 52, "nodeName": "log_det", "type": "float"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 208, "col_offset": 30, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "add_", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 219, "col_offset": 14, "nodeName": "inv_quad", "type": "Any"}, {"lineNumber": 219, "col_offset": 53, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 220, "col_offset": 17, "nodeName": "sum", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "randn", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "dot", "type": "Any"}, {"lineNumber": 233, "col_offset": 87, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "nlv", "type": "gpytorch.lazy.non_lazy_variable.NonLazyVariable"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 238, "col_offset": 52, "nodeName": "log_det", "type": "float"}, {"lineNumber": 241, "col_offset": 31, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "add_", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "inv_quad", "type": "Any"}, {"lineNumber": 253, "col_offset": 53, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "sum", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 258, "col_offset": 31, "nodeName": "randn", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 269, "col_offset": 44, "nodeName": "log_det", "type": "float"}, {"lineNumber": 272, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 273, "col_offset": 26, "nodeName": "mul", "type": "Any"}, {"lineNumber": 273, "col_offset": 64, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 295, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 297, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 297, "col_offset": 33, "nodeName": "mats", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 298, "col_offset": 33, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 299, "col_offset": 30, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 299, "col_offset": 39, "nodeName": "mats", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 300, "col_offset": 30, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 300, "col_offset": 39, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 301, "col_offset": 24, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 307, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 307, "col_offset": 19, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "nlv", "type": "gpytorch.lazy.non_lazy_variable.NonLazyVariable"}, {"lineNumber": 319, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 324, "col_offset": 31, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 325, "col_offset": 30, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 327, "col_offset": 27, "nodeName": "cat", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "add_", "type": "Any"}, {"lineNumber": 331, "col_offset": 43, "nodeName": "mat_log_det_grad", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 340, "col_offset": 14, "nodeName": "inv_quad", "type": "Any"}, {"lineNumber": 340, "col_offset": 54, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 345, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 349, "col_offset": 31, "nodeName": "randn", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 360, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 364, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 365, "col_offset": 26, "nodeName": "cat", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 379, "col_offset": 14, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 386, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 386, "col_offset": 32, "nodeName": "mat", "type": "Any"}, {"lineNumber": 387, "col_offset": 8, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 387, "col_offset": 29, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 387, "col_offset": 38, "nodeName": "mat", "type": "Any"}, {"lineNumber": 390, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 390, "col_offset": 19, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 395, "col_offset": 15, "nodeName": "root_decomposition", "type": "Any"}, {"lineNumber": 396, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 406, "col_offset": 15, "nodeName": "root_inv_decomposition", "type": "Any"}, {"lineNumber": 407, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 408, "col_offset": 17, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 418, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 31, "col_offset": 51, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 33, "col_offset": 42, "nodeName": "actual", "type": "Any"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 39, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 40, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 44, "col_offset": 51, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "actual", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 52, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 53, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 78, "col_offset": 52, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 80, "col_offset": 42, "nodeName": "actual", "type": "Any"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 85, "col_offset": 33, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 86, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 87, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 92, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 109, "col_offset": 55, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 110, "col_offset": 53, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 111, "col_offset": 42, "nodeName": "actual", "type": "Any"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 117, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 118, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 122, "col_offset": 55, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 123, "col_offset": 53, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 124, "col_offset": 42, "nodeName": "actual", "type": "Any"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 129, "col_offset": 33, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 130, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 131, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 156, "col_offset": 56, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 161, "col_offset": 42, "nodeName": "actual", "type": "Any"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 165, "col_offset": 30, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 167, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 168, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "get_rng_state", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 182, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 191, "col_offset": 23, "nodeName": "math", "type": "module"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "det", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "set_rng_state", "type": "Any"}, {"lineNumber": 195, "col_offset": 32, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 199, "col_offset": 86, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 200, "col_offset": 13, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 201, "col_offset": 18, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 201, "col_offset": 34, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 202, "col_offset": 26, "nodeName": "res_log_det", "type": "Any"}, {"lineNumber": 202, "col_offset": 40, "nodeName": "inv_quad_log_det", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 203, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 203, "col_offset": 53, "nodeName": "data", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 204, "col_offset": 52, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 208, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 209, "col_offset": 42, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 210, "col_offset": 78, "nodeName": "log_det_grad_output", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 211, "col_offset": 39, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "res_log_det", "type": "Any"}, {"lineNumber": 212, "col_offset": 38, "nodeName": "log_det_grad_output", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 214, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 214, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 215, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 215, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 219, "col_offset": 53, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 221, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 221, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 225, "col_offset": 33, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 226, "col_offset": 30, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 228, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 228, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 229, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 229, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 229, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 233, "col_offset": 87, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 234, "col_offset": 13, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 235, "col_offset": 18, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 235, "col_offset": 34, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "res_log_det", "type": "Any"}, {"lineNumber": 236, "col_offset": 40, "nodeName": "inv_quad_log_det", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 237, "col_offset": 53, "nodeName": "data", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 238, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 238, "col_offset": 52, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 241, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 243, "col_offset": 42, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 244, "col_offset": 78, "nodeName": "log_det_grad_output", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 245, "col_offset": 39, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "res_log_det", "type": "Any"}, {"lineNumber": 246, "col_offset": 38, "nodeName": "log_det_grad_output", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 248, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 248, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 249, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 249, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 253, "col_offset": 53, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 255, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 255, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 258, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 259, "col_offset": 33, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 260, "col_offset": 30, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 262, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 262, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 262, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 263, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 263, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 268, "col_offset": 18, "nodeName": "log_det", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 269, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 269, "col_offset": 44, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 272, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 274, "col_offset": 30, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 275, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 275, "col_offset": 37, "nodeName": "actual_mat_grad", "type": "Any"}, {"lineNumber": 275, "col_offset": 54, "nodeName": "data", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 281, "col_offset": 29, "nodeName": "get_rng_state", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 295, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 301, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "set_rng_state", "type": "Any"}, {"lineNumber": 308, "col_offset": 32, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 316, "col_offset": 13, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 317, "col_offset": 18, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 317, "col_offset": 34, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 318, "col_offset": 26, "nodeName": "res_log_det", "type": "Any"}, {"lineNumber": 318, "col_offset": 40, "nodeName": "inv_quad_log_det", "type": "Any"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "size", "type": "Any"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 324, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 325, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 326, "col_offset": 8, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 326, "col_offset": 42, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 327, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 332, "col_offset": 39, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "res_log_det", "type": "Any"}, {"lineNumber": 333, "col_offset": 38, "nodeName": "log_det_grad_output", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 335, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 335, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 335, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 336, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 336, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 336, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 340, "col_offset": 54, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 345, "col_offset": 23, "nodeName": "size", "type": "Any"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 349, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 350, "col_offset": 33, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 351, "col_offset": 30, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 353, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 353, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 353, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 354, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 354, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 354, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 358, "col_offset": 13, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 359, "col_offset": 18, "nodeName": "log_det", "type": "Any"}, {"lineNumber": 360, "col_offset": 23, "nodeName": "size", "type": "Any"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 364, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 365, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 369, "col_offset": 30, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 370, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 370, "col_offset": 37, "nodeName": "actual_mat_grad", "type": "Any"}, {"lineNumber": 370, "col_offset": 54, "nodeName": "data", "type": "Any"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 376, "col_offset": 29, "nodeName": "get_rng_state", "type": "Any"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 379, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "set_rng_state", "type": "Any"}, {"lineNumber": 391, "col_offset": 32, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 396, "col_offset": 14, "nodeName": "root", "type": "Any"}, {"lineNumber": 396, "col_offset": 26, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 397, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 397, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 397, "col_offset": 47, "nodeName": "data", "type": "Any"}, {"lineNumber": 402, "col_offset": 8, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 402, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 402, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 402, "col_offset": 61, "nodeName": "data", "type": "Any"}, {"lineNumber": 407, "col_offset": 14, "nodeName": "root", "type": "Any"}, {"lineNumber": 407, "col_offset": 26, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 408, "col_offset": 17, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 409, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 409, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 409, "col_offset": 47, "nodeName": "data", "type": "Any"}, {"lineNumber": 414, "col_offset": 8, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 414, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 414, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 414, "col_offset": 61, "nodeName": "data", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 39, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 40, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 52, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 53, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 86, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 87, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 109, "col_offset": 14, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 117, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 118, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 122, "col_offset": 14, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 130, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 130, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 131, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 156, "col_offset": 14, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "cat", "type": "Any"}, {"lineNumber": 167, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 167, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 168, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 173, "col_offset": 47, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 191, "col_offset": 46, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 195, "col_offset": 32, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 199, "col_offset": 26, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 199, "col_offset": 62, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 200, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 201, "col_offset": 34, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 202, "col_offset": 40, "nodeName": "nlv", "type": "gpytorch.lazy.non_lazy_variable.NonLazyVariable"}, {"lineNumber": 202, "col_offset": 74, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 203, "col_offset": 31, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 203, "col_offset": 53, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 204, "col_offset": 31, "nodeName": "res_log_det", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 210, "col_offset": 42, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 214, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 214, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 215, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 215, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 219, "col_offset": 14, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 219, "col_offset": 30, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 220, "col_offset": 17, "nodeName": "mul", "type": "Any"}, {"lineNumber": 220, "col_offset": 77, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 221, "col_offset": 31, "nodeName": "res", "type": "Any"}, {"lineNumber": 221, "col_offset": 44, "nodeName": "actual", "type": "Any"}, {"lineNumber": 228, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 228, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 229, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 229, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 233, "col_offset": 62, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 234, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 235, "col_offset": 34, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 236, "col_offset": 40, "nodeName": "nlv", "type": "gpytorch.lazy.non_lazy_variable.NonLazyVariable"}, {"lineNumber": 236, "col_offset": 74, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 237, "col_offset": 53, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 238, "col_offset": 31, "nodeName": "res_log_det", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 244, "col_offset": 42, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 248, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 248, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 249, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 249, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 253, "col_offset": 14, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 253, "col_offset": 30, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "mul", "type": "Any"}, {"lineNumber": 254, "col_offset": 78, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 255, "col_offset": 31, "nodeName": "res", "type": "Any"}, {"lineNumber": 255, "col_offset": 44, "nodeName": "actual", "type": "Any"}, {"lineNumber": 262, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 262, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 263, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 263, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 269, "col_offset": 31, "nodeName": "res", "type": "Any"}, {"lineNumber": 273, "col_offset": 26, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 275, "col_offset": 54, "nodeName": "grad", "type": "Any"}, {"lineNumber": 280, "col_offset": 11, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 280, "col_offset": 47, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 281, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 282, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 308, "col_offset": 32, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 316, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 317, "col_offset": 34, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 318, "col_offset": 40, "nodeName": "nlv", "type": "gpytorch.lazy.non_lazy_variable.NonLazyVariable"}, {"lineNumber": 318, "col_offset": 74, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 320, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 320, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 321, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 321, "col_offset": 56, "nodeName": "log_dets", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 335, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 335, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 336, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 336, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 340, "col_offset": 14, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 340, "col_offset": 30, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 345, "col_offset": 23, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 346, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 346, "col_offset": 48, "nodeName": "data", "type": "Any"}, {"lineNumber": 353, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 353, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 354, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 354, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 358, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 360, "col_offset": 23, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 361, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 361, "col_offset": 48, "nodeName": "log_dets", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 370, "col_offset": 54, "nodeName": "grad", "type": "Any"}, {"lineNumber": 375, "col_offset": 11, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 375, "col_offset": 47, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 376, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 391, "col_offset": 32, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 395, "col_offset": 15, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 395, "col_offset": 31, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 396, "col_offset": 26, "nodeName": "root", "type": "Any"}, {"lineNumber": 397, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 397, "col_offset": 47, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 402, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 402, "col_offset": 61, "nodeName": "grad", "type": "Any"}, {"lineNumber": 406, "col_offset": 15, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 406, "col_offset": 31, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 407, "col_offset": 26, "nodeName": "root", "type": "Any"}, {"lineNumber": 408, "col_offset": 17, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 409, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 409, "col_offset": 47, "nodeName": "actual", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 414, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 414, "col_offset": 61, "nodeName": "grad", "type": "Any"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 39, "col_offset": 67, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 40, "col_offset": 67, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 52, "col_offset": 67, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 53, "col_offset": 68, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 86, "col_offset": 68, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 87, "col_offset": 68, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 117, "col_offset": 67, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 118, "col_offset": 67, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 130, "col_offset": 37, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 130, "col_offset": 67, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 131, "col_offset": 68, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 167, "col_offset": 37, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 167, "col_offset": 68, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 168, "col_offset": 68, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 191, "col_offset": 46, "nodeName": "mat", "type": "Any"}, {"lineNumber": 199, "col_offset": 62, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 200, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 202, "col_offset": 74, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 210, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 214, "col_offset": 37, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 214, "col_offset": 67, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 215, "col_offset": 37, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 215, "col_offset": 67, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 219, "col_offset": 30, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 220, "col_offset": 77, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 228, "col_offset": 37, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 228, "col_offset": 67, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 229, "col_offset": 37, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 229, "col_offset": 67, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 233, "col_offset": 62, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 234, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 236, "col_offset": 74, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 244, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 248, "col_offset": 37, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 248, "col_offset": 67, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 249, "col_offset": 37, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 249, "col_offset": 68, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 253, "col_offset": 30, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 254, "col_offset": 78, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 262, "col_offset": 37, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 262, "col_offset": 67, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 263, "col_offset": 37, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 263, "col_offset": 68, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 268, "col_offset": 18, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 268, "col_offset": 34, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 273, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 275, "col_offset": 54, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 280, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "math", "type": "module"}, {"lineNumber": 302, "col_offset": 21, "nodeName": "det", "type": "Any"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "math", "type": "module"}, {"lineNumber": 303, "col_offset": 21, "nodeName": "det", "type": "Any"}, {"lineNumber": 316, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 318, "col_offset": 74, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 320, "col_offset": 35, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 320, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 320, "col_offset": 57, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 320, "col_offset": 78, "nodeName": "i", "type": "int"}, {"lineNumber": 321, "col_offset": 35, "nodeName": "res_log_det", "type": "Any"}, {"lineNumber": 321, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 321, "col_offset": 56, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 321, "col_offset": 70, "nodeName": "i", "type": "int"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 335, "col_offset": 37, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 335, "col_offset": 68, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 336, "col_offset": 37, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 336, "col_offset": 68, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 340, "col_offset": 30, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 345, "col_offset": 23, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 346, "col_offset": 35, "nodeName": "res", "type": "Any"}, {"lineNumber": 346, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 346, "col_offset": 48, "nodeName": "actual", "type": "Any"}, {"lineNumber": 346, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 353, "col_offset": 37, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 353, "col_offset": 68, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 354, "col_offset": 37, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 354, "col_offset": 68, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 358, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 359, "col_offset": 18, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 359, "col_offset": 34, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 360, "col_offset": 23, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 361, "col_offset": 35, "nodeName": "res", "type": "Any"}, {"lineNumber": 361, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 361, "col_offset": 48, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 361, "col_offset": 62, "nodeName": "i", "type": "int"}, {"lineNumber": 370, "col_offset": 54, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 375, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 395, "col_offset": 31, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 397, "col_offset": 47, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 400, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 402, "col_offset": 37, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 402, "col_offset": 61, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 406, "col_offset": 31, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 414, "col_offset": 37, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 414, "col_offset": 61, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 39, "col_offset": 67, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 40, "col_offset": 67, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 52, "col_offset": 67, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 53, "col_offset": 68, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 86, "col_offset": 68, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 87, "col_offset": 68, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 117, "col_offset": 67, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 118, "col_offset": 67, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 130, "col_offset": 37, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 130, "col_offset": 67, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 131, "col_offset": 37, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 131, "col_offset": 68, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 167, "col_offset": 37, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 167, "col_offset": 68, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 168, "col_offset": 68, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 173, "col_offset": 47, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 199, "col_offset": 26, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 210, "col_offset": 42, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 214, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 214, "col_offset": 67, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 215, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 215, "col_offset": 67, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 220, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 220, "col_offset": 53, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 228, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 228, "col_offset": 67, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 229, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 229, "col_offset": 67, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 244, "col_offset": 42, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 248, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 248, "col_offset": 67, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 249, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 249, "col_offset": 68, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 254, "col_offset": 53, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 262, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 262, "col_offset": 67, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 263, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 263, "col_offset": 68, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 268, "col_offset": 34, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 273, "col_offset": 26, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 275, "col_offset": 54, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 280, "col_offset": 47, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 302, "col_offset": 21, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 302, "col_offset": 35, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 303, "col_offset": 21, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 303, "col_offset": 35, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 315, "col_offset": 43, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "mul", "type": "Any"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "mul", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 335, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 335, "col_offset": 68, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 336, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 336, "col_offset": 68, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 344, "col_offset": 43, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 353, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 353, "col_offset": 68, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 354, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 354, "col_offset": 68, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 359, "col_offset": 34, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "mul", "type": "Any"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "mul", "type": "Any"}, {"lineNumber": 370, "col_offset": 54, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 375, "col_offset": 47, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 401, "col_offset": 8, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 402, "col_offset": 37, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 402, "col_offset": 61, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 414, "col_offset": 37, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 414, "col_offset": 61, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 173, "col_offset": 47, "nodeName": "os", "type": "module"}, {"lineNumber": 199, "col_offset": 26, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 210, "col_offset": 42, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 220, "col_offset": 53, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 244, "col_offset": 42, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 254, "col_offset": 53, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 273, "col_offset": 26, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 280, "col_offset": 47, "nodeName": "os", "type": "module"}, {"lineNumber": 302, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 303, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 315, "col_offset": 43, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 328, "col_offset": 54, "nodeName": "log_det_grad_output", "type": "Any"}, {"lineNumber": 329, "col_offset": 54, "nodeName": "log_det_grad_output", "type": "Any"}, {"lineNumber": 344, "col_offset": 43, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 366, "col_offset": 54, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 367, "col_offset": 54, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 375, "col_offset": 47, "nodeName": "os", "type": "module"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 199, "col_offset": 26, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 220, "col_offset": 17, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 302, "col_offset": 35, "nodeName": "mats", "type": "Any"}, {"lineNumber": 303, "col_offset": 35, "nodeName": "mats", "type": "Any"}, {"lineNumber": 315, "col_offset": 18, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 344, "col_offset": 18, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 220, "col_offset": 17, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 315, "col_offset": 18, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 344, "col_offset": 18, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 220, "col_offset": 17, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 254, "col_offset": 17, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "cat", "type": "Any"}, {"lineNumber": 341, "col_offset": 17, "nodeName": "cat", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 341, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}]