[{"lineNumber": 6, "col_offset": 0, "nodeName": "add_to_cache", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "get_from_cache", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "is_in_cache", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "cached", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "is_cached", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 10, "col_offset": 31, "nodeName": "val", "type": "Any"}, {"lineNumber": 11, "col_offset": 11, "nodeName": "obj", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "g", "type": "Callable[..., Any]"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "_memoize_cache", "type": "Dict[Any, Any]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "_memoize_cache", "type": "Dict[Any, Any]"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "_memoize_cache", "type": "Any"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "method", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "cache_name", "type": "Any"}, {"lineNumber": 8, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 8, "col_offset": 19, "nodeName": "obj", "type": "Any"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "obj", "type": "Any"}, {"lineNumber": 9, "col_offset": 29, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "obj", "type": "Any"}, {"lineNumber": 10, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "is_in_cache", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "obj", "type": "Any"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "obj", "type": "Any"}, {"lineNumber": 18, "col_offset": 30, "nodeName": "name", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "obj", "type": "Any"}, {"lineNumber": 22, "col_offset": 46, "nodeName": "name", "type": "Any"}, {"lineNumber": 22, "col_offset": 54, "nodeName": "_memoize_cache", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "partial", "type": "Type[functools.partial[Any]]"}, {"lineNumber": 28, "col_offset": 33, "nodeName": "cached", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 32, "col_offset": 51, "nodeName": "method", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "get_from_cache", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "cache_name", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 47, "nodeName": "name", "type": "Any"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 17, "col_offset": 82, "nodeName": "name", "type": "Any"}, {"lineNumber": 22, "col_offset": 54, "nodeName": "obj", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "functools", "type": "module"}, {"lineNumber": 28, "col_offset": 46, "nodeName": "name", "type": "Any"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "is_in_cache", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "cache_name", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "add_to_cache", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "cache_name", "type": "Any"}, {"lineNumber": 44, "col_offset": 55, "nodeName": "keys", "type": "Any"}, {"lineNumber": 34, "col_offset": 43, "nodeName": "method", "type": "Any"}, {"lineNumber": 34, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 55, "nodeName": "_memoize_cache", "type": "Any"}, {"lineNumber": 34, "col_offset": 57, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 34, "col_offset": 65, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 44, "col_offset": 55, "nodeName": "self", "type": "Any"}]