[{"lineNumber": 16, "col_offset": 36, "nodeName": "BaseTestCase", "type": "Any"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "RectangularLazyTensorTestCase", "type": "Type[RectangularLazyTensorTestCase]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "should_test_sample", "type": "bool"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "skip_slq_tests", "type": "bool"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "should_call_cg", "type": "bool"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "should_call_lanczos", "type": "bool"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "_wrapped_lanczos", "type": "unittest.mock.MagicMock"}, {"lineNumber": 480, "col_offset": 11, "nodeName": "should_test_sample", "type": "bool"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 23, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "skip_slq_tests", "type": "bool"}, {"lineNumber": 328, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 360, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 369, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 380, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 392, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 398, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "test_inv_matmul_matrix", "type": "Callable[..., Any]"}, {"lineNumber": 406, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 412, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 431, "col_offset": 15, "nodeName": "_test_inv_quad_logdet", "type": "Callable[..., Any]"}, {"lineNumber": 434, "col_offset": 15, "nodeName": "_test_inv_quad_logdet", "type": "Callable[..., Any]"}, {"lineNumber": 437, "col_offset": 15, "nodeName": "_test_inv_quad_logdet", "type": "Callable[..., Any]"}, {"lineNumber": 450, "col_offset": 27, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 451, "col_offset": 86, "nodeName": "lanczos_mock", "type": "Any"}, {"lineNumber": 467, "col_offset": 15, "nodeName": "test_root_decomposition", "type": "Callable[..., Any]"}, {"lineNumber": 470, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 480, "col_offset": 11, "nodeName": "__class__", "type": "Type[LazyTensorTestCase]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 202, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 223, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "__class__", "type": "Type[LazyTensorTestCase]"}, {"lineNumber": 295, "col_offset": 26, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 328, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 360, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 369, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 380, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 392, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 398, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 406, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 412, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 431, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 434, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 437, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 440, "col_offset": 13, "nodeName": "fast_computations", "type": "Type[gpytorch.settings.fast_computations]"}, {"lineNumber": 441, "col_offset": 26, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 450, "col_offset": 43, "nodeName": "lanczos_tridiag", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 451, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 452, "col_offset": 26, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 467, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 470, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 480, "col_offset": 11, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 211, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 251, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 295, "col_offset": 26, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 440, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 441, "col_offset": 26, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 450, "col_offset": 43, "nodeName": "lanczos", "type": "module"}, {"lineNumber": 451, "col_offset": 65, "nodeName": "_wrapped_lanczos", "type": "unittest.mock.MagicMock"}, {"lineNumber": 452, "col_offset": 26, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 211, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 251, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 440, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 450, "col_offset": 43, "nodeName": "utils", "type": "module"}, {"lineNumber": 450, "col_offset": 43, "nodeName": "gpytorch", "type": "module"}]