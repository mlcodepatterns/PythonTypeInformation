[{"lineNumber": 10, "col_offset": 33, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "ApproximateGP", "type": "Type[gpytorch.models.approximate_gp.ApproximateGP]"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "GP", "type": "Type[gpytorch.models.gp.GP]"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "Likelihood", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "model", "type": "AbstractDeepGP"}, {"lineNumber": 12, "col_offset": 21, "nodeName": "model", "type": "AbstractDeepGP"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "_sub_variational_strategies_memo", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "input_dims", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "input_dims", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "output_dims", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "output_dims", "type": "Any"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "deterministic_inputs", "type": "bool"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "deterministic_inputs", "type": "bool"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "variational_strategy", "type": "_DeepGPVariationalStrategy"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "base_likelihood", "type": "Any"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "base_likelihood", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "_DeepGPVariationalStrategy"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 42, "col_offset": 50, "nodeName": "variational_strategy", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "AbstractDeepGPLayer"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "AbstractDeepGPLayer"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "are_samples", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "MultitaskMultivariateNormal", "type": "Type[gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "deterministic_inputs", "type": "bool"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "on", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "output_dims", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "__call__", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 40, "nodeName": "self", "type": "AbstractDeepGPLayer"}, {"lineNumber": 93, "col_offset": 46, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "output_dims", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "mean", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "covar", "type": "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "output", "type": "gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "AbstractDeepGP"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "_DeepGPVariationalStrategy", "type": "Type[_DeepGPVariationalStrategy]"}, {"lineNumber": 113, "col_offset": 63, "nodeName": "self", "type": "AbstractDeepGP"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "DeepLikelihood"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "mean", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "mean", "type": "Any"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "variational_strategy", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "rsample", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "debug", "type": "Type[gpytorch.settings.debug]"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "input_dims", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "self", "type": "AbstractDeepGPLayer"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "expand", "type": "Any"}, {"lineNumber": 90, "col_offset": 55, "nodeName": "output_dims", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "ApproximateGP", "type": "Type[gpytorch.models.approximate_gp.ApproximateGP]"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "self", "type": "AbstractDeepGPLayer"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "BlockDiagLazyTensor", "type": "Type[gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor]"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "lazy_covariance_matrix", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "MultitaskMultivariateNormal", "type": "Type[gpytorch.distributions.multitask_multivariate_normal.MultitaskMultivariateNormal]"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "mean", "type": "Any"}, {"lineNumber": 97, "col_offset": 55, "nodeName": "covar", "type": "gpytorch.lazy.block_diag_lazy_tensor.BlockDiagLazyTensor"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "expand", "type": "Any"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 18, "col_offset": 48, "nodeName": "module", "type": "Any"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "sum", "type": "Any"}, {"lineNumber": 23, "col_offset": 54, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 23, "col_offset": 66, "nodeName": "sub_variational_strategies", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 42, "col_offset": 14, "nodeName": "AbstractDeepGPLayer", "type": "Type[AbstractDeepGPLayer]"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "self", "type": "AbstractDeepGPLayer"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "settings", "type": "module"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "is_tensor", "type": "Any"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "self", "type": "AbstractDeepGPLayer"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 90, "col_offset": 55, "nodeName": "self", "type": "AbstractDeepGPLayer"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "loc", "type": "Any"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "output", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 101, "col_offset": 91, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "expected_log_prob", "type": "Any"}, {"lineNumber": 131, "col_offset": 54, "nodeName": "observations", "type": "Any"}, {"lineNumber": 131, "col_offset": 68, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "log_marginal", "type": "Any"}, {"lineNumber": 134, "col_offset": 49, "nodeName": "observations", "type": "Any"}, {"lineNumber": 134, "col_offset": 63, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 18, "col_offset": 58, "nodeName": "modules", "type": "Any"}, {"lineNumber": 18, "col_offset": 82, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 18, "col_offset": 93, "nodeName": "module", "type": "Any"}, {"lineNumber": 18, "col_offset": 101, "nodeName": "ApproximateGP", "type": "Type[gpytorch.models.approximate_gp.ApproximateGP]"}, {"lineNumber": 23, "col_offset": 66, "nodeName": "self", "type": "_DeepGPVariationalStrategy"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "shape", "type": "Any"}, {"lineNumber": 90, "col_offset": 74, "nodeName": "shape", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "output", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "Size", "type": "Any"}, {"lineNumber": 101, "col_offset": 91, "nodeName": "output", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "base_likelihood", "type": "Any"}, {"lineNumber": 131, "col_offset": 84, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 131, "col_offset": 94, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "base_likelihood", "type": "Any"}, {"lineNumber": 134, "col_offset": 79, "nodeName": "params", "type": "Tuple[Any, ...]"}, {"lineNumber": 134, "col_offset": 89, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 18, "col_offset": 58, "nodeName": "model", "type": "Any"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "kl_divergence", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "distributions", "type": "Any"}, {"lineNumber": 71, "col_offset": 52, "nodeName": "mean", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "__Name__", "type": "Any"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "input_dims", "type": "Any"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 90, "col_offset": 74, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "self", "type": "DeepLikelihood"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "self", "type": "DeepLikelihood"}, {"lineNumber": 18, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 71, "col_offset": 52, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 71, "col_offset": 71, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 83, "col_offset": 90, "nodeName": "size", "type": "Any"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "self", "type": "AbstractDeepGPLayer"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "value", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 71, "nodeName": "variance", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 83, "col_offset": 90, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "num_likelihood_samples", "type": "Type[gpytorch.settings.num_likelihood_samples]"}, {"lineNumber": 71, "col_offset": 71, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "settings", "type": "module"}]