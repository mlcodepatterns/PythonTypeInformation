[{"lineNumber": 12, "col_offset": 25, "nodeName": "LazyTensorTestCase", "type": "Type[test.lazy._lazy_tensor_test_case.LazyTensorTestCase]"}, {"lineNumber": 12, "col_offset": 45, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "BatchLazyTensorTestCase", "type": "Type[test.lazy._lazy_tensor_test_case.BatchLazyTensorTestCase]"}, {"lineNumber": 37, "col_offset": 55, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 12, "col_offset": 45, "nodeName": "unittest", "type": "module"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "should_test_sample", "type": "bool"}, {"lineNumber": 37, "col_offset": 55, "nodeName": "unittest", "type": "module"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "should_test_sample", "type": "bool"}, {"lineNumber": 59, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "chol", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "chol", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "CholLazyTensor", "type": "Type[gpytorch.lazy.chol_lazy_tensor.CholLazyTensor]"}, {"lineNumber": 22, "col_offset": 30, "nodeName": "chol", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "add_", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "CholLazyTensor", "type": "Type[gpytorch.lazy.chol_lazy_tensor.CholLazyTensor]"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "chol", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "float", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "root", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "chol", "type": "Any"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "float", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "chol", "type": "Any"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "chol", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "root", "type": "Any"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "chol", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "chol", "type": "Any"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "chol", "type": "Any"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "eye", "type": "Any"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "torch", "type": "Any"}]