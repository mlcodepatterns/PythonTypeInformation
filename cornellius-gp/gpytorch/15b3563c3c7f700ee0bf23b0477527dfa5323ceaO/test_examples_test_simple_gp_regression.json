[{"lineNumber": 19, "col_offset": 0, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "ExactGP", "type": "Type[gpytorch.models.exact_gp.ExactGP]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 19, "col_offset": 10, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 20, "col_offset": 10, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 22, "col_offset": 9, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 23, "col_offset": 9, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "models", "type": "module"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "unittest", "type": "module"}, {"lineNumber": 195, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 19, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "sin", "type": "Any"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "sin", "type": "Any"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "mean_module", "type": "gpytorch.means.constant_mean.ConstantMean"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "covar_module", "type": "gpytorch.kernels.rbf_kernel.RBFKernel"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "mean_x", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "covar_x", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "function_predictions", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "mll", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "n_iter", "type": "int"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "mean_abs_error", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 19, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], None]"}, {"lineNumber": 28, "col_offset": 43, "nodeName": "train_inputs", "type": "Any"}, {"lineNumber": 28, "col_offset": 57, "nodeName": "train_targets", "type": "Any"}, {"lineNumber": 28, "col_offset": 72, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "ExactGPModel"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "ConstantMean", "type": "Type[gpytorch.means.constant_mean.ConstantMean]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "ExactGPModel"}, {"lineNumber": 30, "col_offset": 28, "nodeName": "RBFKernel", "type": "Type[gpytorch.kernels.rbf_kernel.RBFKernel]"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "mean_module", "type": "gpytorch.means.constant_mean.ConstantMean"}, {"lineNumber": 33, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "covar_module", "type": "gpytorch.kernels.rbf_kernel.RBFKernel"}, {"lineNumber": 34, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "GaussianRandomVariable", "type": "Type[gpytorch.random_variables.gaussian_random_variable.GaussianRandomVariable]"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "mean_x", "type": "Any"}, {"lineNumber": 35, "col_offset": 46, "nodeName": "covar_x", "type": "Any"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "GaussianLikelihood", "type": "Type[gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "data", "type": "Any"}, {"lineNumber": 42, "col_offset": 60, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "set_bounds", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "set_bounds", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "GaussianLikelihood", "type": "Type[gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood]"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "data", "type": "Any"}, {"lineNumber": 71, "col_offset": 60, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "ExactMarginalLogLikelihood", "type": "Any"}, {"lineNumber": 72, "col_offset": 50, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 72, "col_offset": 62, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "train", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "n_iter", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "mll", "type": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "n_iter", "type": "int"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "noise", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "var_diff", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "gp_model", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "mll", "type": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "n_iter", "type": "int"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "mean_abs_error", "type": "Any"}, {"lineNumber": 196, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 20, "col_offset": 49, "nodeName": "pi", "type": "float"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 23, "col_offset": 47, "nodeName": "pi", "type": "float"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "self", "type": "ExactGPModel"}, {"lineNumber": 34, "col_offset": 18, "nodeName": "self", "type": "ExactGPModel"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "covar_module", "type": "gpytorch.kernels.rbf_kernel.RBFKernel"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "covar_module", "type": "gpytorch.kernels.rbf_kernel.RBFKernel"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "mean_module", "type": "gpytorch.means.constant_mean.ConstantMean"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 57, "col_offset": 42, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 57, "col_offset": 51, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "norm", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "norm", "type": "Any"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 63, "col_offset": 45, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "norm", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "norm", "type": "Any"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 72, "col_offset": 14, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "covar_module", "type": "gpytorch.kernels.rbf_kernel.RBFKernel"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "mean_module", "type": "gpytorch.means.constant_mean.ConstantMean"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "optim", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 84, "col_offset": 21, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 101, "col_offset": 56, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 102, "col_offset": 36, "nodeName": "abs", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "fast_pred_var", "type": "Type[gpytorch.beta_features.fast_pred_var]"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "GaussianLikelihood", "type": "Type[gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood]"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 111, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 111, "col_offset": 50, "nodeName": "data", "type": "Any"}, {"lineNumber": 111, "col_offset": 64, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "ExactMarginalLogLikelihood", "type": "Type[gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood]"}, {"lineNumber": 112, "col_offset": 59, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 112, "col_offset": 71, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "train", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "train", "type": "Any"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "loss", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "n_iter", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 142, "col_offset": 40, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 147, "col_offset": 40, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "exp", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "abs", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "ExactMarginalLogLikelihood", "type": "Type[gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood]"}, {"lineNumber": 160, "col_offset": 59, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 160, "col_offset": 71, "nodeName": "gp_model", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "train", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "train", "type": "Any"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 170, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "loss", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "n_iter", "type": "Any"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 189, "col_offset": 40, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "mean", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 49, "nodeName": "math", "type": "module"}, {"lineNumber": 23, "col_offset": 47, "nodeName": "math", "type": "module"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 28, "col_offset": 14, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "self", "type": "ExactGPModel"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 59, "col_offset": 70, "nodeName": "data", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 63, "col_offset": 54, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 80, "col_offset": 61, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "mll", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 102, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 111, "col_offset": 36, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 111, "col_offset": 50, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "mlls", "type": "module"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "covar_module", "type": "gpytorch.kernels.rbf_kernel.RBFKernel"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "mean_module", "type": "gpytorch.means.constant_mean.ConstantMean"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "optim", "type": "Any"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "backward", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 142, "col_offset": 51, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 142, "col_offset": 60, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 147, "col_offset": 51, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 147, "col_offset": 60, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "log_noise", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "max", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "mlls", "type": "module"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "covar_module", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "mean_module", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "gp_model", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "optim", "type": "Any"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "gp_model", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "backward", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 178, "col_offset": 25, "nodeName": "gp_model", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "gp_model", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 189, "col_offset": 51, "nodeName": "gp_model", "type": "Any"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "abs", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "item", "type": "Any"}, {"lineNumber": 59, "col_offset": 70, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "var", "type": "Any"}, {"lineNumber": 63, "col_offset": 54, "nodeName": "torch", "type": "Any"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 80, "col_offset": 66, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "param", "type": "Any"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "param", "type": "Any"}, {"lineNumber": 102, "col_offset": 55, "nodeName": "mean", "type": "Any"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 120, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 120, "col_offset": 65, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "mll", "type": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "loss", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 131, "col_offset": 32, "nodeName": "grad", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "item", "type": "Any"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "grad", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "item", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "log_noise", "type": "Any"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 150, "col_offset": 58, "nodeName": "noise", "type": "Any"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 152, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 152, "col_offset": 54, "nodeName": "data", "type": "Any"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "GaussianLikelihood", "type": "Type[gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood]"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 159, "col_offset": 78, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "gp_model", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "gp_model", "type": "Any"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "gp_model", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 173, "col_offset": 24, "nodeName": "mll", "type": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"}, {"lineNumber": 173, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "loss", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 179, "col_offset": 32, "nodeName": "grad", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "item", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 182, "col_offset": 32, "nodeName": "grad", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "item", "type": "Any"}, {"lineNumber": 189, "col_offset": 60, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "mean", "type": "Any"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "function_predictions", "type": "Any"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "mean", "type": "Any"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "var", "type": "Any"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 80, "col_offset": 66, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "norm", "type": "Any"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "norm", "type": "Any"}, {"lineNumber": 102, "col_offset": 55, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 120, "col_offset": 40, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 120, "col_offset": 70, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 131, "col_offset": 32, "nodeName": "param", "type": "Any"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "param", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "var", "type": "Any"}, {"lineNumber": 152, "col_offset": 38, "nodeName": "var_diff", "type": "Any"}, {"lineNumber": 152, "col_offset": 54, "nodeName": "noise", "type": "Any"}, {"lineNumber": 159, "col_offset": 36, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 159, "col_offset": 57, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 173, "col_offset": 36, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 179, "col_offset": 32, "nodeName": "param", "type": "Any"}, {"lineNumber": 182, "col_offset": 32, "nodeName": "param", "type": "Any"}, {"lineNumber": 189, "col_offset": 60, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 190, "col_offset": 50, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 190, "col_offset": 66, "nodeName": "mean", "type": "Any"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "function_predictions", "type": "Any"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "grad", "type": "Any"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "grad", "type": "Any"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "mean_abs_error", "type": "Any"}, {"lineNumber": 120, "col_offset": 40, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 120, "col_offset": 70, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "norm", "type": "Any"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "norm", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 159, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 159, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 173, "col_offset": 36, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "norm", "type": "Any"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "norm", "type": "Any"}, {"lineNumber": 190, "col_offset": 50, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 190, "col_offset": 66, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "grad", "type": "Any"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "grad", "type": "Any"}, {"lineNumber": 159, "col_offset": 36, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 159, "col_offset": 57, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "grad", "type": "Any"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "grad", "type": "Any"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "mean_abs_error", "type": "Any"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "param", "type": "Any"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "param", "type": "Any"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "param", "type": "Any"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "param", "type": "Any"}]