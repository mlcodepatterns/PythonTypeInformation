[{"lineNumber": 14, "col_offset": 24, "nodeName": "BaseTestCase", "type": "Type[gpytorch.test.base_test_case.BaseTestCase]"}, {"lineNumber": 14, "col_offset": 38, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 14, "col_offset": 38, "nodeName": "unittest", "type": "module"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "CholeskyVariationalDistribution", "type": "Type[gpytorch.variational.cholesky_variational_distribution.CholeskyVariationalDistribution]"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "VariationalELBO", "type": "Type[gpytorch.mlls.variational_elbo.VariationalELBO]"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "WhitenedVariationalStrategy", "type": "Type[gpytorch.variational.whitened_variational_strategy.WhitenedVariationalStrategy]"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "VariationalStrategy", "type": "Type[gpytorch.variational.variational_strategy.VariationalStrategy]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "CholeskyVariationalDistribution", "type": "Type[gpytorch.variational.cholesky_variational_distribution.CholeskyVariationalDistribution]"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "ApproximateGP", "type": "Type[gpytorch.models.approximate_gp.ApproximateGP]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "inducing_points", "type": "Any"}, {"lineNumber": 64, "col_offset": 84, "nodeName": "VariationalELBO", "type": "Type[gpytorch.mlls.variational_elbo.VariationalELBO]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "mll", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "GaussianLikelihood", "type": "Type[gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "model_batch_shape", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "data_batch_shape", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "inducing_batch_shape", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "expected_batch_shape", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "eval_data_batch_shape", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "_wrapped_cholesky", "type": "unittest.mock.MagicMock"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "_wrapped_cg", "type": "unittest.mock.MagicMock"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "_cholesky_mock", "type": "unittest.mock._patch"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "_cg_mock", "type": "unittest.mock._patch"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "model_batch_shape", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "data_batch_shape", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "inducing_batch_shape", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "expected_batch_shape", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "_wrapped_cholesky", "type": "unittest.mock.MagicMock"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "_wrapped_cg", "type": "unittest.mock.MagicMock"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "_cholesky_mock", "type": "unittest.mock._patch"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "_cg_mock", "type": "unittest.mock._patch"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "Size", "type": "Any"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "variational", "type": "module"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "mlls", "type": "module"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "variational", "type": "module"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "Size", "type": "Any"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "Size", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "variational", "type": "module"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "variational", "type": "module"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "models", "type": "module"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 64, "col_offset": 60, "nodeName": "Size", "type": "Any"}, {"lineNumber": 64, "col_offset": 84, "nodeName": "mlls", "type": "module"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "clamp", "type": "Any"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "view", "type": "Any"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "expand", "type": "Any"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "mll_cls", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "model", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 74, "col_offset": 53, "nodeName": "ws", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "param", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "param", "type": "Any"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "loss", "type": "Any"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "Size", "type": "Any"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "clamp", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 96, "col_offset": 53, "nodeName": "ws", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "Size", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "likelihoods", "type": "module"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "model_batch_shape", "type": "Any"}, {"lineNumber": 120, "col_offset": 84, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "data_batch_shape", "type": "Any"}, {"lineNumber": 121, "col_offset": 81, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "inducing_batch_shape", "type": "Any"}, {"lineNumber": 122, "col_offset": 93, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "expected_batch_shape", "type": "Any"}, {"lineNumber": 123, "col_offset": 93, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "eval_data_batch_shape", "type": "Any"}, {"lineNumber": 124, "col_offset": 96, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "_make_model_and_likelihood", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "_training_iter", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "model", "type": "Any"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 141, "col_offset": 47, "nodeName": "data_batch_shape", "type": "Any"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "_cholesky_mock", "type": "unittest.mock._patch"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "cholesky_mock", "type": "Any"}, {"lineNumber": 144, "col_offset": 46, "nodeName": "_cg_mock", "type": "unittest.mock._patch"}, {"lineNumber": 144, "col_offset": 58, "nodeName": "cg_mock", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "model_batch_shape", "type": "Any"}, {"lineNumber": 161, "col_offset": 84, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "data_batch_shape", "type": "Any"}, {"lineNumber": 162, "col_offset": 81, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 163, "col_offset": 31, "nodeName": "inducing_batch_shape", "type": "Any"}, {"lineNumber": 163, "col_offset": 93, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "expected_batch_shape", "type": "Any"}, {"lineNumber": 164, "col_offset": 93, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 173, "col_offset": 28, "nodeName": "_make_model_and_likelihood", "type": "Callable[..., Any]"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "_cholesky_mock", "type": "unittest.mock._patch"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "cholesky_mock", "type": "Any"}, {"lineNumber": 182, "col_offset": 46, "nodeName": "_cg_mock", "type": "unittest.mock._patch"}, {"lineNumber": 182, "col_offset": 58, "nodeName": "cg_mock", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "variational_distribution", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "constant_mean", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "covar_module", "type": "gpytorch.kernels.scale_kernel.ScaleKernel"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "mean_x", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "covar_x", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "latent_pred", "type": "gpytorch.distributions.multivariate_normal.MultivariateNormal"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "latent_pred", "type": "gpytorch.distributions.multivariate_normal.MultivariateNormal"}, {"lineNumber": 60, "col_offset": 63, "nodeName": "inducing_batch_shape", "type": "Any"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 64, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 64, "col_offset": 84, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 66, "col_offset": 40, "nodeName": "event_shape", "type": "Any"}, {"lineNumber": 67, "col_offset": 18, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "event_shape", "type": "Any"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "event_shape", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "assertGreater", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 96, "col_offset": 57, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 120, "col_offset": 49, "nodeName": "model_batch_shape", "type": "Any"}, {"lineNumber": 120, "col_offset": 84, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 121, "col_offset": 47, "nodeName": "data_batch_shape", "type": "Any"}, {"lineNumber": 121, "col_offset": 81, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 122, "col_offset": 55, "nodeName": "inducing_batch_shape", "type": "Any"}, {"lineNumber": 122, "col_offset": 93, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 123, "col_offset": 55, "nodeName": "expected_batch_shape", "type": "Any"}, {"lineNumber": 123, "col_offset": 93, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 124, "col_offset": 57, "nodeName": "eval_data_batch_shape", "type": "Any"}, {"lineNumber": 124, "col_offset": 96, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 127, "col_offset": 44, "nodeName": "cholesky", "type": "Any"}, {"lineNumber": 128, "col_offset": 38, "nodeName": "linear_cg", "type": "Callable[..., Any]"}, {"lineNumber": 129, "col_offset": 53, "nodeName": "_wrapped_cholesky", "type": "unittest.mock.MagicMock"}, {"lineNumber": 130, "col_offset": 57, "nodeName": "_wrapped_cg", "type": "unittest.mock.MagicMock"}, {"lineNumber": 133, "col_offset": 28, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "model_batch_shape", "type": "Any"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "inducing_batch_shape", "type": "Any"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "distribution_cls", "type": "Type[gpytorch.variational.cholesky_variational_distribution.CholeskyVariationalDistribution]"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "strategy_cls", "type": "Type[gpytorch.variational.whitened_variational_strategy.WhitenedVariationalStrategy]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 141, "col_offset": 73, "nodeName": "mll_cls", "type": "Type[gpytorch.mlls.variational_elbo.VariationalELBO]"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "_eval_iter", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "model", "type": "Any"}, {"lineNumber": 146, "col_offset": 39, "nodeName": "eval_data_batch_shape", "type": "Any"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "_eval_iter", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "model", "type": "Any"}, {"lineNumber": 147, "col_offset": 44, "nodeName": "eval_data_batch_shape", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 148, "col_offset": 49, "nodeName": "expected_batch_shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "event_shape", "type": "Any"}, {"lineNumber": 149, "col_offset": 49, "nodeName": "event_shape", "type": "Any"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "cg_mock", "type": "Any"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "cholesky_mock", "type": "Any"}, {"lineNumber": 161, "col_offset": 49, "nodeName": "model_batch_shape", "type": "Any"}, {"lineNumber": 161, "col_offset": 84, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 162, "col_offset": 47, "nodeName": "data_batch_shape", "type": "Any"}, {"lineNumber": 162, "col_offset": 81, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 163, "col_offset": 55, "nodeName": "inducing_batch_shape", "type": "Any"}, {"lineNumber": 163, "col_offset": 93, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 164, "col_offset": 55, "nodeName": "expected_batch_shape", "type": "Any"}, {"lineNumber": 164, "col_offset": 93, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 167, "col_offset": 44, "nodeName": "cholesky", "type": "Any"}, {"lineNumber": 168, "col_offset": 38, "nodeName": "linear_cg", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 53, "nodeName": "_wrapped_cholesky", "type": "unittest.mock.MagicMock"}, {"lineNumber": 170, "col_offset": 57, "nodeName": "_wrapped_cg", "type": "unittest.mock.MagicMock"}, {"lineNumber": 173, "col_offset": 28, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "model_batch_shape", "type": "Any"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "inducing_batch_shape", "type": "Any"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "distribution_cls", "type": "Type[gpytorch.variational.cholesky_variational_distribution.CholeskyVariationalDistribution]"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "strategy_cls", "type": "Type[gpytorch.variational.whitened_variational_strategy.WhitenedVariationalStrategy]"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "constant_mean", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "_training_iter", "type": "Callable[..., Any]"}, {"lineNumber": 185, "col_offset": 32, "nodeName": "model", "type": "Any"}, {"lineNumber": 185, "col_offset": 39, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 185, "col_offset": 51, "nodeName": "data_batch_shape", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "loss", "type": "Any"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "_training_iter", "type": "Callable[..., Any]"}, {"lineNumber": 188, "col_offset": 47, "nodeName": "model", "type": "Any"}, {"lineNumber": 188, "col_offset": 54, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 188, "col_offset": 66, "nodeName": "data_batch_shape", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 189, "col_offset": 49, "nodeName": "expected_batch_shape", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "event_shape", "type": "Any"}, {"lineNumber": 190, "col_offset": 49, "nodeName": "event_shape", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 191, "col_offset": 41, "nodeName": "expected_batch_shape", "type": "Any"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "cg_mock", "type": "Any"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "cholesky_mock", "type": "Any"}, {"lineNumber": 42, "col_offset": 43, "nodeName": "distribution_cls", "type": "Any"}, {"lineNumber": 42, "col_offset": 60, "nodeName": "num_inducing", "type": "Any"}, {"lineNumber": 43, "col_offset": 39, "nodeName": "strategy_cls", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "inducing_points", "type": "Any"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "variational_distribution", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "variational_strategy", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "mean_module", "type": "gpytorch.means.constant_mean.ConstantMean"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "mean_module", "type": "gpytorch.means.zero_mean.ZeroMean"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "ScaleKernel", "type": "Type[gpytorch.kernels.scale_kernel.ScaleKernel]"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "mean_module", "type": "Any"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "covar_module", "type": "Any"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "MultivariateNormal", "type": "Type[gpytorch.distributions.multivariate_normal.MultivariateNormal]"}, {"lineNumber": 57, "col_offset": 72, "nodeName": "mean_x", "type": "Any"}, {"lineNumber": 57, "col_offset": 80, "nodeName": "covar_x", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "randn", "type": "Any"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "num_inducing", "type": "Any"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "_SVGPRegressionModel", "type": "Type[Any]"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "inducing_points", "type": "Any"}, {"lineNumber": 62, "col_offset": 58, "nodeName": "likelihood_cls", "type": "Type[gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood]"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "randn", "type": "Any"}, {"lineNumber": 66, "col_offset": 40, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 69, "col_offset": 50, "nodeName": "size", "type": "Any"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "mll", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "warnings", "type": "module"}, {"lineNumber": 96, "col_offset": 57, "nodeName": "torch", "type": "Any"}, {"lineNumber": 127, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 128, "col_offset": 38, "nodeName": "utils", "type": "module"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 141, "col_offset": 73, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 149, "col_offset": 49, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 167, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 168, "col_offset": 38, "nodeName": "utils", "type": "module"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "item", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 185, "col_offset": 77, "nodeName": "mll_cls", "type": "Type[gpytorch.mlls.variational_elbo.VariationalELBO]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "item", "type": "Any"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 188, "col_offset": 92, "nodeName": "mll_cls", "type": "Type[gpytorch.mlls.variational_elbo.VariationalELBO]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 190, "col_offset": 49, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "loss", "type": "Any"}, {"lineNumber": 42, "col_offset": 86, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "ConstantMean", "type": "Type[gpytorch.means.constant_mean.ConstantMean]"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "ZeroMean", "type": "Type[gpytorch.means.zero_mean.ZeroMean]"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "kernels", "type": "module"}, {"lineNumber": 52, "col_offset": 65, "nodeName": "RBFKernel", "type": "Type[gpytorch.kernels.rbf_kernel.RBFKernel]"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "distributions", "type": "module"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 62, "col_offset": 58, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 69, "col_offset": 50, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "param", "type": "Any"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "param", "type": "Any"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 88, "col_offset": 40, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "ExtraComputationWarning", "type": "Type[gpytorch.lazy.cached_cg_lazy_tensor.ExtraComputationWarning]"}, {"lineNumber": 88, "col_offset": 81, "nodeName": "w", "type": "warnings.WarningMessage"}, {"lineNumber": 88, "col_offset": 86, "nodeName": "ws", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 100, "col_offset": 52, "nodeName": "ExtraComputationWarning", "type": "Type[gpytorch.lazy.cached_cg_lazy_tensor.ExtraComputationWarning]"}, {"lineNumber": 100, "col_offset": 81, "nodeName": "w", "type": "warnings.WarningMessage"}, {"lineNumber": 100, "col_offset": 86, "nodeName": "ws", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 128, "col_offset": 38, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 168, "col_offset": 38, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "variational_params_initialized", "type": "Any"}, {"lineNumber": 185, "col_offset": 77, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "variational_params_initialized", "type": "Any"}, {"lineNumber": 188, "col_offset": 92, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "means", "type": "module"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "mean_module", "type": "gpytorch.means.constant_mean.ConstantMean"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "means", "type": "module"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 52, "col_offset": 65, "nodeName": "kernels", "type": "module"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 67, "col_offset": 61, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 67, "col_offset": 65, "nodeName": "event_shape", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "norm", "type": "Any"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "norm", "type": "Any"}, {"lineNumber": 88, "col_offset": 40, "nodeName": "w", "type": "warnings.WarningMessage"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "w", "type": "warnings.WarningMessage"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "variational_strategy", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "variational_strategy", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 52, "col_offset": 65, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 67, "col_offset": 65, "nodeName": "self", "type": "TestVariationalGP"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "grad", "type": "Any"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "grad", "type": "Any"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "param", "type": "Any"}]