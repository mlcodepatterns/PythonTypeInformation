[{"lineNumber": 14, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 14, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 60, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "mat", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 30, "col_offset": 38, "nodeName": "mat", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "root_decomposition", "type": "Any"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "root_inv_decomposition", "type": "Any"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "get_rng_state", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "set_rng_state", "type": "Any"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "root", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 40, "col_offset": 47, "nodeName": "data", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 45, "col_offset": 61, "nodeName": "data", "type": "Any"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "root", "type": "Any"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 52, "col_offset": 47, "nodeName": "data", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 57, "col_offset": 61, "nodeName": "data", "type": "Any"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 16, "col_offset": 47, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "root", "type": "Any"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 40, "col_offset": 47, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 45, "col_offset": 61, "nodeName": "grad", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "root", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 52, "col_offset": 47, "nodeName": "actual", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 57, "col_offset": 61, "nodeName": "grad", "type": "Any"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 40, "col_offset": 47, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 45, "col_offset": 61, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 57, "col_offset": 61, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 16, "col_offset": 47, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 45, "col_offset": 61, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 57, "col_offset": 61, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 16, "col_offset": 47, "nodeName": "os", "type": "module"}]