[{"lineNumber": 17, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "PyTorchCompatibleTestCase", "type": "Type[PyTorchCompatibleTestCase]"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "PyTorchCompatibleTestCase", "type": "Type[PyTorchCompatibleTestCase]"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "PyTorchCompatibleTestCase", "type": "Type[PyTorchCompatibleTestCase]"}, {"lineNumber": 200, "col_offset": 32, "nodeName": "PyTorchCompatibleTestCase", "type": "Type[PyTorchCompatibleTestCase]"}, {"lineNumber": 320, "col_offset": 29, "nodeName": "PyTorchCompatibleTestCase", "type": "Type[PyTorchCompatibleTestCase]"}, {"lineNumber": 416, "col_offset": 28, "nodeName": "PyTorchCompatibleTestCase", "type": "Type[PyTorchCompatibleTestCase]"}, {"lineNumber": 17, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 461, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "log_det", "type": "float"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "log_det_grad_output", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "log_det_grad_output", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "actual_mat_grad", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 367, "col_offset": 8, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "log_det_grad_output", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 403, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "scalar1", "type": "Any"}, {"lineNumber": 21, "col_offset": 31, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "scalar1", "type": "Any"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "scalar2", "type": "Any"}, {"lineNumber": 23, "col_offset": 31, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "scalar2", "type": "Any"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "scalar1", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "scalar2", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "scalar1", "type": "Any"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "mat", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "mat", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 50, "col_offset": 32, "nodeName": "vec", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 51, "col_offset": 38, "nodeName": "vec", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 52, "col_offset": 33, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 57, "col_offset": 51, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 70, "col_offset": 51, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 71, "col_offset": 43, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "mats", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 99, "col_offset": 39, "nodeName": "mats", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 105, "col_offset": 52, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 106, "col_offset": 44, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 128, "col_offset": 32, "nodeName": "mat", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 129, "col_offset": 38, "nodeName": "mat", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 130, "col_offset": 32, "nodeName": "vec", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 131, "col_offset": 38, "nodeName": "vec", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 133, "col_offset": 30, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 133, "col_offset": 39, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "inv_matmul", "type": "Any"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 138, "col_offset": 53, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 14, "nodeName": "inv_matmul", "type": "Any"}, {"lineNumber": 150, "col_offset": 55, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 151, "col_offset": 53, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 178, "col_offset": 33, "nodeName": "mats", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 179, "col_offset": 30, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 179, "col_offset": 39, "nodeName": "mats", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 181, "col_offset": 30, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 181, "col_offset": 39, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 185, "col_offset": 14, "nodeName": "inv_matmul", "type": "Any"}, {"lineNumber": 185, "col_offset": 56, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 189, "col_offset": 18, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 207, "col_offset": 14, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 212, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 215, "col_offset": 32, "nodeName": "mat", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 216, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 216, "col_offset": 32, "nodeName": "vec", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 217, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 217, "col_offset": 33, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 218, "col_offset": 38, "nodeName": "mat", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 219, "col_offset": 38, "nodeName": "vec", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 220, "col_offset": 30, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 220, "col_offset": 39, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 221, "col_offset": 23, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "nlv", "type": "gpytorch.lazy.non_lazy_variable.NonLazyVariable"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "assert_scalar_almost_equal", "type": "Callable[..., Any]"}, {"lineNumber": 239, "col_offset": 40, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 239, "col_offset": 54, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "assert_scalar_almost_equal", "type": "Callable[..., Any]"}, {"lineNumber": 240, "col_offset": 40, "nodeName": "res_log_det", "type": "Any"}, {"lineNumber": 240, "col_offset": 53, "nodeName": "log_det", "type": "float"}, {"lineNumber": 243, "col_offset": 31, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 244, "col_offset": 30, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "add_", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 255, "col_offset": 14, "nodeName": "inv_quad", "type": "Any"}, {"lineNumber": 255, "col_offset": 53, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 256, "col_offset": 17, "nodeName": "sum", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "assert_scalar_almost_equal", "type": "Callable[..., Any]"}, {"lineNumber": 257, "col_offset": 40, "nodeName": "res", "type": "Any"}, {"lineNumber": 257, "col_offset": 45, "nodeName": "actual", "type": "Any"}, {"lineNumber": 260, "col_offset": 31, "nodeName": "randn", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "nlv", "type": "gpytorch.lazy.non_lazy_variable.NonLazyVariable"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "assert_scalar_almost_equal", "type": "Callable[..., Any]"}, {"lineNumber": 279, "col_offset": 40, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 279, "col_offset": 54, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "assert_scalar_almost_equal", "type": "Callable[..., Any]"}, {"lineNumber": 280, "col_offset": 40, "nodeName": "res_log_det", "type": "Any"}, {"lineNumber": 280, "col_offset": 53, "nodeName": "log_det", "type": "float"}, {"lineNumber": 283, "col_offset": 31, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 284, "col_offset": 30, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "add_", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 295, "col_offset": 14, "nodeName": "inv_quad", "type": "Any"}, {"lineNumber": 295, "col_offset": 53, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "sum", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "assert_scalar_almost_equal", "type": "Callable[..., Any]"}, {"lineNumber": 297, "col_offset": 40, "nodeName": "res", "type": "Any"}, {"lineNumber": 297, "col_offset": 45, "nodeName": "actual", "type": "Any"}, {"lineNumber": 300, "col_offset": 31, "nodeName": "randn", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "assert_scalar_almost_equal", "type": "Callable[..., Any]"}, {"lineNumber": 311, "col_offset": 40, "nodeName": "res", "type": "Any"}, {"lineNumber": 311, "col_offset": 45, "nodeName": "log_det", "type": "float"}, {"lineNumber": 314, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "mul", "type": "Any"}, {"lineNumber": 315, "col_offset": 64, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 327, "col_offset": 15, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 340, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 340, "col_offset": 33, "nodeName": "mats", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 341, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 341, "col_offset": 33, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 342, "col_offset": 30, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 342, "col_offset": 39, "nodeName": "mats", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 343, "col_offset": 30, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 343, "col_offset": 39, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 344, "col_offset": 24, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 350, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 350, "col_offset": 19, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "nlv", "type": "gpytorch.lazy.non_lazy_variable.NonLazyVariable"}, {"lineNumber": 362, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 367, "col_offset": 31, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 368, "col_offset": 30, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 370, "col_offset": 27, "nodeName": "cat", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "add_", "type": "Any"}, {"lineNumber": 374, "col_offset": 43, "nodeName": "mat_log_det_grad", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 383, "col_offset": 14, "nodeName": "inv_quad", "type": "Any"}, {"lineNumber": 383, "col_offset": 54, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 388, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 392, "col_offset": 31, "nodeName": "randn", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 403, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 407, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 408, "col_offset": 26, "nodeName": "cat", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 423, "col_offset": 14, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 430, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 430, "col_offset": 32, "nodeName": "mat", "type": "Any"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 431, "col_offset": 29, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 431, "col_offset": 38, "nodeName": "mat", "type": "Any"}, {"lineNumber": 434, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 434, "col_offset": 19, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 439, "col_offset": 15, "nodeName": "root_decomposition", "type": "Any"}, {"lineNumber": 440, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "root_inv_decomposition", "type": "Any"}, {"lineNumber": 451, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 452, "col_offset": 17, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 462, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "scalar1", "type": "Any"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "scalar2", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "is_tensor", "type": "Any"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "scalar1", "type": "Any"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "is_tensor", "type": "Any"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "scalar2", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 57, "col_offset": 51, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "actual", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 65, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 70, "col_offset": 51, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 71, "col_offset": 43, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 72, "col_offset": 42, "nodeName": "actual", "type": "Any"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 78, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 79, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 105, "col_offset": 52, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 106, "col_offset": 44, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 107, "col_offset": 42, "nodeName": "actual", "type": "Any"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 113, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 114, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 125, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 137, "col_offset": 55, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 138, "col_offset": 53, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 139, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 139, "col_offset": 42, "nodeName": "actual", "type": "Any"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 145, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 146, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 150, "col_offset": 55, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 151, "col_offset": 53, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 152, "col_offset": 42, "nodeName": "actual", "type": "Any"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 156, "col_offset": 30, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 157, "col_offset": 33, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 158, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 159, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 185, "col_offset": 56, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 189, "col_offset": 18, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 190, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 190, "col_offset": 42, "nodeName": "actual", "type": "Any"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 194, "col_offset": 30, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 195, "col_offset": 33, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 196, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 196, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 197, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 197, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 204, "col_offset": 29, "nodeName": "get_rng_state", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 207, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 212, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 221, "col_offset": 23, "nodeName": "math", "type": "module"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "det", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "set_rng_state", "type": "Any"}, {"lineNumber": 225, "col_offset": 32, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 236, "col_offset": 13, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 237, "col_offset": 18, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 237, "col_offset": 34, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 238, "col_offset": 26, "nodeName": "res_log_det", "type": "Any"}, {"lineNumber": 238, "col_offset": 40, "nodeName": "inv_quad_log_det", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 240, "col_offset": 53, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 243, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 244, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 245, "col_offset": 42, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 246, "col_offset": 78, "nodeName": "log_det_grad_output", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 247, "col_offset": 39, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "res_log_det", "type": "Any"}, {"lineNumber": 248, "col_offset": 38, "nodeName": "log_det_grad_output", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 250, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 250, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 250, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 251, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 255, "col_offset": 53, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 260, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 261, "col_offset": 33, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 262, "col_offset": 30, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 264, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 264, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 264, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 265, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 265, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 276, "col_offset": 13, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 277, "col_offset": 18, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 277, "col_offset": 34, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 278, "col_offset": 26, "nodeName": "res_log_det", "type": "Any"}, {"lineNumber": 278, "col_offset": 40, "nodeName": "inv_quad_log_det", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 280, "col_offset": 53, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 283, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 284, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 285, "col_offset": 42, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 286, "col_offset": 78, "nodeName": "log_det_grad_output", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 287, "col_offset": 39, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "res_log_det", "type": "Any"}, {"lineNumber": 288, "col_offset": 38, "nodeName": "log_det_grad_output", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 290, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 290, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 290, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 291, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 291, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 291, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 295, "col_offset": 53, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 300, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 301, "col_offset": 33, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 302, "col_offset": 30, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 304, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 304, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 304, "col_offset": 67, "nodeName": "data", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 305, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 305, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 305, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 309, "col_offset": 13, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 310, "col_offset": 18, "nodeName": "log_det", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 311, "col_offset": 45, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 314, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 316, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 316, "col_offset": 30, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 317, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 317, "col_offset": 37, "nodeName": "actual_mat_grad", "type": "Any"}, {"lineNumber": 317, "col_offset": 54, "nodeName": "data", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 324, "col_offset": 29, "nodeName": "get_rng_state", "type": "Any"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 327, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 344, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "set_rng_state", "type": "Any"}, {"lineNumber": 351, "col_offset": 32, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 360, "col_offset": 18, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 360, "col_offset": 34, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 361, "col_offset": 26, "nodeName": "res_log_det", "type": "Any"}, {"lineNumber": 361, "col_offset": 40, "nodeName": "inv_quad_log_det", "type": "Any"}, {"lineNumber": 362, "col_offset": 23, "nodeName": "size", "type": "Any"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "assert_scalar_almost_equal", "type": "Callable[..., Any]"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "assert_scalar_almost_equal", "type": "Callable[..., Any]"}, {"lineNumber": 367, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 368, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 369, "col_offset": 42, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 370, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 375, "col_offset": 8, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 375, "col_offset": 39, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 376, "col_offset": 8, "nodeName": "res_log_det", "type": "Any"}, {"lineNumber": 376, "col_offset": 38, "nodeName": "log_det_grad_output", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 378, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 378, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 378, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 379, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 379, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 379, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 379, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 383, "col_offset": 54, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 388, "col_offset": 23, "nodeName": "size", "type": "Any"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "assert_scalar_almost_equal", "type": "Callable[..., Any]"}, {"lineNumber": 392, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 393, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 393, "col_offset": 33, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 394, "col_offset": 30, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 396, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 396, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 396, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 397, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 397, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 397, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 397, "col_offset": 68, "nodeName": "data", "type": "Any"}, {"lineNumber": 401, "col_offset": 13, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 402, "col_offset": 18, "nodeName": "log_det", "type": "Any"}, {"lineNumber": 403, "col_offset": 23, "nodeName": "size", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "assert_scalar_almost_equal", "type": "Callable[..., Any]"}, {"lineNumber": 407, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 408, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 412, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 412, "col_offset": 30, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 413, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 413, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 413, "col_offset": 37, "nodeName": "actual_mat_grad", "type": "Any"}, {"lineNumber": 413, "col_offset": 54, "nodeName": "data", "type": "Any"}, {"lineNumber": 420, "col_offset": 12, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 420, "col_offset": 29, "nodeName": "get_rng_state", "type": "Any"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 423, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "set_rng_state", "type": "Any"}, {"lineNumber": 435, "col_offset": 32, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 440, "col_offset": 14, "nodeName": "root", "type": "Any"}, {"lineNumber": 440, "col_offset": 26, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 441, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 441, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 441, "col_offset": 47, "nodeName": "data", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 446, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 446, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 446, "col_offset": 61, "nodeName": "data", "type": "Any"}, {"lineNumber": 451, "col_offset": 14, "nodeName": "root", "type": "Any"}, {"lineNumber": 451, "col_offset": 26, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 452, "col_offset": 17, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 453, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 453, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 453, "col_offset": 47, "nodeName": "data", "type": "Any"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 458, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 458, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 458, "col_offset": 61, "nodeName": "data", "type": "Any"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "scalar1", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "scalar2", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "self", "type": "PyTorchCompatibleTestCase"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "item", "type": "Any"}, {"lineNumber": 32, "col_offset": 51, "nodeName": "item", "type": "Any"}, {"lineNumber": 32, "col_offset": 69, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "self", "type": "PyTorchCompatibleTestCase"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "scalar1", "type": "Any"}, {"lineNumber": 35, "col_offset": 47, "nodeName": "scalar2", "type": "Any"}, {"lineNumber": 35, "col_offset": 61, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 58, "col_offset": 17, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 65, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 66, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 78, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 78, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 79, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 105, "col_offset": 14, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 113, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 114, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 137, "col_offset": 14, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 145, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 146, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 150, "col_offset": 14, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 158, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 158, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 159, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 185, "col_offset": 14, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 185, "col_offset": 30, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "cat", "type": "Any"}, {"lineNumber": 196, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 196, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 197, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 197, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 203, "col_offset": 47, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 204, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 221, "col_offset": 46, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 225, "col_offset": 32, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 236, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 237, "col_offset": 34, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 238, "col_offset": 40, "nodeName": "nlv", "type": "gpytorch.lazy.non_lazy_variable.NonLazyVariable"}, {"lineNumber": 238, "col_offset": 74, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 246, "col_offset": 42, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 250, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 250, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 251, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 251, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 255, "col_offset": 14, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 255, "col_offset": 30, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 256, "col_offset": 17, "nodeName": "mul", "type": "Any"}, {"lineNumber": 256, "col_offset": 77, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 264, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 264, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 265, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 265, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 276, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 277, "col_offset": 34, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 278, "col_offset": 40, "nodeName": "nlv", "type": "gpytorch.lazy.non_lazy_variable.NonLazyVariable"}, {"lineNumber": 278, "col_offset": 74, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 286, "col_offset": 42, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 290, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 290, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 291, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 291, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 295, "col_offset": 14, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 295, "col_offset": 30, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "mul", "type": "Any"}, {"lineNumber": 296, "col_offset": 78, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 304, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 304, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 305, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 305, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 309, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 317, "col_offset": 54, "nodeName": "grad", "type": "Any"}, {"lineNumber": 323, "col_offset": 11, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 323, "col_offset": 47, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 324, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 351, "col_offset": 32, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 360, "col_offset": 34, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 361, "col_offset": 40, "nodeName": "nlv", "type": "gpytorch.lazy.non_lazy_variable.NonLazyVariable"}, {"lineNumber": 361, "col_offset": 74, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 362, "col_offset": 23, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 363, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 363, "col_offset": 66, "nodeName": "data", "type": "Any"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 364, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 364, "col_offset": 65, "nodeName": "log_dets", "type": "Any"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "grad", "type": "Any"}, {"lineNumber": 378, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 378, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 379, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 379, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 383, "col_offset": 14, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 383, "col_offset": 30, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 388, "col_offset": 23, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 389, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 389, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 389, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 396, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 396, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 397, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 397, "col_offset": 68, "nodeName": "grad", "type": "Any"}, {"lineNumber": 401, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 403, "col_offset": 23, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 404, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 404, "col_offset": 57, "nodeName": "log_dets", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 413, "col_offset": 54, "nodeName": "grad", "type": "Any"}, {"lineNumber": 419, "col_offset": 11, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 419, "col_offset": 47, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 420, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 435, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 435, "col_offset": 32, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 439, "col_offset": 15, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 439, "col_offset": 31, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 440, "col_offset": 26, "nodeName": "root", "type": "Any"}, {"lineNumber": 441, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 441, "col_offset": 47, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 446, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 446, "col_offset": 61, "nodeName": "grad", "type": "Any"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 450, "col_offset": 31, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 451, "col_offset": 26, "nodeName": "root", "type": "Any"}, {"lineNumber": 452, "col_offset": 17, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 453, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 453, "col_offset": 47, "nodeName": "actual", "type": "Any"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "trace", "type": "Any"}, {"lineNumber": 458, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 458, "col_offset": 61, "nodeName": "grad", "type": "Any"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "scalar1", "type": "Any"}, {"lineNumber": 32, "col_offset": 51, "nodeName": "scalar2", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 65, "col_offset": 67, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 66, "col_offset": 67, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 78, "col_offset": 37, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 78, "col_offset": 67, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 79, "col_offset": 68, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 113, "col_offset": 68, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 114, "col_offset": 68, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 145, "col_offset": 67, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 146, "col_offset": 67, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 158, "col_offset": 37, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 158, "col_offset": 67, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 159, "col_offset": 68, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 185, "col_offset": 30, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 186, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 196, "col_offset": 37, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 196, "col_offset": 68, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 197, "col_offset": 37, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 197, "col_offset": 68, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 221, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 221, "col_offset": 46, "nodeName": "mat", "type": "Any"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 236, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 238, "col_offset": 74, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 246, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 250, "col_offset": 37, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 250, "col_offset": 67, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 251, "col_offset": 37, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 251, "col_offset": 67, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 255, "col_offset": 30, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 256, "col_offset": 77, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 264, "col_offset": 37, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 264, "col_offset": 67, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 265, "col_offset": 37, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 265, "col_offset": 67, "nodeName": "vec_var", "type": "Any"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 276, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 278, "col_offset": 74, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 286, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 290, "col_offset": 37, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 290, "col_offset": 67, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 291, "col_offset": 37, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 291, "col_offset": 68, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 295, "col_offset": 30, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 296, "col_offset": 78, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 304, "col_offset": 37, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 304, "col_offset": 67, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 305, "col_offset": 37, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 305, "col_offset": 68, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 309, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 310, "col_offset": 18, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 310, "col_offset": 34, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 317, "col_offset": 54, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 323, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "math", "type": "module"}, {"lineNumber": 345, "col_offset": 21, "nodeName": "det", "type": "Any"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "math", "type": "module"}, {"lineNumber": 346, "col_offset": 21, "nodeName": "det", "type": "Any"}, {"lineNumber": 359, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 361, "col_offset": 74, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 362, "col_offset": 23, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 363, "col_offset": 44, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 363, "col_offset": 62, "nodeName": "i", "type": "int"}, {"lineNumber": 363, "col_offset": 66, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 363, "col_offset": 87, "nodeName": "i", "type": "int"}, {"lineNumber": 364, "col_offset": 44, "nodeName": "res_log_det", "type": "Any"}, {"lineNumber": 364, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 364, "col_offset": 65, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 364, "col_offset": 79, "nodeName": "i", "type": "int"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 378, "col_offset": 37, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 378, "col_offset": 68, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 379, "col_offset": 37, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 379, "col_offset": 68, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 383, "col_offset": 30, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 388, "col_offset": 23, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 389, "col_offset": 44, "nodeName": "res", "type": "Any"}, {"lineNumber": 389, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 389, "col_offset": 57, "nodeName": "actual", "type": "Any"}, {"lineNumber": 389, "col_offset": 69, "nodeName": "i", "type": "int"}, {"lineNumber": 396, "col_offset": 37, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 396, "col_offset": 68, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 397, "col_offset": 37, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 397, "col_offset": 68, "nodeName": "vecs_var", "type": "Any"}, {"lineNumber": 401, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 402, "col_offset": 18, "nodeName": "NonLazyVariable", "type": "Type[gpytorch.lazy.non_lazy_variable.NonLazyVariable]"}, {"lineNumber": 402, "col_offset": 34, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 403, "col_offset": 23, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 404, "col_offset": 44, "nodeName": "res", "type": "Any"}, {"lineNumber": 404, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 404, "col_offset": 57, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 404, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 413, "col_offset": 54, "nodeName": "mats_var", "type": "Any"}, {"lineNumber": 419, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 439, "col_offset": 31, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 441, "col_offset": 47, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 446, "col_offset": 37, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 446, "col_offset": 61, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 450, "col_offset": 31, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 458, "col_offset": 37, "nodeName": "mat_var", "type": "Any"}, {"lineNumber": 458, "col_offset": 61, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 65, "col_offset": 67, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 66, "col_offset": 67, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 78, "col_offset": 37, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 78, "col_offset": 67, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 79, "col_offset": 68, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 113, "col_offset": 68, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 114, "col_offset": 68, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 145, "col_offset": 67, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 146, "col_offset": 67, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 158, "col_offset": 37, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 158, "col_offset": 67, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 159, "col_offset": 68, "nodeName": "self", "type": "TestInvMatmulNonBatch"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 196, "col_offset": 37, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 196, "col_offset": 68, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 197, "col_offset": 37, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 197, "col_offset": 68, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 203, "col_offset": 47, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 246, "col_offset": 42, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 250, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 250, "col_offset": 67, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 251, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 251, "col_offset": 67, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 256, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 256, "col_offset": 53, "nodeName": "vec_var_clone", "type": "Any"}, {"lineNumber": 264, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 264, "col_offset": 67, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 265, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 265, "col_offset": 67, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 286, "col_offset": 42, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 290, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 290, "col_offset": 67, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 291, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 291, "col_offset": 68, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 296, "col_offset": 53, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 304, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 304, "col_offset": 67, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 305, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 305, "col_offset": 68, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 310, "col_offset": 34, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 317, "col_offset": 54, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 323, "col_offset": 47, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 345, "col_offset": 21, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 345, "col_offset": 35, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 346, "col_offset": 21, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 346, "col_offset": 35, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 358, "col_offset": 43, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "mul", "type": "Any"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "mul", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 378, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 378, "col_offset": 68, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 379, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 379, "col_offset": 68, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 387, "col_offset": 43, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 396, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 396, "col_offset": 68, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 397, "col_offset": 37, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 397, "col_offset": 68, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 402, "col_offset": 34, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "mul", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "mul", "type": "Any"}, {"lineNumber": 413, "col_offset": 54, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 419, "col_offset": 47, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 446, "col_offset": 37, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 446, "col_offset": 61, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 458, "col_offset": 37, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 458, "col_offset": 61, "nodeName": "self", "type": "TestRootDecomposition"}, {"lineNumber": 203, "col_offset": 47, "nodeName": "os", "type": "module"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 246, "col_offset": 42, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 256, "col_offset": 53, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 286, "col_offset": 42, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 296, "col_offset": 53, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 315, "col_offset": 26, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 323, "col_offset": 47, "nodeName": "os", "type": "module"}, {"lineNumber": 345, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 346, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 358, "col_offset": 43, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 371, "col_offset": 54, "nodeName": "log_det_grad_output", "type": "Any"}, {"lineNumber": 372, "col_offset": 54, "nodeName": "log_det_grad_output", "type": "Any"}, {"lineNumber": 387, "col_offset": 43, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 409, "col_offset": 54, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 410, "col_offset": 54, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 419, "col_offset": 47, "nodeName": "os", "type": "module"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 256, "col_offset": 17, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 345, "col_offset": 35, "nodeName": "mats", "type": "Any"}, {"lineNumber": 346, "col_offset": 35, "nodeName": "mats", "type": "Any"}, {"lineNumber": 358, "col_offset": 18, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 387, "col_offset": 18, "nodeName": "vecs_var_clone", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 256, "col_offset": 17, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "mat_var_clone", "type": "Any"}, {"lineNumber": 358, "col_offset": 18, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 387, "col_offset": 18, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 256, "col_offset": 17, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 355, "col_offset": 26, "nodeName": "cat", "type": "Any"}, {"lineNumber": 384, "col_offset": 17, "nodeName": "cat", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "self", "type": "TestInvMatmulBatch"}, {"lineNumber": 355, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 384, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "mats_var_clone", "type": "Any"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetBatch"}]