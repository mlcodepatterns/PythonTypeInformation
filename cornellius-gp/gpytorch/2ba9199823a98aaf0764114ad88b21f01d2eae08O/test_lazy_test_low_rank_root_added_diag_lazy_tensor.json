[{"lineNumber": 14, "col_offset": 41, "nodeName": "LazyTensorTestCase", "type": "Type[gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase]"}, {"lineNumber": 14, "col_offset": 61, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 101, "col_offset": 46, "nodeName": "TestLowRankRootAddedDiagLazyTensor", "type": "Type[TestLowRankRootAddedDiagLazyTensor]"}, {"lineNumber": 118, "col_offset": 51, "nodeName": "TestLowRankRootAddedDiagLazyTensor", "type": "Type[TestLowRankRootAddedDiagLazyTensor]"}, {"lineNumber": 14, "col_offset": 61, "nodeName": "unittest", "type": "module"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "should_test_sample", "type": "bool"}, {"lineNumber": 102, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "should_test_sample", "type": "bool"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "should_test_sample", "type": "bool"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "skip_slq_tests", "type": "bool"}, {"lineNumber": 139, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "diag", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "lt", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "lt", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "diag", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "_diag", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "lazy_tensor_copy", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "evaluated", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "rhs_copy", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "_wrapped_cg", "type": "unittest.mock.MagicMock"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "diag", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "lt", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "lt", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "diag", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "_diag", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "lt", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "lt", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "diag", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "_diag", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "add_diag", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 52, "nodeName": "diag", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "lt", "type": "Any"}, {"lineNumber": 22, "col_offset": 30, "nodeName": "LowRankRootAddedDiagLazyTensor", "type": "Type[gpytorch.lazy.low_rank_root_added_diag_lazy_tensor.LowRankRootAddedDiagLazyTensor]"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "_diag_tensor", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "root", "type": "Any"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "evaluate_lazy_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 46, "nodeName": "lazy_tensor_copy", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "register_hook", "type": "Any"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "_ensure_symmetric_grad", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "lhs_copy", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 44, "col_offset": 67, "nodeName": "linear_cg_mock", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "skip_slq_tests", "type": "bool"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "evaluated", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "flattened_evaluated", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "vecs_copy", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "_wrapped_cg", "type": "unittest.mock.MagicMock"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "reduce_inv_quad", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "add_diag", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 52, "nodeName": "diag", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "lt", "type": "Any"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "LowRankRootAddedDiagLazyTensor", "type": "Type[gpytorch.lazy.low_rank_root_added_diag_lazy_tensor.LowRankRootAddedDiagLazyTensor]"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "_diag_tensor", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "root", "type": "Any"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "add_diag", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 52, "nodeName": "diag", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "lt", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "LowRankRootAddedDiagLazyTensor", "type": "Type[gpytorch.lazy.low_rank_root_added_diag_lazy_tensor.LowRankRootAddedDiagLazyTensor]"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "_diag_tensor", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "root", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "_lazy_tensor", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "root", "type": "Any"}, {"lineNumber": 28, "col_offset": 47, "nodeName": "diag_embed", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "self", "type": "TestLowRankRootAddedDiagLazyTensor"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "evaluated", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "linear_cg", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "called", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "__class__", "type": "Type[TestLowRankRootAddedDiagLazyTensor]"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "evaluate_lazy_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 50, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 73, "col_offset": 34, "nodeName": "view", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "randn", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 79, "col_offset": 71, "nodeName": "linear_cg_mock", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "sum", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "assertAllClose", "type": "Callable[..., bool]"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 95, "col_offset": 46, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "assertAllClose", "type": "Callable[..., bool]"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "res_logdet", "type": "Any"}, {"lineNumber": 96, "col_offset": 44, "nodeName": "actual_logdet", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "called", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "_lazy_tensor", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "root", "type": "Any"}, {"lineNumber": 115, "col_offset": 47, "nodeName": "diag_embed", "type": "Any"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "_lazy_tensor", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "root", "type": "Any"}, {"lineNumber": 136, "col_offset": 47, "nodeName": "diag_embed", "type": "Any"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "LowRankRootLazyTensor", "type": "Type[gpytorch.lazy.low_rank_root_lazy_tensor.LowRankRootLazyTensor]"}, {"lineNumber": 21, "col_offset": 35, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 28, "col_offset": 47, "nodeName": "diag", "type": "Any"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "detach_", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "detach", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "utils", "type": "module"}, {"lineNumber": 44, "col_offset": 51, "nodeName": "_wrapped_cg", "type": "unittest.mock.MagicMock"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "max_cholesky_size", "type": "Type[gpytorch.settings.max_cholesky_size]"}, {"lineNumber": 45, "col_offset": 83, "nodeName": "cg_tolerance", "type": "Type[gpytorch.settings.cg_tolerance]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "res", "type": "Any"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "actual", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "res", "type": "Any"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "actual", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "assertAllClose", "type": "Callable[..., bool]"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "res", "type": "Any"}, {"lineNumber": 53, "col_offset": 41, "nodeName": "actual", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "randn_like", "type": "Any"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "res", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "backward", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "backward", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "arg", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "arg_copy", "type": "Any"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "assertAllClose", "type": "Callable[..., bool]"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "grad", "type": "Any"}, {"lineNumber": 62, "col_offset": 46, "nodeName": "grad", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "TestLowRankRootAddedDiagLazyTensor"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "linear_cg_mock", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "self", "type": "TestLowRankRootAddedDiagLazyTensor"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "self", "type": "TestLowRankRootAddedDiagLazyTensor"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "self", "type": "TestLowRankRootAddedDiagLazyTensor"}, {"lineNumber": 73, "col_offset": 34, "nodeName": "evaluated", "type": "Any"}, {"lineNumber": 73, "col_offset": 54, "nodeName": "matrix_shape", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 75, "col_offset": 57, "nodeName": "size", "type": "Any"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "linear_cg", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "sum", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "self", "type": "TestLowRankRootAddedDiagLazyTensor"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "self", "type": "TestLowRankRootAddedDiagLazyTensor"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "TestLowRankRootAddedDiagLazyTensor"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "linear_cg_mock", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "LowRankRootLazyTensor", "type": "Type[gpytorch.lazy.low_rank_root_lazy_tensor.LowRankRootLazyTensor]"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 115, "col_offset": 47, "nodeName": "diag", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "LowRankRootLazyTensor", "type": "Type[gpytorch.lazy.low_rank_root_lazy_tensor.LowRankRootLazyTensor]"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 136, "col_offset": 47, "nodeName": "diag", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "root", "type": "Any"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "self", "type": "TestLowRankRootAddedDiagLazyTensor"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "detach", "type": "Any"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "settings", "type": "module"}, {"lineNumber": 45, "col_offset": 65, "nodeName": "cholesky", "type": "Any"}, {"lineNumber": 45, "col_offset": 53, "nodeName": "inf", "type": "float"}, {"lineNumber": 45, "col_offset": 83, "nodeName": "settings", "type": "module"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "inv_matmul", "type": "Any"}, {"lineNumber": 48, "col_offset": 49, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 48, "col_offset": 54, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 49, "col_offset": 62, "nodeName": "rhs_copy", "type": "Any"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "inv_matmul", "type": "Any"}, {"lineNumber": 51, "col_offset": 49, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 52, "col_offset": 56, "nodeName": "rhs_copy", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "self", "type": "TestLowRankRootAddedDiagLazyTensor"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "grad", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "actual", "type": "Any"}, {"lineNumber": 58, "col_offset": 41, "nodeName": "grad", "type": "Any"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "representation", "type": "Any"}, {"lineNumber": 59, "col_offset": 71, "nodeName": "representation", "type": "Any"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 60, "col_offset": 50, "nodeName": "is_leaf", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "self", "type": "TestLowRankRootAddedDiagLazyTensor"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 62, "col_offset": 46, "nodeName": "rhs_copy", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "assertAllClose", "type": "Callable[..., bool]"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "grad", "type": "Any"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "grad", "type": "Any"}, {"lineNumber": 73, "col_offset": 54, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 75, "col_offset": 57, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "detach_", "type": "Any"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "utils", "type": "module"}, {"lineNumber": 79, "col_offset": 55, "nodeName": "_wrapped_cg", "type": "unittest.mock.MagicMock"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 80, "col_offset": 63, "nodeName": "max_cholesky_size", "type": "Type[gpytorch.settings.max_cholesky_size]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "cg_tolerance", "type": "Type[gpytorch.settings.cg_tolerance]"}, {"lineNumber": 84, "col_offset": 47, "nodeName": "inv_quad_logdet", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "mul", "type": "Any"}, {"lineNumber": 88, "col_offset": 72, "nodeName": "vecs_copy", "type": "Any"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "cat", "type": "Any"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "root", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "root", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "clone", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "clone", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 45, "col_offset": 53, "nodeName": "math", "type": "module"}, {"lineNumber": 45, "col_offset": 83, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "lhs_copy", "type": "Any"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 59, "col_offset": 71, "nodeName": "lazy_tensor_copy", "type": "Any"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "arg_copy", "type": "Any"}, {"lineNumber": 60, "col_offset": 50, "nodeName": "arg_copy", "type": "Any"}, {"lineNumber": 60, "col_offset": 71, "nodeName": "grad", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "assertAllClose", "type": "Callable[..., bool]"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "grad", "type": "Any"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "grad", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "self", "type": "TestLowRankRootAddedDiagLazyTensor"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "lhs_copy", "type": "Any"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "settings", "type": "module"}, {"lineNumber": 80, "col_offset": 63, "nodeName": "settings", "type": "module"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "cholesky", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "inf", "type": "float"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "settings", "type": "module"}, {"lineNumber": 84, "col_offset": 47, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 85, "col_offset": 72, "nodeName": "reduce_inv_quad", "type": "Any"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "clone", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 60, "col_offset": 71, "nodeName": "arg_copy", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "self", "type": "TestLowRankRootAddedDiagLazyTensor"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "arg", "type": "Any"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "arg_copy", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "clone", "type": "Any"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 80, "col_offset": 63, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "math", "type": "module"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 88, "col_offset": 57, "nodeName": "vecs_copy", "type": "Any"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 92, "col_offset": 71, "nodeName": "i", "type": "int"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "evaluated", "type": "Any"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "evaluated", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 92, "col_offset": 76, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "logdet", "type": "Any"}, {"lineNumber": 92, "col_offset": 82, "nodeName": "numel", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "evaluated", "type": "Any"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "flattened_evaluated", "type": "Any"}, {"lineNumber": 92, "col_offset": 82, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 92, "col_offset": 50, "nodeName": "i", "type": "int"}, {"lineNumber": 92, "col_offset": 82, "nodeName": "lazy_tensor", "type": "Any"}]