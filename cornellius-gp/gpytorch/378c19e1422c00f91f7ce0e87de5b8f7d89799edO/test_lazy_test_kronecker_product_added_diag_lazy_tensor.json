[{"lineNumber": 19, "col_offset": 46, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 19, "col_offset": 65, "nodeName": "LazyTensorTestCase", "type": "Type[gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase]"}, {"lineNumber": 19, "col_offset": 46, "nodeName": "unittest", "type": "module"}, {"lineNumber": 45, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "dims", "type": "Tuple[int, int, int]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "latent_spaces", "type": "List[Any]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "kernels", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "lazy_kernel_matrices", "type": "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "diag", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "_diag", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "covariance", "type": "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "mean_value", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "dist", "type": "gpytorch.distributions.multivariate_normal.MultivariateNormal"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "target", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "KroneckerProductLazyTensor", "type": "Type[gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor]"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "KroneckerProductAddedDiagLazyTensor", "type": "Type[gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor]"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "lazy_kernel_matrices", "type": "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "_diag_tensor", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "MultivariateNormal", "type": "Type[gpytorch.distributions.multivariate_normal.MultivariateNormal]"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "mean_value", "type": "Any"}, {"lineNumber": 38, "col_offset": 46, "nodeName": "covariance", "type": "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "randn_like", "type": "Any"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "mean_value", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "log_prob", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "target", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "randn", "type": "Any"}, {"lineNumber": 22, "col_offset": 37, "nodeName": "d", "type": "int"}, {"lineNumber": 22, "col_offset": 44, "nodeName": "d", "type": "int"}, {"lineNumber": 22, "col_offset": 49, "nodeName": "dims", "type": "Tuple[int, int, int]"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "ll", "type": "Any"}, {"lineNumber": 23, "col_offset": 42, "nodeName": "ll", "type": "Any"}, {"lineNumber": 23, "col_offset": 48, "nodeName": "latent_spaces", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 59, "nodeName": "kernels", "type": "List[Any]"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "DiagLazyTensor", "type": "Type[gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor]"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "_lazy_tensor", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "diag", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "self", "type": "TestKroneckerProductAddedDiagLazyTensor"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "shape", "type": "Any"}, {"lineNumber": 37, "col_offset": 62, "nodeName": "device", "type": "Any"}, {"lineNumber": 37, "col_offset": 87, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "dist", "type": "gpytorch.distributions.multivariate_normal.MultivariateNormal"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "MaternKernel", "type": "Type[gpytorch.kernels.matern_kernel.MaternKernel]"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "diag", "type": "Any"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "covariance", "type": "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor"}, {"lineNumber": 37, "col_offset": 62, "nodeName": "covariance", "type": "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor"}, {"lineNumber": 37, "col_offset": 87, "nodeName": "covariance", "type": "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor"}, {"lineNumber": 27, "col_offset": 55, "nodeName": "ones", "type": "Any"}, {"lineNumber": 27, "col_offset": 55, "nodeName": "torch", "type": "Any"}, {"lineNumber": 27, "col_offset": 66, "nodeName": "shape", "type": "Any"}, {"lineNumber": 27, "col_offset": 66, "nodeName": "lazy_kernel_matrices", "type": "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor"}]