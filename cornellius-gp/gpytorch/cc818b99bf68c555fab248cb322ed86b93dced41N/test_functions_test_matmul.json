[{"lineNumber": 11, "col_offset": 25, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 11, "col_offset": 25, "nodeName": "unittest", "type": "module"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "unittest", "type": "module"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 96, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "mat_copy", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "vec_copy", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "vecs_copy", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "mats", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "mats", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "mats_copy", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "vecs_copy", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "mats", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "mats", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "mats_copy", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "vecs_copy", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 13, "col_offset": 14, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 16, "col_offset": 19, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 17, "col_offset": 24, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 25, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 25, "col_offset": 45, "nodeName": "vec", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 26, "col_offset": 38, "nodeName": "vec_copy", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 38, "col_offset": 45, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 39, "col_offset": 38, "nodeName": "vecs_copy", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 61, "col_offset": 46, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "vecs_copy", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "TestMatmulMultiBatch"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestMatmulMultiBatch"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestMatmulMultiBatch"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "TestMatmulMultiBatch"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 84, "col_offset": 46, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "vecs_copy", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "randn", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 13, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 13, "col_offset": 70, "nodeName": "float", "type": "Any"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 25, "col_offset": 45, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "mat_copy", "type": "Any"}, {"lineNumber": 26, "col_offset": 38, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "actual", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 33, "col_offset": 57, "nodeName": "grad", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 34, "col_offset": 57, "nodeName": "grad", "type": "Any"}, {"lineNumber": 38, "col_offset": 45, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "mat_copy", "type": "Any"}, {"lineNumber": 39, "col_offset": 38, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "actual", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 46, "col_offset": 57, "nodeName": "grad", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 47, "col_offset": 58, "nodeName": "grad", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 61, "col_offset": 46, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "mats_copy", "type": "Any"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "actual", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 68, "col_offset": 33, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 69, "col_offset": 58, "nodeName": "grad", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 70, "col_offset": 58, "nodeName": "grad", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 84, "col_offset": 46, "nodeName": "self", "type": "TestMatmulMultiBatch"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "mats_copy", "type": "Any"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "self", "type": "TestMatmulMultiBatch"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestMatmulMultiBatch"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "res", "type": "Any"}, {"lineNumber": 86, "col_offset": 42, "nodeName": "actual", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "grad_output", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "TestMatmulMultiBatch"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 92, "col_offset": 58, "nodeName": "grad", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestMatmulMultiBatch"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "approx_equal", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "grad", "type": "Any"}, {"lineNumber": 93, "col_offset": 58, "nodeName": "grad", "type": "Any"}, {"lineNumber": 13, "col_offset": 70, "nodeName": "torch", "type": "Any"}, {"lineNumber": 16, "col_offset": 19, "nodeName": "clone", "type": "Any"}, {"lineNumber": 17, "col_offset": 24, "nodeName": "clone", "type": "Any"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "clone", "type": "Any"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "clone", "type": "Any"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "clone", "type": "Any"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "clone", "type": "Any"}, {"lineNumber": 25, "col_offset": 14, "nodeName": "NonLazyTensor", "type": "Type[gpytorch.lazy.non_lazy_tensor.NonLazyTensor]"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "mat", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "mat_copy", "type": "Any"}, {"lineNumber": 33, "col_offset": 57, "nodeName": "mat", "type": "Any"}, {"lineNumber": 34, "col_offset": 37, "nodeName": "vec_copy", "type": "Any"}, {"lineNumber": 34, "col_offset": 57, "nodeName": "vec", "type": "Any"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "NonLazyTensor", "type": "Type[gpytorch.lazy.non_lazy_tensor.NonLazyTensor]"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "mat", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "mat_copy", "type": "Any"}, {"lineNumber": 46, "col_offset": 57, "nodeName": "mat", "type": "Any"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "vecs_copy", "type": "Any"}, {"lineNumber": 47, "col_offset": 58, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "clone", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "clone", "type": "Any"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "clone", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "clone", "type": "Any"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "NonLazyTensor", "type": "Type[gpytorch.lazy.non_lazy_tensor.NonLazyTensor]"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "mats", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "mats_copy", "type": "Any"}, {"lineNumber": 69, "col_offset": 58, "nodeName": "mats", "type": "Any"}, {"lineNumber": 70, "col_offset": 37, "nodeName": "vecs_copy", "type": "Any"}, {"lineNumber": 70, "col_offset": 58, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "clone", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "clone", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "clone", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "clone", "type": "Any"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "NonLazyTensor", "type": "Type[gpytorch.lazy.non_lazy_tensor.NonLazyTensor]"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "mats", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "self", "type": "TestMatmulMultiBatch"}, {"lineNumber": 92, "col_offset": 37, "nodeName": "mats_copy", "type": "Any"}, {"lineNumber": 92, "col_offset": 58, "nodeName": "mats", "type": "Any"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "vecs_copy", "type": "Any"}, {"lineNumber": 93, "col_offset": 58, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 33, "col_offset": 57, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 34, "col_offset": 37, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 34, "col_offset": 57, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 46, "col_offset": 57, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 47, "col_offset": 58, "nodeName": "self", "type": "TestMatmulNonBatch"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 69, "col_offset": 58, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 70, "col_offset": 37, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 70, "col_offset": 58, "nodeName": "self", "type": "TestMatmulBatch"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "self", "type": "TestMatmulMultiBatch"}, {"lineNumber": 92, "col_offset": 37, "nodeName": "self", "type": "TestMatmulMultiBatch"}, {"lineNumber": 92, "col_offset": 58, "nodeName": "self", "type": "TestMatmulMultiBatch"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "self", "type": "TestMatmulMultiBatch"}, {"lineNumber": 93, "col_offset": 58, "nodeName": "self", "type": "TestMatmulMultiBatch"}, {"lineNumber": 16, "col_offset": 19, "nodeName": "detach", "type": "Any"}, {"lineNumber": 17, "col_offset": 24, "nodeName": "detach", "type": "Any"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "detach", "type": "Any"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "detach", "type": "Any"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "detach", "type": "Any"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "detach", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "detach", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "detach", "type": "Any"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "detach", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "detach", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "detach", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "detach", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "detach", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "detach", "type": "Any"}, {"lineNumber": 16, "col_offset": 19, "nodeName": "mat", "type": "Any"}, {"lineNumber": 17, "col_offset": 24, "nodeName": "mat", "type": "Any"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "vec", "type": "Any"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "vec", "type": "Any"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "mats", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "mats", "type": "Any"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "mats", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "mats", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "vecs", "type": "Any"}]