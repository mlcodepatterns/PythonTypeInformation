[{"lineNumber": 13, "col_offset": 32, "nodeName": "BaseTestCase", "type": "Type[gpytorch.test.base_test_case.BaseTestCase]"}, {"lineNumber": 13, "col_offset": 46, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "TestInvQuadLogDetNonBatch", "type": "Type[TestInvQuadLogDetNonBatch]"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "TestInvQuadLogDetBatch", "type": "Type[TestInvQuadLogDetBatch]"}, {"lineNumber": 13, "col_offset": 46, "nodeName": "unittest", "type": "module"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "matrix_shape", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "matrix_shape", "type": "Any"}, {"lineNumber": 140, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 141, "col_offset": 4, "nodeName": "matrix_shape", "type": "Any"}, {"lineNumber": 144, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 19, "nodeName": "Size", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "mat_clone", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "actual_tensor", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "add_diag", "type": "Any"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "logdet", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "_wrapped_cg", "type": "unittest.mock.MagicMock"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "logdet", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "logdet", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "Size", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "Size", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 15, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "inv_quad_rhs", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "inv_quad_rhs_clone", "type": "Any"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "mat_clone", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "inv_quad_rhs", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "flattened_tensor", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "logdets", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "linear_cg_mock", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.root_lazy_tensor.RootLazyTensor"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "add_diag", "type": "Any"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "inv_quad_rhs", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "improper_logdet", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "inv_quad_rhs", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertAllClose", "type": "Callable[..., bool]"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 74, "col_offset": 44, "nodeName": "grad", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "inv_quad_rhs", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "called", "type": "Any"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "_test_inv_quad_logdet", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "_test_inv_quad_logdet", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "_test_inv_quad_logdet", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "_test_inv_quad_logdet", "type": "Callable[..., Any]"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "_test_inv_quad_logdet", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "_test_inv_quad_logdet", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "_test_inv_quad_logdet", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "_test_inv_quad_logdet", "type": "Callable[..., Any]"}, {"lineNumber": 114, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "_test_inv_quad_logdet", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "_test_inv_quad_logdet", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 141, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 24, "col_offset": 33, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 27, "col_offset": 36, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "add_", "type": "Any"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "mul", "type": "Any"}, {"lineNumber": 33, "col_offset": 85, "nodeName": "inv_quad_rhs_clone", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "view", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "cat", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "actual_logdet", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "actual_logdet", "type": "Any"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "linear_cg", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 45, "col_offset": 56, "nodeName": "max_cholesky_size", "type": "Type[gpytorch.settings.max_cholesky_size]"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "cg_tolerance", "type": "Type[gpytorch.settings.cg_tolerance]"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "skip_logdet_forward", "type": "Type[gpytorch.settings.skip_logdet_forward]"}, {"lineNumber": 47, "col_offset": 87, "nodeName": "improper_logdet", "type": "Any"}, {"lineNumber": 47, "col_offset": 105, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "RootLazyTensor", "type": "Type[gpytorch.lazy.root_lazy_tensor.RootLazyTensor]"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "mat", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "res_logdet", "type": "Any"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "inv_quad_logdet", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "assertAllClose", "type": "Callable[..., bool]"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 59, "col_offset": 46, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "mat_clone", "type": "Any"}, {"lineNumber": 74, "col_offset": 44, "nodeName": "mat", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "assertAllClose", "type": "Callable[..., bool]"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "grad", "type": "Any"}, {"lineNumber": 76, "col_offset": 51, "nodeName": "grad", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "linear_cg_mock", "type": "Any"}, {"lineNumber": 82, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "matrix_shape", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 86, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "matrix_shape", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 87, "col_offset": 48, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "matrix_shape", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 91, "col_offset": 48, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "matrix_shape", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 95, "col_offset": 48, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 99, "col_offset": 48, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 103, "col_offset": 48, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 110, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 111, "col_offset": 48, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 114, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 115, "col_offset": 48, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 119, "col_offset": 48, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "clone", "type": "Any"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "inv_quad_rhs", "type": "Any"}, {"lineNumber": 27, "col_offset": 36, "nodeName": "mat_clone", "type": "Any"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "sum", "type": "Any"}, {"lineNumber": 34, "col_offset": 92, "nodeName": "sum", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "actual_tensor", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "dim", "type": "Any"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "view", "type": "Any"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "utils", "type": "module"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 45, "col_offset": 56, "nodeName": "settings", "type": "module"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "settings", "type": "module"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "settings", "type": "module"}, {"lineNumber": 48, "col_offset": 44, "nodeName": "_wrapped_cg", "type": "unittest.mock.MagicMock"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "add_jitter", "type": "Any"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 55, "col_offset": 80, "nodeName": "inv_quad_rhs", "type": "Any"}, {"lineNumber": 55, "col_offset": 101, "nodeName": "logdet", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "assertAllClose", "type": "Callable[..., bool]"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "res_logdet", "type": "Any"}, {"lineNumber": 64, "col_offset": 48, "nodeName": "actual_logdet", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "inv_quad_rhs", "type": "Any"}, {"lineNumber": 76, "col_offset": 51, "nodeName": "inv_quad_rhs_clone", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "matrix_shape", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "matrix_shape", "type": "Any"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "matrix_shape", "type": "Any"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "matrix_shape", "type": "Any"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "matrix_shape", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "matrix_shape", "type": "Any"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "matrix_shape", "type": "Any"}, {"lineNumber": 24, "col_offset": 33, "nodeName": "clone", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "diagonal", "type": "Any"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 33, "col_offset": 61, "nodeName": "inv_quad_rhs_clone", "type": "Any"}, {"lineNumber": 34, "col_offset": 63, "nodeName": "dim", "type": "Any"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 34, "col_offset": 92, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 36, "col_offset": 55, "nodeName": "shape", "type": "Any"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 37, "col_offset": 63, "nodeName": "mat", "type": "Any"}, {"lineNumber": 37, "col_offset": 70, "nodeName": "flattened_tensor", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "actual_tensor", "type": "Any"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "logdets", "type": "Any"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "logdets", "type": "Any"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 45, "col_offset": 56, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.root_lazy_tensor.RootLazyTensor"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "item", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "__class__", "type": "Type[TestInvQuadLogDetNonBatch]"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "detach", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "actual_tensor", "type": "Any"}, {"lineNumber": 34, "col_offset": 63, "nodeName": "inv_quad_rhs", "type": "Any"}, {"lineNumber": 36, "col_offset": 55, "nodeName": "actual_tensor", "type": "Any"}, {"lineNumber": 39, "col_offset": 46, "nodeName": "shape", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "actual_logdet", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "res_logdet", "type": "Any"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "self", "type": "TestInvQuadLogDetNonBatch"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "mat", "type": "Any"}, {"lineNumber": 24, "col_offset": 33, "nodeName": "detach", "type": "Any"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "logdet", "type": "Any"}, {"lineNumber": 39, "col_offset": 46, "nodeName": "actual_tensor", "type": "Any"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "norm", "type": "Any"}, {"lineNumber": 24, "col_offset": 33, "nodeName": "inv_quad_rhs", "type": "Any"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "actual_tensor", "type": "Any"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "mat", "type": "Any"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "res_logdet", "type": "Any"}]