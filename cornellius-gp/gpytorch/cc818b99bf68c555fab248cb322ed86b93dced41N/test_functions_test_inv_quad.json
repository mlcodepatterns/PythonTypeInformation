[{"lineNumber": 13, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 13, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "unittest", "type": "module"}, {"lineNumber": 168, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "mat_clone", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "vec", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "vec_clone", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "vecs_clone", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "mats", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "mats", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "mats", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "mats_clone", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "vecs_clone", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "mats", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "mats", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "mats", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "mats_clone", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "vecs_clone", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "flattened_mats", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 15, "col_offset": 19, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "mat", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "add_", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "sum", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "non_lazy_tsr", "type": "gpytorch.lazy.non_lazy_tensor.NonLazyTensor"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "sum", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "non_lazy_tsr", "type": "gpytorch.lazy.non_lazy_tensor.NonLazyTensor"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "self", "type": "TestInvQuadBatch"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "mats", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "add_", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadBatch"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadBatch"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadBatch"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadBatch"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "non_lazy_tsr", "type": "gpytorch.lazy.non_lazy_tensor.NonLazyTensor"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 106, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "randn", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "mats", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "add_", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "randn", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 138, "col_offset": 26, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "view", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "non_lazy_tsr", "type": "gpytorch.lazy.non_lazy_tensor.NonLazyTensor"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 31, "nodeName": "randn", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "set_rng_state", "type": "Any"}, {"lineNumber": 16, "col_offset": 32, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "get_rng_state", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "eye", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "NonLazyTensor", "type": "Type[gpytorch.lazy.non_lazy_tensor.NonLazyTensor]"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "mat", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "inv_quad", "type": "Any"}, {"lineNumber": 44, "col_offset": 49, "nodeName": "vec", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 46, "col_offset": 52, "nodeName": "item", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "NonLazyTensor", "type": "Type[gpytorch.lazy.non_lazy_tensor.NonLazyTensor]"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "mat", "type": "Any"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "inv_quad", "type": "Any"}, {"lineNumber": 60, "col_offset": 49, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 61, "col_offset": 52, "nodeName": "item", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "set_rng_state", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadBatch"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "get_rng_state", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "unsqueeze_", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "NonLazyTensor", "type": "Type[gpytorch.lazy.non_lazy_tensor.NonLazyTensor]"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "mats", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "inv_quad", "type": "Any"}, {"lineNumber": 104, "col_offset": 49, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadBatch"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 106, "col_offset": 45, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadBatch"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 110, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 110, "col_offset": 52, "nodeName": "float", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 111, "col_offset": 42, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadBatch"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadBatch"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "set_rng_state", "type": "Any"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "rng_state", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "get_rng_state", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 132, "col_offset": 22, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "view", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "mats_clone", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "NonLazyTensor", "type": "Type[gpytorch.lazy.non_lazy_tensor.NonLazyTensor]"}, {"lineNumber": 153, "col_offset": 41, "nodeName": "mats", "type": "Any"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "inv_quad", "type": "Any"}, {"lineNumber": 154, "col_offset": 49, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 156, "col_offset": 25, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 160, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 160, "col_offset": 55, "nodeName": "float", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 161, "col_offset": 42, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 162, "col_offset": 39, "nodeName": "inv_quad_grad_output", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 16, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 16, "col_offset": 32, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 19, "col_offset": 47, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "manual_seed_all", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "mat", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "div_", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "clone", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "clone", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "clone", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "clone", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "clone", "type": "Any"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "clone", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "mul", "type": "Any"}, {"lineNumber": 41, "col_offset": 78, "nodeName": "vec_clone", "type": "Any"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "non_lazy_tsr", "type": "gpytorch.lazy.non_lazy_tensor.NonLazyTensor"}, {"lineNumber": 44, "col_offset": 49, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 46, "col_offset": 52, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "mul", "type": "Any"}, {"lineNumber": 57, "col_offset": 79, "nodeName": "vecs_clone", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "non_lazy_tsr", "type": "gpytorch.lazy.non_lazy_tensor.NonLazyTensor"}, {"lineNumber": 60, "col_offset": 49, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 61, "col_offset": 52, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "self", "type": "TestInvQuadBatch"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 77, "col_offset": 47, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "manual_seed_all", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "mats", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "div_", "type": "Any"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "clone", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "clone", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "clone", "type": "Any"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "clone", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "self", "type": "TestInvQuadBatch"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "non_lazy_tsr", "type": "gpytorch.lazy.non_lazy_tensor.NonLazyTensor"}, {"lineNumber": 104, "col_offset": 49, "nodeName": "self", "type": "TestInvQuadBatch"}, {"lineNumber": 110, "col_offset": 52, "nodeName": "torch", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 124, "col_offset": 47, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "manual_seed_all", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "random", "type": "module"}, {"lineNumber": 132, "col_offset": 22, "nodeName": "mats", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "div_", "type": "Any"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "clone", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "clone", "type": "Any"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "clone", "type": "Any"}, {"lineNumber": 138, "col_offset": 26, "nodeName": "clone", "type": "Any"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 142, "col_offset": 51, "nodeName": "shape", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 153, "col_offset": 41, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "non_lazy_tsr", "type": "gpytorch.lazy.non_lazy_tensor.NonLazyTensor"}, {"lineNumber": 154, "col_offset": 49, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 160, "col_offset": 55, "nodeName": "torch", "type": "Any"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 41, "col_offset": 78, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "max", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "max", "type": "Any"}, {"lineNumber": 57, "col_offset": 79, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "max", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "max", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "mats", "type": "Any"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "eye", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "max", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "max", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "max", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "mats", "type": "Any"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "eye", "type": "Any"}, {"lineNumber": 142, "col_offset": 51, "nodeName": "mats_clone", "type": "Any"}, {"lineNumber": 152, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "max", "type": "Any"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "max", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "max", "type": "Any"}, {"lineNumber": 19, "col_offset": 47, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "detach", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "detach", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "detach", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "detach", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "detach", "type": "Any"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "detach", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "vec_clone", "type": "Any"}, {"lineNumber": 52, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "abs", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "abs", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 57, "col_offset": 58, "nodeName": "vecs_clone", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "abs", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "abs", "type": "Any"}, {"lineNumber": 77, "col_offset": 47, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "detach", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "detach", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "detach", "type": "Any"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "detach", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "vecs_clone", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "abs", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "abs", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "abs", "type": "Any"}, {"lineNumber": 124, "col_offset": 47, "nodeName": "getenv", "type": "Callable"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "detach", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "detach", "type": "Any"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "detach", "type": "Any"}, {"lineNumber": 138, "col_offset": 26, "nodeName": "detach", "type": "Any"}, {"lineNumber": 142, "col_offset": 51, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "vecs_clone", "type": "Any"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 157, "col_offset": 35, "nodeName": "abs", "type": "Any"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "abs", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "abs", "type": "Any"}, {"lineNumber": 19, "col_offset": 47, "nodeName": "os", "type": "module"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "mat", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "mat", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "vec", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "vec", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 57, "col_offset": 58, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 77, "col_offset": 47, "nodeName": "os", "type": "module"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "mats", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "mats", "type": "Any"}, {"lineNumber": 90, "col_offset": 20, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "self", "type": "TestInvQuadBatch"}, {"lineNumber": 124, "col_offset": 47, "nodeName": "os", "type": "module"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "mats", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "mats", "type": "Any"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 138, "col_offset": 26, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "grad", "type": "Any"}, {"lineNumber": 52, "col_offset": 57, "nodeName": "grad", "type": "Any"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "grad", "type": "Any"}, {"lineNumber": 53, "col_offset": 57, "nodeName": "grad", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "grad", "type": "Any"}, {"lineNumber": 67, "col_offset": 57, "nodeName": "grad", "type": "Any"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "grad", "type": "Any"}, {"lineNumber": 68, "col_offset": 58, "nodeName": "grad", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "vecs_clone", "type": "Any"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 107, "col_offset": 50, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "grad", "type": "Any"}, {"lineNumber": 114, "col_offset": 58, "nodeName": "grad", "type": "Any"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "grad", "type": "Any"}, {"lineNumber": 115, "col_offset": 58, "nodeName": "grad", "type": "Any"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "vecs_clone", "type": "Any"}, {"lineNumber": 157, "col_offset": 35, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 157, "col_offset": 50, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "grad", "type": "Any"}, {"lineNumber": 164, "col_offset": 58, "nodeName": "grad", "type": "Any"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "grad", "type": "Any"}, {"lineNumber": 165, "col_offset": 58, "nodeName": "grad", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "mat_clone", "type": "Any"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "mat_clone", "type": "Any"}, {"lineNumber": 52, "col_offset": 57, "nodeName": "mat", "type": "Any"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "vec_clone", "type": "Any"}, {"lineNumber": 53, "col_offset": 57, "nodeName": "vec", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "mat_clone", "type": "Any"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "mat_clone", "type": "Any"}, {"lineNumber": 67, "col_offset": 57, "nodeName": "mat", "type": "Any"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "vecs_clone", "type": "Any"}, {"lineNumber": 68, "col_offset": 58, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "self", "type": "TestInvQuadBatch"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "mats_clone", "type": "Any"}, {"lineNumber": 114, "col_offset": 58, "nodeName": "mats", "type": "Any"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "vecs_clone", "type": "Any"}, {"lineNumber": 115, "col_offset": 58, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "mats_clone", "type": "Any"}, {"lineNumber": 164, "col_offset": 58, "nodeName": "mats", "type": "Any"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "vecs_clone", "type": "Any"}, {"lineNumber": 165, "col_offset": 58, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 52, "col_offset": 57, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 53, "col_offset": 57, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 67, "col_offset": 57, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 68, "col_offset": 58, "nodeName": "self", "type": "TestInvQuadNonBatch"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "cat", "type": "Any"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "self", "type": "TestInvQuadBatch"}, {"lineNumber": 114, "col_offset": 58, "nodeName": "self", "type": "TestInvQuadBatch"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "self", "type": "TestInvQuadBatch"}, {"lineNumber": 115, "col_offset": 58, "nodeName": "self", "type": "TestInvQuadBatch"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "view", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "shape", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 164, "col_offset": 58, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 165, "col_offset": 58, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "mats_clone", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 96, "col_offset": 54, "nodeName": "mat", "type": "Any"}, {"lineNumber": 96, "col_offset": 61, "nodeName": "mats_clone", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "cat", "type": "Any"}, {"lineNumber": 145, "col_offset": 18, "nodeName": "self", "type": "TestInvQuadMultiBatch"}, {"lineNumber": 96, "col_offset": 61, "nodeName": "self", "type": "TestInvQuadBatch"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 144, "col_offset": 54, "nodeName": "mat", "type": "Any"}, {"lineNumber": 144, "col_offset": 61, "nodeName": "flattened_mats", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "mat", "type": "Any"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "mat", "type": "Any"}]