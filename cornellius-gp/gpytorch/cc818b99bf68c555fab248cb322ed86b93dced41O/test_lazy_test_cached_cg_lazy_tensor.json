[{"lineNumber": 14, "col_offset": 37, "nodeName": "LazyTensorTestCase", "type": "Type[gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase]"}, {"lineNumber": 14, "col_offset": 57, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "TestCachedCGLazyTensorNoLogdet", "type": "Type[TestCachedCGLazyTensorNoLogdet]"}, {"lineNumber": 199, "col_offset": 42, "nodeName": "TestCachedCGLazyTensorNoLogdet", "type": "Type[TestCachedCGLazyTensorNoLogdet]"}, {"lineNumber": 227, "col_offset": 34, "nodeName": "TestCachedCGLazyTensor", "type": "Type[TestCachedCGLazyTensor]"}, {"lineNumber": 255, "col_offset": 39, "nodeName": "TestCachedCGLazyTensor", "type": "Type[TestCachedCGLazyTensor]"}, {"lineNumber": 14, "col_offset": 57, "nodeName": "unittest", "type": "module"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "should_test_sample", "type": "bool"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "skip_slq_tests", "type": "bool"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.non_lazy_tensor.NonLazyTensor"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "eager_rhs", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "with_solves", "type": "bool"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "cholesky", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "lazy_tensor_copy", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "evaluated", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "rhs_orig", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "rhs_copy", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "_wrapped_cg", "type": "unittest.mock.MagicMock"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "root_approx", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "test_mat", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "evaluated", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "flattened_evaluated", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "vecs_copy", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "diff", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "evaluated", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "flattened_evaluated", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "vecs_copy", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "actual", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "diff", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.non_lazy_tensor.NonLazyTensor"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "eager_rhs", "type": "Any"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "with_solves", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.non_lazy_tensor.NonLazyTensor"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "eager_rhs", "type": "Any"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "with_solves", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.non_lazy_tensor.NonLazyTensor"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "eager_rhs", "type": "Any"}, {"lineNumber": 268, "col_offset": 11, "nodeName": "with_solves", "type": "Any"}, {"lineNumber": 18, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "NonLazyTensor", "type": "Type[gpytorch.lazy.non_lazy_tensor.NonLazyTensor]"}, {"lineNumber": 22, "col_offset": 36, "nodeName": "mat", "type": "Any"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "detach", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "eager_rhss", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "solves", "type": "List[nothing]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "probe_vecs", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "probe_vec_norms", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "probe_vec_solves", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "tmats", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "CachedCGLazyTensor", "type": "Type[gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor]"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.non_lazy_tensor.NonLazyTensor"}, {"lineNumber": 39, "col_offset": 47, "nodeName": "eager_rhss", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 59, "nodeName": "solves", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 67, "nodeName": "probe_vecs", "type": "Any"}, {"lineNumber": 39, "col_offset": 79, "nodeName": "probe_vec_norms", "type": "Any"}, {"lineNumber": 39, "col_offset": 96, "nodeName": "probe_vec_solves", "type": "Any"}, {"lineNumber": 39, "col_offset": 114, "nodeName": "tmats", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "base_lazy_tensor", "type": "Any"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "evaluate_lazy_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "lazy_tensor_copy", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "register_hook", "type": "Any"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "_ensure_symmetric_grad", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "lhs_orig", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "lhs_copy", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 87, "col_offset": 67, "nodeName": "linear_cg_mock", "type": "Any"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "root_inv_decomposition", "type": "Any"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "detach", "type": "Any"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 142, "col_offset": 33, "nodeName": "test_mat", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "inv_matmul", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 40, "nodeName": "test_mat", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "evaluate_lazy_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 153, "col_offset": 46, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "view", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 159, "col_offset": 95, "nodeName": "ws", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 162, "col_offset": 14, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 162, "col_offset": 29, "nodeName": "res_logdet", "type": "Any"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "sum", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "actual_logdet", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 175, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[..., Any]"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "evaluate_lazy_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 46, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "view", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 182, "col_offset": 95, "nodeName": "ws", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 187, "col_offset": 37, "nodeName": "res_logdet", "type": "Any"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "sum", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 193, "col_offset": 17, "nodeName": "actual_inv_quad", "type": "Any"}, {"lineNumber": 193, "col_offset": 35, "nodeName": "actual_logdet", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "assertLess", "type": "Callable[..., None]"}, {"lineNumber": 203, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 204, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 207, "col_offset": 22, "nodeName": "NonLazyTensor", "type": "Type[gpytorch.lazy.non_lazy_tensor.NonLazyTensor]"}, {"lineNumber": 207, "col_offset": 36, "nodeName": "mat", "type": "Any"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "detach", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "eager_rhss", "type": "List[Any]"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "solves", "type": "List[nothing]"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "probe_vecs", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "probe_vec_norms", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "probe_vec_solves", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "tmats", "type": "Any"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "CachedCGLazyTensor", "type": "Type[gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor]"}, {"lineNumber": 224, "col_offset": 34, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.non_lazy_tensor.NonLazyTensor"}, {"lineNumber": 224, "col_offset": 47, "nodeName": "eager_rhss", "type": "List[Any]"}, {"lineNumber": 224, "col_offset": 59, "nodeName": "solves", "type": "Union[List[nothing], List[Any]]"}, {"lineNumber": 224, "col_offset": 67, "nodeName": "probe_vecs", "type": "Any"}, {"lineNumber": 224, "col_offset": 79, "nodeName": "probe_vec_norms", "type": "Any"}, {"lineNumber": 224, "col_offset": 96, "nodeName": "probe_vec_solves", "type": "Any"}, {"lineNumber": 224, "col_offset": 114, "nodeName": "tmats", "type": "Any"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 232, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "NonLazyTensor", "type": "Type[gpytorch.lazy.non_lazy_tensor.NonLazyTensor]"}, {"lineNumber": 235, "col_offset": 36, "nodeName": "mat", "type": "Any"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "detach", "type": "Any"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "eager_rhss", "type": "List[Any]"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "solves", "type": "List[nothing]"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "probe_vecs", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "probe_vec_norms", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "probe_vec_solves", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "tmats", "type": "Any"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "CachedCGLazyTensor", "type": "Type[gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor]"}, {"lineNumber": 252, "col_offset": 34, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.non_lazy_tensor.NonLazyTensor"}, {"lineNumber": 252, "col_offset": 47, "nodeName": "eager_rhss", "type": "List[Any]"}, {"lineNumber": 252, "col_offset": 59, "nodeName": "solves", "type": "Union[List[nothing], List[Any]]"}, {"lineNumber": 252, "col_offset": 67, "nodeName": "probe_vecs", "type": "Any"}, {"lineNumber": 252, "col_offset": 79, "nodeName": "probe_vec_norms", "type": "Any"}, {"lineNumber": 252, "col_offset": 96, "nodeName": "probe_vec_solves", "type": "Any"}, {"lineNumber": 252, "col_offset": 114, "nodeName": "tmats", "type": "Any"}, {"lineNumber": 262, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 263, "col_offset": 14, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 266, "col_offset": 22, "nodeName": "NonLazyTensor", "type": "Type[gpytorch.lazy.non_lazy_tensor.NonLazyTensor]"}, {"lineNumber": 266, "col_offset": 36, "nodeName": "mat", "type": "Any"}, {"lineNumber": 267, "col_offset": 20, "nodeName": "detach", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "eager_rhss", "type": "List[Any]"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "solves", "type": "List[nothing]"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "probe_vecs", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "probe_vec_norms", "type": "Any"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "probe_vec_solves", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "tmats", "type": "Any"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "CachedCGLazyTensor", "type": "Type[gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor]"}, {"lineNumber": 283, "col_offset": 34, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.non_lazy_tensor.NonLazyTensor"}, {"lineNumber": 283, "col_offset": 47, "nodeName": "eager_rhss", "type": "List[Any]"}, {"lineNumber": 283, "col_offset": 59, "nodeName": "solves", "type": "Union[List[Any], List[nothing]]"}, {"lineNumber": 283, "col_offset": 67, "nodeName": "probe_vecs", "type": "Any"}, {"lineNumber": 283, "col_offset": 79, "nodeName": "probe_vec_norms", "type": "Any"}, {"lineNumber": 283, "col_offset": 96, "nodeName": "probe_vec_solves", "type": "Any"}, {"lineNumber": 283, "col_offset": 114, "nodeName": "tmats", "type": "Any"}, {"lineNumber": 18, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "mat", "type": "Any"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "eager_rhss", "type": "List[Any]"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "solves", "type": "List[Any]"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "eager_rhs", "type": "Any"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor"}, {"lineNumber": 50, "col_offset": 20, "nodeName": "self", "type": "TestCachedCGLazyTensorNoLogdet"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "evaluated", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "dim", "type": "Any"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 59, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "linear_cg", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "self", "type": "TestCachedCGLazyTensorNoLogdet"}, {"lineNumber": 138, "col_offset": 22, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor"}, {"lineNumber": 142, "col_offset": 14, "nodeName": "root_approx", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "TestCachedCGLazyTensorNoLogdet"}, {"lineNumber": 152, "col_offset": 22, "nodeName": "self", "type": "TestCachedCGLazyTensor"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "self", "type": "TestCachedCGLazyTensor"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "evaluated", "type": "Any"}, {"lineNumber": 154, "col_offset": 50, "nodeName": "matrix_shape", "type": "Any"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 159, "col_offset": 55, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "res_logdet", "type": "Any"}, {"lineNumber": 160, "col_offset": 39, "nodeName": "inv_quad_logdet", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "abs", "type": "Any"}, {"lineNumber": 170, "col_offset": 38, "nodeName": "clamp", "type": "Any"}, {"lineNumber": 170, "col_offset": 60, "nodeName": "inf", "type": "float"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "TestCachedCGLazyTensor"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 175, "col_offset": 22, "nodeName": "self", "type": "TestCachedCGLazyTensor"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "self", "type": "TestCachedCGLazyTensor"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "evaluated", "type": "Any"}, {"lineNumber": 177, "col_offset": 50, "nodeName": "matrix_shape", "type": "Any"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 182, "col_offset": 55, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "inv_quad_logdet", "type": "Callable[..., Any]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "sum", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "abs", "type": "Any"}, {"lineNumber": 195, "col_offset": 38, "nodeName": "clamp", "type": "Any"}, {"lineNumber": 195, "col_offset": 60, "nodeName": "inf", "type": "float"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "self", "type": "TestCachedCGLazyTensor"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 203, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 204, "col_offset": 14, "nodeName": "mat", "type": "Any"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "eager_rhss", "type": "List[Any]"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "solves", "type": "List[Any]"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "eager_rhs", "type": "Any"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 220, "col_offset": 30, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 221, "col_offset": 31, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 222, "col_offset": 20, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 232, "col_offset": 14, "nodeName": "mat", "type": "Any"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "eager_rhss", "type": "List[Any]"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "solves", "type": "List[Any]"}, {"lineNumber": 245, "col_offset": 26, "nodeName": "eager_rhs", "type": "Any"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 248, "col_offset": 30, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 249, "col_offset": 31, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 262, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 263, "col_offset": 14, "nodeName": "mat", "type": "Any"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "mat", "type": "Any"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "eager_rhss", "type": "List[Any]"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "solves", "type": "List[Any]"}, {"lineNumber": 276, "col_offset": 26, "nodeName": "eager_rhs", "type": "Any"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 279, "col_offset": 30, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 280, "col_offset": 31, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "mat", "type": "Any"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 26, "col_offset": 78, "nodeName": "precompute_terms", "type": "Callable[..., Tuple[Any, Any, Any, Any, Any]]"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.non_lazy_tensor.NonLazyTensor"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 34, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 34, "col_offset": 66, "nodeName": "device", "type": "Any"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 35, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 35, "col_offset": 71, "nodeName": "device", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 36, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 36, "col_offset": 72, "nodeName": "device", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 37, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 37, "col_offset": 61, "nodeName": "device", "type": "Any"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "detach_", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "rhs_orig", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "TestCachedCGLazyTensorNoLogdet"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "rhs_orig", "type": "Any"}, {"lineNumber": 59, "col_offset": 45, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "TestCachedCGLazyTensorNoLogdet"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 66, "col_offset": 50, "nodeName": "shape", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "dim", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "TestCachedCGLazyTensorNoLogdet"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 77, "col_offset": 50, "nodeName": "shape", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "detach", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "utils", "type": "module"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "_wrapped_cg", "type": "unittest.mock.MagicMock"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "max_cholesky_size", "type": "Type[gpytorch.settings.max_cholesky_size]"}, {"lineNumber": 88, "col_offset": 83, "nodeName": "cg_tolerance", "type": "Type[gpytorch.settings.cg_tolerance]"}, {"lineNumber": 89, "col_offset": 61, "nodeName": "ws", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 100, "col_offset": 61, "nodeName": "ws", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "clone", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "norm", "type": "Any"}, {"lineNumber": 144, "col_offset": 51, "nodeName": "norm", "type": "Any"}, {"lineNumber": 154, "col_offset": 50, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "detach", "type": "Any"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "detach", "type": "Any"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 159, "col_offset": 55, "nodeName": "warnings", "type": "module"}, {"lineNumber": 160, "col_offset": 39, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor"}, {"lineNumber": 160, "col_offset": 80, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "self", "type": "TestCachedCGLazyTensor"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "sum", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "cat", "type": "Any"}, {"lineNumber": 170, "col_offset": 60, "nodeName": "math", "type": "module"}, {"lineNumber": 177, "col_offset": 50, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "detach", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "detach", "type": "Any"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 182, "col_offset": 55, "nodeName": "warnings", "type": "module"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "vecs", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "self", "type": "TestCachedCGLazyTensor"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "res_inv_quad", "type": "Any"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "sum", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "cat", "type": "Any"}, {"lineNumber": 195, "col_offset": 60, "nodeName": "math", "type": "module"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "mat", "type": "Any"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 210, "col_offset": 17, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 211, "col_offset": 78, "nodeName": "precompute_terms", "type": "Callable[..., Tuple[Any, Any, Any, Any, Any]]"}, {"lineNumber": 212, "col_offset": 20, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.non_lazy_tensor.NonLazyTensor"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 219, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 219, "col_offset": 66, "nodeName": "device", "type": "Any"}, {"lineNumber": 220, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 220, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 220, "col_offset": 71, "nodeName": "device", "type": "Any"}, {"lineNumber": 221, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 221, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 221, "col_offset": 72, "nodeName": "device", "type": "Any"}, {"lineNumber": 222, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 222, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 222, "col_offset": 61, "nodeName": "device", "type": "Any"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "mat", "type": "Any"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 239, "col_offset": 78, "nodeName": "precompute_terms", "type": "Callable[..., Tuple[Any, Any, Any, Any, Any]]"}, {"lineNumber": 240, "col_offset": 20, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.non_lazy_tensor.NonLazyTensor"}, {"lineNumber": 247, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 247, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 247, "col_offset": 66, "nodeName": "device", "type": "Any"}, {"lineNumber": 248, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 248, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 248, "col_offset": 71, "nodeName": "device", "type": "Any"}, {"lineNumber": 249, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 249, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 249, "col_offset": 72, "nodeName": "device", "type": "Any"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 250, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 250, "col_offset": 61, "nodeName": "device", "type": "Any"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "mat", "type": "Any"}, {"lineNumber": 267, "col_offset": 20, "nodeName": "randn", "type": "Any"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "num_trace_samples", "type": "Type[gpytorch.settings.num_trace_samples]"}, {"lineNumber": 270, "col_offset": 78, "nodeName": "precompute_terms", "type": "Callable[..., Tuple[Any, Any, Any, Any, Any]]"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.non_lazy_tensor.NonLazyTensor"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 278, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 278, "col_offset": 66, "nodeName": "device", "type": "Any"}, {"lineNumber": 279, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 279, "col_offset": 53, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 279, "col_offset": 71, "nodeName": "device", "type": "Any"}, {"lineNumber": 280, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 280, "col_offset": 54, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 280, "col_offset": 72, "nodeName": "device", "type": "Any"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 281, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 281, "col_offset": 61, "nodeName": "device", "type": "Any"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "settings", "type": "module"}, {"lineNumber": 25, "col_offset": 61, "nodeName": "with_logdet", "type": "bool"}, {"lineNumber": 26, "col_offset": 78, "nodeName": "CachedCGLazyTensor", "type": "Type[gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor]"}, {"lineNumber": 27, "col_offset": 33, "nodeName": "detach", "type": "Any"}, {"lineNumber": 27, "col_offset": 66, "nodeName": "with_logdet", "type": "bool"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "detach", "type": "Any"}, {"lineNumber": 29, "col_offset": 50, "nodeName": "detach", "type": "Any"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "detach", "type": "Any"}, {"lineNumber": 30, "col_offset": 42, "nodeName": "detach", "type": "Any"}, {"lineNumber": 34, "col_offset": 48, "nodeName": "mat", "type": "Any"}, {"lineNumber": 34, "col_offset": 66, "nodeName": "mat", "type": "Any"}, {"lineNumber": 35, "col_offset": 53, "nodeName": "mat", "type": "Any"}, {"lineNumber": 35, "col_offset": 71, "nodeName": "mat", "type": "Any"}, {"lineNumber": 36, "col_offset": 54, "nodeName": "mat", "type": "Any"}, {"lineNumber": 36, "col_offset": 72, "nodeName": "mat", "type": "Any"}, {"lineNumber": 37, "col_offset": 43, "nodeName": "mat", "type": "Any"}, {"lineNumber": 37, "col_offset": 61, "nodeName": "mat", "type": "Any"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "self", "type": "TestCachedCGLazyTensorNoLogdet"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "detach", "type": "Any"}, {"lineNumber": 66, "col_offset": 29, "nodeName": "rhs_orig", "type": "Any"}, {"lineNumber": 66, "col_offset": 50, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "rhs_orig", "type": "Any"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "lhs_orig", "type": "Any"}, {"lineNumber": 77, "col_offset": 50, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "detach", "type": "Any"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "settings", "type": "module"}, {"lineNumber": 88, "col_offset": 65, "nodeName": "cholesky", "type": "Any"}, {"lineNumber": 88, "col_offset": 53, "nodeName": "inf", "type": "float"}, {"lineNumber": 88, "col_offset": 83, "nodeName": "settings", "type": "module"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "actual", "type": "Any"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "res", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "actual", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "assertAllClose", "type": "Callable[..., bool]"}, {"lineNumber": 97, "col_offset": 40, "nodeName": "res", "type": "Any"}, {"lineNumber": 97, "col_offset": 45, "nodeName": "actual", "type": "Any"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "randn_like", "type": "Any"}, {"lineNumber": 102, "col_offset": 44, "nodeName": "res", "type": "Any"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "backward", "type": "Any"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "backward", "type": "Any"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "arg", "type": "Any"}, {"lineNumber": 105, "col_offset": 29, "nodeName": "arg_copy", "type": "Any"}, {"lineNumber": 105, "col_offset": 41, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "assertAllClose", "type": "Callable[..., bool]"}, {"lineNumber": 108, "col_offset": 40, "nodeName": "grad", "type": "Any"}, {"lineNumber": 108, "col_offset": 50, "nodeName": "grad", "type": "Any"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "res", "type": "Any"}, {"lineNumber": 144, "col_offset": 41, "nodeName": "actual", "type": "Any"}, {"lineNumber": 144, "col_offset": 51, "nodeName": "actual", "type": "Any"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "actual", "type": "Any"}, {"lineNumber": 170, "col_offset": 38, "nodeName": "abs", "type": "Any"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "max", "type": "Any"}, {"lineNumber": 182, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "res", "type": "Any"}, {"lineNumber": 195, "col_offset": 22, "nodeName": "actual", "type": "Any"}, {"lineNumber": 195, "col_offset": 38, "nodeName": "abs", "type": "Any"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "max", "type": "Any"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 210, "col_offset": 17, "nodeName": "settings", "type": "module"}, {"lineNumber": 210, "col_offset": 61, "nodeName": "with_logdet", "type": "Any"}, {"lineNumber": 211, "col_offset": 78, "nodeName": "CachedCGLazyTensor", "type": "Type[gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor]"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "detach", "type": "Any"}, {"lineNumber": 212, "col_offset": 66, "nodeName": "with_logdet", "type": "Any"}, {"lineNumber": 214, "col_offset": 30, "nodeName": "detach", "type": "Any"}, {"lineNumber": 214, "col_offset": 50, "nodeName": "detach", "type": "Any"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "detach", "type": "Any"}, {"lineNumber": 215, "col_offset": 42, "nodeName": "detach", "type": "Any"}, {"lineNumber": 219, "col_offset": 48, "nodeName": "mat", "type": "Any"}, {"lineNumber": 219, "col_offset": 66, "nodeName": "mat", "type": "Any"}, {"lineNumber": 220, "col_offset": 53, "nodeName": "mat", "type": "Any"}, {"lineNumber": 220, "col_offset": 71, "nodeName": "mat", "type": "Any"}, {"lineNumber": 221, "col_offset": 54, "nodeName": "mat", "type": "Any"}, {"lineNumber": 221, "col_offset": 72, "nodeName": "mat", "type": "Any"}, {"lineNumber": 222, "col_offset": 43, "nodeName": "mat", "type": "Any"}, {"lineNumber": 222, "col_offset": 61, "nodeName": "mat", "type": "Any"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "settings", "type": "module"}, {"lineNumber": 238, "col_offset": 61, "nodeName": "with_logdet", "type": "Any"}, {"lineNumber": 239, "col_offset": 78, "nodeName": "CachedCGLazyTensor", "type": "Type[gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor]"}, {"lineNumber": 240, "col_offset": 33, "nodeName": "detach", "type": "Any"}, {"lineNumber": 240, "col_offset": 66, "nodeName": "with_logdet", "type": "Any"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "detach", "type": "Any"}, {"lineNumber": 242, "col_offset": 50, "nodeName": "detach", "type": "Any"}, {"lineNumber": 243, "col_offset": 26, "nodeName": "detach", "type": "Any"}, {"lineNumber": 243, "col_offset": 42, "nodeName": "detach", "type": "Any"}, {"lineNumber": 247, "col_offset": 48, "nodeName": "mat", "type": "Any"}, {"lineNumber": 247, "col_offset": 66, "nodeName": "mat", "type": "Any"}, {"lineNumber": 248, "col_offset": 53, "nodeName": "mat", "type": "Any"}, {"lineNumber": 248, "col_offset": 71, "nodeName": "mat", "type": "Any"}, {"lineNumber": 249, "col_offset": 54, "nodeName": "mat", "type": "Any"}, {"lineNumber": 249, "col_offset": 72, "nodeName": "mat", "type": "Any"}, {"lineNumber": 250, "col_offset": 43, "nodeName": "mat", "type": "Any"}, {"lineNumber": 250, "col_offset": 61, "nodeName": "mat", "type": "Any"}, {"lineNumber": 267, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "settings", "type": "module"}, {"lineNumber": 269, "col_offset": 61, "nodeName": "with_logdet", "type": "Any"}, {"lineNumber": 270, "col_offset": 78, "nodeName": "CachedCGLazyTensor", "type": "Type[gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor]"}, {"lineNumber": 271, "col_offset": 33, "nodeName": "detach", "type": "Any"}, {"lineNumber": 271, "col_offset": 66, "nodeName": "with_logdet", "type": "Any"}, {"lineNumber": 273, "col_offset": 30, "nodeName": "detach", "type": "Any"}, {"lineNumber": 273, "col_offset": 50, "nodeName": "detach", "type": "Any"}, {"lineNumber": 274, "col_offset": 26, "nodeName": "detach", "type": "Any"}, {"lineNumber": 274, "col_offset": 42, "nodeName": "detach", "type": "Any"}, {"lineNumber": 278, "col_offset": 48, "nodeName": "mat", "type": "Any"}, {"lineNumber": 278, "col_offset": 66, "nodeName": "mat", "type": "Any"}, {"lineNumber": 279, "col_offset": 53, "nodeName": "mat", "type": "Any"}, {"lineNumber": 279, "col_offset": 71, "nodeName": "mat", "type": "Any"}, {"lineNumber": 280, "col_offset": 54, "nodeName": "mat", "type": "Any"}, {"lineNumber": 280, "col_offset": 72, "nodeName": "mat", "type": "Any"}, {"lineNumber": 281, "col_offset": 43, "nodeName": "mat", "type": "Any"}, {"lineNumber": 281, "col_offset": 61, "nodeName": "mat", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 27, "col_offset": 33, "nodeName": "eager_rhs", "type": "Any"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "eager_rhs", "type": "Any"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "solve", "type": "Any"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "clone", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "detach", "type": "Any"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "detach", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "detach", "type": "Any"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "detach", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "clone", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 88, "col_offset": 53, "nodeName": "math", "type": "module"}, {"lineNumber": 88, "col_offset": 83, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "warnings", "type": "module"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "inv_matmul", "type": "Any"}, {"lineNumber": 92, "col_offset": 53, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 92, "col_offset": 58, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 93, "col_offset": 66, "nodeName": "rhs_copy", "type": "Any"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "inv_matmul", "type": "Any"}, {"lineNumber": 95, "col_offset": 53, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 96, "col_offset": 60, "nodeName": "rhs_copy", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "self", "type": "TestCachedCGLazyTensorNoLogdet"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "self", "type": "TestCachedCGLazyTensorNoLogdet"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "warnings", "type": "module"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "res", "type": "Any"}, {"lineNumber": 103, "col_offset": 42, "nodeName": "grad", "type": "Any"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "actual", "type": "Any"}, {"lineNumber": 104, "col_offset": 45, "nodeName": "grad", "type": "Any"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "representation", "type": "Any"}, {"lineNumber": 105, "col_offset": 75, "nodeName": "representation", "type": "Any"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "grad", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "self", "type": "TestCachedCGLazyTensorNoLogdet"}, {"lineNumber": 108, "col_offset": 40, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 108, "col_offset": 50, "nodeName": "rhs_copy", "type": "Any"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "assertAllClose", "type": "Callable[..., bool]"}, {"lineNumber": 110, "col_offset": 44, "nodeName": "grad", "type": "Any"}, {"lineNumber": 110, "col_offset": 54, "nodeName": "grad", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "assertEqual", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "should_call_cg", "type": "bool"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "assertFalse", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "called", "type": "Any"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "eager_rhss", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "clone", "type": "Any"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "clone", "type": "Any"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 161, "col_offset": 44, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 161, "col_offset": 56, "nodeName": "ExtraComputationWarning", "type": "Type[gpytorch.lazy.cached_cg_lazy_tensor.ExtraComputationWarning]"}, {"lineNumber": 161, "col_offset": 85, "nodeName": "w", "type": "warnings.WarningMessage"}, {"lineNumber": 161, "col_offset": 90, "nodeName": "ws", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "mul", "type": "Any"}, {"lineNumber": 164, "col_offset": 68, "nodeName": "vecs_copy", "type": "Any"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 166, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 170, "col_offset": 38, "nodeName": "actual", "type": "Any"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "diff", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "clone", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "clone", "type": "Any"}, {"lineNumber": 186, "col_offset": 33, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 186, "col_offset": 44, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 186, "col_offset": 56, "nodeName": "ExtraComputationWarning", "type": "Type[gpytorch.lazy.cached_cg_lazy_tensor.ExtraComputationWarning]"}, {"lineNumber": 186, "col_offset": 85, "nodeName": "w", "type": "warnings.WarningMessage"}, {"lineNumber": 186, "col_offset": 90, "nodeName": "ws", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "mul", "type": "Any"}, {"lineNumber": 189, "col_offset": 68, "nodeName": "vecs_copy", "type": "Any"}, {"lineNumber": 191, "col_offset": 13, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 191, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 195, "col_offset": 38, "nodeName": "actual", "type": "Any"}, {"lineNumber": 196, "col_offset": 24, "nodeName": "diff", "type": "Any"}, {"lineNumber": 210, "col_offset": 17, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "eager_rhs", "type": "Any"}, {"lineNumber": 214, "col_offset": 30, "nodeName": "eager_rhs", "type": "Any"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "solve", "type": "Any"}, {"lineNumber": 238, "col_offset": 17, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 240, "col_offset": 33, "nodeName": "eager_rhs", "type": "Any"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "eager_rhs", "type": "Any"}, {"lineNumber": 243, "col_offset": 26, "nodeName": "solve", "type": "Any"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 271, "col_offset": 33, "nodeName": "eager_rhs", "type": "Any"}, {"lineNumber": 273, "col_offset": 30, "nodeName": "eager_rhs", "type": "Any"}, {"lineNumber": 274, "col_offset": 26, "nodeName": "solve", "type": "Any"}, {"lineNumber": 29, "col_offset": 50, "nodeName": "eager_rhs", "type": "Any"}, {"lineNumber": 30, "col_offset": 42, "nodeName": "solve", "type": "Any"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "clone", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "clone", "type": "Any"}, {"lineNumber": 92, "col_offset": 30, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "lhs_copy", "type": "Any"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 105, "col_offset": 75, "nodeName": "lazy_tensor_copy", "type": "Any"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "arg_copy", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "assertAllClose", "type": "Callable[..., bool]"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "grad", "type": "Any"}, {"lineNumber": 107, "col_offset": 58, "nodeName": "grad", "type": "Any"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "self", "type": "TestCachedCGLazyTensorNoLogdet"}, {"lineNumber": 110, "col_offset": 44, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 110, "col_offset": 54, "nodeName": "lhs_copy", "type": "Any"}, {"lineNumber": 115, "col_offset": 24, "nodeName": "self", "type": "TestCachedCGLazyTensorNoLogdet"}, {"lineNumber": 115, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "cholesky", "type": "Any"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "__class__", "type": "Type[TestCachedCGLazyTensorNoLogdet]"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 44, "nodeName": "called", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "self", "type": "TestCachedCGLazyTensorNoLogdet"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "self", "type": "TestCachedCGLazyTensorNoLogdet"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "linear_cg_mock", "type": "Any"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor"}, {"lineNumber": 161, "col_offset": 44, "nodeName": "w", "type": "warnings.WarningMessage"}, {"lineNumber": 166, "col_offset": 72, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 186, "col_offset": 44, "nodeName": "w", "type": "warnings.WarningMessage"}, {"lineNumber": 191, "col_offset": 72, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 214, "col_offset": 50, "nodeName": "eager_rhs", "type": "Any"}, {"lineNumber": 215, "col_offset": 42, "nodeName": "solve", "type": "Any"}, {"lineNumber": 242, "col_offset": 50, "nodeName": "eager_rhs", "type": "Any"}, {"lineNumber": 243, "col_offset": 42, "nodeName": "solve", "type": "Any"}, {"lineNumber": 273, "col_offset": 50, "nodeName": "eager_rhs", "type": "Any"}, {"lineNumber": 274, "col_offset": 42, "nodeName": "solve", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "clone", "type": "Any"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "clone", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "clone", "type": "Any"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "clone", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "lhs", "type": "Any"}, {"lineNumber": 93, "col_offset": 44, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 98, "col_offset": 52, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 98, "col_offset": 64, "nodeName": "ExtraComputationWarning", "type": "Type[gpytorch.lazy.cached_cg_lazy_tensor.ExtraComputationWarning]"}, {"lineNumber": 98, "col_offset": 93, "nodeName": "w", "type": "warnings.WarningMessage"}, {"lineNumber": 98, "col_offset": 98, "nodeName": "ws", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "self", "type": "TestCachedCGLazyTensorNoLogdet"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "arg", "type": "Any"}, {"lineNumber": 107, "col_offset": 58, "nodeName": "arg_copy", "type": "Any"}, {"lineNumber": 115, "col_offset": 46, "nodeName": "w", "type": "warnings.WarningMessage"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "self", "type": "TestCachedCGLazyTensorNoLogdet"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "self", "type": "TestCachedCGLazyTensorNoLogdet"}, {"lineNumber": 117, "col_offset": 44, "nodeName": "linear_cg_mock", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "eager_rhss", "type": "Any"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "eager_rhss", "type": "Any"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 164, "col_offset": 53, "nodeName": "vecs_copy", "type": "Any"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "logdet", "type": "Any"}, {"lineNumber": 166, "col_offset": 78, "nodeName": "numel", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "eager_rhss", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "eager_rhss", "type": "Any"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 189, "col_offset": 53, "nodeName": "vecs_copy", "type": "Any"}, {"lineNumber": 191, "col_offset": 13, "nodeName": "logdet", "type": "Any"}, {"lineNumber": 191, "col_offset": 78, "nodeName": "numel", "type": "Any"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 93, "col_offset": 44, "nodeName": "evaluated", "type": "Any"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "evaluated", "type": "Any"}, {"lineNumber": 98, "col_offset": 52, "nodeName": "w", "type": "warnings.WarningMessage"}, {"lineNumber": 115, "col_offset": 52, "nodeName": "w", "type": "warnings.WarningMessage"}, {"lineNumber": 115, "col_offset": 57, "nodeName": "ws", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 119, "col_offset": 45, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 119, "col_offset": 56, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 119, "col_offset": 68, "nodeName": "ExtraComputationWarning", "type": "Type[gpytorch.lazy.cached_cg_lazy_tensor.ExtraComputationWarning]"}, {"lineNumber": 119, "col_offset": 97, "nodeName": "w", "type": "warnings.WarningMessage"}, {"lineNumber": 119, "col_offset": 102, "nodeName": "ws", "type": "List[warnings.WarningMessage]"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor"}, {"lineNumber": 166, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 166, "col_offset": 26, "nodeName": "flattened_evaluated", "type": "Any"}, {"lineNumber": 166, "col_offset": 78, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor"}, {"lineNumber": 191, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 191, "col_offset": 26, "nodeName": "flattened_evaluated", "type": "Any"}, {"lineNumber": 191, "col_offset": 78, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "eager_rhss", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 115, "col_offset": 63, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 115, "col_offset": 74, "nodeName": "category", "type": "Type[Warning]"}, {"lineNumber": 115, "col_offset": 86, "nodeName": "ExtraComputationWarning", "type": "Type[gpytorch.lazy.cached_cg_lazy_tensor.ExtraComputationWarning]"}, {"lineNumber": 119, "col_offset": 56, "nodeName": "w", "type": "warnings.WarningMessage"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 166, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 166, "col_offset": 78, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 191, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 191, "col_offset": 78, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.cached_cg_lazy_tensor.CachedCGLazyTensor"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "eager_rhss", "type": "Any"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 115, "col_offset": 74, "nodeName": "w", "type": "Any"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "evaluated", "type": "Any"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "evaluated", "type": "Any"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "eager_rhss", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "eager_rhss", "type": "Any"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "eager_rhss", "type": "Any"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "lazy_tensor", "type": "Any"}]