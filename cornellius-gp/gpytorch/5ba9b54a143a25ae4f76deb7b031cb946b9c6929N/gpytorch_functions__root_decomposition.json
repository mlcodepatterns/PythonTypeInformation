[{"lineNumber": 12, "col_offset": 24, "nodeName": "Function", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "representation_tree", "type": "Any"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "representation_tree", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "cls", "type": "Any"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "cls", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "size", "type": "Any"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "size", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "max_iter", "type": "Any"}, {"lineNumber": 28, "col_offset": 24, "nodeName": "max_iter", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "root", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "lazy_var", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "matmul_closure", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "_matmul", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "n_probes", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "q_mat", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "root_evals", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "root", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "root", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "to_save", "type": "List[Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 35, "col_offset": 17, "nodeName": "initial_vector", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "representation_tree", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "lazy_var", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "lanczos_tridiag", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "matmul_closure", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "max_iter", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "q_mat", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "t_mat", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "q_mat", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "t_mat", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "size", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "eigenvalues", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "eigenvectors", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "lanczos_tridiag_to_diag", "type": "Any"}, {"lineNumber": 67, "col_offset": 60, "nodeName": "t_mat", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "eigenvectors", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "new", "type": "Any"}, {"lineNumber": 76, "col_offset": 18, "nodeName": "new", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "root", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "save_for_backward", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "_lazy_var", "type": "Any"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "lazy_var", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "root", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "n_probes", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "root", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "root", "type": "Any"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "needs_input_grad", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "is_batch", "type": "bool"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "matrix_args", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "q_mat", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "root_evals", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "left_factor", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "right_factor", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "left_factor", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "left_factor", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "right_factor", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "right_factor", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "initial_vector", "type": "Any"}, {"lineNumber": 34, "col_offset": 42, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "matrix_args", "type": "Tuple[Any, ...]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "cls", "type": "Any"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "size", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "initial_vector", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "ndimension", "type": "Any"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "t_mat", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "q_mat", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "eigenvalues", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "q_mat", "type": "Any"}, {"lineNumber": 76, "col_offset": 18, "nodeName": "q_mat", "type": "Any"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "q_mat", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "q_mat", "type": "Any"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "matrix_args", "type": "Tuple[Any, ...]"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "q_mat", "type": "Any"}, {"lineNumber": 82, "col_offset": 46, "nodeName": "root_evals", "type": "Any"}, {"lineNumber": 82, "col_offset": 58, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "to_save", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "on", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 88, "col_offset": 56, "nodeName": "root", "type": "Any"}, {"lineNumber": 89, "col_offset": 65, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 91, "col_offset": 56, "nodeName": "root", "type": "Any"}, {"lineNumber": 92, "col_offset": 65, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "is_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "root_grad_output", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "root_grad_output", "type": "None"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "is_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "inverse_grad_output", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "inverse_grad_output", "type": "None"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "root_grad_output", "type": "Optional[Any]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "inverse_grad_output", "type": "Optional[Any]"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "saved_tensors", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "saved_tensors", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "saved_tensors", "type": "Any"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "saved_tensors", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "lazy_var", "type": "Any"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "_lazy_var", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "zero_", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "root_grad_output", "type": "Optional[Any]"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "inverse_grad_output", "type": "Optional[Any]"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "div", "type": "Any"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 157, "col_offset": 26, "nodeName": "view", "type": "Any"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "view", "type": "Any"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "_quad_form_derivative", "type": "Any"}, {"lineNumber": 160, "col_offset": 49, "nodeName": "left_factor", "type": "Any"}, {"lineNumber": 160, "col_offset": 62, "nodeName": "right_factor", "type": "Any"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "is_batch", "type": "bool"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "res", "type": "List[Any]"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "res", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "q_mat", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "t_mat", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "t_mat", "type": "Any"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "q_mat", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "t_mat", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "memory_efficient", "type": "Any"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "numel", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "numel", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 91, "col_offset": 38, "nodeName": "numel", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "numel", "type": "Any"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "root_grad_output", "type": "Any"}, {"lineNumber": 112, "col_offset": 20, "nodeName": "is_batch", "type": "bool"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "root_grad_output", "type": "Any"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "is_batch", "type": "bool"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "inverse_grad_output", "type": "Any"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "is_batch", "type": "bool"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "inverse_grad_output", "type": "Any"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "is_batch", "type": "bool"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "self", "type": "RootDecomposition"}, {"lineNumber": 138, "col_offset": 26, "nodeName": "q_mat", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "add_", "type": "Any"}, {"lineNumber": 143, "col_offset": 33, "nodeName": "root_grad_output", "type": "Optional[Any]"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "sub_", "type": "Any"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 157, "col_offset": 26, "nodeName": "left_factor", "type": "Any"}, {"lineNumber": 157, "col_offset": 43, "nodeName": "size", "type": "Any"}, {"lineNumber": 157, "col_offset": 64, "nodeName": "size", "type": "Any"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "right_factor", "type": "Any"}, {"lineNumber": 159, "col_offset": 45, "nodeName": "size", "type": "Any"}, {"lineNumber": 159, "col_offset": 66, "nodeName": "size", "type": "Any"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "lazy_var", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "root_evals", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "root_evals", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "settings", "type": "Any"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "root", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "root", "type": "Any"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 91, "col_offset": 38, "nodeName": "root", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "root", "type": "Any"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "ndimension", "type": "Any"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "ndimension", "type": "Any"}, {"lineNumber": 114, "col_offset": 39, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "ndimension", "type": "Any"}, {"lineNumber": 118, "col_offset": 42, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "ndimension", "type": "Any"}, {"lineNumber": 121, "col_offset": 42, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "new", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "left_factor", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "left_factor", "type": "Any"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "permute", "type": "Any"}, {"lineNumber": 157, "col_offset": 43, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 157, "col_offset": 64, "nodeName": "left_factor", "type": "Any"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "permute", "type": "Any"}, {"lineNumber": 159, "col_offset": 45, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 159, "col_offset": 66, "nodeName": "right_factor", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "item", "type": "Any"}, {"lineNumber": 163, "col_offset": 51, "nodeName": "res", "type": "Any"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "numel", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "root_grad_output", "type": "Optional[Any]"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "root_grad_output", "type": "Optional[Any]"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "root_grad_output", "type": "Optional[Any]"}, {"lineNumber": 114, "col_offset": 39, "nodeName": "root_grad_output", "type": "Optional[Any]"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "inverse_grad_output", "type": "Optional[Any]"}, {"lineNumber": 118, "col_offset": 42, "nodeName": "inverse_grad_output", "type": "Optional[Any]"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "inverse_grad_output", "type": "Optional[Any]"}, {"lineNumber": 121, "col_offset": 42, "nodeName": "inverse_grad_output", "type": "Optional[Any]"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "root_evals", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "size", "type": "Any"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "left_factor", "type": "Any"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "right_factor", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "item", "type": "Any"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "numel", "type": "Any"}, {"lineNumber": 100, "col_offset": 71, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "inverse", "type": "Any"}, {"lineNumber": 100, "col_offset": 47, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 147, "col_offset": 42, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 147, "col_offset": 42, "nodeName": "inverse_grad_output", "type": "Optional[Any]"}]