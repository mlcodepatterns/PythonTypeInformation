[{"lineNumber": 17, "col_offset": 18, "nodeName": "Module", "type": "Any"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "ABC", "type": "Type[abc.ABC]"}, {"lineNumber": 330, "col_offset": 32, "nodeName": "Likelihood", "type": "Type[Any]"}, {"lineNumber": 330, "col_offset": 44, "nodeName": "ABC", "type": "Type[abc.ABC]"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "_Likelihood", "type": "Type[_Likelihood]"}, {"lineNumber": 308, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "max_plate_nesting", "type": "Any"}, {"lineNumber": 20, "col_offset": 33, "nodeName": "max_plate_nesting", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "training", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "function_samples", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "likelihood_samples", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "likelihood_samples", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 310, "col_offset": 21, "nodeName": "_Likelihood", "type": "Type[_Likelihood]"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "quadrature", "type": "Any"}, {"lineNumber": 344, "col_offset": 8, "nodeName": "log_prob_lambda", "type": "Callable[[Any], Any]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "prob_lambda", "type": "Callable[[Any], Any]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "prob", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "sample_shape", "type": "None"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "sample_shape", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "sample_shape", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "self", "type": "_Likelihood"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "num_event_dims", "type": "int"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "rsample", "type": "Any"}, {"lineNumber": 34, "col_offset": 49, "nodeName": "sample_shape", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "forward", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "function_samples", "type": "Any"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "_draw_likelihood_samples", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 59, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "mean", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "_draw_likelihood_samples", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 59, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 51, "col_offset": 48, "nodeName": "observations", "type": "Any"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "logsumexp", "type": "Any"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "_draw_likelihood_samples", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "is_tensor", "type": "Any"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "input", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "_num_data", "type": "Any"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "val", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "_name_prefix", "type": "Any"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "val", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "training", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "plate_name", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "num_samples", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "max_plate_nesting", "type": "Union[Any, int]"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "scale", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 341, "col_offset": 8, "nodeName": "self", "type": "_OneDimensionalLikelihood"}, {"lineNumber": 341, "col_offset": 26, "nodeName": "GaussHermiteQuadrature1D", "type": "Any"}, {"lineNumber": 345, "col_offset": 19, "nodeName": "quadrature", "type": "Any"}, {"lineNumber": 345, "col_offset": 35, "nodeName": "log_prob_lambda", "type": "Callable[[Any], Any]"}, {"lineNumber": 345, "col_offset": 52, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 350, "col_offset": 15, "nodeName": "quadrature", "type": "Any"}, {"lineNumber": 350, "col_offset": 31, "nodeName": "prob_lambda", "type": "Callable[[Any], Any]"}, {"lineNumber": 350, "col_offset": 44, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 351, "col_offset": 15, "nodeName": "log", "type": "Any"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "Size", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "sample_shape", "type": "Any"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "event_shape", "type": "Any"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 32, "col_offset": 54, "nodeName": "mean", "type": "Any"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "Independent", "type": "Any"}, {"lineNumber": 33, "col_offset": 59, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "self", "type": "_Likelihood"}, {"lineNumber": 35, "col_offset": 47, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 35, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 75, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 38, "col_offset": 83, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 75, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 50, "col_offset": 83, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "likelihood_samples", "type": "Any"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 60, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 56, "col_offset": 68, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "__call__", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "input", "type": "Any"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "input", "type": "Any"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "MultivariateNormal", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "_num_data", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 23, "nodeName": "_name_prefix", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "num_event_dims", "type": "int"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "name_prefix", "type": "Any"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "value", "type": "Any"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "max", "type": "Callable"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "max_plate_nesting", "type": "Any"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "expected_log_prob", "type": "Callable[..., Any]"}, {"lineNumber": 179, "col_offset": 45, "nodeName": "observations", "type": "Any"}, {"lineNumber": 179, "col_offset": 59, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "get_fantasy_likelihood", "type": "Callable[..., Any]"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "log_marginal", "type": "Callable[..., Any]"}, {"lineNumber": 222, "col_offset": 40, "nodeName": "observations", "type": "Any"}, {"lineNumber": 222, "col_offset": 54, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 242, "col_offset": 19, "nodeName": "marginal", "type": "Callable[..., Any]"}, {"lineNumber": 242, "col_offset": 36, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 275, "col_offset": 16, "nodeName": "function_samples", "type": "Any"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "output_dist", "type": "Any"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "is_tensor", "type": "Any"}, {"lineNumber": 286, "col_offset": 31, "nodeName": "input", "type": "Any"}, {"lineNumber": 340, "col_offset": 26, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 340, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 345, "col_offset": 19, "nodeName": "self", "type": "_OneDimensionalLikelihood"}, {"lineNumber": 350, "col_offset": 15, "nodeName": "self", "type": "_OneDimensionalLikelihood"}, {"lineNumber": 351, "col_offset": 15, "nodeName": "prob", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "base_distributions", "type": "Any"}, {"lineNumber": 32, "col_offset": 54, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 32, "col_offset": 74, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "base_distributions", "type": "Any"}, {"lineNumber": 33, "col_offset": 74, "nodeName": "num_event_dims", "type": "int"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "log_prob", "type": "Any"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "observations", "type": "Any"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "sub", "type": "Any"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 62, "col_offset": 52, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "marginal", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "input", "type": "Any"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 122, "col_offset": 99, "nodeName": "GPInputWarning", "type": "Any"}, {"lineNumber": 133, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "event_shape", "type": "Any"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 144, "col_offset": 58, "nodeName": "mean", "type": "Any"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "Independent", "type": "Any"}, {"lineNumber": 145, "col_offset": 63, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "num_likelihood_samples", "type": "Any"}, {"lineNumber": 149, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 60, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 149, "col_offset": 64, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "plate", "type": "Any"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "plate_name", "type": "Any"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "sample_shape", "type": "Any"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "function_samples", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "function_samples", "type": "Any"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "sample_shape", "type": "Any"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "function_samples", "type": "Any"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "training", "type": "Any"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "function_samples", "type": "Any"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "forward", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 36, "nodeName": "function_samples", "type": "Any"}, {"lineNumber": 179, "col_offset": 75, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 179, "col_offset": 83, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 201, "col_offset": 52, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 222, "col_offset": 70, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 222, "col_offset": 78, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 242, "col_offset": 52, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 242, "col_offset": 60, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 257, "col_offset": 17, "nodeName": "plate", "type": "Any"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "sample", "type": "Any"}, {"lineNumber": 258, "col_offset": 53, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 274, "col_offset": 17, "nodeName": "plate", "type": "Any"}, {"lineNumber": 275, "col_offset": 35, "nodeName": "sample", "type": "Any"}, {"lineNumber": 275, "col_offset": 72, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 276, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 276, "col_offset": 35, "nodeName": "function_samples", "type": "Any"}, {"lineNumber": 277, "col_offset": 23, "nodeName": "sample_target", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 277, "col_offset": 42, "nodeName": "output_dist", "type": "Any"}, {"lineNumber": 277, "col_offset": 55, "nodeName": "target", "type": "Any"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "num_data", "type": "Any"}, {"lineNumber": 280, "col_offset": 69, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 281, "col_offset": 17, "nodeName": "scale", "type": "Any"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "sample", "type": "Any"}, {"lineNumber": 282, "col_offset": 60, "nodeName": "output_dist", "type": "Any"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 287, "col_offset": 23, "nodeName": "__call__", "type": "Callable[..., Any]"}, {"lineNumber": 287, "col_offset": 40, "nodeName": "input", "type": "Any"}, {"lineNumber": 289, "col_offset": 17, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 313, "col_offset": 96, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 318, "col_offset": 96, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 322, "col_offset": 99, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 327, "col_offset": 99, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 32, "col_offset": 74, "nodeName": "variance", "type": "Any"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "likelihood_samples", "type": "Any"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 65, "col_offset": 49, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 70, "col_offset": 76, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "warnings", "type": "module"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "base_distributions", "type": "Any"}, {"lineNumber": 144, "col_offset": 58, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 144, "col_offset": 78, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "base_distributions", "type": "Any"}, {"lineNumber": 145, "col_offset": 78, "nodeName": "num_event_dims", "type": "int"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "settings", "type": "Any"}, {"lineNumber": 149, "col_offset": 64, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 150, "col_offset": 17, "nodeName": "pyro", "type": "Any"}, {"lineNumber": 150, "col_offset": 45, "nodeName": "num_samples", "type": "Any"}, {"lineNumber": 152, "col_offset": 39, "nodeName": "sample", "type": "Any"}, {"lineNumber": 152, "col_offset": 51, "nodeName": "name_prefix", "type": "Any"}, {"lineNumber": 154, "col_offset": 39, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 156, "col_offset": 35, "nodeName": "sample_shape", "type": "Any"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 157, "col_offset": 53, "nodeName": "sample_shape", "type": "Any"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 160, "col_offset": 39, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 55, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 161, "col_offset": 63, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 201, "col_offset": 19, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 242, "col_offset": 19, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 257, "col_offset": 17, "nodeName": "pyro", "type": "Any"}, {"lineNumber": 257, "col_offset": 28, "nodeName": "name_prefix", "type": "Any"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "pyro", "type": "Any"}, {"lineNumber": 258, "col_offset": 28, "nodeName": "name_prefix", "type": "Any"}, {"lineNumber": 274, "col_offset": 17, "nodeName": "pyro", "type": "Any"}, {"lineNumber": 274, "col_offset": 28, "nodeName": "name_prefix", "type": "Any"}, {"lineNumber": 275, "col_offset": 35, "nodeName": "pyro", "type": "Any"}, {"lineNumber": 275, "col_offset": 47, "nodeName": "name_prefix", "type": "Any"}, {"lineNumber": 276, "col_offset": 54, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 276, "col_offset": 62, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 277, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 280, "col_offset": 38, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 280, "col_offset": 69, "nodeName": "output_dist", "type": "Any"}, {"lineNumber": 281, "col_offset": 17, "nodeName": "poutine", "type": "Any"}, {"lineNumber": 281, "col_offset": 42, "nodeName": "scale", "type": "Any"}, {"lineNumber": 282, "col_offset": 23, "nodeName": "pyro", "type": "Any"}, {"lineNumber": 282, "col_offset": 35, "nodeName": "name_prefix", "type": "Any"}, {"lineNumber": 282, "col_offset": 77, "nodeName": "target", "type": "Any"}, {"lineNumber": 287, "col_offset": 48, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 287, "col_offset": 56, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 299, "col_offset": 23, "nodeName": "marginal", "type": "Callable[..., Any]"}, {"lineNumber": 299, "col_offset": 37, "nodeName": "input", "type": "Any"}, {"lineNumber": 302, "col_offset": 22, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "value", "type": "Any"}, {"lineNumber": 32, "col_offset": 74, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "math", "type": "module"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "size", "type": "Any"}, {"lineNumber": 70, "col_offset": 76, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 144, "col_offset": 78, "nodeName": "variance", "type": "Any"}, {"lineNumber": 152, "col_offset": 39, "nodeName": "pyro", "type": "Any"}, {"lineNumber": 152, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 69, "nodeName": "mask", "type": "Any"}, {"lineNumber": 154, "col_offset": 39, "nodeName": "function_samples", "type": "Any"}, {"lineNumber": 160, "col_offset": 39, "nodeName": "function_samples", "type": "Any"}, {"lineNumber": 257, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 274, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 275, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 280, "col_offset": 38, "nodeName": "output_dist", "type": "Any"}, {"lineNumber": 281, "col_offset": 17, "nodeName": "pyro", "type": "Any"}, {"lineNumber": 282, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 287, "col_offset": 23, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 291, "col_offset": 20, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 291, "col_offset": 31, "nodeName": "input", "type": "Any"}, {"lineNumber": 291, "col_offset": 38, "nodeName": "MultivariateNormal", "type": "Any"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 292, "col_offset": 31, "nodeName": "input", "type": "Any"}, {"lineNumber": 292, "col_offset": 38, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 299, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 299, "col_offset": 45, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 299, "col_offset": 53, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 304, "col_offset": 80, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "num_likelihood_samples", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "max_plate_nesting", "type": "Any"}, {"lineNumber": 29, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 29, "col_offset": 47, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 70, "col_offset": 76, "nodeName": "input", "type": "Any"}, {"lineNumber": 144, "col_offset": 78, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 150, "col_offset": 64, "nodeName": "max_plate_nesting", "type": "Union[Any, int]"}, {"lineNumber": 152, "col_offset": 69, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 292, "col_offset": 38, "nodeName": "distributions", "type": "Any"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 294, "col_offset": 35, "nodeName": "input", "type": "Any"}, {"lineNumber": 294, "col_offset": 42, "nodeName": "Independent", "type": "Any"}, {"lineNumber": 295, "col_offset": 28, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 295, "col_offset": 39, "nodeName": "base_dist", "type": "Any"}, {"lineNumber": 295, "col_offset": 56, "nodeName": "Normal", "type": "Any"}, {"lineNumber": 304, "col_offset": 80, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "settings", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "self", "type": "_Likelihood"}, {"lineNumber": 26, "col_offset": 50, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 26, "col_offset": 54, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 29, "col_offset": 47, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 154, "col_offset": 65, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 154, "col_offset": 69, "nodeName": "event_shape", "type": "Any"}, {"lineNumber": 156, "col_offset": 51, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 156, "col_offset": 55, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 160, "col_offset": 65, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 160, "col_offset": 69, "nodeName": "event_shape", "type": "Any"}, {"lineNumber": 292, "col_offset": 38, "nodeName": "pyro", "type": "Any"}, {"lineNumber": 294, "col_offset": 42, "nodeName": "distributions", "type": "Any"}, {"lineNumber": 295, "col_offset": 39, "nodeName": "input", "type": "Any"}, {"lineNumber": 295, "col_offset": 56, "nodeName": "distributions", "type": "Any"}, {"lineNumber": 304, "col_offset": 80, "nodeName": "input", "type": "Any"}, {"lineNumber": 26, "col_offset": 54, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 154, "col_offset": 69, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 156, "col_offset": 55, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 160, "col_offset": 69, "nodeName": "function_dist", "type": "Any"}, {"lineNumber": 294, "col_offset": 42, "nodeName": "pyro", "type": "Any"}, {"lineNumber": 295, "col_offset": 56, "nodeName": "pyro", "type": "Any"}]