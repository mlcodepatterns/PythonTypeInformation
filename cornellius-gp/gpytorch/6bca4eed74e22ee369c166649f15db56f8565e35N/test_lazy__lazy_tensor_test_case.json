[{"lineNumber": 13, "col_offset": 36, "nodeName": "BaseTestCase", "type": "Any"}, {"lineNumber": 241, "col_offset": 25, "nodeName": "RectangularLazyTensorTestCase", "type": "Type[RectangularLazyTensorTestCase]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "should_test_sample", "type": "bool"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "skip_slq_tests", "type": "bool"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "should_call_cg", "type": "bool"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "should_call_lanczos", "type": "bool"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "_wrapped_lanczos", "type": "unittest.mock.MagicMock"}, {"lineNumber": 475, "col_offset": 11, "nodeName": "should_test_sample", "type": "bool"}, {"lineNumber": 16, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 288, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 320, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 329, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 340, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 352, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 358, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "test_inv_matmul_matrix", "type": "Callable[..., Any]"}, {"lineNumber": 366, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 372, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 391, "col_offset": 15, "nodeName": "skip_slq_tests", "type": "bool"}, {"lineNumber": 413, "col_offset": 15, "nodeName": "skip_slq_tests", "type": "bool"}, {"lineNumber": 447, "col_offset": 27, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 448, "col_offset": 86, "nodeName": "lanczos_mock", "type": "Any"}, {"lineNumber": 462, "col_offset": 15, "nodeName": "test_root_decomposition", "type": "Callable[..., Any]"}, {"lineNumber": 465, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 475, "col_offset": 11, "nodeName": "__class__", "type": "Type[LazyTensorTestCase]"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 146, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 220, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 288, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 320, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 329, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 340, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 352, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 358, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 363, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 366, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 372, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 391, "col_offset": 15, "nodeName": "__class__", "type": "Type[LazyTensorTestCase]"}, {"lineNumber": 393, "col_offset": 26, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 413, "col_offset": 15, "nodeName": "__class__", "type": "Type[LazyTensorTestCase]"}, {"lineNumber": 415, "col_offset": 26, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 437, "col_offset": 13, "nodeName": "fast_computations", "type": "Type[gpytorch.settings.fast_computations]"}, {"lineNumber": 438, "col_offset": 26, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 447, "col_offset": 43, "nodeName": "lanczos_tridiag", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 448, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 449, "col_offset": 26, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 462, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 465, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 475, "col_offset": 11, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 208, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 391, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 393, "col_offset": 26, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 413, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 415, "col_offset": 26, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 437, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 438, "col_offset": 26, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 447, "col_offset": 43, "nodeName": "lanczos", "type": "module"}, {"lineNumber": 448, "col_offset": 65, "nodeName": "_wrapped_lanczos", "type": "unittest.mock.MagicMock"}, {"lineNumber": 449, "col_offset": 26, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 208, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 437, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 447, "col_offset": 43, "nodeName": "utils", "type": "module"}, {"lineNumber": 447, "col_offset": 43, "nodeName": "gpytorch", "type": "module"}]