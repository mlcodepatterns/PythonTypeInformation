[{"lineNumber": 14, "col_offset": 36, "nodeName": "BaseTestCase", "type": "Any"}, {"lineNumber": 242, "col_offset": 25, "nodeName": "RectangularLazyTensorTestCase", "type": "Type[RectangularLazyTensorTestCase]"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "should_test_sample", "type": "bool"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "skip_slq_tests", "type": "bool"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "should_call_cg", "type": "bool"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "should_call_lanczos", "type": "bool"}, {"lineNumber": 449, "col_offset": 8, "nodeName": "_wrapped_lanczos", "type": "unittest.mock.MagicMock"}, {"lineNumber": 479, "col_offset": 11, "nodeName": "should_test_sample", "type": "bool"}, {"lineNumber": 17, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 21, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 200, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 232, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "skip_slq_tests", "type": "bool"}, {"lineNumber": 327, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 359, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 368, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 379, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 391, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 397, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 402, "col_offset": 15, "nodeName": "test_inv_matmul_matrix", "type": "Callable[..., Any]"}, {"lineNumber": 405, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 411, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 430, "col_offset": 15, "nodeName": "_test_inv_quad_logdet", "type": "Callable[..., Any]"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "_test_inv_quad_logdet", "type": "Callable[..., Any]"}, {"lineNumber": 436, "col_offset": 15, "nodeName": "_test_inv_quad_logdet", "type": "Callable[..., Any]"}, {"lineNumber": 449, "col_offset": 27, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 450, "col_offset": 86, "nodeName": "lanczos_mock", "type": "Any"}, {"lineNumber": 466, "col_offset": 15, "nodeName": "test_root_decomposition", "type": "Callable[..., Any]"}, {"lineNumber": 469, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 479, "col_offset": 11, "nodeName": "__class__", "type": "Type[LazyTensorTestCase]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 80, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 200, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 221, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 232, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "__class__", "type": "Type[LazyTensorTestCase]"}, {"lineNumber": 294, "col_offset": 26, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 327, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 359, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 368, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 379, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 391, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 397, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 402, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 405, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 411, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 430, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 436, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 439, "col_offset": 13, "nodeName": "fast_computations", "type": "Type[gpytorch.settings.fast_computations]"}, {"lineNumber": 440, "col_offset": 26, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 449, "col_offset": 43, "nodeName": "lanczos_tridiag", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 450, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 451, "col_offset": 26, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 466, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 469, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 479, "col_offset": 11, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 249, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 294, "col_offset": 26, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 439, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 440, "col_offset": 26, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 449, "col_offset": 43, "nodeName": "lanczos", "type": "module"}, {"lineNumber": 450, "col_offset": 65, "nodeName": "_wrapped_lanczos", "type": "unittest.mock.MagicMock"}, {"lineNumber": 451, "col_offset": 26, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 249, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 439, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 449, "col_offset": 43, "nodeName": "utils", "type": "module"}, {"lineNumber": 449, "col_offset": 43, "nodeName": "gpytorch", "type": "module"}]