[{"lineNumber": 15, "col_offset": 36, "nodeName": "BaseTestCase", "type": "Any"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "RectangularLazyTensorTestCase", "type": "Type[RectangularLazyTensorTestCase]"}, {"lineNumber": 244, "col_offset": 4, "nodeName": "should_test_sample", "type": "bool"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "skip_slq_tests", "type": "bool"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "should_call_cg", "type": "bool"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "should_call_lanczos", "type": "bool"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "_wrapped_lanczos", "type": "unittest.mock.MagicMock"}, {"lineNumber": 478, "col_offset": 11, "nodeName": "should_test_sample", "type": "bool"}, {"lineNumber": 18, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "skip_slq_tests", "type": "bool"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 358, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 367, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 378, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 390, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 396, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 401, "col_offset": 15, "nodeName": "test_inv_matmul_matrix", "type": "Callable[..., Any]"}, {"lineNumber": 404, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 410, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 429, "col_offset": 15, "nodeName": "_test_inv_quad_logdet", "type": "Callable[..., Any]"}, {"lineNumber": 432, "col_offset": 15, "nodeName": "_test_inv_quad_logdet", "type": "Callable[..., Any]"}, {"lineNumber": 435, "col_offset": 15, "nodeName": "_test_inv_quad_logdet", "type": "Callable[..., Any]"}, {"lineNumber": 448, "col_offset": 27, "nodeName": "MagicMock", "type": "Type[unittest.mock.MagicMock]"}, {"lineNumber": 449, "col_offset": 86, "nodeName": "lanczos_mock", "type": "Any"}, {"lineNumber": 465, "col_offset": 15, "nodeName": "test_root_decomposition", "type": "Callable[..., Any]"}, {"lineNumber": 468, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 478, "col_offset": 11, "nodeName": "__class__", "type": "Type[LazyTensorTestCase]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 201, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 222, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "__class__", "type": "Type[LazyTensorTestCase]"}, {"lineNumber": 293, "col_offset": 26, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 326, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 358, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 367, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 378, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 390, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 396, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 401, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 404, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 410, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 429, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 432, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 435, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 438, "col_offset": 13, "nodeName": "fast_computations", "type": "Type[gpytorch.settings.fast_computations]"}, {"lineNumber": 439, "col_offset": 26, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 448, "col_offset": 43, "nodeName": "lanczos_tridiag", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 449, "col_offset": 13, "nodeName": "patch", "type": "unittest.mock._patcher"}, {"lineNumber": 450, "col_offset": 26, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 465, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 468, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 478, "col_offset": 11, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 293, "col_offset": 26, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 438, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 439, "col_offset": 26, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 448, "col_offset": 43, "nodeName": "lanczos", "type": "module"}, {"lineNumber": 449, "col_offset": 65, "nodeName": "_wrapped_lanczos", "type": "unittest.mock.MagicMock"}, {"lineNumber": 450, "col_offset": 26, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "self", "type": "RectangularLazyTensorTestCase"}, {"lineNumber": 250, "col_offset": 22, "nodeName": "self", "type": "LazyTensorTestCase"}, {"lineNumber": 438, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 448, "col_offset": 43, "nodeName": "utils", "type": "module"}, {"lineNumber": 448, "col_offset": 43, "nodeName": "gpytorch", "type": "module"}]