[{"lineNumber": 33, "col_offset": 0, "nodeName": "test_gp_prior_and_likelihood", "type": "Callable[[], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "test_posterior_latent_gp_and_likelihood_without_optimization", "type": "Callable[[], Any]"}, {"lineNumber": 79, "col_offset": 0, "nodeName": "test_posterior_latent_gp_and_likelihood_with_optimization", "type": "Callable[[], Any]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "GPModel", "type": "Type[gpytorch.gp_model.GPModel]"}, {"lineNumber": 13, "col_offset": 10, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 14, "col_offset": 10, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 16, "col_offset": 9, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "prior_gp_model", "type": "ExactGPModel"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "function_predictions", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "least_covar", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "prior_gp_model", "type": "ExactGPModel"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "infer", "type": "gpytorch.inference.inference.Inference"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "posterior_gp_model", "type": "Any"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "function_predictions", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "prior_gp_model", "type": "ExactGPModel"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "infer", "type": "gpytorch.inference.inference.Inference"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "posterior_gp_model", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "n_iter", "type": "int"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "mean_abs_error", "type": "Any"}, {"lineNumber": 13, "col_offset": 19, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "sin", "type": "Any"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "sin", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "mean_module", "type": "gpytorch.means.constant_mean.ConstantMean"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "covar_module", "type": "gpytorch.kernels.rbf_kernel.RBFKernel"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "mean_x", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "covar_x", "type": "Any"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "initialize", "type": "Callable"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "initialize", "type": "Callable"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "prior_gp_model", "type": "ExactGPModel"}, {"lineNumber": 41, "col_offset": 42, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "set_bounds", "type": "Callable"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "set_bounds", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "initialize", "type": "Callable"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "initialize", "type": "Callable"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "Inference", "type": "Type[gpytorch.inference.inference.Inference]"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "prior_gp_model", "type": "ExactGPModel"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "run", "type": "Callable[..., Any]"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "eval", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "posterior_gp_model", "type": "Any"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "posterior_gp_model", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "initialize", "type": "Callable"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "initialize", "type": "Callable"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "Inference", "type": "Type[gpytorch.inference.inference.Inference]"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "prior_gp_model", "type": "ExactGPModel"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "run", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "train", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 94, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "n_iter", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "eval", "type": "Any"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "posterior_gp_model", "type": "Any"}, {"lineNumber": 104, "col_offset": 51, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "mean", "type": "Any"}, {"lineNumber": 13, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 14, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "GaussianLikelihood", "type": "Type[gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 23, "col_offset": 43, "nodeName": "likelihood", "type": "gpytorch.likelihoods.gaussian_likelihood.GaussianLikelihood"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "ExactGPModel"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "ConstantMean", "type": "Type[gpytorch.means.constant_mean.ConstantMean]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "ExactGPModel"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "RBFKernel", "type": "Type[gpytorch.kernels.rbf_kernel.RBFKernel]"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "mean_module", "type": "gpytorch.means.constant_mean.ConstantMean"}, {"lineNumber": 28, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "covar_module", "type": "gpytorch.kernels.rbf_kernel.RBFKernel"}, {"lineNumber": 29, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "GaussianRandomVariable", "type": "Type[gpytorch.random_variables.gaussian_random_variable.GaussianRandomVariable]"}, {"lineNumber": 30, "col_offset": 38, "nodeName": "mean_x", "type": "Any"}, {"lineNumber": 30, "col_offset": 46, "nodeName": "covar_x", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "covar_module", "type": "gpytorch.kernels.rbf_kernel.RBFKernel"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "mean_module", "type": "gpytorch.means.constant_mean.ConstantMean"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "likelihood", "type": "Callable[[], Any]"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "norm", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "norm", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "fabs", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "covar_module", "type": "gpytorch.kernels.rbf_kernel.RBFKernel"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "likelihood", "type": "Callable[[], Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "covar_module", "type": "gpytorch.kernels.rbf_kernel.RBFKernel"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "mean_module", "type": "gpytorch.means.constant_mean.ConstantMean"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "likelihood", "type": "Callable[[], Any]"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "infer", "type": "gpytorch.inference.inference.Inference"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "posterior_gp_model", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "norm", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "norm", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 73, "col_offset": 51, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "norm", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "norm", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "covar_module", "type": "gpytorch.kernels.rbf_kernel.RBFKernel"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "mean_module", "type": "gpytorch.means.constant_mean.ConstantMean"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "likelihood", "type": "Callable[[], Any]"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "infer", "type": "gpytorch.inference.inference.Inference"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "posterior_gp_model", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "optim", "type": "Any"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "posterior_gp_model", "type": "Any"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "posterior_gp_model", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "abs", "type": "Any"}, {"lineNumber": 14, "col_offset": 29, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 14, "col_offset": 49, "nodeName": "pi", "type": "float"}, {"lineNumber": 17, "col_offset": 28, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 17, "col_offset": 47, "nodeName": "pi", "type": "float"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "self", "type": "ExactGPModel"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "self", "type": "ExactGPModel"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "prior_gp_model", "type": "ExactGPModel"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "prior_gp_model", "type": "ExactGPModel"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "prior_gp_model", "type": "ExactGPModel"}, {"lineNumber": 37, "col_offset": 51, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "covar", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "math", "type": "module"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "least_covar", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "prior_gp_model", "type": "ExactGPModel"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "prior_gp_model", "type": "ExactGPModel"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "prior_gp_model", "type": "ExactGPModel"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "prior_gp_model", "type": "ExactGPModel"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "prior_gp_model", "type": "ExactGPModel"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 69, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 73, "col_offset": 60, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "prior_gp_model", "type": "ExactGPModel"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "prior_gp_model", "type": "ExactGPModel"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "prior_gp_model", "type": "ExactGPModel"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "posterior_gp_model", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "marginal_log_likelihood", "type": "Any"}, {"lineNumber": 97, "col_offset": 59, "nodeName": "output", "type": "Any"}, {"lineNumber": 97, "col_offset": 67, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 14, "col_offset": 49, "nodeName": "math", "type": "module"}, {"lineNumber": 17, "col_offset": 47, "nodeName": "math", "type": "module"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 23, "col_offset": 14, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "self", "type": "ExactGPModel"}, {"lineNumber": 37, "col_offset": 51, "nodeName": "math", "type": "module"}, {"lineNumber": 46, "col_offset": 18, "nodeName": "function_predictions", "type": "Any"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 69, "col_offset": 57, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "var", "type": "Any"}, {"lineNumber": 73, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "posterior_gp_model", "type": "Any"}, {"lineNumber": 105, "col_offset": 51, "nodeName": "mean", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "mean", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "var", "type": "Any"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "math", "type": "module"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "mean", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "function_predictions", "type": "Any"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "mean", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "var", "type": "Any"}, {"lineNumber": 105, "col_offset": 51, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "mean_abs_error", "type": "Any"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "function_predictions", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "function_predictions", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "function_predictions", "type": "Any"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "test_function_predictions", "type": "Any"}]