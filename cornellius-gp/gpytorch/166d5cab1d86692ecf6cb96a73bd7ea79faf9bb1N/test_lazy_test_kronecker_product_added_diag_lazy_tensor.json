[{"lineNumber": 13, "col_offset": 46, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 13, "col_offset": 65, "nodeName": "LazyTensorTestCase", "type": "Type[gpytorch.test.lazy_tensor_test_case.LazyTensorTestCase]"}, {"lineNumber": 13, "col_offset": 46, "nodeName": "unittest", "type": "module"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "skip_slq_tests", "type": "bool"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "should_call_lanczos", "type": "bool"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "should_call_cg", "type": "bool"}, {"lineNumber": 57, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "kp_lazy_tensor", "type": "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "diag", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "_diag", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "KroneckerProductLazyTensor", "type": "Type[gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor]"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "KroneckerProductAddedDiagLazyTensor", "type": "Type[gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor]"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "kp_lazy_tensor", "type": "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "evaluate", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "_diag_tensor", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "randn", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "_test_inv_matmul", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "rhs", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "root_approx", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "test_mat", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "res", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "actual", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 20, "col_offset": 68, "nodeName": "float", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 21, "col_offset": 49, "nodeName": "float", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 22, "col_offset": 95, "nodeName": "float", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 26, "col_offset": 52, "nodeName": "NonLazyTensor", "type": "Type[gpytorch.lazy.non_lazy_tensor.NonLazyTensor]"}, {"lineNumber": 26, "col_offset": 66, "nodeName": "a", "type": "Any"}, {"lineNumber": 26, "col_offset": 70, "nodeName": "NonLazyTensor", "type": "Type[gpytorch.lazy.non_lazy_tensor.NonLazyTensor]"}, {"lineNumber": 26, "col_offset": 84, "nodeName": "b", "type": "Any"}, {"lineNumber": 26, "col_offset": 88, "nodeName": "NonLazyTensor", "type": "Type[gpytorch.lazy.non_lazy_tensor.NonLazyTensor]"}, {"lineNumber": 26, "col_offset": 102, "nodeName": "c", "type": "Any"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "DiagLazyTensor", "type": "Type[gpytorch.lazy.diag_lazy_tensor.DiagLazyTensor]"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "_lazy_tensor", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "diag", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "self", "type": "TestKroneckerProductAddedDiagLazyTensor"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "size", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "TestKroneckerProductAddedDiagLazyTensor"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "TestKroneckerProductAddedDiagLazyTensor"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "is_cached", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "max_cholesky_size", "type": "Type[gpytorch.settings.max_cholesky_size]"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "create_lazy_tensor", "type": "Callable[[], Any]"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "root_inv_decomposition", "type": "Any"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "randn", "type": "Any"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "test_mat", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "inv_matmul", "type": "Any"}, {"lineNumber": 52, "col_offset": 44, "nodeName": "test_mat", "type": "Any"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "assertAllClose", "type": "Callable[..., bool]"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "res", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "actual", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 68, "nodeName": "torch", "type": "Any"}, {"lineNumber": 21, "col_offset": 49, "nodeName": "torch", "type": "Any"}, {"lineNumber": 22, "col_offset": 95, "nodeName": "torch", "type": "Any"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "lazy_tensor", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "diag", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "self", "type": "TestKroneckerProductAddedDiagLazyTensor"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "batch_shape", "type": "Any"}, {"lineNumber": 49, "col_offset": 61, "nodeName": "size", "type": "Any"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "root_approx", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "TestKroneckerProductAddedDiagLazyTensor"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "TestKroneckerProductAddedDiagLazyTensor"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "is_cached", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor"}, {"lineNumber": 29, "col_offset": 49, "nodeName": "ones", "type": "Any"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor"}, {"lineNumber": 49, "col_offset": 61, "nodeName": "lazy_tensor", "type": "gpytorch.lazy.kronecker_product_added_diag_lazy_tensor.KroneckerProductAddedDiagLazyTensor"}, {"lineNumber": 29, "col_offset": 49, "nodeName": "torch", "type": "Any"}, {"lineNumber": 29, "col_offset": 60, "nodeName": "shape", "type": "Any"}, {"lineNumber": 29, "col_offset": 60, "nodeName": "kp_lazy_tensor", "type": "gpytorch.lazy.kronecker_product_lazy_tensor.KroneckerProductLazyTensor"}]