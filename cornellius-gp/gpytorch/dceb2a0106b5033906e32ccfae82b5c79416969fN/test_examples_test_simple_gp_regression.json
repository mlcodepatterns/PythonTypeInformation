[{"lineNumber": 20, "col_offset": 19, "nodeName": "ExactGP", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "forward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "BaseTestCase", "type": "Any"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "_get_data", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "test_prior", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "test_prior_cuda", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "test_recursive_initialize", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "test_posterior_latent_gp_and_likelihood_without_optimization", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "test_posterior_latent_gp_and_likelihood_without_optimization_cuda", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "test_gp_posterior_mean_skip_variances_fast_cuda", "type": "Callable[[Any], Any]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "test_gp_posterior_mean_skip_variances_slow_cuda", "type": "Callable[[Any], Any]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "test_gp_posterior_single_training_point_smoke_test", "type": "Callable[[Any], Any]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "test_posterior_latent_gp_and_likelihood_with_optimization", "type": "Callable[..., Any]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "test_gp_with_checkpointing", "type": "Callable[..., Any]"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "test_fantasy_updates_cuda", "type": "Callable[[Any], Any]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "test_fantasy_updates", "type": "Callable[..., Any]"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "test_fantasy_updates_batch_cuda", "type": "Callable[[Any], Any]"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "test_fantasy_updates_batch", "type": "Callable[..., Any]"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "test_posterior_latent_gp_and_likelihood_with_optimization_cuda", "type": "Callable[[Any], Any]"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "test_posterior_with_exact_computations", "type": "Callable[[Any], Any]"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "test_posterior_with_exact_computations_cuda", "type": "Callable[[Any], Any]"}, {"lineNumber": 398, "col_offset": 4, "nodeName": "test_posterior_latent_gp_and_likelihood_fast_pred_var", "type": "Callable[..., Any]"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "test_pyro_sampling", "type": "Callable[[Any], Any]"}, {"lineNumber": 487, "col_offset": 4, "nodeName": "test_posterior_latent_gp_and_likelihood_fast_pred_var_cuda", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "models", "type": "module"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "unittest", "type": "module"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 493, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "mean_module", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "covar_module", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "mean_x", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "covar_x", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "device", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "add_noise", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "function_predictions", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "correct_variance", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "likelihood_1", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "gp_model_1", "type": "ExactGPModel"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "likelihood_2", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "gp_model_2", "type": "ExactGPModel"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "preds", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "single_mean", "type": "Any"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "mean", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "single_variance", "type": "Any"}, {"lineNumber": 211, "col_offset": 26, "nodeName": "variance", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "mll", "type": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "mean_abs_error", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "mll", "type": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"}, {"lineNumber": 276, "col_offset": 11, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "mll", "type": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"}, {"lineNumber": 342, "col_offset": 11, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 453, "col_offset": 8, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 462, "col_offset": 8, "nodeName": "mll", "type": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"}, {"lineNumber": 470, "col_offset": 8, "nodeName": "nuts_kernel", "type": "Any"}, {"lineNumber": 471, "col_offset": 8, "nodeName": "mcmc_run", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "expanded_test_x", "type": "Any"}, {"lineNumber": 478, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "main", "type": "Callable[..., unittest.TestProgram]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 22, "col_offset": 43, "nodeName": "train_inputs", "type": "Any"}, {"lineNumber": 22, "col_offset": 57, "nodeName": "train_targets", "type": "Any"}, {"lineNumber": 22, "col_offset": 72, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "ExactGPModel"}, {"lineNumber": 23, "col_offset": 27, "nodeName": "ConstantMean", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "ExactGPModel"}, {"lineNumber": 24, "col_offset": 28, "nodeName": "ScaleKernel", "type": "Any"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "mean_module", "type": "Any"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "x", "type": "Any"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "covar_module", "type": "Any"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "MultivariateNormal", "type": "Any"}, {"lineNumber": 29, "col_offset": 34, "nodeName": "mean_x", "type": "Any"}, {"lineNumber": 29, "col_offset": 42, "nodeName": "covar_x", "type": "Any"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 38, "col_offset": 39, "nodeName": "num_data", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "sin", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "sin", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 44, "col_offset": 41, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "_get_data", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "GaussianLikelihood", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 53, "col_offset": 44, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "register_prior", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "outputscale", "type": "Any"}, {"lineNumber": 72, "col_offset": 63, "nodeName": "noise", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "mean", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "variance", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 85, "col_offset": 34, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "_get_data", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 23, "nodeName": "GaussianLikelihood", "type": "Any"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 88, "col_offset": 43, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "likelihood_1", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "GaussianLikelihood", "type": "Any"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 91, "col_offset": 52, "nodeName": "likelihood_2", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "simplefilter", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 40, "nodeName": "NumericalWarning", "type": "Type[gpytorch.utils.warnings.NumericalWarning]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 105, "col_offset": 43, "nodeName": "_get_data", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "GaussianLikelihood", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 108, "col_offset": 50, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "function_predictions", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "mean", "type": "Any"}, {"lineNumber": 125, "col_offset": 55, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "variance", "type": "Any"}, {"lineNumber": 129, "col_offset": 36, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 131, "col_offset": 28, "nodeName": "mean", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "variance", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "mean", "type": "Any"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "mean", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "likelihood_mean", "type": "Any"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "mean", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 189, "col_offset": 34, "nodeName": "_", "type": "Any"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "_get_data", "type": "Callable[..., Any]"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 191, "col_offset": 18, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 192, "col_offset": 21, "nodeName": "GaussianLikelihood", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 193, "col_offset": 32, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 193, "col_offset": 41, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 193, "col_offset": 50, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "preds", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "single_mean", "type": "Any"}, {"lineNumber": 200, "col_offset": 26, "nodeName": "mean", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "single_variance", "type": "Any"}, {"lineNumber": 201, "col_offset": 30, "nodeName": "variance", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 210, "col_offset": 22, "nodeName": "preds", "type": "Any"}, {"lineNumber": 211, "col_offset": 26, "nodeName": "preds", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 217, "col_offset": 43, "nodeName": "_get_data", "type": "Callable[..., Any]"}, {"lineNumber": 221, "col_offset": 21, "nodeName": "GaussianLikelihood", "type": "Any"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 222, "col_offset": 32, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 222, "col_offset": 41, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 222, "col_offset": 50, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "ExactMarginalLogLikelihood", "type": "Type[gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood]"}, {"lineNumber": 223, "col_offset": 50, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 223, "col_offset": 62, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "test_posterior_latent_gp_and_likelihood_with_optimization", "type": "Callable[..., Any]"}, {"lineNumber": 262, "col_offset": 11, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 267, "col_offset": 17, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 267, "col_offset": 34, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 267, "col_offset": 43, "nodeName": "_get_data", "type": "Callable[..., Any]"}, {"lineNumber": 269, "col_offset": 21, "nodeName": "GaussianLikelihood", "type": "Any"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 270, "col_offset": 32, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 270, "col_offset": 41, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 270, "col_offset": 50, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 271, "col_offset": 14, "nodeName": "ExactMarginalLogLikelihood", "type": "Type[gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood]"}, {"lineNumber": 271, "col_offset": 50, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 271, "col_offset": 62, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 284, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 288, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 292, "col_offset": 21, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "set_train_data", "type": "Any"}, {"lineNumber": 298, "col_offset": 32, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 298, "col_offset": 41, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "real_fant_x_grad", "type": "Any"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "grad", "type": "None"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "fantasy_x", "type": "Any"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "fant_model", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "fant_function_predictions", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "relative_error", "type": "Any"}, {"lineNumber": 328, "col_offset": 11, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 333, "col_offset": 17, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 333, "col_offset": 25, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 333, "col_offset": 34, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 333, "col_offset": 43, "nodeName": "_get_data", "type": "Callable[..., Any]"}, {"lineNumber": 335, "col_offset": 21, "nodeName": "GaussianLikelihood", "type": "Any"}, {"lineNumber": 336, "col_offset": 19, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 336, "col_offset": 32, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 336, "col_offset": 41, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 336, "col_offset": 50, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 337, "col_offset": 14, "nodeName": "ExactMarginalLogLikelihood", "type": "Type[gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood]"}, {"lineNumber": 337, "col_offset": 50, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 337, "col_offset": 62, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 349, "col_offset": 20, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 350, "col_offset": 17, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 358, "col_offset": 21, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "fantasy_x", "type": "Any"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "fantasy_y", "type": "Any"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "fant_model", "type": "Any"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "fant_function_predictions", "type": "Any"}, {"lineNumber": 384, "col_offset": 11, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 393, "col_offset": 11, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 399, "col_offset": 8, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 399, "col_offset": 17, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 399, "col_offset": 25, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 399, "col_offset": 34, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 399, "col_offset": 43, "nodeName": "_get_data", "type": "Callable[..., Any]"}, {"lineNumber": 403, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "mll", "type": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"}, {"lineNumber": 410, "col_offset": 15, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 417, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 418, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 425, "col_offset": 16, "nodeName": "param", "type": "Any"}, {"lineNumber": 434, "col_offset": 12, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 441, "col_offset": 12, "nodeName": "noise", "type": "Any"}, {"lineNumber": 441, "col_offset": 20, "nodeName": "noise", "type": "Any"}, {"lineNumber": 442, "col_offset": 12, "nodeName": "var_diff", "type": "Any"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 452, "col_offset": 8, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 452, "col_offset": 17, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 452, "col_offset": 25, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 452, "col_offset": 34, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 452, "col_offset": 43, "nodeName": "_get_data", "type": "Callable[..., Any]"}, {"lineNumber": 453, "col_offset": 21, "nodeName": "GaussianLikelihood", "type": "Any"}, {"lineNumber": 454, "col_offset": 19, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 454, "col_offset": 32, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 454, "col_offset": 41, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 454, "col_offset": 50, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "register_prior", "type": "Any"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "register_prior", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "register_prior", "type": "Any"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "register_prior", "type": "Any"}, {"lineNumber": 462, "col_offset": 14, "nodeName": "ExactMarginalLogLikelihood", "type": "Type[gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood]"}, {"lineNumber": 462, "col_offset": 55, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 462, "col_offset": 67, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 466, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 468, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 470, "col_offset": 22, "nodeName": "NUTS", "type": "Any"}, {"lineNumber": 470, "col_offset": 27, "nodeName": "pyro_model", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 471, "col_offset": 19, "nodeName": "MCMC", "type": "Any"}, {"lineNumber": 471, "col_offset": 24, "nodeName": "nuts_kernel", "type": "Any"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "run", "type": "Any"}, {"lineNumber": 472, "col_offset": 21, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 472, "col_offset": 30, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "pyro_load_from_samples", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 477, "col_offset": 26, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 478, "col_offset": 17, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 478, "col_offset": 26, "nodeName": "expanded_test_x", "type": "Any"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 488, "col_offset": 11, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "unittest", "type": "module"}, {"lineNumber": 24, "col_offset": 40, "nodeName": "RBFKernel", "type": "Type[gpytorch.kernels.rbf_kernel.RBFKernel]"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "self", "type": "ExactGPModel"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "self", "type": "ExactGPModel"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "device", "type": "Any"}, {"lineNumber": 36, "col_offset": 51, "nodeName": "device", "type": "Any"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 38, "col_offset": 56, "nodeName": "device", "type": "Any"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "add_", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 42, "col_offset": 49, "nodeName": "device", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 47, "col_offset": 63, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "base_kernel", "type": "Any"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "SmoothedBoxPrior", "type": "Type[gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "mean_module", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "base_kernel", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 71, "col_offset": 51, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "covar_module", "type": "Any"}, {"lineNumber": 72, "col_offset": 63, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "function_predictions", "type": "Any"}, {"lineNumber": 74, "col_offset": 55, "nodeName": "full_like", "type": "Any"}, {"lineNumber": 74, "col_offset": 71, "nodeName": "mean", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "function_predictions", "type": "Any"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "expand_as", "type": "Any"}, {"lineNumber": 76, "col_offset": 80, "nodeName": "variance", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 85, "col_offset": 63, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "gp_model_1", "type": "ExactGPModel"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "base_kernel", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "equal", "type": "Any"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "noise", "type": "Any"}, {"lineNumber": 96, "col_offset": 65, "nodeName": "noise", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "equal", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "lengthscale", "type": "Any"}, {"lineNumber": 99, "col_offset": 65, "nodeName": "lengthscale", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 104, "col_offset": 40, "nodeName": "warnings", "type": "module"}, {"lineNumber": 105, "col_offset": 43, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 105, "col_offset": 63, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "base_kernel", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "debug", "type": "Any"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "function_predictions", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "function_predictions", "type": "Any"}, {"lineNumber": 126, "col_offset": 59, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 126, "col_offset": 76, "nodeName": "variance", "type": "Any"}, {"lineNumber": 129, "col_offset": 45, "nodeName": "type_as", "type": "Any"}, {"lineNumber": 129, "col_offset": 73, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 131, "col_offset": 28, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 131, "col_offset": 60, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 131, "col_offset": 77, "nodeName": "mean", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "expand_as", "type": "Any"}, {"lineNumber": 134, "col_offset": 56, "nodeName": "variance", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 145, "col_offset": 13, "nodeName": "least_used_cuda_device", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "_", "type": "Any"}, {"lineNumber": 146, "col_offset": 42, "nodeName": "_get_data", "type": "Callable[..., Any]"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "GaussianLikelihood", "type": "Any"}, {"lineNumber": 148, "col_offset": 23, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 148, "col_offset": 36, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 148, "col_offset": 54, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "mean_skip_var", "type": "Any"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "mean", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 168, "col_offset": 13, "nodeName": "least_used_cuda_device", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 169, "col_offset": 38, "nodeName": "_", "type": "Any"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "_get_data", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "GaussianLikelihood", "type": "Any"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 171, "col_offset": 36, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 171, "col_offset": 45, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 171, "col_offset": 54, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "mean", "type": "Any"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "mean", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "likelihood_mean", "type": "Any"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "mean", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "fast_pred_var", "type": "Any"}, {"lineNumber": 199, "col_offset": 20, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 199, "col_offset": 29, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 200, "col_offset": 26, "nodeName": "preds", "type": "Any"}, {"lineNumber": 201, "col_offset": 30, "nodeName": "preds", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "any", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "any", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "any", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "any", "type": "Any"}, {"lineNumber": 217, "col_offset": 43, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 218, "col_offset": 17, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "base_kernel", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "mean_module", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "optim", "type": "Any"}, {"lineNumber": 235, "col_offset": 31, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 236, "col_offset": 13, "nodeName": "checkpoint_kernel", "type": "Type[gpytorch.beta_features.checkpoint_kernel]"}, {"lineNumber": 236, "col_offset": 54, "nodeName": "checkpoint", "type": "int"}, {"lineNumber": 236, "col_offset": 67, "nodeName": "fast_pred_var", "type": "Any"}, {"lineNumber": 237, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "loss", "type": "Any"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 252, "col_offset": 13, "nodeName": "skip_posterior_variances", "type": "Any"}, {"lineNumber": 253, "col_offset": 40, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 254, "col_offset": 36, "nodeName": "abs", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 256, "col_offset": 24, "nodeName": "item", "type": "Any"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 259, "col_offset": 83, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 262, "col_offset": 11, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 267, "col_offset": 43, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 267, "col_offset": 63, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 271, "col_offset": 14, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "base_kernel", "type": "Any"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "mean_module", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "optim", "type": "Any"}, {"lineNumber": 283, "col_offset": 31, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 292, "col_offset": 21, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "assertGreater", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "fast_pred_var", "type": "Any"}, {"lineNumber": 299, "col_offset": 48, "nodeName": "detach_test_caches", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 303, "col_offset": 40, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 306, "col_offset": 31, "nodeName": "clone", "type": "Any"}, {"lineNumber": 307, "col_offset": 12, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "set_train_data", "type": "Any"}, {"lineNumber": 309, "col_offset": 36, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 309, "col_offset": 45, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "set_train_data", "type": "Any"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 315, "col_offset": 24, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 316, "col_offset": 25, "nodeName": "get_fantasy_model", "type": "Any"}, {"lineNumber": 316, "col_offset": 52, "nodeName": "fantasy_x", "type": "Any"}, {"lineNumber": 317, "col_offset": 40, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 319, "col_offset": 32, "nodeName": "mean", "type": "Any"}, {"lineNumber": 319, "col_offset": 64, "nodeName": "mean", "type": "Any"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 325, "col_offset": 28, "nodeName": "relative_error", "type": "Any"}, {"lineNumber": 328, "col_offset": 11, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 333, "col_offset": 43, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 333, "col_offset": 63, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 337, "col_offset": 14, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "base_kernel", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "mean_module", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 349, "col_offset": 20, "nodeName": "optim", "type": "Any"}, {"lineNumber": 349, "col_offset": 31, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 353, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 358, "col_offset": 21, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "assertGreater", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 363, "col_offset": 13, "nodeName": "fast_pred_var", "type": "Any"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 367, "col_offset": 40, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "set_train_data", "type": "Any"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 375, "col_offset": 25, "nodeName": "get_fantasy_model", "type": "Any"}, {"lineNumber": 375, "col_offset": 52, "nodeName": "fantasy_x", "type": "Any"}, {"lineNumber": 375, "col_offset": 63, "nodeName": "fantasy_y", "type": "Any"}, {"lineNumber": 376, "col_offset": 40, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "assertAllClose", "type": "Any"}, {"lineNumber": 378, "col_offset": 32, "nodeName": "mean", "type": "Any"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 384, "col_offset": 11, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 389, "col_offset": 13, "nodeName": "fast_computations", "type": "Any"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "test_posterior_latent_gp_and_likelihood_with_optimization", "type": "Callable[..., Any]"}, {"lineNumber": 393, "col_offset": 11, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 399, "col_offset": 43, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 399, "col_offset": 63, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 400, "col_offset": 13, "nodeName": "fast_pred_var", "type": "Any"}, {"lineNumber": 400, "col_offset": 48, "nodeName": "debug", "type": "Any"}, {"lineNumber": 403, "col_offset": 25, "nodeName": "GaussianLikelihood", "type": "Any"}, {"lineNumber": 404, "col_offset": 23, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 404, "col_offset": 36, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 404, "col_offset": 45, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 404, "col_offset": 54, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 405, "col_offset": 18, "nodeName": "ExactMarginalLogLikelihood", "type": "Type[gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood]"}, {"lineNumber": 405, "col_offset": 59, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 405, "col_offset": 71, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "train", "type": "Any"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "train", "type": "Any"}, {"lineNumber": 417, "col_offset": 24, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 418, "col_offset": 21, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 420, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 421, "col_offset": 16, "nodeName": "loss", "type": "Any"}, {"lineNumber": 425, "col_offset": 25, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "eval", "type": "Any"}, {"lineNumber": 434, "col_offset": 40, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 439, "col_offset": 40, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 441, "col_offset": 20, "nodeName": "noise_covar", "type": "Any"}, {"lineNumber": 442, "col_offset": 24, "nodeName": "abs", "type": "Any"}, {"lineNumber": 444, "col_offset": 12, "nodeName": "assertLess", "type": "Any"}, {"lineNumber": 452, "col_offset": 43, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "mean_module", "type": "Any"}, {"lineNumber": 457, "col_offset": 58, "nodeName": "UniformPrior", "type": "Type[gpytorch.priors.torch_priors.UniformPrior]"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "base_kernel", "type": "Any"}, {"lineNumber": 458, "col_offset": 78, "nodeName": "UniformPrior", "type": "Type[gpytorch.priors.torch_priors.UniformPrior]"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "covar_module", "type": "Any"}, {"lineNumber": 459, "col_offset": 66, "nodeName": "UniformPrior", "type": "Type[gpytorch.priors.torch_priors.UniformPrior]"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 460, "col_offset": 49, "nodeName": "UniformPrior", "type": "Type[gpytorch.priors.torch_priors.UniformPrior]"}, {"lineNumber": 462, "col_offset": 14, "nodeName": "mlls", "type": "module"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "pyro_sample_from_prior", "type": "Any"}, {"lineNumber": 466, "col_offset": 21, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 466, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 467, "col_offset": 12, "nodeName": "pyro_factor", "type": "Callable[..., Any]"}, {"lineNumber": 467, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 467, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 472, "col_offset": 8, "nodeName": "mcmc_run", "type": "Any"}, {"lineNumber": 474, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 474, "col_offset": 40, "nodeName": "get_samples", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 480, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 483, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 484, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 488, "col_offset": 11, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "ExactGPModel", "type": "Type[ExactGPModel]"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "self", "type": "ExactGPModel"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 36, "col_offset": 51, "nodeName": "torch", "type": "Any"}, {"lineNumber": 39, "col_offset": 43, "nodeName": "pi", "type": "float"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 43, "col_offset": 41, "nodeName": "pi", "type": "float"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "SmoothedBoxPrior", "type": "Type[gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior]"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "Positive", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "covar_module", "type": "Any"}, {"lineNumber": 56, "col_offset": 50, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 56, "col_offset": 60, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "covar_module", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 74, "col_offset": 55, "nodeName": "torch", "type": "Any"}, {"lineNumber": 74, "col_offset": 71, "nodeName": "function_predictions", "type": "Any"}, {"lineNumber": 76, "col_offset": 80, "nodeName": "function_predictions", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "least_used_cuda_device", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "test_prior", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "gp_model_2", "type": "ExactGPModel"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "covar_module", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 96, "col_offset": 65, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "base_kernel", "type": "Any"}, {"lineNumber": 99, "col_offset": 65, "nodeName": "base_kernel", "type": "Any"}, {"lineNumber": 104, "col_offset": 40, "nodeName": "utils", "type": "module"}, {"lineNumber": 107, "col_offset": 57, "nodeName": "Positive", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "covar_module", "type": "Any"}, {"lineNumber": 109, "col_offset": 65, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 123, "col_offset": 46, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 123, "col_offset": 55, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 126, "col_offset": 59, "nodeName": "torch", "type": "Any"}, {"lineNumber": 126, "col_offset": 76, "nodeName": "function_predictions", "type": "Any"}, {"lineNumber": 131, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 131, "col_offset": 77, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "outputscale", "type": "Any"}, {"lineNumber": 134, "col_offset": 56, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 139, "col_offset": 17, "nodeName": "least_used_cuda_device", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "test_posterior_latent_gp_and_likelihood_without_optimization", "type": "Callable[..., Any]"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 146, "col_offset": 42, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "skip_posterior_variances", "type": "Any"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 162, "col_offset": 43, "nodeName": "mean_skip_var", "type": "Any"}, {"lineNumber": 162, "col_offset": 58, "nodeName": "mean", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 163, "col_offset": 43, "nodeName": "mean_skip_var", "type": "Any"}, {"lineNumber": 163, "col_offset": 58, "nodeName": "likelihood_mean", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "fast_pred_var", "type": "Any"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "mean_skip_var", "type": "Any"}, {"lineNumber": 182, "col_offset": 36, "nodeName": "mean", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 185, "col_offset": 43, "nodeName": "mean_skip_var", "type": "Any"}, {"lineNumber": 185, "col_offset": 58, "nodeName": "mean", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 186, "col_offset": 43, "nodeName": "mean_skip_var", "type": "Any"}, {"lineNumber": 186, "col_offset": 58, "nodeName": "likelihood_mean", "type": "Any"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 191, "col_offset": 18, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 203, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 203, "col_offset": 47, "nodeName": "single_variance", "type": "Any"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 204, "col_offset": 35, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 204, "col_offset": 47, "nodeName": "single_mean", "type": "Any"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 213, "col_offset": 47, "nodeName": "single_variance", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 214, "col_offset": 47, "nodeName": "single_mean", "type": "Any"}, {"lineNumber": 218, "col_offset": 41, "nodeName": "checkpoint", "type": "int"}, {"lineNumber": 218, "col_offset": 72, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 218, "col_offset": 77, "nodeName": "checkpoint", "type": "int"}, {"lineNumber": 221, "col_offset": 52, "nodeName": "SmoothedBoxPrior", "type": "Type[gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "covar_module", "type": "Any"}, {"lineNumber": 224, "col_offset": 65, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 226, "col_offset": 36, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 235, "col_offset": 31, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 236, "col_offset": 13, "nodeName": "beta_features", "type": "module"}, {"lineNumber": 236, "col_offset": 67, "nodeName": "settings", "type": "module"}, {"lineNumber": 237, "col_offset": 33, "nodeName": "checkpoint", "type": "int"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 239, "col_offset": 34, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "backward", "type": "Any"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "assertGreater", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 252, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 253, "col_offset": 51, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 253, "col_offset": 60, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 254, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 254, "col_offset": 46, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 254, "col_offset": 55, "nodeName": "mean", "type": "Any"}, {"lineNumber": 256, "col_offset": 24, "nodeName": "mean_abs_error", "type": "Any"}, {"lineNumber": 262, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 263, "col_offset": 17, "nodeName": "least_used_cuda_device", "type": "Any"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "test_fantasy_updates", "type": "Callable[..., Any]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "covar_module", "type": "Any"}, {"lineNumber": 272, "col_offset": 65, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 274, "col_offset": 36, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 283, "col_offset": 31, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "debug", "type": "Any"}, {"lineNumber": 287, "col_offset": 25, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 287, "col_offset": 34, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 288, "col_offset": 20, "nodeName": "mll", "type": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"}, {"lineNumber": 288, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 288, "col_offset": 32, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 293, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 294, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 299, "col_offset": 48, "nodeName": "settings", "type": "module"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 302, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 303, "col_offset": 51, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 303, "col_offset": 60, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 312, "col_offset": 36, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 312, "col_offset": 49, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 313, "col_offset": 23, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 313, "col_offset": 32, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 316, "col_offset": 25, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 316, "col_offset": 63, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 317, "col_offset": 51, "nodeName": "fant_model", "type": "Any"}, {"lineNumber": 317, "col_offset": 62, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 319, "col_offset": 32, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 319, "col_offset": 64, "nodeName": "fant_function_predictions", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 324, "col_offset": 29, "nodeName": "norm", "type": "Any"}, {"lineNumber": 324, "col_offset": 77, "nodeName": "norm", "type": "Any"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 328, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 329, "col_offset": 17, "nodeName": "least_used_cuda_device", "type": "Any"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "test_fantasy_updates_batch", "type": "Callable[..., Any]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "covar_module", "type": "Any"}, {"lineNumber": 338, "col_offset": 65, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 340, "col_offset": 36, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 349, "col_offset": 31, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 352, "col_offset": 17, "nodeName": "debug", "type": "Any"}, {"lineNumber": 353, "col_offset": 25, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 353, "col_offset": 34, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 354, "col_offset": 20, "nodeName": "mll", "type": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"}, {"lineNumber": 354, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 354, "col_offset": 32, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 359, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 360, "col_offset": 12, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 360, "col_offset": 31, "nodeName": "item", "type": "Any"}, {"lineNumber": 363, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 367, "col_offset": 51, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 367, "col_offset": 60, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 370, "col_offset": 36, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 370, "col_offset": 49, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 371, "col_offset": 23, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 371, "col_offset": 32, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 375, "col_offset": 25, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 376, "col_offset": 51, "nodeName": "fant_model", "type": "Any"}, {"lineNumber": 376, "col_offset": 62, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 378, "col_offset": 12, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 378, "col_offset": 32, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 378, "col_offset": 64, "nodeName": "mean", "type": "Any"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 381, "col_offset": 28, "nodeName": "grad", "type": "Any"}, {"lineNumber": 384, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 385, "col_offset": 17, "nodeName": "least_used_cuda_device", "type": "Any"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "test_posterior_latent_gp_and_likelihood_with_optimization", "type": "Callable[..., Any]"}, {"lineNumber": 389, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 393, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 394, "col_offset": 17, "nodeName": "least_used_cuda_device", "type": "Any"}, {"lineNumber": 400, "col_offset": 13, "nodeName": "settings", "type": "module"}, {"lineNumber": 400, "col_offset": 48, "nodeName": "settings", "type": "module"}, {"lineNumber": 405, "col_offset": 18, "nodeName": "mlls", "type": "module"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "base_kernel", "type": "Any"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "mean_module", "type": "Any"}, {"lineNumber": 408, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 411, "col_offset": 16, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 412, "col_offset": 16, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 417, "col_offset": 24, "nodeName": "optim", "type": "Any"}, {"lineNumber": 417, "col_offset": 35, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 420, "col_offset": 25, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 420, "col_offset": 34, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 422, "col_offset": 16, "nodeName": "backward", "type": "Any"}, {"lineNumber": 423, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 425, "col_offset": 25, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 426, "col_offset": 16, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 427, "col_offset": 16, "nodeName": "assertGreater", "type": "Any"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 432, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 434, "col_offset": 51, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 434, "col_offset": 60, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 439, "col_offset": 51, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 439, "col_offset": 60, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 441, "col_offset": 20, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 444, "col_offset": 12, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 444, "col_offset": 28, "nodeName": "max", "type": "Any"}, {"lineNumber": 453, "col_offset": 57, "nodeName": "Positive", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "covar_module", "type": "Any"}, {"lineNumber": 459, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 462, "col_offset": 14, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 467, "col_offset": 12, "nodeName": "mll", "type": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"}, {"lineNumber": 474, "col_offset": 40, "nodeName": "mcmc_run", "type": "Any"}, {"lineNumber": 477, "col_offset": 26, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 480, "col_offset": 25, "nodeName": "mean", "type": "Any"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "norm", "type": "Any"}, {"lineNumber": 483, "col_offset": 62, "nodeName": "norm", "type": "Any"}, {"lineNumber": 484, "col_offset": 24, "nodeName": "norm", "type": "Any"}, {"lineNumber": 484, "col_offset": 62, "nodeName": "norm", "type": "Any"}, {"lineNumber": 485, "col_offset": 24, "nodeName": "norm", "type": "Any"}, {"lineNumber": 485, "col_offset": 62, "nodeName": "norm", "type": "Any"}, {"lineNumber": 488, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 489, "col_offset": 17, "nodeName": "least_used_cuda_device", "type": "Any"}, {"lineNumber": 490, "col_offset": 16, "nodeName": "test_posterior_latent_gp_and_likelihood_fast_pred_var", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 50, "col_offset": 50, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "gp_model_2", "type": "ExactGPModel"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "gp_model_1", "type": "ExactGPModel"}, {"lineNumber": 96, "col_offset": 65, "nodeName": "gp_model_2", "type": "ExactGPModel"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "covar_module", "type": "Any"}, {"lineNumber": 99, "col_offset": 65, "nodeName": "covar_module", "type": "Any"}, {"lineNumber": 104, "col_offset": 40, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 129, "col_offset": 45, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "covar_module", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "settings", "type": "module"}, {"lineNumber": 158, "col_offset": 32, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 160, "col_offset": 41, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 160, "col_offset": 50, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "settings", "type": "module"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "skip_posterior_variances", "type": "Any"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 183, "col_offset": 32, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 186, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 198, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 203, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 204, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 214, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 221, "col_offset": 69, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 221, "col_offset": 78, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 236, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 236, "col_offset": 67, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "mll", "type": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"}, {"lineNumber": 240, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 240, "col_offset": 36, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "loss", "type": "Any"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "grad", "type": "Any"}, {"lineNumber": 246, "col_offset": 16, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 246, "col_offset": 35, "nodeName": "item", "type": "Any"}, {"lineNumber": 252, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 254, "col_offset": 55, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "settings", "type": "module"}, {"lineNumber": 293, "col_offset": 28, "nodeName": "param", "type": "Any"}, {"lineNumber": 299, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 299, "col_offset": 48, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 306, "col_offset": 31, "nodeName": "grad", "type": "Any"}, {"lineNumber": 315, "col_offset": 24, "nodeName": "detach", "type": "Any"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "fantasy_x", "type": "Any"}, {"lineNumber": 324, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 324, "col_offset": 40, "nodeName": "real_fant_x_grad", "type": "Any"}, {"lineNumber": 324, "col_offset": 59, "nodeName": "grad", "type": "Any"}, {"lineNumber": 324, "col_offset": 77, "nodeName": "grad", "type": "Any"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 352, "col_offset": 17, "nodeName": "settings", "type": "module"}, {"lineNumber": 359, "col_offset": 28, "nodeName": "param", "type": "Any"}, {"lineNumber": 363, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 378, "col_offset": 64, "nodeName": "fant_function_predictions", "type": "Any"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "sum", "type": "Any"}, {"lineNumber": 381, "col_offset": 28, "nodeName": "fantasy_x", "type": "Any"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 389, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 395, "col_offset": 21, "nodeName": "fast_computations", "type": "Any"}, {"lineNumber": 396, "col_offset": 20, "nodeName": "test_posterior_latent_gp_and_likelihood_with_optimization", "type": "Callable[..., Any]"}, {"lineNumber": 400, "col_offset": 13, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 400, "col_offset": 48, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 403, "col_offset": 56, "nodeName": "SmoothedBoxPrior", "type": "Type[gpytorch.priors.smoothed_box_prior.SmoothedBoxPrior]"}, {"lineNumber": 405, "col_offset": 18, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "covar_module", "type": "Any"}, {"lineNumber": 406, "col_offset": 69, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 408, "col_offset": 40, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 411, "col_offset": 16, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 412, "col_offset": 16, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 417, "col_offset": 35, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 421, "col_offset": 24, "nodeName": "mll", "type": "gpytorch.mlls.exact_marginal_log_likelihood.ExactMarginalLogLikelihood"}, {"lineNumber": 421, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 421, "col_offset": 36, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 422, "col_offset": 16, "nodeName": "loss", "type": "Any"}, {"lineNumber": 423, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 426, "col_offset": 16, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 426, "col_offset": 32, "nodeName": "grad", "type": "Any"}, {"lineNumber": 427, "col_offset": 16, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 427, "col_offset": 35, "nodeName": "item", "type": "Any"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "raw_noise", "type": "Any"}, {"lineNumber": 442, "col_offset": 24, "nodeName": "variance", "type": "Any"}, {"lineNumber": 442, "col_offset": 61, "nodeName": "noise", "type": "Any"}, {"lineNumber": 444, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 444, "col_offset": 38, "nodeName": "var_diff", "type": "Any"}, {"lineNumber": 444, "col_offset": 49, "nodeName": "noise", "type": "Any"}, {"lineNumber": 453, "col_offset": 57, "nodeName": "constraints", "type": "module"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 477, "col_offset": 26, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 480, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 483, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 483, "col_offset": 52, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 483, "col_offset": 62, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 484, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 484, "col_offset": 52, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 484, "col_offset": 62, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 485, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 485, "col_offset": 52, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 485, "col_offset": 62, "nodeName": "test_y", "type": "Any"}, {"lineNumber": 490, "col_offset": 16, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "randn_like", "type": "Any"}, {"lineNumber": 41, "col_offset": 42, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "correct_variance", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "gp_model_1", "type": "ExactGPModel"}, {"lineNumber": 99, "col_offset": 65, "nodeName": "gp_model_2", "type": "ExactGPModel"}, {"lineNumber": 129, "col_offset": 45, "nodeName": "torch", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "settings", "type": "module"}, {"lineNumber": 182, "col_offset": 36, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 182, "col_offset": 45, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 184, "col_offset": 45, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 184, "col_offset": 54, "nodeName": "test_x", "type": "Any"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "param", "type": "Any"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 294, "col_offset": 31, "nodeName": "norm", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "mean", "type": "Any"}, {"lineNumber": 306, "col_offset": 31, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "mean", "type": "Any"}, {"lineNumber": 324, "col_offset": 59, "nodeName": "fantasy_x", "type": "Any"}, {"lineNumber": 324, "col_offset": 77, "nodeName": "fantasy_x", "type": "Any"}, {"lineNumber": 352, "col_offset": 17, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 360, "col_offset": 31, "nodeName": "norm", "type": "Any"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "mean", "type": "Any"}, {"lineNumber": 395, "col_offset": 21, "nodeName": "settings", "type": "module"}, {"lineNumber": 396, "col_offset": 20, "nodeName": "self", "type": "TestSimpleGPRegression"}, {"lineNumber": 403, "col_offset": 73, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 403, "col_offset": 82, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "gp_model", "type": "ExactGPModel"}, {"lineNumber": 426, "col_offset": 32, "nodeName": "param", "type": "Any"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "noise_covar", "type": "Any"}, {"lineNumber": 442, "col_offset": 24, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 453, "col_offset": 57, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 483, "col_offset": 35, "nodeName": "mean", "type": "Any"}, {"lineNumber": 484, "col_offset": 35, "nodeName": "mean", "type": "Any"}, {"lineNumber": 485, "col_offset": 35, "nodeName": "mean", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 181, "col_offset": 21, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 246, "col_offset": 35, "nodeName": "norm", "type": "Any"}, {"lineNumber": 294, "col_offset": 31, "nodeName": "grad", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "test_function_predictions", "type": "Any"}, {"lineNumber": 315, "col_offset": 24, "nodeName": "clone", "type": "Any"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "fant_function_predictions", "type": "Any"}, {"lineNumber": 360, "col_offset": 31, "nodeName": "grad", "type": "Any"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "train_y", "type": "Any"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "fant_function_predictions", "type": "Any"}, {"lineNumber": 395, "col_offset": 21, "nodeName": "gpytorch", "type": "module"}, {"lineNumber": 427, "col_offset": 35, "nodeName": "norm", "type": "Any"}, {"lineNumber": 438, "col_offset": 12, "nodeName": "likelihood", "type": "Any"}, {"lineNumber": 483, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 484, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 485, "col_offset": 35, "nodeName": "output", "type": "Any"}, {"lineNumber": 246, "col_offset": 35, "nodeName": "grad", "type": "Any"}, {"lineNumber": 294, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 360, "col_offset": 31, "nodeName": "param", "type": "Any"}, {"lineNumber": 427, "col_offset": 35, "nodeName": "grad", "type": "Any"}, {"lineNumber": 246, "col_offset": 35, "nodeName": "param", "type": "Any"}, {"lineNumber": 315, "col_offset": 24, "nodeName": "train_x", "type": "Any"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 427, "col_offset": 35, "nodeName": "param", "type": "Any"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "clone", "type": "Any"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "train_x", "type": "Any"}]