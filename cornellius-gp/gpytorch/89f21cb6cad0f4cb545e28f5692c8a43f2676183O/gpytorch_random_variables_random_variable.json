[{"lineNumber": 11, "col_offset": 21, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "_args", "type": "Tuple[Any, ...]"}, {"lineNumber": 14, "col_offset": 21, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 15, "col_offset": 23, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "new_args", "type": "List[Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "new_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "arg", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "_args", "type": "Tuple[Any, ...]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "new_args", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "new_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "arg", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "_args", "type": "Tuple[Any, ...]"}, {"lineNumber": 68, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 84, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 126, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 135, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 138, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "RandomVariable"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "RandomVariable"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "self", "type": "RandomVariable"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 39, "col_offset": 18, "nodeName": "val", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "items", "type": "Callable"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "__class__", "type": "Type[RandomVariable]"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "self", "type": "RandomVariable"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "val", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "items", "type": "Callable"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "__class__", "type": "Type[RandomVariable]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "__setattr__", "type": "Callable[[object, Any, Any], None]"}, {"lineNumber": 151, "col_offset": 27, "nodeName": "self", "type": "RandomVariable"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 151, "col_offset": 39, "nodeName": "val", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "arg", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "val", "type": "Any"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "val", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "self", "type": "RandomVariable"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "new_args", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "new_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "arg", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "val", "type": "Any"}, {"lineNumber": 58, "col_offset": 35, "nodeName": "val", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "self", "type": "RandomVariable"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "new_args", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "new_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "representation", "type": "Callable[[], Any]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "is_tensor", "type": "Any"}, {"lineNumber": 142, "col_offset": 28, "nodeName": "val", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "val", "type": "Any"}, {"lineNumber": 143, "col_offset": 31, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 144, "col_offset": 26, "nodeName": "val", "type": "Any"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "LazyVariable", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "std", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "arg", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "self", "type": "RandomVariable"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "new_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "new_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "arg", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "self", "type": "RandomVariable"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "new_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "new_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "var", "type": "Callable[[], Any]"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "self", "type": "RandomVariable"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "self", "type": "RandomVariable"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "self", "type": "RandomVariable"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "new_args", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "new_args", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "name", "type": "str"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "val", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "name", "type": "str"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "new_args", "type": "List[Any]"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "device_id", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "new_args", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "name", "type": "str"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "val", "type": "Any"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "name", "type": "str"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "self", "type": "RandomVariable"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "arg", "type": "Any"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "arg", "type": "Any"}]