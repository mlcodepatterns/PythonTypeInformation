[{"lineNumber": 12, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.case.TestCase]"}, {"lineNumber": 12, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 168, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "ary", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "ary", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "ary", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "ary", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "ary", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "ary", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "p1", "type": "Tuple[float, float]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "p2", "type": "Tuple[float, float]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "test", "type": "Tuple[float, float]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "p1", "type": "Tuple[float, float]"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "p2", "type": "Tuple[float, float]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "test", "type": "Tuple[float, float]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "p1", "type": "Tuple[float, float]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "p2", "type": "Tuple[float, float]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "test", "type": "Tuple[float, float]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "p1", "type": "Tuple[float, float]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "p2", "type": "Tuple[float, float]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "test", "type": "Tuple[float, float]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "run", "type": "Any"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "arange", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "arange", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "arange", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "IndexError", "type": "Type[IndexError]"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "IndexError", "type": "Type[IndexError]"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "arange", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "arange", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "IndexError", "type": "Type[IndexError]"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "IndexError", "type": "Type[IndexError]"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 14, "nodeName": "arange", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "point_line_distance", "type": "Any"}, {"lineNumber": 143, "col_offset": 35, "nodeName": "test", "type": "Tuple[float, float]"}, {"lineNumber": 143, "col_offset": 41, "nodeName": "p1", "type": "Tuple[float, float]"}, {"lineNumber": 143, "col_offset": 45, "nodeName": "p2", "type": "Tuple[float, float]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "dist", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "point_line_distance", "type": "Any"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "test", "type": "Tuple[float, float]"}, {"lineNumber": 150, "col_offset": 41, "nodeName": "p1", "type": "Tuple[float, float]"}, {"lineNumber": 150, "col_offset": 45, "nodeName": "p2", "type": "Tuple[float, float]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "dist", "type": "Any"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "point_line_distance", "type": "Any"}, {"lineNumber": 157, "col_offset": 35, "nodeName": "test", "type": "Tuple[float, float]"}, {"lineNumber": 157, "col_offset": 41, "nodeName": "p1", "type": "Tuple[float, float]"}, {"lineNumber": 157, "col_offset": 45, "nodeName": "p2", "type": "Tuple[float, float]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "dist", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "point_line_distance", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "test", "type": "Tuple[float, float]"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "p1", "type": "Tuple[float, float]"}, {"lineNumber": 164, "col_offset": 45, "nodeName": "p2", "type": "Tuple[float, float]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 165, "col_offset": 28, "nodeName": "dist", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "nose", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "reverse_map_1d", "type": "Any"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "ary", "type": "Any"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "x", "type": "float"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "reverse_map_1d", "type": "Any"}, {"lineNumber": 66, "col_offset": 40, "nodeName": "ary", "type": "Any"}, {"lineNumber": 66, "col_offset": 45, "nodeName": "x", "type": "float"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "reverse_map_1d", "type": "Any"}, {"lineNumber": 76, "col_offset": 40, "nodeName": "ary", "type": "Any"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "x", "type": "float"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "reverse_map_1d", "type": "Any"}, {"lineNumber": 95, "col_offset": 40, "nodeName": "ary", "type": "Any"}, {"lineNumber": 95, "col_offset": 45, "nodeName": "x", "type": "float"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "find_runs", "type": "Any"}, {"lineNumber": 107, "col_offset": 31, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "find_runs", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "find_runs", "type": "Any"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 21, "nodeName": "find_runs", "type": "Any"}, {"lineNumber": 121, "col_offset": 31, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "find_runs", "type": "Any"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "find_runs", "type": "Any"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 129, "col_offset": 21, "nodeName": "find_runs", "type": "Any"}, {"lineNumber": 129, "col_offset": 31, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "find_runs", "type": "Any"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 16, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 17, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 18, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 21, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 22, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 23, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 25, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 158, "col_offset": 40, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}]