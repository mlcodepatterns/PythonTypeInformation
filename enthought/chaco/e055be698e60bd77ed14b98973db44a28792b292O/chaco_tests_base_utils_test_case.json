[{"lineNumber": 13, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "test_ascending_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "test_descending_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "test_ascending", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "test_ascending_floor", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "test_descending", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "test_descending_floor", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "test_find_runs_middle", "type": "Callable[[Any], Any]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "test_find_runs_start", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "test_find_runs_end", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "test_find_runs_offset", "type": "Callable[[Any], Any]"}, {"lineNumber": 126, "col_offset": 4, "nodeName": "test_find_runs_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "test_find_runs_descending", "type": "Callable[[Any], Any]"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "test_find_runs_flat", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 144, "col_offset": 4, "nodeName": "test_arg_find_runs_middle", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "test_arg_find_runs_start", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "test_arg_find_runs_end", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "test_arg_find_runs_offset", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "test_arg_find_runs_none", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "test_arg_find_runs_descending", "type": "Callable[[Any], Any]"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "test_arg_find_runs_flat", "type": "Callable[[Any], Any]"}, {"lineNumber": 181, "col_offset": 32, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "test_horizontal_line", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "test_vertical_line", "type": "Callable[[Any], Any]"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "test_diag_lines", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "test_point_on_line", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "unittest", "type": "module"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "unittest", "type": "module"}, {"lineNumber": 143, "col_offset": 26, "nodeName": "unittest", "type": "module"}, {"lineNumber": 181, "col_offset": 32, "nodeName": "unittest", "type": "module"}, {"lineNumber": 212, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "ary", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "ary", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "ary", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "ary", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "ary", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "ary", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "p1", "type": "Tuple[float, float]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "p2", "type": "Tuple[float, float]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "test", "type": "Tuple[float, float]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "p1", "type": "Tuple[float, float]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "p2", "type": "Tuple[float, float]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "test", "type": "Tuple[float, float]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "p1", "type": "Tuple[float, float]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "p2", "type": "Tuple[float, float]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "test", "type": "Tuple[float, float]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "p1", "type": "Tuple[float, float]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "p2", "type": "Tuple[float, float]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "test", "type": "Tuple[float, float]"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "dist", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "run", "type": "Any"}, {"lineNumber": 15, "col_offset": 14, "nodeName": "arange", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "arange", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "arange", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "IndexError", "type": "Type[IndexError]"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "IndexError", "type": "Type[IndexError]"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 66, "col_offset": 14, "nodeName": "arange", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 14, "nodeName": "arange", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "IndexError", "type": "Type[IndexError]"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "IndexError", "type": "Type[IndexError]"}, {"lineNumber": 86, "col_offset": 38, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "arange", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "assert_", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "point_line_distance", "type": "Any"}, {"lineNumber": 187, "col_offset": 35, "nodeName": "test", "type": "Tuple[float, float]"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "p1", "type": "Tuple[float, float]"}, {"lineNumber": 187, "col_offset": 45, "nodeName": "p2", "type": "Tuple[float, float]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "dist", "type": "Any"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "point_line_distance", "type": "Any"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "test", "type": "Tuple[float, float]"}, {"lineNumber": 194, "col_offset": 41, "nodeName": "p1", "type": "Tuple[float, float]"}, {"lineNumber": 194, "col_offset": 45, "nodeName": "p2", "type": "Tuple[float, float]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "dist", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "point_line_distance", "type": "Any"}, {"lineNumber": 201, "col_offset": 35, "nodeName": "test", "type": "Tuple[float, float]"}, {"lineNumber": 201, "col_offset": 41, "nodeName": "p1", "type": "Tuple[float, float]"}, {"lineNumber": 201, "col_offset": 45, "nodeName": "p2", "type": "Tuple[float, float]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 202, "col_offset": 28, "nodeName": "dist", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "point_line_distance", "type": "Any"}, {"lineNumber": 208, "col_offset": 35, "nodeName": "test", "type": "Tuple[float, float]"}, {"lineNumber": 208, "col_offset": 41, "nodeName": "p1", "type": "Tuple[float, float]"}, {"lineNumber": 208, "col_offset": 45, "nodeName": "p2", "type": "Tuple[float, float]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "dist", "type": "Any"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "nose", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "BinSearchTestCase"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "reverse_map_1d", "type": "Any"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "ary", "type": "Any"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "x", "type": "float"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "reverse_map_1d", "type": "Any"}, {"lineNumber": 67, "col_offset": 40, "nodeName": "ary", "type": "Any"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "x", "type": "float"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "reverse_map_1d", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "ary", "type": "Any"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "x", "type": "float"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "reverse_map_1d", "type": "Any"}, {"lineNumber": 96, "col_offset": 40, "nodeName": "ary", "type": "Any"}, {"lineNumber": 96, "col_offset": 45, "nodeName": "x", "type": "float"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "ReverseMap1DTestCase"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "find_runs", "type": "Any"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "find_runs", "type": "Any"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "find_runs", "type": "Any"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "find_runs", "type": "Any"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 124, "col_offset": 21, "nodeName": "find_runs", "type": "Any"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "find_runs", "type": "Any"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "find_runs", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "find_runs", "type": "Any"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "find_runs", "type": "Any"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 146, "col_offset": 21, "nodeName": "arg_find_runs", "type": "Any"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "arg_find_runs", "type": "Any"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "arg_find_runs", "type": "Any"}, {"lineNumber": 154, "col_offset": 35, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "arg_find_runs", "type": "Any"}, {"lineNumber": 160, "col_offset": 35, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "arg_find_runs", "type": "Any"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "arg_find_runs", "type": "Any"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "arg_find_runs", "type": "Any"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "arg_find_runs", "type": "Any"}, {"lineNumber": 172, "col_offset": 35, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 177, "col_offset": 21, "nodeName": "arg_find_runs", "type": "Any"}, {"lineNumber": 177, "col_offset": 35, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 17, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 18, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 19, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 21, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 22, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 23, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 24, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 35, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "bin_search", "type": "Any"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "ary", "type": "Any"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "rmap", "type": "Callable[[Any], Any]"}, {"lineNumber": 202, "col_offset": 40, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}]