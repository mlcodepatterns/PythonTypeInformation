[{"lineNumber": 17, "col_offset": 30, "nodeName": "UnittestTools", "type": "Any"}, {"lineNumber": 17, "col_offset": 45, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "test_init_defaults", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "test_basic_setup", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "test_set_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "test_set_data_ordered", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "test_set_mask", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "test_remove_mask", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "test_get_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "test_get_data_no_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "test_get_data_mask", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "test_get_data_mask_no_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "test_get_data_mask_no_mask", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "test_bounds", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "test_bounds_length_one", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "test_bounds_length_zero", "type": "Callable[[Any], Any]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "test_bounds_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "test_bounds_all_nans", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "test_bounds_some_nan", "type": "Callable[[Any], Any]"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "test_bounds_negative_inf", "type": "Callable[[Any], Any]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "test_bounds_positive_inf", "type": "Callable[[Any], Any]"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "test_bounds_negative_positive_inf", "type": "Callable[[Any], Any]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "test_bounds_non_numeric", "type": "Callable[[Any], Any]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "test_data_size", "type": "Callable[[Any], Any]"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "test_reverse_map", "type": "Callable[[Any], Any]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "test_metadata", "type": "Callable[[Any], Any]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "test_metadata_changed", "type": "Callable[[Any], Any]"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "test_metadata_items_changed", "type": "Callable[[Any], Any]"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "test_serialization_state", "type": "Callable[[Any], Any]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "test_serialization_state_no_persist", "type": "Callable[[Any], Any]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "test_serialization_post_load", "type": "Callable[[Any], Any]"}, {"lineNumber": 260, "col_offset": 24, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "create_array", "type": "Callable[[Any], Any]"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "test_basic_set_get", "type": "Callable[[Any], Any]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "test_bounds", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 45, "nodeName": "unittest", "type": "module"}, {"lineNumber": 260, "col_offset": 24, "nodeName": "unittest", "type": "module"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "mymask", "type": "numpy.ndarray"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "new_array", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "new_array", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "myarray", "type": "numpy.ndarray"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "nan", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "sd", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "myarray", "type": "numpy.ndarray"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "persist_data", "type": "bool"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "pickled_data_source", "type": "str"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "unpickled_data_source", "type": "Any"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "myarray", "type": "numpy.ndarray"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "pd", "type": "chaco.point_data_source.PointDataSource"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "myarray", "type": "numpy.ndarray"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "pd", "type": "chaco.point_data_source.PointDataSource"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "arange", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "ArrayDataSource", "type": "Type[chaco.array_data_source.ArrayDataSource]"}, {"lineNumber": 22, "col_offset": 43, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Type[chaco.array_data_source.ArrayDataSource]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "_data", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "value_dimension", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "index_dimension", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "sort_order", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "persist_data", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 34, "col_offset": 41, "nodeName": "_data", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "value_dimension", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "sort_order", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "arange", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 46, "col_offset": 27, "nodeName": "new_array", "type": "Any"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "_data", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "sort_order", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "arange", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "new_array", "type": "Any"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "_data", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "sort_order", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "_data", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "mymask", "type": "numpy.ndarray"}, {"lineNumber": 67, "col_offset": 40, "nodeName": "_cached_mask", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "set_mask", "type": "Callable[[Any], None]"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "mymask", "type": "numpy.ndarray"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "_data", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "_cached_mask", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Type[chaco.array_data_source.ArrayDataSource]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "set_mask", "type": "Callable[[Any], None]"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "mymask", "type": "numpy.ndarray"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "mask", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "get_data_mask", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "mask", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "mymask", "type": "numpy.ndarray"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Type[chaco.array_data_source.ArrayDataSource]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 103, "col_offset": 14, "nodeName": "mask", "type": "Any"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "get_data_mask", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 105, "col_offset": 27, "nodeName": "mask", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "mask", "type": "Any"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "get_data_mask", "type": "Callable[[], Tuple[Any, Any]]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "mask", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "get_bounds", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Type[chaco.array_data_source.ArrayDataSource]"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "get_bounds", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Type[chaco.array_data_source.ArrayDataSource]"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "myarray", "type": "numpy.ndarray"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "get_bounds", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Type[chaco.array_data_source.ArrayDataSource]"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "get_bounds", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Type[chaco.array_data_source.ArrayDataSource]"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "get_bounds", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Type[chaco.array_data_source.ArrayDataSource]"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "get_bounds", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 149, "col_offset": 18, "nodeName": "empty", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 151, "col_offset": 13, "nodeName": "ArrayDataSource", "type": "Type[chaco.array_data_source.ArrayDataSource]"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "get_bounds", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Type[chaco.array_data_source.ArrayDataSource]"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "get_bounds", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Type[chaco.array_data_source.ArrayDataSource]"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "get_bounds", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Type[chaco.array_data_source.ArrayDataSource]"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "get_bounds", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Type[chaco.array_data_source.ArrayDataSource]"}, {"lineNumber": 173, "col_offset": 17, "nodeName": "get_bounds", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 177, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 179, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Type[chaco.array_data_source.ArrayDataSource]"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "myarray", "type": "numpy.ndarray"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "get_bounds", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 186, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 187, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Type[chaco.array_data_source.ArrayDataSource]"}, {"lineNumber": 187, "col_offset": 38, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 192, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 193, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Type[chaco.array_data_source.ArrayDataSource]"}, {"lineNumber": 193, "col_offset": 38, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 199, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Type[chaco.array_data_source.ArrayDataSource]"}, {"lineNumber": 199, "col_offset": 38, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 204, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Type[chaco.array_data_source.ArrayDataSource]"}, {"lineNumber": 205, "col_offset": 38, "nodeName": "myarray", "type": "numpy.ndarray"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "metadata", "type": "Dict[str, bool]"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "__getstate__", "type": "Callable[[], Any]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 226, "col_offset": 44, "nodeName": "state", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 227, "col_offset": 44, "nodeName": "state", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 228, "col_offset": 41, "nodeName": "state", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "__getstate__", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 235, "col_offset": 44, "nodeName": "state", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 236, "col_offset": 44, "nodeName": "state", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 237, "col_offset": 41, "nodeName": "state", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "set_mask", "type": "Any"}, {"lineNumber": 244, "col_offset": 34, "nodeName": "mymask", "type": "Any"}, {"lineNumber": 246, "col_offset": 30, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 246, "col_offset": 43, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 247, "col_offset": 32, "nodeName": "loads", "type": "Callable[[str], Any]"}, {"lineNumber": 247, "col_offset": 45, "nodeName": "pickled_data_source", "type": "str"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "_post_load", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "_cached_bounds", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "_cached_mask", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 257, "col_offset": 27, "nodeName": "mask", "type": "Any"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 267, "col_offset": 18, "nodeName": "create_array", "type": "Callable[[], Any]"}, {"lineNumber": 268, "col_offset": 13, "nodeName": "PointDataSource", "type": "Type[chaco.point_data_source.PointDataSource]"}, {"lineNumber": 268, "col_offset": 29, "nodeName": "myarray", "type": "numpy.ndarray"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 273, "col_offset": 18, "nodeName": "create_array", "type": "Callable[[], Any]"}, {"lineNumber": 274, "col_offset": 13, "nodeName": "PointDataSource", "type": "Type[chaco.point_data_source.PointDataSource]"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "myarray", "type": "numpy.ndarray"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 65, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 22, "col_offset": 43, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "is_masked", "type": "Callable[[], bool]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 34, "col_offset": 27, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 34, "col_offset": 41, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "is_masked", "type": "Callable[[], bool]"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "assertTraitChanges", "type": "Any"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "set_data", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "new_array", "type": "Any"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "get_bounds", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "assertTraitChanges", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "set_data", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "new_array", "type": "Any"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "get_bounds", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "assertTraitChanges", "type": "Any"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "set_mask", "type": "Callable[[Any], None]"}, {"lineNumber": 64, "col_offset": 38, "nodeName": "mymask", "type": "numpy.ndarray"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 67, "col_offset": 40, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "is_masked", "type": "Callable[[], bool]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "get_bounds", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "is_masked", "type": "Callable[[], bool]"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "assertTraitChanges", "type": "Any"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "remove_mask", "type": "Callable[[], None]"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "is_masked", "type": "Callable[[], bool]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "get_bounds", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "get_data", "type": "Callable[[], Any]"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "get_data", "type": "Callable[[], Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 118, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 120, "col_offset": 17, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 131, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 137, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 144, "col_offset": 17, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "sd", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 157, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 158, "col_offset": 17, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 162, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 167, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 169, "col_offset": 37, "nodeName": "inf", "type": "Any"}, {"lineNumber": 172, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 173, "col_offset": 17, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 174, "col_offset": 43, "nodeName": "inf", "type": "Any"}, {"lineNumber": 177, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 188, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 188, "col_offset": 39, "nodeName": "get_size", "type": "Callable[[], int]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "reverse_map", "type": "Callable[..., Any]"}, {"lineNumber": 198, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "reverse_map", "type": "Callable[..., Any]"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "reverse_map", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "assertTraitChanges", "type": "Any"}, {"lineNumber": 215, "col_offset": 37, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "assertTraitChanges", "type": "Any"}, {"lineNumber": 220, "col_offset": 37, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "metadata", "type": "Dict[str, bool]"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 240, "col_offset": 26, "nodeName": "key", "type": "str"}, {"lineNumber": 240, "col_offset": 31, "nodeName": "state", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 244, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 246, "col_offset": 30, "nodeName": "pickle", "type": "module"}, {"lineNumber": 246, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 247, "col_offset": 32, "nodeName": "pickle", "type": "module"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "unpickled_data_source", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "unpickled_data_source", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 251, "col_offset": 25, "nodeName": "unpickled_data_source", "type": "Any"}, {"lineNumber": 253, "col_offset": 27, "nodeName": "get_data", "type": "Any"}, {"lineNumber": 254, "col_offset": 27, "nodeName": "get_data", "type": "Any"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "get_data_mask", "type": "Any"}, {"lineNumber": 257, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 264, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 267, "col_offset": 18, "nodeName": "self", "type": "PointDataTestCase"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "PointDataTestCase"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 269, "col_offset": 33, "nodeName": "myarray", "type": "numpy.ndarray"}, {"lineNumber": 269, "col_offset": 42, "nodeName": "_data", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "PointDataTestCase"}, {"lineNumber": 270, "col_offset": 24, "nodeName": "value_dimension", "type": "Any"}, {"lineNumber": 273, "col_offset": 18, "nodeName": "self", "type": "PointDataTestCase"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "self", "type": "PointDataTestCase"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "get_bounds", "type": "Callable[[], Tuple[Any, ...]]"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "i", "type": "Any"}, {"lineNumber": 21, "col_offset": 39, "nodeName": "i", "type": "Any"}, {"lineNumber": 21, "col_offset": 44, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 34, "col_offset": 41, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 62, "col_offset": 13, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 64, "col_offset": 38, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 67, "col_offset": 40, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 110, "col_offset": 54, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 114, "col_offset": 17, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "bounds", "type": "Tuple[Any, ...]"}, {"lineNumber": 157, "col_offset": 45, "nodeName": "nan", "type": "Any"}, {"lineNumber": 157, "col_offset": 62, "nodeName": "nan", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "inf", "type": "Any"}, {"lineNumber": 167, "col_offset": 61, "nodeName": "inf", "type": "Any"}, {"lineNumber": 169, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 67, "nodeName": "inf", "type": "Any"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "inf", "type": "Any"}, {"lineNumber": 174, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 188, "col_offset": 39, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 215, "col_offset": 37, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 220, "col_offset": 37, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "data_source", "type": "chaco.array_data_source.ArrayDataSource"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 253, "col_offset": 27, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 254, "col_offset": 27, "nodeName": "unpickled_data_source", "type": "Any"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "unpickled_data_source", "type": "Any"}, {"lineNumber": 264, "col_offset": 26, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 269, "col_offset": 42, "nodeName": "pd", "type": "chaco.point_data_source.PointDataSource"}, {"lineNumber": 270, "col_offset": 24, "nodeName": "pd", "type": "chaco.point_data_source.PointDataSource"}, {"lineNumber": 275, "col_offset": 25, "nodeName": "pd", "type": "chaco.point_data_source.PointDataSource"}, {"lineNumber": 21, "col_offset": 44, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 157, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 157, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 162, "col_offset": 53, "nodeName": "inf", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 53, "nodeName": "inf", "type": "Any"}, {"lineNumber": 172, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "self", "type": "ArrayDataSourceTestCase"}, {"lineNumber": 253, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 264, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 264, "col_offset": 47, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 162, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 264, "col_offset": 35, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 264, "col_offset": 52, "nodeName": "range", "type": "Callable[..., List[int]]"}]