[{"lineNumber": 21, "col_offset": 31, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "test_default_colormaps_smoke", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "test_discrete_colormaps_smoke", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 31, "nodeName": "unittest", "type": "module"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "datarange", "type": "chaco.data_range_1d.DataRange1D"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "cmap_func", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "color_map_functions", "type": "List[Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "datarange", "type": "chaco.data_range_1d.DataRange1D"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "cmap_func", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "discrete_color_map_functions", "type": "List[Callable[..., Any]]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "DataRange1D", "type": "Type[chaco.data_range_1d.DataRange1D]"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "default_colormaps", "type": "module"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "cmapper", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "r_cmapper", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "r_rgba", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "c_cmapper", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "f_cmapper", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "DataRange1D", "type": "Type[chaco.data_range_1d.DataRange1D]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "default_colormaps", "type": "module"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "cmapper", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "r_cmapper", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "r_rgba", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "cmap_func", "type": "Any"}, {"lineNumber": 28, "col_offset": 32, "nodeName": "datarange", "type": "chaco.data_range_1d.DataRange1D"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "map_screen", "type": "Any"}, {"lineNumber": 29, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 38, "col_offset": 61, "nodeName": "datarange", "type": "chaco.data_range_1d.DataRange1D"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "map_screen", "type": "Any"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "x", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "r_rgba", "type": "Any"}, {"lineNumber": 41, "col_offset": 60, "nodeName": "datarange", "type": "chaco.data_range_1d.DataRange1D"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "low", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "high", "type": "Any"}, {"lineNumber": 44, "col_offset": 69, "nodeName": "datarange", "type": "chaco.data_range_1d.DataRange1D"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "low", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "high", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "cmap_func", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "datarange", "type": "chaco.data_range_1d.DataRange1D"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "map_screen", "type": "Any"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 63, "col_offset": 61, "nodeName": "datarange", "type": "chaco.data_range_1d.DataRange1D"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "map_screen", "type": "Any"}, {"lineNumber": 65, "col_offset": 42, "nodeName": "y", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 66, "col_offset": 38, "nodeName": "r_rgba", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "cmapper", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "self", "type": "DefaultColormapsTestCase"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "self", "type": "DefaultColormapsTestCase"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "self", "type": "DefaultColormapsTestCase"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "all", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "self", "type": "DefaultColormapsTestCase"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "all", "type": "Any"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 35, "col_offset": 44, "nodeName": "ones", "type": "Any"}, {"lineNumber": 36, "col_offset": 31, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 37, "col_offset": 41, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "reverse", "type": "Callable[[Any], Callable[..., Any]]"}, {"lineNumber": 38, "col_offset": 50, "nodeName": "cmap_func", "type": "Any"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "r_cmapper", "type": "Any"}, {"lineNumber": 40, "col_offset": 46, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "center", "type": "Callable[..., Callable[..., Any]]"}, {"lineNumber": 41, "col_offset": 49, "nodeName": "cmap_func", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "DefaultColormapsTestCase"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "range", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "DefaultColormapsTestCase"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "range", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "fix", "type": "Callable[[Any, Any], Callable[..., Any]]"}, {"lineNumber": 44, "col_offset": 46, "nodeName": "cmap_func", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "DefaultColormapsTestCase"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "range", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "DefaultColormapsTestCase"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "range", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "cmapper", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "DefaultColormapsTestCase"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "DefaultColormapsTestCase"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "all", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "DefaultColormapsTestCase"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "all", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "DefaultColormapsTestCase"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "all", "type": "Any"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "ones", "type": "Any"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "reverse", "type": "Callable[[Any], Callable[..., Any]]"}, {"lineNumber": 63, "col_offset": 50, "nodeName": "cmap_func", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 43, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "r_cmapper", "type": "Any"}, {"lineNumber": 66, "col_offset": 46, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 35, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "default_colormaps", "type": "module"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "default_colormaps", "type": "module"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "c_cmapper", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "c_cmapper", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "default_colormaps", "type": "module"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "f_cmapper", "type": "Any"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "f_cmapper", "type": "Any"}, {"lineNumber": 61, "col_offset": 44, "nodeName": "np", "type": "module"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "default_colormaps", "type": "module"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "palette", "type": "Any"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "isfinite", "type": "Any"}, {"lineNumber": 31, "col_offset": 40, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 33, "col_offset": 29, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "isfinite", "type": "Any"}, {"lineNumber": 57, "col_offset": 40, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "cmapper", "type": "Any"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "np", "type": "module"}]