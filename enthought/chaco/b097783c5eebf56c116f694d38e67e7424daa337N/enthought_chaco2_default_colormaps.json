[{"lineNumber": 30, "col_offset": 0, "nodeName": "autumn", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "bone", "type": "Callable[..., Any]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "cool", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "copper", "type": "Callable[..., Any]"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "flag", "type": "Callable[..., Any]"}, {"lineNumber": 162, "col_offset": 0, "nodeName": "gray", "type": "Callable[..., Any]"}, {"lineNumber": 171, "col_offset": 0, "nodeName": "hot", "type": "Callable[..., Any]"}, {"lineNumber": 181, "col_offset": 0, "nodeName": "hsv", "type": "Callable[..., Any]"}, {"lineNumber": 200, "col_offset": 0, "nodeName": "jet", "type": "Callable[..., Any]"}, {"lineNumber": 212, "col_offset": 0, "nodeName": "pink", "type": "Callable[..., Any]"}, {"lineNumber": 314, "col_offset": 0, "nodeName": "prism", "type": "Callable[..., Any]"}, {"lineNumber": 390, "col_offset": 0, "nodeName": "spring", "type": "Callable[..., Any]"}, {"lineNumber": 399, "col_offset": 0, "nodeName": "summer", "type": "Callable[..., Any]"}, {"lineNumber": 408, "col_offset": 0, "nodeName": "winter", "type": "Callable[..., Any]"}, {"lineNumber": 417, "col_offset": 0, "nodeName": "cw1_004", "type": "Callable[..., Any]"}, {"lineNumber": 427, "col_offset": 0, "nodeName": "cw1_005", "type": "Callable[..., Any]"}, {"lineNumber": 435, "col_offset": 0, "nodeName": "cw1_006", "type": "Callable[..., Any]"}, {"lineNumber": 444, "col_offset": 0, "nodeName": "cw1_028", "type": "Callable[..., Any]"}, {"lineNumber": 453, "col_offset": 0, "nodeName": "gmt_drywet", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 0, "nodeName": "color_map_functions", "type": "List[Callable[..., Any]]"}, {"lineNumber": 489, "col_offset": 0, "nodeName": "color_map_dict", "type": "Dict[Callable[..., Any], str]"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "color_map_functions", "type": "List[Callable[..., Any]]"}, {"lineNumber": 493, "col_offset": 0, "nodeName": "color_map_name_dict", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 494, "col_offset": 12, "nodeName": "color_map_functions", "type": "List[Callable[..., Any]]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, int, int], Tuple[float, int, int], Tuple[float, int, int], Tuple[float, float, float]]]"}, {"lineNumber": 215, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 402, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 411, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[int, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "colors", "type": "numpy.ndarray"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "colors", "type": "numpy.ndarray"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "colors", "type": "numpy.ndarray"}, {"lineNumber": 447, "col_offset": 4, "nodeName": "colors", "type": "numpy.ndarray"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 485, "col_offset": 23, "nodeName": "jet", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 28, "nodeName": "autumn", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 36, "nodeName": "bone", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 42, "nodeName": "cool", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 48, "nodeName": "copper", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 56, "nodeName": "flag", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 62, "nodeName": "gray", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 68, "nodeName": "hot", "type": "Callable[..., Any]"}, {"lineNumber": 486, "col_offset": 23, "nodeName": "hsv", "type": "Callable[..., Any]"}, {"lineNumber": 486, "col_offset": 28, "nodeName": "pink", "type": "Callable[..., Any]"}, {"lineNumber": 486, "col_offset": 34, "nodeName": "prism", "type": "Callable[..., Any]"}, {"lineNumber": 486, "col_offset": 41, "nodeName": "spring", "type": "Callable[..., Any]"}, {"lineNumber": 486, "col_offset": 49, "nodeName": "summer", "type": "Callable[..., Any]"}, {"lineNumber": 486, "col_offset": 57, "nodeName": "winter", "type": "Callable[..., Any]"}, {"lineNumber": 487, "col_offset": 23, "nodeName": "cw1_004", "type": "Callable[..., Any]"}, {"lineNumber": 487, "col_offset": 32, "nodeName": "cw1_005", "type": "Callable[..., Any]"}, {"lineNumber": 487, "col_offset": 41, "nodeName": "cw1_006", "type": "Callable[..., Any]"}, {"lineNumber": 487, "col_offset": 50, "nodeName": "cw1_028", "type": "Callable[..., Any]"}, {"lineNumber": 487, "col_offset": 59, "nodeName": "gmt_drywet", "type": "Callable[..., Any]"}, {"lineNumber": 491, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 495, "col_offset": 41, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 37, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 65, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 169, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 179, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 198, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 210, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, int, int], Tuple[float, int, int], Tuple[float, int, int], Tuple[float, float, float]]]"}, {"lineNumber": 312, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 312, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 388, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 388, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 397, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 397, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 406, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 406, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 415, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 415, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[int, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 420, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "from_palette_array", "type": "Any"}, {"lineNumber": 425, "col_offset": 42, "nodeName": "colors", "type": "numpy.ndarray"}, {"lineNumber": 429, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 433, "col_offset": 11, "nodeName": "from_palette_array", "type": "Any"}, {"lineNumber": 433, "col_offset": 42, "nodeName": "colors", "type": "numpy.ndarray"}, {"lineNumber": 438, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 442, "col_offset": 11, "nodeName": "from_palette_array", "type": "Any"}, {"lineNumber": 442, "col_offset": 42, "nodeName": "colors", "type": "numpy.ndarray"}, {"lineNumber": 447, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 451, "col_offset": 11, "nodeName": "from_palette_array", "type": "Any"}, {"lineNumber": 451, "col_offset": 42, "nodeName": "colors", "type": "numpy.ndarray"}, {"lineNumber": 479, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 479, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "color_map_dict", "type": "Dict[Callable[..., Any], str]"}, {"lineNumber": 491, "col_offset": 27, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 495, "col_offset": 4, "nodeName": "color_map_name_dict", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 37, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 47, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 56, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 65, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 160, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 169, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 179, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 198, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 210, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 312, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 312, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 388, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 388, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 397, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 397, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 406, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 406, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 415, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 415, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 425, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 425, "col_offset": 56, "nodeName": "range", "type": "Any"}, {"lineNumber": 433, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 433, "col_offset": 56, "nodeName": "range", "type": "Any"}, {"lineNumber": 442, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 442, "col_offset": 56, "nodeName": "range", "type": "Any"}, {"lineNumber": 451, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 451, "col_offset": 56, "nodeName": "range", "type": "Any"}, {"lineNumber": 479, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 479, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 491, "col_offset": 19, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 495, "col_offset": 24, "nodeName": "__name__", "type": "str"}, {"lineNumber": 495, "col_offset": 24, "nodeName": "func", "type": "Callable[..., Any]"}]