[{"lineNumber": 11, "col_offset": 0, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "sec_from_hms", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "TicksTestCase", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "test_null_ranges", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "test_microseconds", "type": "Callable[[Any], Any]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "test_milliseconds", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "test_daily", "type": "Callable[[Any], Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "test_daily_leap", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "test_hourly", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "test_multiday_increment", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "TicksTestCase", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "test_hourly", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "test_minutes", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "test_day_of_month", "type": "Callable[[Any], Any]"}, {"lineNumber": 128, "col_offset": 4, "nodeName": "test_month_of_year", "type": "Callable[[Any], Any]"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "test_microsecond", "type": "Callable[[Any], Any]"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "TicksTestCase", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "test_hourly_scales", "type": "Callable[[Any], Any]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "test_yearly_scales", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "TicksTestCase", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "test_widths", "type": "Callable[[Any], Any]"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "test_labels", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "t", "type": "Tuple[int, int]"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "times", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "dt_to_sec", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "cur", "type": "int"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "ranges", "type": "Tuple[Tuple[Tuple[int, int, int, int, int, int], Tuple[int, int, int, int, int, int], Dict[str, int]], Tuple[Tuple[int, int, int, int, int], Tuple[int, int, int, int, int], Dict[str, int]], Tuple[Tuple[int, int, int, int, int], Tuple[int, int, int, int, int], Dict[str, int]], Tuple[Tuple[int, int, int, int, int], Tuple[int, int, int, int, int], Dict[str, int]]]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "base", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "end", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "base", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "end", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "base", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "secs_per_day", "type": "int"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "end", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "ts", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "end", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "desired_start", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "ts", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "end", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "dstart", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "desired", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "ts", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "end", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "end", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "ts", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "end", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "ts", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "base", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "start", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "end", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "test_intervals", "type": "Tuple[List[Union[Tuple[int, int, int, int, int], int]]]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "expected", "type": "Tuple[float, float]"}, {"lineNumber": 171, "col_offset": 33, "nodeName": "test_intervals", "type": "Tuple[List[Union[Tuple[int, int, int, int, int], int]]]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "fmt", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "scale", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "expected_labels", "type": "List[str]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "test_intervals", "type": "Tuple[List[Union[Tuple[int, int, int, int, int], int]]]"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "test_intervals", "type": "Tuple[List[Union[Tuple[int, int, int, int, int], int]]]"}, {"lineNumber": 13, "col_offset": 21, "nodeName": "DT", "type": "Type[datetime.datetime]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "cur", "type": "int"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "cur", "type": "int"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "cur", "type": "int"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "start", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "end", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "kw", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "base", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "base", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "trange", "type": "Any"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "start", "type": "Any"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "end", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "check_ticks", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "base", "type": "Any"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "base", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "trange", "type": "Any"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "start", "type": "Any"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "end", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "check_ticks", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "trange", "type": "Any"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "start", "type": "Any"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "end", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "check_ticks", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "trange", "type": "Any"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "base", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "check_ticks", "type": "Any"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "trange", "type": "Any"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "start", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "end", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "check_ticks", "type": "Any"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "trange", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "check_ticks", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "trange", "type": "Any"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "start", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "check_ticks", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 13, "nodeName": "TimeScale", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "check_ticks", "type": "Any"}, {"lineNumber": 102, "col_offset": 47, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "TimeScale", "type": "Any"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "check_ticks", "type": "Any"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "TimeScale", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "check_ticks", "type": "Any"}, {"lineNumber": 119, "col_offset": 46, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 124, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "check_ticks", "type": "Any"}, {"lineNumber": 125, "col_offset": 46, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 13, "nodeName": "TimeScale", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 131, "col_offset": 14, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "check_ticks", "type": "Any"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 13, "nodeName": "TimeScale", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "base", "type": "Any"}, {"lineNumber": 141, "col_offset": 14, "nodeName": "base", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "start", "type": "Any"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "end", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "check_ticks", "type": "Any"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "ScaleSystem", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "check_ticks", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 161, "col_offset": 32, "nodeName": "desired", "type": "List[Any]"}, {"lineNumber": 167, "col_offset": 14, "nodeName": "TimeFormatter", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "TimeScale", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "start", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "end", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "width", "type": "int"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "est_width", "type": "Any"}, {"lineNumber": 176, "col_offset": 14, "nodeName": "TimeFormatter", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "ScaleSystem", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "start", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "end", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "width", "type": "int"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 13, "col_offset": 25, "nodeName": "args", "type": "Tuple[int, int, int]"}, {"lineNumber": 13, "col_offset": 33, "nodeName": "kw", "type": "Dict[nothing, nothing]"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "t", "type": "Tuple[int, int]"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "t", "type": "Tuple[int, int]"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "t", "type": "Tuple[int, int]"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "t", "type": "Tuple[int, int]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "ret", "type": "List[Any]"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "start", "type": "Any"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "cur", "type": "int"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "assert_empty", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "base", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "i", "type": "float"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "i", "type": "float"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "TRangeTestCase"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "base", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "i", "type": "float"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "i", "type": "float"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TRangeTestCase"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "TRangeTestCase"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "base", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "base", "type": "Any"}, {"lineNumber": 70, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "TRangeTestCase"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "start", "type": "Any"}, {"lineNumber": 77, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TRangeTestCase"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "start", "type": "Any"}, {"lineNumber": 84, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TRangeTestCase"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "start", "type": "Any"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "start", "type": "Any"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TRangeTestCase"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "desired_start", "type": "Any"}, {"lineNumber": 101, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "TimeScaleTestCase"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "start", "type": "Any"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "end", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TimeScaleTestCase"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "start", "type": "Any"}, {"lineNumber": 110, "col_offset": 41, "nodeName": "end", "type": "Any"}, {"lineNumber": 111, "col_offset": 32, "nodeName": "sec_from_hms", "type": "Callable[..., Any]"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "dstart", "type": "Any"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "starmap", "type": "Callable[[Any, Iterable[Any]], Iterator[Any]]"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TimeScaleTestCase"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "start", "type": "Any"}, {"lineNumber": 119, "col_offset": 40, "nodeName": "end", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "starmap", "type": "Callable[[Any, Iterable[Any]], Iterator[Any]]"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "TimeScaleTestCase"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "start", "type": "Any"}, {"lineNumber": 125, "col_offset": 40, "nodeName": "end", "type": "Any"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "starmap", "type": "Callable[[Any, Iterable[Any]], Iterator[Any]]"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TimeScaleTestCase"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "ticks", "type": "Any"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "start", "type": "Any"}, {"lineNumber": 133, "col_offset": 40, "nodeName": "end", "type": "Any"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "ts", "type": "Any"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "base", "type": "Any"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "i", "type": "float"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "i", "type": "float"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "self", "type": "TimeScaleTestCase"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "TimeScale", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "ticker", "type": "Any"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 44, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "starmap", "type": "Callable[[Any, Iterable[Any]], Iterator[Any]]"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "CalendarScaleSystemTestCase"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "label_width", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 173, "col_offset": 29, "nodeName": "est_width", "type": "Any"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "expected", "type": "Tuple[float, float]"}, {"lineNumber": 177, "col_offset": 29, "nodeName": "HMSScales", "type": "Any"}, {"lineNumber": 178, "col_offset": 27, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 178, "col_offset": 40, "nodeName": "m", "type": "int"}, {"lineNumber": 178, "col_offset": 47, "nodeName": "m", "type": "int"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "labels", "type": "Any"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "label", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 184, "col_offset": 37, "nodeName": "expected_labels", "type": "List[str]"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "t", "type": "Tuple[int, int]"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "t", "type": "Tuple[int, int]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "TRangeTestCase"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "trange", "type": "Any"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "base", "type": "Any"}, {"lineNumber": 64, "col_offset": 45, "nodeName": "base", "type": "Any"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "secs_per_day", "type": "int"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "secs_per_day", "type": "int"}, {"lineNumber": 70, "col_offset": 48, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 84, "col_offset": 43, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 90, "col_offset": 46, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "ts", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "ts", "type": "Any"}, {"lineNumber": 111, "col_offset": 54, "nodeName": "desired", "type": "Tuple[Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int], Tuple[int, int]]"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "ts", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "ts", "type": "Any"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "ts", "type": "Any"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "TimeScale", "type": "Any"}, {"lineNumber": 154, "col_offset": 42, "nodeName": "dt", "type": "int"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "scale", "type": "Any"}, {"lineNumber": 172, "col_offset": 42, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 55, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 77, "nodeName": "width", "type": "int"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "self", "type": "TimeFormatterTestCase"}, {"lineNumber": 178, "col_offset": 52, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 182, "col_offset": 21, "nodeName": "scale", "type": "Any"}, {"lineNumber": 182, "col_offset": 34, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 182, "col_offset": 47, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 182, "col_offset": 69, "nodeName": "width", "type": "int"}, {"lineNumber": 183, "col_offset": 46, "nodeName": "labels", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "self", "type": "TimeFormatterTestCase"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 50, "nodeName": "DTS", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 63, "nodeName": "kw", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "TimeScale", "type": "Any"}, {"lineNumber": 153, "col_offset": 44, "nodeName": "dt", "type": "int"}, {"lineNumber": 154, "col_offset": 34, "nodeName": "dt", "type": "int"}, {"lineNumber": 172, "col_offset": 47, "nodeName": "start", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 172, "col_offset": 60, "nodeName": "end", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 182, "col_offset": 39, "nodeName": "start", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 182, "col_offset": 52, "nodeName": "end", "type": "Tuple[int, int, int, int, int]"}, {"lineNumber": 183, "col_offset": 33, "nodeName": "_", "type": "Any"}, {"lineNumber": 183, "col_offset": 36, "nodeName": "label", "type": "Any"}, {"lineNumber": 43, "col_offset": 42, "nodeName": "start", "type": "Any"}, {"lineNumber": 43, "col_offset": 55, "nodeName": "end", "type": "Any"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "dt", "type": "int"}]