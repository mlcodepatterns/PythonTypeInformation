[{"lineNumber": 16, "col_offset": 26, "nodeName": "UnittestTools", "type": "Any"}, {"lineNumber": 16, "col_offset": 41, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 258, "col_offset": 24, "nodeName": "TestCase", "type": "Any"}, {"lineNumber": 16, "col_offset": 41, "nodeName": "unittest", "type": "Any"}, {"lineNumber": 258, "col_offset": 24, "nodeName": "unittest", "type": "Any"}, {"lineNumber": 278, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "mymask", "type": "numpy.ndarray"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "new_array", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "new_array", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "myarray", "type": "numpy.ndarray"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 149, "col_offset": 21, "nodeName": "nan", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "sd", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "myarray", "type": "numpy.ndarray"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "myarray", "type": "numpy.ndarray"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "persist_data", "type": "bool"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "pickled_data_source", "type": "bytes"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "unpickled_data_source", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "myarray", "type": "numpy.ndarray"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "myarray", "type": "numpy.ndarray"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "pd", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "run", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 19, "col_offset": 23, "nodeName": "arange", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "ArrayDataSource", "type": "Any"}, {"lineNumber": 21, "col_offset": 43, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "_data", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "value_dimension", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "sort_order", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 31, "col_offset": 41, "nodeName": "_data", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "value_dimension", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "sort_order", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "arange", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "new_array", "type": "Any"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "_data", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "sort_order", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "arange", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "new_array", "type": "Any"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "_data", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "sort_order", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "_data", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "mymask", "type": "numpy.ndarray"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "_cached_mask", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "set_mask", "type": "Any"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "mymask", "type": "numpy.ndarray"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "_data", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertIsNone", "type": "Any"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "_cached_mask", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assertFalse", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "set_mask", "type": "Any"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "mymask", "type": "numpy.ndarray"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 93, "col_offset": 14, "nodeName": "mask", "type": "Any"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "get_data_mask", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "mask", "type": "Any"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "mymask", "type": "numpy.ndarray"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 101, "col_offset": 14, "nodeName": "mask", "type": "Any"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "get_data_mask", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 107, "col_offset": 14, "nodeName": "mask", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "get_data_mask", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "mask", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "get_bounds", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 118, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Any"}, {"lineNumber": 118, "col_offset": 38, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "get_bounds", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Any"}, {"lineNumber": 124, "col_offset": 38, "nodeName": "myarray", "type": "numpy.ndarray"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "get_bounds", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "get_bounds", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 136, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Any"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "get_bounds", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Any"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "get_bounds", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 145, "col_offset": 25, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 148, "col_offset": 18, "nodeName": "empty", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "ArrayDataSource", "type": "Any"}, {"lineNumber": 150, "col_offset": 29, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "get_bounds", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 156, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "get_bounds", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 158, "col_offset": 25, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Any"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "get_bounds", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 163, "col_offset": 25, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Any"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "get_bounds", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Any"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "get_bounds", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 177, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Any"}, {"lineNumber": 177, "col_offset": 38, "nodeName": "myarray", "type": "numpy.ndarray"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "get_bounds", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 185, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Any"}, {"lineNumber": 185, "col_offset": 38, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Any"}, {"lineNumber": 191, "col_offset": 38, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 197, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Any"}, {"lineNumber": 197, "col_offset": 38, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 202, "col_offset": 18, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 203, "col_offset": 22, "nodeName": "ArrayDataSource", "type": "Any"}, {"lineNumber": 203, "col_offset": 38, "nodeName": "myarray", "type": "numpy.ndarray"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "metadata", "type": "Dict[str, bool]"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "__getstate__", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "__getstate__", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "set_mask", "type": "Any"}, {"lineNumber": 242, "col_offset": 34, "nodeName": "mymask", "type": "Any"}, {"lineNumber": 244, "col_offset": 30, "nodeName": "dumps", "type": "Callable[..., bytes]"}, {"lineNumber": 244, "col_offset": 43, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 245, "col_offset": 45, "nodeName": "pickled_data_source", "type": "bytes"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "_post_load", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "_cached_bounds", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "_cached_mask", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 255, "col_offset": 27, "nodeName": "mask", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "create_array", "type": "Callable[[], Any]"}, {"lineNumber": 266, "col_offset": 13, "nodeName": "PointDataSource", "type": "Any"}, {"lineNumber": 266, "col_offset": 29, "nodeName": "myarray", "type": "numpy.ndarray"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "assert_", "type": "Any"}, {"lineNumber": 272, "col_offset": 18, "nodeName": "create_array", "type": "Callable[[], Any]"}, {"lineNumber": 273, "col_offset": 13, "nodeName": "PointDataSource", "type": "Any"}, {"lineNumber": 273, "col_offset": 29, "nodeName": "myarray", "type": "numpy.ndarray"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "assertEqual", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "nose", "type": "Any"}, {"lineNumber": 20, "col_offset": 65, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 21, "col_offset": 43, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "is_masked", "type": "Any"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 31, "col_offset": 41, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "is_masked", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "assertTraitChanges", "type": "Any"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "set_data", "type": "Any"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "new_array", "type": "Any"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "get_bounds", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "assertTraitChanges", "type": "Any"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "set_data", "type": "Any"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "new_array", "type": "Any"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "get_bounds", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "assertTraitChanges", "type": "Any"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "set_mask", "type": "Any"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "mymask", "type": "numpy.ndarray"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "is_masked", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "get_bounds", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 69, "col_offset": 34, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "is_masked", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "assertTraitChanges", "type": "Any"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "remove_mask", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "is_masked", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "get_bounds", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "get_data", "type": "Any"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "get_data", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 95, "col_offset": 33, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 101, "col_offset": 21, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 137, "col_offset": 17, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 143, "col_offset": 17, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "sd", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 156, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 161, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "inf", "type": "Any"}, {"lineNumber": 171, "col_offset": 38, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 173, "col_offset": 43, "nodeName": "inf", "type": "Any"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 67, "nodeName": "unicode", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "get_size", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "reverse_map", "type": "Any"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "arange", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "reverse_map", "type": "Any"}, {"lineNumber": 205, "col_offset": 13, "nodeName": "assertRaises", "type": "Any"}, {"lineNumber": 205, "col_offset": 31, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "reverse_map", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "assertTraitChanges", "type": "Any"}, {"lineNumber": 213, "col_offset": 37, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "assertTraitChanges", "type": "Any"}, {"lineNumber": 218, "col_offset": 37, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 224, "col_offset": 49, "nodeName": "state", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 225, "col_offset": 49, "nodeName": "state", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 226, "col_offset": 46, "nodeName": "state", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 233, "col_offset": 49, "nodeName": "state", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 234, "col_offset": 49, "nodeName": "state", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 235, "col_offset": 46, "nodeName": "state", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "assertTrue", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 242, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 30, "nodeName": "pickle", "type": "module"}, {"lineNumber": 244, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "pickle", "type": "module"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "unpickled_data_source", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 248, "col_offset": 25, "nodeName": "unpickled_data_source", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 25, "nodeName": "unpickled_data_source", "type": "Any"}, {"lineNumber": 251, "col_offset": 27, "nodeName": "get_data", "type": "Any"}, {"lineNumber": 252, "col_offset": 27, "nodeName": "get_data", "type": "Any"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "get_data_mask", "type": "Any"}, {"lineNumber": 255, "col_offset": 33, "nodeName": "ones", "type": "Any"}, {"lineNumber": 262, "col_offset": 21, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "self", "type": "PointDataTestCase"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "self", "type": "PointDataTestCase"}, {"lineNumber": 267, "col_offset": 24, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 267, "col_offset": 33, "nodeName": "myarray", "type": "numpy.ndarray"}, {"lineNumber": 267, "col_offset": 42, "nodeName": "_data", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "self", "type": "PointDataTestCase"}, {"lineNumber": 268, "col_offset": 21, "nodeName": "value_dimension", "type": "Any"}, {"lineNumber": 272, "col_offset": 18, "nodeName": "self", "type": "PointDataTestCase"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "self", "type": "PointDataTestCase"}, {"lineNumber": 274, "col_offset": 25, "nodeName": "get_bounds", "type": "Any"}, {"lineNumber": 20, "col_offset": 29, "nodeName": "i", "type": "Any"}, {"lineNumber": 20, "col_offset": 39, "nodeName": "i", "type": "Any"}, {"lineNumber": 20, "col_offset": 44, "nodeName": "myarray", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 31, "col_offset": 41, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 39, "col_offset": 13, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 39, "col_offset": 37, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 59, "col_offset": 13, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 93, "col_offset": 21, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 109, "col_offset": 54, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "bounds", "type": "Any"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "nan", "type": "Any"}, {"lineNumber": 156, "col_offset": 62, "nodeName": "nan", "type": "Any"}, {"lineNumber": 163, "col_offset": 35, "nodeName": "inf", "type": "Any"}, {"lineNumber": 166, "col_offset": 61, "nodeName": "inf", "type": "Any"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 67, "nodeName": "inf", "type": "Any"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "inf", "type": "Any"}, {"lineNumber": 173, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 205, "col_offset": 13, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 209, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 213, "col_offset": 37, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 218, "col_offset": 13, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 218, "col_offset": 37, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 28, "nodeName": "key", "type": "str"}, {"lineNumber": 238, "col_offset": 39, "nodeName": "state", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 251, "col_offset": 27, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 252, "col_offset": 27, "nodeName": "unpickled_data_source", "type": "Any"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "unpickled_data_source", "type": "Any"}, {"lineNumber": 262, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 262, "col_offset": 36, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 267, "col_offset": 42, "nodeName": "pd", "type": "Any"}, {"lineNumber": 268, "col_offset": 21, "nodeName": "pd", "type": "Any"}, {"lineNumber": 274, "col_offset": 25, "nodeName": "pd", "type": "Any"}, {"lineNumber": 20, "col_offset": 44, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 78, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 156, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 156, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 161, "col_offset": 53, "nodeName": "inf", "type": "Any"}, {"lineNumber": 163, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 166, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 53, "nodeName": "inf", "type": "Any"}, {"lineNumber": 171, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 173, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "self", "type": "ArrayDataSourceTest"}, {"lineNumber": 251, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 53, "nodeName": "np", "type": "module"}, {"lineNumber": 171, "col_offset": 53, "nodeName": "np", "type": "module"}]