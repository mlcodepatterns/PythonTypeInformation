[{"lineNumber": 29, "col_offset": 0, "nodeName": "autumn", "type": "Callable[..., Any]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "bone", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "cool", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "copper", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "flag", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 0, "nodeName": "gray", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 0, "nodeName": "hot", "type": "Callable[..., Any]"}, {"lineNumber": 180, "col_offset": 0, "nodeName": "hsv", "type": "Callable[..., Any]"}, {"lineNumber": 199, "col_offset": 0, "nodeName": "jet", "type": "Callable[..., Any]"}, {"lineNumber": 211, "col_offset": 0, "nodeName": "pink", "type": "Callable[..., Any]"}, {"lineNumber": 313, "col_offset": 0, "nodeName": "prism", "type": "Callable[..., Any]"}, {"lineNumber": 389, "col_offset": 0, "nodeName": "spring", "type": "Callable[..., Any]"}, {"lineNumber": 398, "col_offset": 0, "nodeName": "summer", "type": "Callable[..., Any]"}, {"lineNumber": 407, "col_offset": 0, "nodeName": "winter", "type": "Callable[..., Any]"}, {"lineNumber": 416, "col_offset": 0, "nodeName": "cw1_004", "type": "Callable[..., Any]"}, {"lineNumber": 426, "col_offset": 0, "nodeName": "cw1_005", "type": "Callable[..., Any]"}, {"lineNumber": 434, "col_offset": 0, "nodeName": "cw1_006", "type": "Callable[..., Any]"}, {"lineNumber": 443, "col_offset": 0, "nodeName": "cw1_028", "type": "Callable[..., Any]"}, {"lineNumber": 452, "col_offset": 0, "nodeName": "gmt_drywet", "type": "Callable[..., Any]"}, {"lineNumber": 484, "col_offset": 0, "nodeName": "color_map_functions", "type": "List[Callable[..., Any]]"}, {"lineNumber": 488, "col_offset": 0, "nodeName": "color_map_dict", "type": "Dict[Callable[..., Any], str]"}, {"lineNumber": 489, "col_offset": 4, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 489, "col_offset": 12, "nodeName": "color_map_functions", "type": "List[Callable[..., Any]]"}, {"lineNumber": 492, "col_offset": 0, "nodeName": "color_map_name_dict", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 493, "col_offset": 4, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 493, "col_offset": 12, "nodeName": "color_map_functions", "type": "List[Callable[..., Any]]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 69, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, int, int], Tuple[float, int, int], Tuple[float, int, int], Tuple[float, float, float]]]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 401, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[int, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "colors", "type": "numpy.ndarray"}, {"lineNumber": 428, "col_offset": 4, "nodeName": "colors", "type": "numpy.ndarray"}, {"lineNumber": 437, "col_offset": 4, "nodeName": "colors", "type": "numpy.ndarray"}, {"lineNumber": 446, "col_offset": 4, "nodeName": "colors", "type": "numpy.ndarray"}, {"lineNumber": 454, "col_offset": 4, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 484, "col_offset": 23, "nodeName": "jet", "type": "Callable[..., Any]"}, {"lineNumber": 484, "col_offset": 28, "nodeName": "autumn", "type": "Callable[..., Any]"}, {"lineNumber": 484, "col_offset": 36, "nodeName": "bone", "type": "Callable[..., Any]"}, {"lineNumber": 484, "col_offset": 42, "nodeName": "cool", "type": "Callable[..., Any]"}, {"lineNumber": 484, "col_offset": 48, "nodeName": "copper", "type": "Callable[..., Any]"}, {"lineNumber": 484, "col_offset": 56, "nodeName": "flag", "type": "Callable[..., Any]"}, {"lineNumber": 484, "col_offset": 62, "nodeName": "gray", "type": "Callable[..., Any]"}, {"lineNumber": 484, "col_offset": 68, "nodeName": "hot", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 23, "nodeName": "hsv", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 28, "nodeName": "pink", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 34, "nodeName": "prism", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 41, "nodeName": "spring", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 49, "nodeName": "summer", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 57, "nodeName": "winter", "type": "Callable[..., Any]"}, {"lineNumber": 486, "col_offset": 23, "nodeName": "cw1_004", "type": "Callable[..., Any]"}, {"lineNumber": 486, "col_offset": 32, "nodeName": "cw1_005", "type": "Callable[..., Any]"}, {"lineNumber": 486, "col_offset": 41, "nodeName": "cw1_006", "type": "Callable[..., Any]"}, {"lineNumber": 486, "col_offset": 50, "nodeName": "cw1_028", "type": "Callable[..., Any]"}, {"lineNumber": 486, "col_offset": 59, "nodeName": "gmt_drywet", "type": "Callable[..., Any]"}, {"lineNumber": 490, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 494, "col_offset": 41, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 46, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 159, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 168, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 178, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 197, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 209, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, int, int], Tuple[float, int, int], Tuple[float, int, int], Tuple[float, float, float]]]"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 311, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 387, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 387, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 396, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 396, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 405, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 405, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 414, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 414, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Union[Tuple[Tuple[float, float, float], Tuple[int, float, float]], Tuple[Tuple[float, float, float], Tuple[float, float, float]]]]"}, {"lineNumber": 419, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "from_palette_array", "type": "Any"}, {"lineNumber": 424, "col_offset": 42, "nodeName": "colors", "type": "numpy.ndarray"}, {"lineNumber": 428, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "from_palette_array", "type": "Any"}, {"lineNumber": 432, "col_offset": 42, "nodeName": "colors", "type": "numpy.ndarray"}, {"lineNumber": 437, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 441, "col_offset": 11, "nodeName": "from_palette_array", "type": "Any"}, {"lineNumber": 441, "col_offset": 42, "nodeName": "colors", "type": "numpy.ndarray"}, {"lineNumber": 446, "col_offset": 13, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 450, "col_offset": 11, "nodeName": "from_palette_array", "type": "Any"}, {"lineNumber": 450, "col_offset": 42, "nodeName": "colors", "type": "numpy.ndarray"}, {"lineNumber": 478, "col_offset": 11, "nodeName": "from_segment_map", "type": "Any"}, {"lineNumber": 478, "col_offset": 40, "nodeName": "_data", "type": "Dict[str, Tuple[Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float], Tuple[float, float, float]]]"}, {"lineNumber": 490, "col_offset": 4, "nodeName": "color_map_dict", "type": "Dict[Callable[..., Any], str]"}, {"lineNumber": 490, "col_offset": 27, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 494, "col_offset": 4, "nodeName": "color_map_name_dict", "type": "Dict[str, Callable[..., Any]]"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 36, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 46, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 55, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 64, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 159, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 168, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 178, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 197, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 209, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 311, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 387, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 387, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 396, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 396, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 405, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 405, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 414, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 414, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 424, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 424, "col_offset": 56, "nodeName": "range", "type": "Any"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 432, "col_offset": 56, "nodeName": "range", "type": "Any"}, {"lineNumber": 441, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 441, "col_offset": 56, "nodeName": "range", "type": "Any"}, {"lineNumber": 450, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 450, "col_offset": 56, "nodeName": "range", "type": "Any"}, {"lineNumber": 478, "col_offset": 11, "nodeName": "ColorMapper", "type": "Any"}, {"lineNumber": 478, "col_offset": 53, "nodeName": "range", "type": "Any"}, {"lineNumber": 490, "col_offset": 19, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 494, "col_offset": 24, "nodeName": "__name__", "type": "str"}, {"lineNumber": 494, "col_offset": 24, "nodeName": "func", "type": "Callable[..., Any]"}]