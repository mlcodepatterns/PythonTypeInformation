[{"lineNumber": 18, "col_offset": 23, "nodeName": "HasTraits", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "AbstractColormap", "type": "Any"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "segment_map", "type": "Any"}, {"lineNumber": 24, "col_offset": 18, "nodeName": "Any", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "steps", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "range_low_setting", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "range_high_setting", "type": "Any"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "color_bands", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "steps", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "name", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "Str", "type": "Any"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "low_pos", "type": "None"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "high_pos", "type": "None"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "_dirty", "type": "Any"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "true", "type": "Any"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "_segmentdata", "type": "Any"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 125, "col_offset": 4, "nodeName": "from_palette_array", "type": "staticmethod"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "from_segment_map", "type": "staticmethod"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "from_file", "type": "staticmethod"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "Int", "type": "Any"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "Trait", "type": "Any"}, {"lineNumber": 26, "col_offset": 46, "nodeName": "Float", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "Trait", "type": "Any"}, {"lineNumber": 27, "col_offset": 47, "nodeName": "Float", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "colormap", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "segment_map", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "steps", "type": "Any"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "steps", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "range_low_setting", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "low_setting", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "range_high_setting", "type": "Any"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "high_setting", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "colormap", "type": "ColorMapper"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "range", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "colormap", "type": "ColorMapper"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "Property", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "Array", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "Int", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "n_colors", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "offsets", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "segment_map", "type": "Dict[str, Iterator[Tuple[Any, ...]]]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "red_values", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "green_values", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "blue_values", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "staticmethod", "type": "Type[staticmethod]"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "from_palette_array", "type": "Callable[..., Any]"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "staticmethod", "type": "Type[staticmethod]"}, {"lineNumber": 137, "col_offset": 36, "nodeName": "from_segment_map", "type": "Callable[..., Any]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "colormap_file", "type": "TextIO"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "rgbarr", "type": "List[List[Tuple[float, float, float]]]"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "rgbdict", "type": "Dict[str, List[Tuple[float, float, float]]]"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "staticmethod", "type": "Type[staticmethod]"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "from_file", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "_segmentdata", "type": "Any"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "segmentdata", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "_dirty", "type": "bool"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "high", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "high", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "low", "type": "Any"}, {"lineNumber": 183, "col_offset": 14, "nodeName": "low", "type": "Any"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "_dirty", "type": "bool"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "indices", "type": "Any"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "_dirty", "type": "Any"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "result", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "_dirty", "type": "bool"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "y0", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "y1", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "lut", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "xind", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "ind", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "lut", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "lut", "type": "Any"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "lut", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "alpha", "type": "Union[Any, float]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "alpha", "type": "Union[Any, float]"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "xa", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 323, "col_offset": 22, "nodeName": "alpha", "type": "Union[Any, float]"}, {"lineNumber": 327, "col_offset": 15, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "ColorMapTemplate"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "copy", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "ColorMapTemplate"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "colormap", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "ColorMapTemplate"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "range", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "ColorMapTemplate"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "range", "type": "Any"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "ColorMapper", "type": "Type[ColorMapper]"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "segment_map", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "range", "type": "Any"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "range", "type": "Any"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "n_colors", "type": "Any"}, {"lineNumber": 110, "col_offset": 18, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "n_colors", "type": "Any"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "offsets", "type": "Any"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "arange", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "offsets", "type": "Any"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "palette", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "segment_map", "type": "Dict[str, Iterator[Tuple[Any, ...]]]"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 117, "col_offset": 33, "nodeName": "offsets", "type": "Any"}, {"lineNumber": 117, "col_offset": 42, "nodeName": "red_values", "type": "Any"}, {"lineNumber": 117, "col_offset": 54, "nodeName": "red_values", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "palette", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "segment_map", "type": "Dict[str, Iterator[Tuple[Any, ...]]]"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "offsets", "type": "Any"}, {"lineNumber": 119, "col_offset": 44, "nodeName": "green_values", "type": "Any"}, {"lineNumber": 119, "col_offset": 58, "nodeName": "green_values", "type": "Any"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "palette", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "segment_map", "type": "Dict[str, Iterator[Tuple[Any, ...]]]"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "offsets", "type": "Any"}, {"lineNumber": 121, "col_offset": 43, "nodeName": "blue_values", "type": "Any"}, {"lineNumber": 121, "col_offset": 56, "nodeName": "blue_values", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "ColorMapper", "type": "Type[ColorMapper]"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "segment_map", "type": "Dict[str, Iterator[Tuple[Any, ...]]]"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "ColorMapper", "type": "Type[ColorMapper]"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "segment_map", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "open", "type": "Callable"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "filename", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "readlines", "type": "Callable"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "strvalues", "type": "List[str]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "values", "type": "List[float]"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "colorchannel", "type": "int"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "traits", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "rstrip", "type": "Callable[..., str]"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "ColorMapper", "type": "Type[ColorMapper]"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "rgbdict", "type": "Dict[str, List[Tuple[float, float, float]]]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "range", "type": "Any"}, {"lineNumber": 183, "col_offset": 14, "nodeName": "range", "type": "Any"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "high", "type": "Any"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "low", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "norm_data", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "norm_data", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "_map", "type": "Callable[..., Any]"}, {"lineNumber": 191, "col_offset": 25, "nodeName": "norm_data", "type": "Any"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 200, "col_offset": 80, "nodeName": "steps", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "clip", "type": "Any"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "color_depth", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "result", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "result", "type": "Iterator[Tuple[Any, ...]]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "_make_mapping_array", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "steps", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "_make_mapping_array", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "steps", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "_make_mapping_array", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "steps", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "adata", "type": "numpy.ndarray"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "adata", "type": "numpy.ndarray"}, {"lineNumber": 267, "col_offset": 13, "nodeName": "adata", "type": "numpy.ndarray"}, {"lineNumber": 268, "col_offset": 13, "nodeName": "adata", "type": "numpy.ndarray"}, {"lineNumber": 269, "col_offset": 13, "nodeName": "adata", "type": "numpy.ndarray"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "sometrue", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 279, "col_offset": 14, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 279, "col_offset": 26, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 280, "col_offset": 15, "nodeName": "arange", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "lut", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "lut", "type": "Any"}, {"lineNumber": 286, "col_offset": 17, "nodeName": "y1", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "lut", "type": "Any"}, {"lineNumber": 287, "col_offset": 18, "nodeName": "y0", "type": "Any"}, {"lineNumber": 290, "col_offset": 14, "nodeName": "where", "type": "Any"}, {"lineNumber": 290, "col_offset": 34, "nodeName": "lut", "type": "Any"}, {"lineNumber": 291, "col_offset": 14, "nodeName": "where", "type": "Any"}, {"lineNumber": 291, "col_offset": 34, "nodeName": "lut", "type": "Any"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "min", "type": "Callable"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 306, "col_offset": 16, "nodeName": "max", "type": "Callable"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "alpha", "type": "Union[Any, float]"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "vtype", "type": "str"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "xa", "type": "numpy.ndarray"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "vtype", "type": "str"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "xa", "type": "numpy.ndarray"}, {"lineNumber": 318, "col_offset": 14, "nodeName": "astype", "type": "Any"}, {"lineNumber": 318, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 319, "col_offset": 15, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 319, "col_offset": 36, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 320, "col_offset": 8, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 320, "col_offset": 22, "nodeName": "take", "type": "Any"}, {"lineNumber": 320, "col_offset": 27, "nodeName": "_red_lut", "type": "Any"}, {"lineNumber": 320, "col_offset": 42, "nodeName": "xa", "type": "Any"}, {"lineNumber": 321, "col_offset": 8, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 321, "col_offset": 22, "nodeName": "take", "type": "Any"}, {"lineNumber": 321, "col_offset": 27, "nodeName": "_green_lut", "type": "Any"}, {"lineNumber": 321, "col_offset": 44, "nodeName": "xa", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 322, "col_offset": 22, "nodeName": "take", "type": "Any"}, {"lineNumber": 322, "col_offset": 27, "nodeName": "_blue_lut", "type": "Any"}, {"lineNumber": 322, "col_offset": 43, "nodeName": "xa", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 324, "col_offset": 11, "nodeName": "vtype", "type": "str"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "rgba", "type": "Tuple[Any, ...]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "from_colormap", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "colormap", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "_segmentdata", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "colormap", "type": "Any"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "colormap", "type": "Any"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "self", "type": "ColorMapTemplate"}, {"lineNumber": 46, "col_offset": 57, "nodeName": "steps", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "colormap", "type": "ColorMapper"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "DataRange1D", "type": "Any"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "palette", "type": "Any"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 123, "col_offset": 42, "nodeName": "traits", "type": "Dict[str, Any]"}, {"lineNumber": 135, "col_offset": 42, "nodeName": "traits", "type": "Dict[str, Any]"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "colormap_file", "type": "TextIO"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 146, "col_offset": 32, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "channeltuple", "type": "Tuple[float, float, float]"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "rgbarr", "type": "List[List[Tuple[float, float, float]]]"}, {"lineNumber": 153, "col_offset": 27, "nodeName": "rgbarr", "type": "List[List[Tuple[float, float, float]]]"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "rgbarr", "type": "List[List[Tuple[float, float, float]]]"}, {"lineNumber": 156, "col_offset": 38, "nodeName": "traits", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 173, "col_offset": 44, "nodeName": "kwtraits", "type": "Dict[str, Any]"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 183, "col_offset": 14, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "clip", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 200, "col_offset": 80, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "astype", "type": "Any"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "IntType", "type": "Any"}, {"lineNumber": 202, "col_offset": 48, "nodeName": "steps", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "_recalculate", "type": "Callable[[], Any]"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "ones", "type": "Any"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "steps", "type": "Any"}, {"lineNumber": 216, "col_offset": 21, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "_red_lut", "type": "Any"}, {"lineNumber": 216, "col_offset": 40, "nodeName": "_green_lut", "type": "Any"}, {"lineNumber": 216, "col_offset": 57, "nodeName": "_blue_lut", "type": "Any"}, {"lineNumber": 216, "col_offset": 73, "nodeName": "alpha", "type": "Any"}, {"lineNumber": 219, "col_offset": 21, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "_red_lut", "type": "Any"}, {"lineNumber": 219, "col_offset": 40, "nodeName": "_green_lut", "type": "Any"}, {"lineNumber": 219, "col_offset": 57, "nodeName": "_blue_lut", "type": "Any"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "_segmentdata", "type": "Any"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 230, "col_offset": 24, "nodeName": "_segmentdata", "type": "Any"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "_segmentdata", "type": "Any"}, {"lineNumber": 260, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 260, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 265, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 272, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 274, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 275, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 278, "col_offset": 17, "nodeName": "n", "type": "Any"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "n", "type": "Any"}, {"lineNumber": 280, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 280, "col_offset": 28, "nodeName": "n", "type": "Any"}, {"lineNumber": 281, "col_offset": 14, "nodeName": "searchsorted", "type": "Any"}, {"lineNumber": 281, "col_offset": 27, "nodeName": "x", "type": "Any"}, {"lineNumber": 281, "col_offset": 30, "nodeName": "xind", "type": "Any"}, {"lineNumber": 285, "col_offset": 55, "nodeName": "take", "type": "Any"}, {"lineNumber": 285, "col_offset": 60, "nodeName": "y1", "type": "Any"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "lut", "type": "Any"}, {"lineNumber": 291, "col_offset": 20, "nodeName": "lut", "type": "Any"}, {"lineNumber": 307, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 307, "col_offset": 16, "nodeName": "X", "type": "Any"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "IntType", "type": "Any"}, {"lineNumber": 307, "col_offset": 32, "nodeName": "FloatType", "type": "Any"}, {"lineNumber": 309, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 312, "col_offset": 17, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "X", "type": "Any"}, {"lineNumber": 319, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 320, "col_offset": 27, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 321, "col_offset": 27, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 322, "col_offset": 27, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 325, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "self", "type": "ColorMapTemplate"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "colormap", "type": "Any"}, {"lineNumber": 46, "col_offset": 57, "nodeName": "self", "type": "ColorMapTemplate"}, {"lineNumber": 50, "col_offset": 47, "nodeName": "range_low_setting", "type": "Any"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "range_high_setting", "type": "Any"}, {"lineNumber": 111, "col_offset": 45, "nodeName": "n_colors", "type": "Any"}, {"lineNumber": 145, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "value", "type": "str"}, {"lineNumber": 145, "col_offset": 39, "nodeName": "value", "type": "str"}, {"lineNumber": 145, "col_offset": 48, "nodeName": "strvalues", "type": "List[str]"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 150, "col_offset": 44, "nodeName": "channeltuple", "type": "Tuple[float, float, float]"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 173, "col_offset": 14, "nodeName": "ColorMapper", "type": "Type[ColorMapper]"}, {"lineNumber": 173, "col_offset": 27, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 187, "col_offset": 33, "nodeName": "data_array", "type": "Any"}, {"lineNumber": 200, "col_offset": 19, "nodeName": "ary", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "low", "type": "Any"}, {"lineNumber": 200, "col_offset": 44, "nodeName": "high", "type": "Any"}, {"lineNumber": 200, "col_offset": 62, "nodeName": "low", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "indices", "type": "Any"}, {"lineNumber": 202, "col_offset": 48, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 216, "col_offset": 25, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 216, "col_offset": 40, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 216, "col_offset": 57, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 219, "col_offset": 40, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 219, "col_offset": 57, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 227, "col_offset": 24, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 230, "col_offset": 24, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 233, "col_offset": 24, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 262, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 264, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 264, "col_offset": 31, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 271, "col_offset": 11, "nodeName": "x", "type": "Any"}, {"lineNumber": 271, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "sort", "type": "Any"}, {"lineNumber": 274, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 285, "col_offset": 63, "nodeName": "ind", "type": "Any"}, {"lineNumber": 309, "col_offset": 24, "nodeName": "X", "type": "Any"}, {"lineNumber": 318, "col_offset": 14, "nodeName": "xa", "type": "numpy.ndarray"}, {"lineNumber": 319, "col_offset": 21, "nodeName": "xa", "type": "Any"}, {"lineNumber": 325, "col_offset": 25, "nodeName": "rgba", "type": "Any"}, {"lineNumber": 50, "col_offset": 47, "nodeName": "self", "type": "ColorMapTemplate"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "self", "type": "ColorMapTemplate"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "rstrip", "type": "Callable[..., str]"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "values", "type": "List[float]"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "values", "type": "List[float]"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "values", "type": "List[float]"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "data_array", "type": "Any"}, {"lineNumber": 189, "col_offset": 42, "nodeName": "low", "type": "Any"}, {"lineNumber": 189, "col_offset": 50, "nodeName": "high", "type": "Any"}, {"lineNumber": 189, "col_offset": 57, "nodeName": "low", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "range", "type": "Any"}, {"lineNumber": 200, "col_offset": 44, "nodeName": "range", "type": "Any"}, {"lineNumber": 200, "col_offset": 62, "nodeName": "range", "type": "Any"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "take", "type": "Any"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "y0", "type": "Any"}, {"lineNumber": 285, "col_offset": 32, "nodeName": "ind", "type": "Any"}, {"lineNumber": 285, "col_offset": 37, "nodeName": "take", "type": "Any"}, {"lineNumber": 285, "col_offset": 42, "nodeName": "y1", "type": "Any"}, {"lineNumber": 318, "col_offset": 19, "nodeName": "steps", "type": "Any"}, {"lineNumber": 144, "col_offset": 24, "nodeName": "line", "type": "str"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "rgbarr", "type": "List[List[Tuple[float, float, float]]]"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 200, "col_offset": 44, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 200, "col_offset": 62, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 283, "col_offset": 42, "nodeName": "take", "type": "Any"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "take", "type": "Any"}, {"lineNumber": 284, "col_offset": 36, "nodeName": "ind", "type": "Any"}, {"lineNumber": 284, "col_offset": 41, "nodeName": "take", "type": "Any"}, {"lineNumber": 285, "col_offset": 45, "nodeName": "ind", "type": "Any"}, {"lineNumber": 318, "col_offset": 19, "nodeName": "self", "type": "ColorMapper"}, {"lineNumber": 148, "col_offset": 39, "nodeName": "colorchannel", "type": "int"}, {"lineNumber": 149, "col_offset": 39, "nodeName": "colorchannel", "type": "int"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "colorchannel", "type": "int"}, {"lineNumber": 283, "col_offset": 49, "nodeName": "ind", "type": "Any"}, {"lineNumber": 284, "col_offset": 48, "nodeName": "ind", "type": "Any"}]