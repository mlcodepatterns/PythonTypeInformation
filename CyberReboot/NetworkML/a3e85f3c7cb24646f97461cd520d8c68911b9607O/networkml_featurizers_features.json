[{"lineNumber": 9, "col_offset": 8, "nodeName": "nonempty_generators", "type": "Set[nothing]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "results", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "results", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "vals", "type": "Any"}, {"lineNumber": 32, "col_offset": 55, "nodeName": "field", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "ip_src", "type": "None"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "src_field", "type": "str"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "ip_dst", "type": "None"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "dst_field", "type": "str"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "eth_field", "type": "str"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "self", "type": "Features"}, {"lineNumber": 9, "col_offset": 35, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "self", "type": "Features"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "func_name", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "func", "type": "Any"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "func", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "fromiter", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "vals", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "vals", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "rows_f", "type": "Any"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "nonempty_generators", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "statfunc", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "ip_src", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "ip_src", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "ip_dst", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "ip_dst", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "ip_src", "type": "Optional[Any]"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "ip_dst", "type": "Optional[Any]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "ip_src", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "ip_dst", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "ip_src", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "ip_dst", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "eth_type", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "eth_type", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 22, "col_offset": 24, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 27, "col_offset": 104, "nodeName": "float", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 29, "col_offset": 41, "nodeName": "rows_f", "type": "Any"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "get_float_field", "type": "functools._lru_cache_wrapper[Any]"}, {"lineNumber": 37, "col_offset": 45, "nodeName": "field", "type": "Any"}, {"lineNumber": 37, "col_offset": 52, "nodeName": "rows_f", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "row", "type": "Any"}, {"lineNumber": 41, "col_offset": 50, "nodeName": "rows", "type": "Any"}, {"lineNumber": 45, "col_offset": 51, "nodeName": "rows_f", "type": "Any"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "src_field", "type": "str"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "dst_field", "type": "str"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "ip_address", "type": "Callable[[object], Any]"}, {"lineNumber": 60, "col_offset": 42, "nodeName": "ip_src", "type": "Optional[Any]"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "ip_address", "type": "Callable[[object], Any]"}, {"lineNumber": 61, "col_offset": 42, "nodeName": "ip_dst", "type": "Optional[Any]"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "get", "type": "Any"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "eth_field", "type": "str"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "eth_type", "type": "Any"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "row", "type": "Any"}, {"lineNumber": 27, "col_offset": 46, "nodeName": "row", "type": "Any"}, {"lineNumber": 27, "col_offset": 104, "nodeName": "numpy", "type": "module"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "nonempty_generators", "type": "Any"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "self", "type": "Features"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "row", "type": "Any"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "get", "type": "Any"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "row", "type": "Any"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "row", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "ipaddress", "type": "module"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "ipaddress", "type": "module"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "row", "type": "Any"}, {"lineNumber": 27, "col_offset": 35, "nodeName": "field", "type": "Any"}, {"lineNumber": 27, "col_offset": 53, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "row", "type": "Any"}, {"lineNumber": 27, "col_offset": 86, "nodeName": "rows_f", "type": "Any"}]