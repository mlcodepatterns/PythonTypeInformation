[{"lineNumber": 6, "col_offset": 0, "nodeName": "test_packetizer", "type": "Callable[[], Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "test_sessionizer", "type": "Callable[[], Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "packet_list", "type": "List[Tuple[Any, str]]"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "head", "type": "Any"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "head", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "first_session", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "packet_key", "type": "Tuple[str, str]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "first_data", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "first_data", "type": "Any"}, {"lineNumber": 7, "col_offset": 34, "nodeName": "packetizer", "type": "Callable[[Any], Tuple[collections.OrderedDict[Any, str], Dict[Any, Set[Any]]]]"}, {"lineNumber": 15, "col_offset": 18, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "head", "type": "Any"}, {"lineNumber": 16, "col_offset": 10, "nodeName": "data", "type": "str"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "packet_list", "type": "List[Tuple[Any, str]]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 19, "col_offset": 7, "nodeName": "key1", "type": "Any"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "key2", "type": "Any"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "head", "type": "Any"}, {"lineNumber": 23, "col_offset": 10, "nodeName": "data", "type": "str"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "packet_list", "type": "List[Tuple[Any, str]]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "_", "type": "Any"}, {"lineNumber": 24, "col_offset": 7, "nodeName": "key1", "type": "Any"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "key2", "type": "Any"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "basicConfig", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "parallel_sessionizer", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "get", "type": "Callable"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "binned_sessions", "type": "Any"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "binned_sessions", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "timestamp", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "packet", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "packet", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "timestamp", "type": "Any"}, {"lineNumber": 44, "col_offset": 33, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 7, "col_offset": 34, "nodeName": "reader", "type": "module"}, {"lineNumber": 9, "col_offset": 28, "nodeName": "highest_layers", "type": "Dict[Any, Set[Any]]"}, {"lineNumber": 10, "col_offset": 56, "nodeName": "highest_layers", "type": "Dict[Any, Set[Any]]"}, {"lineNumber": 11, "col_offset": 37, "nodeName": "highest_layers", "type": "Dict[Any, Set[Any]]"}, {"lineNumber": 12, "col_offset": 27, "nodeName": "highest_layers", "type": "Dict[Any, Set[Any]]"}, {"lineNumber": 13, "col_offset": 26, "nodeName": "highest_layers", "type": "Dict[Any, Set[Any]]"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "packet_dict", "type": "collections.OrderedDict[Any, str]"}, {"lineNumber": 15, "col_offset": 23, "nodeName": "items", "type": "Callable"}, {"lineNumber": 20, "col_offset": 59, "nodeName": "key1", "type": "Any"}, {"lineNumber": 20, "col_offset": 65, "nodeName": "key2", "type": "Any"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 21, "col_offset": 23, "nodeName": "data", "type": "str"}, {"lineNumber": 22, "col_offset": 33, "nodeName": "data", "type": "str"}, {"lineNumber": 25, "col_offset": 62, "nodeName": "key1", "type": "Any"}, {"lineNumber": 25, "col_offset": 68, "nodeName": "key2", "type": "Any"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "data", "type": "str"}, {"lineNumber": 27, "col_offset": 33, "nodeName": "data", "type": "str"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "INFO", "type": "int"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "logging", "type": "module"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "reader", "type": "module"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "pcap_file_sessions", "type": "Dict[Any, Any]"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "first_session", "type": "Any"}, {"lineNumber": 44, "col_offset": 33, "nodeName": "datetime", "type": "module"}, {"lineNumber": 7, "col_offset": 34, "nodeName": "pcap", "type": "module"}, {"lineNumber": 15, "col_offset": 23, "nodeName": "packet_dict", "type": "collections.OrderedDict[Any, str]"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "logging", "type": "module"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "pcap", "type": "module"}, {"lineNumber": 41, "col_offset": 31, "nodeName": "packet_key", "type": "Tuple[str, str]"}, {"lineNumber": 7, "col_offset": 34, "nodeName": "parsers", "type": "module"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "parsers", "type": "module"}, {"lineNumber": 7, "col_offset": 34, "nodeName": "networkml", "type": "module"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "networkml", "type": "module"}]