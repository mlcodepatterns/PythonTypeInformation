[{"lineNumber": 408, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "instance", "type": "PCAPToCSV"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "raw_args", "type": "None"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "raw_args", "type": "None"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "ext", "type": "str"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "parsed_args", "type": "argparse.Namespace"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "parsed_args", "type": "argparse.Namespace"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "header_all", "type": "Set[Any]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "header", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "header_all", "type": "Set[Any]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "header", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "fieldnames", "type": "Set[Any]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "filename", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "out_paths", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "fi", "type": "Any"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "paths", "type": "List[Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "all_protocols", "type": "Set[str]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "pcap_file_short", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "protocol", "type": "str"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "PROTOCOLS", "type": "List[str]"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "all_protocols", "type": "Set[str]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "output", "type": "str"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "in_block", "type": "bool"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "name", "type": "None"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "results", "type": "Dict[str, str]"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "flattened_dict", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "flattened_dict", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "json_buffer", "type": "List[Any]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "depth", "type": "int"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "options", "type": "str"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "header", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "num_files", "type": "int"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "failed_paths", "type": "List[Any]"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "finished_files", "type": "int"}, {"lineNumber": 348, "col_offset": 15, "nodeName": "failed_paths", "type": "List[Any]"}, {"lineNumber": 352, "col_offset": 8, "nodeName": "parsed_args", "type": "argparse.Namespace"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "in_path", "type": "Any"}, {"lineNumber": 353, "col_offset": 18, "nodeName": "path", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "out_path", "type": "Any"}, {"lineNumber": 354, "col_offset": 19, "nodeName": "output", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "combined", "type": "Any"}, {"lineNumber": 355, "col_offset": 19, "nodeName": "combined", "type": "Any"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "engine", "type": "Any"}, {"lineNumber": 356, "col_offset": 17, "nodeName": "engine", "type": "Any"}, {"lineNumber": 357, "col_offset": 8, "nodeName": "threads", "type": "Any"}, {"lineNumber": 357, "col_offset": 18, "nodeName": "threads", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "log_level", "type": "Any"}, {"lineNumber": 358, "col_offset": 20, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "level", "type": "Any"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "level", "type": "Any"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "log_levels", "type": "Dict[str, int]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "in_paths", "type": "List[Any]"}, {"lineNumber": 365, "col_offset": 8, "nodeName": "out_paths", "type": "List[Any]"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "failed_paths", "type": "List[Any]"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "failed_path", "type": "Any"}, {"lineNumber": 391, "col_offset": 27, "nodeName": "failed_paths", "type": "List[Any]"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "combined", "type": "Any"}, {"lineNumber": 409, "col_offset": 15, "nodeName": "PCAPToCSV", "type": "Type[PCAPToCSV]"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 23, "col_offset": 40, "nodeName": "__name__", "type": "str"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 57, "col_offset": 40, "nodeName": "raw_args", "type": "None"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 64, "col_offset": 37, "nodeName": "f_in", "type": "TextIO"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "f_in", "type": "TextIO"}, {"lineNumber": 84, "col_offset": 43, "nodeName": "f_out", "type": "TextIO"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "writer", "type": "csv.DictWriter"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "filename", "type": "Any"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "out_paths", "type": "List[Any]"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 106, "col_offset": 42, "nodeName": "pcap_file", "type": "Any"}, {"lineNumber": 107, "col_offset": 37, "nodeName": "f_out", "type": "TextIO"}, {"lineNumber": 147, "col_offset": 24, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "options", "type": "str"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "output", "type": "bytes"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "output", "type": "str"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "in_block", "type": "bool"}, {"lineNumber": 185, "col_offset": 37, "nodeName": "f_out", "type": "TextIO"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "result", "type": "str"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "flatten", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "item", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "json_line", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "json_line", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "bracket_line", "type": "Any"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "process", "type": "subprocess.Popen[bytes]"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 284, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 288, "col_offset": 17, "nodeName": "get_csv_header", "type": "Callable[[Any], Any]"}, {"lineNumber": 288, "col_offset": 42, "nodeName": "dict_fp", "type": "Any"}, {"lineNumber": 289, "col_offset": 38, "nodeName": "f_out", "type": "TextIO"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "writer", "type": "csv.DictWriter"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 302, "col_offset": 46, "nodeName": "tmpdir", "type": "nothing"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "dict_fp", "type": "Any"}, {"lineNumber": 322, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 322, "col_offset": 24, "nodeName": "in_paths", "type": "List[Any]"}, {"lineNumber": 326, "col_offset": 11, "nodeName": "threads", "type": "Any"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 352, "col_offset": 22, "nodeName": "parse_args", "type": "Callable[..., Any]"}, {"lineNumber": 353, "col_offset": 18, "nodeName": "parsed_args", "type": "argparse.Namespace"}, {"lineNumber": 354, "col_offset": 19, "nodeName": "parsed_args", "type": "argparse.Namespace"}, {"lineNumber": 355, "col_offset": 19, "nodeName": "parsed_args", "type": "argparse.Namespace"}, {"lineNumber": 356, "col_offset": 17, "nodeName": "parsed_args", "type": "argparse.Namespace"}, {"lineNumber": 357, "col_offset": 18, "nodeName": "parsed_args", "type": "argparse.Namespace"}, {"lineNumber": 358, "col_offset": 20, "nodeName": "parsed_args", "type": "argparse.Namespace"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "parsed_args", "type": "argparse.Namespace"}, {"lineNumber": 361, "col_offset": 30, "nodeName": "INFO", "type": "int"}, {"lineNumber": 361, "col_offset": 53, "nodeName": "DEBUG", "type": "int"}, {"lineNumber": 361, "col_offset": 79, "nodeName": "WARNING", "type": "int"}, {"lineNumber": 361, "col_offset": 105, "nodeName": "ERROR", "type": "int"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "basicConfig", "type": "Callable[..., None]"}, {"lineNumber": 368, "col_offset": 11, "nodeName": "isdir", "type": "Callable[[Union[bytes, str, _PathLike[Any]]], bool]"}, {"lineNumber": 368, "col_offset": 25, "nodeName": "in_path", "type": "Any"}, {"lineNumber": 369, "col_offset": 15, "nodeName": "out_path", "type": "Any"}, {"lineNumber": 381, "col_offset": 15, "nodeName": "out_path", "type": "Any"}, {"lineNumber": 389, "col_offset": 23, "nodeName": "process_files", "type": "Callable[[Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 389, "col_offset": 42, "nodeName": "threads", "type": "Any"}, {"lineNumber": 389, "col_offset": 51, "nodeName": "level", "type": "Any"}, {"lineNumber": 389, "col_offset": 58, "nodeName": "in_paths", "type": "List[Any]"}, {"lineNumber": 389, "col_offset": 68, "nodeName": "out_paths", "type": "List[Any]"}, {"lineNumber": 389, "col_offset": 79, "nodeName": "engine", "type": "Any"}, {"lineNumber": 396, "col_offset": 15, "nodeName": "out_paths", "type": "List[Any]"}, {"lineNumber": 402, "col_offset": 19, "nodeName": "combined_path", "type": "str"}, {"lineNumber": 410, "col_offset": 4, "nodeName": "instance", "type": "PCAPToCSV"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "logging", "type": "module"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "argparse", "type": "module"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 55, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 64, "col_offset": 13, "nodeName": "gzip_reader", "type": "Callable[[Any], io.TextIOWrapper]"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "dict_fp", "type": "Any"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "f_in", "type": "TextIO"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "gzip_writer", "type": "Callable[[Any], io.TextIOWrapper]"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "combined_path", "type": "str"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "DictWriter", "type": "Type[csv.DictWriter]"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "f_out", "type": "TextIO"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "writeheader", "type": "Callable[[], None]"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "fi", "type": "Any"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "ntpath", "type": "module"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "gzip_writer", "type": "Callable[[Any], io.TextIOWrapper]"}, {"lineNumber": 107, "col_offset": 25, "nodeName": "dict_fp", "type": "Any"}, {"lineNumber": 112, "col_offset": 107, "nodeName": "cap", "type": "Any"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "packet", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "cap", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "protocol", "type": "str"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "all_protocols", "type": "Set[str]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "check_output", "type": "Callable"}, {"lineNumber": 161, "col_offset": 21, "nodeName": "decode", "type": "Callable[..., str]"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "output", "type": "str"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "in_block", "type": "bool"}, {"lineNumber": 185, "col_offset": 13, "nodeName": "gzip_writer", "type": "Callable[[Any], io.TextIOWrapper]"}, {"lineNumber": 185, "col_offset": 25, "nodeName": "dict_fp", "type": "Any"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 216, "col_offset": 66, "nodeName": "key", "type": "Any"}, {"lineNumber": 216, "col_offset": 85, "nodeName": "key", "type": "Any"}, {"lineNumber": 216, "col_offset": 105, "nodeName": "key", "type": "Any"}, {"lineNumber": 216, "col_offset": 124, "nodeName": "key", "type": "Any"}, {"lineNumber": 216, "col_offset": 143, "nodeName": "key", "type": "Any"}, {"lineNumber": 216, "col_offset": 162, "nodeName": "key", "type": "Any"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "value", "type": "Any"}, {"lineNumber": 223, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "decode", "type": "Any"}, {"lineNumber": 254, "col_offset": 24, "nodeName": "strip", "type": "Any"}, {"lineNumber": 255, "col_offset": 27, "nodeName": "rstrip", "type": "Any"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "depth", "type": "int"}, {"lineNumber": 260, "col_offset": 15, "nodeName": "depth", "type": "int"}, {"lineNumber": 261, "col_offset": 19, "nodeName": "bracket_line", "type": "Any"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "json_buffer", "type": "List[Any]"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "json_buffer", "type": "List[Any]"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "json_line", "type": "Any"}, {"lineNumber": 274, "col_offset": 22, "nodeName": "Popen", "type": "Type[subprocess.Popen[Any]]"}, {"lineNumber": 275, "col_offset": 41, "nodeName": "f_out", "type": "TextIO"}, {"lineNumber": 276, "col_offset": 20, "nodeName": "item", "type": "Any"}, {"lineNumber": 288, "col_offset": 17, "nodeName": "PCAPToCSV", "type": "Type[PCAPToCSV]"}, {"lineNumber": 289, "col_offset": 13, "nodeName": "gzip_writer", "type": "Callable[[Any], io.TextIOWrapper]"}, {"lineNumber": 289, "col_offset": 25, "nodeName": "out_file", "type": "Any"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "DictWriter", "type": "Type[csv.DictWriter]"}, {"lineNumber": 290, "col_offset": 36, "nodeName": "f_out", "type": "TextIO"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "writeheader", "type": "Callable[[], None]"}, {"lineNumber": 296, "col_offset": 19, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "TemporaryDirectory", "type": "Type[tempfile.TemporaryDirectory[Any]]"}, {"lineNumber": 303, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 303, "col_offset": 35, "nodeName": "tmpdir", "type": "nothing"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "level", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "write_dict_to_csv", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 317, "col_offset": 35, "nodeName": "dict_fp", "type": "Any"}, {"lineNumber": 317, "col_offset": 44, "nodeName": "out_file", "type": "Any"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "cleanup_files", "type": "Callable[[Any], Any]"}, {"lineNumber": 327, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 336, "col_offset": 80, "nodeName": "executor", "type": "concurrent.futures.process.ProcessPoolExecutor"}, {"lineNumber": 337, "col_offset": 16, "nodeName": "future_to_parse", "type": "Dict[concurrent.futures._base.Future[Any], int]"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "future", "type": "concurrent.futures._base.Future[Any]"}, {"lineNumber": 352, "col_offset": 22, "nodeName": "PCAPToCSV", "type": "Type[PCAPToCSV]"}, {"lineNumber": 352, "col_offset": 52, "nodeName": "raw_args", "type": "None"}, {"lineNumber": 361, "col_offset": 30, "nodeName": "logging", "type": "module"}, {"lineNumber": 361, "col_offset": 53, "nodeName": "logging", "type": "module"}, {"lineNumber": 361, "col_offset": 79, "nodeName": "logging", "type": "module"}, {"lineNumber": 361, "col_offset": 105, "nodeName": "logging", "type": "module"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 368, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 371, "col_offset": 16, "nodeName": "root", "type": "Any"}, {"lineNumber": 371, "col_offset": 22, "nodeName": "_", "type": "List[Any]"}, {"lineNumber": 371, "col_offset": 25, "nodeName": "files", "type": "List[Any]"}, {"lineNumber": 371, "col_offset": 34, "nodeName": "walk", "type": "Callable"}, {"lineNumber": 371, "col_offset": 42, "nodeName": "in_path", "type": "Any"}, {"lineNumber": 372, "col_offset": 20, "nodeName": "pathfile", "type": "Any"}, {"lineNumber": 372, "col_offset": 32, "nodeName": "files", "type": "List[Any]"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 380, "col_offset": 28, "nodeName": "in_path", "type": "Any"}, {"lineNumber": 386, "col_offset": 11, "nodeName": "level", "type": "Any"}, {"lineNumber": 386, "col_offset": 33, "nodeName": "engine", "type": "Any"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 389, "col_offset": 23, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 392, "col_offset": 15, "nodeName": "failed_path", "type": "Any"}, {"lineNumber": 392, "col_offset": 30, "nodeName": "out_paths", "type": "List[Any]"}, {"lineNumber": 397, "col_offset": 16, "nodeName": "combined_path", "type": "str"}, {"lineNumber": 399, "col_offset": 16, "nodeName": "combined_path", "type": "str"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "combine_csvs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 401, "col_offset": 35, "nodeName": "out_paths", "type": "List[Any]"}, {"lineNumber": 401, "col_offset": 46, "nodeName": "combined_path", "type": "str"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 405, "col_offset": 19, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "pathfile", "type": "Any"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "join", "type": "Callable"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "isalpha", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "key", "type": "Any"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "gzip_reader", "type": "Callable[[Any], io.TextIOWrapper]"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "filename", "type": "Any"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "reader", "type": "Callable[..., _csv._reader]"}, {"lineNumber": 80, "col_offset": 36, "nodeName": "f_in", "type": "TextIO"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 85, "col_offset": 21, "nodeName": "csv", "type": "module"}, {"lineNumber": 85, "col_offset": 54, "nodeName": "fieldnames", "type": "Set[Any]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "writer", "type": "csv.DictWriter"}, {"lineNumber": 88, "col_offset": 46, "nodeName": "f_in", "type": "TextIO"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "line", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "reader", "type": "csv.DictReader"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "remove", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 26, "nodeName": "fi", "type": "Any"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "FileCapture", "type": "Any"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "pcap_file", "type": "Any"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "packet_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 115, "col_offset": 46, "nodeName": "pcap_file_short", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "frame_info", "type": "Any"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "_all_fields", "type": "Any"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "key", "type": "Any"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "frame_info", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "layers", "type": "str"}, {"lineNumber": 122, "col_offset": 44, "nodeName": "layers", "type": "str"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "str_layers", "type": "List[str]"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "str_layer", "type": "str"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "str_layers", "type": "List[str]"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "packet_dict_copy", "type": "Any"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "keys", "type": "Any"}, {"lineNumber": 142, "col_offset": 24, "nodeName": "key", "type": "Any"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "keys", "type": "Any"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 149, "col_offset": 37, "nodeName": "protocol", "type": "str"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 160, "col_offset": 21, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 160, "col_offset": 45, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 161, "col_offset": 21, "nodeName": "output", "type": "bytes"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "line", "type": "str"}, {"lineNumber": 175, "col_offset": 20, "nodeName": "in_block", "type": "bool"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "name", "type": "None"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "name", "type": "str"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "results", "type": "Dict[str, str]"}, {"lineNumber": 187, "col_offset": 38, "nodeName": "result", "type": "str"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "transport_proto", "type": "str"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "line", "type": "str"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "isalpha", "type": "Any"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 224, "col_offset": 23, "nodeName": "sub_item", "type": "Any"}, {"lineNumber": 224, "col_offset": 35, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 224, "col_offset": 45, "nodeName": "value", "type": "Any"}, {"lineNumber": 226, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "value", "type": "Any"}, {"lineNumber": 226, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "sub_keys", "type": "Any"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "sub_key", "type": "Any"}, {"lineNumber": 228, "col_offset": 31, "nodeName": "sub_keys", "type": "Any"}, {"lineNumber": 245, "col_offset": 19, "nodeName": "json", "type": "module"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "join", "type": "Callable"}, {"lineNumber": 245, "col_offset": 40, "nodeName": "json_buffer", "type": "List[Any]"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "json_line", "type": "Any"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 254, "col_offset": 24, "nodeName": "json_line", "type": "Any"}, {"lineNumber": 255, "col_offset": 27, "nodeName": "json_line", "type": "Any"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "bracket_line", "type": "Any"}, {"lineNumber": 258, "col_offset": 17, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "depth", "type": "int"}, {"lineNumber": 274, "col_offset": 22, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 274, "col_offset": 39, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 274, "col_offset": 107, "nodeName": "PIPE", "type": "int"}, {"lineNumber": 275, "col_offset": 17, "nodeName": "gzip_writer", "type": "Callable[[Any], io.TextIOWrapper]"}, {"lineNumber": 275, "col_offset": 29, "nodeName": "dict_fp", "type": "Any"}, {"lineNumber": 276, "col_offset": 28, "nodeName": "json_packet_records", "type": "Callable[[Any], Any]"}, {"lineNumber": 276, "col_offset": 53, "nodeName": "process", "type": "subprocess.Popen[bytes]"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "csv", "type": "module"}, {"lineNumber": 290, "col_offset": 54, "nodeName": "header", "type": "Any"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "writer", "type": "csv.DictWriter"}, {"lineNumber": 293, "col_offset": 45, "nodeName": "f_in", "type": "TextIO"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "line", "type": "str"}, {"lineNumber": 294, "col_offset": 32, "nodeName": "f_in", "type": "TextIO"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 301, "col_offset": 39, "nodeName": "in_file", "type": "Any"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 303, "col_offset": 22, "nodeName": "path", "type": "module"}, {"lineNumber": 303, "col_offset": 43, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 303, "col_offset": 60, "nodeName": "in_file", "type": "Any"}, {"lineNumber": 305, "col_offset": 19, "nodeName": "engine", "type": "Any"}, {"lineNumber": 311, "col_offset": 17, "nodeName": "level", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "PCAPToCSV", "type": "Type[PCAPToCSV]"}, {"lineNumber": 318, "col_offset": 37, "nodeName": "dict_fp", "type": "Any"}, {"lineNumber": 327, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 327, "col_offset": 31, "nodeName": "in_paths", "type": "List[Any]"}, {"lineNumber": 329, "col_offset": 20, "nodeName": "finished_files", "type": "int"}, {"lineNumber": 332, "col_offset": 23, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 336, "col_offset": 17, "nodeName": "ProcessPoolExecutor", "type": "Type[concurrent.futures.process.ProcessPoolExecutor]"}, {"lineNumber": 337, "col_offset": 111, "nodeName": "i", "type": "int"}, {"lineNumber": 338, "col_offset": 30, "nodeName": "as_completed", "type": "Callable"}, {"lineNumber": 338, "col_offset": 62, "nodeName": "future_to_parse", "type": "Dict[concurrent.futures._base.Future[Any], int]"}, {"lineNumber": 339, "col_offset": 20, "nodeName": "path", "type": "int"}, {"lineNumber": 352, "col_offset": 52, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 362, "col_offset": 34, "nodeName": "log_levels", "type": "Dict[str, int]"}, {"lineNumber": 368, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 370, "col_offset": 16, "nodeName": "mkdir", "type": "Callable[..., None]"}, {"lineNumber": 371, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 380, "col_offset": 12, "nodeName": "in_paths", "type": "List[Any]"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 382, "col_offset": 33, "nodeName": "out_path", "type": "Any"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 393, "col_offset": 16, "nodeName": "remove", "type": "Callable"}, {"lineNumber": 393, "col_offset": 33, "nodeName": "failed_path", "type": "Any"}, {"lineNumber": 397, "col_offset": 32, "nodeName": "join", "type": "Callable"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 401, "col_offset": 12, "nodeName": "PCAPToCSV", "type": "Type[PCAPToCSV]"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 405, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 405, "col_offset": 35, "nodeName": "out_paths", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "ext", "type": "str"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "header_all", "type": "Set[Any]"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "keys", "type": "Any"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "key", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "header", "type": "List[Any]"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "csv", "type": "module"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "fieldnames", "type": "Set[Any]"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "header", "type": "str"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "gzip_reader", "type": "Callable[[Any], io.TextIOWrapper]"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "filename", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "DictReader", "type": "Type[csv.DictReader]"}, {"lineNumber": 89, "col_offset": 44, "nodeName": "f_in", "type": "TextIO"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "cleanup_files", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "os", "type": "module"}, {"lineNumber": 108, "col_offset": 17, "nodeName": "pyshark", "type": "Any"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "packet_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "frame_info", "type": "Any"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "layers", "type": "Any"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "packet_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 140, "col_offset": 48, "nodeName": "packet_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "keys", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "write", "type": "Callable"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "all_protocols", "type": "Set[str]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 151, "col_offset": 71, "nodeName": "pcap_file_short", "type": "Any"}, {"lineNumber": 151, "col_offset": 121, "nodeName": "all_protocols", "type": "Set[str]"}, {"lineNumber": 160, "col_offset": 45, "nodeName": "shlex", "type": "module"}, {"lineNumber": 160, "col_offset": 57, "nodeName": "join", "type": "Callable"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "results", "type": "Dict[str, str]"}, {"lineNumber": 190, "col_offset": 32, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 216, "col_offset": 36, "nodeName": "key", "type": "Any"}, {"lineNumber": 225, "col_offset": 20, "nodeName": "flatten", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 225, "col_offset": 36, "nodeName": "sub_item", "type": "Any"}, {"lineNumber": 227, "col_offset": 27, "nodeName": "keys", "type": "Any"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "good_json_key", "type": "functools._lru_cache_wrapper[Any]"}, {"lineNumber": 232, "col_offset": 38, "nodeName": "key", "type": "str"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "readline", "type": "Any"}, {"lineNumber": 250, "col_offset": 35, "nodeName": "poll", "type": "Callable[[], Optional[int]]"}, {"lineNumber": 252, "col_offset": 19, "nodeName": "json_line", "type": "Any"}, {"lineNumber": 258, "col_offset": 17, "nodeName": "bracket_line", "type": "Any"}, {"lineNumber": 262, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 262, "col_offset": 39, "nodeName": "bracket_line", "type": "Any"}, {"lineNumber": 268, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 268, "col_offset": 39, "nodeName": "json_line", "type": "Any"}, {"lineNumber": 274, "col_offset": 39, "nodeName": "shlex", "type": "module"}, {"lineNumber": 274, "col_offset": 51, "nodeName": "join", "type": "Callable"}, {"lineNumber": 274, "col_offset": 107, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 276, "col_offset": 28, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 277, "col_offset": 20, "nodeName": "write", "type": "Callable"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 293, "col_offset": 21, "nodeName": "gzip_reader", "type": "Callable[[Any], io.TextIOWrapper]"}, {"lineNumber": 293, "col_offset": 33, "nodeName": "dict_fp", "type": "Any"}, {"lineNumber": 297, "col_offset": 16, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 303, "col_offset": 22, "nodeName": "os", "type": "module"}, {"lineNumber": 303, "col_offset": 43, "nodeName": "path", "type": "module"}, {"lineNumber": 307, "col_offset": 20, "nodeName": "get_tshark_packet_data", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 307, "col_offset": 48, "nodeName": "in_file", "type": "Any"}, {"lineNumber": 307, "col_offset": 57, "nodeName": "dict_fp", "type": "Any"}, {"lineNumber": 308, "col_offset": 21, "nodeName": "engine", "type": "Any"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "get_tshark_conv_data", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 313, "col_offset": 42, "nodeName": "in_file", "type": "Any"}, {"lineNumber": 313, "col_offset": 51, "nodeName": "dict_fp", "type": "Any"}, {"lineNumber": 314, "col_offset": 17, "nodeName": "level", "type": "Any"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "parse_file", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 330, "col_offset": 36, "nodeName": "level", "type": "Any"}, {"lineNumber": 330, "col_offset": 70, "nodeName": "engine", "type": "Any"}, {"lineNumber": 331, "col_offset": 20, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 336, "col_offset": 17, "nodeName": "futures", "type": "module"}, {"lineNumber": 336, "col_offset": 68, "nodeName": "threads", "type": "Any"}, {"lineNumber": 337, "col_offset": 35, "nodeName": "submit", "type": "Callable"}, {"lineNumber": 337, "col_offset": 51, "nodeName": "parse_file", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 337, "col_offset": 68, "nodeName": "level", "type": "Any"}, {"lineNumber": 337, "col_offset": 102, "nodeName": "engine", "type": "Any"}, {"lineNumber": 337, "col_offset": 117, "nodeName": "i", "type": "int"}, {"lineNumber": 338, "col_offset": 30, "nodeName": "futures", "type": "module"}, {"lineNumber": 339, "col_offset": 27, "nodeName": "future_to_parse", "type": "Dict[concurrent.futures._base.Future[Any], int]"}, {"lineNumber": 341, "col_offset": 24, "nodeName": "finished_files", "type": "int"}, {"lineNumber": 343, "col_offset": 27, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 362, "col_offset": 45, "nodeName": "log_level", "type": "Any"}, {"lineNumber": 373, "col_offset": 23, "nodeName": "ispcap", "type": "Callable[[Any], Any]"}, {"lineNumber": 373, "col_offset": 40, "nodeName": "pathfile", "type": "Any"}, {"lineNumber": 375, "col_offset": 27, "nodeName": "out_path", "type": "Any"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "out_paths", "type": "List[Any]"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "out_paths", "type": "List[Any]"}, {"lineNumber": 384, "col_offset": 33, "nodeName": "in_path", "type": "Any"}, {"lineNumber": 387, "col_offset": 12, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 387, "col_offset": 87, "nodeName": "PROTOCOLS", "type": "List[str]"}, {"lineNumber": 393, "col_offset": 16, "nodeName": "out_paths", "type": "List[Any]"}, {"lineNumber": 397, "col_offset": 32, "nodeName": "path", "type": "module"}, {"lineNumber": 397, "col_offset": 45, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 400, "col_offset": 67, "nodeName": "combined_path", "type": "str"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 404, "col_offset": 68, "nodeName": "out_paths", "type": "List[Any]"}, {"lineNumber": 405, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "key", "type": "Any"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "header", "type": "str"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "csv", "type": "module"}, {"lineNumber": 91, "col_offset": 24, "nodeName": "line", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "writerow", "type": "Callable[[Mapping[str, Any]], Any]"}, {"lineNumber": 92, "col_offset": 40, "nodeName": "line", "type": "collections.OrderedDict[str, Any]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "PCAPToCSV", "type": "Type[PCAPToCSV]"}, {"lineNumber": 93, "col_offset": 45, "nodeName": "filename", "type": "Any"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "packet", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "packet_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 118, "col_offset": 43, "nodeName": "frame_info", "type": "Any"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "packet", "type": "Any"}, {"lineNumber": 126, "col_offset": 40, "nodeName": "str_layer", "type": "str"}, {"lineNumber": 129, "col_offset": 27, "nodeName": "str_layer", "type": "str"}, {"lineNumber": 129, "col_offset": 40, "nodeName": "PROTOCOLS", "type": "List[str]"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "layer_info", "type": "Any"}, {"lineNumber": 130, "col_offset": 41, "nodeName": "_all_fields", "type": "Any"}, {"lineNumber": 132, "col_offset": 32, "nodeName": "key", "type": "Any"}, {"lineNumber": 132, "col_offset": 39, "nodeName": "layer_info", "type": "Any"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "packet_dict_copy", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "f_out", "type": "TextIO"}, {"lineNumber": 160, "col_offset": 83, "nodeName": "pcap_file", "type": "Any"}, {"lineNumber": 160, "col_offset": 94, "nodeName": "options", "type": "str"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "e", "type": "Exception"}, {"lineNumber": 180, "col_offset": 28, "nodeName": "name", "type": "str"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 225, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 225, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 227, "col_offset": 27, "nodeName": "value", "type": "Any"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "flatten", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 229, "col_offset": 28, "nodeName": "sub_key", "type": "Any"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 235, "col_offset": 46, "nodeName": "value", "type": "Any"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "stdout", "type": "Any"}, {"lineNumber": 250, "col_offset": 35, "nodeName": "process", "type": "subprocess.Popen[bytes]"}, {"lineNumber": 262, "col_offset": 20, "nodeName": "json_buffer", "type": "List[Any]"}, {"lineNumber": 264, "col_offset": 26, "nodeName": "_recordize", "type": "Callable[[], Any]"}, {"lineNumber": 268, "col_offset": 20, "nodeName": "json_buffer", "type": "List[Any]"}, {"lineNumber": 274, "col_offset": 77, "nodeName": "pcap_file", "type": "Any"}, {"lineNumber": 274, "col_offset": 88, "nodeName": "options", "type": "str"}, {"lineNumber": 277, "col_offset": 20, "nodeName": "f_out", "type": "TextIO"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 279, "col_offset": 33, "nodeName": "e", "type": "Exception"}, {"lineNumber": 295, "col_offset": 24, "nodeName": "writerow", "type": "Callable[[Mapping[str, Any]], Any]"}, {"lineNumber": 297, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 303, "col_offset": 43, "nodeName": "os", "type": "module"}, {"lineNumber": 307, "col_offset": 20, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 310, "col_offset": 20, "nodeName": "get_pyshark_packet_data", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 310, "col_offset": 49, "nodeName": "in_file", "type": "Any"}, {"lineNumber": 310, "col_offset": 58, "nodeName": "dict_fp", "type": "Any"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 316, "col_offset": 22, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 330, "col_offset": 43, "nodeName": "in_paths", "type": "List[Any]"}, {"lineNumber": 330, "col_offset": 56, "nodeName": "out_paths", "type": "List[Any]"}, {"lineNumber": 331, "col_offset": 20, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 333, "col_offset": 20, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 334, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 336, "col_offset": 17, "nodeName": "concurrent", "type": "module"}, {"lineNumber": 337, "col_offset": 35, "nodeName": "executor", "type": "concurrent.futures.process.ProcessPoolExecutor"}, {"lineNumber": 337, "col_offset": 51, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 337, "col_offset": 75, "nodeName": "in_paths", "type": "List[Any]"}, {"lineNumber": 337, "col_offset": 88, "nodeName": "out_paths", "type": "List[Any]"}, {"lineNumber": 337, "col_offset": 122, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 338, "col_offset": 30, "nodeName": "concurrent", "type": "module"}, {"lineNumber": 339, "col_offset": 43, "nodeName": "future", "type": "concurrent.futures._base.Future[Any]"}, {"lineNumber": 342, "col_offset": 24, "nodeName": "result", "type": "Callable"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 370, "col_offset": 16, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 370, "col_offset": 29, "nodeName": "out_path", "type": "Any"}, {"lineNumber": 373, "col_offset": 23, "nodeName": "PCAPToCSV", "type": "Type[PCAPToCSV]"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 387, "col_offset": 87, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 397, "col_offset": 32, "nodeName": "os", "type": "module"}, {"lineNumber": 397, "col_offset": 45, "nodeName": "path", "type": "module"}, {"lineNumber": 397, "col_offset": 61, "nodeName": "out_paths", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 56, "nodeName": "next", "type": "Callable"}, {"lineNumber": 81, "col_offset": 61, "nodeName": "reader", "type": "_csv._reader"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "split", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "writer", "type": "csv.DictWriter"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "key", "type": "Any"}, {"lineNumber": 118, "col_offset": 54, "nodeName": "key", "type": "Any"}, {"lineNumber": 123, "col_offset": 33, "nodeName": "layers", "type": "str"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "add", "type": "Callable"}, {"lineNumber": 127, "col_offset": 46, "nodeName": "str_layer", "type": "str"}, {"lineNumber": 129, "col_offset": 40, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 143, "col_offset": 51, "nodeName": "key", "type": "Any"}, {"lineNumber": 143, "col_offset": 79, "nodeName": "key", "type": "Any"}, {"lineNumber": 144, "col_offset": 32, "nodeName": "packet_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 145, "col_offset": 43, "nodeName": "packet_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "result", "type": "str"}, {"lineNumber": 190, "col_offset": 32, "nodeName": "results", "type": "Dict[str, str]"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "line", "type": "str"}, {"lineNumber": 191, "col_offset": 41, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 196, "col_offset": 28, "nodeName": "src", "type": "str"}, {"lineNumber": 196, "col_offset": 33, "nodeName": "_", "type": "str"}, {"lineNumber": 196, "col_offset": 36, "nodeName": "dst", "type": "str"}, {"lineNumber": 196, "col_offset": 41, "nodeName": "frames_l", "type": "str"}, {"lineNumber": 196, "col_offset": 51, "nodeName": "bytes_l", "type": "str"}, {"lineNumber": 196, "col_offset": 60, "nodeName": "frames_r", "type": "str"}, {"lineNumber": 196, "col_offset": 70, "nodeName": "bytes_r", "type": "str"}, {"lineNumber": 196, "col_offset": 79, "nodeName": "frames_total", "type": "str"}, {"lineNumber": 196, "col_offset": 93, "nodeName": "bytes_total", "type": "str"}, {"lineNumber": 196, "col_offset": 106, "nodeName": "rel_start", "type": "str"}, {"lineNumber": 196, "col_offset": 117, "nodeName": "duration", "type": "str"}, {"lineNumber": 196, "col_offset": 128, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 201, "col_offset": 58, "nodeName": "transport_proto", "type": "str"}, {"lineNumber": 202, "col_offset": 56, "nodeName": "frames_l", "type": "str"}, {"lineNumber": 203, "col_offset": 55, "nodeName": "bytes_l", "type": "str"}, {"lineNumber": 204, "col_offset": 61, "nodeName": "frames_r", "type": "str"}, {"lineNumber": 205, "col_offset": 60, "nodeName": "bytes_r", "type": "str"}, {"lineNumber": 206, "col_offset": 52, "nodeName": "frames_total", "type": "str"}, {"lineNumber": 207, "col_offset": 51, "nodeName": "bytes_total", "type": "str"}, {"lineNumber": 208, "col_offset": 54, "nodeName": "rel_start", "type": "str"}, {"lineNumber": 209, "col_offset": 48, "nodeName": "duration", "type": "str"}, {"lineNumber": 210, "col_offset": 28, "nodeName": "write", "type": "Callable"}, {"lineNumber": 229, "col_offset": 37, "nodeName": "value", "type": "Any"}, {"lineNumber": 234, "col_offset": 24, "nodeName": "value", "type": "Any"}, {"lineNumber": 234, "col_offset": 62, "nodeName": "value", "type": "Any"}, {"lineNumber": 235, "col_offset": 24, "nodeName": "flattened_dict", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "process", "type": "subprocess.Popen[bytes]"}, {"lineNumber": 277, "col_offset": 32, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 295, "col_offset": 24, "nodeName": "writer", "type": "csv.DictWriter"}, {"lineNumber": 295, "col_offset": 40, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 297, "col_offset": 16, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 297, "col_offset": 69, "nodeName": "e", "type": "Exception"}, {"lineNumber": 310, "col_offset": 20, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 330, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 330, "col_offset": 66, "nodeName": "i", "type": "int"}, {"lineNumber": 331, "col_offset": 20, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 331, "col_offset": 64, "nodeName": "finished_files", "type": "int"}, {"lineNumber": 331, "col_offset": 81, "nodeName": "num_files", "type": "int"}, {"lineNumber": 333, "col_offset": 20, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 334, "col_offset": 20, "nodeName": "failed_paths", "type": "List[Any]"}, {"lineNumber": 334, "col_offset": 40, "nodeName": "out_paths", "type": "List[Any]"}, {"lineNumber": 337, "col_offset": 84, "nodeName": "i", "type": "int"}, {"lineNumber": 337, "col_offset": 98, "nodeName": "i", "type": "int"}, {"lineNumber": 337, "col_offset": 128, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 337, "col_offset": 132, "nodeName": "in_paths", "type": "List[Any]"}, {"lineNumber": 342, "col_offset": 24, "nodeName": "future", "type": "concurrent.futures._base.Future[Any]"}, {"lineNumber": 344, "col_offset": 24, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 370, "col_offset": 16, "nodeName": "pathlib", "type": "module"}, {"lineNumber": 374, "col_offset": 24, "nodeName": "in_paths", "type": "List[Any]"}, {"lineNumber": 374, "col_offset": 40, "nodeName": "join", "type": "Callable"}, {"lineNumber": 374, "col_offset": 53, "nodeName": "root", "type": "Any"}, {"lineNumber": 374, "col_offset": 59, "nodeName": "pathfile", "type": "Any"}, {"lineNumber": 376, "col_offset": 28, "nodeName": "append", "type": "Callable"}, {"lineNumber": 378, "col_offset": 28, "nodeName": "append", "type": "Callable"}, {"lineNumber": 397, "col_offset": 45, "nodeName": "os", "type": "module"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "json", "type": "module"}, {"lineNumber": 66, "col_offset": 45, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "all_protocols", "type": "Set[str]"}, {"lineNumber": 130, "col_offset": 41, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 130, "col_offset": 49, "nodeName": "packet", "type": "Any"}, {"lineNumber": 135, "col_offset": 40, "nodeName": "inner_key", "type": "Any"}, {"lineNumber": 143, "col_offset": 31, "nodeName": "isalpha", "type": "Any"}, {"lineNumber": 144, "col_offset": 44, "nodeName": "key", "type": "Any"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "json", "type": "module"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 190, "col_offset": 40, "nodeName": "result", "type": "str"}, {"lineNumber": 191, "col_offset": 41, "nodeName": "line", "type": "str"}, {"lineNumber": 196, "col_offset": 128, "nodeName": "line", "type": "str"}, {"lineNumber": 210, "col_offset": 28, "nodeName": "f_out", "type": "TextIO"}, {"lineNumber": 229, "col_offset": 43, "nodeName": "sub_key", "type": "Any"}, {"lineNumber": 235, "col_offset": 39, "nodeName": "key", "type": "str"}, {"lineNumber": 277, "col_offset": 32, "nodeName": "json", "type": "module"}, {"lineNumber": 277, "col_offset": 43, "nodeName": "flatten_json", "type": "Callable[[Any], Any]"}, {"lineNumber": 277, "col_offset": 61, "nodeName": "item", "type": "Any"}, {"lineNumber": 295, "col_offset": 40, "nodeName": "json", "type": "module"}, {"lineNumber": 295, "col_offset": 51, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 331, "col_offset": 49, "nodeName": "in_paths", "type": "List[Any]"}, {"lineNumber": 333, "col_offset": 20, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 333, "col_offset": 79, "nodeName": "e", "type": "Exception"}, {"lineNumber": 334, "col_offset": 50, "nodeName": "i", "type": "int"}, {"lineNumber": 344, "col_offset": 24, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "failed_paths", "type": "List[Any]"}, {"lineNumber": 345, "col_offset": 44, "nodeName": "out_paths", "type": "List[Any]"}, {"lineNumber": 347, "col_offset": 24, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 347, "col_offset": 71, "nodeName": "finished_files", "type": "int"}, {"lineNumber": 347, "col_offset": 88, "nodeName": "num_files", "type": "int"}, {"lineNumber": 374, "col_offset": 40, "nodeName": "path", "type": "module"}, {"lineNumber": 376, "col_offset": 28, "nodeName": "out_paths", "type": "List[Any]"}, {"lineNumber": 378, "col_offset": 28, "nodeName": "out_paths", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 45, "nodeName": "line", "type": "str"}, {"lineNumber": 130, "col_offset": 57, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 134, "col_offset": 35, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 134, "col_offset": 63, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 134, "col_offset": 73, "nodeName": "str_layer", "type": "str"}, {"lineNumber": 135, "col_offset": 53, "nodeName": "layer_info", "type": "Any"}, {"lineNumber": 138, "col_offset": 36, "nodeName": "packet_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 138, "col_offset": 55, "nodeName": "layer_info", "type": "Any"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "line", "type": "str"}, {"lineNumber": 197, "col_offset": 46, "nodeName": "rsplit", "type": "Callable[..., List[str]]"}, {"lineNumber": 198, "col_offset": 51, "nodeName": "rsplit", "type": "Callable[..., List[str]]"}, {"lineNumber": 199, "col_offset": 51, "nodeName": "rsplit", "type": "Callable[..., List[str]]"}, {"lineNumber": 200, "col_offset": 56, "nodeName": "rsplit", "type": "Callable[..., List[str]]"}, {"lineNumber": 210, "col_offset": 40, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 210, "col_offset": 51, "nodeName": "conv", "type": "Dict[str, str]"}, {"lineNumber": 234, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 234, "col_offset": 38, "nodeName": "value", "type": "Any"}, {"lineNumber": 277, "col_offset": 43, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 295, "col_offset": 51, "nodeName": "line", "type": "str"}, {"lineNumber": 331, "col_offset": 58, "nodeName": "i", "type": "int"}, {"lineNumber": 333, "col_offset": 41, "nodeName": "in_paths", "type": "List[Any]"}, {"lineNumber": 344, "col_offset": 24, "nodeName": "self", "type": "PCAPToCSV"}, {"lineNumber": 344, "col_offset": 86, "nodeName": "e", "type": "Exception"}, {"lineNumber": 345, "col_offset": 54, "nodeName": "path", "type": "int"}, {"lineNumber": 347, "col_offset": 53, "nodeName": "in_paths", "type": "List[Any]"}, {"lineNumber": 374, "col_offset": 40, "nodeName": "os", "type": "module"}, {"lineNumber": 376, "col_offset": 45, "nodeName": "join", "type": "Callable"}, {"lineNumber": 376, "col_offset": 58, "nodeName": "out_path", "type": "Any"}, {"lineNumber": 376, "col_offset": 68, "nodeName": "pathfile", "type": "Any"}, {"lineNumber": 378, "col_offset": 45, "nodeName": "join", "type": "Callable"}, {"lineNumber": 378, "col_offset": 58, "nodeName": "root", "type": "Any"}, {"lineNumber": 378, "col_offset": 64, "nodeName": "pathfile", "type": "Any"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "split", "type": "Any"}, {"lineNumber": 134, "col_offset": 46, "nodeName": "layer_info", "type": "Any"}, {"lineNumber": 135, "col_offset": 64, "nodeName": "key", "type": "Any"}, {"lineNumber": 136, "col_offset": 40, "nodeName": "packet_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 138, "col_offset": 48, "nodeName": "key", "type": "Any"}, {"lineNumber": 138, "col_offset": 66, "nodeName": "key", "type": "Any"}, {"lineNumber": 143, "col_offset": 31, "nodeName": "key", "type": "Any"}, {"lineNumber": 197, "col_offset": 46, "nodeName": "src", "type": "str"}, {"lineNumber": 198, "col_offset": 51, "nodeName": "src", "type": "str"}, {"lineNumber": 199, "col_offset": 51, "nodeName": "dst", "type": "str"}, {"lineNumber": 200, "col_offset": 56, "nodeName": "dst", "type": "str"}, {"lineNumber": 210, "col_offset": 40, "nodeName": "json", "type": "module"}, {"lineNumber": 333, "col_offset": 50, "nodeName": "i", "type": "int"}, {"lineNumber": 344, "col_offset": 45, "nodeName": "in_paths", "type": "List[Any]"}, {"lineNumber": 347, "col_offset": 62, "nodeName": "path", "type": "int"}, {"lineNumber": 376, "col_offset": 45, "nodeName": "path", "type": "module"}, {"lineNumber": 378, "col_offset": 45, "nodeName": "path", "type": "module"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "filename", "type": "Any"}, {"lineNumber": 134, "col_offset": 57, "nodeName": "key", "type": "Any"}, {"lineNumber": 136, "col_offset": 52, "nodeName": "inner_key", "type": "Any"}, {"lineNumber": 136, "col_offset": 65, "nodeName": "layer_info", "type": "Any"}, {"lineNumber": 136, "col_offset": 81, "nodeName": "inner_key", "type": "Any"}, {"lineNumber": 344, "col_offset": 54, "nodeName": "path", "type": "int"}, {"lineNumber": 376, "col_offset": 45, "nodeName": "os", "type": "module"}, {"lineNumber": 378, "col_offset": 45, "nodeName": "os", "type": "module"}, {"lineNumber": 136, "col_offset": 76, "nodeName": "key", "type": "Any"}, {"lineNumber": 130, "col_offset": 57, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 130, "col_offset": 57, "nodeName": "str_layer", "type": "str"}]