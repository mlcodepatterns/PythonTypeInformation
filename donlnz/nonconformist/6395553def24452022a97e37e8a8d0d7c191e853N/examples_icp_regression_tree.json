[{"lineNumber": 23, "col_offset": 0, "nodeName": "data", "type": "Any"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "idx", "type": "Any"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "train", "type": "Any"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "calibrate", "type": "Any"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "test", "type": "Any"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "underlying_model", "type": "nonconformist.base.RegressorAdapter"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "nc", "type": "nonconformist.nc.RegressorNc"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "header", "type": "List[str]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "size", "type": "Any"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "table", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "T", "type": "Any"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "df", "type": "Any"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "underlying_model", "type": "nonconformist.base.RegressorAdapter"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "normalizing_model", "type": "nonconformist.base.RegressorAdapter"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "normalizer", "type": "nonconformist.nc.RegressorNormalizer"}, {"lineNumber": 59, "col_offset": 0, "nodeName": "nc", "type": "nonconformist.nc.RegressorNc"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "header", "type": "List[str]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "size", "type": "Any"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "table", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "T", "type": "Any"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "df", "type": "Any"}, {"lineNumber": 23, "col_offset": 7, "nodeName": "load_boston", "type": "Any"}, {"lineNumber": 25, "col_offset": 6, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "size", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "idx", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "idx", "type": "Any"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "idx", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "RegressorAdapter", "type": "Type[nonconformist.base.RegressorAdapter]"}, {"lineNumber": 36, "col_offset": 5, "nodeName": "RegressorNc", "type": "Type[nonconformist.nc.RegressorNc]"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "underlying_model", "type": "nonconformist.base.RegressorAdapter"}, {"lineNumber": 37, "col_offset": 6, "nodeName": "IcpRegressor", "type": "Type[nonconformist.icp.IcpRegressor]"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "nc", "type": "nonconformist.nc.RegressorNc"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "fit", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "calibrate", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 5, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "table", "type": "Any"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 6, "nodeName": "df", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "RegressorAdapter", "type": "Type[nonconformist.base.RegressorAdapter]"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "RegressorAdapter", "type": "Type[nonconformist.base.RegressorAdapter]"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "RegressorNormalizer", "type": "Type[nonconformist.nc.RegressorNormalizer]"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "underlying_model", "type": "nonconformist.base.RegressorAdapter"}, {"lineNumber": 58, "col_offset": 51, "nodeName": "normalizing_model", "type": "nonconformist.base.RegressorAdapter"}, {"lineNumber": 59, "col_offset": 5, "nodeName": "RegressorNc", "type": "Type[nonconformist.nc.RegressorNc]"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "underlying_model", "type": "nonconformist.base.RegressorAdapter"}, {"lineNumber": 59, "col_offset": 54, "nodeName": "normalizer", "type": "nonconformist.nc.RegressorNormalizer"}, {"lineNumber": 60, "col_offset": 6, "nodeName": "IcpRegressor", "type": "Type[nonconformist.icp.IcpRegressor]"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "nc", "type": "nonconformist.nc.RegressorNc"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "fit", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "calibrate", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "predict", "type": "Callable[..., Any]"}, {"lineNumber": 71, "col_offset": 5, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "table", "type": "Any"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 72, "col_offset": 6, "nodeName": "df", "type": "Any"}, {"lineNumber": 25, "col_offset": 6, "nodeName": "random", "type": "Any"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "target", "type": "Any"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "DecisionTreeRegressor", "type": "Any"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "AbsErrorErrFunc", "type": "Type[nonconformist.nc.AbsErrorErrFunc]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "target", "type": "Any"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "data", "type": "Any"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "target", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 46, "col_offset": 7, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 48, "col_offset": 5, "nodeName": "pd", "type": "Any"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "header", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "DecisionTreeRegressor", "type": "Any"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "KNeighborsRegressor", "type": "Any"}, {"lineNumber": 58, "col_offset": 70, "nodeName": "AbsErrorErrFunc", "type": "Type[nonconformist.nc.AbsErrorErrFunc]"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "AbsErrorErrFunc", "type": "Type[nonconformist.nc.AbsErrorErrFunc]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "target", "type": "Any"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "data", "type": "Any"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "target", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 69, "col_offset": 7, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 71, "col_offset": 5, "nodeName": "pd", "type": "Any"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "header", "type": "List[str]"}, {"lineNumber": 25, "col_offset": 6, "nodeName": "np", "type": "module"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "train", "type": "Any"}, {"lineNumber": 39, "col_offset": 14, "nodeName": "data", "type": "Any"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 39, "col_offset": 51, "nodeName": "calibrate", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "T", "type": "Any"}, {"lineNumber": 47, "col_offset": 52, "nodeName": "T", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 61, "col_offset": 41, "nodeName": "train", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "data", "type": "Any"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 62, "col_offset": 51, "nodeName": "calibrate", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "T", "type": "Any"}, {"lineNumber": 70, "col_offset": 52, "nodeName": "T", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "size", "type": "Any"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "size", "type": "Any"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "train", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "calibrate", "type": "Any"}, {"lineNumber": 44, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "target", "type": "Any"}, {"lineNumber": 47, "col_offset": 52, "nodeName": "size", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "train", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "calibrate", "type": "Any"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "test", "type": "Any"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "prediction", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "target", "type": "Any"}, {"lineNumber": 70, "col_offset": 52, "nodeName": "size", "type": "Any"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "idx", "type": "Any"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "idx", "type": "Any"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "size", "type": "Any"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "size", "type": "Any"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "test", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 70, "col_offset": 45, "nodeName": "test", "type": "Any"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "idx", "type": "Any"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "idx", "type": "Any"}]