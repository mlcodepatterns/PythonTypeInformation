[{"lineNumber": 28, "col_offset": 0, "nodeName": "data", "type": "Any"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "icp", "type": "nonconformist.icp.OobCpClassifier"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "icp_cv", "type": "nonconformist.evaluation.ClassIcpCvHelper"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "data", "type": "Any"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "icp", "type": "nonconformist.icp.OobCpRegressor"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "icp_cv", "type": "nonconformist.evaluation.RegIcpCvHelper"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "load_iris", "type": "Any"}, {"lineNumber": 30, "col_offset": 6, "nodeName": "OobCpClassifier", "type": "Type[nonconformist.icp.OobCpClassifier]"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "ClassIcpCvHelper", "type": "Type[nonconformist.evaluation.ClassIcpCvHelper]"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "icp", "type": "nonconformist.icp.OobCpClassifier"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "cross_val_score", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "icp_cv", "type": "nonconformist.evaluation.ClassIcpCvHelper"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "target", "type": "Any"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 42, "col_offset": 9, "nodeName": "drop", "type": "Any"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 7, "nodeName": "load_diabetes", "type": "Any"}, {"lineNumber": 50, "col_offset": 6, "nodeName": "OobCpRegressor", "type": "Type[nonconformist.icp.OobCpRegressor]"}, {"lineNumber": 51, "col_offset": 9, "nodeName": "RegIcpCvHelper", "type": "Type[nonconformist.evaluation.RegIcpCvHelper]"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "icp", "type": "nonconformist.icp.OobCpRegressor"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "cross_val_score", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "icp_cv", "type": "nonconformist.evaluation.RegIcpCvHelper"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "target", "type": "Any"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 9, "nodeName": "drop", "type": "Any"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "ClassifierNc", "type": "Type[nonconformist.nc.ClassifierNc]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 42, "col_offset": 9, "nodeName": "scores", "type": "Any"}, {"lineNumber": 43, "col_offset": 6, "nodeName": "mean", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "RegressorNc", "type": "Type[nonconformist.nc.RegressorNc]"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 63, "col_offset": 9, "nodeName": "scores", "type": "Any"}, {"lineNumber": 64, "col_offset": 6, "nodeName": "mean", "type": "Any"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "OobClassifierAdapter", "type": "Type[nonconformist.base.OobClassifierAdapter]"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "class_mean_errors", "type": "Callable[..., Any]"}, {"lineNumber": 38, "col_offset": 59, "nodeName": "class_avg_c", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "OobRegressorAdapter", "type": "Type[nonconformist.base.OobRegressorAdapter]"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "reg_mean_errors", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 57, "nodeName": "reg_median_size", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 30, "col_offset": 56, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 43, "col_offset": 6, "nodeName": "groupby", "type": "Any"}, {"lineNumber": 50, "col_offset": 53, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 64, "col_offset": 6, "nodeName": "groupby", "type": "Any"}, {"lineNumber": 43, "col_offset": 6, "nodeName": "scores", "type": "Any"}, {"lineNumber": 64, "col_offset": 6, "nodeName": "scores", "type": "Any"}]