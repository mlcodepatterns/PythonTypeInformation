[{"lineNumber": 31, "col_offset": 0, "nodeName": "data", "type": "Any"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "icp", "type": "nonconformist.icp.IcpClassifier"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "icp_cv", "type": "nonconformist.evaluation.ClassIcpCvHelper"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "data", "type": "Any"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "icp_cv", "type": "nonconformist.evaluation.RegIcpCvHelper"}, {"lineNumber": 65, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "data", "type": "Any"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "icp_cv", "type": "nonconformist.evaluation.RegIcpCvHelper"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 105, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 111, "col_offset": 0, "nodeName": "data", "type": "Any"}, {"lineNumber": 113, "col_offset": 0, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "icp_cv", "type": "nonconformist.evaluation.RegIcpCvHelper"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 130, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "data", "type": "Any"}, {"lineNumber": 138, "col_offset": 0, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 148, "col_offset": 0, "nodeName": "icp_cv", "type": "nonconformist.evaluation.RegIcpCvHelper"}, {"lineNumber": 150, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 159, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 31, "col_offset": 7, "nodeName": "load_iris", "type": "Any"}, {"lineNumber": 33, "col_offset": 6, "nodeName": "IcpClassifier", "type": "Type[nonconformist.icp.IcpClassifier]"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "ClassIcpCvHelper", "type": "Type[nonconformist.evaluation.ClassIcpCvHelper]"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "icp", "type": "nonconformist.icp.IcpClassifier"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "cross_val_score", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "icp_cv", "type": "nonconformist.evaluation.ClassIcpCvHelper"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "target", "type": "Any"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "drop", "type": "Any"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 7, "nodeName": "load_diabetes", "type": "Any"}, {"lineNumber": 57, "col_offset": 6, "nodeName": "IcpRegressor", "type": "Type[nonconformist.icp.IcpRegressor]"}, {"lineNumber": 63, "col_offset": 9, "nodeName": "RegIcpCvHelper", "type": "Type[nonconformist.evaluation.RegIcpCvHelper]"}, {"lineNumber": 63, "col_offset": 24, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "cross_val_score", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "icp_cv", "type": "nonconformist.evaluation.RegIcpCvHelper"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "target", "type": "Any"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "drop", "type": "Any"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 7, "nodeName": "load_diabetes", "type": "Any"}, {"lineNumber": 83, "col_offset": 6, "nodeName": "IcpRegressor", "type": "Type[nonconformist.icp.IcpRegressor]"}, {"lineNumber": 93, "col_offset": 9, "nodeName": "RegIcpCvHelper", "type": "Type[nonconformist.evaluation.RegIcpCvHelper]"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 95, "col_offset": 9, "nodeName": "cross_val_score", "type": "Callable[..., Any]"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "icp_cv", "type": "nonconformist.evaluation.RegIcpCvHelper"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "target", "type": "Any"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "drop", "type": "Any"}, {"lineNumber": 106, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 7, "nodeName": "load_diabetes", "type": "Any"}, {"lineNumber": 113, "col_offset": 6, "nodeName": "IcpRegressor", "type": "Type[nonconformist.icp.IcpRegressor]"}, {"lineNumber": 119, "col_offset": 9, "nodeName": "RegIcpCvHelper", "type": "Type[nonconformist.evaluation.RegIcpCvHelper]"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "cross_val_score", "type": "Callable[..., Any]"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "icp_cv", "type": "nonconformist.evaluation.RegIcpCvHelper"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "target", "type": "Any"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 130, "col_offset": 9, "nodeName": "drop", "type": "Any"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 136, "col_offset": 7, "nodeName": "load_diabetes", "type": "Any"}, {"lineNumber": 138, "col_offset": 6, "nodeName": "IcpRegressor", "type": "Type[nonconformist.icp.IcpRegressor]"}, {"lineNumber": 148, "col_offset": 9, "nodeName": "RegIcpCvHelper", "type": "Type[nonconformist.evaluation.RegIcpCvHelper]"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 150, "col_offset": 9, "nodeName": "cross_val_score", "type": "Callable[..., Any]"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "icp_cv", "type": "nonconformist.evaluation.RegIcpCvHelper"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "target", "type": "Any"}, {"lineNumber": 158, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 9, "nodeName": "drop", "type": "Any"}, {"lineNumber": 160, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "ProbEstClassifierNc", "type": "Type[nonconformist.nc.ProbEstClassifierNc]"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 34, "col_offset": 40, "nodeName": "margin", "type": "Callable[[Mapping[Tuple[Any, ...], Any], Union[Iterable[Any], Mapping[int, Any]]], Any]"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "scores", "type": "Any"}, {"lineNumber": 50, "col_offset": 6, "nodeName": "mean", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "RegressorNc", "type": "Type[nonconformist.nc.RegressorNc]"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "abs_error", "type": "Callable[..., Any]"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "abs_error_inv", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "scores", "type": "Any"}, {"lineNumber": 76, "col_offset": 6, "nodeName": "mean", "type": "Any"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "NormalizedRegressorNc", "type": "Type[nonconformist.nc.NormalizedRegressorNc]"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "abs_error", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "abs_error_inv", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "scores", "type": "Any"}, {"lineNumber": 106, "col_offset": 6, "nodeName": "mean", "type": "Any"}, {"lineNumber": 113, "col_offset": 19, "nodeName": "RegressorNc", "type": "Type[nonconformist.nc.RegressorNc]"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "sign_error", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "sign_error_inv", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 130, "col_offset": 9, "nodeName": "scores", "type": "Any"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "mean", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "NormalizedRegressorNc", "type": "Type[nonconformist.nc.NormalizedRegressorNc]"}, {"lineNumber": 138, "col_offset": 41, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 140, "col_offset": 41, "nodeName": "sign_error", "type": "Callable[..., Any]"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "sign_error_inv", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 159, "col_offset": 9, "nodeName": "scores", "type": "Any"}, {"lineNumber": 160, "col_offset": 6, "nodeName": "mean", "type": "Any"}, {"lineNumber": 45, "col_offset": 40, "nodeName": "class_mean_errors", "type": "Callable[..., Any]"}, {"lineNumber": 45, "col_offset": 59, "nodeName": "class_avg_c", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "reg_mean_errors", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 57, "nodeName": "reg_median_size", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "reg_mean_errors", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 100, "col_offset": 57, "nodeName": "reg_median_size", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 40, "nodeName": "reg_mean_errors", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 57, "nodeName": "reg_median_size", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "reg_mean_errors", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 155, "col_offset": 57, "nodeName": "reg_median_size", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 50, "col_offset": 6, "nodeName": "groupby", "type": "Any"}, {"lineNumber": 76, "col_offset": 6, "nodeName": "groupby", "type": "Any"}, {"lineNumber": 106, "col_offset": 6, "nodeName": "groupby", "type": "Any"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "groupby", "type": "Any"}, {"lineNumber": 160, "col_offset": 6, "nodeName": "groupby", "type": "Any"}, {"lineNumber": 50, "col_offset": 6, "nodeName": "scores", "type": "Any"}, {"lineNumber": 76, "col_offset": 6, "nodeName": "scores", "type": "Any"}, {"lineNumber": 106, "col_offset": 6, "nodeName": "scores", "type": "Any"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "scores", "type": "Any"}, {"lineNumber": 160, "col_offset": 6, "nodeName": "scores", "type": "Any"}]