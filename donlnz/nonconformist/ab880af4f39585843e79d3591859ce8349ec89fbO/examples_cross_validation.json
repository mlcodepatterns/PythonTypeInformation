[{"lineNumber": 30, "col_offset": 0, "nodeName": "data", "type": "Any"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "icp", "type": "nonconformist.icp.IcpClassifier"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "icp_cv", "type": "nonconformist.evaluation.ClassIcpCvHelper"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "data", "type": "Any"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "icp_cv", "type": "nonconformist.evaluation.RegIcpCvHelper"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "data", "type": "Any"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "icp_cv", "type": "nonconformist.evaluation.RegIcpCvHelper"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "scores", "type": "Any"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "load_iris", "type": "Any"}, {"lineNumber": 32, "col_offset": 6, "nodeName": "IcpClassifier", "type": "Type[nonconformist.icp.IcpClassifier]"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "ClassIcpCvHelper", "type": "Type[nonconformist.evaluation.ClassIcpCvHelper]"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "icp", "type": "nonconformist.icp.IcpClassifier"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "cross_val_score", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "icp_cv", "type": "nonconformist.evaluation.ClassIcpCvHelper"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "target", "type": "Any"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "drop", "type": "Any"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 7, "nodeName": "load_diabetes", "type": "Any"}, {"lineNumber": 52, "col_offset": 6, "nodeName": "IcpRegressor", "type": "Type[nonconformist.icp.IcpRegressor]"}, {"lineNumber": 55, "col_offset": 9, "nodeName": "RegIcpCvHelper", "type": "Type[nonconformist.evaluation.RegIcpCvHelper]"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 57, "col_offset": 9, "nodeName": "cross_val_score", "type": "Callable[..., Any]"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "icp_cv", "type": "nonconformist.evaluation.RegIcpCvHelper"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "target", "type": "Any"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "drop", "type": "Any"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 7, "nodeName": "load_diabetes", "type": "Any"}, {"lineNumber": 75, "col_offset": 6, "nodeName": "IcpRegressor", "type": "Type[nonconformist.icp.IcpRegressor]"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "RegIcpCvHelper", "type": "Type[nonconformist.evaluation.RegIcpCvHelper]"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 80, "col_offset": 9, "nodeName": "cross_val_score", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "icp_cv", "type": "nonconformist.evaluation.RegIcpCvHelper"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "target", "type": "Any"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 89, "col_offset": 9, "nodeName": "drop", "type": "Any"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "ProbEstClassifierNc", "type": "Type[nonconformist.nc.ProbEstClassifierNc]"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 32, "col_offset": 64, "nodeName": "margin", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "scores", "type": "Any"}, {"lineNumber": 45, "col_offset": 6, "nodeName": "mean", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "RegressorNc", "type": "Type[nonconformist.nc.RegressorNc]"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "abs_error", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "abs_error_inv", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 67, "col_offset": 9, "nodeName": "scores", "type": "Any"}, {"lineNumber": 68, "col_offset": 6, "nodeName": "mean", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "RegressorNc", "type": "Type[nonconformist.nc.RegressorNc]"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "sign_error", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "sign_error_inv", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 89, "col_offset": 9, "nodeName": "scores", "type": "Any"}, {"lineNumber": 90, "col_offset": 6, "nodeName": "mean", "type": "Any"}, {"lineNumber": 40, "col_offset": 40, "nodeName": "class_mean_errors", "type": "Callable[..., Any]"}, {"lineNumber": 40, "col_offset": 59, "nodeName": "class_avg_c", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "reg_mean_errors", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 57, "nodeName": "reg_mean_size", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 40, "nodeName": "reg_mean_errors", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 57, "nodeName": "reg_mean_size", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 6, "nodeName": "groupby", "type": "Any"}, {"lineNumber": 68, "col_offset": 6, "nodeName": "groupby", "type": "Any"}, {"lineNumber": 90, "col_offset": 6, "nodeName": "groupby", "type": "Any"}, {"lineNumber": 45, "col_offset": 6, "nodeName": "scores", "type": "Any"}, {"lineNumber": 68, "col_offset": 6, "nodeName": "scores", "type": "Any"}, {"lineNumber": 90, "col_offset": 6, "nodeName": "scores", "type": "Any"}]