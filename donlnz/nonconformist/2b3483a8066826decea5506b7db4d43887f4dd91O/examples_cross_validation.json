[{"lineNumber": 30, "col_offset": 0, "nodeName": "data", "type": "Any"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "icp", "type": "nonconformist.icp.IcpClassifier"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "icp_cv", "type": "Any"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "errors", "type": "Any"}, {"lineNumber": 43, "col_offset": 0, "nodeName": "size", "type": "Any"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "data", "type": "Any"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "icp_cv", "type": "Any"}, {"lineNumber": 63, "col_offset": 0, "nodeName": "folds", "type": "Any"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "errors", "type": "Any"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "size", "type": "Any"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "data", "type": "Any"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "icp_cv", "type": "Any"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "folds", "type": "Any"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "errors", "type": "Any"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "size", "type": "Any"}, {"lineNumber": 30, "col_offset": 7, "nodeName": "load_iris", "type": "Any"}, {"lineNumber": 32, "col_offset": 6, "nodeName": "IcpClassifier", "type": "Type[nonconformist.icp.IcpClassifier]"}, {"lineNumber": 33, "col_offset": 9, "nodeName": "IcpClassCrossValHelper", "type": "Any"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "icp", "type": "nonconformist.icp.IcpClassifier"}, {"lineNumber": 35, "col_offset": 9, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "icp_cv", "type": "Any"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "target", "type": "Any"}, {"lineNumber": 43, "col_offset": 7, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "icp_cv", "type": "Any"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "target", "type": "Any"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 7, "nodeName": "load_diabetes", "type": "Any"}, {"lineNumber": 58, "col_offset": 6, "nodeName": "IcpRegressor", "type": "Type[nonconformist.icp.IcpRegressor]"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "IcpRegCrossValHelper", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "KFold", "type": "Any"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "size", "type": "Any"}, {"lineNumber": 64, "col_offset": 9, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "icp_cv", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "target", "type": "Any"}, {"lineNumber": 70, "col_offset": 7, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "icp_cv", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "target", "type": "Any"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 7, "nodeName": "load_diabetes", "type": "Any"}, {"lineNumber": 85, "col_offset": 6, "nodeName": "IcpRegressor", "type": "Type[nonconformist.icp.IcpRegressor]"}, {"lineNumber": 88, "col_offset": 9, "nodeName": "IcpRegCrossValHelper", "type": "Any"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "icp", "type": "nonconformist.icp.IcpRegressor"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "KFold", "type": "Any"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "size", "type": "Any"}, {"lineNumber": 91, "col_offset": 9, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "icp_cv", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "target", "type": "Any"}, {"lineNumber": 97, "col_offset": 7, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "icp_cv", "type": "Any"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "target", "type": "Any"}, {"lineNumber": 103, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 105, "col_offset": 0, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "ProbEstClassifierNc", "type": "Type[nonconformist.nc.ProbEstClassifierNc]"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "RandomForestClassifier", "type": "Any"}, {"lineNumber": 32, "col_offset": 64, "nodeName": "margin", "type": "Callable[[Mapping[Tuple[Any, ...], Any], Union[Iterable[Any], Mapping[int, Any]]], Any]"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "class_mean_errors", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "class_avg_c", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 50, "col_offset": 6, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 51, "col_offset": 6, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "RegressorNc", "type": "Type[nonconformist.nc.RegressorNc]"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "abs_error", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "abs_error_inv", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "target", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "reg_mean_errors", "type": "Callable[[Mapping[Tuple[Any, ...], Mapping[Any, Any]], Mapping[Any, Sequence[Any]], Any], Any]"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "folds", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "reg_mean_size", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "folds", "type": "Any"}, {"lineNumber": 77, "col_offset": 6, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 78, "col_offset": 6, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "RegressorNc", "type": "Type[nonconformist.nc.RegressorNc]"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "RandomForestRegressor", "type": "Any"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "sign_error", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "sign_error_inv", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "target", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "reg_mean_errors", "type": "Callable[[Mapping[Tuple[Any, ...], Mapping[Any, Any]], Mapping[Any, Sequence[Any]], Any], Any]"}, {"lineNumber": 95, "col_offset": 28, "nodeName": "folds", "type": "Any"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "reg_mean_size", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "folds", "type": "Any"}, {"lineNumber": 104, "col_offset": 6, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 105, "col_offset": 6, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "mean", "type": "Any"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "errors", "type": "Any"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "mean", "type": "Any"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "size", "type": "Any"}, {"lineNumber": 63, "col_offset": 14, "nodeName": "data", "type": "Any"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "mean", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "errors", "type": "Any"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "mean", "type": "Any"}, {"lineNumber": 78, "col_offset": 48, "nodeName": "size", "type": "Any"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "data", "type": "Any"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "mean", "type": "Any"}, {"lineNumber": 104, "col_offset": 39, "nodeName": "errors", "type": "Any"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "mean", "type": "Any"}, {"lineNumber": 105, "col_offset": 48, "nodeName": "size", "type": "Any"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "np", "type": "module"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "np", "type": "module"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "np", "type": "module"}]