[{"lineNumber": 17, "col_offset": 0, "nodeName": "is_no_bias", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "count_fc_flops", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "count_conv_flops", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "count_flops", "type": "Callable[..., Any]"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "flops_str", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "ret", "type": "bool"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "ret", "type": "bool"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "ret", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "kernel", "type": "List[int]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "num_group", "type": "int"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "ret", "type": "Any"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "num_group", "type": "int"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "all_layers", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "out_shape_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "nodeid_shape", "type": "Dict[int, Any]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "FLOPs", "type": "int"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "FLOPs", "type": "int"}, {"lineNumber": 91, "col_offset": 4, "nodeName": "preset", "type": "List[Tuple[float, str]]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "p", "type": "Tuple[float, str]"}, {"lineNumber": 93, "col_offset": 13, "nodeName": "preset", "type": "List[Tuple[float, str]]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "ret", "type": "str"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "ret", "type": "str"}, {"lineNumber": 102, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "_vec", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "epoch", "type": "int"}, {"lineNumber": 117, "col_offset": 4, "nodeName": "all_layers", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "sym", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "FLOPs", "type": "int"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "ret", "type": "bool"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "output_filter", "type": "Any"}, {"lineNumber": 28, "col_offset": 7, "nodeName": "is_no_bias", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "attr", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "output_filter", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "split", "type": "Any"}, {"lineNumber": 38, "col_offset": 7, "nodeName": "is_no_bias", "type": "Callable[[Any], Any]"}, {"lineNumber": 38, "col_offset": 18, "nodeName": "attr", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "ret", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "attr", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "num_group", "type": "int"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "ret", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "get_internals", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "arg_shapes", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "out_shapes", "type": "Any"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "aux_shapes", "type": "Any"}, {"lineNumber": 54, "col_offset": 41, "nodeName": "infer_shape", "type": "Any"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "nodeid", "type": "int"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "layer_name", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "nodeid", "type": "int"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "node", "type": "Any"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "nodes", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "flops", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "FLOPs", "type": "int"}, {"lineNumber": 85, "col_offset": 17, "nodeName": "flops", "type": "int"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "FLOPs", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "split", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "_vec", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 21, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "epoch", "type": "int"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "sym", "type": "Any"}, {"lineNumber": 116, "col_offset": 9, "nodeName": "arg_params", "type": "Any"}, {"lineNumber": 116, "col_offset": 21, "nodeName": "aux_params", "type": "Any"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "load_checkpoint", "type": "Any"}, {"lineNumber": 116, "col_offset": 59, "nodeName": "prefix", "type": "Any"}, {"lineNumber": 116, "col_offset": 67, "nodeName": "epoch", "type": "int"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "get_internals", "type": "Any"}, {"lineNumber": 118, "col_offset": 10, "nodeName": "all_layers", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "count_flops", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "sym", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "FLOPs", "type": "int"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "attr", "type": "Any"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "input_filter", "type": "Any"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "kernel", "type": "Any"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "sym", "type": "Any"}, {"lineNumber": 54, "col_offset": 41, "nodeName": "all_layers", "type": "Any"}, {"lineNumber": 54, "col_offset": 66, "nodeName": "data_shapes", "type": "Dict[str, Tuple[int, int, int, int]]"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 55, "col_offset": 57, "nodeName": "out_shapes", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "layer_name", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "out_shape_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "attr", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "input_nodeid", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "flops", "type": "int"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "N", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "ret", "type": "str"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "ret", "type": "str"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "_vec", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "_vec", "type": "Any"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "model", "type": "Any"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "sym", "type": "Any"}, {"lineNumber": 40, "col_offset": 56, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "attr", "type": "Any"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "list_outputs", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "json", "type": "module"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "tojson", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "nodeid_shape", "type": "Dict[int, Any]"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "out_shape_dict", "type": "Dict[Any, Any]"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "nodeid_shape", "type": "Dict[int, Any]"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "node", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "node", "type": "Any"}, {"lineNumber": 73, "col_offset": 26, "nodeName": "nodeid_shape", "type": "Dict[int, Any]"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "count_conv_flops", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 74, "col_offset": 64, "nodeName": "attr", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "attr", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "input_nodeid", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "output_filter", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "input_filter", "type": "Any"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "flops", "type": "int"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "FLOPs", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "FLOPs", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "mx", "type": "Any"}, {"lineNumber": 19, "col_offset": 30, "nodeName": "attr", "type": "Any"}, {"lineNumber": 20, "col_offset": 33, "nodeName": "attr", "type": "Any"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "attr", "type": "Any"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "all_layers", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "sym", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "nodeid", "type": "int"}, {"lineNumber": 63, "col_offset": 50, "nodeName": "layer_name", "type": "Any"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "nodeid", "type": "int"}, {"lineNumber": 73, "col_offset": 39, "nodeName": "input_nodeid", "type": "Any"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "node", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "node", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "nodeid_shape", "type": "Dict[int, Any]"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "nodeid_shape", "type": "Dict[int, Any]"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "count_fc_flops", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "input_filter", "type": "Any"}, {"lineNumber": 83, "col_offset": 49, "nodeName": "output_filter", "type": "Any"}, {"lineNumber": 83, "col_offset": 64, "nodeName": "attr", "type": "Any"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "p", "type": "Tuple[float, str]"}, {"lineNumber": 95, "col_offset": 24, "nodeName": "p", "type": "Tuple[float, str]"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "N", "type": "Any"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "output_shape", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "node", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "nodeid", "type": "int"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "input_nodeid", "type": "Any"}, {"lineNumber": 81, "col_offset": 61, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 96, "col_offset": 33, "nodeName": "p", "type": "Tuple[float, str]"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "node", "type": "Any"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "input_shape", "type": "Any"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "input_shape", "type": "Any"}]