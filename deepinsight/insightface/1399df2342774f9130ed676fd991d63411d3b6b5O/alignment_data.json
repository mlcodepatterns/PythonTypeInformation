[{"lineNumber": 20, "col_offset": 19, "nodeName": "DataIter", "type": "Any"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "DataIter", "type": "Any"}, {"lineNumber": 25, "col_offset": 6, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 26, "col_offset": 6, "nodeName": "data_name", "type": "Any"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "data_name", "type": "Any"}, {"lineNumber": 27, "col_offset": 6, "nodeName": "label_name", "type": "Any"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "label_name", "type": "Any"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "path_imgrec", "type": "Any"}, {"lineNumber": 31, "col_offset": 6, "nodeName": "path_imgidx", "type": "Any"}, {"lineNumber": 32, "col_offset": 6, "nodeName": "imgrec", "type": "Any"}, {"lineNumber": 33, "col_offset": 6, "nodeName": "seq", "type": "List[Any]"}, {"lineNumber": 34, "col_offset": 6, "nodeName": "cur", "type": "int"}, {"lineNumber": 36, "col_offset": 6, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 37, "col_offset": 6, "nodeName": "record_img_size", "type": "int"}, {"lineNumber": 38, "col_offset": 6, "nodeName": "input_img_size", "type": "int"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "record_img_size", "type": "int"}, {"lineNumber": 39, "col_offset": 6, "nodeName": "data_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 40, "col_offset": 6, "nodeName": "label_shape", "type": "Tuple[int, int]"}, {"lineNumber": 41, "col_offset": 6, "nodeName": "provide_data", "type": "List[Tuple[Any, Tuple[Union[Any, int], ...]]]"}, {"lineNumber": 42, "col_offset": 6, "nodeName": "provide_label", "type": "List[Tuple[Any, Tuple[Union[Any, int], ...]]]"}, {"lineNumber": 47, "col_offset": 6, "nodeName": "cur", "type": "int"}, {"lineNumber": 53, "col_offset": 6, "nodeName": "idx", "type": "Any"}, {"lineNumber": 54, "col_offset": 6, "nodeName": "cur", "type": "int"}, {"lineNumber": 55, "col_offset": 6, "nodeName": "s", "type": "Any"}, {"lineNumber": 57, "col_offset": 6, "nodeName": "img", "type": "Any"}, {"lineNumber": 59, "col_offset": 6, "nodeName": "hlabel", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "batch_data", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "batch_label", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 97, "col_offset": 6, "nodeName": "aug_level", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "aug_level", "type": "Any"}, {"lineNumber": 98, "col_offset": 6, "nodeName": "force_mirror", "type": "Any"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "force_mirror", "type": "Any"}, {"lineNumber": 99, "col_offset": 6, "nodeName": "use_coherent", "type": "Any"}, {"lineNumber": 99, "col_offset": 26, "nodeName": "use_coherent", "type": "Any"}, {"lineNumber": 100, "col_offset": 6, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 101, "col_offset": 6, "nodeName": "per_batch_size", "type": "Any"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "per_batch_size", "type": "Any"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "data_name", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "data_name", "type": "Any"}, {"lineNumber": 103, "col_offset": 6, "nodeName": "label_name", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "label_name", "type": "Any"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "path_imgrec", "type": "Any"}, {"lineNumber": 107, "col_offset": 6, "nodeName": "path_imgidx", "type": "Any"}, {"lineNumber": 108, "col_offset": 6, "nodeName": "imgrec", "type": "Any"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "seq", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 6, "nodeName": "cur", "type": "int"}, {"lineNumber": 113, "col_offset": 6, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 114, "col_offset": 6, "nodeName": "record_img_size", "type": "int"}, {"lineNumber": 115, "col_offset": 6, "nodeName": "input_img_size", "type": "Any"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "input_img_size", "type": "Any"}, {"lineNumber": 116, "col_offset": 6, "nodeName": "data_shape", "type": "Tuple[int, Any, Any]"}, {"lineNumber": 117, "col_offset": 6, "nodeName": "label_classes", "type": "Any"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 125, "col_offset": 6, "nodeName": "provide_data", "type": "List[Tuple[Any, Tuple[Union[Any, int], ...]]]"}, {"lineNumber": 126, "col_offset": 6, "nodeName": "provide_label", "type": "List[Union[Tuple[Any, Tuple[Any, ...]], Tuple[str, Tuple[Any, int]]]]"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "img_num", "type": "int"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "invalid_num", "type": "int"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "mode", "type": "int"}, {"lineNumber": 133, "col_offset": 6, "nodeName": "vis", "type": "int"}, {"lineNumber": 134, "col_offset": 6, "nodeName": "stats", "type": "List[int]"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "data_shape", "type": "Tuple[int, Any, Any]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "D", "type": "Dict[Union[Any, str], Union[Tuple[Union[Any, int], ...], Tuple[Any, int], Tuple[Any, ...]]]"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "provide_data", "type": "List[Tuple[Any, Tuple[Union[Any, int], ...]]]"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "provide_label", "type": "List[Union[Tuple[Any, Tuple[Any, ...]], Tuple[str, Tuple[Any, int]]]]"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "D", "type": "Dict[Union[Any, str], Union[Tuple[Union[Any, int], ...], Tuple[Any, int], Tuple[Any, ...]]]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "D", "type": "List[Union[str, Any]]"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "provide_label", "type": "List[Union[Tuple[Any, Tuple[Any, ...]], Tuple[str, Tuple[Any, int]]]]"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "D", "type": "List[Union[str, Any]]"}, {"lineNumber": 193, "col_offset": 6, "nodeName": "cur", "type": "int"}, {"lineNumber": 199, "col_offset": 6, "nodeName": "idx", "type": "Any"}, {"lineNumber": 200, "col_offset": 6, "nodeName": "cur", "type": "int"}, {"lineNumber": 201, "col_offset": 6, "nodeName": "s", "type": "Any"}, {"lineNumber": 203, "col_offset": 6, "nodeName": "img", "type": "Any"}, {"lineNumber": 205, "col_offset": 6, "nodeName": "hlabel", "type": "Any"}, {"lineNumber": 206, "col_offset": 6, "nodeName": "annot", "type": "Dict[str, Union[int, bool]]"}, {"lineNumber": 207, "col_offset": 6, "nodeName": "ul", "type": "numpy.ndarray"}, {"lineNumber": 208, "col_offset": 6, "nodeName": "br", "type": "numpy.ndarray"}, {"lineNumber": 209, "col_offset": 10, "nodeName": "i", "type": "Any"}, {"lineNumber": 243, "col_offset": 6, "nodeName": "crop_ul", "type": "numpy.ndarray"}, {"lineNumber": 244, "col_offset": 6, "nodeName": "crop_br", "type": "numpy.ndarray"}, {"lineNumber": 245, "col_offset": 6, "nodeName": "img", "type": "Any"}, {"lineNumber": 247, "col_offset": 6, "nodeName": "invalid", "type": "bool"}, {"lineNumber": 248, "col_offset": 10, "nodeName": "i", "type": "Any"}, {"lineNumber": 259, "col_offset": 9, "nodeName": "invalid", "type": "bool"}, {"lineNumber": 262, "col_offset": 25, "nodeName": "invalid", "type": "bool"}, {"lineNumber": 279, "col_offset": 9, "nodeName": "vis", "type": "int"}, {"lineNumber": 289, "col_offset": 6, "nodeName": "rotate", "type": "int"}, {"lineNumber": 299, "col_offset": 6, "nodeName": "max_retry", "type": "int"}, {"lineNumber": 302, "col_offset": 6, "nodeName": "retry", "type": "int"}, {"lineNumber": 303, "col_offset": 6, "nodeName": "found", "type": "bool"}, {"lineNumber": 304, "col_offset": 6, "nodeName": "_scale", "type": "Any"}, {"lineNumber": 304, "col_offset": 15, "nodeName": "scale", "type": "Any"}, {"lineNumber": 441, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 441, "col_offset": 21, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "batch_data", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "batch_label", "type": "Any"}, {"lineNumber": 444, "col_offset": 11, "nodeName": "use_coherent", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 543, "col_offset": 15, "nodeName": "img", "type": "bytes"}, {"lineNumber": 25, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 26, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 27, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 29, "col_offset": 6, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "path_imgrec", "type": "Any"}, {"lineNumber": 32, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "MXIndexedRecordIO", "type": "Any"}, {"lineNumber": 32, "col_offset": 50, "nodeName": "path_imgidx", "type": "Any"}, {"lineNumber": 32, "col_offset": 63, "nodeName": "path_imgrec", "type": "Any"}, {"lineNumber": 33, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 33, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "keys", "type": "Any"}, {"lineNumber": 34, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 35, "col_offset": 6, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 37, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 38, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 39, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "input_img_size", "type": "int"}, {"lineNumber": 39, "col_offset": 49, "nodeName": "input_img_size", "type": "int"}, {"lineNumber": 40, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 41, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 42, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 45, "col_offset": 6, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 51, "col_offset": 9, "nodeName": "cur", "type": "int"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "seq", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 55, "col_offset": 10, "nodeName": "read_idx", "type": "Any"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "idx", "type": "Any"}, {"lineNumber": 56, "col_offset": 6, "nodeName": "header", "type": "Any"}, {"lineNumber": 56, "col_offset": 14, "nodeName": "img", "type": "Any"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "unpack", "type": "Any"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "s", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "img", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "hlabel", "type": "Any"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "empty", "type": "Any"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "empty", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "DataBatch", "type": "Any"}, {"lineNumber": 97, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 98, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 99, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 100, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 101, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 102, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 103, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 105, "col_offset": 6, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "path_imgrec", "type": "Any"}, {"lineNumber": 108, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "MXIndexedRecordIO", "type": "Any"}, {"lineNumber": 108, "col_offset": 50, "nodeName": "path_imgidx", "type": "Any"}, {"lineNumber": 108, "col_offset": 63, "nodeName": "path_imgrec", "type": "Any"}, {"lineNumber": 109, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "keys", "type": "Any"}, {"lineNumber": 110, "col_offset": 6, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 112, "col_offset": 6, "nodeName": "reset", "type": "Callable[[], Any]"}, {"lineNumber": 113, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "args", "type": "Any"}, {"lineNumber": 114, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 115, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "args", "type": "Any"}, {"lineNumber": 116, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "input_img_size", "type": "Any"}, {"lineNumber": 116, "col_offset": 49, "nodeName": "input_img_size", "type": "Any"}, {"lineNumber": 117, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "aug_level", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "output_label_size", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "output_label_size", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "label_shape", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "output_label_size", "type": "Any"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "input_img_size", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "label_shape", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 125, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 126, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "use_coherent", "type": "Any"}, {"lineNumber": 129, "col_offset": 10, "nodeName": "provide_label", "type": "List[Union[Tuple[Any, Tuple[Any, ...]], Tuple[str, Tuple[Any, int]]]]"}, {"lineNumber": 130, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 131, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 132, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 133, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 134, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 176, "col_offset": 13, "nodeName": "k", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "v", "type": "Tuple[Union[Any, int], ...]"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "v", "type": "Tuple[Union[Any, int], ...]"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "k", "type": "Union[Any, str]"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "v", "type": "Union[Tuple[Any, ...], Tuple[Any, int]]"}, {"lineNumber": 178, "col_offset": 21, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "v", "type": "Union[Tuple[Any, ...], Tuple[Any, int]]"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "k", "type": "Union[Any, str]"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "v", "type": "Union[Tuple[Any, ...], Tuple[Any, int]]"}, {"lineNumber": 184, "col_offset": 21, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 189, "col_offset": 6, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 191, "col_offset": 9, "nodeName": "aug_level", "type": "Any"}, {"lineNumber": 193, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 197, "col_offset": 9, "nodeName": "cur", "type": "int"}, {"lineNumber": 198, "col_offset": 14, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "seq", "type": "List[Any]"}, {"lineNumber": 200, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 201, "col_offset": 10, "nodeName": "read_idx", "type": "Any"}, {"lineNumber": 201, "col_offset": 31, "nodeName": "idx", "type": "Any"}, {"lineNumber": 202, "col_offset": 6, "nodeName": "header", "type": "Any"}, {"lineNumber": 202, "col_offset": 14, "nodeName": "img", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "unpack", "type": "Any"}, {"lineNumber": 202, "col_offset": 36, "nodeName": "s", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "asnumpy", "type": "Any"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 207, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "h", "type": "int"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "w", "type": "int"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "key", "type": "numpy.ndarray"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "ul", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "br", "type": "Any"}, {"lineNumber": 221, "col_offset": 9, "nodeName": "mode", "type": "int"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 243, "col_offset": 25, "nodeName": "crop_ul", "type": "Tuple[int, int]"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "crop_br", "type": "Tuple[int, int]"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "img", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 251, "col_offset": 23, "nodeName": "crop_ul", "type": "numpy.ndarray"}, {"lineNumber": 260, "col_offset": 10, "nodeName": "invalid_num", "type": "int"}, {"lineNumber": 262, "col_offset": 6, "nodeName": "annot", "type": "Dict[str, Union[int, bool]]"}, {"lineNumber": 276, "col_offset": 13, "nodeName": "img", "type": "Any"}, {"lineNumber": 276, "col_offset": 18, "nodeName": "hlabel", "type": "Any"}, {"lineNumber": 276, "col_offset": 26, "nodeName": "annot", "type": "Dict[str, Union[int, bool]]"}, {"lineNumber": 279, "col_offset": 9, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 291, "col_offset": 20, "nodeName": "annot", "type": "Any"}, {"lineNumber": 292, "col_offset": 10, "nodeName": "scale", "type": "Any"}, {"lineNumber": 294, "col_offset": 10, "nodeName": "scale", "type": "Any"}, {"lineNumber": 295, "col_offset": 21, "nodeName": "annot", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "center", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "center", "type": "numpy.ndarray"}, {"lineNumber": 300, "col_offset": 9, "nodeName": "aug_level", "type": "Any"}, {"lineNumber": 301, "col_offset": 10, "nodeName": "max_retry", "type": "int"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "retry", "type": "int"}, {"lineNumber": 305, "col_offset": 18, "nodeName": "max_retry", "type": "int"}, {"lineNumber": 306, "col_offset": 10, "nodeName": "retry", "type": "int"}, {"lineNumber": 307, "col_offset": 10, "nodeName": "succ", "type": "bool"}, {"lineNumber": 327, "col_offset": 10, "nodeName": "label_out", "type": "Any"}, {"lineNumber": 328, "col_offset": 10, "nodeName": "label2_out", "type": "Any"}, {"lineNumber": 329, "col_offset": 10, "nodeName": "G", "type": "int"}, {"lineNumber": 332, "col_offset": 10, "nodeName": "_g", "type": "int"}, {"lineNumber": 332, "col_offset": 15, "nodeName": "G", "type": "int"}, {"lineNumber": 336, "col_offset": 14, "nodeName": "i", "type": "Any"}, {"lineNumber": 394, "col_offset": 10, "nodeName": "found", "type": "bool"}, {"lineNumber": 399, "col_offset": 13, "nodeName": "found", "type": "bool"}, {"lineNumber": 416, "col_offset": 13, "nodeName": "use_coherent", "type": "Any"}, {"lineNumber": 419, "col_offset": 10, "nodeName": "rotate2", "type": "int"}, {"lineNumber": 420, "col_offset": 10, "nodeName": "r", "type": "Any"}, {"lineNumber": 422, "col_offset": 10, "nodeName": "r", "type": "Any"}, {"lineNumber": 423, "col_offset": 10, "nodeName": "cos_r", "type": "float"}, {"lineNumber": 424, "col_offset": 10, "nodeName": "sin_r", "type": "float"}, {"lineNumber": 427, "col_offset": 10, "nodeName": "M", "type": "numpy.ndarray"}, {"lineNumber": 441, "col_offset": 21, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 442, "col_offset": 21, "nodeName": "empty", "type": "Any"}, {"lineNumber": 443, "col_offset": 22, "nodeName": "empty", "type": "Any"}, {"lineNumber": 444, "col_offset": 11, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "batch_label2", "type": "Any"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "batch_coherent_label", "type": "Any"}, {"lineNumber": 504, "col_offset": 15, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 511, "col_offset": 15, "nodeName": "use_coherent", "type": "Any"}, {"lineNumber": 532, "col_offset": 15, "nodeName": "imdecode", "type": "Any"}, {"lineNumber": 532, "col_offset": 24, "nodeName": "s", "type": "Any"}, {"lineNumber": 541, "col_offset": 64, "nodeName": "fin", "type": "BinaryIO"}, {"lineNumber": 542, "col_offset": 12, "nodeName": "img", "type": "bytes"}, {"lineNumber": 29, "col_offset": 6, "nodeName": "logging", "type": "module"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "path_imgrec", "type": "Any"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "recordio", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "imgrec", "type": "Any"}, {"lineNumber": 35, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 39, "col_offset": 49, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "data_name", "type": "Any"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "label_name", "type": "Any"}, {"lineNumber": 51, "col_offset": 9, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "seq", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "cur", "type": "int"}, {"lineNumber": 55, "col_offset": 10, "nodeName": "imgrec", "type": "Any"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "recordio", "type": "Any"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "nd", "type": "Any"}, {"lineNumber": 66, "col_offset": 44, "nodeName": "data_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 67, "col_offset": 22, "nodeName": "nd", "type": "Any"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "label_shape", "type": "Tuple[int, int]"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "i", "type": "int"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "label", "type": "Any"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "label", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "io", "type": "Any"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "batch_data", "type": "Any"}, {"lineNumber": 85, "col_offset": 46, "nodeName": "batch_label", "type": "Any"}, {"lineNumber": 85, "col_offset": 60, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 85, "col_offset": 73, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 6, "nodeName": "logging", "type": "module"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "path_imgrec", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "recordio", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "imgrec", "type": "Any"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "seq", "type": "List[Any]"}, {"lineNumber": 112, "col_offset": 6, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 116, "col_offset": 49, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "args", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "label_classes", "type": "Any"}, {"lineNumber": 120, "col_offset": 48, "nodeName": "output_label_size", "type": "Any"}, {"lineNumber": 120, "col_offset": 72, "nodeName": "output_label_size", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "args", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 124, "col_offset": 46, "nodeName": "output_label_size", "type": "Any"}, {"lineNumber": 124, "col_offset": 70, "nodeName": "output_label_size", "type": "Any"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "data_name", "type": "Any"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "label_name", "type": "Any"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 129, "col_offset": 10, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "D", "type": "Dict[Union[Any, str], Union[Tuple[Union[Any, int], ...], Tuple[Any, int], Tuple[Any, ...]]]"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "D", "type": "Dict[Union[Any, str], Union[Tuple[Union[Any, int], ...], Tuple[Any, int], Tuple[Any, ...]]]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 185, "col_offset": 21, "nodeName": "k", "type": "Union[Any, str]"}, {"lineNumber": 191, "col_offset": 9, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "shuffle", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "seq", "type": "List[Any]"}, {"lineNumber": 197, "col_offset": 9, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 197, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "seq", "type": "List[Any]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "cur", "type": "int"}, {"lineNumber": 201, "col_offset": 10, "nodeName": "imgrec", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "recordio", "type": "Any"}, {"lineNumber": 205, "col_offset": 48, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 207, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 207, "col_offset": 42, "nodeName": "int32", "type": "Any"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 208, "col_offset": 34, "nodeName": "int32", "type": "Any"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "minimum", "type": "Any"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "key", "type": "numpy.ndarray"}, {"lineNumber": 215, "col_offset": 29, "nodeName": "ul", "type": "numpy.ndarray"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "key", "type": "numpy.ndarray"}, {"lineNumber": 216, "col_offset": 29, "nodeName": "br", "type": "numpy.ndarray"}, {"lineNumber": 221, "col_offset": 9, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "mode", "type": "int"}, {"lineNumber": 234, "col_offset": 10, "nodeName": "crop_ul", "type": "Tuple[int, int]"}, {"lineNumber": 235, "col_offset": 10, "nodeName": "crop_br", "type": "Tuple[int, int]"}, {"lineNumber": 243, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 250, "col_offset": 14, "nodeName": "invalid", "type": "bool"}, {"lineNumber": 251, "col_offset": 10, "nodeName": "hlabel", "type": "Any"}, {"lineNumber": 260, "col_offset": 10, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 292, "col_offset": 18, "nodeName": "annot", "type": "Any"}, {"lineNumber": 294, "col_offset": 18, "nodeName": "max", "type": "Callable"}, {"lineNumber": 296, "col_offset": 17, "nodeName": "annot", "type": "Any"}, {"lineNumber": 298, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 300, "col_offset": 9, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 308, "col_offset": 13, "nodeName": "aug_level", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "rotate", "type": "Any"}, {"lineNumber": 311, "col_offset": 12, "nodeName": "rotate2", "type": "int"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "scale_config", "type": "float"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "_scale", "type": "Any"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "_scale", "type": "Any"}, {"lineNumber": 316, "col_offset": 22, "nodeName": "scale", "type": "Any"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "_scale", "type": "int"}, {"lineNumber": 320, "col_offset": 13, "nodeName": "mode", "type": "int"}, {"lineNumber": 321, "col_offset": 14, "nodeName": "cropped", "type": "Any"}, {"lineNumber": 327, "col_offset": 22, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 327, "col_offset": 31, "nodeName": "label_shape", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 328, "col_offset": 23, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 328, "col_offset": 32, "nodeName": "label_shape", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 333, "col_offset": 13, "nodeName": "G", "type": "int"}, {"lineNumber": 334, "col_offset": 14, "nodeName": "_g", "type": "int"}, {"lineNumber": 336, "col_offset": 19, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "pt", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "pt", "type": "Any"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "_pt", "type": "Any"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "trans", "type": "Any"}, {"lineNumber": 352, "col_offset": 17, "nodeName": "succ", "type": "bool"}, {"lineNumber": 358, "col_offset": 13, "nodeName": "use_coherent", "type": "Any"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "cropped2", "type": "Any"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "k", "type": "Any"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "label2_out", "type": "Any"}, {"lineNumber": 363, "col_offset": 16, "nodeName": "k", "type": "Any"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "new_label2_out", "type": "Any"}, {"lineNumber": 366, "col_offset": 16, "nodeName": "item", "type": "Tuple[int, int]"}, {"lineNumber": 366, "col_offset": 24, "nodeName": "mirror_set", "type": "List[Tuple[int, int]]"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "label2_out", "type": "Any"}, {"lineNumber": 370, "col_offset": 25, "nodeName": "new_label2_out", "type": "Any"}, {"lineNumber": 385, "col_offset": 13, "nodeName": "G", "type": "int"}, {"lineNumber": 386, "col_offset": 18, "nodeName": "k", "type": "Any"}, {"lineNumber": 405, "col_offset": 9, "nodeName": "vis", "type": "int"}, {"lineNumber": 405, "col_offset": 38, "nodeName": "vis", "type": "int"}, {"lineNumber": 416, "col_offset": 13, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 417, "col_offset": 17, "nodeName": "cropped", "type": "Any"}, {"lineNumber": 417, "col_offset": 26, "nodeName": "label_out", "type": "Any"}, {"lineNumber": 420, "col_offset": 14, "nodeName": "rotate", "type": "Any"}, {"lineNumber": 420, "col_offset": 23, "nodeName": "rotate2", "type": "int"}, {"lineNumber": 423, "col_offset": 18, "nodeName": "cos", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 423, "col_offset": 27, "nodeName": "r", "type": "Any"}, {"lineNumber": 424, "col_offset": 18, "nodeName": "sin", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 424, "col_offset": 27, "nodeName": "r", "type": "Any"}, {"lineNumber": 427, "col_offset": 14, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 436, "col_offset": 17, "nodeName": "cropped", "type": "Any"}, {"lineNumber": 436, "col_offset": 26, "nodeName": "label_out", "type": "Any"}, {"lineNumber": 436, "col_offset": 37, "nodeName": "cropped2", "type": "Any"}, {"lineNumber": 436, "col_offset": 47, "nodeName": "label2_out", "type": "Any"}, {"lineNumber": 442, "col_offset": 21, "nodeName": "nd", "type": "Any"}, {"lineNumber": 442, "col_offset": 44, "nodeName": "data_shape", "type": "Tuple[int, Any, Any]"}, {"lineNumber": 443, "col_offset": 22, "nodeName": "nd", "type": "Any"}, {"lineNumber": 443, "col_offset": 45, "nodeName": "label_shape", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 445, "col_offset": 27, "nodeName": "empty", "type": "Any"}, {"lineNumber": 446, "col_offset": 35, "nodeName": "empty", "type": "Any"}, {"lineNumber": 450, "col_offset": 18, "nodeName": "i", "type": "int"}, {"lineNumber": 450, "col_offset": 22, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 511, "col_offset": 15, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 512, "col_offset": 19, "nodeName": "DataBatch", "type": "Any"}, {"lineNumber": 515, "col_offset": 19, "nodeName": "DataBatch", "type": "Any"}, {"lineNumber": 520, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 522, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 526, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 526, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 527, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 541, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 542, "col_offset": 18, "nodeName": "read", "type": "Callable"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 41, "col_offset": 55, "nodeName": "data_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 42, "col_offset": 57, "nodeName": "label_shape", "type": "Tuple[int, int]"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 55, "col_offset": 10, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "imdecode", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "img", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "label", "type": "Any"}, {"lineNumber": 59, "col_offset": 48, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 66, "col_offset": 44, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "label", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "next_sample", "type": "Callable[[], Any]"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "array", "type": "Any"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "array", "type": "Any"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "label", "type": "Any"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "mx", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "mx", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 120, "col_offset": 48, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 120, "col_offset": 72, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 124, "col_offset": 46, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 124, "col_offset": 70, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 125, "col_offset": 55, "nodeName": "data_shape", "type": "Tuple[int, Any, Any]"}, {"lineNumber": 126, "col_offset": 57, "nodeName": "label_shape", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 177, "col_offset": 14, "nodeName": "k", "type": "Any"}, {"lineNumber": 179, "col_offset": 14, "nodeName": "k", "type": "Union[Any, str]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "D", "type": "List[Union[str, Any]]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 201, "col_offset": 10, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "imdecode", "type": "Any"}, {"lineNumber": 203, "col_offset": 30, "nodeName": "img", "type": "Any"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 205, "col_offset": 24, "nodeName": "label", "type": "Any"}, {"lineNumber": 205, "col_offset": 48, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 207, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 208, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "hlabel", "type": "Any"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 213, "col_offset": 24, "nodeName": "h", "type": "int"}, {"lineNumber": 213, "col_offset": 26, "nodeName": "w", "type": "int"}, {"lineNumber": 215, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 216, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 235, "col_offset": 21, "nodeName": "record_img_size", "type": "int"}, {"lineNumber": 235, "col_offset": 43, "nodeName": "record_img_size", "type": "int"}, {"lineNumber": 236, "col_offset": 10, "nodeName": "annot", "type": "Dict[str, Union[int, bool]]"}, {"lineNumber": 248, "col_offset": 22, "nodeName": "hlabel", "type": "Any"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "any", "type": "Any"}, {"lineNumber": 249, "col_offset": 43, "nodeName": "any", "type": "Any"}, {"lineNumber": 251, "col_offset": 17, "nodeName": "i", "type": "Any"}, {"lineNumber": 294, "col_offset": 22, "nodeName": "shape", "type": "Any"}, {"lineNumber": 294, "col_offset": 37, "nodeName": "shape", "type": "Any"}, {"lineNumber": 298, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 308, "col_offset": 13, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 309, "col_offset": 21, "nodeName": "randint", "type": "Any"}, {"lineNumber": 315, "col_offset": 21, "nodeName": "min", "type": "Callable"}, {"lineNumber": 317, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 317, "col_offset": 25, "nodeName": "_scale", "type": "Any"}, {"lineNumber": 320, "col_offset": 13, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "crop2", "type": "Any"}, {"lineNumber": 321, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 321, "col_offset": 47, "nodeName": "center", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 321, "col_offset": 55, "nodeName": "_scale", "type": "Union[int, Any]"}, {"lineNumber": 322, "col_offset": 17, "nodeName": "use_coherent", "type": "Any"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "cropped2", "type": "Any"}, {"lineNumber": 327, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 327, "col_offset": 31, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 327, "col_offset": 55, "nodeName": "float32", "type": "Any"}, {"lineNumber": 328, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 328, "col_offset": 32, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 328, "col_offset": 56, "nodeName": "float32", "type": "Any"}, {"lineNumber": 336, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 337, "col_offset": 17, "nodeName": "copy", "type": "Any"}, {"lineNumber": 338, "col_offset": 17, "nodeName": "pt", "type": "Any"}, {"lineNumber": 340, "col_offset": 18, "nodeName": "copy", "type": "Any"}, {"lineNumber": 341, "col_offset": 20, "nodeName": "transform", "type": "Any"}, {"lineNumber": 341, "col_offset": 41, "nodeName": "_pt", "type": "Any"}, {"lineNumber": 341, "col_offset": 46, "nodeName": "center", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 341, "col_offset": 54, "nodeName": "_scale", "type": "Union[int, Any]"}, {"lineNumber": 344, "col_offset": 16, "nodeName": "succ", "type": "bool"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "use_coherent", "type": "Any"}, {"lineNumber": 347, "col_offset": 16, "nodeName": "_pt", "type": "Any"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "trans2", "type": "Any"}, {"lineNumber": 353, "col_offset": 17, "nodeName": "aug_level", "type": "Any"}, {"lineNumber": 354, "col_offset": 18, "nodeName": "_scale", "type": "Any"}, {"lineNumber": 358, "col_offset": 13, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 359, "col_offset": 23, "nodeName": "copy", "type": "Any"}, {"lineNumber": 359, "col_offset": 31, "nodeName": "cropped", "type": "Any"}, {"lineNumber": 360, "col_offset": 21, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 362, "col_offset": 25, "nodeName": "copy", "type": "Any"}, {"lineNumber": 362, "col_offset": 33, "nodeName": "label_out", "type": "Any"}, {"lineNumber": 363, "col_offset": 21, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 365, "col_offset": 29, "nodeName": "copy", "type": "Any"}, {"lineNumber": 365, "col_offset": 37, "nodeName": "label2_out", "type": "Any"}, {"lineNumber": 366, "col_offset": 24, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 367, "col_offset": 16, "nodeName": "mir", "type": "Tuple[int, int]"}, {"lineNumber": 371, "col_offset": 15, "nodeName": "use_coherent", "type": "Any"}, {"lineNumber": 386, "col_offset": 23, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 387, "col_offset": 18, "nodeName": "ind", "type": "Any"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "use_coherent", "type": "Any"}, {"lineNumber": 405, "col_offset": 9, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 405, "col_offset": 24, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 422, "col_offset": 14, "nodeName": "pi", "type": "float"}, {"lineNumber": 422, "col_offset": 22, "nodeName": "r", "type": "Any"}, {"lineNumber": 423, "col_offset": 18, "nodeName": "math", "type": "module"}, {"lineNumber": 424, "col_offset": 18, "nodeName": "math", "type": "module"}, {"lineNumber": 427, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 436, "col_offset": 59, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 442, "col_offset": 31, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 442, "col_offset": 44, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 443, "col_offset": 32, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 443, "col_offset": 45, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 445, "col_offset": 27, "nodeName": "nd", "type": "Any"}, {"lineNumber": 445, "col_offset": 50, "nodeName": "label_shape", "type": "Tuple[Any, Any, Any]"}, {"lineNumber": 446, "col_offset": 35, "nodeName": "nd", "type": "Any"}, {"lineNumber": 446, "col_offset": 45, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 452, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 452, "col_offset": 22, "nodeName": "label", "type": "Any"}, {"lineNumber": 452, "col_offset": 29, "nodeName": "annot", "type": "Dict[str, Union[int, bool]]"}, {"lineNumber": 452, "col_offset": 37, "nodeName": "next_sample", "type": "Callable[[], Any]"}, {"lineNumber": 453, "col_offset": 23, "nodeName": "use_coherent", "type": "Any"}, {"lineNumber": 454, "col_offset": 20, "nodeName": "R", "type": "Union[Tuple[Any, Any], Tuple[Any, Any, Any, Any, Any]]"}, {"lineNumber": 457, "col_offset": 34, "nodeName": "R", "type": "Union[Tuple[Any, Any], Tuple[Any, Any, Any, Any, Any]]"}, {"lineNumber": 462, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 463, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 464, "col_offset": 20, "nodeName": "label", "type": "Any"}, {"lineNumber": 471, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 472, "col_offset": 40, "nodeName": "label", "type": "Any"}, {"lineNumber": 473, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 475, "col_offset": 20, "nodeName": "R", "type": "Union[Tuple[Any, Any], Tuple[Any, Any, Any, Any, Any]]"}, {"lineNumber": 478, "col_offset": 52, "nodeName": "R", "type": "Union[Tuple[Any, Any], Tuple[Any, Any, Any, Any, Any]]"}, {"lineNumber": 479, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 480, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 481, "col_offset": 20, "nodeName": "label", "type": "Any"}, {"lineNumber": 482, "col_offset": 20, "nodeName": "data2", "type": "Any"}, {"lineNumber": 483, "col_offset": 20, "nodeName": "data2", "type": "Any"}, {"lineNumber": 484, "col_offset": 20, "nodeName": "label2", "type": "Any"}, {"lineNumber": 485, "col_offset": 20, "nodeName": "M", "type": "Any"}, {"lineNumber": 492, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 493, "col_offset": 40, "nodeName": "label", "type": "Any"}, {"lineNumber": 495, "col_offset": 49, "nodeName": "M", "type": "Any"}, {"lineNumber": 497, "col_offset": 20, "nodeName": "j", "type": "Any"}, {"lineNumber": 498, "col_offset": 39, "nodeName": "data2", "type": "Any"}, {"lineNumber": 499, "col_offset": 40, "nodeName": "label2", "type": "Any"}, {"lineNumber": 500, "col_offset": 49, "nodeName": "M", "type": "Any"}, {"lineNumber": 501, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 505, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 506, "col_offset": 22, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 512, "col_offset": 19, "nodeName": "io", "type": "Any"}, {"lineNumber": 512, "col_offset": 36, "nodeName": "batch_data", "type": "Any"}, {"lineNumber": 512, "col_offset": 50, "nodeName": "batch_label", "type": "Any"}, {"lineNumber": 512, "col_offset": 64, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 512, "col_offset": 77, "nodeName": "i", "type": "Any"}, {"lineNumber": 515, "col_offset": 19, "nodeName": "io", "type": "Any"}, {"lineNumber": 515, "col_offset": 36, "nodeName": "batch_data", "type": "Any"}, {"lineNumber": 515, "col_offset": 50, "nodeName": "batch_label", "type": "Any"}, {"lineNumber": 515, "col_offset": 63, "nodeName": "batch_coherent_label", "type": "Any"}, {"lineNumber": 515, "col_offset": 86, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 515, "col_offset": 99, "nodeName": "i", "type": "Any"}, {"lineNumber": 519, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 519, "col_offset": 19, "nodeName": "data_shape", "type": "Any"}, {"lineNumber": 521, "col_offset": 15, "nodeName": "data_shape", "type": "Any"}, {"lineNumber": 541, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 541, "col_offset": 31, "nodeName": "path_root", "type": "Any"}, {"lineNumber": 541, "col_offset": 47, "nodeName": "fname", "type": "Any"}, {"lineNumber": 542, "col_offset": 18, "nodeName": "fin", "type": "BinaryIO"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 41, "col_offset": 55, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 42, "col_offset": 42, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 42, "col_offset": 57, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "image", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "header", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "self", "type": "FaceSegIter0"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "nd", "type": "Any"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "nd", "type": "Any"}, {"lineNumber": 76, "col_offset": 24, "nodeName": "nd", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "batch_data", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "batch_label", "type": "Any"}, {"lineNumber": 125, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 125, "col_offset": 55, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 126, "col_offset": 57, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 129, "col_offset": 53, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "image", "type": "Any"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 205, "col_offset": 24, "nodeName": "header", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "hlabel", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "hlabel", "type": "Any"}, {"lineNumber": 235, "col_offset": 21, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 235, "col_offset": 43, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 245, "col_offset": 16, "nodeName": "crop_ul", "type": "numpy.ndarray"}, {"lineNumber": 245, "col_offset": 27, "nodeName": "crop_br", "type": "numpy.ndarray"}, {"lineNumber": 245, "col_offset": 38, "nodeName": "crop_ul", "type": "numpy.ndarray"}, {"lineNumber": 245, "col_offset": 49, "nodeName": "crop_br", "type": "numpy.ndarray"}, {"lineNumber": 294, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 294, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 309, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 315, "col_offset": 27, "nodeName": "scale_config", "type": "float"}, {"lineNumber": 315, "col_offset": 41, "nodeName": "max", "type": "Callable"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "img_helper", "type": "Any"}, {"lineNumber": 321, "col_offset": 64, "nodeName": "input_img_size", "type": "Any"}, {"lineNumber": 321, "col_offset": 85, "nodeName": "input_img_size", "type": "Any"}, {"lineNumber": 321, "col_offset": 111, "nodeName": "rotate", "type": "Any"}, {"lineNumber": 322, "col_offset": 17, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 323, "col_offset": 27, "nodeName": "crop2", "type": "Any"}, {"lineNumber": 323, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 323, "col_offset": 50, "nodeName": "center", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 323, "col_offset": 58, "nodeName": "_scale", "type": "Union[int, Any]"}, {"lineNumber": 327, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 328, "col_offset": 56, "nodeName": "np", "type": "module"}, {"lineNumber": 336, "col_offset": 26, "nodeName": "label", "type": "Any"}, {"lineNumber": 340, "col_offset": 18, "nodeName": "pt", "type": "Any"}, {"lineNumber": 341, "col_offset": 20, "nodeName": "img_helper", "type": "Any"}, {"lineNumber": 341, "col_offset": 63, "nodeName": "output_label_size", "type": "Any"}, {"lineNumber": 341, "col_offset": 87, "nodeName": "output_label_size", "type": "Any"}, {"lineNumber": 341, "col_offset": 116, "nodeName": "rotate", "type": "Any"}, {"lineNumber": 343, "col_offset": 19, "nodeName": "gaussian", "type": "Any"}, {"lineNumber": 343, "col_offset": 53, "nodeName": "trans", "type": "Any"}, {"lineNumber": 343, "col_offset": 60, "nodeName": "_g", "type": "int"}, {"lineNumber": 346, "col_offset": 15, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 347, "col_offset": 22, "nodeName": "copy", "type": "Any"}, {"lineNumber": 348, "col_offset": 25, "nodeName": "transform", "type": "Any"}, {"lineNumber": 348, "col_offset": 46, "nodeName": "_pt", "type": "Any"}, {"lineNumber": 348, "col_offset": 51, "nodeName": "center", "type": "Union[numpy.ndarray, Any]"}, {"lineNumber": 348, "col_offset": 59, "nodeName": "_scale", "type": "Union[int, Any]"}, {"lineNumber": 350, "col_offset": 20, "nodeName": "succ", "type": "bool"}, {"lineNumber": 353, "col_offset": 17, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 359, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 360, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 361, "col_offset": 16, "nodeName": "cropped2", "type": "Any"}, {"lineNumber": 361, "col_offset": 34, "nodeName": "fliplr", "type": "Any"}, {"lineNumber": 362, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 363, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 364, "col_offset": 16, "nodeName": "label2_out", "type": "Any"}, {"lineNumber": 364, "col_offset": 36, "nodeName": "fliplr", "type": "Any"}, {"lineNumber": 365, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 368, "col_offset": 16, "nodeName": "new_label2_out", "type": "Any"}, {"lineNumber": 368, "col_offset": 41, "nodeName": "label2_out", "type": "Any"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "new_label2_out", "type": "Any"}, {"lineNumber": 369, "col_offset": 41, "nodeName": "label2_out", "type": "Any"}, {"lineNumber": 371, "col_offset": 15, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 373, "col_offset": 65, "nodeName": "force_mirror", "type": "Any"}, {"lineNumber": 374, "col_offset": 18, "nodeName": "k", "type": "Any"}, {"lineNumber": 376, "col_offset": 18, "nodeName": "k", "type": "Any"}, {"lineNumber": 378, "col_offset": 14, "nodeName": "new_label_out", "type": "Any"}, {"lineNumber": 379, "col_offset": 18, "nodeName": "item", "type": "Tuple[int, int]"}, {"lineNumber": 379, "col_offset": 26, "nodeName": "mirror_set", "type": "List[Tuple[int, int]]"}, {"lineNumber": 383, "col_offset": 14, "nodeName": "label_out", "type": "Any"}, {"lineNumber": 383, "col_offset": 26, "nodeName": "new_label_out", "type": "Any"}, {"lineNumber": 386, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 387, "col_offset": 24, "nodeName": "unravel_index", "type": "Any"}, {"lineNumber": 387, "col_offset": 77, "nodeName": "shape", "type": "Any"}, {"lineNumber": 388, "col_offset": 18, "nodeName": "label_out", "type": "Any"}, {"lineNumber": 389, "col_offset": 18, "nodeName": "label_out", "type": "Any"}, {"lineNumber": 390, "col_offset": 21, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 391, "col_offset": 22, "nodeName": "ind", "type": "Any"}, {"lineNumber": 422, "col_offset": 14, "nodeName": "math", "type": "module"}, {"lineNumber": 428, "col_offset": 15, "nodeName": "cos_r", "type": "float"}, {"lineNumber": 429, "col_offset": 15, "nodeName": "sin_r", "type": "float"}, {"lineNumber": 429, "col_offset": 22, "nodeName": "cos_r", "type": "float"}, {"lineNumber": 436, "col_offset": 59, "nodeName": "M", "type": "numpy.ndarray"}, {"lineNumber": 445, "col_offset": 37, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 445, "col_offset": 50, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 452, "col_offset": 37, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 453, "col_offset": 23, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 454, "col_offset": 24, "nodeName": "do_aug", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 454, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 454, "col_offset": 42, "nodeName": "label", "type": "Any"}, {"lineNumber": 454, "col_offset": 49, "nodeName": "annot", "type": "Dict[str, Union[int, bool]]"}, {"lineNumber": 455, "col_offset": 23, "nodeName": "R", "type": "Union[Tuple[Any, Any], Tuple[Any, Any, Any, Any, Any]]"}, {"lineNumber": 457, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 457, "col_offset": 26, "nodeName": "label", "type": "Any"}, {"lineNumber": 462, "col_offset": 27, "nodeName": "array", "type": "Any"}, {"lineNumber": 462, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 463, "col_offset": 27, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 463, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 464, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 464, "col_offset": 37, "nodeName": "label", "type": "Any"}, {"lineNumber": 468, "col_offset": 27, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 475, "col_offset": 24, "nodeName": "do_aug", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 475, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 475, "col_offset": 42, "nodeName": "label", "type": "Any"}, {"lineNumber": 475, "col_offset": 49, "nodeName": "annot", "type": "Dict[str, Union[int, bool]]"}, {"lineNumber": 476, "col_offset": 23, "nodeName": "R", "type": "Union[Tuple[Any, Any], Tuple[Any, Any, Any, Any, Any]]"}, {"lineNumber": 478, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 478, "col_offset": 26, "nodeName": "label", "type": "Any"}, {"lineNumber": 478, "col_offset": 33, "nodeName": "data2", "type": "Any"}, {"lineNumber": 478, "col_offset": 40, "nodeName": "label2", "type": "Any"}, {"lineNumber": 478, "col_offset": 48, "nodeName": "M", "type": "Any"}, {"lineNumber": 479, "col_offset": 27, "nodeName": "array", "type": "Any"}, {"lineNumber": 479, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 480, "col_offset": 27, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 480, "col_offset": 40, "nodeName": "data", "type": "Any"}, {"lineNumber": 481, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 481, "col_offset": 37, "nodeName": "label", "type": "Any"}, {"lineNumber": 482, "col_offset": 28, "nodeName": "array", "type": "Any"}, {"lineNumber": 482, "col_offset": 37, "nodeName": "data2", "type": "Any"}, {"lineNumber": 483, "col_offset": 28, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 483, "col_offset": 41, "nodeName": "data2", "type": "Any"}, {"lineNumber": 484, "col_offset": 29, "nodeName": "array", "type": "Any"}, {"lineNumber": 484, "col_offset": 38, "nodeName": "label2", "type": "Any"}, {"lineNumber": 485, "col_offset": 24, "nodeName": "array", "type": "Any"}, {"lineNumber": 485, "col_offset": 33, "nodeName": "M", "type": "Any"}, {"lineNumber": 489, "col_offset": 27, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 497, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 503, "col_offset": 24, "nodeName": "i", "type": "Any"}, {"lineNumber": 512, "col_offset": 19, "nodeName": "mx", "type": "Any"}, {"lineNumber": 515, "col_offset": 19, "nodeName": "mx", "type": "Any"}, {"lineNumber": 526, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 541, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 541, "col_offset": 31, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "i", "type": "int"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "i", "type": "Any"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "i", "type": "Any"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "crop_ul", "type": "numpy.ndarray"}, {"lineNumber": 249, "col_offset": 56, "nodeName": "crop_br", "type": "numpy.ndarray"}, {"lineNumber": 298, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 298, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 309, "col_offset": 21, "nodeName": "np", "type": "module"}, {"lineNumber": 315, "col_offset": 47, "nodeName": "scale_config", "type": "float"}, {"lineNumber": 321, "col_offset": 64, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 321, "col_offset": 85, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 323, "col_offset": 27, "nodeName": "img_helper", "type": "Any"}, {"lineNumber": 323, "col_offset": 67, "nodeName": "input_img_size", "type": "Any"}, {"lineNumber": 323, "col_offset": 88, "nodeName": "input_img_size", "type": "Any"}, {"lineNumber": 323, "col_offset": 114, "nodeName": "rotate2", "type": "int"}, {"lineNumber": 337, "col_offset": 17, "nodeName": "label", "type": "Any"}, {"lineNumber": 341, "col_offset": 63, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 341, "col_offset": 87, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 343, "col_offset": 19, "nodeName": "img_helper", "type": "Any"}, {"lineNumber": 343, "col_offset": 39, "nodeName": "label_out", "type": "Any"}, {"lineNumber": 347, "col_offset": 22, "nodeName": "pt", "type": "Any"}, {"lineNumber": 348, "col_offset": 25, "nodeName": "img_helper", "type": "Any"}, {"lineNumber": 348, "col_offset": 68, "nodeName": "output_label_size", "type": "Any"}, {"lineNumber": 348, "col_offset": 92, "nodeName": "output_label_size", "type": "Any"}, {"lineNumber": 348, "col_offset": 121, "nodeName": "rotate2", "type": "int"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "gaussian", "type": "Any"}, {"lineNumber": 349, "col_offset": 58, "nodeName": "trans2", "type": "Any"}, {"lineNumber": 349, "col_offset": 66, "nodeName": "_g", "type": "int"}, {"lineNumber": 360, "col_offset": 28, "nodeName": "cropped2", "type": "Any"}, {"lineNumber": 361, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 361, "col_offset": 44, "nodeName": "cropped2", "type": "Any"}, {"lineNumber": 363, "col_offset": 28, "nodeName": "label2_out", "type": "Any"}, {"lineNumber": 364, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 364, "col_offset": 46, "nodeName": "label2_out", "type": "Any"}, {"lineNumber": 373, "col_offset": 65, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 374, "col_offset": 23, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 376, "col_offset": 23, "nodeName": "xrange", "type": "Any"}, {"lineNumber": 378, "col_offset": 30, "nodeName": "copy", "type": "Any"}, {"lineNumber": 378, "col_offset": 38, "nodeName": "label_out", "type": "Any"}, {"lineNumber": 379, "col_offset": 26, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 380, "col_offset": 18, "nodeName": "mir", "type": "Tuple[int, int]"}, {"lineNumber": 386, "col_offset": 30, "nodeName": "label", "type": "Any"}, {"lineNumber": 387, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 387, "col_offset": 41, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 391, "col_offset": 28, "nodeName": "unravel_index", "type": "Any"}, {"lineNumber": 391, "col_offset": 82, "nodeName": "shape", "type": "Any"}, {"lineNumber": 392, "col_offset": 22, "nodeName": "label2_out", "type": "Any"}, {"lineNumber": 393, "col_offset": 22, "nodeName": "label2_out", "type": "Any"}, {"lineNumber": 428, "col_offset": 25, "nodeName": "sin_r", "type": "float"}, {"lineNumber": 454, "col_offset": 24, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 462, "col_offset": 27, "nodeName": "nd", "type": "Any"}, {"lineNumber": 463, "col_offset": 27, "nodeName": "nd", "type": "Any"}, {"lineNumber": 464, "col_offset": 28, "nodeName": "nd", "type": "Any"}, {"lineNumber": 467, "col_offset": 24, "nodeName": "check_valid_image", "type": "Callable[[Any], Any]"}, {"lineNumber": 467, "col_offset": 47, "nodeName": "data", "type": "Any"}, {"lineNumber": 471, "col_offset": 20, "nodeName": "batch_data", "type": "Any"}, {"lineNumber": 472, "col_offset": 20, "nodeName": "batch_label", "type": "Any"}, {"lineNumber": 475, "col_offset": 24, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 479, "col_offset": 27, "nodeName": "nd", "type": "Any"}, {"lineNumber": 480, "col_offset": 27, "nodeName": "nd", "type": "Any"}, {"lineNumber": 481, "col_offset": 28, "nodeName": "nd", "type": "Any"}, {"lineNumber": 482, "col_offset": 28, "nodeName": "nd", "type": "Any"}, {"lineNumber": 483, "col_offset": 28, "nodeName": "nd", "type": "Any"}, {"lineNumber": 484, "col_offset": 29, "nodeName": "nd", "type": "Any"}, {"lineNumber": 485, "col_offset": 24, "nodeName": "nd", "type": "Any"}, {"lineNumber": 488, "col_offset": 24, "nodeName": "check_valid_image", "type": "Callable[[Any], Any]"}, {"lineNumber": 488, "col_offset": 47, "nodeName": "data", "type": "Any"}, {"lineNumber": 492, "col_offset": 20, "nodeName": "batch_data", "type": "Any"}, {"lineNumber": 493, "col_offset": 20, "nodeName": "batch_label", "type": "Any"}, {"lineNumber": 495, "col_offset": 20, "nodeName": "batch_coherent_label", "type": "Any"}, {"lineNumber": 497, "col_offset": 26, "nodeName": "per_batch_size", "type": "Any"}, {"lineNumber": 498, "col_offset": 20, "nodeName": "batch_data", "type": "Any"}, {"lineNumber": 499, "col_offset": 20, "nodeName": "batch_label", "type": "Any"}, {"lineNumber": 500, "col_offset": 20, "nodeName": "batch_coherent_label", "type": "Any"}, {"lineNumber": 502, "col_offset": 23, "nodeName": "j", "type": "Any"}, {"lineNumber": 502, "col_offset": 25, "nodeName": "per_batch_size", "type": "Any"}, {"lineNumber": 502, "col_offset": 46, "nodeName": "per_batch_size", "type": "Any"}, {"lineNumber": 503, "col_offset": 28, "nodeName": "j", "type": "Any"}, {"lineNumber": 541, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 249, "col_offset": 14, "nodeName": "hlabel", "type": "Any"}, {"lineNumber": 249, "col_offset": 43, "nodeName": "hlabel", "type": "Any"}, {"lineNumber": 298, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 298, "col_offset": 45, "nodeName": "data", "type": "Any"}, {"lineNumber": 315, "col_offset": 82, "nodeName": "scale_config", "type": "float"}, {"lineNumber": 323, "col_offset": 67, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 323, "col_offset": 88, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 337, "col_offset": 23, "nodeName": "i", "type": "Any"}, {"lineNumber": 343, "col_offset": 49, "nodeName": "i", "type": "Any"}, {"lineNumber": 348, "col_offset": 68, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 348, "col_offset": 92, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "img_helper", "type": "Any"}, {"lineNumber": 349, "col_offset": 43, "nodeName": "label2_out", "type": "Any"}, {"lineNumber": 361, "col_offset": 29, "nodeName": "k", "type": "Any"}, {"lineNumber": 364, "col_offset": 27, "nodeName": "k", "type": "Any"}, {"lineNumber": 367, "col_offset": 23, "nodeName": "item", "type": "Tuple[int, int]"}, {"lineNumber": 367, "col_offset": 34, "nodeName": "item", "type": "Tuple[int, int]"}, {"lineNumber": 368, "col_offset": 31, "nodeName": "mir", "type": "Tuple[int, int]"}, {"lineNumber": 368, "col_offset": 52, "nodeName": "mir", "type": "Tuple[int, int]"}, {"lineNumber": 369, "col_offset": 31, "nodeName": "mir", "type": "Tuple[int, int]"}, {"lineNumber": 369, "col_offset": 52, "nodeName": "mir", "type": "Tuple[int, int]"}, {"lineNumber": 373, "col_offset": 17, "nodeName": "aug_level", "type": "Any"}, {"lineNumber": 374, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 375, "col_offset": 18, "nodeName": "cropped", "type": "Any"}, {"lineNumber": 375, "col_offset": 35, "nodeName": "fliplr", "type": "Any"}, {"lineNumber": 376, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 377, "col_offset": 18, "nodeName": "label_out", "type": "Any"}, {"lineNumber": 377, "col_offset": 37, "nodeName": "fliplr", "type": "Any"}, {"lineNumber": 378, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 381, "col_offset": 18, "nodeName": "new_label_out", "type": "Any"}, {"lineNumber": 381, "col_offset": 42, "nodeName": "label_out", "type": "Any"}, {"lineNumber": 382, "col_offset": 18, "nodeName": "new_label_out", "type": "Any"}, {"lineNumber": 382, "col_offset": 42, "nodeName": "label_out", "type": "Any"}, {"lineNumber": 387, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 387, "col_offset": 51, "nodeName": "label_out", "type": "Any"}, {"lineNumber": 387, "col_offset": 77, "nodeName": "label_out", "type": "Any"}, {"lineNumber": 388, "col_offset": 28, "nodeName": "k", "type": "Any"}, {"lineNumber": 389, "col_offset": 28, "nodeName": "k", "type": "Any"}, {"lineNumber": 391, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 391, "col_offset": 45, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 467, "col_offset": 24, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 469, "col_offset": 24, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 471, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 472, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 488, "col_offset": 24, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 490, "col_offset": 24, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 492, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 493, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 495, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 497, "col_offset": 26, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 498, "col_offset": 31, "nodeName": "j", "type": "Any"}, {"lineNumber": 499, "col_offset": 32, "nodeName": "j", "type": "Any"}, {"lineNumber": 500, "col_offset": 41, "nodeName": "j", "type": "Any"}, {"lineNumber": 502, "col_offset": 25, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 502, "col_offset": 46, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 249, "col_offset": 21, "nodeName": "i", "type": "Any"}, {"lineNumber": 249, "col_offset": 50, "nodeName": "i", "type": "Any"}, {"lineNumber": 315, "col_offset": 62, "nodeName": "randn", "type": "Any"}, {"lineNumber": 349, "col_offset": 54, "nodeName": "i", "type": "Any"}, {"lineNumber": 361, "col_offset": 57, "nodeName": "k", "type": "Any"}, {"lineNumber": 364, "col_offset": 57, "nodeName": "k", "type": "Any"}, {"lineNumber": 373, "col_offset": 17, "nodeName": "self", "type": "FaceSegIter"}, {"lineNumber": 373, "col_offset": 38, "nodeName": "rand", "type": "Any"}, {"lineNumber": 374, "col_offset": 30, "nodeName": "cropped", "type": "Any"}, {"lineNumber": 375, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 375, "col_offset": 45, "nodeName": "cropped", "type": "Any"}, {"lineNumber": 376, "col_offset": 30, "nodeName": "label_out", "type": "Any"}, {"lineNumber": 377, "col_offset": 37, "nodeName": "np", "type": "module"}, {"lineNumber": 377, "col_offset": 47, "nodeName": "label_out", "type": "Any"}, {"lineNumber": 387, "col_offset": 61, "nodeName": "k", "type": "Any"}, {"lineNumber": 387, "col_offset": 87, "nodeName": "k", "type": "Any"}, {"lineNumber": 389, "col_offset": 30, "nodeName": "ind", "type": "Any"}, {"lineNumber": 389, "col_offset": 37, "nodeName": "ind", "type": "Any"}, {"lineNumber": 391, "col_offset": 45, "nodeName": "np", "type": "module"}, {"lineNumber": 391, "col_offset": 55, "nodeName": "label2_out", "type": "Any"}, {"lineNumber": 391, "col_offset": 82, "nodeName": "label2_out", "type": "Any"}, {"lineNumber": 392, "col_offset": 33, "nodeName": "k", "type": "Any"}, {"lineNumber": 393, "col_offset": 33, "nodeName": "k", "type": "Any"}, {"lineNumber": 469, "col_offset": 24, "nodeName": "logging", "type": "module"}, {"lineNumber": 469, "col_offset": 70, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 469, "col_offset": 74, "nodeName": "e", "type": "RuntimeError"}, {"lineNumber": 490, "col_offset": 24, "nodeName": "logging", "type": "module"}, {"lineNumber": 490, "col_offset": 70, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 490, "col_offset": 74, "nodeName": "e", "type": "RuntimeError"}, {"lineNumber": 315, "col_offset": 62, "nodeName": "random", "type": "Any"}, {"lineNumber": 373, "col_offset": 38, "nodeName": "random", "type": "Any"}, {"lineNumber": 375, "col_offset": 30, "nodeName": "k", "type": "Any"}, {"lineNumber": 377, "col_offset": 28, "nodeName": "k", "type": "Any"}, {"lineNumber": 380, "col_offset": 25, "nodeName": "item", "type": "Tuple[int, int]"}, {"lineNumber": 380, "col_offset": 36, "nodeName": "item", "type": "Tuple[int, int]"}, {"lineNumber": 381, "col_offset": 32, "nodeName": "mir", "type": "Tuple[int, int]"}, {"lineNumber": 381, "col_offset": 52, "nodeName": "mir", "type": "Tuple[int, int]"}, {"lineNumber": 382, "col_offset": 32, "nodeName": "mir", "type": "Tuple[int, int]"}, {"lineNumber": 382, "col_offset": 52, "nodeName": "mir", "type": "Tuple[int, int]"}, {"lineNumber": 391, "col_offset": 66, "nodeName": "k", "type": "Any"}, {"lineNumber": 391, "col_offset": 93, "nodeName": "k", "type": "Any"}, {"lineNumber": 393, "col_offset": 35, "nodeName": "ind", "type": "Any"}, {"lineNumber": 393, "col_offset": 42, "nodeName": "ind", "type": "Any"}, {"lineNumber": 315, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 373, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 375, "col_offset": 57, "nodeName": "k", "type": "Any"}, {"lineNumber": 377, "col_offset": 57, "nodeName": "k", "type": "Any"}]