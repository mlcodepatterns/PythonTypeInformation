[{"lineNumber": 199, "col_offset": 0, "nodeName": "create_new_model_expandedspectral", "type": "Callable[..., Any]"}, {"lineNumber": 217, "col_offset": 0, "nodeName": "create_new_model_spectralOnTarget", "type": "Callable[..., Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "fastParams", "type": "Dict[Any, Any]"}, {"lineNumber": 17, "col_offset": 13, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "Info", "type": "Dict[str, Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "step", "type": "int"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "Kfresh", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "K", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "K", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "Prior", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "Lik", "type": "Any"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "Lik", "type": "Any"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "DocWordFreq_model", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "DocWordFreq_model", "type": "Any"}, {"lineNumber": 172, "col_offset": 4, "nodeName": "DocWordFreq_emp", "type": "Any"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "DocWordFreq_emp", "type": "Any"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "DocWordFreq_missing", "type": "Any"}, {"lineNumber": 190, "col_offset": 4, "nodeName": "WordFreq_ctrs", "type": "Any"}, {"lineNumber": 196, "col_offset": 11, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "K", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "K", "type": "Any"}, {"lineNumber": 202, "col_offset": 4, "nodeName": "topics", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "k", "type": "int"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "Kfresh", "type": "Any"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "bestRows", "type": "Any"}, {"lineNumber": 209, "col_offset": 4, "nodeName": "newTopics", "type": "Any"}, {"lineNumber": 214, "col_offset": 11, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "K", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "K", "type": "Any"}, {"lineNumber": 220, "col_offset": 4, "nodeName": "topics", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "k", "type": "int"}, {"lineNumber": 225, "col_offset": 4, "nodeName": "Kfresh", "type": "Any"}, {"lineNumber": 226, "col_offset": 4, "nodeName": "Q", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "bestRows", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "newTopics", "type": "Any"}, {"lineNumber": 233, "col_offset": 11, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "copy", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "logPhase", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "log", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "log", "type": "Any"}, {"lineNumber": 75, "col_offset": 7, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "freshLP", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "prevN", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "logPosVector", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "N", "type": "Any"}, {"lineNumber": 94, "col_offset": 7, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 97, "col_offset": 7, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "Kbefore", "type": "Any"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "K", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "freshLP", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 108, "col_offset": 7, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "ELBO", "type": "Any"}, {"lineNumber": 143, "col_offset": 7, "nodeName": "K", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "msg", "type": "str"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "Info", "type": "Any"}, {"lineNumber": 160, "col_offset": 13, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "obsModel", "type": "Any"}, {"lineNumber": 163, "col_offset": 7, "nodeName": "LP", "type": "None"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "LP", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "exp", "type": "Any"}, {"lineNumber": 166, "col_offset": 10, "nodeName": "getElogphiMatrix", "type": "Any"}, {"lineNumber": 167, "col_offset": 10, "nodeName": "exp", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "dot", "type": "Any"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "Prior", "type": "Any"}, {"lineNumber": 169, "col_offset": 38, "nodeName": "Lik", "type": "Any"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "DocWordFreq_emp", "type": "Any"}, {"lineNumber": 175, "col_offset": 44, "nodeName": "DocWordFreq_model", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "DocWordFreq_missing", "type": "Any"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "RunKMeans", "type": "Any"}, {"lineNumber": 180, "col_offset": 43, "nodeName": "DocWordFreq_missing", "type": "Any"}, {"lineNumber": 180, "col_offset": 64, "nodeName": "Kfresh", "type": "Any"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "Nk", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "binedges", "type": "Any"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "histogram", "type": "Any"}, {"lineNumber": 185, "col_offset": 7, "nodeName": "any", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "WordFreq_ctrs", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "Kfresh", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 189, "col_offset": 21, "nodeName": "WordFreq_ctrs", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "set_global_params", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "obsModel", "type": "Any"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 203, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "K", "type": "Any"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "lamvec", "type": "Any"}, {"lineNumber": 207, "col_offset": 13, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "FindAnchorsForExpandedBasis", "type": "Any"}, {"lineNumber": 208, "col_offset": 47, "nodeName": "Q", "type": "Any"}, {"lineNumber": 208, "col_offset": 50, "nodeName": "topics", "type": "Any"}, {"lineNumber": 208, "col_offset": 58, "nodeName": "Kfresh", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "set_global_params", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "obsModel", "type": "Any"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 221, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "K", "type": "Any"}, {"lineNumber": 222, "col_offset": 23, "nodeName": "lamvec", "type": "Any"}, {"lineNumber": 225, "col_offset": 13, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "toarray", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "FindAnchorsForExpandedBasis", "type": "Any"}, {"lineNumber": 227, "col_offset": 47, "nodeName": "Q", "type": "Any"}, {"lineNumber": 227, "col_offset": 50, "nodeName": "topics", "type": "Any"}, {"lineNumber": 227, "col_offset": 58, "nodeName": "Kfresh", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "set_global_params", "type": "Any"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "bigModel", "type": "Any"}, {"lineNumber": 34, "col_offset": 7, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "set_global_params", "type": "Any"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "K", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "setAllFieldsToZero", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "topics", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "WordCounts", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "priorvec", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "lamvec", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "k", "type": "int"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "Info", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "Info", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "copy", "type": "Any"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "calc_local_params", "type": "Any"}, {"lineNumber": 80, "col_offset": 47, "nodeName": "freshData", "type": "Any"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "get_global_suff_stats", "type": "Any"}, {"lineNumber": 81, "col_offset": 51, "nodeName": "freshData", "type": "Any"}, {"lineNumber": 81, "col_offset": 62, "nodeName": "freshLP", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "update_global_params", "type": "Any"}, {"lineNumber": 82, "col_offset": 40, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "step", "type": "int"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "maxDiff", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "copy", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "Info", "type": "Dict[str, Any]"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "copy", "type": "Any"}, {"lineNumber": 98, "col_offset": 18, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "delete_empty_comps", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "freshData", "type": "Any"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "calc_local_params", "type": "Any"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "freshData", "type": "Any"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "get_global_suff_stats", "type": "Any"}, {"lineNumber": 102, "col_offset": 51, "nodeName": "freshData", "type": "Any"}, {"lineNumber": 102, "col_offset": 62, "nodeName": "freshLP", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "update_global_params", "type": "Any"}, {"lineNumber": 103, "col_offset": 40, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "K", "type": "Any"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "Kbefore", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "delete_comps_to_improve_ELBO", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "freshData", "type": "Any"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "Info", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 115, "col_offset": 9, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "Korig", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "K", "type": "Any"}, {"lineNumber": 143, "col_offset": 7, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "BirthProposalError", "type": "Any"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "msg", "type": "str"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "bigModel", "type": "Any"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "calc_local_params", "type": "Any"}, {"lineNumber": 164, "col_offset": 40, "nodeName": "freshData", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "LP", "type": "Any"}, {"lineNumber": 166, "col_offset": 10, "nodeName": "obsModel", "type": "Any"}, {"lineNumber": 167, "col_offset": 10, "nodeName": "np", "type": "module"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "Lik", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 176, "col_offset": 43, "nodeName": "DocWordFreq_missing", "type": "Any"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "KMeansRex", "type": "Any"}, {"lineNumber": 182, "col_offset": 58, "nodeName": "seed", "type": "int"}, {"lineNumber": 183, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 32, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 183, "col_offset": 43, "nodeName": "Z", "type": "Any"}, {"lineNumber": 183, "col_offset": 47, "nodeName": "arange", "type": "Any"}, {"lineNumber": 183, "col_offset": 63, "nodeName": "Kfresh", "type": "Any"}, {"lineNumber": 185, "col_offset": 7, "nodeName": "np", "type": "module"}, {"lineNumber": 185, "col_offset": 14, "nodeName": "Nk", "type": "Any"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "MIN_CLUSTER_SIZE", "type": "int"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "WordFreq_ctrs", "type": "Any"}, {"lineNumber": 187, "col_offset": 17, "nodeName": "shape", "type": "Any"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 189, "col_offset": 40, "nodeName": "WordFreq_ctrs", "type": "Any"}, {"lineNumber": 190, "col_offset": 21, "nodeName": "sum", "type": "Any"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 192, "col_offset": 66, "nodeName": "Kfresh", "type": "Any"}, {"lineNumber": 193, "col_offset": 40, "nodeName": "WordFreq_ctrs", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "bigModel", "type": "Any"}, {"lineNumber": 202, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 202, "col_offset": 23, "nodeName": "K", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "topics", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "topics", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "GSU", "type": "Any"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "Q", "type": "Any"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 210, "col_offset": 66, "nodeName": "Kfresh", "type": "Any"}, {"lineNumber": 211, "col_offset": 40, "nodeName": "newTopics", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "bigModel", "type": "Any"}, {"lineNumber": 220, "col_offset": 13, "nodeName": "np", "type": "module"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "K", "type": "Any"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "topics", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "topics", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "GSU", "type": "Any"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "Q", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 229, "col_offset": 66, "nodeName": "Kfresh", "type": "Any"}, {"lineNumber": 230, "col_offset": 40, "nodeName": "newTopics", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 41, "col_offset": 9, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "create_new_model_findmissingtopics", "type": "Callable[..., Any]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "freshData", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "bigModel", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "obsModel", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "_Fields", "type": "Any"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "obsPrior", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "K", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "setField", "type": "Any"}, {"lineNumber": 71, "col_offset": 43, "nodeName": "topics", "type": "Any"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 80, "col_offset": 60, "nodeName": "fastParams", "type": "Dict[Any, Any]"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "step", "type": "int"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "logPosVector", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "N", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "max", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "maxDiff", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "N", "type": "Any"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "BirthCleanup", "type": "Any"}, {"lineNumber": 100, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 101, "col_offset": 18, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 104, "col_offset": 11, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "logPosVector", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "N", "type": "Any"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "BirthCleanup", "type": "Any"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "freshLP", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "Info", "type": "Dict[str, Any]"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "copy", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "K", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "freshLP", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "freshELBO", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "K", "type": "Any"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "Korig", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "msg", "type": "str"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "bigModel", "type": "Any"}, {"lineNumber": 166, "col_offset": 10, "nodeName": "bigModel", "type": "Any"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "DocWordFreq_model", "type": "Any"}, {"lineNumber": 170, "col_offset": 58, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "to_sparse_docword_matrix", "type": "Any"}, {"lineNumber": 173, "col_offset": 30, "nodeName": "sum", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "sum", "type": "Any"}, {"lineNumber": 183, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 183, "col_offset": 47, "nodeName": "np", "type": "module"}, {"lineNumber": 187, "col_offset": 17, "nodeName": "WordFreq_ctrs", "type": "Any"}, {"lineNumber": 190, "col_offset": 21, "nodeName": "WordFreq_ctrs", "type": "Any"}, {"lineNumber": 190, "col_offset": 50, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 192, "col_offset": 56, "nodeName": "Kfresh", "type": "Any"}, {"lineNumber": 194, "col_offset": 48, "nodeName": "sum", "type": "Any"}, {"lineNumber": 202, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "comp", "type": "Any"}, {"lineNumber": 205, "col_offset": 23, "nodeName": "topics", "type": "Any"}, {"lineNumber": 205, "col_offset": 38, "nodeName": "sum", "type": "Any"}, {"lineNumber": 209, "col_offset": 18, "nodeName": "bestRows", "type": "Any"}, {"lineNumber": 209, "col_offset": 30, "nodeName": "sum", "type": "Any"}, {"lineNumber": 210, "col_offset": 56, "nodeName": "Kfresh", "type": "Any"}, {"lineNumber": 212, "col_offset": 48, "nodeName": "sum", "type": "Any"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "freshData", "type": "Any"}, {"lineNumber": 222, "col_offset": 23, "nodeName": "comp", "type": "Any"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "topics", "type": "Any"}, {"lineNumber": 223, "col_offset": 38, "nodeName": "sum", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "to_sparse_docword_matrix", "type": "Any"}, {"lineNumber": 228, "col_offset": 18, "nodeName": "bestRows", "type": "Any"}, {"lineNumber": 228, "col_offset": 30, "nodeName": "sum", "type": "Any"}, {"lineNumber": 229, "col_offset": 56, "nodeName": "Kfresh", "type": "Any"}, {"lineNumber": 231, "col_offset": 48, "nodeName": "sum", "type": "Any"}, {"lineNumber": 35, "col_offset": 42, "nodeName": "ones", "type": "Any"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 45, "col_offset": 9, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "Q", "type": "Any"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "create_new_model_expandedspectral", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "Q", "type": "Any"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "freshData", "type": "Any"}, {"lineNumber": 48, "col_offset": 38, "nodeName": "bigModel", "type": "Any"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "obsModel", "type": "Any"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "topics", "type": "Any"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "lamvec", "type": "Any"}, {"lineNumber": 70, "col_offset": 68, "nodeName": "priorvec", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "abs", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 105, "col_offset": 54, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 106, "col_offset": 42, "nodeName": "msg", "type": "str"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 117, "col_offset": 14, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "preselect_candidate_pairs", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "calc_local_params", "type": "Any"}, {"lineNumber": 124, "col_offset": 51, "nodeName": "freshData", "type": "Any"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "get_global_suff_stats", "type": "Any"}, {"lineNumber": 125, "col_offset": 55, "nodeName": "freshData", "type": "Any"}, {"lineNumber": 125, "col_offset": 66, "nodeName": "freshLP", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "update_global_params", "type": "Any"}, {"lineNumber": 129, "col_offset": 44, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "calc_evidence", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "run_many_merge_moves", "type": "Any"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 133, "col_offset": 41, "nodeName": "freshELBO", "type": "Any"}, {"lineNumber": 134, "col_offset": 20, "nodeName": "mPairIDs", "type": "Any"}, {"lineNumber": 139, "col_offset": 11, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "logPosVector", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "N", "type": "Any"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "max", "type": "Any"}, {"lineNumber": 170, "col_offset": 58, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "freshData", "type": "Any"}, {"lineNumber": 173, "col_offset": 30, "nodeName": "DocWordFreq_emp", "type": "Any"}, {"lineNumber": 173, "col_offset": 61, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "DocWordFreq_missing", "type": "Any"}, {"lineNumber": 178, "col_offset": 43, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 186, "col_offset": 38, "nodeName": "Nk", "type": "Any"}, {"lineNumber": 186, "col_offset": 44, "nodeName": "MIN_CLUSTER_SIZE", "type": "int"}, {"lineNumber": 190, "col_offset": 50, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 192, "col_offset": 46, "nodeName": "Kfresh", "type": "Any"}, {"lineNumber": 194, "col_offset": 48, "nodeName": "word_count", "type": "Any"}, {"lineNumber": 202, "col_offset": 26, "nodeName": "Q", "type": "Any"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "k", "type": "int"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "obsModel", "type": "Any"}, {"lineNumber": 204, "col_offset": 46, "nodeName": "k", "type": "int"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "k", "type": "int"}, {"lineNumber": 209, "col_offset": 57, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 210, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 210, "col_offset": 46, "nodeName": "Kfresh", "type": "Any"}, {"lineNumber": 212, "col_offset": 48, "nodeName": "word_count", "type": "Any"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "k", "type": "int"}, {"lineNumber": 222, "col_offset": 23, "nodeName": "obsModel", "type": "Any"}, {"lineNumber": 222, "col_offset": 46, "nodeName": "k", "type": "int"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "k", "type": "int"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "freshData", "type": "Any"}, {"lineNumber": 228, "col_offset": 57, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 229, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 229, "col_offset": 46, "nodeName": "Kfresh", "type": "Any"}, {"lineNumber": 231, "col_offset": 48, "nodeName": "word_count", "type": "Any"}, {"lineNumber": 35, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 36, "col_offset": 44, "nodeName": "Plan", "type": "Any"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "word_count", "type": "Any"}, {"lineNumber": 48, "col_offset": 50, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "create_new_model_spectralOnTarget", "type": "Callable[..., Any]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "freshData", "type": "Any"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "bigModel", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "init_global_params", "type": "Any"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "freshData", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "step", "type": "int"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "N", "type": "Any"}, {"lineNumber": 88, "col_offset": 48, "nodeName": "prevN", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "MergePlanner", "type": "Any"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 124, "col_offset": 22, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 128, "col_offset": 64, "nodeName": "mPairIDs", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 130, "col_offset": 52, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "MergeMove", "type": "Any"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "MM", "type": "Any"}, {"lineNumber": 136, "col_offset": 28, "nodeName": "log", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 141, "col_offset": 42, "nodeName": "msg", "type": "str"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "Lik", "type": "Any"}, {"lineNumber": 167, "col_offset": 42, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 173, "col_offset": 61, "nodeName": "np", "type": "module"}, {"lineNumber": 178, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 192, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 194, "col_offset": 48, "nodeName": "freshData", "type": "Any"}, {"lineNumber": 204, "col_offset": 23, "nodeName": "bigModel", "type": "Any"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "k", "type": "int"}, {"lineNumber": 205, "col_offset": 38, "nodeName": "topics", "type": "Any"}, {"lineNumber": 209, "col_offset": 30, "nodeName": "Q", "type": "Any"}, {"lineNumber": 209, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 210, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 212, "col_offset": 48, "nodeName": "freshData", "type": "Any"}, {"lineNumber": 222, "col_offset": 23, "nodeName": "bigModel", "type": "Any"}, {"lineNumber": 223, "col_offset": 30, "nodeName": "k", "type": "int"}, {"lineNumber": 223, "col_offset": 38, "nodeName": "topics", "type": "Any"}, {"lineNumber": 228, "col_offset": 30, "nodeName": "Q", "type": "Any"}, {"lineNumber": 228, "col_offset": 57, "nodeName": "np", "type": "module"}, {"lineNumber": 229, "col_offset": 38, "nodeName": "np", "type": "module"}, {"lineNumber": 231, "col_offset": 48, "nodeName": "freshData", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "freshData", "type": "Any"}, {"lineNumber": 51, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "freshModel", "type": "Any"}, {"lineNumber": 56, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "k", "type": "int"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "comp", "type": "Any"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "step", "type": "int"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "freshSS", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "Info", "type": "Any"}, {"lineNumber": 167, "col_offset": 42, "nodeName": "np", "type": "module"}, {"lineNumber": 209, "col_offset": 32, "nodeName": "bestRows", "type": "Any"}, {"lineNumber": 228, "col_offset": 32, "nodeName": "bestRows", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 55, "col_offset": 47, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "obsModel", "type": "Any"}, {"lineNumber": 70, "col_offset": 56, "nodeName": "k", "type": "int"}, {"lineNumber": 205, "col_offset": 45, "nodeName": "k", "type": "int"}, {"lineNumber": 223, "col_offset": 45, "nodeName": "k", "type": "int"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "freshModel", "type": "Any"}]