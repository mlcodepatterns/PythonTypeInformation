[{"lineNumber": 162, "col_offset": 0, "nodeName": "calcAllocELBO", "type": "Callable[..., Any]"}, {"lineNumber": 8, "col_offset": 11, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "shortDescription", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "test_suff_stats_represent_same_whole_dataset", "type": "Callable[[Any], Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "test_ELBO_gap", "type": "Callable[[Any], Any]"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "calc_ELBO_gap", "type": "Callable[[Any], Any]"}, {"lineNumber": 134, "col_offset": 4, "nodeName": "calc_ELBO", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 147, "col_offset": 4, "nodeName": "runTest", "type": "Callable[[Any], Any]"}, {"lineNumber": 8, "col_offset": 11, "nodeName": "unittest", "type": "module"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "unittest", "type": "module"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "N", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "SS", "type": "bnpy.suffstats.SuffStatBag.SuffStatBag"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "model", "type": "bnpy.allocmodel.mix.DPMixtureModel.DPMixtureModel"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "L", "type": "Any"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "L", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "K", "type": "Any"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "K", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "D", "type": "Any"}, {"lineNumber": 29, "col_offset": 17, "nodeName": "D", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "N", "type": "Any"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "N", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "sF", "type": "Any"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "sF", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "Reps", "type": "Any"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "Reps", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "obsModelName", "type": "Any"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "obsModelName", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "xval", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "xval", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "K", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "K", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "N", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "N", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "D", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "D", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "PRNG", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "Data", "type": "bnpy.data.XData.XData"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "Data", "type": "bnpy.data.XData.XData"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "Data", "type": "bnpy.data.XData.XData"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "PriorSpec", "type": "Dict[Any, Any]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "afterModel", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "after2Model", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "resp", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "resp", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "Reps", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "resp", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "beforeLP", "type": "Dict[Any, Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "beforeSS", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "kmax", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "respNew", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "afterLP", "type": "Dict[Any, Any]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "afterSS", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "resp2", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "after2LP", "type": "Dict[Any, Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "after2SS", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "beforeSS", "type": "Any"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "beforeSS", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "beforeModel", "type": "Any"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "beforeModel", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "afterSS", "type": "Any"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "afterSS", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "afterModel", "type": "Any"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "afterModel", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "after2SS", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "after2SS", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "after2Model", "type": "Any"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "after2Model", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "beforeELBOalloc", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "afterELBOalloc", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "respNew", "type": "Any"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "respNew", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "beforeELBO", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "afterELBO", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "after2ELBO", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "beforeELBO", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "afterELBO", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "beforeELBO", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "beforeELBO", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "obsModelName", "type": "str"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "sum", "type": "Any"}, {"lineNumber": 164, "col_offset": 9, "nodeName": "SuffStatBag", "type": "Type[bnpy.suffstats.SuffStatBag.SuffStatBag]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "setField", "type": "Callable[..., None]"}, {"lineNumber": 165, "col_offset": 21, "nodeName": "N", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "DPMixtureModel", "type": "Type[bnpy.allocmodel.mix.DPMixtureModel.DPMixtureModel]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "update_global_params", "type": "Any"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "SS", "type": "bnpy.suffstats.SuffStatBag.SuffStatBag"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "calc_evidence", "type": "Callable[..., Any]"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "Data", "type": "bnpy.data.XData.XData"}, {"lineNumber": 170, "col_offset": 34, "nodeName": "SS", "type": "bnpy.suffstats.SuffStatBag.SuffStatBag"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 27, "col_offset": 41, "nodeName": "testname", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "seed", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "seed", "type": "int"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "seed", "type": "int"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "self", "type": "Test"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "Test"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "Test"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "seed", "type": "int"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "XData", "type": "Type[bnpy.data.XData.XData]"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "xval", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "beforeModel", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "beforeModel", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "resp", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "resp", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "resp", "type": "Any"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "Reps", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "resp", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "self", "type": "Test"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "get_global_suff_stats", "type": "Any"}, {"lineNumber": 73, "col_offset": 53, "nodeName": "Data", "type": "bnpy.data.XData.XData"}, {"lineNumber": 73, "col_offset": 65, "nodeName": "beforeLP", "type": "Dict[Any, Any]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "update_global_params", "type": "Any"}, {"lineNumber": 74, "col_offset": 41, "nodeName": "beforeSS", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "delete", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "resp", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "respNew", "type": "Any"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "resp", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "get_global_suff_stats", "type": "Any"}, {"lineNumber": 84, "col_offset": 51, "nodeName": "Data", "type": "bnpy.data.XData.XData"}, {"lineNumber": 84, "col_offset": 63, "nodeName": "afterLP", "type": "Dict[Any, Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "update_global_params", "type": "Any"}, {"lineNumber": 85, "col_offset": 40, "nodeName": "afterSS", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "copy", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "resp2", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "resp2", "type": "Any"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "resp", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 94, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "get_global_suff_stats", "type": "Any"}, {"lineNumber": 95, "col_offset": 53, "nodeName": "Data", "type": "bnpy.data.XData.XData"}, {"lineNumber": 95, "col_offset": 65, "nodeName": "after2LP", "type": "Dict[Any, Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "update_global_params", "type": "Any"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "after2SS", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 105, "col_offset": 31, "nodeName": "calcAllocELBO", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "Data", "type": "bnpy.data.XData.XData"}, {"lineNumber": 105, "col_offset": 51, "nodeName": "resp", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 106, "col_offset": 30, "nodeName": "calcAllocELBO", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 44, "nodeName": "Data", "type": "bnpy.data.XData.XData"}, {"lineNumber": 106, "col_offset": 50, "nodeName": "respNew", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "Test"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "calcELBO_Memoized", "type": "Any"}, {"lineNumber": 119, "col_offset": 56, "nodeName": "beforeSS", "type": "Any"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "calcELBO_Memoized", "type": "Any"}, {"lineNumber": 120, "col_offset": 54, "nodeName": "afterSS", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "afterELBO", "type": "Any"}, {"lineNumber": 123, "col_offset": 28, "nodeName": "beforeELBO", "type": "Any"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "calcELBO_Memoized", "type": "Any"}, {"lineNumber": 125, "col_offset": 56, "nodeName": "after2SS", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "afterELBO", "type": "Any"}, {"lineNumber": 127, "col_offset": 38, "nodeName": "after2ELBO", "type": "Any"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "calcELBO_Memoized", "type": "Any"}, {"lineNumber": 130, "col_offset": 56, "nodeName": "beforeSS", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "calcELBO_Memoized", "type": "Any"}, {"lineNumber": 131, "col_offset": 54, "nodeName": "afterSS", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "afterELBO", "type": "Any"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "beforeELBO", "type": "Any"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "calcELBO_Memoized", "type": "Any"}, {"lineNumber": 135, "col_offset": 56, "nodeName": "beforeSS", "type": "Any"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "K", "type": "int"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "resp", "type": "Any"}, {"lineNumber": 164, "col_offset": 9, "nodeName": "suffstats", "type": "module"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "SS", "type": "bnpy.suffstats.SuffStatBag.SuffStatBag"}, {"lineNumber": 168, "col_offset": 33, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "model", "type": "bnpy.allocmodel.mix.DPMixtureModel.DPMixtureModel"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "model", "type": "bnpy.allocmodel.mix.DPMixtureModel.DPMixtureModel"}, {"lineNumber": 170, "col_offset": 38, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "self", "type": "Test"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "self", "type": "Test"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "seed", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "self", "type": "Test"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "data", "type": "module"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "randn", "type": "Any"}, {"lineNumber": 47, "col_offset": 42, "nodeName": "N", "type": "Any"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "D", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "D", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "xval", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "self", "type": "Test"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "X", "type": "Any"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "sF", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "ObsModelConstructorsByName", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 24, "nodeName": "D", "type": "Any"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "PriorSpec", "type": "Dict[Any, Any]"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "copy", "type": "module"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "copy", "type": "module"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "self", "type": "Test"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "sum", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "resp", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "beforeModel", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "beforeModel", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "K", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "respNew", "type": "Any"}, {"lineNumber": 84, "col_offset": 18, "nodeName": "afterModel", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "afterModel", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "resp", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "resp2", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "after2Model", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "after2Model", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "beforeModel", "type": "Any"}, {"lineNumber": 119, "col_offset": 56, "nodeName": "self", "type": "Test"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "afterModel", "type": "Any"}, {"lineNumber": 120, "col_offset": 54, "nodeName": "self", "type": "Test"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "beforeELBO", "type": "Any"}, {"lineNumber": 122, "col_offset": 39, "nodeName": "afterELBO", "type": "Any"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "after2Model", "type": "Any"}, {"lineNumber": 125, "col_offset": 56, "nodeName": "self", "type": "Test"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "beforeModel", "type": "Any"}, {"lineNumber": 130, "col_offset": 56, "nodeName": "self", "type": "Test"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "afterModel", "type": "Any"}, {"lineNumber": 131, "col_offset": 54, "nodeName": "self", "type": "Test"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "beforeModel", "type": "Any"}, {"lineNumber": 135, "col_offset": 56, "nodeName": "self", "type": "Test"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "N", "type": "int"}, {"lineNumber": 164, "col_offset": 9, "nodeName": "bnpy", "type": "module"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "shape", "type": "Any"}, {"lineNumber": 168, "col_offset": 45, "nodeName": "gamma0", "type": "int"}, {"lineNumber": 170, "col_offset": 48, "nodeName": "resp", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "self", "type": "Test"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "K", "type": "Any"}, {"lineNumber": 35, "col_offset": 32, "nodeName": "D", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "bnpy", "type": "module"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "PRNG", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "self", "type": "Test"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "Data", "type": "bnpy.data.XData.XData"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "Data", "type": "bnpy.data.XData.XData"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "self", "type": "Test"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "obsmodel", "type": "module"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "obsModelName", "type": "Any"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "K", "type": "Any"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "rand", "type": "Any"}, {"lineNumber": 65, "col_offset": 47, "nodeName": "N", "type": "Any"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "K", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "resp", "type": "Any"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "resp", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "resp", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "kmax", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "respNew", "type": "Any"}, {"lineNumber": 92, "col_offset": 17, "nodeName": "kmax", "type": "Any"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "resp2", "type": "Any"}, {"lineNumber": 109, "col_offset": 40, "nodeName": "K", "type": "Any"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "D", "type": "Any"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "N", "type": "Any"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "obsModelName", "type": "Any"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "N", "type": "Any"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "N", "type": "Any"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "xxT", "type": "Any"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "xxT", "type": "Any"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "self", "type": "Test"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "self", "type": "Test"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "self", "type": "Test"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "self", "type": "Test"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "self", "type": "Test"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "self", "type": "Test"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "D", "type": "int"}, {"lineNumber": 164, "col_offset": 38, "nodeName": "resp", "type": "Any"}, {"lineNumber": 27, "col_offset": 14, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "self", "type": "Test"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "bnpy", "type": "module"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "self", "type": "Test"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "PRNG", "type": "Any"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "self", "type": "Test"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "beforeSS", "type": "Any"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "afterSS", "type": "Any"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "beforeSS", "type": "Any"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "afterSS", "type": "Any"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "seed", "type": "int"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "self", "type": "Test"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "self", "type": "Test"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "self", "type": "Test"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "self", "type": "Test"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "curTest", "type": "Test"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 156, "col_offset": 38, "nodeName": "Test", "type": "Type[Test]"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "run", "type": "Callable[..., None]"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "tearDown", "type": "Callable[[], None]"}, {"lineNumber": 153, "col_offset": 55, "nodeName": "obsModelName", "type": "str"}, {"lineNumber": 154, "col_offset": 47, "nodeName": "seed", "type": "int"}, {"lineNumber": 155, "col_offset": 44, "nodeName": "K", "type": "int"}, {"lineNumber": 155, "col_offset": 49, "nodeName": "N", "type": "int"}, {"lineNumber": 155, "col_offset": 54, "nodeName": "D", "type": "int"}, {"lineNumber": 156, "col_offset": 62, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 157, "col_offset": 28, "nodeName": "curTest", "type": "Test"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "curTest", "type": "Test"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "curTest", "type": "Test"}]