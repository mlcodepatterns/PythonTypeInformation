[{"lineNumber": 45, "col_offset": 0, "nodeName": "sample_data_from_comp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "make_X", "type": "Callable[..., Any]"}, {"lineNumber": 64, "col_offset": 0, "nodeName": "plot_true_clusters", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "K", "type": "int"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "D", "type": "int"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "w", "type": "Any"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "Rad", "type": "float"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "ts", "type": "Any"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "ts", "type": "Any"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "Mu", "type": "Any"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "V", "type": "float"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "SigmaBase", "type": "numpy.ndarray"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "Sigma", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "k", "type": "int"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "cholSigma", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "k", "type": "int"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 24, "col_offset": 5, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 25, "col_offset": 5, "nodeName": "ts", "type": "Any"}, {"lineNumber": 26, "col_offset": 5, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "Mu", "type": "Any"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "cos", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "ts", "type": "Any"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "Mu", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "sin", "type": "Any"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "ts", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "K", "type": "int"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 41, "col_offset": 9, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "K", "type": "int"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "PRNG", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "trueList", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "Npercomp", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "X", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "k", "type": "int"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "TrueZ", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "permIDs", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "TrueZ", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "k", "type": "int"}, {"lineNumber": 72, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "x_names", "type": "List[str]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "z_names", "type": "str"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "sum", "type": "Any"}, {"lineNumber": 24, "col_offset": 5, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "pi", "type": "Any"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "K", "type": "int"}, {"lineNumber": 26, "col_offset": 5, "nodeName": "np", "type": "module"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "K", "type": "int"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "D", "type": "int"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "K", "type": "int"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "D", "type": "int"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "D", "type": "int"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "Sigma", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "rotateCovMat", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "SigmaBase", "type": "numpy.ndarray"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "Sigma", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "cholSigma", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "cholesky", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "T", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "RandomState", "type": "Any"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "seed", "type": "int"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "multinomial", "type": "Any"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "nObsTotal", "type": "int"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "w", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "K", "type": "int"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "vstack", "type": "Any"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "X", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "trueList", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "permutation", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "X", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "TrueZ", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "X", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "TrueZ", "type": "Any"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "K", "type": "int"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "c", "type": "int"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 73, "col_offset": 7, "nodeName": "TrueZ", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "make_X", "type": "Callable[..., Any]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "savez", "type": "Any"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "savemat", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "to_csv", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "w", "type": "numpy.ndarray"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "V", "type": "float"}, {"lineNumber": 37, "col_offset": 10, "nodeName": "k", "type": "int"}, {"lineNumber": 42, "col_offset": 14, "nodeName": "k", "type": "int"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "linalg", "type": "Any"}, {"lineNumber": 42, "col_offset": 41, "nodeName": "Sigma", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "Mu", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "random", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "PRNG", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 59, "col_offset": 14, "nodeName": "PRNG", "type": "Any"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 60, "col_offset": 10, "nodeName": "permIDs", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "permIDs", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "plotGauss2DContour", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "io", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "s", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "s", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "pd", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "x_df", "type": "Any"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "V", "type": "float"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "k", "type": "int"}, {"lineNumber": 37, "col_offset": 43, "nodeName": "pi", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "k", "type": "int"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "dot", "type": "Any"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "T", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "X", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "sample_data_from_comp", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "k", "type": "int"}, {"lineNumber": 55, "col_offset": 55, "nodeName": "PRNG", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "trueList", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 24, "nodeName": "k", "type": "int"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "X", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "Colors", "type": "List[Tuple[Union[float, int], Union[float, int], Union[float, int]]]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "GaussViz", "type": "module"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "Mu", "type": "Any"}, {"lineNumber": 68, "col_offset": 43, "nodeName": "Sigma", "type": "Any"}, {"lineNumber": 75, "col_offset": 10, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "scipy", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "X", "type": "Any"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "TrueZ", "type": "Any"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "arange", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "X", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "hstack", "type": "Any"}, {"lineNumber": 37, "col_offset": 43, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "k", "type": "int"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 46, "col_offset": 45, "nodeName": "randn", "type": "Any"}, {"lineNumber": 46, "col_offset": 56, "nodeName": "D", "type": "int"}, {"lineNumber": 46, "col_offset": 59, "nodeName": "Nk", "type": "Any"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "Npercomp", "type": "Any"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "ones", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "GaussViz", "type": "module"}, {"lineNumber": 68, "col_offset": 39, "nodeName": "k", "type": "int"}, {"lineNumber": 68, "col_offset": 49, "nodeName": "k", "type": "int"}, {"lineNumber": 68, "col_offset": 59, "nodeName": "Colors", "type": "List[Tuple[Union[float, int], Union[float, int], Union[float, int]]]"}, {"lineNumber": 75, "col_offset": 17, "nodeName": "X", "type": "Any"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "TrueZ", "type": "Any"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "np", "type": "module"}, {"lineNumber": 78, "col_offset": 45, "nodeName": "shape", "type": "Any"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "TrueZ", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "x_names", "type": "List[str]"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "z_names", "type": "str"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "cholSigma", "type": "Any"}, {"lineNumber": 46, "col_offset": 45, "nodeName": "PRNG", "type": "Any"}, {"lineNumber": 55, "col_offset": 51, "nodeName": "k", "type": "int"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "Npercomp", "type": "Any"}, {"lineNumber": 68, "col_offset": 59, "nodeName": "GaussViz", "type": "module"}, {"lineNumber": 68, "col_offset": 75, "nodeName": "c", "type": "int"}, {"lineNumber": 78, "col_offset": 45, "nodeName": "X", "type": "Any"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "k", "type": "int"}, {"lineNumber": 56, "col_offset": 45, "nodeName": "k", "type": "int"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "newaxis", "type": "Any"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "np", "type": "module"}]