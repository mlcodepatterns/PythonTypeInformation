[{"lineNumber": 11, "col_offset": 0, "nodeName": "test_init_encoder", "type": "Callable[[], Any]"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "test_get_params_encoder", "type": "Callable[[], Any]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "test_set_params_encoder", "type": "Callable[[], Any]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "test_fit_encoder", "type": "Callable[[], Any]"}, {"lineNumber": 65, "col_offset": 0, "nodeName": "test_transform_encoder", "type": "Callable[[], Any]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "dict", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "_Categorical_encoder__fitOK", "type": "bool"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "_Categorical_encoder__fitOK", "type": "bool"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "_Categorical_encoder__fitOK", "type": "bool"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "df_encoded", "type": "Any"}, {"lineNumber": 12, "col_offset": 14, "nodeName": "Categorical_encoder", "type": "Type[mlbox.encoding.categorical_encoder.Categorical_encoder]"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 14, "col_offset": 16, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "_Categorical_encoder__Lcat", "type": "Any"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "_Categorical_encoder__Lnum", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "_Categorical_encoder__Enc", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "_Categorical_encoder__K", "type": "Dict[Any, Any]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "_Categorical_encoder__weights", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "_Categorical_encoder__fitOK", "type": "bool"}, {"lineNumber": 24, "col_offset": 14, "nodeName": "Categorical_encoder", "type": "Type[mlbox.encoding.categorical_encoder.Categorical_encoder]"}, {"lineNumber": 27, "col_offset": 35, "nodeName": "dict", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "Categorical_encoder", "type": "Type[mlbox.encoding.categorical_encoder.Categorical_encoder]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "record", "type": "Any"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 51, "col_offset": 14, "nodeName": "Categorical_encoder", "type": "Type[mlbox.encoding.categorical_encoder.Categorical_encoder]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "df", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "df", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "df", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "Categorical_encoder", "type": "Type[mlbox.encoding.categorical_encoder.Categorical_encoder]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "df", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "df", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "all", "type": "Any"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 14, "col_offset": 16, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 17, "col_offset": 48, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 18, "col_offset": 46, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "get_params", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 50, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 52, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "df", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "df", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "df", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "df", "type": "Any"}, {"lineNumber": 66, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 68, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "df", "type": "Any"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "df", "type": "Any"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 44, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 52, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "df", "type": "Any"}, {"lineNumber": 68, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "encoder", "type": "mlbox.encoding.categorical_encoder.Categorical_encoder"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "columns", "type": "Any"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "columns", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "df_encoded", "type": "Any"}]