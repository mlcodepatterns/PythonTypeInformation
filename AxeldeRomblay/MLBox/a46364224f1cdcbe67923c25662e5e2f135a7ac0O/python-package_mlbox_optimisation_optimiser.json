[{"lineNumber": 63, "col_offset": 8, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "ne", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "ce", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "stck", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "pp", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "start_time", "type": "float"}, {"lineNumber": 285, "col_offset": 11, "nodeName": "set_params", "type": "bool"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "out", "type": "str"}, {"lineNumber": 340, "col_offset": 11, "nodeName": "auc", "type": "bool"}, {"lineNumber": 343, "col_offset": 11, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 351, "col_offset": 15, "nodeName": "score", "type": "Any"}, {"lineNumber": 410, "col_offset": 8, "nodeName": "hyperopt_objective", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "k", "type": "str"}, {"lineNumber": 81, "col_offset": 14, "nodeName": "v", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "items", "type": "Callable"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "NA_encoder", "type": "Any"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "Categorical_encoder", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "counts", "type": "Any"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "classes_to_drop", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "indexes_to_drop", "type": "Any"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "cv", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "est", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "fs", "type": "None"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "auc", "type": "bool"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "fs", "type": "Any"}, {"lineNumber": 260, "col_offset": 20, "nodeName": "sort", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 264, "col_offset": 13, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 264, "col_offset": 22, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 271, "col_offset": 21, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 274, "col_offset": 11, "nodeName": "params", "type": "Any"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "set_params", "type": "bool"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 327, "col_offset": 11, "nodeName": "score", "type": "Any"}, {"lineNumber": 337, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 337, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 337, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "out", "type": "str"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "scoring", "type": "str"}, {"lineNumber": 343, "col_offset": 11, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 415, "col_offset": 11, "nodeName": "space", "type": "Any"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "k", "type": "str"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "value_counts", "type": "Any"}, {"lineNumber": 151, "col_offset": 17, "nodeName": "StratifiedKFold", "type": "Any"}, {"lineNumber": 154, "col_offset": 18, "nodeName": "Classifier", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "params", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "params", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "scoring", "type": "str"}, {"lineNumber": 201, "col_offset": 13, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "indexes_to_drop", "type": "List[nothing]"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "cv", "type": "Any"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "est", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "fs", "type": "None"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "auc", "type": "bool"}, {"lineNumber": 253, "col_offset": 22, "nodeName": "ne", "type": "Any"}, {"lineNumber": 253, "col_offset": 32, "nodeName": "ce", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 260, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 263, "col_offset": 27, "nodeName": "est", "type": "Any"}, {"lineNumber": 271, "col_offset": 21, "nodeName": "time", "type": "module"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "pp", "type": "Any"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "set_params", "type": "bool"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "scores", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "score", "type": "Any"}, {"lineNumber": 325, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 327, "col_offset": 19, "nodeName": "inf", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 337, "col_offset": 30, "nodeName": "scores", "type": "Any"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 417, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 427, "col_offset": 16, "nodeName": "hyper_space", "type": "Dict[Any, Any]"}, {"lineNumber": 429, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 450, "col_offset": 16, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 464, "col_offset": 19, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 474, "col_offset": 23, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "get_params", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "k", "type": "str"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "v", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "df", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "counts", "type": "Any"}, {"lineNumber": 151, "col_offset": 44, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 151, "col_offset": 84, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "auc", "type": "bool"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 206, "col_offset": 17, "nodeName": "KFold", "type": "Any"}, {"lineNumber": 209, "col_offset": 18, "nodeName": "Regressor", "type": "Any"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "params", "type": "Any"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "params", "type": "Any"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "scoring", "type": "str"}, {"lineNumber": 246, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 256, "col_offset": 30, "nodeName": "fs", "type": "Any"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 261, "col_offset": 25, "nodeName": "stck", "type": "Any"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "set_params", "type": "bool"}, {"lineNumber": 289, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 290, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 291, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 292, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 294, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 296, "col_offset": 19, "nodeName": "fs", "type": "Any"}, {"lineNumber": 300, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 300, "col_offset": 23, "nodeName": "stck", "type": "Any"}, {"lineNumber": 300, "col_offset": 31, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 302, "col_offset": 20, "nodeName": "stck_params", "type": "Any"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "stck_params_display", "type": "Dict[Any, Any]"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 318, "col_offset": 25, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 319, "col_offset": 24, "nodeName": "mean", "type": "Any"}, {"lineNumber": 319, "col_offset": 32, "nodeName": "scores", "type": "Any"}, {"lineNumber": 322, "col_offset": 16, "nodeName": "scores", "type": "List[Any]"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "score", "type": "Any"}, {"lineNumber": 327, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 416, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 421, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 421, "col_offset": 19, "nodeName": "space", "type": "Any"}, {"lineNumber": 422, "col_offset": 16, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 423, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 429, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 450, "col_offset": 30, "nodeName": "fmin", "type": "Any"}, {"lineNumber": 450, "col_offset": 35, "nodeName": "hyperopt_objective", "type": "Callable[[Any], Any]"}, {"lineNumber": 455, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 455, "col_offset": 22, "nodeName": "v", "type": "Any"}, {"lineNumber": 455, "col_offset": 27, "nodeName": "iteritems", "type": "Any"}, {"lineNumber": 464, "col_offset": 19, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 82, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "warnings", "type": "module"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "df", "type": "Any"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "df", "type": "Any"}, {"lineNumber": 151, "col_offset": 44, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 151, "col_offset": 84, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 159, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 161, "col_offset": 24, "nodeName": "fs", "type": "Any"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 182, "col_offset": 17, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "make_scorer", "type": "Any"}, {"lineNumber": 187, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 201, "col_offset": 13, "nodeName": "df", "type": "Any"}, {"lineNumber": 206, "col_offset": 34, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 206, "col_offset": 74, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 236, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 261, "col_offset": 30, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "pp", "type": "Any"}, {"lineNumber": 280, "col_offset": 37, "nodeName": "params", "type": "Any"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 298, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 300, "col_offset": 41, "nodeName": "sort", "type": "Any"}, {"lineNumber": 302, "col_offset": 34, "nodeName": "copy", "type": "Any"}, {"lineNumber": 303, "col_offset": 43, "nodeName": "k", "type": "Any"}, {"lineNumber": 305, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 306, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 307, "col_offset": 24, "nodeName": "j", "type": "int"}, {"lineNumber": 307, "col_offset": 27, "nodeName": "model", "type": "Any"}, {"lineNumber": 307, "col_offset": 36, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 318, "col_offset": 53, "nodeName": "pp", "type": "Any"}, {"lineNumber": 318, "col_offset": 146, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 318, "col_offset": 165, "nodeName": "cv", "type": "Any"}, {"lineNumber": 319, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "inf", "type": "Any"}, {"lineNumber": 338, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 338, "col_offset": 49, "nodeName": "s", "type": "Any"}, {"lineNumber": 345, "col_offset": 58, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 345, "col_offset": 62, "nodeName": "score", "type": "Any"}, {"lineNumber": 347, "col_offset": 58, "nodeName": "start_time", "type": "float"}, {"lineNumber": 422, "col_offset": 16, "nodeName": "warnings", "type": "module"}, {"lineNumber": 429, "col_offset": 25, "nodeName": "space", "type": "Any"}, {"lineNumber": 450, "col_offset": 61, "nodeName": "hyper_space", "type": "Dict[Any, Any]"}, {"lineNumber": 450, "col_offset": 79, "nodeName": "suggest", "type": "Any"}, {"lineNumber": 450, "col_offset": 102, "nodeName": "max_evals", "type": "Any"}, {"lineNumber": 455, "col_offset": 27, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 465, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 466, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 467, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 468, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 469, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 470, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 471, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 471, "col_offset": 26, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 148, "col_offset": 37, "nodeName": "counts", "type": "Any"}, {"lineNumber": 148, "col_offset": 44, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "apply", "type": "Any"}, {"lineNumber": 160, "col_offset": 23, "nodeName": "p", "type": "Any"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "Clf_feature_selector", "type": "Any"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "p", "type": "Any"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 170, "col_offset": 49, "nodeName": "StackingClassifier", "type": "Any"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 188, "col_offset": 23, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "scoring", "type": "str"}, {"lineNumber": 206, "col_offset": 34, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 206, "col_offset": 74, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 216, "col_offset": 24, "nodeName": "fs", "type": "Any"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 224, "col_offset": 23, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 236, "col_offset": 19, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 241, "col_offset": 24, "nodeName": "scoring", "type": "str"}, {"lineNumber": 261, "col_offset": 35, "nodeName": "stck", "type": "Any"}, {"lineNumber": 292, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 294, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 300, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 300, "col_offset": 49, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 303, "col_offset": 45, "nodeName": "stck_params", "type": "Any"}, {"lineNumber": 303, "col_offset": 64, "nodeName": "k", "type": "Any"}, {"lineNumber": 307, "col_offset": 46, "nodeName": "stck_params", "type": "Any"}, {"lineNumber": 308, "col_offset": 24, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 309, "col_offset": 24, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 312, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 318, "col_offset": 61, "nodeName": "drop", "type": "Any"}, {"lineNumber": 318, "col_offset": 78, "nodeName": "indexes_to_drop", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 318, "col_offset": 100, "nodeName": "drop", "type": "Any"}, {"lineNumber": 318, "col_offset": 118, "nodeName": "indexes_to_drop", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 318, "col_offset": 146, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 322, "col_offset": 27, "nodeName": "inf", "type": "Any"}, {"lineNumber": 322, "col_offset": 38, "nodeName": "fold", "type": "int"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 346, "col_offset": 79, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 347, "col_offset": 44, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 431, "col_offset": 38, "nodeName": "space", "type": "Any"}, {"lineNumber": 432, "col_offset": 30, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 450, "col_offset": 79, "nodeName": "tpe", "type": "Any"}, {"lineNumber": 456, "col_offset": 35, "nodeName": "space", "type": "Any"}, {"lineNumber": 462, "col_offset": 24, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 148, "col_offset": 44, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 188, "col_offset": 23, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "p", "type": "Any"}, {"lineNumber": 216, "col_offset": 29, "nodeName": "Reg_feature_selector", "type": "Any"}, {"lineNumber": 224, "col_offset": 23, "nodeName": "p", "type": "Any"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 225, "col_offset": 49, "nodeName": "StackingRegressor", "type": "Any"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 241, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 292, "col_offset": 45, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 294, "col_offset": 58, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 298, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 300, "col_offset": 49, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 302, "col_offset": 34, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 303, "col_offset": 57, "nodeName": "k", "type": "Any"}, {"lineNumber": 303, "col_offset": 69, "nodeName": "keys", "type": "Any"}, {"lineNumber": 303, "col_offset": 91, "nodeName": "k", "type": "Any"}, {"lineNumber": 306, "col_offset": 65, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 306, "col_offset": 69, "nodeName": "stck_params_display", "type": "Dict[Any, Any]"}, {"lineNumber": 312, "col_offset": 44, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 322, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 322, "col_offset": 46, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 322, "col_offset": 52, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 338, "col_offset": 18, "nodeName": "out", "type": "str"}, {"lineNumber": 338, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 345, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 345, "col_offset": 38, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 346, "col_offset": 83, "nodeName": "scores", "type": "Any"}, {"lineNumber": 347, "col_offset": 44, "nodeName": "time", "type": "module"}, {"lineNumber": 431, "col_offset": 44, "nodeName": "p", "type": "Any"}, {"lineNumber": 436, "col_offset": 39, "nodeName": "space", "type": "Any"}, {"lineNumber": 447, "col_offset": 28, "nodeName": "hyper_space", "type": "Dict[Any, Any]"}, {"lineNumber": 447, "col_offset": 45, "nodeName": "choice", "type": "Any"}, {"lineNumber": 447, "col_offset": 55, "nodeName": "p", "type": "Any"}, {"lineNumber": 456, "col_offset": 41, "nodeName": "p", "type": "Any"}, {"lineNumber": 458, "col_offset": 28, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 462, "col_offset": 36, "nodeName": "p", "type": "Any"}, {"lineNumber": 462, "col_offset": 59, "nodeName": "v", "type": "Any"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "df", "type": "Any"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "warnings", "type": "module"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "warnings", "type": "module"}, {"lineNumber": 292, "col_offset": 45, "nodeName": "ne", "type": "Any"}, {"lineNumber": 294, "col_offset": 58, "nodeName": "ce", "type": "Any"}, {"lineNumber": 298, "col_offset": 55, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 303, "col_offset": 69, "nodeName": "stck_params", "type": "Any"}, {"lineNumber": 309, "col_offset": 71, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 318, "col_offset": 61, "nodeName": "df", "type": "Any"}, {"lineNumber": 318, "col_offset": 100, "nodeName": "df", "type": "Any"}, {"lineNumber": 322, "col_offset": 52, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 338, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 345, "col_offset": 38, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 346, "col_offset": 64, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 432, "col_offset": 101, "nodeName": "p", "type": "Any"}, {"lineNumber": 436, "col_offset": 45, "nodeName": "p", "type": "Any"}, {"lineNumber": 439, "col_offset": 32, "nodeName": "hyper_space", "type": "Dict[Any, Any]"}, {"lineNumber": 439, "col_offset": 49, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 439, "col_offset": 60, "nodeName": "p", "type": "Any"}, {"lineNumber": 447, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 447, "col_offset": 45, "nodeName": "hp", "type": "Any"}, {"lineNumber": 457, "col_offset": 27, "nodeName": "space", "type": "Any"}, {"lineNumber": 458, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 458, "col_offset": 63, "nodeName": "v", "type": "Any"}, {"lineNumber": 462, "col_offset": 41, "nodeName": "space", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "split", "type": "Any"}, {"lineNumber": 298, "col_offset": 55, "nodeName": "fs", "type": "Any"}, {"lineNumber": 302, "col_offset": 34, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 306, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 309, "col_offset": 75, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 312, "col_offset": 49, "nodeName": "items", "type": "Any"}, {"lineNumber": 312, "col_offset": 74, "nodeName": "items", "type": "Any"}, {"lineNumber": 346, "col_offset": 52, "nodeName": "out", "type": "str"}, {"lineNumber": 346, "col_offset": 68, "nodeName": "i", "type": "int"}, {"lineNumber": 438, "col_offset": 31, "nodeName": "space", "type": "Any"}, {"lineNumber": 439, "col_offset": 44, "nodeName": "p", "type": "Any"}, {"lineNumber": 439, "col_offset": 49, "nodeName": "hp", "type": "Any"}, {"lineNumber": 442, "col_offset": 32, "nodeName": "hyper_space", "type": "Dict[Any, Any]"}, {"lineNumber": 442, "col_offset": 49, "nodeName": "choice", "type": "Any"}, {"lineNumber": 442, "col_offset": 59, "nodeName": "p", "type": "Any"}, {"lineNumber": 444, "col_offset": 38, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 447, "col_offset": 57, "nodeName": "space", "type": "Any"}, {"lineNumber": 457, "col_offset": 33, "nodeName": "p", "type": "Any"}, {"lineNumber": 458, "col_offset": 45, "nodeName": "space", "type": "Any"}, {"lineNumber": 462, "col_offset": 47, "nodeName": "p", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "split", "type": "Any"}, {"lineNumber": 302, "col_offset": 39, "nodeName": "stck", "type": "Any"}, {"lineNumber": 306, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 309, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 438, "col_offset": 37, "nodeName": "p", "type": "Any"}, {"lineNumber": 439, "col_offset": 62, "nodeName": "sort", "type": "Any"}, {"lineNumber": 439, "col_offset": 92, "nodeName": "sort", "type": "Any"}, {"lineNumber": 441, "col_offset": 33, "nodeName": "space", "type": "Any"}, {"lineNumber": 442, "col_offset": 44, "nodeName": "p", "type": "Any"}, {"lineNumber": 442, "col_offset": 49, "nodeName": "hp", "type": "Any"}, {"lineNumber": 447, "col_offset": 63, "nodeName": "p", "type": "Any"}, {"lineNumber": 458, "col_offset": 51, "nodeName": "p", "type": "Any"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 309, "col_offset": 61, "nodeName": "j", "type": "int"}, {"lineNumber": 309, "col_offset": 80, "nodeName": "items", "type": "Any"}, {"lineNumber": 309, "col_offset": 107, "nodeName": "items", "type": "Any"}, {"lineNumber": 312, "col_offset": 49, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 312, "col_offset": 74, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 346, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 439, "col_offset": 62, "nodeName": "np", "type": "module"}, {"lineNumber": 439, "col_offset": 92, "nodeName": "np", "type": "module"}, {"lineNumber": 441, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 442, "col_offset": 61, "nodeName": "space", "type": "Any"}, {"lineNumber": 444, "col_offset": 96, "nodeName": "p", "type": "Any"}, {"lineNumber": 312, "col_offset": 49, "nodeName": "est", "type": "Any"}, {"lineNumber": 346, "col_offset": 36, "nodeName": "std", "type": "Any"}, {"lineNumber": 346, "col_offset": 43, "nodeName": "scores", "type": "Any"}, {"lineNumber": 439, "col_offset": 70, "nodeName": "space", "type": "Any"}, {"lineNumber": 439, "col_offset": 100, "nodeName": "space", "type": "Any"}, {"lineNumber": 442, "col_offset": 67, "nodeName": "p", "type": "Any"}, {"lineNumber": 309, "col_offset": 80, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 309, "col_offset": 107, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 312, "col_offset": 74, "nodeName": "get_estimator", "type": "Any"}, {"lineNumber": 346, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 439, "col_offset": 76, "nodeName": "p", "type": "Any"}, {"lineNumber": 439, "col_offset": 106, "nodeName": "p", "type": "Any"}, {"lineNumber": 309, "col_offset": 80, "nodeName": "model", "type": "Any"}, {"lineNumber": 312, "col_offset": 74, "nodeName": "est", "type": "Any"}, {"lineNumber": 309, "col_offset": 107, "nodeName": "get_estimator", "type": "Any"}, {"lineNumber": 309, "col_offset": 107, "nodeName": "model", "type": "Any"}]