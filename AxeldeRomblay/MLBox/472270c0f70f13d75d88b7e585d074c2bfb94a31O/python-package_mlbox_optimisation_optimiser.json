[{"lineNumber": 77, "col_offset": 8, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "to_path", "type": "Any"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "to_path", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "ne", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "ce", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "cache", "type": "bool"}, {"lineNumber": 335, "col_offset": 12, "nodeName": "stck", "type": "Any"}, {"lineNumber": 340, "col_offset": 11, "nodeName": "cache", "type": "bool"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "start_time", "type": "float"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "set_params", "type": "bool"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "out", "type": "str"}, {"lineNumber": 439, "col_offset": 12, "nodeName": "auc", "type": "bool"}, {"lineNumber": 442, "col_offset": 12, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "score", "type": "Any"}, {"lineNumber": 517, "col_offset": 8, "nodeName": "hyperopt_objective", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "to_path", "type": "Any"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "k", "type": "str"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "items", "type": "Callable"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "NA_encoder", "type": "Any"}, {"lineNumber": 157, "col_offset": 13, "nodeName": "Categorical_encoder", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "counts", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "classes_to_drop", "type": "Any"}, {"lineNumber": 174, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "mask_to_drop", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "indexes_to_drop", "type": "Any"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "cv", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "est", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "fs", "type": "None"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "auc", "type": "bool"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "fs", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "cache", "type": "bool"}, {"lineNumber": 330, "col_offset": 12, "nodeName": "fs", "type": "Any"}, {"lineNumber": 335, "col_offset": 20, "nodeName": "sort", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "pp", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "pp", "type": "Any"}, {"lineNumber": 349, "col_offset": 21, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "set_params", "type": "bool"}, {"lineNumber": 366, "col_offset": 16, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 425, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 436, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 436, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 436, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 437, "col_offset": 12, "nodeName": "out", "type": "str"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "scoring", "type": "str"}, {"lineNumber": 442, "col_offset": 12, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 521, "col_offset": 12, "nodeName": "space", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "k", "type": "str"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "value_counts", "type": "Any"}, {"lineNumber": 175, "col_offset": 27, "nodeName": "apply", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "StratifiedKFold", "type": "Any"}, {"lineNumber": 184, "col_offset": 18, "nodeName": "Classifier", "type": "Any"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "params", "type": "Any"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 199, "col_offset": 16, "nodeName": "params", "type": "Any"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "scoring", "type": "str"}, {"lineNumber": 237, "col_offset": 14, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "indexes_to_drop", "type": "List[nothing]"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "cv", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "est", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "fs", "type": "None"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "auc", "type": "bool"}, {"lineNumber": 299, "col_offset": 23, "nodeName": "ne", "type": "Any"}, {"lineNumber": 299, "col_offset": 35, "nodeName": "ce", "type": "Any"}, {"lineNumber": 306, "col_offset": 34, "nodeName": "params", "type": "Any"}, {"lineNumber": 315, "col_offset": 34, "nodeName": "params", "type": "Any"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 335, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 335, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 335, "col_offset": 33, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 338, "col_offset": 28, "nodeName": "est", "type": "Any"}, {"lineNumber": 341, "col_offset": 17, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 341, "col_offset": 26, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 343, "col_offset": 17, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 343, "col_offset": 26, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 349, "col_offset": 21, "nodeName": "time", "type": "module"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "pp", "type": "Any"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "set_params", "type": "bool"}, {"lineNumber": 366, "col_offset": 16, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 409, "col_offset": 16, "nodeName": "scores", "type": "Any"}, {"lineNumber": 414, "col_offset": 16, "nodeName": "score", "type": "Any"}, {"lineNumber": 422, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 425, "col_offset": 22, "nodeName": "inf", "type": "Any"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 436, "col_offset": 30, "nodeName": "scores", "type": "Any"}, {"lineNumber": 440, "col_offset": 12, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 443, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 444, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 522, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 525, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 537, "col_offset": 16, "nodeName": "hyper_space", "type": "Dict[Any, Any]"}, {"lineNumber": 539, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 564, "col_offset": 16, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 580, "col_offset": 20, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 589, "col_offset": 23, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "get_params", "type": "Callable[..., Any]"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 101, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "k", "type": "str"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 174, "col_offset": 30, "nodeName": "counts", "type": "Any"}, {"lineNumber": 178, "col_offset": 42, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 180, "col_offset": 46, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 214, "col_offset": 18, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "auc", "type": "bool"}, {"lineNumber": 242, "col_offset": 17, "nodeName": "KFold", "type": "Any"}, {"lineNumber": 248, "col_offset": 18, "nodeName": "Regressor", "type": "Any"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "params", "type": "Any"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "params", "type": "Any"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 275, "col_offset": 16, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "scoring", "type": "str"}, {"lineNumber": 292, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 308, "col_offset": 20, "nodeName": "cache", "type": "bool"}, {"lineNumber": 317, "col_offset": 20, "nodeName": "cache", "type": "bool"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 331, "col_offset": 31, "nodeName": "fs", "type": "Any"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 336, "col_offset": 25, "nodeName": "stck", "type": "Any"}, {"lineNumber": 341, "col_offset": 39, "nodeName": "to_path", "type": "Any"}, {"lineNumber": 359, "col_offset": 21, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 362, "col_offset": 16, "nodeName": "set_params", "type": "bool"}, {"lineNumber": 367, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 368, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 371, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 373, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 374, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 376, "col_offset": 20, "nodeName": "fs", "type": "Any"}, {"lineNumber": 380, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "stck", "type": "Any"}, {"lineNumber": 380, "col_offset": 31, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 382, "col_offset": 20, "nodeName": "stck_params", "type": "Any"}, {"lineNumber": 399, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 404, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 409, "col_offset": 25, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 414, "col_offset": 24, "nodeName": "mean", "type": "Any"}, {"lineNumber": 414, "col_offset": 32, "nodeName": "scores", "type": "Any"}, {"lineNumber": 418, "col_offset": 16, "nodeName": "scores", "type": "List[Any]"}, {"lineNumber": 419, "col_offset": 16, "nodeName": "score", "type": "Any"}, {"lineNumber": 425, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 522, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 529, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 529, "col_offset": 20, "nodeName": "space", "type": "Any"}, {"lineNumber": 530, "col_offset": 16, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 533, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 539, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 564, "col_offset": 30, "nodeName": "fmin", "type": "Any"}, {"lineNumber": 564, "col_offset": 35, "nodeName": "hyperopt_objective", "type": "Callable[[Any], Any]"}, {"lineNumber": 571, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 571, "col_offset": 23, "nodeName": "v", "type": "Any"}, {"lineNumber": 571, "col_offset": 28, "nodeName": "items", "type": "Any"}, {"lineNumber": 580, "col_offset": 20, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "warnings", "type": "module"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "df", "type": "Any"}, {"lineNumber": 175, "col_offset": 27, "nodeName": "df", "type": "Any"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "df", "type": "Any"}, {"lineNumber": 176, "col_offset": 43, "nodeName": "mask_to_drop", "type": "Any"}, {"lineNumber": 178, "col_offset": 42, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 180, "col_offset": 46, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "fs", "type": "Any"}, {"lineNumber": 200, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 214, "col_offset": 18, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 216, "col_offset": 31, "nodeName": "make_scorer", "type": "Any"}, {"lineNumber": 221, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 237, "col_offset": 14, "nodeName": "df", "type": "Any"}, {"lineNumber": 242, "col_offset": 32, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 244, "col_offset": 36, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 275, "col_offset": 16, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 278, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 307, "col_offset": 19, "nodeName": "params", "type": "Any"}, {"lineNumber": 316, "col_offset": 19, "nodeName": "params", "type": "Any"}, {"lineNumber": 336, "col_offset": 31, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 341, "col_offset": 39, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 359, "col_offset": 21, "nodeName": "pp", "type": "Any"}, {"lineNumber": 359, "col_offset": 37, "nodeName": "params", "type": "Any"}, {"lineNumber": 377, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 378, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 380, "col_offset": 41, "nodeName": "sort", "type": "Any"}, {"lineNumber": 382, "col_offset": 34, "nodeName": "copy", "type": "Any"}, {"lineNumber": 389, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 390, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 393, "col_offset": 24, "nodeName": "j", "type": "int"}, {"lineNumber": 393, "col_offset": 27, "nodeName": "model", "type": "Any"}, {"lineNumber": 393, "col_offset": 36, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 409, "col_offset": 51, "nodeName": "pp", "type": "Any"}, {"lineNumber": 412, "col_offset": 49, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 413, "col_offset": 44, "nodeName": "cv", "type": "Any"}, {"lineNumber": 414, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 419, "col_offset": 25, "nodeName": "inf", "type": "Any"}, {"lineNumber": 437, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 437, "col_offset": 59, "nodeName": "s", "type": "Any"}, {"lineNumber": 444, "col_offset": 64, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 444, "col_offset": 68, "nodeName": "score", "type": "Any"}, {"lineNumber": 447, "col_offset": 58, "nodeName": "start_time", "type": "float"}, {"lineNumber": 530, "col_offset": 16, "nodeName": "warnings", "type": "module"}, {"lineNumber": 539, "col_offset": 25, "nodeName": "space", "type": "Any"}, {"lineNumber": 565, "col_offset": 41, "nodeName": "hyper_space", "type": "Dict[Any, Any]"}, {"lineNumber": 566, "col_offset": 40, "nodeName": "suggest", "type": "Any"}, {"lineNumber": 567, "col_offset": 45, "nodeName": "max_evals", "type": "Any"}, {"lineNumber": 571, "col_offset": 28, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 581, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 582, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 583, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 584, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 585, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 586, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 587, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 587, "col_offset": 26, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 174, "col_offset": 37, "nodeName": "counts", "type": "Any"}, {"lineNumber": 174, "col_offset": 46, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "Clf_feature_selector", "type": "Any"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 203, "col_offset": 49, "nodeName": "StackingClassifier", "type": "Any"}, {"lineNumber": 221, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "scoring", "type": "str"}, {"lineNumber": 242, "col_offset": 32, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 244, "col_offset": 36, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 254, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 256, "col_offset": 24, "nodeName": "fs", "type": "Any"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 278, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 279, "col_offset": 24, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 287, "col_offset": 24, "nodeName": "scoring", "type": "str"}, {"lineNumber": 336, "col_offset": 36, "nodeName": "stck", "type": "Any"}, {"lineNumber": 372, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 374, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 380, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 380, "col_offset": 49, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 380, "col_offset": 54, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 393, "col_offset": 46, "nodeName": "stck_params", "type": "Any"}, {"lineNumber": 394, "col_offset": 24, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 395, "col_offset": 24, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 400, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 410, "col_offset": 43, "nodeName": "drop", "type": "Any"}, {"lineNumber": 410, "col_offset": 60, "nodeName": "indexes_to_drop", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 411, "col_offset": 43, "nodeName": "drop", "type": "Any"}, {"lineNumber": 411, "col_offset": 61, "nodeName": "indexes_to_drop", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 412, "col_offset": 49, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 418, "col_offset": 27, "nodeName": "inf", "type": "Any"}, {"lineNumber": 418, "col_offset": 38, "nodeName": "_", "type": "int"}, {"lineNumber": 419, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 446, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 447, "col_offset": 44, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 541, "col_offset": 39, "nodeName": "space", "type": "Any"}, {"lineNumber": 542, "col_offset": 30, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 566, "col_offset": 40, "nodeName": "tpe", "type": "Any"}, {"lineNumber": 572, "col_offset": 36, "nodeName": "space", "type": "Any"}, {"lineNumber": 578, "col_offset": 24, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 174, "col_offset": 46, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "Reg_feature_selector", "type": "Any"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 267, "col_offset": 24, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 267, "col_offset": 49, "nodeName": "StackingRegressor", "type": "Any"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 279, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 287, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 372, "col_offset": 47, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 374, "col_offset": 60, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 378, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 382, "col_offset": 34, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 384, "col_offset": 52, "nodeName": "keys", "type": "Any"}, {"lineNumber": 385, "col_offset": 43, "nodeName": "k", "type": "Any"}, {"lineNumber": 391, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 391, "col_offset": 52, "nodeName": "stck_params_display", "type": "Dict[Any, Any]"}, {"lineNumber": 401, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 418, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 418, "col_offset": 43, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 418, "col_offset": 49, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 437, "col_offset": 18, "nodeName": "out", "type": "str"}, {"lineNumber": 437, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 444, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 444, "col_offset": 40, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 446, "col_offset": 61, "nodeName": "scores", "type": "Any"}, {"lineNumber": 447, "col_offset": 44, "nodeName": "time", "type": "module"}, {"lineNumber": 541, "col_offset": 45, "nodeName": "p", "type": "Any"}, {"lineNumber": 547, "col_offset": 40, "nodeName": "space", "type": "Any"}, {"lineNumber": 562, "col_offset": 28, "nodeName": "hyper_space", "type": "Dict[Any, Any]"}, {"lineNumber": 562, "col_offset": 45, "nodeName": "choice", "type": "Any"}, {"lineNumber": 562, "col_offset": 55, "nodeName": "p", "type": "Any"}, {"lineNumber": 572, "col_offset": 42, "nodeName": "p", "type": "Any"}, {"lineNumber": 574, "col_offset": 28, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 578, "col_offset": 36, "nodeName": "p", "type": "Any"}, {"lineNumber": 578, "col_offset": 59, "nodeName": "v", "type": "Any"}, {"lineNumber": 226, "col_offset": 24, "nodeName": "warnings", "type": "module"}, {"lineNumber": 285, "col_offset": 24, "nodeName": "warnings", "type": "module"}, {"lineNumber": 372, "col_offset": 47, "nodeName": "ne", "type": "Any"}, {"lineNumber": 374, "col_offset": 60, "nodeName": "ce", "type": "Any"}, {"lineNumber": 378, "col_offset": 57, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 384, "col_offset": 52, "nodeName": "stck_params", "type": "Any"}, {"lineNumber": 396, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 410, "col_offset": 43, "nodeName": "df", "type": "Any"}, {"lineNumber": 411, "col_offset": 43, "nodeName": "df", "type": "Any"}, {"lineNumber": 418, "col_offset": 49, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 437, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 444, "col_offset": 40, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 446, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 543, "col_offset": 67, "nodeName": "p", "type": "Any"}, {"lineNumber": 547, "col_offset": 46, "nodeName": "p", "type": "Any"}, {"lineNumber": 550, "col_offset": 32, "nodeName": "hyper_space", "type": "Dict[Any, Any]"}, {"lineNumber": 550, "col_offset": 49, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 550, "col_offset": 60, "nodeName": "p", "type": "Any"}, {"lineNumber": 562, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 562, "col_offset": 45, "nodeName": "hp", "type": "Any"}, {"lineNumber": 573, "col_offset": 28, "nodeName": "space", "type": "Any"}, {"lineNumber": 574, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 574, "col_offset": 63, "nodeName": "v", "type": "Any"}, {"lineNumber": 578, "col_offset": 41, "nodeName": "space", "type": "Any"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "split", "type": "Any"}, {"lineNumber": 378, "col_offset": 57, "nodeName": "fs", "type": "Any"}, {"lineNumber": 382, "col_offset": 34, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 391, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 396, "col_offset": 36, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 401, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 402, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 446, "col_offset": 20, "nodeName": "out", "type": "str"}, {"lineNumber": 446, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 549, "col_offset": 32, "nodeName": "space", "type": "Any"}, {"lineNumber": 550, "col_offset": 44, "nodeName": "p", "type": "Any"}, {"lineNumber": 554, "col_offset": 32, "nodeName": "hyper_space", "type": "Dict[Any, Any]"}, {"lineNumber": 554, "col_offset": 49, "nodeName": "choice", "type": "Any"}, {"lineNumber": 554, "col_offset": 59, "nodeName": "p", "type": "Any"}, {"lineNumber": 556, "col_offset": 38, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 562, "col_offset": 58, "nodeName": "space", "type": "Any"}, {"lineNumber": 573, "col_offset": 34, "nodeName": "p", "type": "Any"}, {"lineNumber": 574, "col_offset": 45, "nodeName": "space", "type": "Any"}, {"lineNumber": 578, "col_offset": 47, "nodeName": "p", "type": "Any"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "split", "type": "Any"}, {"lineNumber": 382, "col_offset": 39, "nodeName": "stck", "type": "Any"}, {"lineNumber": 391, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 401, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 402, "col_offset": 32, "nodeName": "items", "type": "Any"}, {"lineNumber": 549, "col_offset": 38, "nodeName": "p", "type": "Any"}, {"lineNumber": 550, "col_offset": 63, "nodeName": "sort", "type": "Any"}, {"lineNumber": 551, "col_offset": 60, "nodeName": "sort", "type": "Any"}, {"lineNumber": 553, "col_offset": 34, "nodeName": "space", "type": "Any"}, {"lineNumber": 554, "col_offset": 44, "nodeName": "p", "type": "Any"}, {"lineNumber": 554, "col_offset": 49, "nodeName": "hp", "type": "Any"}, {"lineNumber": 562, "col_offset": 64, "nodeName": "p", "type": "Any"}, {"lineNumber": 574, "col_offset": 51, "nodeName": "p", "type": "Any"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 396, "col_offset": 41, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 397, "col_offset": 43, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 550, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 553, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 554, "col_offset": 62, "nodeName": "space", "type": "Any"}, {"lineNumber": 558, "col_offset": 61, "nodeName": "p", "type": "Any"}, {"lineNumber": 396, "col_offset": 46, "nodeName": "items", "type": "Any"}, {"lineNumber": 397, "col_offset": 48, "nodeName": "items", "type": "Any"}, {"lineNumber": 401, "col_offset": 30, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 402, "col_offset": 32, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 550, "col_offset": 71, "nodeName": "space", "type": "Any"}, {"lineNumber": 554, "col_offset": 68, "nodeName": "p", "type": "Any"}, {"lineNumber": 401, "col_offset": 30, "nodeName": "est", "type": "Any"}, {"lineNumber": 396, "col_offset": 46, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 397, "col_offset": 48, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 402, "col_offset": 32, "nodeName": "get_estimator", "type": "Any"}, {"lineNumber": 396, "col_offset": 46, "nodeName": "model", "type": "Any"}, {"lineNumber": 402, "col_offset": 32, "nodeName": "est", "type": "Any"}, {"lineNumber": 397, "col_offset": 48, "nodeName": "get_estimator", "type": "Any"}, {"lineNumber": 397, "col_offset": 48, "nodeName": "model", "type": "Any"}]