[{"lineNumber": 71, "col_offset": 8, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "to_path", "type": "Any"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "to_path", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "ne", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "ce", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "cache", "type": "bool"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "stck", "type": "Any"}, {"lineNumber": 326, "col_offset": 11, "nodeName": "cache", "type": "bool"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "start_time", "type": "float"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "set_params", "type": "bool"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "out", "type": "str"}, {"lineNumber": 425, "col_offset": 12, "nodeName": "auc", "type": "bool"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 436, "col_offset": 15, "nodeName": "score", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "hyperopt_objective", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "to_path", "type": "Any"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "k", "type": "str"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "items", "type": "Callable"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "NA_encoder", "type": "Any"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "Categorical_encoder", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "counts", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "classes_to_drop", "type": "Any"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "mask_to_drop", "type": "Any"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "indexes_to_drop", "type": "Any"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "cv", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "est", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "fs", "type": "None"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "auc", "type": "bool"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 300, "col_offset": 12, "nodeName": "fs", "type": "Any"}, {"lineNumber": 310, "col_offset": 12, "nodeName": "cache", "type": "bool"}, {"lineNumber": 316, "col_offset": 12, "nodeName": "fs", "type": "Any"}, {"lineNumber": 321, "col_offset": 20, "nodeName": "sort", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "pp", "type": "Any"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "pp", "type": "Any"}, {"lineNumber": 335, "col_offset": 21, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "set_params", "type": "bool"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 411, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 422, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 422, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "out", "type": "str"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "scoring", "type": "str"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 489, "col_offset": 12, "nodeName": "space", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 83, "col_offset": 27, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "k", "type": "str"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "value_counts", "type": "Any"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "apply", "type": "Any"}, {"lineNumber": 164, "col_offset": 17, "nodeName": "StratifiedKFold", "type": "Any"}, {"lineNumber": 170, "col_offset": 18, "nodeName": "Classifier", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "params", "type": "Any"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "params", "type": "Any"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "scoring", "type": "str"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "indexes_to_drop", "type": "List[nothing]"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "cv", "type": "Any"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "est", "type": "Any"}, {"lineNumber": 238, "col_offset": 12, "nodeName": "fs", "type": "None"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "auc", "type": "bool"}, {"lineNumber": 285, "col_offset": 23, "nodeName": "ne", "type": "Any"}, {"lineNumber": 285, "col_offset": 35, "nodeName": "ce", "type": "Any"}, {"lineNumber": 292, "col_offset": 34, "nodeName": "params", "type": "Any"}, {"lineNumber": 301, "col_offset": 34, "nodeName": "params", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 309, "col_offset": 16, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 321, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 321, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 321, "col_offset": 33, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 324, "col_offset": 28, "nodeName": "est", "type": "Any"}, {"lineNumber": 327, "col_offset": 17, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 327, "col_offset": 26, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 329, "col_offset": 17, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 329, "col_offset": 26, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 335, "col_offset": 21, "nodeName": "time", "type": "module"}, {"lineNumber": 341, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "pp", "type": "Any"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "set_params", "type": "bool"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 395, "col_offset": 16, "nodeName": "scores", "type": "Any"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "score", "type": "Any"}, {"lineNumber": 408, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 411, "col_offset": 22, "nodeName": "inf", "type": "Any"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 422, "col_offset": 30, "nodeName": "scores", "type": "Any"}, {"lineNumber": 426, "col_offset": 12, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 429, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 430, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 431, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 433, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 434, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 493, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 505, "col_offset": 16, "nodeName": "hyper_space", "type": "Dict[Any, Any]"}, {"lineNumber": 507, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 532, "col_offset": 16, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 548, "col_offset": 20, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 557, "col_offset": 23, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "get_params", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "k", "type": "str"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "counts", "type": "Any"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 166, "col_offset": 46, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 197, "col_offset": 16, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 200, "col_offset": 18, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "auc", "type": "bool"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "KFold", "type": "Any"}, {"lineNumber": 234, "col_offset": 18, "nodeName": "Regressor", "type": "Any"}, {"lineNumber": 239, "col_offset": 16, "nodeName": "params", "type": "Any"}, {"lineNumber": 240, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 249, "col_offset": 16, "nodeName": "params", "type": "Any"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "scoring", "type": "str"}, {"lineNumber": 278, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 294, "col_offset": 20, "nodeName": "cache", "type": "bool"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "cache", "type": "bool"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 317, "col_offset": 31, "nodeName": "fs", "type": "Any"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 322, "col_offset": 25, "nodeName": "stck", "type": "Any"}, {"lineNumber": 327, "col_offset": 39, "nodeName": "to_path", "type": "Any"}, {"lineNumber": 345, "col_offset": 21, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "set_params", "type": "bool"}, {"lineNumber": 353, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 354, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 357, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 358, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 362, "col_offset": 20, "nodeName": "fs", "type": "Any"}, {"lineNumber": 366, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 366, "col_offset": 23, "nodeName": "stck", "type": "Any"}, {"lineNumber": 366, "col_offset": 31, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 368, "col_offset": 20, "nodeName": "stck_params", "type": "Any"}, {"lineNumber": 385, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 395, "col_offset": 25, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 400, "col_offset": 24, "nodeName": "mean", "type": "Any"}, {"lineNumber": 400, "col_offset": 32, "nodeName": "scores", "type": "Any"}, {"lineNumber": 404, "col_offset": 16, "nodeName": "scores", "type": "List[Any]"}, {"lineNumber": 405, "col_offset": 16, "nodeName": "score", "type": "Any"}, {"lineNumber": 411, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 490, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 497, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 497, "col_offset": 20, "nodeName": "space", "type": "Any"}, {"lineNumber": 498, "col_offset": 16, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 501, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 507, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 532, "col_offset": 30, "nodeName": "fmin", "type": "Any"}, {"lineNumber": 532, "col_offset": 35, "nodeName": "hyperopt_objective", "type": "Callable[[Any], Any]"}, {"lineNumber": 539, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 539, "col_offset": 23, "nodeName": "v", "type": "Any"}, {"lineNumber": 539, "col_offset": 28, "nodeName": "items", "type": "Any"}, {"lineNumber": 548, "col_offset": 20, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "to_path", "type": "Any"}, {"lineNumber": 93, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "warnings", "type": "module"}, {"lineNumber": 159, "col_offset": 21, "nodeName": "df", "type": "Any"}, {"lineNumber": 161, "col_offset": 27, "nodeName": "df", "type": "Any"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "df", "type": "Any"}, {"lineNumber": 162, "col_offset": 43, "nodeName": "mask_to_drop", "type": "Any"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 166, "col_offset": 46, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "fs", "type": "Any"}, {"lineNumber": 186, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 200, "col_offset": 18, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "make_scorer", "type": "Any"}, {"lineNumber": 207, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "df", "type": "Any"}, {"lineNumber": 228, "col_offset": 32, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 230, "col_offset": 36, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 264, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 293, "col_offset": 19, "nodeName": "params", "type": "Any"}, {"lineNumber": 302, "col_offset": 19, "nodeName": "params", "type": "Any"}, {"lineNumber": 322, "col_offset": 31, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 327, "col_offset": 39, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 345, "col_offset": 21, "nodeName": "pp", "type": "Any"}, {"lineNumber": 345, "col_offset": 37, "nodeName": "params", "type": "Any"}, {"lineNumber": 363, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 364, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 366, "col_offset": 41, "nodeName": "sort", "type": "Any"}, {"lineNumber": 368, "col_offset": 34, "nodeName": "copy", "type": "Any"}, {"lineNumber": 375, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 376, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 379, "col_offset": 24, "nodeName": "j", "type": "int"}, {"lineNumber": 379, "col_offset": 27, "nodeName": "model", "type": "Any"}, {"lineNumber": 379, "col_offset": 36, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 395, "col_offset": 51, "nodeName": "pp", "type": "Any"}, {"lineNumber": 398, "col_offset": 49, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 399, "col_offset": 44, "nodeName": "cv", "type": "Any"}, {"lineNumber": 400, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 405, "col_offset": 25, "nodeName": "inf", "type": "Any"}, {"lineNumber": 423, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 423, "col_offset": 59, "nodeName": "s", "type": "Any"}, {"lineNumber": 430, "col_offset": 64, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 430, "col_offset": 68, "nodeName": "score", "type": "Any"}, {"lineNumber": 433, "col_offset": 58, "nodeName": "start_time", "type": "float"}, {"lineNumber": 498, "col_offset": 16, "nodeName": "warnings", "type": "module"}, {"lineNumber": 507, "col_offset": 25, "nodeName": "space", "type": "Any"}, {"lineNumber": 533, "col_offset": 41, "nodeName": "hyper_space", "type": "Dict[Any, Any]"}, {"lineNumber": 534, "col_offset": 40, "nodeName": "suggest", "type": "Any"}, {"lineNumber": 535, "col_offset": 45, "nodeName": "max_evals", "type": "Any"}, {"lineNumber": 539, "col_offset": 28, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 549, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 550, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 551, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 552, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 553, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 554, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 555, "col_offset": 20, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 555, "col_offset": 26, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 160, "col_offset": 37, "nodeName": "counts", "type": "Any"}, {"lineNumber": 160, "col_offset": 46, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 178, "col_offset": 29, "nodeName": "Clf_feature_selector", "type": "Any"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 189, "col_offset": 49, "nodeName": "StackingClassifier", "type": "Any"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "scoring", "type": "str"}, {"lineNumber": 228, "col_offset": 32, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 230, "col_offset": 36, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 240, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 241, "col_offset": 24, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "fs", "type": "Any"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 273, "col_offset": 24, "nodeName": "scoring", "type": "str"}, {"lineNumber": 322, "col_offset": 36, "nodeName": "stck", "type": "Any"}, {"lineNumber": 358, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 360, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 366, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 366, "col_offset": 49, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 366, "col_offset": 54, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 379, "col_offset": 46, "nodeName": "stck_params", "type": "Any"}, {"lineNumber": 380, "col_offset": 24, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 381, "col_offset": 24, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 386, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 396, "col_offset": 43, "nodeName": "drop", "type": "Any"}, {"lineNumber": 396, "col_offset": 60, "nodeName": "indexes_to_drop", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 397, "col_offset": 43, "nodeName": "drop", "type": "Any"}, {"lineNumber": 397, "col_offset": 61, "nodeName": "indexes_to_drop", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 398, "col_offset": 49, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 404, "col_offset": 27, "nodeName": "inf", "type": "Any"}, {"lineNumber": 404, "col_offset": 38, "nodeName": "_", "type": "int"}, {"lineNumber": 405, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 432, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 433, "col_offset": 44, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 509, "col_offset": 39, "nodeName": "space", "type": "Any"}, {"lineNumber": 510, "col_offset": 30, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 534, "col_offset": 40, "nodeName": "tpe", "type": "Any"}, {"lineNumber": 540, "col_offset": 36, "nodeName": "space", "type": "Any"}, {"lineNumber": 546, "col_offset": 24, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 160, "col_offset": 46, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 207, "col_offset": 25, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 212, "col_offset": 24, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 214, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 241, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 242, "col_offset": 29, "nodeName": "Reg_feature_selector", "type": "Any"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 253, "col_offset": 24, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 253, "col_offset": 49, "nodeName": "StackingRegressor", "type": "Any"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 265, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 271, "col_offset": 24, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 273, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 358, "col_offset": 47, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 360, "col_offset": 60, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 364, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 368, "col_offset": 34, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 370, "col_offset": 52, "nodeName": "keys", "type": "Any"}, {"lineNumber": 371, "col_offset": 43, "nodeName": "k", "type": "Any"}, {"lineNumber": 377, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 377, "col_offset": 52, "nodeName": "stck_params_display", "type": "Dict[Any, Any]"}, {"lineNumber": 387, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 404, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 404, "col_offset": 43, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 404, "col_offset": 49, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 423, "col_offset": 18, "nodeName": "out", "type": "str"}, {"lineNumber": 423, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 430, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 430, "col_offset": 40, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 432, "col_offset": 61, "nodeName": "scores", "type": "Any"}, {"lineNumber": 433, "col_offset": 44, "nodeName": "time", "type": "module"}, {"lineNumber": 509, "col_offset": 45, "nodeName": "p", "type": "Any"}, {"lineNumber": 515, "col_offset": 40, "nodeName": "space", "type": "Any"}, {"lineNumber": 530, "col_offset": 28, "nodeName": "hyper_space", "type": "Dict[Any, Any]"}, {"lineNumber": 530, "col_offset": 45, "nodeName": "choice", "type": "Any"}, {"lineNumber": 530, "col_offset": 55, "nodeName": "p", "type": "Any"}, {"lineNumber": 540, "col_offset": 42, "nodeName": "p", "type": "Any"}, {"lineNumber": 542, "col_offset": 28, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 546, "col_offset": 36, "nodeName": "p", "type": "Any"}, {"lineNumber": 546, "col_offset": 59, "nodeName": "v", "type": "Any"}, {"lineNumber": 212, "col_offset": 24, "nodeName": "warnings", "type": "module"}, {"lineNumber": 271, "col_offset": 24, "nodeName": "warnings", "type": "module"}, {"lineNumber": 358, "col_offset": 47, "nodeName": "ne", "type": "Any"}, {"lineNumber": 360, "col_offset": 60, "nodeName": "ce", "type": "Any"}, {"lineNumber": 364, "col_offset": 57, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 370, "col_offset": 52, "nodeName": "stck_params", "type": "Any"}, {"lineNumber": 382, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 396, "col_offset": 43, "nodeName": "df", "type": "Any"}, {"lineNumber": 397, "col_offset": 43, "nodeName": "df", "type": "Any"}, {"lineNumber": 404, "col_offset": 49, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 423, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 430, "col_offset": 40, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 432, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 511, "col_offset": 67, "nodeName": "p", "type": "Any"}, {"lineNumber": 515, "col_offset": 46, "nodeName": "p", "type": "Any"}, {"lineNumber": 518, "col_offset": 32, "nodeName": "hyper_space", "type": "Dict[Any, Any]"}, {"lineNumber": 518, "col_offset": 49, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 518, "col_offset": 60, "nodeName": "p", "type": "Any"}, {"lineNumber": 530, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 530, "col_offset": 45, "nodeName": "hp", "type": "Any"}, {"lineNumber": 541, "col_offset": 28, "nodeName": "space", "type": "Any"}, {"lineNumber": 542, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 542, "col_offset": 63, "nodeName": "v", "type": "Any"}, {"lineNumber": 546, "col_offset": 41, "nodeName": "space", "type": "Any"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "split", "type": "Any"}, {"lineNumber": 364, "col_offset": 57, "nodeName": "fs", "type": "Any"}, {"lineNumber": 368, "col_offset": 34, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 377, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 382, "col_offset": 36, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 387, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 388, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 432, "col_offset": 20, "nodeName": "out", "type": "str"}, {"lineNumber": 432, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 517, "col_offset": 32, "nodeName": "space", "type": "Any"}, {"lineNumber": 518, "col_offset": 44, "nodeName": "p", "type": "Any"}, {"lineNumber": 522, "col_offset": 32, "nodeName": "hyper_space", "type": "Dict[Any, Any]"}, {"lineNumber": 522, "col_offset": 49, "nodeName": "choice", "type": "Any"}, {"lineNumber": 522, "col_offset": 59, "nodeName": "p", "type": "Any"}, {"lineNumber": 524, "col_offset": 38, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 530, "col_offset": 58, "nodeName": "space", "type": "Any"}, {"lineNumber": 541, "col_offset": 34, "nodeName": "p", "type": "Any"}, {"lineNumber": 542, "col_offset": 45, "nodeName": "space", "type": "Any"}, {"lineNumber": 546, "col_offset": 47, "nodeName": "p", "type": "Any"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 253, "col_offset": 29, "nodeName": "split", "type": "Any"}, {"lineNumber": 368, "col_offset": 39, "nodeName": "stck", "type": "Any"}, {"lineNumber": 377, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 387, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 388, "col_offset": 32, "nodeName": "items", "type": "Any"}, {"lineNumber": 517, "col_offset": 38, "nodeName": "p", "type": "Any"}, {"lineNumber": 518, "col_offset": 63, "nodeName": "sort", "type": "Any"}, {"lineNumber": 519, "col_offset": 60, "nodeName": "sort", "type": "Any"}, {"lineNumber": 521, "col_offset": 34, "nodeName": "space", "type": "Any"}, {"lineNumber": 522, "col_offset": 44, "nodeName": "p", "type": "Any"}, {"lineNumber": 522, "col_offset": 49, "nodeName": "hp", "type": "Any"}, {"lineNumber": 530, "col_offset": 64, "nodeName": "p", "type": "Any"}, {"lineNumber": 542, "col_offset": 51, "nodeName": "p", "type": "Any"}, {"lineNumber": 253, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 382, "col_offset": 41, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 383, "col_offset": 43, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 518, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 521, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 522, "col_offset": 62, "nodeName": "space", "type": "Any"}, {"lineNumber": 526, "col_offset": 61, "nodeName": "p", "type": "Any"}, {"lineNumber": 382, "col_offset": 46, "nodeName": "items", "type": "Any"}, {"lineNumber": 383, "col_offset": 48, "nodeName": "items", "type": "Any"}, {"lineNumber": 387, "col_offset": 30, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 388, "col_offset": 32, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 518, "col_offset": 71, "nodeName": "space", "type": "Any"}, {"lineNumber": 522, "col_offset": 68, "nodeName": "p", "type": "Any"}, {"lineNumber": 387, "col_offset": 30, "nodeName": "est", "type": "Any"}, {"lineNumber": 382, "col_offset": 46, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 383, "col_offset": 48, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 388, "col_offset": 32, "nodeName": "get_estimator", "type": "Any"}, {"lineNumber": 382, "col_offset": 46, "nodeName": "model", "type": "Any"}, {"lineNumber": 388, "col_offset": 32, "nodeName": "est", "type": "Any"}, {"lineNumber": 383, "col_offset": 48, "nodeName": "get_estimator", "type": "Any"}, {"lineNumber": 383, "col_offset": 48, "nodeName": "model", "type": "Any"}]