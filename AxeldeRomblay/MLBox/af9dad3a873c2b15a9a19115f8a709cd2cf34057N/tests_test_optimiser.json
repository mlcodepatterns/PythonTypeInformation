[{"lineNumber": 16, "col_offset": 0, "nodeName": "test_init_optimiser", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "test_get_params_optimiser", "type": "Callable[[], Any]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "test_set_params_optimiser", "type": "Callable[[], Any]"}, {"lineNumber": 61, "col_offset": 0, "nodeName": "test_evaluate_classification_optimiser", "type": "Callable[[], Any]"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "test_evaluate_regression_optimiser", "type": "Callable[[], Any]"}, {"lineNumber": 125, "col_offset": 0, "nodeName": "test_evaluate_and_optimise_classification", "type": "Callable[[], Any]"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "dict", "type": "Dict[str, Optional[Union[bool, str, int]]]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "reader", "type": "mlbox.preprocessing.reader.Reader"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "drift_thresholder", "type": "mlbox.preprocessing.drift_thresholder.Drift_thresholder"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "drift_thresholder", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "score", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "score", "type": "Any"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "reader", "type": "mlbox.preprocessing.reader.Reader"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "drift_thresholder", "type": "mlbox.preprocessing.drift_thresholder.Drift_thresholder"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "drift_thresholder", "type": "Dict[str, Any]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "mape", "type": "Any"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "score", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "score", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "reader", "type": "mlbox.preprocessing.reader.Reader"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "drift_thresholder", "type": "mlbox.preprocessing.drift_thresholder.Drift_thresholder"}, {"lineNumber": 133, "col_offset": 4, "nodeName": "drift_thresholder", "type": "Dict[str, Any]"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "dict_error", "type": "Dict[str, Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "score", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "space", "type": "Dict[str, Union[Dict[str, Union[List[int], str]], Dict[str, Union[List[float], str]], Dict[str, Union[List[str], str]]]]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "best", "type": "Any"}, {"lineNumber": 18, "col_offset": 38, "nodeName": "record", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "optimiser", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "n_folds", "type": "int"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "to_path", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "optimiser", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 30, "col_offset": 38, "nodeName": "record", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "optimiser", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "dict", "type": "Dict[str, Optional[Union[bool, str, int]]]"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "record", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "optimiser", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "n_folds", "type": "int"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "to_path", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "record", "type": "Any"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "Reader", "type": "Type[mlbox.preprocessing.reader.Reader]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "train_test_split", "type": "Callable[[Iterable[Any], str], Dict[str, Any]]"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "Drift_thresholder", "type": "Type[mlbox.preprocessing.drift_thresholder.Drift_thresholder]"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "fit_transform", "type": "Callable"}, {"lineNumber": 68, "col_offset": 56, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "record", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "opt", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "evaluate", "type": "Callable[[Union[Container[Any], Mapping[str, Any]], Mapping[str, Union[Mapping[Any, Any], Sequence[Any]]]], Any]"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "score", "type": "Any"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "record", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "opt", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "evaluate", "type": "Callable[[Union[Container[Any], Mapping[str, Any]], Mapping[str, Union[Mapping[Any, Any], Sequence[Any]]]], Any]"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "score", "type": "Any"}, {"lineNumber": 82, "col_offset": 38, "nodeName": "record", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "opt", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 85, "col_offset": 38, "nodeName": "record", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "Reader", "type": "Type[mlbox.preprocessing.reader.Reader]"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "train_test_split", "type": "Callable[[Iterable[Any], str], Dict[str, Any]]"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "Drift_thresholder", "type": "Type[mlbox.preprocessing.drift_thresholder.Drift_thresholder]"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "fit_transform", "type": "Callable"}, {"lineNumber": 97, "col_offset": 56, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "make_scorer", "type": "Any"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "record", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "opt", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "evaluate", "type": "Callable[[Union[Container[Any], Mapping[str, Any]], Mapping[str, Union[Mapping[Any, Any], Sequence[Any]]]], Any]"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "score", "type": "Any"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "record", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "opt", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "evaluate", "type": "Callable[[Union[Container[Any], Mapping[str, Any]], Mapping[str, Union[Mapping[Any, Any], Sequence[Any]]]], Any]"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "score", "type": "Any"}, {"lineNumber": 117, "col_offset": 38, "nodeName": "record", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "opt", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "record", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "score", "type": "Any"}, {"lineNumber": 127, "col_offset": 13, "nodeName": "Reader", "type": "Type[mlbox.preprocessing.reader.Reader]"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "train_test_split", "type": "Callable[[Iterable[Any], str], Dict[str, Any]]"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "Drift_thresholder", "type": "Type[mlbox.preprocessing.drift_thresholder.Drift_thresholder]"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "fit_transform", "type": "Callable"}, {"lineNumber": 133, "col_offset": 56, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 135, "col_offset": 38, "nodeName": "record", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "opt", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "dict_error", "type": "Dict[str, Any]"}, {"lineNumber": 139, "col_offset": 27, "nodeName": "astype", "type": "Any"}, {"lineNumber": 139, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "score", "type": "Any"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "record", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "opt", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "evaluate", "type": "Callable[[Union[Container[Any], Mapping[str, Any]], Mapping[str, Union[Mapping[Any, Any], Sequence[Any]]]], Any]"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "score", "type": "Any"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "optimise", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "space", "type": "Dict[str, Union[Dict[str, Union[List[int], str]], Dict[str, Union[List[float], str]], Dict[str, Union[List[str], str]]]]"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 18, "col_offset": 22, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "Optimiser", "type": "Type[mlbox.optimisation.optimiser.Optimiser]"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "optimiser", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "optimiser", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "optimiser", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "optimiser", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "Optimiser", "type": "Type[mlbox.optimisation.optimiser.Optimiser]"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "get_params", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "Optimiser", "type": "Type[mlbox.optimisation.optimiser.Optimiser]"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "optimiser", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "optimiser", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "optimiser", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "optimiser", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "optimiser", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "optimiser", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "optimiser", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "optimiser", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "optimiser", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "optimiser", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "reader", "type": "mlbox.preprocessing.reader.Reader"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "drift_thresholder", "type": "mlbox.preprocessing.drift_thresholder.Drift_thresholder"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "Optimiser", "type": "Type[mlbox.optimisation.optimiser.Optimiser]"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "opt", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "Inf", "type": "Any"}, {"lineNumber": 76, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "Optimiser", "type": "Type[mlbox.optimisation.optimiser.Optimiser]"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "opt", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 82, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "Optimiser", "type": "Type[mlbox.optimisation.optimiser.Optimiser]"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "evaluate", "type": "Callable[[Union[Container[Any], Mapping[str, Any]], Mapping[str, Union[Mapping[Any, Any], Sequence[Any]]]], Any]"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "opt", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "reader", "type": "mlbox.preprocessing.reader.Reader"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "drift_thresholder", "type": "mlbox.preprocessing.drift_thresholder.Drift_thresholder"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 106, "col_offset": 14, "nodeName": "Optimiser", "type": "Type[mlbox.optimisation.optimiser.Optimiser]"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "opt", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "Inf", "type": "Any"}, {"lineNumber": 111, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 112, "col_offset": 14, "nodeName": "Optimiser", "type": "Type[mlbox.optimisation.optimiser.Optimiser]"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "opt", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "Inf", "type": "Any"}, {"lineNumber": 117, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "Optimiser", "type": "Type[mlbox.optimisation.optimiser.Optimiser]"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 120, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "evaluate", "type": "Callable[[Union[Container[Any], Mapping[str, Any]], Mapping[str, Union[Mapping[Any, Any], Sequence[Any]]]], Any]"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "Inf", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "reader", "type": "mlbox.preprocessing.reader.Reader"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "drift_thresholder", "type": "mlbox.preprocessing.drift_thresholder.Drift_thresholder"}, {"lineNumber": 135, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 135, "col_offset": 22, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 136, "col_offset": 14, "nodeName": "Optimiser", "type": "Type[mlbox.optimisation.optimiser.Optimiser]"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 140, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "evaluate", "type": "Callable[[Union[Container[Any], Mapping[str, Any]], Mapping[str, Union[Mapping[Any, Any], Sequence[Any]]]], Any]"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "dict_error", "type": "Dict[str, Any]"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 143, "col_offset": 22, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 144, "col_offset": 14, "nodeName": "Optimiser", "type": "Type[mlbox.optimisation.optimiser.Optimiser]"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "opt", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "opt", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "best", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "optimiser", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "optimiser", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 70, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 76, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 82, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 85, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "opt", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "mape", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 111, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 117, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 120, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "opt", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 135, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 139, "col_offset": 27, "nodeName": "dict_error", "type": "Dict[str, Any]"}, {"lineNumber": 140, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "opt", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "pytest", "type": "Any"}]