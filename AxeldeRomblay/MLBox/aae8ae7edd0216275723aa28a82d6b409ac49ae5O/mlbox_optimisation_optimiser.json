[{"lineNumber": 79, "col_offset": 4, "nodeName": "get_params", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "evaluate", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 469, "col_offset": 4, "nodeName": "optimise", "type": "Callable[..., Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "to_path", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "to_path", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "ne", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "ce", "type": "Any"}, {"lineNumber": 319, "col_offset": 8, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "cache", "type": "bool"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "stck", "type": "Any"}, {"lineNumber": 360, "col_offset": 11, "nodeName": "cache", "type": "bool"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "start_time", "type": "float"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "set_params", "type": "bool"}, {"lineNumber": 454, "col_offset": 8, "nodeName": "out", "type": "str"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 467, "col_offset": 15, "nodeName": "score", "type": "Any"}, {"lineNumber": 530, "col_offset": 8, "nodeName": "hyperopt_objective", "type": "Callable[[Any], Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "to_path", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "k", "type": "str"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "items", "type": "Callable"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "NA_encoder", "type": "Any"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "Categorical_encoder", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "counts", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "classes_to_drop", "type": "Any"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "mask_to_drop", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "indexes_to_drop", "type": "Any"}, {"lineNumber": 178, "col_offset": 30, "nodeName": "index", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "est", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "fs", "type": "None"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 325, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 334, "col_offset": 12, "nodeName": "fs", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "cache", "type": "bool"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "fs", "type": "Any"}, {"lineNumber": 355, "col_offset": 20, "nodeName": "sort", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 361, "col_offset": 12, "nodeName": "pp", "type": "Any"}, {"lineNumber": 363, "col_offset": 12, "nodeName": "pp", "type": "Any"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 373, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 374, "col_offset": 12, "nodeName": "set_params", "type": "bool"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 445, "col_offset": 12, "nodeName": "score", "type": "Any"}, {"lineNumber": 456, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 456, "col_offset": 15, "nodeName": "s", "type": "Any"}, {"lineNumber": 456, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 457, "col_offset": 12, "nodeName": "out", "type": "str"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 534, "col_offset": 12, "nodeName": "space", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "warnings", "type": "module"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "k", "type": "str"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "value_counts", "type": "Any"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "apply", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 184, "col_offset": 17, "nodeName": "StratifiedKFold", "type": "Any"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "Classifier", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "params", "type": "Any"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "params", "type": "Any"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "scoring", "type": "str"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "scoring_func", "type": "str"}, {"lineNumber": 250, "col_offset": 14, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "indexes_to_drop", "type": "List[nothing]"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "est", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "fs", "type": "None"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "ne", "type": "Any"}, {"lineNumber": 319, "col_offset": 35, "nodeName": "ce", "type": "Any"}, {"lineNumber": 326, "col_offset": 34, "nodeName": "params", "type": "Any"}, {"lineNumber": 335, "col_offset": 34, "nodeName": "params", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 355, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 355, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 355, "col_offset": 33, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 358, "col_offset": 28, "nodeName": "est", "type": "Any"}, {"lineNumber": 361, "col_offset": 17, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 361, "col_offset": 26, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 363, "col_offset": 17, "nodeName": "Pipeline", "type": "Any"}, {"lineNumber": 363, "col_offset": 26, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 369, "col_offset": 21, "nodeName": "time", "type": "module"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "pp", "type": "Any"}, {"lineNumber": 380, "col_offset": 16, "nodeName": "set_params", "type": "bool"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 434, "col_offset": 16, "nodeName": "score", "type": "Any"}, {"lineNumber": 442, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 445, "col_offset": 22, "nodeName": "inf", "type": "Any"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 456, "col_offset": 30, "nodeName": "scores", "type": "Any"}, {"lineNumber": 535, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 538, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 550, "col_offset": 16, "nodeName": "hyper_space", "type": "Dict[Any, Any]"}, {"lineNumber": 552, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 593, "col_offset": 20, "nodeName": "verbose", "type": "Any"}, {"lineNumber": 602, "col_offset": 23, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "get_params", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "setattr", "type": "Callable[[Any, Union[bytearray, str, unicode], Any], None]"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "k", "type": "str"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "counts", "type": "Any"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 179, "col_offset": 28, "nodeName": "counts", "type": "Any"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 179, "col_offset": 42, "nodeName": "classes_to_drop", "type": "Any"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 184, "col_offset": 42, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 186, "col_offset": 46, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 220, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "scoring", "type": "str"}, {"lineNumber": 244, "col_offset": 20, "nodeName": "scoring_func", "type": "Any"}, {"lineNumber": 244, "col_offset": 35, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 255, "col_offset": 17, "nodeName": "KFold", "type": "Any"}, {"lineNumber": 261, "col_offset": 18, "nodeName": "Regressor", "type": "Any"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "params", "type": "Any"}, {"lineNumber": 267, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "params", "type": "Any"}, {"lineNumber": 277, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "scoring", "type": "str"}, {"lineNumber": 288, "col_offset": 16, "nodeName": "scoring_func", "type": "str"}, {"lineNumber": 312, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 328, "col_offset": 20, "nodeName": "cache", "type": "bool"}, {"lineNumber": 337, "col_offset": 20, "nodeName": "cache", "type": "bool"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 351, "col_offset": 31, "nodeName": "fs", "type": "Any"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "pipe", "type": "List[Union[Tuple[str, Any], Tuple[Any, Any]]]"}, {"lineNumber": 356, "col_offset": 25, "nodeName": "stck", "type": "Any"}, {"lineNumber": 361, "col_offset": 39, "nodeName": "to_path", "type": "Any"}, {"lineNumber": 379, "col_offset": 21, "nodeName": "set_params", "type": "Any"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "set_params", "type": "bool"}, {"lineNumber": 396, "col_offset": 20, "nodeName": "fs", "type": "Any"}, {"lineNumber": 400, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 400, "col_offset": 23, "nodeName": "stck", "type": "Any"}, {"lineNumber": 400, "col_offset": 31, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 402, "col_offset": 20, "nodeName": "stck_params", "type": "Any"}, {"lineNumber": 429, "col_offset": 25, "nodeName": "cross_val_score", "type": "Any"}, {"lineNumber": 434, "col_offset": 24, "nodeName": "mean", "type": "Any"}, {"lineNumber": 434, "col_offset": 32, "nodeName": "scores", "type": "Any"}, {"lineNumber": 438, "col_offset": 16, "nodeName": "scores", "type": "List[Any]"}, {"lineNumber": 439, "col_offset": 16, "nodeName": "score", "type": "Any"}, {"lineNumber": 445, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 446, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 530, "col_offset": 45, "nodeName": "evaluate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 530, "col_offset": 59, "nodeName": "params", "type": "Any"}, {"lineNumber": 530, "col_offset": 67, "nodeName": "df", "type": "Any"}, {"lineNumber": 535, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 542, "col_offset": 16, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 542, "col_offset": 20, "nodeName": "space", "type": "Any"}, {"lineNumber": 543, "col_offset": 16, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 546, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 552, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 577, "col_offset": 30, "nodeName": "fmin", "type": "Any"}, {"lineNumber": 577, "col_offset": 35, "nodeName": "hyperopt_objective", "type": "Callable[[Any], Any]"}, {"lineNumber": 584, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 584, "col_offset": 23, "nodeName": "v", "type": "Any"}, {"lineNumber": 584, "col_offset": 28, "nodeName": "items", "type": "Any"}, {"lineNumber": 593, "col_offset": 20, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "to_path", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "warnings", "type": "module"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "df", "type": "Any"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "df", "type": "Any"}, {"lineNumber": 177, "col_offset": 56, "nodeName": "x", "type": "Any"}, {"lineNumber": 177, "col_offset": 61, "nodeName": "classes_to_drop", "type": "Any"}, {"lineNumber": 178, "col_offset": 30, "nodeName": "df", "type": "Any"}, {"lineNumber": 178, "col_offset": 43, "nodeName": "mask_to_drop", "type": "Any"}, {"lineNumber": 184, "col_offset": 42, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 186, "col_offset": 46, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 196, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "fs", "type": "Any"}, {"lineNumber": 206, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 221, "col_offset": 24, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 224, "col_offset": 34, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 239, "col_offset": 24, "nodeName": "scoring", "type": "str"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "scoring_func", "type": "str"}, {"lineNumber": 244, "col_offset": 35, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 250, "col_offset": 14, "nodeName": "df", "type": "Any"}, {"lineNumber": 255, "col_offset": 32, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 257, "col_offset": 36, "nodeName": "random_state", "type": "Any"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "keys", "type": "Any"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 291, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 308, "col_offset": 20, "nodeName": "scoring", "type": "str"}, {"lineNumber": 309, "col_offset": 20, "nodeName": "scoring_func", "type": "Any"}, {"lineNumber": 309, "col_offset": 35, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 327, "col_offset": 19, "nodeName": "params", "type": "Any"}, {"lineNumber": 336, "col_offset": 19, "nodeName": "params", "type": "Any"}, {"lineNumber": 356, "col_offset": 31, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 361, "col_offset": 39, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 379, "col_offset": 21, "nodeName": "pp", "type": "Any"}, {"lineNumber": 379, "col_offset": 37, "nodeName": "params", "type": "Any"}, {"lineNumber": 400, "col_offset": 41, "nodeName": "sort", "type": "Any"}, {"lineNumber": 402, "col_offset": 34, "nodeName": "copy", "type": "Any"}, {"lineNumber": 413, "col_offset": 24, "nodeName": "j", "type": "int"}, {"lineNumber": 413, "col_offset": 27, "nodeName": "model", "type": "Any"}, {"lineNumber": 413, "col_offset": 36, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 429, "col_offset": 51, "nodeName": "pp", "type": "Any"}, {"lineNumber": 432, "col_offset": 49, "nodeName": "scoring_func", "type": "Union[str, Any]"}, {"lineNumber": 433, "col_offset": 44, "nodeName": "cv", "type": "Any"}, {"lineNumber": 434, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 439, "col_offset": 25, "nodeName": "inf", "type": "Any"}, {"lineNumber": 457, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 457, "col_offset": 59, "nodeName": "s", "type": "Any"}, {"lineNumber": 461, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 461, "col_offset": 63, "nodeName": "score", "type": "Any"}, {"lineNumber": 464, "col_offset": 58, "nodeName": "start_time", "type": "float"}, {"lineNumber": 530, "col_offset": 45, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 543, "col_offset": 16, "nodeName": "warnings", "type": "module"}, {"lineNumber": 552, "col_offset": 25, "nodeName": "space", "type": "Any"}, {"lineNumber": 578, "col_offset": 41, "nodeName": "hyper_space", "type": "Dict[Any, Any]"}, {"lineNumber": 579, "col_offset": 40, "nodeName": "suggest", "type": "Any"}, {"lineNumber": 580, "col_offset": 45, "nodeName": "max_evals", "type": "Any"}, {"lineNumber": 584, "col_offset": 28, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 600, "col_offset": 26, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 77, "col_offset": 27, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 176, "col_offset": 37, "nodeName": "counts", "type": "Any"}, {"lineNumber": 176, "col_offset": 46, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 198, "col_offset": 29, "nodeName": "Clf_feature_selector", "type": "Any"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 209, "col_offset": 24, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 209, "col_offset": 49, "nodeName": "StackingClassifier", "type": "Any"}, {"lineNumber": 220, "col_offset": 25, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 221, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 224, "col_offset": 34, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 227, "col_offset": 27, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 228, "col_offset": 28, "nodeName": "scoring_func", "type": "Any"}, {"lineNumber": 228, "col_offset": 43, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 255, "col_offset": 32, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 257, "col_offset": 36, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 267, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 269, "col_offset": 24, "nodeName": "fs", "type": "Any"}, {"lineNumber": 277, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 278, "col_offset": 24, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 291, "col_offset": 20, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 292, "col_offset": 24, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 298, "col_offset": 24, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 298, "col_offset": 34, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 299, "col_offset": 24, "nodeName": "scoring_func", "type": "Any"}, {"lineNumber": 299, "col_offset": 39, "nodeName": "scoring", "type": "Any"}, {"lineNumber": 305, "col_offset": 24, "nodeName": "scoring", "type": "str"}, {"lineNumber": 306, "col_offset": 24, "nodeName": "scoring_func", "type": "str"}, {"lineNumber": 309, "col_offset": 35, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 356, "col_offset": 36, "nodeName": "stck", "type": "Any"}, {"lineNumber": 392, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 394, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 400, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 400, "col_offset": 49, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 400, "col_offset": 54, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 404, "col_offset": 47, "nodeName": "k", "type": "Any"}, {"lineNumber": 413, "col_offset": 46, "nodeName": "stck_params", "type": "Any"}, {"lineNumber": 420, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 430, "col_offset": 43, "nodeName": "drop", "type": "Any"}, {"lineNumber": 430, "col_offset": 60, "nodeName": "indexes_to_drop", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 431, "col_offset": 43, "nodeName": "drop", "type": "Any"}, {"lineNumber": 431, "col_offset": 61, "nodeName": "indexes_to_drop", "type": "Union[Any, List[nothing]]"}, {"lineNumber": 438, "col_offset": 27, "nodeName": "inf", "type": "Any"}, {"lineNumber": 438, "col_offset": 38, "nodeName": "_", "type": "int"}, {"lineNumber": 439, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 463, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 464, "col_offset": 44, "nodeName": "time", "type": "Callable[[], float]"}, {"lineNumber": 554, "col_offset": 39, "nodeName": "space", "type": "Any"}, {"lineNumber": 555, "col_offset": 30, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 579, "col_offset": 40, "nodeName": "tpe", "type": "Any"}, {"lineNumber": 585, "col_offset": 36, "nodeName": "space", "type": "Any"}, {"lineNumber": 591, "col_offset": 24, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 176, "col_offset": 46, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 228, "col_offset": 43, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "warnings", "type": "module"}, {"lineNumber": 268, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 269, "col_offset": 29, "nodeName": "Reg_feature_selector", "type": "Any"}, {"lineNumber": 278, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 280, "col_offset": 24, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 280, "col_offset": 49, "nodeName": "StackingRegressor", "type": "Any"}, {"lineNumber": 291, "col_offset": 25, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 292, "col_offset": 24, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 298, "col_offset": 34, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 299, "col_offset": 39, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 302, "col_offset": 24, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 392, "col_offset": 47, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 394, "col_offset": 60, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 398, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 402, "col_offset": 34, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 404, "col_offset": 52, "nodeName": "keys", "type": "Any"}, {"lineNumber": 405, "col_offset": 43, "nodeName": "k", "type": "Any"}, {"lineNumber": 411, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 411, "col_offset": 52, "nodeName": "stck_params_display", "type": "Dict[Any, Any]"}, {"lineNumber": 421, "col_offset": 20, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 438, "col_offset": 27, "nodeName": "np", "type": "module"}, {"lineNumber": 438, "col_offset": 43, "nodeName": "range", "type": "Callable[..., List[int]]"}, {"lineNumber": 438, "col_offset": 49, "nodeName": "n_folds", "type": "Any"}, {"lineNumber": 457, "col_offset": 18, "nodeName": "out", "type": "str"}, {"lineNumber": 457, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 461, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 461, "col_offset": 40, "nodeName": "scoring", "type": "Union[str, Any]"}, {"lineNumber": 463, "col_offset": 61, "nodeName": "scores", "type": "Any"}, {"lineNumber": 464, "col_offset": 44, "nodeName": "time", "type": "module"}, {"lineNumber": 554, "col_offset": 45, "nodeName": "p", "type": "Any"}, {"lineNumber": 560, "col_offset": 40, "nodeName": "space", "type": "Any"}, {"lineNumber": 575, "col_offset": 28, "nodeName": "hyper_space", "type": "Dict[Any, Any]"}, {"lineNumber": 575, "col_offset": 45, "nodeName": "choice", "type": "Any"}, {"lineNumber": 575, "col_offset": 55, "nodeName": "p", "type": "Any"}, {"lineNumber": 585, "col_offset": 42, "nodeName": "p", "type": "Any"}, {"lineNumber": 587, "col_offset": 28, "nodeName": "best_params", "type": "Any"}, {"lineNumber": 591, "col_offset": 36, "nodeName": "p", "type": "Any"}, {"lineNumber": 591, "col_offset": 59, "nodeName": "v", "type": "Any"}, {"lineNumber": 302, "col_offset": 24, "nodeName": "warnings", "type": "module"}, {"lineNumber": 392, "col_offset": 47, "nodeName": "ne", "type": "Any"}, {"lineNumber": 394, "col_offset": 60, "nodeName": "ce", "type": "Any"}, {"lineNumber": 398, "col_offset": 57, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 404, "col_offset": 52, "nodeName": "stck_params", "type": "Any"}, {"lineNumber": 416, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 430, "col_offset": 43, "nodeName": "df", "type": "Any"}, {"lineNumber": 431, "col_offset": 43, "nodeName": "df", "type": "Any"}, {"lineNumber": 438, "col_offset": 49, "nodeName": "self", "type": "Optimiser"}, {"lineNumber": 457, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 463, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 556, "col_offset": 67, "nodeName": "p", "type": "Any"}, {"lineNumber": 560, "col_offset": 46, "nodeName": "p", "type": "Any"}, {"lineNumber": 563, "col_offset": 49, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 563, "col_offset": 60, "nodeName": "p", "type": "Any"}, {"lineNumber": 575, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 575, "col_offset": 45, "nodeName": "hp", "type": "Any"}, {"lineNumber": 586, "col_offset": 28, "nodeName": "space", "type": "Any"}, {"lineNumber": 587, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 587, "col_offset": 63, "nodeName": "v", "type": "Any"}, {"lineNumber": 591, "col_offset": 41, "nodeName": "space", "type": "Any"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "split", "type": "Any"}, {"lineNumber": 398, "col_offset": 57, "nodeName": "fs", "type": "Any"}, {"lineNumber": 402, "col_offset": 34, "nodeName": "STCK", "type": "Dict[Any, Any]"}, {"lineNumber": 411, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 416, "col_offset": 36, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 421, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 422, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 463, "col_offset": 20, "nodeName": "out", "type": "str"}, {"lineNumber": 463, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 562, "col_offset": 32, "nodeName": "space", "type": "Any"}, {"lineNumber": 563, "col_offset": 44, "nodeName": "p", "type": "Any"}, {"lineNumber": 563, "col_offset": 49, "nodeName": "hp", "type": "Any"}, {"lineNumber": 567, "col_offset": 32, "nodeName": "hyper_space", "type": "Dict[Any, Any]"}, {"lineNumber": 567, "col_offset": 49, "nodeName": "choice", "type": "Any"}, {"lineNumber": 567, "col_offset": 59, "nodeName": "p", "type": "Any"}, {"lineNumber": 569, "col_offset": 38, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 575, "col_offset": 58, "nodeName": "space", "type": "Any"}, {"lineNumber": 586, "col_offset": 34, "nodeName": "p", "type": "Any"}, {"lineNumber": 587, "col_offset": 45, "nodeName": "space", "type": "Any"}, {"lineNumber": 591, "col_offset": 47, "nodeName": "p", "type": "Any"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 280, "col_offset": 29, "nodeName": "split", "type": "Any"}, {"lineNumber": 402, "col_offset": 39, "nodeName": "stck", "type": "Any"}, {"lineNumber": 411, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 421, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 422, "col_offset": 32, "nodeName": "items", "type": "Any"}, {"lineNumber": 562, "col_offset": 38, "nodeName": "p", "type": "Any"}, {"lineNumber": 563, "col_offset": 63, "nodeName": "sort", "type": "Any"}, {"lineNumber": 564, "col_offset": 60, "nodeName": "sort", "type": "Any"}, {"lineNumber": 566, "col_offset": 34, "nodeName": "space", "type": "Any"}, {"lineNumber": 567, "col_offset": 44, "nodeName": "p", "type": "Any"}, {"lineNumber": 567, "col_offset": 49, "nodeName": "hp", "type": "Any"}, {"lineNumber": 575, "col_offset": 64, "nodeName": "p", "type": "Any"}, {"lineNumber": 587, "col_offset": 51, "nodeName": "p", "type": "Any"}, {"lineNumber": 280, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 416, "col_offset": 41, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 417, "col_offset": 43, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 563, "col_offset": 63, "nodeName": "np", "type": "module"}, {"lineNumber": 564, "col_offset": 60, "nodeName": "np", "type": "module"}, {"lineNumber": 566, "col_offset": 40, "nodeName": "p", "type": "Any"}, {"lineNumber": 567, "col_offset": 62, "nodeName": "space", "type": "Any"}, {"lineNumber": 571, "col_offset": 61, "nodeName": "p", "type": "Any"}, {"lineNumber": 416, "col_offset": 46, "nodeName": "items", "type": "Any"}, {"lineNumber": 417, "col_offset": 48, "nodeName": "items", "type": "Any"}, {"lineNumber": 421, "col_offset": 30, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 422, "col_offset": 32, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 563, "col_offset": 71, "nodeName": "space", "type": "Any"}, {"lineNumber": 564, "col_offset": 68, "nodeName": "space", "type": "Any"}, {"lineNumber": 567, "col_offset": 68, "nodeName": "p", "type": "Any"}, {"lineNumber": 421, "col_offset": 30, "nodeName": "est", "type": "Any"}, {"lineNumber": 564, "col_offset": 74, "nodeName": "p", "type": "Any"}, {"lineNumber": 416, "col_offset": 46, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 417, "col_offset": 48, "nodeName": "get_params", "type": "Any"}, {"lineNumber": 422, "col_offset": 32, "nodeName": "get_estimator", "type": "Any"}, {"lineNumber": 416, "col_offset": 46, "nodeName": "model", "type": "Any"}, {"lineNumber": 422, "col_offset": 32, "nodeName": "est", "type": "Any"}, {"lineNumber": 417, "col_offset": 48, "nodeName": "get_estimator", "type": "Any"}, {"lineNumber": 417, "col_offset": 48, "nodeName": "model", "type": "Any"}]