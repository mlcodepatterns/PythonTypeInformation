[{"lineNumber": 10, "col_offset": 0, "nodeName": "test_init_NA_encoder", "type": "Callable[[], Any]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "test_get_params_NA_encoder", "type": "Callable[[], Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "test_set_params_NA_encoder", "type": "Callable[[], Any]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "test_fit_NA_encoder", "type": "Callable[[], Any]"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "test_transform_NA_encoder", "type": "Callable[[], Any]"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "dict", "type": "Dict[str, str]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "_NA_encoder__fitOK", "type": "bool"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "_NA_encoder__fitOK", "type": "bool"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "_NA_encoder__fitOK", "type": "bool"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "_NA_encoder__fitOK", "type": "bool"}, {"lineNumber": 71, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "_NA_encoder__fitOK", "type": "bool"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "df", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "df_encoded", "type": "Any"}, {"lineNumber": 11, "col_offset": 14, "nodeName": "NA_encoder", "type": "Type[mlbox.encoding.na_encoder.NA_encoder]"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "numerical_strategy", "type": "Any"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "categorical_strategy", "type": "Any"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "_NA_encoder__Lcat", "type": "Any"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "_NA_encoder__Lnum", "type": "Any"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "_NA_encoder__imp", "type": "Any"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "_NA_encoder__mode", "type": "Dict[Any, Any]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "_NA_encoder__fitOK", "type": "bool"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "NA_encoder", "type": "Type[mlbox.encoding.na_encoder.NA_encoder]"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "dict", "type": "Dict[str, str]"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "NA_encoder", "type": "Type[mlbox.encoding.na_encoder.NA_encoder]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "numerical_strategy", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "numerical_strategy", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "numerical_strategy", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "numerical_strategy", "type": "Any"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "categorical_strategy", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "categorical_strategy", "type": "Any"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "categorical_strategy", "type": "Any"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "record", "type": "Any"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "NA_encoder", "type": "Type[mlbox.encoding.na_encoder.NA_encoder]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "df", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "df", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "df", "type": "Any"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "df", "type": "Any"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 71, "col_offset": 14, "nodeName": "NA_encoder", "type": "Type[mlbox.encoding.na_encoder.NA_encoder]"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "df", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "df", "type": "Any"}, {"lineNumber": 82, "col_offset": 9, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 83, "col_offset": 14, "nodeName": "NA_encoder", "type": "Type[mlbox.encoding.na_encoder.NA_encoder]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "df", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 87, "col_offset": 35, "nodeName": "df", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "all", "type": "Any"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 14, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 15, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 17, "col_offset": 40, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "get_params", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 47, "col_offset": 9, "nodeName": "warns", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "UserWarning", "type": "Type[UserWarning]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "set_params", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "record", "type": "Any"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "df", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "df", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "df", "type": "Any"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "df", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "df", "type": "Any"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "fit", "type": "Callable"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "df", "type": "Any"}, {"lineNumber": 74, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "df", "type": "Any"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "df", "type": "Any"}, {"lineNumber": 82, "col_offset": 9, "nodeName": "pd", "type": "Any"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "transform", "type": "Callable[[Any], Any]"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "df", "type": "Any"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "df", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 47, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 56, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "df", "type": "Any"}, {"lineNumber": 72, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "df", "type": "Any"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "encoder", "type": "mlbox.encoding.na_encoder.NA_encoder"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "columns", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "columns", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "df", "type": "Any"}, {"lineNumber": 88, "col_offset": 26, "nodeName": "df_encoded", "type": "Any"}]