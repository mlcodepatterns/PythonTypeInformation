[{"lineNumber": 8, "col_offset": 0, "nodeName": "paths", "type": "List[str]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "target_name", "type": "str"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "rd", "type": "mlbox.preprocessing.reader.Reader"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 22, "col_offset": 0, "nodeName": "dft", "type": "mlbox.preprocessing.drift_thresholder.Drift_thresholder"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "opt", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 65, "col_offset": 0, "nodeName": "best", "type": "Any"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "prd", "type": "mlbox.prediction.predictor.Predictor"}, {"lineNumber": 15, "col_offset": 5, "nodeName": "Reader", "type": "Type[mlbox.preprocessing.reader.Reader]"}, {"lineNumber": 20, "col_offset": 7, "nodeName": "train_test_split", "type": "Callable[[Any, Any], Dict[str, Any]]"}, {"lineNumber": 20, "col_offset": 27, "nodeName": "paths", "type": "List[str]"}, {"lineNumber": 20, "col_offset": 34, "nodeName": "target_name", "type": "str"}, {"lineNumber": 22, "col_offset": 6, "nodeName": "Drift_thresholder", "type": "Type[mlbox.preprocessing.drift_thresholder.Drift_thresholder]"}, {"lineNumber": 23, "col_offset": 7, "nodeName": "fit_transform", "type": "Callable"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 28, "col_offset": 6, "nodeName": "Optimiser", "type": "Type[mlbox.optimisation.optimiser.Optimiser]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "evaluate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 7, "nodeName": "optimise", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "space", "type": "Dict[str, Union[Dict[str, Union[str, List[int]]], Dict[str, Union[str, List[str]]], Dict[str, Union[str, List[float]]]]]"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 6, "nodeName": "Predictor", "type": "Type[mlbox.prediction.predictor.Predictor]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "fit_predict", "type": "Callable"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "best", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "dict", "type": "Dict[str, Any]"}, {"lineNumber": 20, "col_offset": 7, "nodeName": "rd", "type": "mlbox.preprocessing.reader.Reader"}, {"lineNumber": 23, "col_offset": 7, "nodeName": "dft", "type": "mlbox.preprocessing.drift_thresholder.Drift_thresholder"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "opt", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 65, "col_offset": 7, "nodeName": "opt", "type": "mlbox.optimisation.optimiser.Optimiser"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "prd", "type": "mlbox.prediction.predictor.Predictor"}]