[{"lineNumber": 158, "col_offset": 0, "nodeName": "run_genetic_algorithm", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 12, "col_offset": 23, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "__init__", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "get_results", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "load_log", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "assess_call", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "assess_bet", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "improve_strategy", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "L", "type": "Any"}, {"lineNumber": 164, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "logger", "type": "module"}, {"lineNumber": 167, "col_offset": 13, "nodeName": "logging", "type": "module"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "user_input", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "output", "type": "str"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "p_name", "type": "Any"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "current_strategy", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "output", "type": "Union[Any, str]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "gameResults", "type": "Dict[nothing, nothing]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "recommendation", "type": "Dict[Tuple[str, str], str]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "B", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "output", "type": "str"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "A", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "B", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "C", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "output", "type": "str"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "modified", "type": "bool"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "changed", "type": "int"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "maxChanges", "type": "int"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "changed", "type": "int"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "GameLogger", "type": "Any"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "GeneticAlgorithm", "type": "Type[GeneticAlgorithm]"}, {"lineNumber": 161, "col_offset": 21, "nodeName": "write", "type": "bool"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "logger", "type": "module"}, {"lineNumber": 161, "col_offset": 36, "nodeName": "L", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "basicConfig", "type": "Callable"}, {"lineNumber": 169, "col_offset": 4, "nodeName": "run_genetic_algorithm", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 33, "nodeName": "logger", "type": "module"}, {"lineNumber": 171, "col_offset": 17, "nodeName": "input", "type": "Callable[..., Any]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "getLogger", "type": "Callable"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "setLevel", "type": "Callable[[Union[int, str, unicode]], None]"}, {"lineNumber": 15, "col_offset": 29, "nodeName": "DEBUG", "type": "int"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "StrategyHandler", "type": "Type[poker.tools.strategy_handler.StrategyHandler]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "read_strategy", "type": "Callable[..., Any]"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "load_log", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "p_name", "type": "Any"}, {"lineNumber": 21, "col_offset": 30, "nodeName": "L", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "improve_strategy", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 22, "col_offset": 30, "nodeName": "L", "type": "Any"}, {"lineNumber": 22, "col_offset": 33, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 27, "col_offset": 38, "nodeName": "current_strategy", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "get_stacked_bar_data", "type": "Any"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "p_name", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "A", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "B", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "A", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "changed", "type": "int"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "maxChanges", "type": "int"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "coeff1", "type": "int"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "coeff2", "type": "int"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "coeff3", "type": "int"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "coeff4", "type": "int"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "stage", "type": "str"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "decision", "type": "str"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "change", "type": "float"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "changed", "type": "int"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "maxChanges", "type": "int"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "coeff1", "type": "int"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "coeff2", "type": "float"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "coeff3", "type": "int"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "stage", "type": "str"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "decision", "type": "str"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "change", "type": "float"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "changed", "type": "int"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "maxChanges", "type": "int"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "coeff1", "type": "int"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "coeff2", "type": "float"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "coeff3", "type": "int"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "stage", "type": "str"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "decision", "type": "str"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "change", "type": "float"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "changed", "type": "int"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "maxChanges", "type": "int"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "coeff1", "type": "int"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "coeff2", "type": "float"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "coeff3", "type": "int"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "stage", "type": "str"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "decision", "type": "str"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "change", "type": "float"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "changed", "type": "int"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "modified", "type": "bool"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "changed", "type": "int"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "maxChanges", "type": "int"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "coeff1", "type": "int"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "stage", "type": "str"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "decision", "type": "str"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "change", "type": "float"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "changed", "type": "int"}, {"lineNumber": 134, "col_offset": 26, "nodeName": "maxChanges", "type": "int"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "coeff1", "type": "int"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "stage", "type": "str"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "decision", "type": "str"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "change", "type": "float"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "changed", "type": "int"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "maxChanges", "type": "int"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "coeff1", "type": "int"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "stage", "type": "str"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "decision", "type": "str"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "change", "type": "float"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "changed", "type": "int"}, {"lineNumber": 148, "col_offset": 26, "nodeName": "maxChanges", "type": "int"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "coeff1", "type": "int"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "stage", "type": "str"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "decision", "type": "str"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "change", "type": "float"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "changed", "type": "int"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "modified", "type": "bool"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "logger", "type": "module"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "logger", "type": "module"}, {"lineNumber": 168, "col_offset": 29, "nodeName": "DEBUG", "type": "int"}, {"lineNumber": 172, "col_offset": 7, "nodeName": "upper", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "run_genetic_algorithm", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 173, "col_offset": 39, "nodeName": "logger", "type": "module"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "logging", "type": "module"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 15, "col_offset": 29, "nodeName": "logging", "type": "module"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 20, "col_offset": 52, "nodeName": "p_name", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "modified", "type": "bool"}, {"lineNumber": 23, "col_offset": 55, "nodeName": "write_update", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "save_strategy_genetic_algorithm", "type": "Callable[[], None]"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "ConfigObj", "type": "Any"}, {"lineNumber": 26, "col_offset": 31, "nodeName": "CONFIG_FILENAME", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 27, "col_offset": 38, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "L", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "d", "type": "Any"}, {"lineNumber": 40, "col_offset": 73, "nodeName": "coeff1", "type": "int"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "d", "type": "Any"}, {"lineNumber": 41, "col_offset": 72, "nodeName": "coeff2", "type": "int"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "coeff3", "type": "int"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "recommendation", "type": "Dict[Tuple[str, str], str]"}, {"lineNumber": 46, "col_offset": 13, "nodeName": "A", "type": "Any"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "C", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "changed", "type": "int"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "d", "type": "Any"}, {"lineNumber": 62, "col_offset": 69, "nodeName": "coeff1", "type": "int"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "d", "type": "Any"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "d", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "d", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "B", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "recommendation", "type": "Dict[Tuple[str, str], str]"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "A", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "B", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "changed", "type": "int"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "assess_call", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "L", "type": "Any"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "decision", "type": "str"}, {"lineNumber": 95, "col_offset": 45, "nodeName": "stage", "type": "str"}, {"lineNumber": 95, "col_offset": 52, "nodeName": "coeff1", "type": "int"}, {"lineNumber": 95, "col_offset": 60, "nodeName": "coeff2", "type": "int"}, {"lineNumber": 95, "col_offset": 68, "nodeName": "coeff3", "type": "int"}, {"lineNumber": 95, "col_offset": 76, "nodeName": "coeff4", "type": "int"}, {"lineNumber": 95, "col_offset": 84, "nodeName": "change", "type": "float"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "assess_call", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "L", "type": "Any"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "decision", "type": "str"}, {"lineNumber": 104, "col_offset": 45, "nodeName": "stage", "type": "str"}, {"lineNumber": 104, "col_offset": 52, "nodeName": "coeff1", "type": "int"}, {"lineNumber": 104, "col_offset": 60, "nodeName": "coeff2", "type": "float"}, {"lineNumber": 104, "col_offset": 68, "nodeName": "coeff3", "type": "int"}, {"lineNumber": 104, "col_offset": 76, "nodeName": "coeff4", "type": "int"}, {"lineNumber": 104, "col_offset": 84, "nodeName": "change", "type": "float"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "assess_call", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 113, "col_offset": 32, "nodeName": "L", "type": "Any"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "decision", "type": "str"}, {"lineNumber": 113, "col_offset": 45, "nodeName": "stage", "type": "str"}, {"lineNumber": 113, "col_offset": 52, "nodeName": "coeff1", "type": "int"}, {"lineNumber": 113, "col_offset": 60, "nodeName": "coeff2", "type": "float"}, {"lineNumber": 113, "col_offset": 68, "nodeName": "coeff3", "type": "int"}, {"lineNumber": 113, "col_offset": 76, "nodeName": "coeff4", "type": "int"}, {"lineNumber": 113, "col_offset": 84, "nodeName": "change", "type": "float"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "assess_call", "type": "Callable[[Any, Any, Any, Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 122, "col_offset": 32, "nodeName": "L", "type": "Any"}, {"lineNumber": 122, "col_offset": 35, "nodeName": "decision", "type": "str"}, {"lineNumber": 122, "col_offset": 45, "nodeName": "stage", "type": "str"}, {"lineNumber": 122, "col_offset": 52, "nodeName": "coeff1", "type": "int"}, {"lineNumber": 122, "col_offset": 60, "nodeName": "coeff2", "type": "float"}, {"lineNumber": 122, "col_offset": 68, "nodeName": "coeff3", "type": "int"}, {"lineNumber": 122, "col_offset": 76, "nodeName": "coeff4", "type": "int"}, {"lineNumber": 122, "col_offset": 84, "nodeName": "change", "type": "float"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "assess_bet", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "L", "type": "Any"}, {"lineNumber": 132, "col_offset": 34, "nodeName": "decision", "type": "str"}, {"lineNumber": 132, "col_offset": 44, "nodeName": "stage", "type": "str"}, {"lineNumber": 132, "col_offset": 51, "nodeName": "coeff1", "type": "int"}, {"lineNumber": 132, "col_offset": 59, "nodeName": "change", "type": "float"}, {"lineNumber": 134, "col_offset": 11, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "assess_bet", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "L", "type": "Any"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "decision", "type": "str"}, {"lineNumber": 139, "col_offset": 44, "nodeName": "stage", "type": "str"}, {"lineNumber": 139, "col_offset": 51, "nodeName": "coeff1", "type": "int"}, {"lineNumber": 139, "col_offset": 59, "nodeName": "change", "type": "float"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "assess_bet", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 146, "col_offset": 28, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "L", "type": "Any"}, {"lineNumber": 146, "col_offset": 34, "nodeName": "decision", "type": "str"}, {"lineNumber": 146, "col_offset": 44, "nodeName": "stage", "type": "str"}, {"lineNumber": 146, "col_offset": 51, "nodeName": "coeff1", "type": "int"}, {"lineNumber": 146, "col_offset": 59, "nodeName": "change", "type": "float"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "assess_bet", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 153, "col_offset": 28, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "L", "type": "Any"}, {"lineNumber": 153, "col_offset": 34, "nodeName": "decision", "type": "str"}, {"lineNumber": 153, "col_offset": 44, "nodeName": "stage", "type": "str"}, {"lineNumber": 153, "col_offset": 51, "nodeName": "coeff1", "type": "int"}, {"lineNumber": 153, "col_offset": 59, "nodeName": "change", "type": "float"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 168, "col_offset": 29, "nodeName": "logging", "type": "module"}, {"lineNumber": 172, "col_offset": 7, "nodeName": "user_input", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 23, "col_offset": 30, "nodeName": "write_update", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "config", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "d", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "d", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "d", "type": "Any"}, {"lineNumber": 42, "col_offset": 42, "nodeName": "d", "type": "Any"}, {"lineNumber": 42, "col_offset": 69, "nodeName": "d", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "B", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "recommendation", "type": "Dict[Tuple[str, str], str]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "modify_strategy", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "modify_strategy", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "changed", "type": "int"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 58, "col_offset": 57, "nodeName": "recommendation", "type": "Dict[Tuple[str, str], str]"}, {"lineNumber": 59, "col_offset": 55, "nodeName": "recommendation", "type": "Dict[Tuple[str, str], str]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "d", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 63, "col_offset": 41, "nodeName": "L", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "d", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "recommendation", "type": "Dict[Tuple[str, str], str]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "modify_strategy", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "modify_strategy", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "C", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "changed", "type": "int"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 80, "col_offset": 57, "nodeName": "recommendation", "type": "Dict[Tuple[str, str], str]"}, {"lineNumber": 81, "col_offset": 55, "nodeName": "recommendation", "type": "Dict[Tuple[str, str], str]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "decision", "type": "str"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "stage", "type": "str"}, {"lineNumber": 40, "col_offset": 42, "nodeName": "L", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "decision", "type": "str"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "stage", "type": "str"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "L", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "L", "type": "Any"}, {"lineNumber": 42, "col_offset": 42, "nodeName": "L", "type": "Any"}, {"lineNumber": 42, "col_offset": 69, "nodeName": "L", "type": "Any"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "stage", "type": "str"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "decision", "type": "str"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "stage", "type": "str"}, {"lineNumber": 48, "col_offset": 56, "nodeName": "change", "type": "float"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "stage", "type": "str"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "A", "type": "Any"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "B", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "recommendation", "type": "Dict[Tuple[str, str], str]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "modify_strategy", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "modify_strategy", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "recommendation", "type": "Dict[Tuple[str, str], str]"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "decision", "type": "str"}, {"lineNumber": 58, "col_offset": 57, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "decision", "type": "str"}, {"lineNumber": 59, "col_offset": 55, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "stage", "type": "str"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "L", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "stage", "type": "str"}, {"lineNumber": 63, "col_offset": 54, "nodeName": "stage", "type": "str"}, {"lineNumber": 64, "col_offset": 23, "nodeName": "stage", "type": "str"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "L", "type": "Any"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "stage", "type": "str"}, {"lineNumber": 67, "col_offset": 39, "nodeName": "decision", "type": "str"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 70, "col_offset": 30, "nodeName": "stage", "type": "str"}, {"lineNumber": 70, "col_offset": 55, "nodeName": "change", "type": "float"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "stage", "type": "str"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "B", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "recommendation", "type": "Dict[Tuple[str, str], str]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "modify_strategy", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "modify_strategy", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "recommendation", "type": "Dict[Tuple[str, str], str]"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "decision", "type": "str"}, {"lineNumber": 80, "col_offset": 57, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "decision", "type": "str"}, {"lineNumber": 81, "col_offset": 55, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 40, "col_offset": 46, "nodeName": "decision", "type": "str"}, {"lineNumber": 40, "col_offset": 56, "nodeName": "stage", "type": "str"}, {"lineNumber": 41, "col_offset": 55, "nodeName": "stage", "type": "str"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "decision", "type": "str"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "stage", "type": "str"}, {"lineNumber": 42, "col_offset": 53, "nodeName": "stage", "type": "str"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "stage", "type": "str"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "stage", "type": "str"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "decision", "type": "str"}, {"lineNumber": 49, "col_offset": 52, "nodeName": "change", "type": "float"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "stage", "type": "str"}, {"lineNumber": 53, "col_offset": 56, "nodeName": "change", "type": "float"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "stage", "type": "str"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "stage", "type": "str"}, {"lineNumber": 58, "col_offset": 77, "nodeName": "stage", "type": "str"}, {"lineNumber": 58, "col_offset": 84, "nodeName": "decision", "type": "str"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "stage", "type": "str"}, {"lineNumber": 59, "col_offset": 75, "nodeName": "stage", "type": "str"}, {"lineNumber": 59, "col_offset": 82, "nodeName": "decision", "type": "str"}, {"lineNumber": 62, "col_offset": 51, "nodeName": "stage", "type": "str"}, {"lineNumber": 64, "col_offset": 51, "nodeName": "stage", "type": "str"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "stage", "type": "str"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "decision", "type": "str"}, {"lineNumber": 71, "col_offset": 51, "nodeName": "change", "type": "float"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "stage", "type": "str"}, {"lineNumber": 75, "col_offset": 55, "nodeName": "change", "type": "float"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "p", "type": "poker.tools.strategy_handler.StrategyHandler"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "stage", "type": "str"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "GeneticAlgorithm"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "stage", "type": "str"}, {"lineNumber": 80, "col_offset": 77, "nodeName": "stage", "type": "str"}, {"lineNumber": 80, "col_offset": 84, "nodeName": "decision", "type": "str"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "stage", "type": "str"}, {"lineNumber": 81, "col_offset": 75, "nodeName": "stage", "type": "str"}, {"lineNumber": 81, "col_offset": 82, "nodeName": "decision", "type": "str"}, {"lineNumber": 52, "col_offset": 32, "nodeName": "stage", "type": "str"}, {"lineNumber": 52, "col_offset": 39, "nodeName": "decision", "type": "str"}, {"lineNumber": 54, "col_offset": 52, "nodeName": "change", "type": "float"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "stage", "type": "str"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "decision", "type": "str"}, {"lineNumber": 74, "col_offset": 32, "nodeName": "stage", "type": "str"}, {"lineNumber": 74, "col_offset": 39, "nodeName": "decision", "type": "str"}, {"lineNumber": 76, "col_offset": 51, "nodeName": "change", "type": "float"}, {"lineNumber": 79, "col_offset": 32, "nodeName": "stage", "type": "str"}, {"lineNumber": 79, "col_offset": 39, "nodeName": "decision", "type": "str"}]