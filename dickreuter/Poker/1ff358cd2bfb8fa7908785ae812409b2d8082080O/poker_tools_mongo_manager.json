[{"lineNumber": 68, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 196, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 667, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 668, "col_offset": 4, "nodeName": "p_name", "type": "str"}, {"lineNumber": 669, "col_offset": 4, "nodeName": "p_value", "type": "str"}, {"lineNumber": 674, "col_offset": 4, "nodeName": "game_stage", "type": "str"}, {"lineNumber": 675, "col_offset": 4, "nodeName": "decision", "type": "str"}, {"lineNumber": 676, "col_offset": 4, "nodeName": "t1", "type": "Tuple[int, int, int]"}, {"lineNumber": 677, "col_offset": 4, "nodeName": "t2", "type": "Tuple[float, float, int]"}, {"lineNumber": 679, "col_offset": 4, "nodeName": "L", "type": "GameLogger"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "mongoclient", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "POKER", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "file_name", "type": "str"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "current_version", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "dl_link", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "latest_updates", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "preflop_url", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "preflop_url_backup", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "mongoclient", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "POKER", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "last_strategy", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "current_strategy", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "r", "type": "Pattern[str]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "m", "type": "Match[str]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "stringPart", "type": "str"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "numberPart", "type": "int"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "numberPart", "type": "int"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "suffix", "type": "str"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "new_strategy_name", "type": "str"}, {"lineNumber": 158, "col_offset": 45, "nodeName": "new_strategy_name", "type": "str"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "current_strategy", "type": "str"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "new_strategy_name", "type": "str"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "modified", "type": "bool"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "instance", "type": "None"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "instance", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "mongoclient", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "POKER", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "hDict", "type": "Dict[str, str]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "tDict", "type": "Dict[str, str]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "dDict", "type": "Dict[str, str]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "pDict", "type": "Dict[Union[Any, str], Union[Any, str]]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "Dh", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "Dt", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "Dd", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "Dp", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "FinalDataFrame", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "rec", "type": "Any"}, {"lineNumber": 238, "col_offset": 31, "nodeName": "other_players", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "outcome", "type": "str"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "package", "type": "Dict[str, Union[Any, str, datetime.datetime]]"}, {"lineNumber": 292, "col_offset": 32, "nodeName": "gamenumber", "type": "Any"}, {"lineNumber": 293, "col_offset": 27, "nodeName": "mycards", "type": "Any"}, {"lineNumber": 295, "col_offset": 30, "nodeName": "current_strategy", "type": "Any"}, {"lineNumber": 297, "col_offset": 31, "nodeName": "gamestage", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "t_write_db", "type": "threading.Thread"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "daemon", "type": "bool"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "gamenumber_part", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "computername", "type": "str"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "record", "type": "Dict[Any, Any]"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "player_dropped_out", "type": "bool"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 343, "col_offset": 8, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 345, "col_offset": 15, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "gameStages", "type": "List[str]"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "outcome", "type": "str"}, {"lineNumber": 355, "col_offset": 23, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 375, "col_offset": 12, "nodeName": "e", "type": "Any"}, {"lineNumber": 375, "col_offset": 17, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 378, "col_offset": 8, "nodeName": "numbers", "type": "List[List[Any]]"}, {"lineNumber": 430, "col_offset": 15, "nodeName": "FinalData", "type": "List[List[Any]]"}, {"lineNumber": 434, "col_offset": 8, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 448, "col_offset": 8, "nodeName": "equity_win", "type": "List[Any]"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 465, "col_offset": 8, "nodeName": "equity_loss", "type": "List[Any]"}, {"lineNumber": 467, "col_offset": 8, "nodeName": "equity_win", "type": "List[float]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "equity_loss", "type": "List[float]"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 486, "col_offset": 15, "nodeName": "games", "type": "Any"}, {"lineNumber": 489, "col_offset": 8, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 502, "col_offset": 15, "nodeName": "change", "type": "Any"}, {"lineNumber": 516, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 521, "col_offset": 15, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 524, "col_offset": 8, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 525, "col_offset": 15, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 529, "col_offset": 8, "nodeName": "wins", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "losses", "type": "Any"}, {"lineNumber": 569, "col_offset": 8, "nodeName": "wins", "type": "Any"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "losses", "type": "Any"}, {"lineNumber": 576, "col_offset": 8, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 597, "col_offset": 8, "nodeName": "L", "type": "GameLogger"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "df", "type": "Any"}, {"lineNumber": 602, "col_offset": 8, "nodeName": "smallBlind", "type": "float"}, {"lineNumber": 603, "col_offset": 8, "nodeName": "bigBlind", "type": "float"}, {"lineNumber": 604, "col_offset": 8, "nodeName": "maxValue", "type": "int"}, {"lineNumber": 605, "col_offset": 8, "nodeName": "maxEquity", "type": "int"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "max_X", "type": "int"}, {"lineNumber": 613, "col_offset": 12, "nodeName": "pw", "type": "Any"}, {"lineNumber": 622, "col_offset": 8, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 632, "col_offset": 8, "nodeName": "player_list", "type": "List[Any]"}, {"lineNumber": 637, "col_offset": 8, "nodeName": "player_list", "type": "List[nothing]"}, {"lineNumber": 638, "col_offset": 8, "nodeName": "flat_list", "type": "List[nothing]"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "counted", "type": "Counter[nothing]"}, {"lineNumber": 640, "col_offset": 8, "nodeName": "sorted_dict", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 641, "col_offset": 15, "nodeName": "sorted_dict", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 644, "col_offset": 8, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 657, "col_offset": 8, "nodeName": "precence", "type": "Dict[Any, Any]"}, {"lineNumber": 664, "col_offset": 15, "nodeName": "flop_presence", "type": "Any"}, {"lineNumber": 679, "col_offset": 8, "nodeName": "GameLogger", "type": "Type[GameLogger]"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "UpdateChecker"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "MongoClient", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "UpdateChecker"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "mongoclient", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "UpdateChecker"}, {"lineNumber": 26, "col_offset": 43, "nodeName": "f", "type": "BinaryIO"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "response", "type": "requests.models.Response"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "total_length", "type": "Optional[str]"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "find", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "next", "type": "Any"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "c", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "UpdateChecker"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "c", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "c", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "current_version", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "version", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "latest_update", "type": "Any"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "latest_updates", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "find", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "next", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "UpdateChecker"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "c", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "UpdateChecker"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "preflop_url", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "preflop_url_backup", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "MongoClient", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "mongoclient", "type": "Any"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "ConfigObj", "type": "Any"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "config", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "last_strategy", "type": "Any"}, {"lineNumber": 140, "col_offset": 78, "nodeName": "strategy_override", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "check_defaults", "type": "Callable[[], Any]"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "match", "type": "Callable"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "current_strategy", "type": "Any"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "group", "type": "Callable"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 157, "col_offset": 64, "nodeName": "suffix", "type": "str"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 158, "col_offset": 45, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "insert_one", "type": "Any"}, {"lineNumber": 161, "col_offset": 52, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "strategy_dict", "type": "Any"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "insert_one", "type": "Any"}, {"lineNumber": 165, "col_offset": 52, "nodeName": "strategy_dict", "type": "Any"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "update_one", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "insert_one", "type": "Any"}, {"lineNumber": 178, "col_offset": 52, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 181, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "__init__", "type": "Callable"}, {"lineNumber": 187, "col_offset": 39, "nodeName": "name", "type": "Any"}, {"lineNumber": 187, "col_offset": 45, "nodeName": "bases", "type": "Any"}, {"lineNumber": 187, "col_offset": 52, "nodeName": "dict", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "cls", "type": "Type[GameLogger]"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "instance", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "instance", "type": "nothing"}, {"lineNumber": 193, "col_offset": 15, "nodeName": "cls", "type": "Singleton"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 198, "col_offset": 27, "nodeName": "MongoClient", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "mongoclient", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 218, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "items", "type": "Any"}, {"lineNumber": 219, "col_offset": 25, "nodeName": "val", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 220, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "items", "type": "Callable"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "items", "type": "Callable"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 225, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "items", "type": "Callable"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "pDict", "type": "Dict[Union[Any, str], Union[Any, str]]"}, {"lineNumber": 229, "col_offset": 32, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 231, "col_offset": 26, "nodeName": "hDict", "type": "Dict[str, str]"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "tDict", "type": "Dict[str, str]"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "dDict", "type": "Dict[str, str]"}, {"lineNumber": 234, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "pDict", "type": "Dict[Union[Any, str], Union[Any, str]]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 236, "col_offset": 30, "nodeName": "concat", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "rec", "type": "Any"}, {"lineNumber": 238, "col_offset": 31, "nodeName": "t", "type": "Any"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "rec", "type": "Any"}, {"lineNumber": 239, "col_offset": 35, "nodeName": "utcnow", "type": "Callable"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "rec", "type": "Any"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "insert_one", "type": "Any"}, {"lineNumber": 241, "col_offset": 48, "nodeName": "rec", "type": "Any"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "myFundsChange", "type": "Any"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "outcome", "type": "str"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "wins", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "totalGames", "type": "Any"}, {"lineNumber": 257, "col_offset": 11, "nodeName": "histGameStage", "type": "Any"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 263, "col_offset": 16, "nodeName": "round", "type": "Any"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 270, "col_offset": 37, "nodeName": "lastGameID", "type": "Any"}, {"lineNumber": 273, "col_offset": 43, "nodeName": "outcome", "type": "str"}, {"lineNumber": 274, "col_offset": 41, "nodeName": "histGameStage", "type": "Any"}, {"lineNumber": 275, "col_offset": 47, "nodeName": "myFundsChange", "type": "Any"}, {"lineNumber": 277, "col_offset": 44, "nodeName": "histDecision", "type": "Any"}, {"lineNumber": 278, "col_offset": 42, "nodeName": "histEquity", "type": "Any"}, {"lineNumber": 279, "col_offset": 39, "nodeName": "current_strategy", "type": "Any"}, {"lineNumber": 280, "col_offset": 47, "nodeName": "version", "type": "Any"}, {"lineNumber": 281, "col_offset": 33, "nodeName": "ip", "type": "Any"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "package", "type": "Dict[str, Union[Any, str, datetime.datetime]]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "package", "type": "Dict[str, Union[Any, str, datetime.datetime]]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "package", "type": "Dict[str, Union[Any, str, datetime.datetime]]"}, {"lineNumber": 294, "col_offset": 34, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "package", "type": "Dict[str, Union[Any, str, datetime.datetime]]"}, {"lineNumber": 295, "col_offset": 30, "nodeName": "p", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "package", "type": "Dict[str, Union[Any, str, datetime.datetime]]"}, {"lineNumber": 296, "col_offset": 31, "nodeName": "utcnow", "type": "Callable"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "package", "type": "Dict[str, Union[Any, str, datetime.datetime]]"}, {"lineNumber": 298, "col_offset": 21, "nodeName": "Thread", "type": "Type[threading.Thread]"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "t_write_db", "type": "threading.Thread"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "start", "type": "Callable[[], None]"}, {"lineNumber": 303, "col_offset": 26, "nodeName": "gamenumber", "type": "Any"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 305, "col_offset": 17, "nodeName": "find", "type": "Any"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "document", "type": "Any"}, {"lineNumber": 311, "col_offset": 28, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 321, "col_offset": 15, "nodeName": "collusion_cards", "type": "Any"}, {"lineNumber": 321, "col_offset": 32, "nodeName": "player_dropped_out", "type": "bool"}, {"lineNumber": 324, "col_offset": 17, "nodeName": "aggregate", "type": "Any"}, {"lineNumber": 343, "col_offset": 18, "nodeName": "d", "type": "Any"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 349, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 355, "col_offset": 23, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 356, "col_offset": 16, "nodeName": "gameStage", "type": "str"}, {"lineNumber": 356, "col_offset": 29, "nodeName": "gameStages", "type": "List[str]"}, {"lineNumber": 360, "col_offset": 17, "nodeName": "aggregate", "type": "Any"}, {"lineNumber": 387, "col_offset": 11, "nodeName": "chartType", "type": "Any"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "Data", "type": "Dict[str, Union[List[List[Any]], List[str]]]"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "chartType", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "FinalData", "type": "List[List[Any]]"}, {"lineNumber": 434, "col_offset": 17, "nodeName": "aggregate", "type": "Any"}, {"lineNumber": 450, "col_offset": 17, "nodeName": "aggregate", "type": "Any"}, {"lineNumber": 470, "col_offset": 16, "nodeName": "equity_win", "type": "List[float]"}, {"lineNumber": 470, "col_offset": 28, "nodeName": "equity_loss", "type": "List[float]"}, {"lineNumber": 473, "col_offset": 17, "nodeName": "aggregate", "type": "Any"}, {"lineNumber": 482, "col_offset": 12, "nodeName": "games", "type": "Any"}, {"lineNumber": 489, "col_offset": 17, "nodeName": "aggregate", "type": "Any"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "change", "type": "Any"}, {"lineNumber": 506, "col_offset": 12, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 513, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 519, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 524, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 529, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 549, "col_offset": 17, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 569, "col_offset": 15, "nodeName": "wins", "type": "Any"}, {"lineNumber": 571, "col_offset": 17, "nodeName": "losses", "type": "Any"}, {"lineNumber": 573, "col_offset": 16, "nodeName": "wins", "type": "Any"}, {"lineNumber": 573, "col_offset": 22, "nodeName": "losses", "type": "Any"}, {"lineNumber": 576, "col_offset": 17, "nodeName": "aggregate", "type": "Any"}, {"lineNumber": 594, "col_offset": 15, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 597, "col_offset": 12, "nodeName": "GameLogger", "type": "Type[GameLogger]"}, {"lineNumber": 598, "col_offset": 13, "nodeName": "get_neural_training_data", "type": "Callable[[], Any]"}, {"lineNumber": 598, "col_offset": 40, "nodeName": "p_name", "type": "Any"}, {"lineNumber": 598, "col_offset": 48, "nodeName": "p_value", "type": "Any"}, {"lineNumber": 598, "col_offset": 57, "nodeName": "game_stage", "type": "Any"}, {"lineNumber": 598, "col_offset": 69, "nodeName": "decision", "type": "Any"}, {"lineNumber": 609, "col_offset": 12, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 610, "col_offset": 12, "nodeName": "d", "type": "Any"}, {"lineNumber": 613, "col_offset": 18, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 614, "col_offset": 16, "nodeName": "minEquity", "type": "Any"}, {"lineNumber": 622, "col_offset": 17, "nodeName": "aggregate", "type": "Any"}, {"lineNumber": 632, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 632, "col_offset": 27, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 637, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 638, "col_offset": 22, "nodeName": "item", "type": "nothing"}, {"lineNumber": 639, "col_offset": 18, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 639, "col_offset": 26, "nodeName": "flat_list", "type": "List[nothing]"}, {"lineNumber": 640, "col_offset": 22, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 644, "col_offset": 17, "nodeName": "aggregate", "type": "Any"}, {"lineNumber": 659, "col_offset": 12, "nodeName": "flop_presence", "type": "Any"}, {"lineNumber": 696, "col_offset": 10, "nodeName": "get_neural_training_data", "type": "Callable[[], Any]"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "self", "type": "UpdateChecker"}, {"lineNumber": 26, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "file_name", "type": "str"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "get", "type": "Callable[..., requests.models.Response]"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "dl_link", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "get", "type": "Callable"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "total_length", "type": "Optional[str]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "dl", "type": "int"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "total_length", "type": "int"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "internal", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "downloader", "type": "Callable[[], Any]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "call", "type": "Callable[..., int]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "internal", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "self", "type": "UpdateChecker"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "self", "type": "UpdateChecker"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 78, "col_offset": 58, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 80, "col_offset": 40, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 80, "col_offset": 64, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 81, "col_offset": 62, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 82, "col_offset": 60, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 82, "col_offset": 84, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 84, "col_offset": 60, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 84, "col_offset": 84, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 86, "col_offset": 61, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 86, "col_offset": 85, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 88, "col_offset": 53, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 88, "col_offset": 77, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 90, "col_offset": 48, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 90, "col_offset": 72, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 92, "col_offset": 59, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 93, "col_offset": 63, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 94, "col_offset": 63, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 95, "col_offset": 40, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 95, "col_offset": 64, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 96, "col_offset": 45, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 96, "col_offset": 69, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 98, "col_offset": 45, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 98, "col_offset": 69, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 100, "col_offset": 70, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 102, "col_offset": 70, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 104, "col_offset": 46, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 104, "col_offset": 70, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 106, "col_offset": 46, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 106, "col_offset": 70, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 108, "col_offset": 47, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 108, "col_offset": 71, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 110, "col_offset": 71, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 112, "col_offset": 54, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 114, "col_offset": 39, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 114, "col_offset": 63, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 115, "col_offset": 49, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 115, "col_offset": 73, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 117, "col_offset": 48, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 117, "col_offset": 72, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 119, "col_offset": 58, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 119, "col_offset": 82, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 121, "col_offset": 52, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 121, "col_offset": 76, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 123, "col_offset": 53, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 123, "col_offset": 77, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 125, "col_offset": 37, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 125, "col_offset": 61, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 126, "col_offset": 40, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 126, "col_offset": 64, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 127, "col_offset": 55, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 128, "col_offset": 55, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 129, "col_offset": 31, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 129, "col_offset": 55, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 130, "col_offset": 55, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 131, "col_offset": 55, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 132, "col_offset": 55, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 133, "col_offset": 43, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 133, "col_offset": 67, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 135, "col_offset": 37, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 135, "col_offset": 61, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 140, "col_offset": 49, "nodeName": "strategy_override", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "find", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "next", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "re", "type": "module"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "r", "type": "Pattern[str]"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 153, "col_offset": 21, "nodeName": "m", "type": "Match[str]"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "group", "type": "Callable"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 157, "col_offset": 33, "nodeName": "stringPart", "type": "str"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "strategies", "type": "Any"}, {"lineNumber": 161, "col_offset": 52, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "strategies", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "strategies", "type": "Any"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "strategies", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "elementName", "type": "Any"}, {"lineNumber": 181, "col_offset": 50, "nodeName": "round", "type": "Callable"}, {"lineNumber": 191, "col_offset": 11, "nodeName": "cls", "type": "Singleton"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "cls", "type": "Singleton"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "__call__", "type": "Callable"}, {"lineNumber": 199, "col_offset": 23, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "remove", "type": "Any"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 208, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 208, "col_offset": 25, "nodeName": "Iterable", "type": "Type[Iterable[Any]]"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "pDict", "type": "Dict[Union[Any, str], Union[Any, str]]"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "hDict", "type": "Dict[str, str]"}, {"lineNumber": 221, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 229, "col_offset": 32, "nodeName": "os", "type": "module"}, {"lineNumber": 231, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 232, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 233, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 234, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 236, "col_offset": 30, "nodeName": "pd", "type": "Any"}, {"lineNumber": 236, "col_offset": 41, "nodeName": "Dd", "type": "Any"}, {"lineNumber": 236, "col_offset": 45, "nodeName": "Dt", "type": "Any"}, {"lineNumber": 236, "col_offset": 49, "nodeName": "Dh", "type": "Any"}, {"lineNumber": 236, "col_offset": 53, "nodeName": "Dp", "type": "Any"}, {"lineNumber": 237, "col_offset": 14, "nodeName": "to_dict", "type": "Any"}, {"lineNumber": 239, "col_offset": 35, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "rounds", "type": "Any"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "t", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 250, "col_offset": 13, "nodeName": "myFundsChange", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "outcome", "type": "str"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "losses", "type": "Any"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "totalGames", "type": "Any"}, {"lineNumber": 257, "col_offset": 11, "nodeName": "h", "type": "Any"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 262, "col_offset": 21, "nodeName": "find", "type": "Any"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "round_name_value", "type": "Dict[str, Any]"}, {"lineNumber": 266, "col_offset": 51, "nodeName": "round", "type": "Any"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 270, "col_offset": 37, "nodeName": "h", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 271, "col_offset": 43, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 272, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 273, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 274, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 274, "col_offset": 41, "nodeName": "h", "type": "Any"}, {"lineNumber": 275, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 275, "col_offset": 47, "nodeName": "t", "type": "Any"}, {"lineNumber": 276, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 276, "col_offset": 50, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 276, "col_offset": 54, "nodeName": "myFundsChange", "type": "Any"}, {"lineNumber": 277, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 277, "col_offset": 44, "nodeName": "h", "type": "Any"}, {"lineNumber": 278, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 278, "col_offset": 42, "nodeName": "h", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 279, "col_offset": 39, "nodeName": "t", "type": "Any"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 280, "col_offset": 47, "nodeName": "t", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 281, "col_offset": 33, "nodeName": "t", "type": "Any"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "t_write_db", "type": "threading.Thread"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "daemon", "type": "bool"}, {"lineNumber": 294, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 296, "col_offset": 31, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 298, "col_offset": 21, "nodeName": "threading", "type": "module"}, {"lineNumber": 298, "col_offset": 69, "nodeName": "insert_one", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "t_write_db", "type": "threading.Thread"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 305, "col_offset": 17, "nodeName": "collusion", "type": "Any"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "gamestage", "type": "Any"}, {"lineNumber": 314, "col_offset": 28, "nodeName": "record", "type": "Dict[Any, Any]"}, {"lineNumber": 315, "col_offset": 16, "nodeName": "collusion_cards", "type": "Any"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "player_dropped_out", "type": "bool"}, {"lineNumber": 318, "col_offset": 16, "nodeName": "collusion_cards", "type": "Any"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "collusion_cards", "type": "str"}, {"lineNumber": 324, "col_offset": 17, "nodeName": "games", "type": "Any"}, {"lineNumber": 343, "col_offset": 24, "nodeName": "d", "type": "Any"}, {"lineNumber": 343, "col_offset": 29, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 356, "col_offset": 29, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 357, "col_offset": 20, "nodeName": "decision", "type": "str"}, {"lineNumber": 357, "col_offset": 32, "nodeName": "decisions", "type": "List[str]"}, {"lineNumber": 360, "col_offset": 17, "nodeName": "games", "type": "Any"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 376, "col_offset": 69, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 393, "col_offset": 20, "nodeName": "numbers", "type": "List[List[Any]]"}, {"lineNumber": 434, "col_offset": 17, "nodeName": "games", "type": "Any"}, {"lineNumber": 448, "col_offset": 22, "nodeName": "d", "type": "Any"}, {"lineNumber": 448, "col_offset": 38, "nodeName": "d", "type": "Any"}, {"lineNumber": 448, "col_offset": 43, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 450, "col_offset": 17, "nodeName": "games", "type": "Any"}, {"lineNumber": 465, "col_offset": 23, "nodeName": "d", "type": "Any"}, {"lineNumber": 465, "col_offset": 39, "nodeName": "d", "type": "Any"}, {"lineNumber": 465, "col_offset": 44, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 467, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 467, "col_offset": 28, "nodeName": "i", "type": "Any"}, {"lineNumber": 467, "col_offset": 35, "nodeName": "i", "type": "Any"}, {"lineNumber": 467, "col_offset": 40, "nodeName": "equity_win", "type": "List[Any]"}, {"lineNumber": 468, "col_offset": 23, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 468, "col_offset": 29, "nodeName": "i", "type": "Any"}, {"lineNumber": 468, "col_offset": 36, "nodeName": "i", "type": "Any"}, {"lineNumber": 468, "col_offset": 41, "nodeName": "equity_loss", "type": "List[Any]"}, {"lineNumber": 473, "col_offset": 17, "nodeName": "games", "type": "Any"}, {"lineNumber": 484, "col_offset": 12, "nodeName": "games", "type": "int"}, {"lineNumber": 489, "col_offset": 17, "nodeName": "games", "type": "Any"}, {"lineNumber": 501, "col_offset": 12, "nodeName": "change", "type": "int"}, {"lineNumber": 506, "col_offset": 21, "nodeName": "aggregate", "type": "Any"}, {"lineNumber": 515, "col_offset": 12, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "distinct", "type": "Any"}, {"lineNumber": 520, "col_offset": 8, "nodeName": "l", "type": "List[Any]"}, {"lineNumber": 524, "col_offset": 17, "nodeName": "distinct", "type": "Any"}, {"lineNumber": 529, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 529, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 549, "col_offset": 17, "nodeName": "pd", "type": "Any"}, {"lineNumber": 549, "col_offset": 30, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 569, "col_offset": 42, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 571, "col_offset": 48, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 576, "col_offset": 17, "nodeName": "games", "type": "Any"}, {"lineNumber": 594, "col_offset": 15, "nodeName": "pd", "type": "Any"}, {"lineNumber": 594, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 594, "col_offset": 33, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 598, "col_offset": 13, "nodeName": "L", "type": "GameLogger"}, {"lineNumber": 609, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 610, "col_offset": 16, "nodeName": "Curvefitting", "type": "Any"}, {"lineNumber": 610, "col_offset": 29, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 610, "col_offset": 32, "nodeName": "smallBlind", "type": "float"}, {"lineNumber": 610, "col_offset": 44, "nodeName": "bigBlind", "type": "float"}, {"lineNumber": 610, "col_offset": 54, "nodeName": "maxValue", "type": "int"}, {"lineNumber": 610, "col_offset": 64, "nodeName": "minEquity", "type": "Any"}, {"lineNumber": 610, "col_offset": 75, "nodeName": "maxEquity", "type": "int"}, {"lineNumber": 610, "col_offset": 86, "nodeName": "max_X", "type": "int"}, {"lineNumber": 610, "col_offset": 93, "nodeName": "pw", "type": "Any"}, {"lineNumber": 611, "col_offset": 57, "nodeName": "final_funds_change", "type": "Any"}, {"lineNumber": 613, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 614, "col_offset": 29, "nodeName": "linspace", "type": "Any"}, {"lineNumber": 615, "col_offset": 16, "nodeName": "s", "type": "Any"}, {"lineNumber": 622, "col_offset": 17, "nodeName": "games", "type": "Any"}, {"lineNumber": 637, "col_offset": 27, "nodeName": "map", "type": "Callable"}, {"lineNumber": 637, "col_offset": 72, "nodeName": "player_list", "type": "List[Any]"}, {"lineNumber": 638, "col_offset": 31, "nodeName": "sublist", "type": "nothing"}, {"lineNumber": 638, "col_offset": 42, "nodeName": "player_list", "type": "List[nothing]"}, {"lineNumber": 638, "col_offset": 58, "nodeName": "item", "type": "nothing"}, {"lineNumber": 638, "col_offset": 66, "nodeName": "sublist", "type": "nothing"}, {"lineNumber": 640, "col_offset": 29, "nodeName": "items", "type": "Callable"}, {"lineNumber": 644, "col_offset": 17, "nodeName": "games", "type": "Any"}, {"lineNumber": 657, "col_offset": 20, "nodeName": "d", "type": "Any"}, {"lineNumber": 657, "col_offset": 30, "nodeName": "d", "type": "Any"}, {"lineNumber": 657, "col_offset": 45, "nodeName": "d", "type": "Any"}, {"lineNumber": 661, "col_offset": 16, "nodeName": "flop_presence", "type": "Any"}, {"lineNumber": 661, "col_offset": 32, "nodeName": "nan", "type": "Any"}, {"lineNumber": 663, "col_offset": 12, "nodeName": "flop_presence", "type": "Any"}, {"lineNumber": 663, "col_offset": 28, "nodeName": "nan", "type": "Any"}, {"lineNumber": 696, "col_offset": 10, "nodeName": "L", "type": "GameLogger"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "self", "type": "UpdateChecker"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "file_name", "type": "str"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "requests", "type": "module"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "self", "type": "UpdateChecker"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "headers", "type": "requests.structures.CaseInsensitiveDict[str]"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "write", "type": "Callable"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "content", "type": "bytes"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "total_length", "type": "Optional[str]"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "iter_content", "type": "Callable[..., Iterator[Any]]"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "dl", "type": "int"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "done", "type": "int"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "UpdateChecker"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "subprocess", "type": "module"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "file_name", "type": "str"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "distinct", "type": "Any"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 78, "col_offset": 58, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 80, "col_offset": 40, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 80, "col_offset": 64, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 81, "col_offset": 62, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 82, "col_offset": 60, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 82, "col_offset": 84, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 84, "col_offset": 60, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 84, "col_offset": 84, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 86, "col_offset": 61, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 86, "col_offset": 85, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 88, "col_offset": 53, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 88, "col_offset": 77, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 90, "col_offset": 48, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 90, "col_offset": 72, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 92, "col_offset": 59, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 93, "col_offset": 63, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 94, "col_offset": 63, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 95, "col_offset": 40, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 95, "col_offset": 64, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 96, "col_offset": 45, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 96, "col_offset": 69, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 98, "col_offset": 45, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 98, "col_offset": 69, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 100, "col_offset": 70, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 102, "col_offset": 70, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 104, "col_offset": 46, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 104, "col_offset": 70, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 106, "col_offset": 46, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 106, "col_offset": 70, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 108, "col_offset": 47, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 108, "col_offset": 71, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 110, "col_offset": 71, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 112, "col_offset": 54, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 114, "col_offset": 39, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 114, "col_offset": 63, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 115, "col_offset": 49, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 115, "col_offset": 73, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 117, "col_offset": 48, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 117, "col_offset": 72, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 119, "col_offset": 58, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 119, "col_offset": 82, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 121, "col_offset": 52, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 121, "col_offset": 76, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 123, "col_offset": 53, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 123, "col_offset": 77, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 125, "col_offset": 37, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 125, "col_offset": 61, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 126, "col_offset": 40, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 126, "col_offset": 64, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 127, "col_offset": 55, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 128, "col_offset": 55, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 129, "col_offset": 31, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 129, "col_offset": 55, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 130, "col_offset": 55, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 131, "col_offset": 55, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 132, "col_offset": 55, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 133, "col_offset": 43, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 133, "col_offset": 67, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 135, "col_offset": 37, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 135, "col_offset": 61, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "strategies", "type": "Any"}, {"lineNumber": 142, "col_offset": 63, "nodeName": "current_strategy", "type": "Any"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "find", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "next", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "m", "type": "Match[str]"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "now", "type": "Callable"}, {"lineNumber": 157, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 157, "col_offset": 50, "nodeName": "numberPart", "type": "int"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 173, "col_offset": 25, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 181, "col_offset": 101, "nodeName": "change", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 187, "col_offset": 14, "nodeName": "Singleton", "type": "Type[Singleton]"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "cls", "type": "Type[GameLogger]"}, {"lineNumber": 192, "col_offset": 59, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 192, "col_offset": 67, "nodeName": "kw", "type": "Dict[str, Any]"}, {"lineNumber": 202, "col_offset": 11, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 202, "col_offset": 59, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "collusion", "type": "Any"}, {"lineNumber": 208, "col_offset": 43, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 208, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 208, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 218, "col_offset": 24, "nodeName": "p", "type": "Any"}, {"lineNumber": 219, "col_offset": 18, "nodeName": "key", "type": "Any"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "h", "type": "Any"}, {"lineNumber": 221, "col_offset": 18, "nodeName": "key", "type": "str"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 222, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 223, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "tDict", "type": "Dict[str, str]"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "join", "type": "Callable"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "d", "type": "Any"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 227, "col_offset": 16, "nodeName": "dDict", "type": "Dict[str, str]"}, {"lineNumber": 227, "col_offset": 29, "nodeName": "join", "type": "Callable"}, {"lineNumber": 237, "col_offset": 14, "nodeName": "FinalDataFrame", "type": "Any"}, {"lineNumber": 239, "col_offset": 35, "nodeName": "datetime", "type": "module"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 250, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 254, "col_offset": 13, "nodeName": "myFundsChange", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "outcome", "type": "str"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "totalGames", "type": "Any"}, {"lineNumber": 262, "col_offset": 21, "nodeName": "rounds", "type": "Any"}, {"lineNumber": 262, "col_offset": 57, "nodeName": "lastGameID", "type": "Any"}, {"lineNumber": 264, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "round_name_value", "type": "Dict[str, Any]"}, {"lineNumber": 265, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 265, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "round_name_value", "type": "Dict[str, Any]"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 267, "col_offset": 46, "nodeName": "round_name_value", "type": "Dict[str, Any]"}, {"lineNumber": 271, "col_offset": 43, "nodeName": "os", "type": "module"}, {"lineNumber": 272, "col_offset": 52, "nodeName": "now", "type": "Callable"}, {"lineNumber": 276, "col_offset": 54, "nodeName": "t", "type": "Any"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 283, "col_offset": 19, "nodeName": "myFundsChange", "type": "Any"}, {"lineNumber": 283, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "Thread", "type": "Type[threading.Thread]"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "t_write_db", "type": "threading.Thread"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "start", "type": "Callable[[], None]"}, {"lineNumber": 296, "col_offset": 31, "nodeName": "datetime", "type": "module"}, {"lineNumber": 298, "col_offset": 69, "nodeName": "collusion", "type": "Any"}, {"lineNumber": 298, "col_offset": 110, "nodeName": "package", "type": "Dict[str, Union[Any, str, datetime.datetime]]"}, {"lineNumber": 305, "col_offset": 17, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 306, "col_offset": 38, "nodeName": "gamenumber_part", "type": "Any"}, {"lineNumber": 306, "col_offset": 80, "nodeName": "computername", "type": "str"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "record", "type": "Dict[Any, Any]"}, {"lineNumber": 312, "col_offset": 48, "nodeName": "document", "type": "Any"}, {"lineNumber": 315, "col_offset": 34, "nodeName": "record", "type": "Dict[Any, Any]"}, {"lineNumber": 318, "col_offset": 34, "nodeName": "record", "type": "Dict[Any, Any]"}, {"lineNumber": 324, "col_offset": 17, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 357, "col_offset": 32, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 360, "col_offset": 17, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 376, "col_offset": 73, "nodeName": "e", "type": "Any"}, {"lineNumber": 378, "col_offset": 20, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 378, "col_offset": 55, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 378, "col_offset": 87, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 379, "col_offset": 20, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 379, "col_offset": 51, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 379, "col_offset": 82, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 380, "col_offset": 20, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 380, "col_offset": 60, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 381, "col_offset": 20, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 381, "col_offset": 55, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 381, "col_offset": 87, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 382, "col_offset": 20, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 382, "col_offset": 53, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 382, "col_offset": 84, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 383, "col_offset": 20, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 383, "col_offset": 52, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 383, "col_offset": 82, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 384, "col_offset": 20, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 384, "col_offset": 51, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 385, "col_offset": 20, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 434, "col_offset": 17, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 450, "col_offset": 17, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 473, "col_offset": 17, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 489, "col_offset": 17, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 492, "col_offset": 23, "nodeName": "days", "type": "Any"}, {"lineNumber": 506, "col_offset": 21, "nodeName": "games", "type": "Any"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "games", "type": "Any"}, {"lineNumber": 524, "col_offset": 17, "nodeName": "games", "type": "Any"}, {"lineNumber": 529, "col_offset": 33, "nodeName": "aggregate", "type": "Any"}, {"lineNumber": 549, "col_offset": 35, "nodeName": "aggregate", "type": "Any"}, {"lineNumber": 569, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 569, "col_offset": 27, "nodeName": "wins", "type": "Any"}, {"lineNumber": 569, "col_offset": 42, "nodeName": "pd", "type": "Any"}, {"lineNumber": 571, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 571, "col_offset": 31, "nodeName": "losses", "type": "Any"}, {"lineNumber": 571, "col_offset": 48, "nodeName": "pd", "type": "Any"}, {"lineNumber": 576, "col_offset": 17, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 609, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 611, "col_offset": 50, "nodeName": "y", "type": "Any"}, {"lineNumber": 614, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 619, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 619, "col_offset": 43, "nodeName": "pw", "type": "Any"}, {"lineNumber": 622, "col_offset": 17, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 640, "col_offset": 29, "nodeName": "counted", "type": "Counter[nothing]"}, {"lineNumber": 640, "col_offset": 50, "nodeName": "itemgetter", "type": "Callable"}, {"lineNumber": 644, "col_offset": 17, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 657, "col_offset": 50, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 657, "col_offset": 55, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 659, "col_offset": 28, "nodeName": "precence", "type": "Dict[Any, Any]"}, {"lineNumber": 659, "col_offset": 47, "nodeName": "precence", "type": "Dict[Any, Any]"}, {"lineNumber": 660, "col_offset": 15, "nodeName": "precence", "type": "Dict[Any, Any]"}, {"lineNumber": 661, "col_offset": 32, "nodeName": "np", "type": "module"}, {"lineNumber": 663, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "self", "type": "UpdateChecker"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "response", "type": "requests.models.Response"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "f", "type": "BinaryIO"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "response", "type": "requests.models.Response"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "response", "type": "requests.models.Response"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "write", "type": "Callable"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "write", "type": "Callable"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "flush", "type": "Callable[[], None]"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "self", "type": "UpdateChecker"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "latest_update", "type": "Any"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "self", "type": "UpdateChecker"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "self", "type": "UpdateChecker"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "strategies", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 142, "col_offset": 63, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "strategies", "type": "Any"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 172, "col_offset": 17, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 181, "col_offset": 56, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 192, "col_offset": 33, "nodeName": "Singleton", "type": "Type[Singleton]"}, {"lineNumber": 192, "col_offset": 44, "nodeName": "cls", "type": "Singleton"}, {"lineNumber": 202, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 202, "col_offset": 59, "nodeName": "os", "type": "module"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 221, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 221, "col_offset": 38, "nodeName": "ele", "type": "Any"}, {"lineNumber": 221, "col_offset": 47, "nodeName": "ele", "type": "Any"}, {"lineNumber": 223, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 224, "col_offset": 22, "nodeName": "key", "type": "str"}, {"lineNumber": 226, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 227, "col_offset": 22, "nodeName": "key", "type": "str"}, {"lineNumber": 237, "col_offset": 14, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 241, "col_offset": 17, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 254, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 262, "col_offset": 21, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 262, "col_offset": 57, "nodeName": "h", "type": "Any"}, {"lineNumber": 272, "col_offset": 52, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 283, "col_offset": 19, "nodeName": "t", "type": "Any"}, {"lineNumber": 283, "col_offset": 45, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "threading", "type": "module"}, {"lineNumber": 284, "col_offset": 73, "nodeName": "insert_one", "type": "Any"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "t_write_db", "type": "threading.Thread"}, {"lineNumber": 298, "col_offset": 69, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 305, "col_offset": 17, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 315, "col_offset": 41, "nodeName": "gamestage", "type": "Any"}, {"lineNumber": 324, "col_offset": 17, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 358, "col_offset": 20, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 360, "col_offset": 17, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 378, "col_offset": 20, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 378, "col_offset": 55, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 378, "col_offset": 87, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 379, "col_offset": 20, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 379, "col_offset": 51, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 379, "col_offset": 82, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 380, "col_offset": 20, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 380, "col_offset": 60, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 381, "col_offset": 20, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 381, "col_offset": 55, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 381, "col_offset": 87, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 382, "col_offset": 20, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 382, "col_offset": 53, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 382, "col_offset": 84, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 383, "col_offset": 20, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 383, "col_offset": 52, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 383, "col_offset": 82, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 384, "col_offset": 20, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 384, "col_offset": 51, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 385, "col_offset": 20, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 396, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 396, "col_offset": 65, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 400, "col_offset": 68, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 401, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 401, "col_offset": 66, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 402, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 403, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 403, "col_offset": 63, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 404, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 404, "col_offset": 60, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 405, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 405, "col_offset": 60, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 406, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 406, "col_offset": 61, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 407, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 407, "col_offset": 68, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 408, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 408, "col_offset": 65, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 409, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 409, "col_offset": 65, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 410, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 410, "col_offset": 66, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 419, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 419, "col_offset": 60, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 420, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 420, "col_offset": 57, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 421, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 421, "col_offset": 57, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 422, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 422, "col_offset": 58, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 423, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 423, "col_offset": 61, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 424, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 424, "col_offset": 58, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 425, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 425, "col_offset": 58, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 426, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 426, "col_offset": 59, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 427, "col_offset": 29, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 427, "col_offset": 70, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 428, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 428, "col_offset": 64, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 434, "col_offset": 17, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 438, "col_offset": 57, "nodeName": "game_stage", "type": "Any"}, {"lineNumber": 439, "col_offset": 56, "nodeName": "decision", "type": "Any"}, {"lineNumber": 450, "col_offset": 17, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 454, "col_offset": 57, "nodeName": "game_stage", "type": "Any"}, {"lineNumber": 455, "col_offset": 56, "nodeName": "decision", "type": "Any"}, {"lineNumber": 473, "col_offset": 17, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 482, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 482, "col_offset": 25, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 489, "col_offset": 17, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 499, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 499, "col_offset": 26, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 506, "col_offset": 21, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 513, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 513, "col_offset": 21, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 524, "col_offset": 17, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 529, "col_offset": 33, "nodeName": "games", "type": "Any"}, {"lineNumber": 549, "col_offset": 35, "nodeName": "games", "type": "Any"}, {"lineNumber": 576, "col_offset": 17, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 609, "col_offset": 26, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 609, "col_offset": 32, "nodeName": "equity", "type": "Any"}, {"lineNumber": 611, "col_offset": 20, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 611, "col_offset": 50, "nodeName": "d", "type": "Any"}, {"lineNumber": 619, "col_offset": 22, "nodeName": "round", "type": "Callable"}, {"lineNumber": 619, "col_offset": 28, "nodeName": "minEquity", "type": "Any"}, {"lineNumber": 619, "col_offset": 47, "nodeName": "round", "type": "Callable"}, {"lineNumber": 619, "col_offset": 53, "nodeName": "s", "type": "Any"}, {"lineNumber": 622, "col_offset": 17, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 640, "col_offset": 50, "nodeName": "operator", "type": "module"}, {"lineNumber": 644, "col_offset": 17, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "f", "type": "BinaryIO"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "total_length", "type": "int"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "stdout", "type": "TextIO"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 142, "col_offset": 21, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "datetime", "type": "module"}, {"lineNumber": 181, "col_offset": 62, "nodeName": "selected_strategy", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 221, "col_offset": 54, "nodeName": "isIterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 221, "col_offset": 70, "nodeName": "val", "type": "Any"}, {"lineNumber": 224, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 224, "col_offset": 42, "nodeName": "ele", "type": "Any"}, {"lineNumber": 224, "col_offset": 51, "nodeName": "ele", "type": "Any"}, {"lineNumber": 227, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 227, "col_offset": 42, "nodeName": "ele", "type": "Any"}, {"lineNumber": 227, "col_offset": 51, "nodeName": "ele", "type": "Any"}, {"lineNumber": 262, "col_offset": 21, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 272, "col_offset": 52, "nodeName": "datetime", "type": "module"}, {"lineNumber": 283, "col_offset": 45, "nodeName": "p", "type": "Any"}, {"lineNumber": 284, "col_offset": 73, "nodeName": "games", "type": "Any"}, {"lineNumber": 285, "col_offset": 52, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 298, "col_offset": 69, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 312, "col_offset": 23, "nodeName": "document", "type": "Any"}, {"lineNumber": 358, "col_offset": 20, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 362, "col_offset": 47, "nodeName": "p_value", "type": "Any"}, {"lineNumber": 396, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 396, "col_offset": 65, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 397, "col_offset": 106, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 399, "col_offset": 108, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 400, "col_offset": 68, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 401, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 401, "col_offset": 66, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 402, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 403, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 403, "col_offset": 63, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 404, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 404, "col_offset": 60, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 405, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 405, "col_offset": 60, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 406, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 406, "col_offset": 61, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 407, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 407, "col_offset": 68, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 408, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 408, "col_offset": 65, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 409, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 409, "col_offset": 65, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 410, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 410, "col_offset": 66, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 411, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 411, "col_offset": 60, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 412, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 412, "col_offset": 61, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 413, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 413, "col_offset": 57, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 414, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 414, "col_offset": 58, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 415, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 415, "col_offset": 57, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 416, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 416, "col_offset": 58, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 417, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 417, "col_offset": 58, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 418, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 418, "col_offset": 59, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 419, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 419, "col_offset": 60, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 420, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 420, "col_offset": 57, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 421, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 421, "col_offset": 57, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 422, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 422, "col_offset": 58, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 423, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 423, "col_offset": 61, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 424, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 424, "col_offset": 58, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 425, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 425, "col_offset": 58, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 426, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 426, "col_offset": 59, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 427, "col_offset": 29, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 427, "col_offset": 70, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 428, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 428, "col_offset": 64, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 436, "col_offset": 47, "nodeName": "p_value", "type": "Any"}, {"lineNumber": 452, "col_offset": 47, "nodeName": "p_value", "type": "Any"}, {"lineNumber": 474, "col_offset": 47, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 490, "col_offset": 47, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 506, "col_offset": 21, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 519, "col_offset": 17, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 524, "col_offset": 17, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 529, "col_offset": 33, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 549, "col_offset": 35, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 578, "col_offset": 47, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 611, "col_offset": 20, "nodeName": "np", "type": "module"}, {"lineNumber": 647, "col_offset": 64, "nodeName": "playername", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "dl", "type": "int"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "sys", "type": "module"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "sys", "type": "module"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 145, "col_offset": 21, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 181, "col_offset": 62, "nodeName": "self", "type": "StrategyHandler"}, {"lineNumber": 181, "col_offset": 85, "nodeName": "elementName", "type": "Any"}, {"lineNumber": 221, "col_offset": 54, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 223, "col_offset": 32, "nodeName": "ele", "type": "Any"}, {"lineNumber": 223, "col_offset": 41, "nodeName": "ele", "type": "Any"}, {"lineNumber": 224, "col_offset": 58, "nodeName": "isIterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 224, "col_offset": 74, "nodeName": "val", "type": "Any"}, {"lineNumber": 226, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 226, "col_offset": 32, "nodeName": "ele", "type": "Any"}, {"lineNumber": 226, "col_offset": 41, "nodeName": "ele", "type": "Any"}, {"lineNumber": 227, "col_offset": 58, "nodeName": "isIterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 227, "col_offset": 74, "nodeName": "val", "type": "Any"}, {"lineNumber": 284, "col_offset": 73, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 358, "col_offset": 27, "nodeName": "decision", "type": "str"}, {"lineNumber": 358, "col_offset": 37, "nodeName": "gameStage", "type": "str"}, {"lineNumber": 358, "col_offset": 48, "nodeName": "outcome", "type": "str"}, {"lineNumber": 376, "col_offset": 19, "nodeName": "e", "type": "Any"}, {"lineNumber": 376, "col_offset": 35, "nodeName": "e", "type": "Any"}, {"lineNumber": 376, "col_offset": 51, "nodeName": "e", "type": "Any"}, {"lineNumber": 397, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 397, "col_offset": 63, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 397, "col_offset": 106, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 399, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 399, "col_offset": 64, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, Any, Any]], Any]"}, {"lineNumber": 399, "col_offset": 108, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 411, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 411, "col_offset": 60, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 412, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 412, "col_offset": 61, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 413, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 413, "col_offset": 57, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 414, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 414, "col_offset": 58, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 415, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 415, "col_offset": 57, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 416, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 416, "col_offset": 58, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 417, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 417, "col_offset": 58, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 418, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 418, "col_offset": 59, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 507, "col_offset": 51, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 529, "col_offset": 33, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 533, "col_offset": 57, "nodeName": "game_stage", "type": "Any"}, {"lineNumber": 534, "col_offset": 56, "nodeName": "decision", "type": "Any"}, {"lineNumber": 549, "col_offset": 35, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 553, "col_offset": 57, "nodeName": "game_stage", "type": "Any"}, {"lineNumber": 554, "col_offset": 56, "nodeName": "decision", "type": "Any"}, {"lineNumber": 611, "col_offset": 30, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 611, "col_offset": 36, "nodeName": "min_call", "type": "Any"}, {"lineNumber": 616, "col_offset": 20, "nodeName": "apply", "type": "Any"}, {"lineNumber": 40, "col_offset": 57, "nodeName": "done", "type": "int"}, {"lineNumber": 223, "col_offset": 48, "nodeName": "isIterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 223, "col_offset": 64, "nodeName": "val", "type": "Any"}, {"lineNumber": 224, "col_offset": 58, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 226, "col_offset": 48, "nodeName": "isIterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 226, "col_offset": 64, "nodeName": "val", "type": "Any"}, {"lineNumber": 227, "col_offset": 58, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 284, "col_offset": 73, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 397, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 397, "col_offset": 63, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 399, "col_offset": 26, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 399, "col_offset": 64, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 531, "col_offset": 47, "nodeName": "p_value", "type": "Any"}, {"lineNumber": 551, "col_offset": 47, "nodeName": "p_value", "type": "Any"}, {"lineNumber": 616, "col_offset": 20, "nodeName": "df", "type": "Any"}, {"lineNumber": 40, "col_offset": 75, "nodeName": "done", "type": "int"}, {"lineNumber": 223, "col_offset": 48, "nodeName": "self", "type": "GameLogger"}, {"lineNumber": 226, "col_offset": 48, "nodeName": "self", "type": "GameLogger"}]