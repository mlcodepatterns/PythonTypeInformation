[{"lineNumber": 308, "col_offset": 0, "nodeName": "pivot_by_template", "type": "Callable[[], Any]"}, {"lineNumber": 321, "col_offset": 0, "nodeName": "filter_log_by_parameter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 330, "col_offset": 0, "nodeName": "maximize_parameters", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 14, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "LogFilename", "type": "str"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "p_value", "type": "str"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "L", "type": "Logging"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "LogFilename", "type": "str"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "L", "type": "Logging"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "LogFilename", "type": "str"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "L", "type": "Logging"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 343, "col_offset": 4, "nodeName": "FinalList", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "p_name", "type": "str"}, {"lineNumber": 345, "col_offset": 18, "nodeName": "parameterList", "type": "List[str]"}, {"lineNumber": 356, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 357, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 359, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 360, "col_offset": 4, "nodeName": "p_name", "type": "str"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "p_value", "type": "str"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "gameStage", "type": "str"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "decision", "type": "str"}, {"lineNumber": 364, "col_offset": 4, "nodeName": "Strategy", "type": "str"}, {"lineNumber": 367, "col_offset": 4, "nodeName": "LogFilename", "type": "str"}, {"lineNumber": 368, "col_offset": 4, "nodeName": "L", "type": "Logging"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "log_filename", "type": "str"}, {"lineNumber": 13, "col_offset": 28, "nodeName": "filename", "type": "str"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "mongoclient", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 15, "col_offset": 23, "nodeName": "POKER", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "hDict", "type": "Dict[str, str]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "tDict", "type": "Dict[str, str]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "dDict", "type": "Dict[str, str]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "pDict", "type": "Dict[str, str]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "Dh", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "Dt", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "Dd", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "Dp", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "FinalDataFrame", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "outcome", "type": "str"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "LogDataFileFiltered", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "LogDataFileFiltered", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "LogDataFileFiltered", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "FCPG", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "Output", "type": "numpy.ndarray"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "Input", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "Data", "type": "List[numpy.ndarray]"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "Data", "type": "List[numpy.ndarray]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "gameStages", "type": "List[str]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "outcome", "type": "str"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "outcomes", "type": "List[str]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "gameStage", "type": "str"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "gameStages", "type": "List[str]"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "FinalData", "type": "List[List[Any]]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "equity_win", "type": "List[int]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "equity_loss", "type": "List[int]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "y", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "Logging", "type": "Type[Logging]"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "LogFilename", "type": "str"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "filter_by_template", "type": "Callable[[Any], Any]"}, {"lineNumber": 312, "col_offset": 25, "nodeName": "p_value", "type": "str"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "replace_strings_with_numbers", "type": "Callable[[], Any]"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "collapse_games", "type": "Callable[[], Any]"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "pivot1", "type": "Any"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "get_strategy_total_funds_change", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 317, "col_offset": 42, "nodeName": "p_value", "type": "str"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 318, "col_offset": 10, "nodeName": "f", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "Logging", "type": "Type[Logging]"}, {"lineNumber": 323, "col_offset": 16, "nodeName": "LogFilename", "type": "str"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "filter_by_parameter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 324, "col_offset": 26, "nodeName": "p_name", "type": "Any"}, {"lineNumber": 324, "col_offset": 34, "nodeName": "p_value", "type": "Any"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "replace_strings_with_numbers", "type": "Callable[[], Any]"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "collapse_games", "type": "Callable[[], Any]"}, {"lineNumber": 327, "col_offset": 13, "nodeName": "get_total_funds_change", "type": "Callable[[], Any]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "Logging", "type": "Type[Logging]"}, {"lineNumber": 333, "col_offset": 16, "nodeName": "LogFilename", "type": "str"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "L", "type": "Logging"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "ix", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "all_p_values", "type": "Any"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "p_value", "type": "Any"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "all_p_values", "type": "Any"}, {"lineNumber": 356, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 356, "col_offset": 26, "nodeName": "FinalList", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "Logging", "type": "Type[Logging]"}, {"lineNumber": 368, "col_offset": 16, "nodeName": "LogFilename", "type": "str"}, {"lineNumber": 374, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "Logging"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "Logging"}, {"lineNumber": 14, "col_offset": 27, "nodeName": "MongoClient", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "Logging"}, {"lineNumber": 15, "col_offset": 23, "nodeName": "mongoclient", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "items", "type": "Callable"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "items", "type": "Callable"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "items", "type": "Callable"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "items", "type": "Callable"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "pDict", "type": "Dict[str, str]"}, {"lineNumber": 51, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "pDict", "type": "Dict[str, str]"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "hDict", "type": "Dict[str, str]"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "tDict", "type": "Dict[str, str]"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "dDict", "type": "Dict[str, str]"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "pDict", "type": "Dict[str, str]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "Logging"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "concat", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "insert_one", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "myFundsChange", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "outcome", "type": "str"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "wins", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "totalGames", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "histGameStage", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "round", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "lastGameID", "type": "Any"}, {"lineNumber": 92, "col_offset": 42, "nodeName": "outcome", "type": "str"}, {"lineNumber": 93, "col_offset": 40, "nodeName": "histGameStage", "type": "Any"}, {"lineNumber": 94, "col_offset": 46, "nodeName": "myFundsChange", "type": "Any"}, {"lineNumber": 96, "col_offset": 44, "nodeName": "histDecision", "type": "Any"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "histEquity", "type": "Any"}, {"lineNumber": 98, "col_offset": 39, "nodeName": "current_strategy", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "Logging"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "Logging"}, {"lineNumber": 104, "col_offset": 36, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "Logging"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Logging"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "Logging"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "replace", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "Logging"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "pivot_table", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "LogDataFileSummary", "type": "Any"}, {"lineNumber": 123, "col_offset": 51, "nodeName": "map", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "LogDataFileSummary", "type": "Any"}, {"lineNumber": 126, "col_offset": 48, "nodeName": "map", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "Logging"}, {"lineNumber": 137, "col_offset": 39, "nodeName": "pivot_table", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "reset_index", "type": "Any"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "Input", "type": "numpy.ndarray"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "Output", "type": "numpy.ndarray"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "self", "type": "Logging"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "self", "type": "Logging"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "Logging"}, {"lineNumber": 167, "col_offset": 23, "nodeName": "self", "type": "Logging"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "gameStage", "type": "str"}, {"lineNumber": 168, "col_offset": 29, "nodeName": "gameStages", "type": "List[str]"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "self", "type": "Logging"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "e", "type": "Any"}, {"lineNumber": 189, "col_offset": 21, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 202, "col_offset": 11, "nodeName": "chartType", "type": "Any"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "chartType", "type": "Any"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "equity_win", "type": "List[int]"}, {"lineNumber": 262, "col_offset": 28, "nodeName": "equity_loss", "type": "List[int]"}, {"lineNumber": 265, "col_offset": 10, "nodeName": "get_fundschange_chart", "type": "Callable[[Any], Any]"}, {"lineNumber": 265, "col_offset": 37, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 266, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 269, "col_offset": 10, "nodeName": "get_fundschange_chart", "type": "Callable[[Any], Any]"}, {"lineNumber": 269, "col_offset": 37, "nodeName": "strategy", "type": "Any"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "y", "type": "Any"}, {"lineNumber": 287, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "drop_duplicates", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "drop_duplicates", "type": "Any"}, {"lineNumber": 306, "col_offset": 16, "nodeName": "wins", "type": "Any"}, {"lineNumber": 306, "col_offset": 22, "nodeName": "losses", "type": "Any"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "L", "type": "Logging"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "L", "type": "Logging"}, {"lineNumber": 314, "col_offset": 4, "nodeName": "L", "type": "Logging"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "L", "type": "Logging"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "L", "type": "Logging"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "L", "type": "Logging"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "L", "type": "Logging"}, {"lineNumber": 326, "col_offset": 4, "nodeName": "L", "type": "Logging"}, {"lineNumber": 327, "col_offset": 13, "nodeName": "L", "type": "Logging"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 334, "col_offset": 43, "nodeName": "rowAmount", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 346, "col_offset": 14, "nodeName": "p_name", "type": "str"}, {"lineNumber": 347, "col_offset": 23, "nodeName": "ravel", "type": "Any"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 356, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 374, "col_offset": 11, "nodeName": "get_fundschange_chart", "type": "Callable[[Any], Any]"}, {"lineNumber": 374, "col_offset": 35, "nodeName": "Strategy", "type": "str"}, {"lineNumber": 15, "col_offset": 23, "nodeName": "self", "type": "Logging"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "Iterable", "type": "Type[Iterable[Any]]"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "hDict", "type": "Dict[str, str]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "now", "type": "Callable"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 56, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 57, "col_offset": 13, "nodeName": "pd", "type": "Any"}, {"lineNumber": 59, "col_offset": 30, "nodeName": "pd", "type": "Any"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "Dd", "type": "Any"}, {"lineNumber": 59, "col_offset": 45, "nodeName": "Dt", "type": "Any"}, {"lineNumber": 59, "col_offset": 49, "nodeName": "Dh", "type": "Any"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "Dp", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "rounds", "type": "Any"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "t", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "myFundsChange", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "outcome", "type": "str"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "losses", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "totalGames", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "h", "type": "Any"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "find", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "round_name_value", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 49, "nodeName": "round", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 89, "col_offset": 37, "nodeName": "h", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "environ", "type": "os._Environ[str]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 91, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 93, "col_offset": 40, "nodeName": "h", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 94, "col_offset": 46, "nodeName": "t", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 95, "col_offset": 49, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 95, "col_offset": 53, "nodeName": "myFundsChange", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 96, "col_offset": 44, "nodeName": "h", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "h", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 98, "col_offset": 39, "nodeName": "t", "type": "Any"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "insert_one", "type": "Any"}, {"lineNumber": 100, "col_offset": 51, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "self", "type": "Logging"}, {"lineNumber": 104, "col_offset": 36, "nodeName": "self", "type": "Logging"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "self", "type": "Logging"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "self", "type": "Logging"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "LogDataFileFiltered", "type": "Any"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "LogDataFileFiltered", "type": "Any"}, {"lineNumber": 122, "col_offset": 103, "nodeName": "mean", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "Logging"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "Logging"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "sum", "type": "Any"}, {"lineNumber": 130, "col_offset": 69, "nodeName": "size", "type": "Any"}, {"lineNumber": 137, "col_offset": 39, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 139, "col_offset": 59, "nodeName": "mean", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "log_data_file_collapsed", "type": "Any"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "np", "type": "module"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 168, "col_offset": 29, "nodeName": "self", "type": "Logging"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "decision", "type": "str"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "decisions", "type": "List[str]"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "aggregate", "type": "Any"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "numbers", "type": "List[List[Any]]"}, {"lineNumber": 265, "col_offset": 10, "nodeName": "self", "type": "Logging"}, {"lineNumber": 269, "col_offset": 10, "nodeName": "self", "type": "Logging"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 274, "col_offset": 21, "nodeName": "aggregate", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "y", "type": "List[int]"}, {"lineNumber": 287, "col_offset": 20, "nodeName": "distinct", "type": "Any"}, {"lineNumber": 291, "col_offset": 13, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "wins", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "losses", "type": "Any"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "L", "type": "Logging"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 350, "col_offset": 18, "nodeName": "p_value", "type": "Any"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 351, "col_offset": 25, "nodeName": "p_value", "type": "Any"}, {"lineNumber": 353, "col_offset": 21, "nodeName": "filter_log_by_parameter", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 353, "col_offset": 45, "nodeName": "p_name", "type": "str"}, {"lineNumber": 353, "col_offset": 53, "nodeName": "p_value", "type": "Any"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 374, "col_offset": 11, "nodeName": "L", "type": "Logging"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 18, "col_offset": 27, "nodeName": "self", "type": "Logging"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "self", "type": "Logging"}, {"lineNumber": 19, "col_offset": 37, "nodeName": "read_csv", "type": "Any"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "self", "type": "Logging"}, {"lineNumber": 20, "col_offset": 37, "nodeName": "drop", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "self", "type": "Logging"}, {"lineNumber": 25, "col_offset": 33, "nodeName": "DataFrame", "type": "Any"}, {"lineNumber": 25, "col_offset": 46, "nodeName": "d", "type": "Dict[str, str]"}, {"lineNumber": 29, "col_offset": 43, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 29, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 29, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "p", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "pDict", "type": "Dict[str, str]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "join", "type": "Callable"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "h", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "key", "type": "str"}, {"lineNumber": 44, "col_offset": 24, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "tDict", "type": "Dict[str, str]"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "join", "type": "Callable"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "vars", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "d", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "dDict", "type": "Dict[str, str]"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "join", "type": "Callable"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 60, "col_offset": 48, "nodeName": "to_dict", "type": "Any"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "myFundsChange", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "outcome", "type": "str"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "totalGames", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "rounds", "type": "Any"}, {"lineNumber": 81, "col_offset": 57, "nodeName": "lastGameID", "type": "Any"}, {"lineNumber": 83, "col_offset": 33, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "round_name_value", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 84, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "round_name_value", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "round_name_value", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 41, "nodeName": "os", "type": "module"}, {"lineNumber": 91, "col_offset": 50, "nodeName": "now", "type": "Callable"}, {"lineNumber": 95, "col_offset": 53, "nodeName": "t", "type": "Any"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "games", "type": "Any"}, {"lineNumber": 103, "col_offset": 87, "nodeName": "value", "type": "Any"}, {"lineNumber": 108, "col_offset": 54, "nodeName": "Template", "type": "Any"}, {"lineNumber": 108, "col_offset": 85, "nodeName": "p_name", "type": "Any"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "self", "type": "Logging"}, {"lineNumber": 119, "col_offset": 34, "nodeName": "self", "type": "Logging"}, {"lineNumber": 122, "col_offset": 103, "nodeName": "np", "type": "module"}, {"lineNumber": 123, "col_offset": 51, "nodeName": "LogDataFileSummary", "type": "Any"}, {"lineNumber": 126, "col_offset": 48, "nodeName": "LogDataFileSummary", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "LogDataFileSummary", "type": "Any"}, {"lineNumber": 130, "col_offset": 69, "nodeName": "np", "type": "module"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "LogDataFileSummary", "type": "Any"}, {"lineNumber": 139, "col_offset": 59, "nodeName": "np", "type": "module"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "Logging"}, {"lineNumber": 152, "col_offset": 60, "nodeName": "x", "type": "Any"}, {"lineNumber": 152, "col_offset": 65, "nodeName": "FinalFundsChange", "type": "Any"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "i", "type": "Tuple[Any, Any]"}, {"lineNumber": 153, "col_offset": 38, "nodeName": "i", "type": "Tuple[Any, Any]"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "self", "type": "Logging"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "games", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 190, "col_offset": 68, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 193, "col_offset": 55, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 193, "col_offset": 87, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 194, "col_offset": 51, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 194, "col_offset": 82, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 195, "col_offset": 60, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 196, "col_offset": 55, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 196, "col_offset": 87, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 197, "col_offset": 20, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 197, "col_offset": 53, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 197, "col_offset": 84, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 198, "col_offset": 52, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 198, "col_offset": 82, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 199, "col_offset": 20, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 199, "col_offset": 51, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 274, "col_offset": 21, "nodeName": "games", "type": "Any"}, {"lineNumber": 287, "col_offset": 20, "nodeName": "games", "type": "Any"}, {"lineNumber": 291, "col_offset": 13, "nodeName": "self", "type": "Logging"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "self", "type": "Logging"}, {"lineNumber": 347, "col_offset": 23, "nodeName": "unique", "type": "Any"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "FinalList", "type": "List[Tuple[str, Any, Any]]"}, {"lineNumber": 354, "col_offset": 30, "nodeName": "p_name", "type": "str"}, {"lineNumber": 354, "col_offset": 38, "nodeName": "p_value", "type": "Any"}, {"lineNumber": 354, "col_offset": 47, "nodeName": "result", "type": "Any"}, {"lineNumber": 19, "col_offset": 37, "nodeName": "pd", "type": "Any"}, {"lineNumber": 19, "col_offset": 49, "nodeName": "log_filename", "type": "str"}, {"lineNumber": 20, "col_offset": 37, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 25, "col_offset": 33, "nodeName": "pd", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "key", "type": "str"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "ele", "type": "Any"}, {"lineNumber": 43, "col_offset": 47, "nodeName": "ele", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "key", "type": "str"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "key", "type": "str"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "datetime", "type": "module"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "self", "type": "Logging"}, {"lineNumber": 60, "col_offset": 48, "nodeName": "FinalDataFrame", "type": "Any"}, {"lineNumber": 73, "col_offset": 13, "nodeName": "t", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "h", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 81, "col_offset": 57, "nodeName": "h", "type": "Any"}, {"lineNumber": 91, "col_offset": 50, "nodeName": "datetime", "type": "Type[datetime.datetime]"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 103, "col_offset": 54, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 104, "col_offset": 89, "nodeName": "value", "type": "Any"}, {"lineNumber": 108, "col_offset": 54, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 109, "col_offset": 56, "nodeName": "Template", "type": "Any"}, {"lineNumber": 109, "col_offset": 87, "nodeName": "p_name", "type": "Any"}, {"lineNumber": 123, "col_offset": 51, "nodeName": "self", "type": "Logging"}, {"lineNumber": 126, "col_offset": 48, "nodeName": "self", "type": "Logging"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "self", "type": "Logging"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "self", "type": "Logging"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 153, "col_offset": 43, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 153, "col_offset": 47, "nodeName": "EquityValues", "type": "Any"}, {"lineNumber": 153, "col_offset": 61, "nodeName": "MinCallValues", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "self", "type": "Logging"}, {"lineNumber": 190, "col_offset": 72, "nodeName": "e", "type": "Any"}, {"lineNumber": 193, "col_offset": 20, "nodeName": "self", "type": "Logging"}, {"lineNumber": 193, "col_offset": 55, "nodeName": "self", "type": "Logging"}, {"lineNumber": 193, "col_offset": 87, "nodeName": "self", "type": "Logging"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "self", "type": "Logging"}, {"lineNumber": 194, "col_offset": 51, "nodeName": "self", "type": "Logging"}, {"lineNumber": 194, "col_offset": 82, "nodeName": "self", "type": "Logging"}, {"lineNumber": 195, "col_offset": 20, "nodeName": "self", "type": "Logging"}, {"lineNumber": 195, "col_offset": 60, "nodeName": "self", "type": "Logging"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "self", "type": "Logging"}, {"lineNumber": 196, "col_offset": 55, "nodeName": "self", "type": "Logging"}, {"lineNumber": 196, "col_offset": 87, "nodeName": "self", "type": "Logging"}, {"lineNumber": 197, "col_offset": 20, "nodeName": "self", "type": "Logging"}, {"lineNumber": 197, "col_offset": 53, "nodeName": "self", "type": "Logging"}, {"lineNumber": 197, "col_offset": 84, "nodeName": "self", "type": "Logging"}, {"lineNumber": 198, "col_offset": 20, "nodeName": "self", "type": "Logging"}, {"lineNumber": 198, "col_offset": 52, "nodeName": "self", "type": "Logging"}, {"lineNumber": 198, "col_offset": 82, "nodeName": "self", "type": "Logging"}, {"lineNumber": 199, "col_offset": 20, "nodeName": "self", "type": "Logging"}, {"lineNumber": 199, "col_offset": 51, "nodeName": "self", "type": "Logging"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "self", "type": "Logging"}, {"lineNumber": 211, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 211, "col_offset": 65, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 215, "col_offset": 68, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 216, "col_offset": 66, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 218, "col_offset": 53, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 219, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 220, "col_offset": 68, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 221, "col_offset": 65, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 222, "col_offset": 65, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 223, "col_offset": 66, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 232, "col_offset": 60, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 233, "col_offset": 57, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 234, "col_offset": 57, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 235, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 235, "col_offset": 58, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 236, "col_offset": 61, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 237, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 237, "col_offset": 58, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 238, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 238, "col_offset": 58, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 239, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 239, "col_offset": 59, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 240, "col_offset": 29, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 240, "col_offset": 70, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 241, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 241, "col_offset": 64, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "days", "type": "Any"}, {"lineNumber": 274, "col_offset": 21, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 281, "col_offset": 21, "nodeName": "cursor", "type": "Any"}, {"lineNumber": 287, "col_offset": 20, "nodeName": "mongodb", "type": "Any"}, {"lineNumber": 19, "col_offset": 49, "nodeName": "self", "type": "Logging"}, {"lineNumber": 20, "col_offset": 37, "nodeName": "self", "type": "Logging"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 41, "col_offset": 42, "nodeName": "ele", "type": "Any"}, {"lineNumber": 41, "col_offset": 51, "nodeName": "ele", "type": "Any"}, {"lineNumber": 43, "col_offset": 54, "nodeName": "isIterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 70, "nodeName": "val", "type": "Any"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "ele", "type": "Any"}, {"lineNumber": 46, "col_offset": 51, "nodeName": "ele", "type": "Any"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 49, "col_offset": 42, "nodeName": "ele", "type": "Any"}, {"lineNumber": 49, "col_offset": 51, "nodeName": "ele", "type": "Any"}, {"lineNumber": 60, "col_offset": 48, "nodeName": "self", "type": "Logging"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "self", "type": "Logging"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "summary_dict", "type": "Dict[str, Union[List[Dict[str, Any]], Any, str]]"}, {"lineNumber": 91, "col_offset": 50, "nodeName": "datetime", "type": "module"}, {"lineNumber": 100, "col_offset": 21, "nodeName": "self", "type": "Logging"}, {"lineNumber": 103, "col_offset": 54, "nodeName": "self", "type": "Logging"}, {"lineNumber": 103, "col_offset": 73, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 104, "col_offset": 56, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "FinalOutcome", "type": "Any"}, {"lineNumber": 105, "col_offset": 58, "nodeName": "FinalOutcome", "type": "Any"}, {"lineNumber": 108, "col_offset": 54, "nodeName": "self", "type": "Logging"}, {"lineNumber": 109, "col_offset": 56, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "FinalOutcome", "type": "Any"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "FinalOutcome", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "log_data_file_collapsed", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "log_data_file_collapsed", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "log_data_file_collapsed", "type": "Any"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "self", "type": "Logging"}, {"lineNumber": 173, "col_offset": 21, "nodeName": "self", "type": "Logging"}, {"lineNumber": 175, "col_offset": 37, "nodeName": "p_value", "type": "Any"}, {"lineNumber": 176, "col_offset": 56, "nodeName": "gameStage", "type": "str"}, {"lineNumber": 190, "col_offset": 39, "nodeName": "gameStage", "type": "str"}, {"lineNumber": 211, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 211, "col_offset": 65, "nodeName": "self", "type": "Logging"}, {"lineNumber": 212, "col_offset": 106, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 214, "col_offset": 108, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 215, "col_offset": 68, "nodeName": "self", "type": "Logging"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 216, "col_offset": 66, "nodeName": "self", "type": "Logging"}, {"lineNumber": 217, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 218, "col_offset": 53, "nodeName": "self", "type": "Logging"}, {"lineNumber": 219, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 220, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 220, "col_offset": 68, "nodeName": "self", "type": "Logging"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 221, "col_offset": 65, "nodeName": "self", "type": "Logging"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 222, "col_offset": 65, "nodeName": "self", "type": "Logging"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 223, "col_offset": 66, "nodeName": "self", "type": "Logging"}, {"lineNumber": 224, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 224, "col_offset": 60, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 225, "col_offset": 61, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 226, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 226, "col_offset": 57, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 227, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 227, "col_offset": 58, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 228, "col_offset": 57, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 229, "col_offset": 58, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 230, "col_offset": 58, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 231, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 231, "col_offset": 59, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 232, "col_offset": 60, "nodeName": "self", "type": "Logging"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 233, "col_offset": 57, "nodeName": "self", "type": "Logging"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 234, "col_offset": 57, "nodeName": "self", "type": "Logging"}, {"lineNumber": 235, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 235, "col_offset": 58, "nodeName": "self", "type": "Logging"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 236, "col_offset": 61, "nodeName": "self", "type": "Logging"}, {"lineNumber": 237, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 237, "col_offset": 58, "nodeName": "self", "type": "Logging"}, {"lineNumber": 238, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 238, "col_offset": 58, "nodeName": "self", "type": "Logging"}, {"lineNumber": 239, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 239, "col_offset": 59, "nodeName": "self", "type": "Logging"}, {"lineNumber": 240, "col_offset": 29, "nodeName": "self", "type": "Logging"}, {"lineNumber": 240, "col_offset": 70, "nodeName": "self", "type": "Logging"}, {"lineNumber": 241, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 241, "col_offset": 64, "nodeName": "self", "type": "Logging"}, {"lineNumber": 274, "col_offset": 21, "nodeName": "self", "type": "Logging"}, {"lineNumber": 275, "col_offset": 40, "nodeName": "strategy", "type": "str"}, {"lineNumber": 287, "col_offset": 20, "nodeName": "self", "type": "Logging"}, {"lineNumber": 294, "col_offset": 16, "nodeName": "gameStage", "type": "Any"}, {"lineNumber": 294, "col_offset": 48, "nodeName": "game_stage", "type": "Any"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "gameStage", "type": "Any"}, {"lineNumber": 300, "col_offset": 48, "nodeName": "game_stage", "type": "Any"}, {"lineNumber": 347, "col_offset": 23, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "ele", "type": "Any"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "ele", "type": "Any"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "isIterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 74, "nodeName": "val", "type": "Any"}, {"lineNumber": 43, "col_offset": 54, "nodeName": "self", "type": "Logging"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "ele", "type": "Any"}, {"lineNumber": 45, "col_offset": 41, "nodeName": "ele", "type": "Any"}, {"lineNumber": 46, "col_offset": 58, "nodeName": "isIterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 74, "nodeName": "val", "type": "Any"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "ele", "type": "Any"}, {"lineNumber": 48, "col_offset": 41, "nodeName": "ele", "type": "Any"}, {"lineNumber": 49, "col_offset": 58, "nodeName": "isIterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 74, "nodeName": "val", "type": "Any"}, {"lineNumber": 104, "col_offset": 56, "nodeName": "self", "type": "Logging"}, {"lineNumber": 104, "col_offset": 75, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 105, "col_offset": 58, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 109, "col_offset": 56, "nodeName": "self", "type": "Logging"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "self", "type": "Logging"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "self", "type": "Logging"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "self", "type": "Logging"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "decision", "type": "str"}, {"lineNumber": 170, "col_offset": 37, "nodeName": "gameStage", "type": "str"}, {"lineNumber": 170, "col_offset": 48, "nodeName": "outcome", "type": "str"}, {"lineNumber": 212, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 212, "col_offset": 63, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 212, "col_offset": 106, "nodeName": "self", "type": "Logging"}, {"lineNumber": 214, "col_offset": 26, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 214, "col_offset": 64, "nodeName": "d", "type": "Dict[Union[Tuple[str, str, str], Tuple[Any, str, Any]], Any]"}, {"lineNumber": 214, "col_offset": 108, "nodeName": "self", "type": "Logging"}, {"lineNumber": 224, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 224, "col_offset": 60, "nodeName": "self", "type": "Logging"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 225, "col_offset": 61, "nodeName": "self", "type": "Logging"}, {"lineNumber": 226, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 226, "col_offset": 57, "nodeName": "self", "type": "Logging"}, {"lineNumber": 227, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 227, "col_offset": 58, "nodeName": "self", "type": "Logging"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 228, "col_offset": 57, "nodeName": "self", "type": "Logging"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 229, "col_offset": 58, "nodeName": "self", "type": "Logging"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 230, "col_offset": 58, "nodeName": "self", "type": "Logging"}, {"lineNumber": 231, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 231, "col_offset": 59, "nodeName": "self", "type": "Logging"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "decision", "type": "Any"}, {"lineNumber": 293, "col_offset": 47, "nodeName": "decision", "type": "Any"}, {"lineNumber": 294, "col_offset": 16, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "decision", "type": "Any"}, {"lineNumber": 299, "col_offset": 47, "nodeName": "decision", "type": "Any"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 347, "col_offset": 23, "nodeName": "L", "type": "Logging"}, {"lineNumber": 347, "col_offset": 39, "nodeName": "p_name", "type": "str"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "isIterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 64, "nodeName": "val", "type": "Any"}, {"lineNumber": 41, "col_offset": 58, "nodeName": "self", "type": "Logging"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "isIterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 64, "nodeName": "val", "type": "Any"}, {"lineNumber": 46, "col_offset": 58, "nodeName": "self", "type": "Logging"}, {"lineNumber": 48, "col_offset": 48, "nodeName": "isIterable", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 64, "nodeName": "val", "type": "Any"}, {"lineNumber": 49, "col_offset": 58, "nodeName": "self", "type": "Logging"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "self", "type": "Logging"}, {"lineNumber": 105, "col_offset": 58, "nodeName": "self", "type": "Logging"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "self", "type": "Logging"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "self", "type": "Logging"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "e", "type": "Any"}, {"lineNumber": 190, "col_offset": 50, "nodeName": "e", "type": "Any"}, {"lineNumber": 212, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 212, "col_offset": 63, "nodeName": "self", "type": "Logging"}, {"lineNumber": 214, "col_offset": 26, "nodeName": "self", "type": "Logging"}, {"lineNumber": 214, "col_offset": 64, "nodeName": "self", "type": "Logging"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 294, "col_offset": 16, "nodeName": "self", "type": "Logging"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "log_data_file", "type": "Any"}, {"lineNumber": 300, "col_offset": 16, "nodeName": "self", "type": "Logging"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "self", "type": "Logging"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "self", "type": "Logging"}, {"lineNumber": 48, "col_offset": 48, "nodeName": "self", "type": "Logging"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "gameStage", "type": "Any"}, {"lineNumber": 144, "col_offset": 58, "nodeName": "game_stage", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "gameStage", "type": "Any"}, {"lineNumber": 147, "col_offset": 58, "nodeName": "game_stage", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "gameStage", "type": "Any"}, {"lineNumber": 150, "col_offset": 58, "nodeName": "game_stage", "type": "Any"}, {"lineNumber": 293, "col_offset": 16, "nodeName": "self", "type": "Logging"}, {"lineNumber": 299, "col_offset": 16, "nodeName": "self", "type": "Logging"}, {"lineNumber": 143, "col_offset": 53, "nodeName": "p_value", "type": "Any"}, {"lineNumber": 143, "col_offset": 65, "nodeName": "decision", "type": "Any"}, {"lineNumber": 143, "col_offset": 106, "nodeName": "decision", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "log_data_file_collapsed", "type": "Any"}, {"lineNumber": 146, "col_offset": 53, "nodeName": "p_value", "type": "Any"}, {"lineNumber": 146, "col_offset": 65, "nodeName": "decision", "type": "Any"}, {"lineNumber": 146, "col_offset": 106, "nodeName": "decision", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "log_data_file_collapsed", "type": "Any"}, {"lineNumber": 149, "col_offset": 53, "nodeName": "p_value", "type": "Any"}, {"lineNumber": 149, "col_offset": 65, "nodeName": "decision", "type": "Any"}, {"lineNumber": 149, "col_offset": 106, "nodeName": "decision", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "log_data_file_collapsed", "type": "Any"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "log_data_file_collapsed", "type": "Any"}, {"lineNumber": 143, "col_offset": 65, "nodeName": "log_data_file_collapsed", "type": "Any"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "self", "type": "Logging"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "log_data_file_collapsed", "type": "Any"}, {"lineNumber": 146, "col_offset": 65, "nodeName": "log_data_file_collapsed", "type": "Any"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "self", "type": "Logging"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "log_data_file_collapsed", "type": "Any"}, {"lineNumber": 149, "col_offset": 65, "nodeName": "log_data_file_collapsed", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "self", "type": "Logging"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "self", "type": "Logging"}, {"lineNumber": 143, "col_offset": 42, "nodeName": "p_name", "type": "Any"}, {"lineNumber": 143, "col_offset": 65, "nodeName": "self", "type": "Logging"}, {"lineNumber": 146, "col_offset": 13, "nodeName": "self", "type": "Logging"}, {"lineNumber": 146, "col_offset": 42, "nodeName": "p_name", "type": "Any"}, {"lineNumber": 146, "col_offset": 65, "nodeName": "self", "type": "Logging"}, {"lineNumber": 149, "col_offset": 13, "nodeName": "self", "type": "Logging"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "p_name", "type": "Any"}, {"lineNumber": 149, "col_offset": 65, "nodeName": "self", "type": "Logging"}]