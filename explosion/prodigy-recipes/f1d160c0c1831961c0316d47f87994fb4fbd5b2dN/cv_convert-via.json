[{"lineNumber": 44, "col_offset": 4, "nodeName": "examples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "image", "type": "Any"}, {"lineNumber": 66, "col_offset": 7, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "log", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "y", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "span", "type": "Dict[str, Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "attr", "type": "str"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "span", "type": "Dict[str, Any]"}, {"lineNumber": 40, "col_offset": 56, "nodeName": "f", "type": "io.TextIOWrapper"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "log", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "values", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "task", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "file_attrs", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "attr", "type": "str"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "attr", "type": "str"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "regions", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "separate_regions", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "output", "type": "List[str]"}, {"lineNumber": 28, "col_offset": 53, "nodeName": "locals", "type": "Callable[[], Dict[str, object]]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "f", "type": "io.TextIOWrapper"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "image", "type": "Any"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "values", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "region", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "regions", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "write", "type": "Callable[[str], int]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "log", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "eg", "type": "Dict[str, Any]"}, {"lineNumber": 75, "col_offset": 22, "nodeName": "examples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "KeyboardInterrupt", "type": "Type[KeyboardInterrupt]"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "region", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "region", "type": "Any"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "region", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "attr", "type": "str"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "ujson", "type": "module"}, {"lineNumber": 42, "col_offset": 55, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 42, "col_offset": 59, "nodeName": "data", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "keys", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "image", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "attr", "type": "str"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "file_attrs", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "attr", "type": "str"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "file_attrs", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "log", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "eg", "type": "Dict[str, Any]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "log", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "task", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "task", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "line", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "examples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 69, "col_offset": 60, "nodeName": "join", "type": "Callable"}, {"lineNumber": 69, "col_offset": 70, "nodeName": "output", "type": "List[str]"}, {"lineNumber": 70, "col_offset": 14, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 33, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 33, "col_offset": 38, "nodeName": "y", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "span", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "attrs", "type": "Any"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "data", "type": "Any"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "task", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "file_attrs", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "file_attrs", "type": "Any"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "image", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "task", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "eg", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "eg", "type": "Dict[str, Any]"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "get_via_span", "type": "Callable[[Any], Any]"}, {"lineNumber": 64, "col_offset": 42, "nodeName": "region", "type": "Any"}, {"lineNumber": 64, "col_offset": 54, "nodeName": "region", "type": "Any"}, {"lineNumber": 64, "col_offset": 64, "nodeName": "regions", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "examples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "open", "type": "Callable"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 71, "col_offset": 26, "nodeName": "examples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 73, "col_offset": 60, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 73, "col_offset": 64, "nodeName": "examples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "attr", "type": "str"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "attr", "type": "str"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "attr", "type": "str"}, {"lineNumber": 50, "col_offset": 40, "nodeName": "attr", "type": "str"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "task", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "attr", "type": "str"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "attr", "type": "str"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "get_via_span", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "region", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "examples", "type": "List[Dict[str, Any]]"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "eg", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 69, "col_offset": 13, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "ujson", "type": "module"}]