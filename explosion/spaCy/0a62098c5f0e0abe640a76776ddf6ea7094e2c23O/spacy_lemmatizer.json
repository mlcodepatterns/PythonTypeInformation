[{"lineNumber": 12, "col_offset": 17, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "lookups", "type": "Any"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "lookups", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "is_base_form", "type": "Any"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "is_base_form", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "lookup_table", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "univ_pos", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "index_table", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "exc_table", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "rules_table", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "lemmas", "type": "List[Any]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "lemmas", "type": "List[Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "lookup_table", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "string", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "orig", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "string", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "string", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "oov_forms", "type": "List[Any]"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "rules", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "form", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "E172", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "Lemmatizer"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "Lemmatizer"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "get_table", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "lookups", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "univ_pos", "type": "Any"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "univ_pos", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "lower", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "univ_pos", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "get_table", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "get_table", "type": "Any"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "get_table", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "lemmatize", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "string", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "self", "type": "Lemmatizer"}, {"lineNumber": 74, "col_offset": 20, "nodeName": "string", "type": "Any"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "morphology", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "self", "type": "Lemmatizer"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "string", "type": "Any"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "morphology", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "self", "type": "Lemmatizer"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "string", "type": "Any"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "morphology", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "self", "type": "Lemmatizer"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "string", "type": "Any"}, {"lineNumber": 83, "col_offset": 35, "nodeName": "morphology", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "self", "type": "Lemmatizer"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "string", "type": "Any"}, {"lineNumber": 86, "col_offset": 36, "nodeName": "morphology", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "self", "type": "Lemmatizer"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "string", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "morphology", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "self", "type": "Lemmatizer"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "string", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "morphology", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "self", "type": "Lemmatizer"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "string", "type": "Any"}, {"lineNumber": 95, "col_offset": 37, "nodeName": "morphology", "type": "Any"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "get_table", "type": "Any"}, {"lineNumber": 108, "col_offset": 14, "nodeName": "orth", "type": "Any"}, {"lineNumber": 108, "col_offset": 44, "nodeName": "string", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "key", "type": "Any"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "lookup_table", "type": "Any"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "lower", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "old", "type": "Any"}, {"lineNumber": 118, "col_offset": 17, "nodeName": "new", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "string", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "Errors", "type": "Any"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "E173", "type": "Any"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "lookups", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "self", "type": "Lemmatizer"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "get", "type": "Any"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "univ_pos", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "univ_pos", "type": "Any"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "callable", "type": "Callable[[Any], bool]"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "is_base_form", "type": "Any"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "is_base_form", "type": "Any"}, {"lineNumber": 55, "col_offset": 61, "nodeName": "univ_pos", "type": "Any"}, {"lineNumber": 55, "col_offset": 71, "nodeName": "morphology", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "lookups", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "lookups", "type": "Any"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "lookups", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "univ_pos", "type": "Any"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "self", "type": "Lemmatizer"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "get", "type": "Any"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "univ_pos", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "get", "type": "Any"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "univ_pos", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "get", "type": "Any"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "univ_pos", "type": "Any"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "lookups", "type": "Any"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "orth", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "lookup_table", "type": "Any"}, {"lineNumber": 115, "col_offset": 17, "nodeName": "string", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "old", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "form", "type": "Any"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "fromkeys", "type": "Callable"}, {"lineNumber": 128, "col_offset": 42, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "exceptions", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "form", "type": "Any"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "oov_forms", "type": "List[Any]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "orig", "type": "Any"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 31, "col_offset": 44, "nodeName": "lookups", "type": "Any"}, {"lineNumber": 31, "col_offset": 53, "nodeName": "Lookups", "type": "Any"}, {"lineNumber": 32, "col_offset": 29, "nodeName": "Errors", "type": "Any"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "self", "type": "Lemmatizer"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "string", "type": "Any"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "string", "type": "Any"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "UPOS_NAMES", "type": "Any"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "lower", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "self", "type": "Lemmatizer"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "self", "type": "Lemmatizer"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "lower", "type": "Any"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "self", "type": "Lemmatizer"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "self", "type": "Lemmatizer"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "self", "type": "Lemmatizer"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "string", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "index_table", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "exc_table", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "rules_table", "type": "Any"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "self", "type": "Lemmatizer"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "key", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "string", "type": "Any"}, {"lineNumber": 120, "col_offset": 58, "nodeName": "new", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "form", "type": "Any"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 135, "col_offset": 32, "nodeName": "form", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 20, "nodeName": "lookup_table", "type": "Any"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "string", "type": "Any"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "string", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "univ_pos", "type": "Any"}, {"lineNumber": 60, "col_offset": 47, "nodeName": "get", "type": "Any"}, {"lineNumber": 60, "col_offset": 61, "nodeName": "univ_pos", "type": "Any"}, {"lineNumber": 60, "col_offset": 72, "nodeName": "get", "type": "Any"}, {"lineNumber": 60, "col_offset": 88, "nodeName": "univ_pos", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "lower", "type": "Any"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "string", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "index_table", "type": "Any"}, {"lineNumber": 60, "col_offset": 47, "nodeName": "exc_table", "type": "Any"}, {"lineNumber": 60, "col_offset": 72, "nodeName": "rules_table", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "string", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "form", "type": "Any"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "index", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "form", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "form", "type": "Any"}, {"lineNumber": 123, "col_offset": 42, "nodeName": "isalpha", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "oov_forms", "type": "List[Any]"}, {"lineNumber": 120, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 120, "col_offset": 36, "nodeName": "string", "type": "Any"}, {"lineNumber": 120, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 120, "col_offset": 50, "nodeName": "old", "type": "Any"}, {"lineNumber": 123, "col_offset": 42, "nodeName": "form", "type": "Any"}]