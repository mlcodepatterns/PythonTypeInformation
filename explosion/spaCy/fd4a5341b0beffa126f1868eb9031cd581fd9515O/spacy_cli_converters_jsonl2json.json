[{"lineNumber": 10, "col_offset": 0, "nodeName": "ner_jsonl2json", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "_cleanup_spans", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "json_docs", "type": "List[Any]"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "input_examples", "type": "List[Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "sentencizer", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "json_docs", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "seen", "type": "Set[Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "span", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "spans", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 11, "col_offset": 7, "nodeName": "lang", "type": "Any"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "create_pipe", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 17, "col_offset": 11, "nodeName": "batch", "type": "Any"}, {"lineNumber": 17, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "docs", "type": "List[Any]"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "record", "type": "Any"}, {"lineNumber": 19, "col_offset": 22, "nodeName": "batch", "type": "Any"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 12, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "json_loads", "type": "Any"}, {"lineNumber": 14, "col_offset": 39, "nodeName": "line", "type": "Any"}, {"lineNumber": 14, "col_offset": 49, "nodeName": "line", "type": "Any"}, {"lineNumber": 15, "col_offset": 10, "nodeName": "get_lang_class", "type": "Any"}, {"lineNumber": 15, "col_offset": 25, "nodeName": "lang", "type": "Any"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 17, "col_offset": 30, "nodeName": "minibatch", "type": "Any"}, {"lineNumber": 17, "col_offset": 40, "nodeName": "input_examples", "type": "List[Any]"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "raw_text", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "ents", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "doc", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "spans", "type": "List[Any]"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "ents", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "span", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "srsly", "type": "Any"}, {"lineNumber": 14, "col_offset": 57, "nodeName": "split", "type": "Any"}, {"lineNumber": 17, "col_offset": 61, "nodeName": "n_sents", "type": "Any"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "record", "type": "Any"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "record", "type": "Any"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "ents", "type": "Any"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "ents", "type": "Any"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "make_doc", "type": "Any"}, {"lineNumber": 26, "col_offset": 31, "nodeName": "raw_text", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "sentencizer", "type": "Any"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "doc", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "doc", "type": "Any"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "_cleanup_spans", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 38, "nodeName": "spans", "type": "List[Any]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "doc", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "json_docs", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "docs_to_json", "type": "Any"}, {"lineNumber": 31, "col_offset": 38, "nodeName": "docs", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "is_space", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "span", "type": "Any"}, {"lineNumber": 43, "col_offset": 32, "nodeName": "is_space", "type": "Any"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "span", "type": "Any"}, {"lineNumber": 47, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "start", "type": "Any"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "end", "type": "Any"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "record", "type": "Any"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "record", "type": "Any"}, {"lineNumber": 25, "col_offset": 59, "nodeName": "e", "type": "Any"}, {"lineNumber": 25, "col_offset": 64, "nodeName": "ents", "type": "Any"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "char_span", "type": "Any"}, {"lineNumber": 28, "col_offset": 35, "nodeName": "s", "type": "Any"}, {"lineNumber": 28, "col_offset": 38, "nodeName": "e", "type": "Any"}, {"lineNumber": 28, "col_offset": 65, "nodeName": "ents", "type": "List[Tuple[Any, Any, Any]]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "docs", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "span", "type": "Any"}, {"lineNumber": 42, "col_offset": 23, "nodeName": "span", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "span", "type": "Any"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "span", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 45, "col_offset": 23, "nodeName": "span", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "span", "type": "Any"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "span", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "seen", "type": "Set[Any]"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "span", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 14, "col_offset": 57, "nodeName": "strip", "type": "Any"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "e", "type": "Any"}, {"lineNumber": 25, "col_offset": 33, "nodeName": "e", "type": "Any"}, {"lineNumber": 25, "col_offset": 43, "nodeName": "e", "type": "Any"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "doc", "type": "Any"}, {"lineNumber": 28, "col_offset": 47, "nodeName": "L", "type": "Any"}, {"lineNumber": 28, "col_offset": 54, "nodeName": "s", "type": "Any"}, {"lineNumber": 28, "col_offset": 57, "nodeName": "e", "type": "Any"}, {"lineNumber": 28, "col_offset": 60, "nodeName": "L", "type": "Any"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "span", "type": "Any"}, {"lineNumber": 43, "col_offset": 32, "nodeName": "span", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "output", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "seen", "type": "Set[Any]"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "start", "type": "Any"}, {"lineNumber": 52, "col_offset": 46, "nodeName": "end", "type": "Any"}, {"lineNumber": 14, "col_offset": 57, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "span", "type": "Any"}, {"lineNumber": 52, "col_offset": 46, "nodeName": "span", "type": "Any"}]