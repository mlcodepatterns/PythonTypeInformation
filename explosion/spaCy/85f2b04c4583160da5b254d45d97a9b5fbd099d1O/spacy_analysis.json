[{"lineNumber": 11, "col_offset": 0, "nodeName": "analyze_pipes", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "analyze_all_pipes", "type": "Callable[..., Any]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "dot_to_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "validate_attrs", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 0, "nodeName": "_get_feature_for_attr", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 0, "nodeName": "get_assigns_for_attr", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "get_requires_for_attr", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "print_summary", "type": "Callable[..., Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "prev_pipes", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "pipe_requires", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "requires", "type": "collections.OrderedDict[Any, bool]"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "requires", "type": "collections.OrderedDict[Any, bool]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "problems", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "problems", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "problems", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "problems", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "result", "type": "Dict[Any, Union[Dict[nothing, nothing], bool]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "value", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "values", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "result", "type": "Dict[Any, Union[Dict[nothing, nothing], bool]]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "data", "type": "Dict[Any, Union[Dict[nothing, nothing], bool]]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "objs", "type": "Dict[str, Any]"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "values", "type": "Any"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "result", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "result", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "msg", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "overview", "type": "List[Tuple[int, Any, Any, Any, Any]]"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "problems", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "header", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "n_problems", "type": "int"}, {"lineNumber": 175, "col_offset": 7, "nodeName": "no_print", "type": "Any"}, {"lineNumber": 23, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "pipe", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "prev_pipes", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "annot", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "fulfilled", "type": "bool"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "items", "type": "Callable"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 49, "col_offset": 37, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "path", "type": "Dict[Any, Union[Dict[nothing, nothing], bool]]"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "result", "type": "Dict[Any, Union[Dict[nothing, nothing], bool]]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "parts", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "dot_to_dict", "type": "Callable[[Any], Any]"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "values", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "Doc", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "Token", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "obj_key", "type": "Any"}, {"lineNumber": 82, "col_offset": 17, "nodeName": "attrs", "type": "Union[Dict[nothing, nothing], bool]"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "items", "type": "Callable"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "feature", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "pipe_name", "type": "Any"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "pipe", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "pipe_assigns", "type": "Any"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "_get_feature_for_attr", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 131, "col_offset": 43, "nodeName": "attr", "type": "Any"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "_get_feature_for_attr", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 141, "col_offset": 43, "nodeName": "attr", "type": "Any"}, {"lineNumber": 154, "col_offset": 10, "nodeName": "Printer", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 157, "col_offset": 37, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "requires", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assigns", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "retok", "type": "Any"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "divider", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "table", "type": "Any"}, {"lineNumber": 165, "col_offset": 14, "nodeName": "overview", "type": "List[Tuple[int, Any, Any, Any, Any]]"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 167, "col_offset": 7, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "index", "type": "int"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "prev_name", "type": "Any"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "prev_pipe", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "prev_assigns", "type": "Any"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "annot", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "prev_assigns", "type": "Any"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "requires", "type": "collections.OrderedDict[Any, bool]"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "fulfilled", "type": "bool"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "warn", "type": "Any"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "pipe", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "problems", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "analyze_pipes", "type": "Callable[..., Any]"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 50, "col_offset": 49, "nodeName": "name", "type": "Any"}, {"lineNumber": 50, "col_offset": 55, "nodeName": "pipe", "type": "Any"}, {"lineNumber": 50, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "item", "type": "Any"}, {"lineNumber": 65, "col_offset": 23, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "parts", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "is_last", "type": "bool"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "path", "type": "Union[bool, Dict[nothing, nothing]]"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "data", "type": "Dict[Any, Union[Dict[nothing, nothing], bool]]"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "obj_key", "type": "Any"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "objs", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "invalid_attrs", "type": "str"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "attr", "type": "nothing"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "value", "type": "nothing"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "items", "type": "Callable"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "obj", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "pipe", "type": "Any"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "feature", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "attr", "type": "Any"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "pipe_assigns", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "pretty", "type": "Any"}, {"lineNumber": 154, "col_offset": 42, "nodeName": "no_print", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 157, "col_offset": 18, "nodeName": "pipe", "type": "Any"}, {"lineNumber": 157, "col_offset": 37, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 27, "nodeName": "pipe", "type": "Any"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 159, "col_offset": 26, "nodeName": "pipe", "type": "Any"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 24, "nodeName": "pipe", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "problems", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "analyze_pipes", "type": "Callable[..., Any]"}, {"lineNumber": 162, "col_offset": 39, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 162, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 162, "col_offset": 59, "nodeName": "pipe", "type": "Any"}, {"lineNumber": 162, "col_offset": 65, "nodeName": "i", "type": "int"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "msg", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "msg", "type": "Any"}, {"lineNumber": 165, "col_offset": 31, "nodeName": "header", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "divider", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "problem", "type": "List[Any]"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "items", "type": "Callable"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "problem", "type": "List[Any]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "good", "type": "Any"}, {"lineNumber": 176, "col_offset": 28, "nodeName": "overview", "type": "List[Tuple[int, Any, Any, Any, Any]]"}, {"lineNumber": 176, "col_offset": 50, "nodeName": "problems", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "pipeline", "type": "Any"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "annot", "type": "Any"}, {"lineNumber": 26, "col_offset": 47, "nodeName": "annot", "type": "Any"}, {"lineNumber": 26, "col_offset": 56, "nodeName": "pipe_requires", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "prev_pipe", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "annot", "type": "Any"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "name", "type": "Any"}, {"lineNumber": 50, "col_offset": 69, "nodeName": "warn", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "item", "type": "Any"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "obj_key", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "span_attrs", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "join", "type": "Callable"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "attrs", "type": "Union[Dict[nothing, nothing], bool]"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "attrs", "type": "Union[Dict[nothing, nothing], bool]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "attr", "type": "nothing"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "endswith", "type": "nothing"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "value", "type": "nothing"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "good", "type": "str"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "bad", "type": "str"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "objs", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "overview", "type": "List[Tuple[int, Any, Any, Any, Any]]"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "requires", "type": "Any"}, {"lineNumber": 161, "col_offset": 44, "nodeName": "assigns", "type": "Any"}, {"lineNumber": 161, "col_offset": 53, "nodeName": "retok", "type": "Any"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "name", "type": "Any"}, {"lineNumber": 162, "col_offset": 39, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 166, "col_offset": 32, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "p", "type": "List[Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "msg", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 168, "col_offset": 43, "nodeName": "n_problems", "type": "int"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "problems", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "problem", "type": "str"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "msg", "type": "Any"}, {"lineNumber": 23, "col_offset": 20, "nodeName": "index", "type": "int"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "requires", "type": "collections.OrderedDict[Any, bool]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "problems", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "user_warning", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "lower", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "path", "type": "Dict[Any, Union[Dict[nothing, nothing], bool]]"}, {"lineNumber": 67, "col_offset": 49, "nodeName": "is_last", "type": "bool"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "attr", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 87, "col_offset": 38, "nodeName": "a", "type": "Any"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "format", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "format", "type": "Any"}, {"lineNumber": 93, "col_offset": 19, "nodeName": "value", "type": "nothing"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "ext_attr", "type": "nothing"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "ext_value", "type": "nothing"}, {"lineNumber": 95, "col_offset": 43, "nodeName": "items", "type": "nothing"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "attr", "type": "nothing"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 105, "col_offset": 38, "nodeName": "obj_key", "type": "Any"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "attr", "type": "nothing"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "good", "type": "str"}, {"lineNumber": 107, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 108, "col_offset": 23, "nodeName": "obj_key", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "obj", "type": "Any"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "attr", "type": "nothing"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "result", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "pipe_name", "type": "Any"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "pipe", "type": "Any"}, {"lineNumber": 166, "col_offset": 37, "nodeName": "values", "type": "Callable"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "values", "type": "Callable"}, {"lineNumber": 171, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 171, "col_offset": 36, "nodeName": "problem", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "warn", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "annot", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "format", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "value", "type": "Any"}, {"lineNumber": 66, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "parts", "type": "Any"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "attr", "type": "Any"}, {"lineNumber": 85, "col_offset": 47, "nodeName": "values", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "format", "type": "Any"}, {"lineNumber": 87, "col_offset": 44, "nodeName": "a", "type": "Any"}, {"lineNumber": 87, "col_offset": 49, "nodeName": "values", "type": "Any"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "E181", "type": "Any"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "obj_key", "type": "Any"}, {"lineNumber": 88, "col_offset": 67, "nodeName": "invalid_attrs", "type": "str"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "E182", "type": "Any"}, {"lineNumber": 90, "col_offset": 53, "nodeName": "obj_key", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 95, "col_offset": 43, "nodeName": "value", "type": "nothing"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "ext_value", "type": "nothing"}, {"lineNumber": 98, "col_offset": 24, "nodeName": "good", "type": "str"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "bad", "type": "str"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "format", "type": "Any"}, {"lineNumber": 106, "col_offset": 43, "nodeName": "join", "type": "Callable"}, {"lineNumber": 106, "col_offset": 52, "nodeName": "value", "type": "nothing"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "format", "type": "Any"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "format", "type": "Any"}, {"lineNumber": 166, "col_offset": 37, "nodeName": "problems", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "problems", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "msg", "type": "Any"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 172, "col_offset": 64, "nodeName": "name", "type": "Any"}, {"lineNumber": 172, "col_offset": 70, "nodeName": "problem", "type": "str"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "W025", "type": "Any"}, {"lineNumber": 37, "col_offset": 55, "nodeName": "name", "type": "Any"}, {"lineNumber": 37, "col_offset": 66, "nodeName": "annot", "type": "Any"}, {"lineNumber": 85, "col_offset": 57, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "E180", "type": "Any"}, {"lineNumber": 87, "col_offset": 59, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 87, "col_offset": 72, "nodeName": "obj_key", "type": "Any"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "Errors", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "Errors", "type": "Any"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "format", "type": "Any"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "obj_key", "type": "Any"}, {"lineNumber": 98, "col_offset": 57, "nodeName": "ext_attr", "type": "nothing"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 99, "col_offset": 45, "nodeName": "good", "type": "str"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "E184", "type": "Any"}, {"lineNumber": 103, "col_offset": 57, "nodeName": "attr", "type": "nothing"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "E183", "type": "Any"}, {"lineNumber": 107, "col_offset": 57, "nodeName": "bad", "type": "str"}, {"lineNumber": 107, "col_offset": 71, "nodeName": "good", "type": "str"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "E185", "type": "Any"}, {"lineNumber": 110, "col_offset": 56, "nodeName": "obj_key", "type": "Any"}, {"lineNumber": 110, "col_offset": 70, "nodeName": "attr", "type": "nothing"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "Warnings", "type": "Any"}, {"lineNumber": 85, "col_offset": 57, "nodeName": "attr", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "Errors", "type": "Any"}, {"lineNumber": 86, "col_offset": 58, "nodeName": "join", "type": "Callable"}, {"lineNumber": 86, "col_offset": 68, "nodeName": "span_attrs", "type": "List[Any]"}, {"lineNumber": 87, "col_offset": 59, "nodeName": "a", "type": "Any"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "E182", "type": "Any"}, {"lineNumber": 99, "col_offset": 51, "nodeName": "join", "type": "Callable"}, {"lineNumber": 99, "col_offset": 60, "nodeName": "ext_value", "type": "nothing"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "format", "type": "Any"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "Errors", "type": "Any"}, {"lineNumber": 103, "col_offset": 72, "nodeName": "attr", "type": "nothing"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "Errors", "type": "Any"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "Errors", "type": "Any"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "Errors", "type": "Any"}, {"lineNumber": 94, "col_offset": 61, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 94, "col_offset": 75, "nodeName": "obj_key", "type": "Any"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "E183", "type": "Any"}, {"lineNumber": 100, "col_offset": 65, "nodeName": "bad", "type": "str"}, {"lineNumber": 100, "col_offset": 79, "nodeName": "good", "type": "str"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "Errors", "type": "Any"}]