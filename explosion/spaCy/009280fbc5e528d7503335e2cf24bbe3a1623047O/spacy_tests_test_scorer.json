[{"lineNumber": 34, "col_offset": 0, "nodeName": "test_ner_per_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "test_ner_cardinal", "type": "List[List[Union[str, Dict[str, List[List[Union[int, str]]]]]]]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "test_ner_apple", "type": "List[List[Union[str, Dict[str, List[Tuple[int, int, str]]]]]]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "scorer", "type": "spacy.scorer.Scorer"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "test_ner_cardinal", "type": "List[List[Union[str, Dict[str, List[List[Union[int, str]]]]]]]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "scores", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "scorer", "type": "spacy.scorer.Scorer"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "test_ner_apple", "type": "List[List[Union[str, Dict[str, List[Tuple[int, int, str]]]]]]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "scores", "type": "Dict[str, Any]"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "Scorer", "type": "Type[spacy.scorer.Scorer]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "input_", "type": "str"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "annot", "type": "Dict[str, List[List[Union[int, str]]]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "doc", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "gold", "type": "Any"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "scorer", "type": "spacy.scorer.Scorer"}, {"lineNumber": 52, "col_offset": 13, "nodeName": "Scorer", "type": "Type[spacy.scorer.Scorer]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "input_", "type": "str"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "annot", "type": "Dict[str, List[Tuple[int, int, str]]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "doc", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "gold", "type": "Any"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "scorer", "type": "spacy.scorer.Scorer"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "get_doc", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "en_vocab", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "GoldParse", "type": "Any"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "doc", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "score", "type": "Callable[..., None]"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "doc", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "gold", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 54, "col_offset": 14, "nodeName": "get_doc", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "en_vocab", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "GoldParse", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "doc", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "score", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "doc", "type": "Any"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "gold", "type": "Any"}, {"lineNumber": 59, "col_offset": 11, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "approx", "type": "Any"}, {"lineNumber": 60, "col_offset": 11, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "approx", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "approx", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 51, "nodeName": "approx", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "scorer", "type": "spacy.scorer.Scorer"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "scorer", "type": "spacy.scorer.Scorer"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 39, "col_offset": 41, "nodeName": "annot", "type": "Dict[str, List[List[Union[int, str]]]]"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 55, "col_offset": 41, "nodeName": "annot", "type": "Dict[str, List[Tuple[int, int, str]]]"}, {"lineNumber": 65, "col_offset": 11, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "results", "type": "Dict[str, Any]"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "input_", "type": "str"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "input_", "type": "str"}]