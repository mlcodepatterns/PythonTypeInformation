[{"lineNumber": 44, "col_offset": 0, "nodeName": "validator", "type": "Callable[[], Any]"}, {"lineNumber": 58, "col_offset": 0, "nodeName": "test_pattern_validation", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "test_minimal_pattern_validation", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "TEST_PATTERNS", "type": "List[Union[Tuple[List[Dict[unicode, unicode]], int, int], Tuple[List[Union[Dict[unicode, Dict[unicode, bool]], Dict[unicode, None]]], int, int], Tuple[List[Dict[unicode, Union[bool, unicode]]], int, int], Tuple[unicode, int, int], Tuple[List[int], int, int], Tuple[List[Dict[unicode, Dict[unicode, Union[unicode, Dict[unicode, unicode]]]]], int, int], Tuple[List[Union[Dict[unicode, Union[unicode, int]], Dict[unicode, unicode]]], int, int], Tuple[List[Union[Dict[unicode, Dict[unicode, List[Union[int, unicode]]]], Dict[unicode, Dict[unicode, unicode]]]], int, int], Tuple[List[Dict[unicode, Dict[unicode, int]]], int, int], Tuple[List[Dict[unicode, Dict[unicode, unicode]]], int, int], Tuple[List[Dict[unicode, int]], int, int], Tuple[List[Union[Dict[unicode, Dict[unicode, List[unicode]]], Dict[unicode, unicode]]], int, int], Tuple[List[Dict[unicode, Union[bool, Dict[unicode, int]]]], int, int], Tuple[List[Dict[unicode, Dict[unicode, Union[unicode, List[unicode]]]]], int, int], Tuple[List[Dict[unicode, Dict[unicode, Union[Dict[unicode, List[unicode]], int, Dict[unicode, int]]]]], int, int], Tuple[List[Dict[unicode, bool]], int, int]]]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "XFAIL_TEST_PATTERNS", "type": "List[Tuple[List[Dict[unicode, unicode]], int, int]]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "matcher", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "errors", "type": "Any"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "errors", "type": "Any"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "matcher", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "get_json_validator", "type": "Any"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "TOKEN_PATTERN_SCHEMA", "type": "Dict[str, Union[str, Dict[str, Union[bool, str, Dict[str, Union[str, Dict[str, Union[str, Dict[str, Dict[str, str]], List[str]]], List[Dict[str, Union[bool, str, Dict[str, Dict[str, Union[str, Dict[str, Union[str, List[str]]]]]], List[str]]]]]]]]]]"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "Matcher", "type": "Any"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "en_vocab", "type": "Any"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "validate_json", "type": "Any"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "validator", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "n_errors", "type": "Any"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "validate_json", "type": "Any"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "validator", "type": "Any"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "n_errors", "type": "Any"}, {"lineNumber": 73, "col_offset": 14, "nodeName": "Matcher", "type": "Any"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "en_vocab", "type": "Any"}, {"lineNumber": 74, "col_offset": 7, "nodeName": "n_min_errors", "type": "Any"}, {"lineNumber": 54, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "MatchPatternError", "type": "Type[spacy.errors.MatchPatternError]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "errors", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "errors", "type": "Any"}, {"lineNumber": 77, "col_offset": 9, "nodeName": "n_errors", "type": "Any"}, {"lineNumber": 54, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "matcher", "type": "Any"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "add", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "add", "type": "Any"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "matcher", "type": "Any"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "pattern", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "matcher", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "pattern", "type": "Any"}]