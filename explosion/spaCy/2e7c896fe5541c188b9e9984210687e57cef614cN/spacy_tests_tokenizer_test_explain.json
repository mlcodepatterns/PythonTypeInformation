[{"lineNumber": 56, "col_offset": 0, "nodeName": "test_tokenizer_explain", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 0, "nodeName": "LANGUAGES", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 59, "col_offset": 4, "nodeName": "examples", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "sentences", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "param", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "param", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "param", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "param", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "importorskip", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "examples", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "debug_tokens", "type": "List[Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 58, "col_offset": 10, "nodeName": "get_lang_class", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "lang", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 59, "col_offset": 67, "nodeName": "lang", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "text", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "debug_tokens", "type": "List[Any]"}, {"lineNumber": 15, "col_offset": 29, "nodeName": "xfail", "type": "Any"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "xfail", "type": "Any"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "xfail", "type": "Any"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "xfail", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "t", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "t", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "t", "type": "Any"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "t", "type": "Any"}, {"lineNumber": 15, "col_offset": 29, "nodeName": "mark", "type": "Any"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "mark", "type": "Any"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "mark", "type": "Any"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "mark", "type": "Any"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 61, "col_offset": 65, "nodeName": "is_space", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "explain", "type": "Any"}, {"lineNumber": 62, "col_offset": 60, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 15, "col_offset": 29, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 61, "col_offset": 65, "nodeName": "t", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "nlp", "type": "Any"}]