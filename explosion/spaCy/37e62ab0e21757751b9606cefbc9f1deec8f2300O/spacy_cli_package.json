[{"lineNumber": 69, "col_offset": 0, "nodeName": "create_dirs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "create_file", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "generate_meta", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 0, "nodeName": "validate_meta", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "get_template", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "input_path", "type": "Any"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "output_path", "type": "Any"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "meta_path", "type": "Any"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "template_setup", "type": "str"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "template_manifest", "type": "str"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "template_init", "type": "str"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "meta_path", "type": "Any"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "meta", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "model_name_v", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "main_path", "type": "Any"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "package_path", "type": "Any"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "meta", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "pipe_names", "type": "Any"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "settings", "type": "List[Union[Tuple[str, str, Union[str, Any]], Tuple[str, str, str], Tuple[str, str, Union[bool, Any]]]]"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "meta", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "key", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "keys", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "meta", "type": "Any"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "text", "type": "str"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "ensure_path", "type": "Any"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "input_dir", "type": "Any"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "ensure_path", "type": "Any"}, {"lineNumber": 32, "col_offset": 35, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "ensure_path", "type": "Any"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "meta_path", "type": "Any"}, {"lineNumber": 38, "col_offset": 7, "nodeName": "meta_path", "type": "Any"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "get_template", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "get_template", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "get_template", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "meta_path", "type": "Any"}, {"lineNumber": 45, "col_offset": 7, "nodeName": "is_file", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "meta", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "validate_meta", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "meta", "type": "Any"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "output_path", "type": "Any"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "model_name_v", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "main_path", "type": "Any"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "create_dirs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "package_path", "type": "Any"}, {"lineNumber": 57, "col_offset": 30, "nodeName": "force", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "copytree", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "create_file", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "create_file", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 61, "col_offset": 40, "nodeName": "template_setup", "type": "str"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "create_file", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "template_manifest", "type": "str"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "create_file", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 63, "col_offset": 46, "nodeName": "template_init", "type": "str"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "prints", "type": "Any"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "main_path", "type": "Any"}, {"lineNumber": 70, "col_offset": 7, "nodeName": "exists", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "force", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "mkdir", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "package_path", "type": "Any"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "touch", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "write", "type": "Any"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "contents", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "existing_meta", "type": "Any"}, {"lineNumber": 99, "col_offset": 10, "nodeName": "load_model_from_path", "type": "Any"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "meta", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "vectors_length", "type": "Any"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "prints", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "setting", "type": "str"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "desc", "type": "str"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "default", "type": "Union[str, Any, bool]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "response", "type": "Any"}, {"lineNumber": 109, "col_offset": 7, "nodeName": "__title__", "type": "Any"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "__title__", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "get", "type": "Callable[..., requests.models.Response]"}, {"lineNumber": 124, "col_offset": 7, "nodeName": "status_code", "type": "int"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "util", "type": "Any"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "util", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "util", "type": "Any"}, {"lineNumber": 34, "col_offset": 11, "nodeName": "input_path", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "prints", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "input_path", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "output_path", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "prints", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "output_path", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "prints", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "meta_path", "type": "Any"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "input_path", "type": "Any"}, {"lineNumber": 45, "col_offset": 7, "nodeName": "meta_path", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "read_json", "type": "Any"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "meta_path", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "create_meta", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "meta", "type": "Any"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "meta", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "model_name", "type": "Any"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "meta", "type": "Any"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "shutil", "type": "module"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "path2str", "type": "Any"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "input_path", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "path2str", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "main_path", "type": "Any"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "json_dumps", "type": "Any"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "meta", "type": "Any"}, {"lineNumber": 61, "col_offset": 16, "nodeName": "main_path", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "main_path", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "package_path", "type": "Any"}, {"lineNumber": 70, "col_offset": 7, "nodeName": "package_path", "type": "Any"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 99, "col_offset": 10, "nodeName": "util", "type": "Any"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 99, "col_offset": 41, "nodeName": "model_path", "type": "Any"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "vectors", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "get_raw_input", "type": "Any"}, {"lineNumber": 107, "col_offset": 38, "nodeName": "desc", "type": "str"}, {"lineNumber": 107, "col_offset": 44, "nodeName": "default", "type": "Union[Any, bool, str]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "meta", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "default", "type": "Union[Any, bool, str]"}, {"lineNumber": 108, "col_offset": 67, "nodeName": "response", "type": "Any"}, {"lineNumber": 109, "col_offset": 7, "nodeName": "about", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "meta", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "about", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "requests", "type": "module"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "__model_files__", "type": "Any"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "filepath", "type": "Any"}, {"lineNumber": 124, "col_offset": 7, "nodeName": "r", "type": "requests.models.Response"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "prints", "type": "Any"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "exists", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "exists", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "exists", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "util", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "prints", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "meta_path", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "generate_meta", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "input_dir", "type": "Any"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "meta", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "meta", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "package_path", "type": "Any"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "model_name_v", "type": "Any"}, {"lineNumber": 66, "col_offset": 55, "nodeName": "model_name_v", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "prints", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "package_path", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "open", "type": "Any"}, {"lineNumber": 88, "col_offset": 43, "nodeName": "get", "type": "Union[Callable, Any]"}, {"lineNumber": 89, "col_offset": 39, "nodeName": "get", "type": "Union[Callable, Any]"}, {"lineNumber": 90, "col_offset": 45, "nodeName": "get", "type": "Union[Callable, Any]"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "__version__", "type": "Any"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "get", "type": "Union[Callable, Any]"}, {"lineNumber": 95, "col_offset": 37, "nodeName": "get", "type": "Union[Callable, Any]"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "get", "type": "Union[Callable, Any]"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "get", "type": "Union[Callable, Any]"}, {"lineNumber": 98, "col_offset": 39, "nodeName": "get", "type": "Union[Callable, Any]"}, {"lineNumber": 101, "col_offset": 32, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "util", "type": "Any"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "setting", "type": "str"}, {"lineNumber": 108, "col_offset": 54, "nodeName": "default", "type": "Union[Any, bool, str]"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "key", "type": "Any"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "meta", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "prints", "type": "Any"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "about", "type": "Any"}, {"lineNumber": 34, "col_offset": 29, "nodeName": "input_path", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "output_path", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "meta_path", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "shutil", "type": "module"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "path2str", "type": "Any"}, {"lineNumber": 72, "col_offset": 35, "nodeName": "package_path", "type": "Any"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 88, "col_offset": 43, "nodeName": "meta", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 89, "col_offset": 39, "nodeName": "meta", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 90, "col_offset": 45, "nodeName": "meta", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "about", "type": "Any"}, {"lineNumber": 94, "col_offset": 18, "nodeName": "meta", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 95, "col_offset": 37, "nodeName": "meta", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "meta", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "meta", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 98, "col_offset": 39, "nodeName": "meta", "type": "Union[Dict[str, Any], Any]"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "response", "type": "Any"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "meta", "type": "Any"}, {"lineNumber": 126, "col_offset": 43, "nodeName": "status_code", "type": "int"}, {"lineNumber": 116, "col_offset": 35, "nodeName": "key", "type": "Any"}, {"lineNumber": 118, "col_offset": 64, "nodeName": "key", "type": "Any"}, {"lineNumber": 126, "col_offset": 43, "nodeName": "r", "type": "requests.models.Response"}]