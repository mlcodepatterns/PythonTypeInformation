[{"lineNumber": 7, "col_offset": 22, "nodeName": "Lemmatizer", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "string", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "oov_forms", "type": "List[Any]"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "lower", "type": "Any"}, {"lineNumber": 21, "col_offset": 11, "nodeName": "string", "type": "Any"}, {"lineNumber": 21, "col_offset": 21, "nodeName": "index", "type": "Any"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "rules", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "string", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "string", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "get", "type": "Any"}, {"lineNumber": 24, "col_offset": 36, "nodeName": "string", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "old", "type": "Any"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "new", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "oov_forms", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "string", "type": "Any"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 21, "nodeName": "exceptions", "type": "Any"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 28, "col_offset": 35, "nodeName": "old", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "form", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "string", "type": "Any"}, {"lineNumber": 29, "col_offset": 62, "nodeName": "new", "type": "Any"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "form", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "string", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "form", "type": "Any"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "index", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "form", "type": "Any"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "form", "type": "Any"}, {"lineNumber": 32, "col_offset": 46, "nodeName": "isalpha", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "forms", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 24, "nodeName": "oov_forms", "type": "List[Any]"}, {"lineNumber": 29, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 29, "col_offset": 40, "nodeName": "string", "type": "Any"}, {"lineNumber": 29, "col_offset": 50, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 29, "col_offset": 54, "nodeName": "old", "type": "Any"}, {"lineNumber": 32, "col_offset": 46, "nodeName": "form", "type": "Any"}]