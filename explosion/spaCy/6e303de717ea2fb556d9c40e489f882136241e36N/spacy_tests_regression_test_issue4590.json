[{"lineNumber": 10, "col_offset": 0, "nodeName": "test_issue4590", "type": "Callable[[Any], Any]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "pattern", "type": "List[Dict[str, Dict[str, str]]]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "on_match", "type": "mock.NonCallableMock"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "matcher", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "text", "type": "str"}, {"lineNumber": 30, "col_offset": 4, "nodeName": "heads", "type": "List[int]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "deps", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "doc", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "matches", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "on_match_args", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "call_args", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "Mock", "type": "Type[mock.Mock]"}, {"lineNumber": 26, "col_offset": 14, "nodeName": "DependencyMatcher", "type": "Any"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "en_vocab", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "add", "type": "Any"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "on_match", "type": "mock.NonCallableMock"}, {"lineNumber": 27, "col_offset": 37, "nodeName": "pattern", "type": "List[Dict[str, Dict[str, str]]]"}, {"lineNumber": 33, "col_offset": 10, "nodeName": "get_doc", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "en_vocab", "type": "Any"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "matcher", "type": "Any"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "doc", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "on_match", "type": "mock.NonCallableMock"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "matches", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "matcher", "type": "Any"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "heads", "type": "List[int]"}, {"lineNumber": 33, "col_offset": 60, "nodeName": "deps", "type": "List[str]"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "text", "type": "str"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "on_match_args", "type": "Any"}]