[{"lineNumber": 116, "col_offset": 0, "nodeName": "autodetect_ner_format", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "CONVERTERS", "type": "Dict[str, Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "FILE_TYPES", "type": "Tuple[str, str, str]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "FILE_TYPES_STDOUT", "type": "Tuple[str, str]"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "conllu2json", "type": "Any"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "conllu2json", "type": "Any"}, {"lineNumber": 21, "col_offset": 13, "nodeName": "conllu2json", "type": "Any"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "conll_ner2json", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "iob2json", "type": "Any"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "ner_jsonl2json", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "msg", "type": "Any"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "input_path", "type": "pathlib.Path"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "input_data", "type": "str"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "lines", "type": "Any"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "format_guesses", "type": "Dict[str, int]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "iob_re", "type": "Pattern[str]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "ner_re", "type": "Pattern[str]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "lines", "type": "Any"}, {"lineNumber": 60, "col_offset": 10, "nodeName": "Printer", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 62, "col_offset": 7, "nodeName": "file_type", "type": "Any"}, {"lineNumber": 62, "col_offset": 24, "nodeName": "FILE_TYPES", "type": "Tuple[str, str, str]"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "read", "type": "Callable[..., str]"}, {"lineNumber": 80, "col_offset": 7, "nodeName": "converter", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "converter", "type": "str"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "converter_autodetect", "type": "Optional[str]"}, {"lineNumber": 92, "col_offset": 7, "nodeName": "converter", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "CONVERTERS", "type": "Dict[str, Any]"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "CONVERTERS", "type": "Dict[str, Any]"}, {"lineNumber": 96, "col_offset": 11, "nodeName": "func", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "input_data", "type": "str"}, {"lineNumber": 97, "col_offset": 7, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "suffix", "type": "str"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "output_file", "type": "pathlib.Path"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "fail", "type": "Any"}, {"lineNumber": 68, "col_offset": 7, "nodeName": "file_type", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "FILE_TYPES_STDOUT", "type": "Tuple[str, str]"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "fail", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "exists", "type": "Callable[[], bool]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "fail", "type": "Any"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "input_path", "type": "pathlib.Path"}, {"lineNumber": 77, "col_offset": 7, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "fail", "type": "Any"}, {"lineNumber": 78, "col_offset": 47, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "suffix", "type": "str"}, {"lineNumber": 82, "col_offset": 7, "nodeName": "converter", "type": "Union[str, Any]"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "converter", "type": "Union[str, Any]"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "autodetect_ner_format", "type": "Callable[[Any], Any]"}, {"lineNumber": 83, "col_offset": 53, "nodeName": "input_data", "type": "str"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "converter_autodetect", "type": "Optional[str]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "converter", "type": "Optional[str]"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "converter_autodetect", "type": "Optional[str]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "fail", "type": "Any"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "converter", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "n_sents", "type": "Any"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "seg_sents", "type": "Any"}, {"lineNumber": 96, "col_offset": 81, "nodeName": "morphology", "type": "Any"}, {"lineNumber": 96, "col_offset": 98, "nodeName": "lang", "type": "Any"}, {"lineNumber": 96, "col_offset": 110, "nodeName": "model", "type": "Any"}, {"lineNumber": 99, "col_offset": 17, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "file_type", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "file_type", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "good", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "file_type", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "split", "type": "Any"}, {"lineNumber": 120, "col_offset": 13, "nodeName": "re", "type": "module"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "re", "type": "module"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "strip", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "search", "type": "Callable"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "line", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "search", "type": "Callable"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "line", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "msg", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 64, "col_offset": 45, "nodeName": "file_type", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "msg", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 71, "col_offset": 53, "nodeName": "file_type", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "input_path", "type": "pathlib.Path"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "msg", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "exists", "type": "Callable[[], bool]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "msg", "type": "Any"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "open", "type": "Callable"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "input_path", "type": "pathlib.Path"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "info", "type": "Any"}, {"lineNumber": 87, "col_offset": 13, "nodeName": "converter_autodetect", "type": "Optional[str]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "converter", "type": "Optional[str]"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "converter_autodetect", "type": "Optional[str]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "msg", "type": "Any"}, {"lineNumber": 93, "col_offset": 17, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "converter", "type": "Optional[Union[str, Any]]"}, {"lineNumber": 100, "col_offset": 22, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "with_suffix", "type": "Callable"}, {"lineNumber": 100, "col_offset": 80, "nodeName": "suffix", "type": "str"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "write_json", "type": "Any"}, {"lineNumber": 102, "col_offset": 29, "nodeName": "output_file", "type": "pathlib.Path"}, {"lineNumber": 102, "col_offset": 42, "nodeName": "data", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "file_type", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "msg", "type": "Any"}, {"lineNumber": 107, "col_offset": 17, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 107, "col_offset": 78, "nodeName": "output_file", "type": "pathlib.Path"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "write_json", "type": "Any"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "file_type", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "input_data", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "line", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "iob_re", "type": "Pattern[str]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "format_guesses", "type": "Dict[str, int]"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "ner_re", "type": "Pattern[str]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "format_guesses", "type": "Dict[str, int]"}, {"lineNumber": 128, "col_offset": 7, "nodeName": "format_guesses", "type": "Dict[str, int]"}, {"lineNumber": 128, "col_offset": 38, "nodeName": "format_guesses", "type": "Dict[str, int]"}, {"lineNumber": 130, "col_offset": 7, "nodeName": "format_guesses", "type": "Dict[str, int]"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "format_guesses", "type": "Dict[str, int]"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "join", "type": "Callable"}, {"lineNumber": 65, "col_offset": 58, "nodeName": "FILE_TYPES", "type": "Tuple[str, str, str]"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "input_path", "type": "pathlib.Path"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "msg", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "info", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "warn", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "srsly", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "write_jsonl", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "output_file", "type": "pathlib.Path"}, {"lineNumber": 104, "col_offset": 43, "nodeName": "data", "type": "Any"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "file_type", "type": "Any"}, {"lineNumber": 107, "col_offset": 67, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 107, "col_offset": 71, "nodeName": "data", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "srsly", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "write_jsonl", "type": "Any"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 77, "col_offset": 33, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "msg", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "msg", "type": "Any"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "srsly", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "write_msgpack", "type": "Any"}, {"lineNumber": 106, "col_offset": 32, "nodeName": "output_file", "type": "pathlib.Path"}, {"lineNumber": 106, "col_offset": 45, "nodeName": "data", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "srsly", "type": "Any"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "parts", "type": "Tuple[str, ...]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "srsly", "type": "Any"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "input_path", "type": "pathlib.Path"}]