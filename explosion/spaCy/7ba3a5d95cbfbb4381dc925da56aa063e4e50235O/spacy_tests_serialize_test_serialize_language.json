[{"lineNumber": 12, "col_offset": 0, "nodeName": "meta_data", "type": "Callable[[], Any]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "test_serialize_language_meta_disk", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "test_serialize_with_custom_tokenizer", "type": "Callable[[], Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "language", "type": "spacy.language.Language"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "prefix_re", "type": "Pattern[str]"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "suffix_re", "type": "Pattern[str]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "infix_re", "type": "Pattern[str]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "nlp", "type": "spacy.language.Language"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "Language", "type": "Type[spacy.language.Language]"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "d", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "new_language", "type": "spacy.language.Language"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "meta", "type": "Any"}, {"lineNumber": 31, "col_offset": 32, "nodeName": "meta", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "Language", "type": "Type[spacy.language.Language]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "nlp", "type": "spacy.language.Language"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "custom_tokenizer", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "nlp", "type": "spacy.language.Language"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "d", "type": "Any"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "meta_data", "type": "Any"}, {"lineNumber": 28, "col_offset": 9, "nodeName": "make_tempdir", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "to_disk", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "d", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "from_disk", "type": "Callable"}, {"lineNumber": 30, "col_offset": 44, "nodeName": "d", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "new_language", "type": "spacy.language.Language"}, {"lineNumber": 31, "col_offset": 32, "nodeName": "language", "type": "spacy.language.Language"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "re", "type": "module"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "Tokenizer", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 53, "col_offset": 9, "nodeName": "make_tempdir", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "to_disk", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "d", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "language", "type": "spacy.language.Language"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "nlp", "type": "spacy.language.Language"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "search", "type": "Callable"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "search", "type": "Callable"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "finditer", "type": "Callable"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "nlp", "type": "spacy.language.Language"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "Language", "type": "Type[spacy.language.Language]"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "prefix_re", "type": "Pattern[str]"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "suffix_re", "type": "Pattern[str]"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "infix_re", "type": "Pattern[str]"}]