[{"lineNumber": 17, "col_offset": 0, "nodeName": "plugin", "type": "Callable[[str], Any]"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "function_hook", "type": "Callable[[Any], Any]"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "get_reducers_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "thinc_model_fullname", "type": "str"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "chained_out_fullname", "type": "str"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "intoin_outtoout_out_fullname", "type": "str"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "Plugin", "type": "Any"}, {"lineNumber": 29, "col_offset": 43, "nodeName": "Type", "type": "Any"}, {"lineNumber": 37, "col_offset": 47, "nodeName": "Type", "type": "Any"}, {"lineNumber": 139, "col_offset": 0, "nodeName": "error_layer_input", "type": "Any"}, {"lineNumber": 140, "col_offset": 0, "nodeName": "error_layer_output", "type": "Any"}, {"lineNumber": 143, "col_offset": 24, "nodeName": "TypeChecker", "type": "Any"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "ThincPlugin", "type": "Type[ThincPlugin]"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "out_type", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "fullname", "type": "Any"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "arg_types", "type": "List[nothing]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "arg_type", "type": "nothing"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "arg_pairs", "type": "List[nothing]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "arg_types_pairs", "type": "List[nothing]"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "ErrorCode", "type": "Any"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "ErrorCode", "type": "Any"}, {"lineNumber": 17, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "function_hook", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "FunctionContext", "type": "Any"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "FunctionContext", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "context", "type": "Any"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "CallExpr", "type": "Any"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "api", "type": "Any"}, {"lineNumber": 39, "col_offset": 31, "nodeName": "TypeChecker", "type": "Any"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "default_return_type", "type": "Any"}, {"lineNumber": 40, "col_offset": 47, "nodeName": "Instance", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "callee", "type": "Any"}, {"lineNumber": 41, "col_offset": 42, "nodeName": "NameExpr", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "node", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "type", "type": "Any"}, {"lineNumber": 43, "col_offset": 52, "nodeName": "CallableType", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "ret_type", "type": "Any"}, {"lineNumber": 44, "col_offset": 61, "nodeName": "Instance", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "ret_type", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 48, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "out_type", "type": "Any"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "TypeVarType", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "out_type", "type": "Any"}, {"lineNumber": 50, "col_offset": 7, "nodeName": "fullname", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "default_return_type", "type": "Any"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 59, "col_offset": 7, "nodeName": "fullname", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "chained_out_fullname", "type": "str"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "Expression", "type": "Any"}, {"lineNumber": 89, "col_offset": 13, "nodeName": "Instance", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "Expression", "type": "Any"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "Instance", "type": "Any"}, {"lineNumber": 92, "col_offset": 9, "nodeName": "CheckerPluginInterface", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "Expression", "type": "Any"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "Instance", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "Expression", "type": "Any"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "Instance", "type": "Any"}, {"lineNumber": 113, "col_offset": 9, "nodeName": "CheckerPluginInterface", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "_error_messages", "type": "List[nothing]"}, {"lineNumber": 22, "col_offset": 32, "nodeName": "Options", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "options", "type": "Any"}, {"lineNumber": 25, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "get_reducers_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "context", "type": "Any"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "callee", "type": "Any"}, {"lineNumber": 42, "col_offset": 48, "nodeName": "FuncDef", "type": "Any"}, {"lineNumber": 42, "col_offset": 57, "nodeName": "Decorator", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "node", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "type", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "type", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "ret_type", "type": "Any"}, {"lineNumber": 50, "col_offset": 7, "nodeName": "out_type", "type": "Any"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "intoin_outtoout_out_fullname", "type": "str"}, {"lineNumber": 50, "col_offset": 63, "nodeName": "chained_out_fullname", "type": "str"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "chain", "type": "Type[itertools.chain[Any]]"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "itertools", "type": "module"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "arg_types", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "arg_type", "type": "nothing"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "Instance", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "arg_type", "type": "nothing"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 59, "col_offset": 7, "nodeName": "out_type", "type": "Any"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 60, "col_offset": 48, "nodeName": "arg_pairs", "type": "List[nothing]"}, {"lineNumber": 60, "col_offset": 59, "nodeName": "arg_types_pairs", "type": "List[nothing]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "Instance", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "type", "type": "Any"}, {"lineNumber": 71, "col_offset": 9, "nodeName": "fullname", "type": "Any"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "intoin_outtoout_out_fullname", "type": "str"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "is_subtype", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "fail", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "l1_arg", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "fail", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "l2_arg", "type": "Any"}, {"lineNumber": 115, "col_offset": 7, "nodeName": "args", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "fail", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "l1_arg", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "fail", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "l2_arg", "type": "Any"}, {"lineNumber": 126, "col_offset": 7, "nodeName": "args", "type": "Any"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "fail", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "l1_arg", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "fail", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "l2_arg", "type": "Any"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "Errors", "type": "Any"}, {"lineNumber": 148, "col_offset": 17, "nodeName": "Options", "type": "Any"}, {"lineNumber": 149, "col_offset": 14, "nodeName": "MypyFile", "type": "Any"}, {"lineNumber": 150, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "Plugin", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "self", "type": "IntrospectChecker"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 154, "col_offset": 25, "nodeName": "errors", "type": "Any"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "modules", "type": "Dict[str, Any]"}, {"lineNumber": 154, "col_offset": 42, "nodeName": "options", "type": "Any"}, {"lineNumber": 154, "col_offset": 51, "nodeName": "tree", "type": "Any"}, {"lineNumber": 154, "col_offset": 57, "nodeName": "path", "type": "str"}, {"lineNumber": 154, "col_offset": 63, "nodeName": "plugin", "type": "Any"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "context", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "callee", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "node", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "node", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "ret_type", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "type", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "itertools", "type": "module"}, {"lineNumber": 52, "col_offset": 33, "nodeName": "args", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "arg_types", "type": "List[nothing]"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 57, "col_offset": 36, "nodeName": "args", "type": "List[nothing]"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "arg_types", "type": "List[nothing]"}, {"lineNumber": 58, "col_offset": 47, "nodeName": "arg_types", "type": "List[nothing]"}, {"lineNumber": 60, "col_offset": 13, "nodeName": "arg1", "type": "nothing"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "arg2", "type": "nothing"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "type1", "type": "nothing"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "type2", "type": "nothing"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "type1", "type": "nothing"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "Instance", "type": "Any"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "type2", "type": "nothing"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "Instance", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "fullname", "type": "nothing"}, {"lineNumber": 63, "col_offset": 42, "nodeName": "thinc_model_fullname", "type": "str"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "fullname", "type": "nothing"}, {"lineNumber": 64, "col_offset": 42, "nodeName": "thinc_model_fullname", "type": "str"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "check_chained", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "default_return_type", "type": "Any"}, {"lineNumber": 71, "col_offset": 9, "nodeName": "out_type", "type": "Any"}, {"lineNumber": 72, "col_offset": 44, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 72, "col_offset": 48, "nodeName": "arg_pairs", "type": "List[nothing]"}, {"lineNumber": 72, "col_offset": 59, "nodeName": "arg_types_pairs", "type": "List[nothing]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "Instance", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "type", "type": "Any"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "args", "type": "Any"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "args", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "api", "type": "Any"}, {"lineNumber": 98, "col_offset": 17, "nodeName": "error_layer_output", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "api", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "error_layer_input", "type": "Any"}, {"lineNumber": 115, "col_offset": 7, "nodeName": "l1_type", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "l2_type", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "api", "type": "Any"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "error_layer_input", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "api", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "error_layer_input", "type": "Any"}, {"lineNumber": 126, "col_offset": 7, "nodeName": "l1_type", "type": "Any"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "l2_type", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "api", "type": "Any"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "error_layer_output", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "api", "type": "Any"}, {"lineNumber": 135, "col_offset": 17, "nodeName": "error_layer_output", "type": "Any"}, {"lineNumber": 147, "col_offset": 17, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "context", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "callee", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "callee", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "type", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 52, "col_offset": 33, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "type", "type": "nothing"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "type", "type": "nothing"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "arg1", "type": "nothing"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "type1", "type": "nothing"}, {"lineNumber": 66, "col_offset": 51, "nodeName": "arg2", "type": "nothing"}, {"lineNumber": 66, "col_offset": 65, "nodeName": "type2", "type": "nothing"}, {"lineNumber": 66, "col_offset": 76, "nodeName": "api", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 69, "col_offset": 43, "nodeName": "args", "type": "nothing"}, {"lineNumber": 69, "col_offset": 65, "nodeName": "args", "type": "nothing"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "arg1", "type": "nothing"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "arg2", "type": "nothing"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "type1", "type": "nothing"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "type2", "type": "nothing"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "type1", "type": "nothing"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "Instance", "type": "Any"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "type2", "type": "nothing"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "Instance", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "fullname", "type": "nothing"}, {"lineNumber": 75, "col_offset": 42, "nodeName": "thinc_model_fullname", "type": "str"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "fullname", "type": "nothing"}, {"lineNumber": 76, "col_offset": 42, "nodeName": "thinc_model_fullname", "type": "str"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "check_intoin_outtoout", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "default_return_type", "type": "Any"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "l1_type", "type": "Any"}, {"lineNumber": 94, "col_offset": 39, "nodeName": "l2_type", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "context", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "context", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "callee", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "type1", "type": "nothing"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "type2", "type": "nothing"}, {"lineNumber": 66, "col_offset": 76, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "type", "type": "nothing"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "type", "type": "nothing"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "arg1", "type": "nothing"}, {"lineNumber": 78, "col_offset": 37, "nodeName": "type1", "type": "nothing"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "arg2", "type": "nothing"}, {"lineNumber": 78, "col_offset": 65, "nodeName": "type2", "type": "nothing"}, {"lineNumber": 78, "col_offset": 76, "nodeName": "api", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 81, "col_offset": 43, "nodeName": "args", "type": "nothing"}, {"lineNumber": 81, "col_offset": 65, "nodeName": "args", "type": "nothing"}, {"lineNumber": 147, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 147, "col_offset": 27, "nodeName": "MypyFile", "type": "Any"}, {"lineNumber": 44, "col_offset": 22, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "callee", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "context", "type": "Any"}, {"lineNumber": 69, "col_offset": 43, "nodeName": "arg_types", "type": "List[nothing]"}, {"lineNumber": 69, "col_offset": 65, "nodeName": "arg_types", "type": "List[nothing]"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "type1", "type": "nothing"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "type2", "type": "nothing"}, {"lineNumber": 78, "col_offset": 76, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "context", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 81, "col_offset": 43, "nodeName": "arg_types", "type": "List[nothing]"}, {"lineNumber": 81, "col_offset": 65, "nodeName": "arg_types", "type": "List[nothing]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "ctx", "type": "Any"}]