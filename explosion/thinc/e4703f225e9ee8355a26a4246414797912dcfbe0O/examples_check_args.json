[{"lineNumber": 5, "col_offset": 0, "nodeName": "check_arg", "type": "Callable[..., Any]"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "check_int_value", "type": "Callable[..., Any]"}, {"lineNumber": 48, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "constraint", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 54, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 6, "col_offset": 11, "nodeName": "ArgCheckAdder", "type": "Type[ArgCheckAdder]"}, {"lineNumber": 6, "col_offset": 25, "nodeName": "arg_id", "type": "int"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "arg_id", "type": "int"}, {"lineNumber": 18, "col_offset": 22, "nodeName": "arg_id", "type": "int"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "constraints", "type": "Tuple[Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "constraints", "type": "Tuple[Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "checks", "type": "collections.defaultdict[int, Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "int1", "type": "int"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "int2", "type": "int"}, {"lineNumber": 49, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 6, "col_offset": 34, "nodeName": "constraints", "type": "Tuple[Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 11, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 11, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "ArgCheckAdder"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "ArgCheckAdder"}, {"lineNumber": 22, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "func", "type": "CheckedFunction"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "CheckedFunction"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "checks", "type": "Dict[int, Tuple[Callable[[Any, Any, Any], Any]]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "CheckedFunction"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "arg_id", "type": "int"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "checks", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "items", "type": "Callable"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "check", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "checks", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 49, "col_offset": 10, "nodeName": "add_positive_integers", "type": "CheckedFunction"}, {"lineNumber": 50, "col_offset": 10, "nodeName": "add_positive_integers", "type": "CheckedFunction"}, {"lineNumber": 51, "col_offset": 10, "nodeName": "add_positive_integers", "type": "CheckedFunction"}, {"lineNumber": 11, "col_offset": 26, "nodeName": "args", "type": "Tuple[int, int]"}, {"lineNumber": 12, "col_offset": 15, "nodeName": "args", "type": "Tuple[int, int]"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "extend", "type": "Any"}, {"lineNumber": 23, "col_offset": 44, "nodeName": "constraints", "type": "Tuple[Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "CheckedFunction", "type": "Type[CheckedFunction]"}, {"lineNumber": 26, "col_offset": 35, "nodeName": "func", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "checks", "type": "collections.defaultdict[int, Any]"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "checks", "type": "collections.defaultdict[int, Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "CheckedFunction"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "args", "type": "Tuple[int, int]"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 11, "col_offset": 31, "nodeName": "arg_id", "type": "int"}, {"lineNumber": 12, "col_offset": 20, "nodeName": "arg_id", "type": "int"}, {"lineNumber": 23, "col_offset": 44, "nodeName": "self", "type": "ArgCheckAdder"}, {"lineNumber": 26, "col_offset": 42, "nodeName": "arg_id", "type": "int"}, {"lineNumber": 26, "col_offset": 55, "nodeName": "constraints", "type": "Tuple[Callable[[Any, Any, Any], Any]]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "CheckedFunction"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "self", "type": "CheckedFunction"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "check", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "arg_id", "type": "int"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "args", "type": "Tuple[int, int]"}, {"lineNumber": 38, "col_offset": 36, "nodeName": "kwargs", "type": "Dict[nothing, nothing]"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "checks", "type": "collections.defaultdict[int, Any]"}, {"lineNumber": 26, "col_offset": 42, "nodeName": "self", "type": "ArgCheckAdder"}, {"lineNumber": 26, "col_offset": 55, "nodeName": "self", "type": "ArgCheckAdder"}, {"lineNumber": 23, "col_offset": 12, "nodeName": "func", "type": "CheckedFunction"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "arg_id", "type": "int"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "self", "type": "ArgCheckAdder"}]