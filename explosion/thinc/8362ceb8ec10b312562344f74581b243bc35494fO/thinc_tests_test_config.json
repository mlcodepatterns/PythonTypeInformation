[{"lineNumber": 134, "col_offset": 0, "nodeName": "test_validate_simple_config", "type": "Callable[[], Any]"}, {"lineNumber": 141, "col_offset": 0, "nodeName": "test_invalidate_simple_config", "type": "Callable[[], Any]"}, {"lineNumber": 147, "col_offset": 0, "nodeName": "test_invalidate_extra_args", "type": "Callable[[], Any]"}, {"lineNumber": 153, "col_offset": 0, "nodeName": "test_fill_defaults_simple_config", "type": "Callable[[], Any]"}, {"lineNumber": 163, "col_offset": 0, "nodeName": "test_fill_recursive_config", "type": "Callable[[], Any]"}, {"lineNumber": 174, "col_offset": 0, "nodeName": "test_is_promise", "type": "Callable[[], Any]"}, {"lineNumber": 182, "col_offset": 0, "nodeName": "test_get_constructor", "type": "Callable[[], Any]"}, {"lineNumber": 187, "col_offset": 0, "nodeName": "test_parse_args", "type": "Callable[[], Any]"}, {"lineNumber": 193, "col_offset": 0, "nodeName": "test_make_promise_schema", "type": "Callable[[], Any]"}, {"lineNumber": 199, "col_offset": 0, "nodeName": "test_validate_promise", "type": "Callable[[], Any]"}, {"lineNumber": 206, "col_offset": 0, "nodeName": "test_fill_validate_promise", "type": "Callable[[], Any]"}, {"lineNumber": 212, "col_offset": 0, "nodeName": "test_fill_invalidate_promise", "type": "Callable[[], Any]"}, {"lineNumber": 221, "col_offset": 0, "nodeName": "test_create_registry", "type": "Callable[[], Any]"}, {"lineNumber": 233, "col_offset": 0, "nodeName": "test_registry_methods", "type": "Callable[[], Any]"}, {"lineNumber": 241, "col_offset": 0, "nodeName": "test_make_from_config_no_schema", "type": "Callable[[], Any]"}, {"lineNumber": 251, "col_offset": 0, "nodeName": "test_make_from_config_schema", "type": "Callable[[], Any]"}, {"lineNumber": 274, "col_offset": 0, "nodeName": "test_read_config", "type": "Callable[[], Any]"}, {"lineNumber": 282, "col_offset": 0, "nodeName": "test_optimizer_config", "type": "Callable[[], Any]"}, {"lineNumber": 289, "col_offset": 0, "nodeName": "test_config_to_str", "type": "Callable[[], Any]"}, {"lineNumber": 296, "col_offset": 0, "nodeName": "test_config_roundtrip_bytes", "type": "Callable[[], Any]"}, {"lineNumber": 303, "col_offset": 0, "nodeName": "test_config_roundtrip_disk", "type": "Callable[[], Any]"}, {"lineNumber": 312, "col_offset": 0, "nodeName": "test_validation_custom_types", "type": "Callable[[], Any]"}, {"lineNumber": 345, "col_offset": 0, "nodeName": "test_validation_no_validate", "type": "Callable[[], Any]"}, {"lineNumber": 352, "col_offset": 0, "nodeName": "test_validation_fill_defaults", "type": "Callable[[], Any]"}, {"lineNumber": 368, "col_offset": 0, "nodeName": "test_make_config_positional_args", "type": "Callable[[], Any]"}, {"lineNumber": 382, "col_offset": 0, "nodeName": "test_make_config_positional_args_complex", "type": "Callable[[], Any]"}, {"lineNumber": 397, "col_offset": 0, "nodeName": "test_validation_generators_iterable", "type": "Callable[[], Any]"}, {"lineNumber": 419, "col_offset": 0, "nodeName": "test_validation_unset_type_hints", "type": "Callable[[], Any]"}, {"lineNumber": 430, "col_offset": 0, "nodeName": "test_validation_bad_function", "type": "Callable[[], Any]"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "registry", "type": "Type[thinc.config.registry]"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "BaseModel", "type": "Any"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "BaseModel", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "BaseModel", "type": "Any"}, {"lineNumber": 111, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 119, "col_offset": 75, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 128, "col_offset": 0, "nodeName": "good_catsie", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "ok_catsie", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 130, "col_offset": 0, "nodeName": "bad_catsie", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "worst_catsie", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "config", "type": "module"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "cats", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "optional", "type": "str"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "outer_opt", "type": "str"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "HelloIntsSchema", "type": "Type[HelloIntsSchema]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "level2_opt", "type": "DefaultsSchema"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "DefaultsSchema", "type": "Type[DefaultsSchema]"}, {"lineNumber": 112, "col_offset": 7, "nodeName": "evil", "type": "Any"}, {"lineNumber": 120, "col_offset": 7, "nodeName": "evil", "type": "Any"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "simple_config", "type": "Dict[str, int]"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "invalid_config", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 148, "col_offset": 4, "nodeName": "invalid_config", "type": "Dict[str, int]"}, {"lineNumber": 154, "col_offset": 4, "nodeName": "valid_config", "type": "Dict[str, int]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "invalid_config", "type": "Dict[str, str]"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "valid_config", "type": "Dict[str, Union[Dict[str, int], int]]"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "invalid", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "schema", "type": "Any"}, {"lineNumber": 200, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 207, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 242, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 243, "col_offset": 4, "nodeName": "result", "type": "thinc.config.Config"}, {"lineNumber": 252, "col_offset": 28, "nodeName": "BaseModel", "type": "Any"}, {"lineNumber": 255, "col_offset": 25, "nodeName": "BaseModel", "type": "Any"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 264, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 268, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "byte_string", "type": "bytes"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "cfg", "type": "thinc.config.Config"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "cfg", "type": "thinc.config.Config"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "result", "type": "thinc.config.Config"}, {"lineNumber": 285, "col_offset": 4, "nodeName": "optimizer", "type": "nothing"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "cfg", "type": "thinc.config.Config"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "cfg", "type": "thinc.config.Config"}, {"lineNumber": 297, "col_offset": 4, "nodeName": "cfg", "type": "thinc.config.Config"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "cfg_bytes", "type": "bytes"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "new_cfg", "type": "thinc.config.Config"}, {"lineNumber": 304, "col_offset": 4, "nodeName": "cfg", "type": "thinc.config.Config"}, {"lineNumber": 322, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 339, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 346, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, str]], int]]"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "result", "type": "thinc.config.Config"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, str], int]]"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "result", "type": "thinc.config.Config"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 361, "col_offset": 4, "nodeName": "result", "type": "thinc.config.Config"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Dict[str, Union[List[str], str]]]"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "filled_cfg", "type": "thinc.config.Config"}, {"lineNumber": 388, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Dict[str, Union[List[Union[int, bool]], str]]]"}, {"lineNumber": 389, "col_offset": 4, "nodeName": "filled_cfg", "type": "thinc.config.Config"}, {"lineNumber": 391, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Dict[str, Union[List[Union[int, str]], str]]]"}, {"lineNumber": 426, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Dict[str, Union[int, float, str]]]"}, {"lineNumber": 441, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 445, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Dict[str, Union[int, str]]]"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "thinc", "type": "module"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "create", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "extra", "type": "str"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "extra", "type": "str"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "DefaultsSchema", "type": "Type[DefaultsSchema]"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "StrictBool", "type": "Any"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "StrictBool", "type": "Any"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 119, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 136, "col_offset": 7, "nodeName": "v", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "_fill", "type": "Callable[..., Tuple[thinc.config.Config, thinc.config.Config]]"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "simple_config", "type": "Dict[str, int]"}, {"lineNumber": 136, "col_offset": 44, "nodeName": "HelloIntsSchema", "type": "Type[HelloIntsSchema]"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "f", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "simple_config", "type": "Dict[str, int]"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "simple_config", "type": "Dict[str, int]"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "filled", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "v", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "_fill", "type": "Callable[..., Tuple[thinc.config.Config, thinc.config.Config]]"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "valid_config", "type": "Dict[str, int]"}, {"lineNumber": 155, "col_offset": 48, "nodeName": "DefaultsSchema", "type": "Type[DefaultsSchema]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "filled", "type": "thinc.config.Config"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "validation", "type": "thinc.config.Config"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "_fill", "type": "Callable[..., Tuple[thinc.config.Config, thinc.config.Config]]"}, {"lineNumber": 165, "col_offset": 43, "nodeName": "valid_config", "type": "Dict[str, Union[Dict[str, int], int]]"}, {"lineNumber": 165, "col_offset": 57, "nodeName": "ComplexSchema", "type": "Type[ComplexSchema]"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "is_promise", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 175, "col_offset": 34, "nodeName": "good_catsie", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "is_promise", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 179, "col_offset": 34, "nodeName": "invalid", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "get_constructor", "type": "Callable[[Any, Dict[str, Any]], Callable[..., Any]]"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "good_catsie", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 184, "col_offset": 11, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 184, "col_offset": 19, "nodeName": "catsie_v1", "type": "Any"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 188, "col_offset": 10, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "parse_args", "type": "Callable[[Any, Dict[str, Any]], Tuple[List[Any], Dict[str, Any]]]"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "bad_catsie", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 189, "col_offset": 11, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 190, "col_offset": 11, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "make_promise_schema", "type": "Callable[[Any, Dict[str, Any]], Type[Any]]"}, {"lineNumber": 194, "col_offset": 45, "nodeName": "good_catsie", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "__fields__", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "__fields__", "type": "Any"}, {"lineNumber": 200, "col_offset": 41, "nodeName": "good_catsie", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 201, "col_offset": 4, "nodeName": "filled", "type": "thinc.config.Config"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "validated", "type": "thinc.config.Config"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "_fill", "type": "Callable[..., Tuple[thinc.config.Config, thinc.config.Config]]"}, {"lineNumber": 201, "col_offset": 42, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 201, "col_offset": 50, "nodeName": "DefaultsSchema", "type": "Type[DefaultsSchema]"}, {"lineNumber": 202, "col_offset": 11, "nodeName": "filled", "type": "thinc.config.Config"}, {"lineNumber": 202, "col_offset": 21, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 203, "col_offset": 11, "nodeName": "validated", "type": "thinc.config.Config"}, {"lineNumber": 208, "col_offset": 4, "nodeName": "filled", "type": "thinc.config.Config"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "validated", "type": "thinc.config.Config"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "_fill", "type": "Callable[..., Tuple[thinc.config.Config, thinc.config.Config]]"}, {"lineNumber": 208, "col_offset": 42, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 208, "col_offset": 50, "nodeName": "DefaultsSchema", "type": "Type[DefaultsSchema]"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "create", "type": "Callable[..., None]"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 243, "col_offset": 13, "nodeName": "make_from_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 243, "col_offset": 42, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, str]], int]]"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 256, "col_offset": 13, "nodeName": "PositiveInt", "type": "Any"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "make_from_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 263, "col_offset": 33, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 275, "col_offset": 18, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 276, "col_offset": 10, "nodeName": "from_bytes", "type": "Callable"}, {"lineNumber": 276, "col_offset": 30, "nodeName": "byte_string", "type": "bytes"}, {"lineNumber": 283, "col_offset": 10, "nodeName": "from_str", "type": "Callable"}, {"lineNumber": 283, "col_offset": 28, "nodeName": "OPTIMIZER_CFG", "type": "str"}, {"lineNumber": 284, "col_offset": 13, "nodeName": "make_from_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 284, "col_offset": 42, "nodeName": "cfg", "type": "thinc.config.Config"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "result", "type": "thinc.config.Config"}, {"lineNumber": 286, "col_offset": 11, "nodeName": "b1", "type": "nothing"}, {"lineNumber": 290, "col_offset": 10, "nodeName": "from_str", "type": "Callable"}, {"lineNumber": 290, "col_offset": 28, "nodeName": "OPTIMIZER_CFG", "type": "str"}, {"lineNumber": 292, "col_offset": 10, "nodeName": "from_str", "type": "Callable"}, {"lineNumber": 292, "col_offset": 57, "nodeName": "OPTIMIZER_CFG", "type": "str"}, {"lineNumber": 297, "col_offset": 10, "nodeName": "from_str", "type": "Callable"}, {"lineNumber": 297, "col_offset": 28, "nodeName": "OPTIMIZER_CFG", "type": "str"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "to_bytes", "type": "Callable[[], bytes]"}, {"lineNumber": 299, "col_offset": 14, "nodeName": "from_bytes", "type": "Callable"}, {"lineNumber": 299, "col_offset": 34, "nodeName": "cfg_bytes", "type": "bytes"}, {"lineNumber": 304, "col_offset": 10, "nodeName": "from_str", "type": "Callable"}, {"lineNumber": 304, "col_offset": 28, "nodeName": "OPTIMIZER_CFG", "type": "str"}, {"lineNumber": 305, "col_offset": 27, "nodeName": "path", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "cfg_path", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "new_cfg", "type": "thinc.config.Config"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "create", "type": "Callable[..., None]"}, {"lineNumber": 321, "col_offset": 38, "nodeName": "complex_args", "type": "Callable[..., Any]"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "make_from_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 347, "col_offset": 13, "nodeName": "make_from_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 347, "col_offset": 42, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, str]], int]]"}, {"lineNumber": 354, "col_offset": 13, "nodeName": "fill_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 354, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Union[Dict[str, str], int]]"}, {"lineNumber": 361, "col_offset": 13, "nodeName": "fill_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 361, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 378, "col_offset": 17, "nodeName": "make_from_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 378, "col_offset": 46, "nodeName": "cfg", "type": "Dict[str, Dict[str, Union[List[str], str]]]"}, {"lineNumber": 389, "col_offset": 17, "nodeName": "make_from_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 389, "col_offset": 46, "nodeName": "cfg", "type": "Dict[str, Dict[str, Union[List[Union[int, bool]], str]]]"}, {"lineNumber": 405, "col_offset": 53, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "make_from_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 416, "col_offset": 33, "nodeName": "config", "type": "Dict[str, Dict[str, Union[Dict[str, Union[float, str]], float, str]]]"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "make_from_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 427, "col_offset": 33, "nodeName": "config", "type": "Dict[str, Dict[str, Union[int, float, str]]]"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "catalogue", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "cute_level", "type": "int"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Type[thinc.config.ConfigValidationError]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "_fill", "type": "Callable[..., Tuple[thinc.config.Config, thinc.config.Config]]"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "invalid_config", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 144, "col_offset": 49, "nodeName": "HelloIntsSchema", "type": "Type[HelloIntsSchema]"}, {"lineNumber": 149, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Type[thinc.config.ConfigValidationError]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "_fill", "type": "Callable[..., Tuple[thinc.config.Config, thinc.config.Config]]"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "invalid_config", "type": "Dict[str, int]"}, {"lineNumber": 150, "col_offset": 49, "nodeName": "HelloIntsSchema", "type": "Type[HelloIntsSchema]"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "filled", "type": "Any"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "filled", "type": "Any"}, {"lineNumber": 159, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Type[thinc.config.ConfigValidationError]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "_fill", "type": "Callable[..., Tuple[thinc.config.Config, thinc.config.Config]]"}, {"lineNumber": 160, "col_offset": 33, "nodeName": "invalid_config", "type": "Dict[str, str]"}, {"lineNumber": 160, "col_offset": 49, "nodeName": "DefaultsSchema", "type": "Type[DefaultsSchema]"}, {"lineNumber": 165, "col_offset": 25, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "filled", "type": "thinc.config.Config"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "filled", "type": "thinc.config.Config"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "is_promise", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "is_promise", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 179, "col_offset": 11, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 183, "col_offset": 11, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 188, "col_offset": 19, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 194, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 195, "col_offset": 21, "nodeName": "schema", "type": "Any"}, {"lineNumber": 196, "col_offset": 21, "nodeName": "schema", "type": "Any"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 214, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 214, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Type[thinc.config.ConfigValidationError]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "filled", "type": "thinc.config.Config"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "validated", "type": "thinc.config.Config"}, {"lineNumber": 215, "col_offset": 28, "nodeName": "_fill", "type": "Callable[..., Tuple[thinc.config.Config, thinc.config.Config]]"}, {"lineNumber": 215, "col_offset": 46, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 215, "col_offset": 54, "nodeName": "HelloIntsSchema", "type": "Type[HelloIntsSchema]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 217, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 217, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Type[thinc.config.ConfigValidationError]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "filled", "type": "thinc.config.Config"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "validated", "type": "thinc.config.Config"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "_fill", "type": "Callable[..., Tuple[thinc.config.Config, thinc.config.Config]]"}, {"lineNumber": 218, "col_offset": 46, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 218, "col_offset": 54, "nodeName": "DefaultsSchema", "type": "Type[DefaultsSchema]"}, {"lineNumber": 222, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 222, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "create", "type": "Callable[..., None]"}, {"lineNumber": 224, "col_offset": 4, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 234, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 234, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "get", "type": "Callable[[Any, str, str], Callable[..., Any]]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "register", "type": "Any"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "get", "type": "Callable[[Any, str, str], Callable[..., Any]]"}, {"lineNumber": 243, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 244, "col_offset": 11, "nodeName": "result", "type": "thinc.config.Config"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "result", "type": "thinc.config.Config"}, {"lineNumber": 246, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 246, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Type[thinc.config.ConfigValidationError]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "make_from_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 248, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, str]], int]]"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "extra", "type": "str"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 263, "col_offset": 48, "nodeName": "TestBaseSchema", "type": "Type[Any]"}, {"lineNumber": 265, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 265, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Type[thinc.config.ConfigValidationError]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "make_from_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 267, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 269, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 269, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Type[thinc.config.ConfigValidationError]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "make_from_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 271, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 275, "col_offset": 18, "nodeName": "EXAMPLE_CONFIG", "type": "str"}, {"lineNumber": 284, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 286, "col_offset": 11, "nodeName": "optimizer", "type": "nothing"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 291, "col_offset": 35, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 293, "col_offset": 11, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 293, "col_offset": 35, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "cfg", "type": "thinc.config.Config"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 300, "col_offset": 39, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 305, "col_offset": 9, "nodeName": "make_tempdir", "type": "Any"}, {"lineNumber": 306, "col_offset": 19, "nodeName": "path", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "to_disk", "type": "Callable[[Union[str, pathlib.Path]], None]"}, {"lineNumber": 307, "col_offset": 20, "nodeName": "cfg_path", "type": "Any"}, {"lineNumber": 308, "col_offset": 18, "nodeName": "from_disk", "type": "Callable"}, {"lineNumber": 308, "col_offset": 37, "nodeName": "cfg_path", "type": "Any"}, {"lineNumber": 309, "col_offset": 11, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 309, "col_offset": 39, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "complex", "type": "Any"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 323, "col_offset": 44, "nodeName": "cfg", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 325, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 325, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Type[thinc.config.ConfigValidationError]"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "make_from_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 329, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 329, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Type[thinc.config.ConfigValidationError]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "make_from_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 333, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Type[thinc.config.ConfigValidationError]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "make_from_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 335, "col_offset": 37, "nodeName": "cfg", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 336, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 336, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Type[thinc.config.ConfigValidationError]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "fill_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 338, "col_offset": 32, "nodeName": "cfg", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 340, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 340, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Type[thinc.config.ConfigValidationError]"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "make_from_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 347, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 348, "col_offset": 11, "nodeName": "result", "type": "thinc.config.Config"}, {"lineNumber": 349, "col_offset": 11, "nodeName": "result", "type": "thinc.config.Config"}, {"lineNumber": 354, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 355, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 356, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 356, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Type[thinc.config.ConfigValidationError]"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "fill_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 358, "col_offset": 32, "nodeName": "config", "type": "Dict[str, Union[Dict[str, str], int]]"}, {"lineNumber": 361, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 362, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 370, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 373, "col_offset": 15, "nodeName": "foo", "type": "str"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "args", "type": "Tuple[Optional[str], ...]"}, {"lineNumber": 377, "col_offset": 74, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 378, "col_offset": 17, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 379, "col_offset": 11, "nodeName": "filled_cfg", "type": "thinc.config.Config"}, {"lineNumber": 386, "col_offset": 15, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 389, "col_offset": 17, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 390, "col_offset": 11, "nodeName": "filled_cfg", "type": "thinc.config.Config"}, {"lineNumber": 392, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 392, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Type[thinc.config.ConfigValidationError]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "make_from_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 394, "col_offset": 37, "nodeName": "cfg", "type": "Dict[str, Dict[str, Union[List[Union[int, str]], str]]]"}, {"lineNumber": 400, "col_offset": 14, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 405, "col_offset": 37, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 405, "col_offset": 62, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 416, "col_offset": 4, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 423, "col_offset": 39, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 427, "col_offset": 4, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 433, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 442, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 442, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Type[thinc.config.ConfigValidationError]"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "make_from_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 443, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 446, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 446, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Type[thinc.config.ConfigValidationError]"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "make_from_config", "type": "Callable[..., thinc.config.Config]"}, {"lineNumber": 447, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Dict[str, Union[int, str]]]"}, {"lineNumber": 143, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 149, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 159, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 168, "col_offset": 11, "nodeName": "filled", "type": "thinc.config.Config"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "filled", "type": "thinc.config.Config"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "filled", "type": "thinc.config.Config"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "filled", "type": "thinc.config.Config"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 209, "col_offset": 11, "nodeName": "filled", "type": "thinc.config.Config"}, {"lineNumber": 214, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 215, "col_offset": 28, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 217, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 222, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 234, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "cats", "type": "Any"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 246, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 265, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 267, "col_offset": 52, "nodeName": "TestBaseSchema", "type": "Type[Any]"}, {"lineNumber": 269, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 271, "col_offset": 52, "nodeName": "TestBaseSchema", "type": "Type[Any]"}, {"lineNumber": 276, "col_offset": 10, "nodeName": "Config", "type": "Type[thinc.config.Config]"}, {"lineNumber": 283, "col_offset": 10, "nodeName": "Config", "type": "Type[thinc.config.Config]"}, {"lineNumber": 290, "col_offset": 10, "nodeName": "Config", "type": "Type[thinc.config.Config]"}, {"lineNumber": 291, "col_offset": 35, "nodeName": "OPTIMIZER_CFG", "type": "str"}, {"lineNumber": 292, "col_offset": 10, "nodeName": "Config", "type": "Type[thinc.config.Config]"}, {"lineNumber": 293, "col_offset": 35, "nodeName": "OPTIMIZER_CFG", "type": "str"}, {"lineNumber": 297, "col_offset": 10, "nodeName": "Config", "type": "Type[thinc.config.Config]"}, {"lineNumber": 299, "col_offset": 14, "nodeName": "Config", "type": "Type[thinc.config.Config]"}, {"lineNumber": 300, "col_offset": 39, "nodeName": "OPTIMIZER_CFG", "type": "str"}, {"lineNumber": 304, "col_offset": 10, "nodeName": "Config", "type": "Type[thinc.config.Config]"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "cfg", "type": "thinc.config.Config"}, {"lineNumber": 309, "col_offset": 39, "nodeName": "OPTIMIZER_CFG", "type": "str"}, {"lineNumber": 316, "col_offset": 19, "nodeName": "constr", "type": "Any"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 325, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 327, "col_offset": 48, "nodeName": "cfg", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 329, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 331, "col_offset": 48, "nodeName": "cfg", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 333, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 336, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 340, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 342, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 342, "col_offset": 48, "nodeName": "cfg", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 355, "col_offset": 15, "nodeName": "result", "type": "thinc.config.Config"}, {"lineNumber": 356, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 362, "col_offset": 15, "nodeName": "result", "type": "thinc.config.Config"}, {"lineNumber": 363, "col_offset": 11, "nodeName": "result", "type": "thinc.config.Config"}, {"lineNumber": 364, "col_offset": 11, "nodeName": "result", "type": "thinc.config.Config"}, {"lineNumber": 365, "col_offset": 11, "nodeName": "result", "type": "thinc.config.Config"}, {"lineNumber": 370, "col_offset": 26, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 371, "col_offset": 15, "nodeName": "args", "type": "Tuple[Optional[str], ...]"}, {"lineNumber": 372, "col_offset": 15, "nodeName": "args", "type": "Tuple[Optional[str], ...]"}, {"lineNumber": 384, "col_offset": 26, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 385, "col_offset": 15, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 392, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 400, "col_offset": 31, "nodeName": "Union", "type": "Any"}, {"lineNumber": 407, "col_offset": 18, "nodeName": "some_value", "type": "float"}, {"lineNumber": 442, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 443, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 446, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 277, "col_offset": 11, "nodeName": "cfg", "type": "thinc.config.Config"}, {"lineNumber": 278, "col_offset": 11, "nodeName": "cfg", "type": "thinc.config.Config"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "to_str", "type": "Callable[[], str]"}, {"lineNumber": 293, "col_offset": 11, "nodeName": "to_str", "type": "Callable[[], str]"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "to_str", "type": "Callable[[], str]"}, {"lineNumber": 308, "col_offset": 18, "nodeName": "Config", "type": "Type[thinc.config.Config]"}, {"lineNumber": 309, "col_offset": 11, "nodeName": "to_str", "type": "Callable[[], str]"}, {"lineNumber": 370, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 291, "col_offset": 11, "nodeName": "cfg", "type": "thinc.config.Config"}, {"lineNumber": 293, "col_offset": 11, "nodeName": "cfg", "type": "thinc.config.Config"}, {"lineNumber": 300, "col_offset": 11, "nodeName": "new_cfg", "type": "thinc.config.Config"}, {"lineNumber": 309, "col_offset": 11, "nodeName": "new_cfg", "type": "thinc.config.Config"}, {"lineNumber": 384, "col_offset": 35, "nodeName": "Union", "type": "Any"}, {"lineNumber": 400, "col_offset": 37, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 400, "col_offset": 61, "nodeName": "Generator", "type": "Type[thinc.types.Generator]"}, {"lineNumber": 279, "col_offset": 11, "nodeName": "cfg", "type": "thinc.config.Config"}, {"lineNumber": 400, "col_offset": 44, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 384, "col_offset": 41, "nodeName": "StrictBool", "type": "Any"}, {"lineNumber": 384, "col_offset": 53, "nodeName": "PositiveInt", "type": "Any"}, {"lineNumber": 400, "col_offset": 53, "nodeName": "float", "type": "Type[float]"}]