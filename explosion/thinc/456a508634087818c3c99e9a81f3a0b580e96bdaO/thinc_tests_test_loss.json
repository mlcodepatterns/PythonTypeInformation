[{"lineNumber": 22, "col_offset": 0, "nodeName": "test_loss", "type": "Callable[[], Any]"}, {"lineNumber": 117, "col_offset": 0, "nodeName": "test_L2", "type": "Callable[[], Any]"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "test_cosine_orthogonal", "type": "Callable[[], Any]"}, {"lineNumber": 153, "col_offset": 0, "nodeName": "test_cosine_equal", "type": "Callable[[], Any]"}, {"lineNumber": 169, "col_offset": 0, "nodeName": "test_cosine_unmatched", "type": "Callable[[], Any]"}, {"lineNumber": 8, "col_offset": 0, "nodeName": "scores0", "type": "Any"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "labels0", "type": "numpy.ndarray"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "guesses1", "type": "numpy.ndarray"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "labels1", "type": "numpy.ndarray"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "labels1_full", "type": "numpy.ndarray"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "guesses2", "type": "numpy.ndarray"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "labels2", "type": "numpy.ndarray"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "eps", "type": "float"}, {"lineNumber": 8, "col_offset": 10, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 9, "col_offset": 10, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 13, "col_offset": 10, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 17, "col_offset": 10, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "d_scores", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "d_scores", "type": "Any"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "d_scores", "type": "thinc.types.Floats2d"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "d_scores", "type": "thinc.types.Floats2d"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "d_scores1", "type": "thinc.types.Floats2d"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "d_scores2", "type": "thinc.types.Floats2d"}, {"lineNumber": 119, "col_offset": 4, "nodeName": "vec1", "type": "numpy.ndarray"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "vec2", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "d_vecs", "type": "Any"}, {"lineNumber": 127, "col_offset": 4, "nodeName": "loss_not_normalized", "type": "Any"}, {"lineNumber": 130, "col_offset": 4, "nodeName": "loss_normalized", "type": "Any"}, {"lineNumber": 136, "col_offset": 4, "nodeName": "vec1", "type": "numpy.ndarray"}, {"lineNumber": 137, "col_offset": 4, "nodeName": "vec2", "type": "numpy.ndarray"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "d_vecs", "type": "Any"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "loss_not_normalized", "type": "Any"}, {"lineNumber": 149, "col_offset": 4, "nodeName": "loss_normalized", "type": "Any"}, {"lineNumber": 155, "col_offset": 4, "nodeName": "vec1", "type": "numpy.ndarray"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "vec2", "type": "numpy.ndarray"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "d_vec1", "type": "Any"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "loss_not_normalized", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "loss_normalized", "type": "Any"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "vec1", "type": "numpy.ndarray"}, {"lineNumber": 171, "col_offset": 4, "nodeName": "vec2", "type": "numpy.ndarray"}, {"lineNumber": 192, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 194, "col_offset": 4, "nodeName": "loss", "type": "Any"}, {"lineNumber": 8, "col_offset": 10, "nodeName": "numpy", "type": "module"}, {"lineNumber": 9, "col_offset": 10, "nodeName": "numpy", "type": "module"}, {"lineNumber": 12, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 13, "col_offset": 10, "nodeName": "numpy", "type": "module"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 16, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 17, "col_offset": 10, "nodeName": "numpy", "type": "module"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "get_grad", "type": "Callable[[thinc.types.Floats2d, Union[thinc.types.Floats2d, thinc.types.Ints1d, List[Union[int, str]]]], thinc.types.Floats2d]"}, {"lineNumber": 23, "col_offset": 50, "nodeName": "scores0", "type": "Any"}, {"lineNumber": 23, "col_offset": 59, "nodeName": "labels0", "type": "numpy.ndarray"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "get_grad", "type": "Callable[[List[thinc.types.Floats2d], List[Union[thinc.types.Floats2d, thinc.types.Ints1d]]], List[thinc.types.Floats2d]]"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 28, "col_offset": 32, "nodeName": "shape", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "get_grad", "type": "Callable[[thinc.types.Floats2d, Union[thinc.types.Floats2d, thinc.types.Ints1d, List[Union[int, str]]]], thinc.types.Floats2d]"}, {"lineNumber": 45, "col_offset": 64, "nodeName": "guesses", "type": "Any"}, {"lineNumber": 45, "col_offset": 73, "nodeName": "labels", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "get_grad", "type": "Callable[[thinc.types.Floats2d, Union[thinc.types.Floats2d, thinc.types.Ints1d, List[Union[int, str]]]], thinc.types.Floats2d]"}, {"lineNumber": 70, "col_offset": 64, "nodeName": "guesses", "type": "Any"}, {"lineNumber": 70, "col_offset": 73, "nodeName": "labels", "type": "Any"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "get_grad", "type": "Callable[[List[thinc.types.Floats2d], List[Union[thinc.types.Floats2d, thinc.types.Ints1d]]], List[thinc.types.Floats2d]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "guesses", "type": "Any"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "labels", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "d_scores", "type": "List[thinc.types.Floats2d]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "d_scores", "type": "List[thinc.types.Floats2d]"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "get_grad", "type": "Callable[[thinc.types.Floats2d, thinc.types.Floats2d], thinc.types.Floats2d]"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "vec1", "type": "numpy.ndarray"}, {"lineNumber": 121, "col_offset": 41, "nodeName": "vec2", "type": "numpy.ndarray"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "get_loss", "type": "Callable[[thinc.types.Floats2d, thinc.types.Floats2d], float]"}, {"lineNumber": 127, "col_offset": 63, "nodeName": "vec1", "type": "numpy.ndarray"}, {"lineNumber": 127, "col_offset": 69, "nodeName": "vec2", "type": "numpy.ndarray"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "loss_not_normalized", "type": "Any"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "get_loss", "type": "Callable[[thinc.types.Floats2d, thinc.types.Floats2d], float]"}, {"lineNumber": 130, "col_offset": 58, "nodeName": "vec1", "type": "numpy.ndarray"}, {"lineNumber": 130, "col_offset": 64, "nodeName": "vec2", "type": "numpy.ndarray"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "loss_normalized", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "get_grad", "type": "Callable[[thinc.types.Floats2d, thinc.types.Floats2d], thinc.types.Floats2d]"}, {"lineNumber": 139, "col_offset": 53, "nodeName": "vec1", "type": "numpy.ndarray"}, {"lineNumber": 139, "col_offset": 59, "nodeName": "vec2", "type": "numpy.ndarray"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "get_loss", "type": "Callable[[thinc.types.Floats2d, thinc.types.Floats2d], float]"}, {"lineNumber": 146, "col_offset": 67, "nodeName": "vec1", "type": "numpy.ndarray"}, {"lineNumber": 146, "col_offset": 73, "nodeName": "vec2", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "loss_not_normalized", "type": "Any"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "get_loss", "type": "Callable[[thinc.types.Floats2d, thinc.types.Floats2d], float]"}, {"lineNumber": 149, "col_offset": 62, "nodeName": "vec1", "type": "numpy.ndarray"}, {"lineNumber": 149, "col_offset": 68, "nodeName": "vec2", "type": "numpy.ndarray"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "loss_normalized", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "get_grad", "type": "Callable[[thinc.types.Floats2d, thinc.types.Floats2d], thinc.types.Floats2d]"}, {"lineNumber": 158, "col_offset": 39, "nodeName": "vec1", "type": "numpy.ndarray"}, {"lineNumber": 158, "col_offset": 45, "nodeName": "vec2", "type": "numpy.ndarray"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "d_vec1", "type": "Any"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "get_loss", "type": "Callable[[thinc.types.Floats2d, thinc.types.Floats2d], float]"}, {"lineNumber": 162, "col_offset": 67, "nodeName": "vec1", "type": "numpy.ndarray"}, {"lineNumber": 162, "col_offset": 73, "nodeName": "vec2", "type": "numpy.ndarray"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "loss_not_normalized", "type": "Any"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "get_loss", "type": "Callable[[thinc.types.Floats2d, thinc.types.Floats2d], float]"}, {"lineNumber": 165, "col_offset": 62, "nodeName": "vec1", "type": "numpy.ndarray"}, {"lineNumber": 165, "col_offset": 68, "nodeName": "vec2", "type": "numpy.ndarray"}, {"lineNumber": 166, "col_offset": 11, "nodeName": "loss_normalized", "type": "Any"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "get_grad", "type": "Any"}, {"lineNumber": 195, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "loss", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "get_loss", "type": "Any"}, {"lineNumber": 199, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "d_scores", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "d_scores", "type": "Any"}, {"lineNumber": 25, "col_offset": 29, "nodeName": "scores0", "type": "Any"}, {"lineNumber": 26, "col_offset": 59, "nodeName": "scores0", "type": "Any"}, {"lineNumber": 26, "col_offset": 70, "nodeName": "labels0", "type": "numpy.ndarray"}, {"lineNumber": 28, "col_offset": 32, "nodeName": "scores0", "type": "Any"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "get_grad", "type": "Callable[[List[thinc.types.Floats2d], List[Union[thinc.types.Floats2d, thinc.types.Ints1d]]], List[thinc.types.Floats2d]]"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 37, "col_offset": 51, "nodeName": "approx", "type": "Any"}, {"lineNumber": 37, "col_offset": 68, "nodeName": "eps", "type": "float"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "get_loss", "type": "Any"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "vect", "type": "Any"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "vect", "type": "Any"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "approx", "type": "Any"}, {"lineNumber": 38, "col_offset": 57, "nodeName": "eps", "type": "float"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "d_scores", "type": "thinc.types.Floats2d"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "guesses", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "approx", "type": "Any"}, {"lineNumber": 49, "col_offset": 48, "nodeName": "eps", "type": "float"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "d_scores", "type": "thinc.types.Floats2d"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "guesses", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "d_scores1", "type": "thinc.types.Floats2d"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "guesses1", "type": "numpy.ndarray"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "d_scores2", "type": "thinc.types.Floats2d"}, {"lineNumber": 88, "col_offset": 30, "nodeName": "guesses2", "type": "numpy.ndarray"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "approx", "type": "Any"}, {"lineNumber": 89, "col_offset": 49, "nodeName": "eps", "type": "float"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "d_vecs", "type": "Any"}, {"lineNumber": 122, "col_offset": 27, "nodeName": "vec1", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "d_vecs", "type": "Any"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "shape", "type": "Any"}, {"lineNumber": 124, "col_offset": 54, "nodeName": "eps", "type": "float"}, {"lineNumber": 124, "col_offset": 64, "nodeName": "eps", "type": "float"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "approx", "type": "Any"}, {"lineNumber": 128, "col_offset": 52, "nodeName": "eps", "type": "float"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "approx", "type": "Any"}, {"lineNumber": 131, "col_offset": 47, "nodeName": "eps", "type": "float"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "d_vecs", "type": "Any"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "vec1", "type": "numpy.ndarray"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "approx", "type": "Any"}, {"lineNumber": 147, "col_offset": 51, "nodeName": "eps", "type": "float"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "approx", "type": "Any"}, {"lineNumber": 150, "col_offset": 47, "nodeName": "eps", "type": "float"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 156, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "d_vec1", "type": "Any"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "vec1", "type": "numpy.ndarray"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "testing", "type": "Any"}, {"lineNumber": 160, "col_offset": 42, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 160, "col_offset": 54, "nodeName": "shape", "type": "Any"}, {"lineNumber": 160, "col_offset": 74, "nodeName": "eps", "type": "float"}, {"lineNumber": 160, "col_offset": 84, "nodeName": "eps", "type": "float"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "approx", "type": "Any"}, {"lineNumber": 163, "col_offset": 51, "nodeName": "eps", "type": "float"}, {"lineNumber": 166, "col_offset": 30, "nodeName": "approx", "type": "Any"}, {"lineNumber": 166, "col_offset": 47, "nodeName": "eps", "type": "float"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 172, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "get_grad", "type": "Callable[[thinc.types.Floats2d, thinc.types.Floats2d], thinc.types.Floats2d]"}, {"lineNumber": 173, "col_offset": 34, "nodeName": "vec1", "type": "numpy.ndarray"}, {"lineNumber": 173, "col_offset": 40, "nodeName": "vec2", "type": "numpy.ndarray"}, {"lineNumber": 192, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 192, "col_offset": 39, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 193, "col_offset": 11, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 193, "col_offset": 37, "nodeName": "cfg", "type": "Dict[str, Dict[Any, Any]]"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "func", "type": "Any"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "args", "type": "Any"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 195, "col_offset": 31, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 197, "col_offset": 11, "nodeName": "loss", "type": "Any"}, {"lineNumber": 198, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 199, "col_offset": 10, "nodeName": "args", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "CategoricalCrossentropy", "type": "Type[thinc.loss.CategoricalCrossentropy]"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "SequenceCategoricalCrossentropy", "type": "Type[thinc.loss.SequenceCategoricalCrossentropy]"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "d_scores", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "d_scores", "type": "Any"}, {"lineNumber": 37, "col_offset": 51, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "dist", "type": "Any"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "CategoricalCrossentropy", "type": "Type[thinc.loss.CategoricalCrossentropy]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "d_scores", "type": "thinc.types.Floats2d"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "CategoricalCrossentropy", "type": "Type[thinc.loss.CategoricalCrossentropy]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "SequenceCategoricalCrossentropy", "type": "Type[thinc.loss.SequenceCategoricalCrossentropy]"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "d_scores1", "type": "thinc.types.Floats2d"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "L2Distance", "type": "Type[thinc.loss.L2Distance]"}, {"lineNumber": 123, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "numpy", "type": "module"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "L2Distance", "type": "Type[thinc.loss.L2Distance]"}, {"lineNumber": 128, "col_offset": 34, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "L2Distance", "type": "Type[thinc.loss.L2Distance]"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 139, "col_offset": 13, "nodeName": "CosineDistance", "type": "Type[thinc.loss.CosineDistance]"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "d_vecs", "type": "Any"}, {"lineNumber": 142, "col_offset": 11, "nodeName": "d_vecs", "type": "Any"}, {"lineNumber": 143, "col_offset": 11, "nodeName": "d_vecs", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "d_vecs", "type": "Any"}, {"lineNumber": 146, "col_offset": 26, "nodeName": "CosineDistance", "type": "Type[thinc.loss.CosineDistance]"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "CosineDistance", "type": "Type[thinc.loss.CosineDistance]"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "CosineDistance", "type": "Type[thinc.loss.CosineDistance]"}, {"lineNumber": 160, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 160, "col_offset": 42, "nodeName": "numpy", "type": "module"}, {"lineNumber": 160, "col_offset": 54, "nodeName": "d_vec1", "type": "Any"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "CosineDistance", "type": "Type[thinc.loss.CosineDistance]"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 165, "col_offset": 22, "nodeName": "CosineDistance", "type": "Type[thinc.loss.CosineDistance]"}, {"lineNumber": 166, "col_offset": 30, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 172, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 193, "col_offset": 11, "nodeName": "registry", "type": "Type[thinc.config.registry]"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "SequenceCategoricalCrossentropy", "type": "Type[thinc.loss.SequenceCategoricalCrossentropy]"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "d_vecs", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "CosineDistance", "type": "Type[thinc.loss.CosineDistance]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "get_grad", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "vect", "type": "Any"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "vect", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "dist", "type": "Any"}]