[{"lineNumber": 137, "col_offset": 0, "nodeName": "test_validate_simple_config", "type": "Callable[[], Any]"}, {"lineNumber": 144, "col_offset": 0, "nodeName": "test_invalidate_simple_config", "type": "Callable[[], Any]"}, {"lineNumber": 150, "col_offset": 0, "nodeName": "test_invalidate_extra_args", "type": "Callable[[], Any]"}, {"lineNumber": 156, "col_offset": 0, "nodeName": "test_fill_defaults_simple_config", "type": "Callable[[], Any]"}, {"lineNumber": 166, "col_offset": 0, "nodeName": "test_fill_recursive_config", "type": "Callable[[], Any]"}, {"lineNumber": 177, "col_offset": 0, "nodeName": "test_is_promise", "type": "Callable[[], Any]"}, {"lineNumber": 185, "col_offset": 0, "nodeName": "test_get_constructor", "type": "Callable[[], Any]"}, {"lineNumber": 190, "col_offset": 0, "nodeName": "test_parse_args", "type": "Callable[[], Any]"}, {"lineNumber": 196, "col_offset": 0, "nodeName": "test_make_promise_schema", "type": "Callable[[], Any]"}, {"lineNumber": 202, "col_offset": 0, "nodeName": "test_validate_promise", "type": "Callable[[], Any]"}, {"lineNumber": 209, "col_offset": 0, "nodeName": "test_fill_validate_promise", "type": "Callable[[], Any]"}, {"lineNumber": 215, "col_offset": 0, "nodeName": "test_fill_invalidate_promise", "type": "Callable[[], Any]"}, {"lineNumber": 224, "col_offset": 0, "nodeName": "test_create_registry", "type": "Callable[[], Any]"}, {"lineNumber": 236, "col_offset": 0, "nodeName": "test_registry_methods", "type": "Callable[[], Any]"}, {"lineNumber": 244, "col_offset": 0, "nodeName": "test_make_from_config_no_schema", "type": "Callable[[], Any]"}, {"lineNumber": 254, "col_offset": 0, "nodeName": "test_make_from_config_schema", "type": "Callable[[], Any]"}, {"lineNumber": 277, "col_offset": 0, "nodeName": "test_make_from_config_schema_coerced", "type": "Callable[[], Any]"}, {"lineNumber": 290, "col_offset": 0, "nodeName": "test_read_config", "type": "Callable[[], Any]"}, {"lineNumber": 300, "col_offset": 0, "nodeName": "test_optimizer_config", "type": "Callable[[], Any]"}, {"lineNumber": 307, "col_offset": 0, "nodeName": "test_config_to_str", "type": "Callable[[], Any]"}, {"lineNumber": 314, "col_offset": 0, "nodeName": "test_config_to_str_creates_intermediate_blocks", "type": "Callable[[], Any]"}, {"lineNumber": 327, "col_offset": 0, "nodeName": "test_config_roundtrip_bytes", "type": "Callable[[], Any]"}, {"lineNumber": 334, "col_offset": 0, "nodeName": "test_config_roundtrip_disk", "type": "Callable[[], Any]"}, {"lineNumber": 343, "col_offset": 0, "nodeName": "test_validation_custom_types", "type": "Callable[[], Any]"}, {"lineNumber": 376, "col_offset": 0, "nodeName": "test_validation_no_validate", "type": "Callable[[], Any]"}, {"lineNumber": 383, "col_offset": 0, "nodeName": "test_validation_fill_defaults", "type": "Callable[[], Any]"}, {"lineNumber": 399, "col_offset": 0, "nodeName": "test_make_config_positional_args", "type": "Callable[[], Any]"}, {"lineNumber": 413, "col_offset": 0, "nodeName": "test_make_config_positional_args_complex", "type": "Callable[[], Any]"}, {"lineNumber": 428, "col_offset": 0, "nodeName": "test_positional_args_to_from_string", "type": "Callable[[], Any]"}, {"lineNumber": 460, "col_offset": 0, "nodeName": "test_make_config_positional_args_dicts", "type": "Callable[[], Any]"}, {"lineNumber": 481, "col_offset": 0, "nodeName": "test_validation_generators_iterable", "type": "Callable[[], Any]"}, {"lineNumber": 495, "col_offset": 0, "nodeName": "test_validation_unset_type_hints", "type": "Callable[[], Any]"}, {"lineNumber": 506, "col_offset": 0, "nodeName": "test_validation_bad_function", "type": "Callable[[], Any]"}, {"lineNumber": 526, "col_offset": 0, "nodeName": "test_objects_from_config", "type": "Callable[[], Any]"}, {"lineNumber": 554, "col_offset": 0, "nodeName": "test_partials_from_config", "type": "Callable[[], Any]"}, {"lineNumber": 576, "col_offset": 0, "nodeName": "test_partials_from_config_nested", "type": "Callable[[], Any]"}, {"lineNumber": 601, "col_offset": 0, "nodeName": "test_validate_generator", "type": "Callable[[], Any]"}, {"lineNumber": 641, "col_offset": 0, "nodeName": "test_handle_generic_model_type", "type": "Callable[[], Any]"}, {"lineNumber": 687, "col_offset": 0, "nodeName": "test_fill_config_overrides", "type": "Callable[[], Any]"}, {"lineNumber": 724, "col_offset": 0, "nodeName": "test_make_from_config_overrides", "type": "Callable[[], Any]"}, {"lineNumber": 767, "col_offset": 0, "nodeName": "test_make_from_config_prefilled_values", "type": "Callable[[], Any]"}, {"lineNumber": 782, "col_offset": 0, "nodeName": "test_fill_config_dict_return_type", "type": "Callable[[], Any]"}, {"lineNumber": 795, "col_offset": 0, "nodeName": "test_deepcopy_config", "type": "Callable[[], Any]"}, {"lineNumber": 807, "col_offset": 0, "nodeName": "test_config_to_str_simple_promises", "type": "Callable[[], Any]"}, {"lineNumber": 816, "col_offset": 0, "nodeName": "test_config_to_str_order", "type": "Callable[[], Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "EXAMPLE_CONFIG", "type": "str"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "OPTIMIZER_CFG", "type": "str"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "registry", "type": "Any"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "BaseModel", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "BaseModel", "type": "Any"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "BaseModel", "type": "Any"}, {"lineNumber": 114, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 122, "col_offset": 75, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "good_catsie", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 132, "col_offset": 0, "nodeName": "ok_catsie", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "bad_catsie", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "worst_catsie", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "config", "type": "module"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "cats", "type": "Any"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 98, "col_offset": 14, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "optional", "type": "str"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "outer_opt", "type": "str"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "HelloIntsSchema", "type": "Type[HelloIntsSchema]"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "level2_opt", "type": "DefaultsSchema"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "DefaultsSchema", "type": "Type[DefaultsSchema]"}, {"lineNumber": 115, "col_offset": 7, "nodeName": "evil", "type": "Any"}, {"lineNumber": 123, "col_offset": 7, "nodeName": "evil", "type": "Any"}, {"lineNumber": 138, "col_offset": 4, "nodeName": "simple_config", "type": "Dict[str, int]"}, {"lineNumber": 145, "col_offset": 4, "nodeName": "invalid_config", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "invalid_config", "type": "Dict[str, int]"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "valid_config", "type": "Dict[str, int]"}, {"lineNumber": 161, "col_offset": 4, "nodeName": "invalid_config", "type": "Dict[str, str]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "valid_config", "type": "Dict[str, Union[Dict[str, int], int]]"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "invalid", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 186, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "schema", "type": "Any"}, {"lineNumber": 203, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 216, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 245, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 255, "col_offset": 28, "nodeName": "BaseModel", "type": "Any"}, {"lineNumber": 258, "col_offset": 25, "nodeName": "BaseModel", "type": "Any"}, {"lineNumber": 265, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 271, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "BaseModel", "type": "Any"}, {"lineNumber": 283, "col_offset": 4, "nodeName": "config", "type": "Dict[str, int]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "byte_string", "type": "bytes"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 301, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 302, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 303, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 308, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 310, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 315, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "cfg_bytes", "type": "Any"}, {"lineNumber": 330, "col_offset": 4, "nodeName": "new_cfg", "type": "Any"}, {"lineNumber": 335, "col_offset": 4, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 353, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 355, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 359, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 377, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, str]], int]]"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, str], int]]"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 390, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 407, "col_offset": 4, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 408, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Dict[str, Union[List[str], str]]]"}, {"lineNumber": 409, "col_offset": 4, "nodeName": "filled_cfg", "type": "Any"}, {"lineNumber": 419, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Dict[str, Union[List[Union[int, bool]], str]]]"}, {"lineNumber": 420, "col_offset": 4, "nodeName": "filled_cfg", "type": "Any"}, {"lineNumber": 422, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Dict[str, Union[List[Union[int, str]], str]]]"}, {"lineNumber": 429, "col_offset": 4, "nodeName": "cfg", "type": "str"}, {"lineNumber": 431, "col_offset": 4, "nodeName": "cfg", "type": "str"}, {"lineNumber": 438, "col_offset": 4, "nodeName": "cfg", "type": "str"}, {"lineNumber": 439, "col_offset": 4, "nodeName": "filled", "type": "Any"}, {"lineNumber": 442, "col_offset": 4, "nodeName": "cfg", "type": "str"}, {"lineNumber": 443, "col_offset": 4, "nodeName": "filled", "type": "Any"}, {"lineNumber": 451, "col_offset": 4, "nodeName": "cfg", "type": "str"}, {"lineNumber": 452, "col_offset": 4, "nodeName": "filled", "type": "Any"}, {"lineNumber": 453, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 455, "col_offset": 4, "nodeName": "cfg", "type": "str"}, {"lineNumber": 456, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 461, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Union[float, str]], Dict[str, Union[Dict[str, Union[Dict[str, str], Dict[str, Union[float, int, str]]]], str]], Dict[str, Union[float, int]]]]"}, {"lineNumber": 473, "col_offset": 4, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 474, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 475, "col_offset": 4, "nodeName": "X", "type": "Any"}, {"lineNumber": 491, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Dict[str, Union[float, str]]]"}, {"lineNumber": 502, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Dict[str, Union[int, float, str]]]"}, {"lineNumber": 517, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 521, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Dict[str, Union[int, str]]]"}, {"lineNumber": 527, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Dict[str, Union[Dict[str, Union[int, float, str]], float, str]]]"}, {"lineNumber": 547, "col_offset": 4, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 548, "col_offset": 4, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 557, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 558, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Dict[str, Union[float, str]]]"}, {"lineNumber": 559, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 568, "col_offset": 4, "nodeName": "bad_cfg", "type": "Dict[str, Dict[str, Union[List[float], str]]]"}, {"lineNumber": 571, "col_offset": 4, "nodeName": "bad_cfg", "type": "Dict[str, Dict[str, Union[int, float, str]]]"}, {"lineNumber": 580, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 591, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Union[int, str]], int, str]]"}, {"lineNumber": 596, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 610, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, str]"}, {"lineNumber": 611, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 615, "col_offset": 44, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 618, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, str], str]]"}, {"lineNumber": 622, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 626, "col_offset": 60, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 629, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Dict[str, str]], str]]"}, {"lineNumber": 633, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 637, "col_offset": 50, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 650, "col_offset": 4, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, str], str]]"}, {"lineNumber": 651, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 680, "col_offset": 7, "nodeName": "is_valid", "type": "Any"}, {"lineNumber": 688, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 692, "col_offset": 4, "nodeName": "overrides", "type": "Dict[str, bool]"}, {"lineNumber": 693, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 696, "col_offset": 4, "nodeName": "overrides", "type": "Dict[str, int]"}, {"lineNumber": 697, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 701, "col_offset": 4, "nodeName": "overrides", "type": "Dict[str, Optional[Dict[str, Union[bool, str]]]]"}, {"lineNumber": 702, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 725, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 729, "col_offset": 4, "nodeName": "overrides", "type": "Dict[str, bool]"}, {"lineNumber": 730, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 733, "col_offset": 4, "nodeName": "overrides", "type": "Dict[str, int]"}, {"lineNumber": 734, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 737, "col_offset": 4, "nodeName": "overrides", "type": "Dict[str, Optional[Dict[str, Union[bool, str]]]]"}, {"lineNumber": 738, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 763, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Dict[str, Union[List[int], Dict[str, int]]]]"}, {"lineNumber": 776, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 777, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 789, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[int, Dict[str, Union[bool, str]]]]"}, {"lineNumber": 790, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 796, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 797, "col_offset": 4, "nodeName": "copied", "type": "Any"}, {"lineNumber": 802, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 810, "col_offset": 4, "nodeName": "config_str", "type": "str"}, {"lineNumber": 811, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 818, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Dict[str, int]]], Dict[str, Union[int, Dict[str, int]]]]]"}, {"lineNumber": 819, "col_offset": 4, "nodeName": "expected", "type": "str"}, {"lineNumber": 822, "col_offset": 4, "nodeName": "config", "type": "Any"}, {"lineNumber": 85, "col_offset": 18, "nodeName": "thinc", "type": "module"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "create", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "extra", "type": "str"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "extra", "type": "str"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "DefaultsSchema", "type": "Type[DefaultsSchema]"}, {"lineNumber": 114, "col_offset": 20, "nodeName": "StrictBool", "type": "Any"}, {"lineNumber": 114, "col_offset": 38, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "StrictBool", "type": "Any"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 122, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "f", "type": "Any"}, {"lineNumber": 139, "col_offset": 7, "nodeName": "_", "type": "Any"}, {"lineNumber": 139, "col_offset": 10, "nodeName": "v", "type": "Any"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "_fill", "type": "Any"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "simple_config", "type": "Dict[str, int]"}, {"lineNumber": 139, "col_offset": 47, "nodeName": "HelloIntsSchema", "type": "Type[HelloIntsSchema]"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "f", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "simple_config", "type": "Dict[str, int]"}, {"lineNumber": 141, "col_offset": 11, "nodeName": "v", "type": "Any"}, {"lineNumber": 141, "col_offset": 16, "nodeName": "simple_config", "type": "Dict[str, int]"}, {"lineNumber": 158, "col_offset": 4, "nodeName": "filled", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "v", "type": "Any"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "_fill", "type": "Any"}, {"lineNumber": 158, "col_offset": 37, "nodeName": "valid_config", "type": "Dict[str, int]"}, {"lineNumber": 158, "col_offset": 51, "nodeName": "DefaultsSchema", "type": "Type[DefaultsSchema]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "filled", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "validation", "type": "Any"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "_fill", "type": "Any"}, {"lineNumber": 168, "col_offset": 46, "nodeName": "valid_config", "type": "Dict[str, Union[Dict[str, int], int]]"}, {"lineNumber": 168, "col_offset": 60, "nodeName": "ComplexSchema", "type": "Type[ComplexSchema]"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "is_promise", "type": "Any"}, {"lineNumber": 178, "col_offset": 34, "nodeName": "good_catsie", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "is_promise", "type": "Any"}, {"lineNumber": 182, "col_offset": 34, "nodeName": "invalid", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "get_constructor", "type": "Any"}, {"lineNumber": 186, "col_offset": 39, "nodeName": "good_catsie", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "func", "type": "Any"}, {"lineNumber": 187, "col_offset": 19, "nodeName": "catsie_v1", "type": "Any"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 191, "col_offset": 10, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "parse_args", "type": "Any"}, {"lineNumber": 191, "col_offset": 42, "nodeName": "bad_catsie", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 193, "col_offset": 11, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 197, "col_offset": 13, "nodeName": "make_promise_schema", "type": "Any"}, {"lineNumber": 197, "col_offset": 45, "nodeName": "good_catsie", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "__fields__", "type": "Any"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "__fields__", "type": "Any"}, {"lineNumber": 203, "col_offset": 41, "nodeName": "good_catsie", "type": "Dict[str, Union[bool, str]]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "filled", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 204, "col_offset": 15, "nodeName": "validated", "type": "Any"}, {"lineNumber": 204, "col_offset": 27, "nodeName": "_fill", "type": "Any"}, {"lineNumber": 204, "col_offset": 45, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 204, "col_offset": 53, "nodeName": "DefaultsSchema", "type": "Type[DefaultsSchema]"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "filled", "type": "Any"}, {"lineNumber": 205, "col_offset": 21, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "validated", "type": "Any"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "filled", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "validated", "type": "Any"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "_fill", "type": "Any"}, {"lineNumber": 211, "col_offset": 45, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 211, "col_offset": 53, "nodeName": "DefaultsSchema", "type": "Type[DefaultsSchema]"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "create", "type": "Any"}, {"lineNumber": 228, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "register", "type": "Any"}, {"lineNumber": 246, "col_offset": 13, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 246, "col_offset": 42, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, str]], int]]"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 259, "col_offset": 13, "nodeName": "PositiveInt", "type": "Any"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 266, "col_offset": 33, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 280, "col_offset": 15, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 281, "col_offset": 15, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 284, "col_offset": 13, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 284, "col_offset": 42, "nodeName": "config", "type": "Dict[str, int]"}, {"lineNumber": 291, "col_offset": 18, "nodeName": "encode", "type": "Callable[..., bytes]"}, {"lineNumber": 292, "col_offset": 10, "nodeName": "from_bytes", "type": "Any"}, {"lineNumber": 292, "col_offset": 30, "nodeName": "byte_string", "type": "bytes"}, {"lineNumber": 301, "col_offset": 10, "nodeName": "from_str", "type": "Any"}, {"lineNumber": 301, "col_offset": 28, "nodeName": "OPTIMIZER_CFG", "type": "str"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 302, "col_offset": 42, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 303, "col_offset": 16, "nodeName": "result", "type": "Any"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "b1", "type": "Any"}, {"lineNumber": 308, "col_offset": 10, "nodeName": "from_str", "type": "Any"}, {"lineNumber": 308, "col_offset": 28, "nodeName": "OPTIMIZER_CFG", "type": "str"}, {"lineNumber": 310, "col_offset": 10, "nodeName": "from_str", "type": "Any"}, {"lineNumber": 310, "col_offset": 57, "nodeName": "OPTIMIZER_CFG", "type": "str"}, {"lineNumber": 315, "col_offset": 10, "nodeName": "Config", "type": "Any"}, {"lineNumber": 328, "col_offset": 10, "nodeName": "from_str", "type": "Any"}, {"lineNumber": 328, "col_offset": 28, "nodeName": "OPTIMIZER_CFG", "type": "str"}, {"lineNumber": 329, "col_offset": 16, "nodeName": "to_bytes", "type": "Any"}, {"lineNumber": 330, "col_offset": 14, "nodeName": "from_bytes", "type": "Any"}, {"lineNumber": 330, "col_offset": 34, "nodeName": "cfg_bytes", "type": "Any"}, {"lineNumber": 335, "col_offset": 10, "nodeName": "from_str", "type": "Any"}, {"lineNumber": 335, "col_offset": 28, "nodeName": "OPTIMIZER_CFG", "type": "str"}, {"lineNumber": 336, "col_offset": 27, "nodeName": "path", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "cfg_path", "type": "Any"}, {"lineNumber": 339, "col_offset": 8, "nodeName": "new_cfg", "type": "Any"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "create", "type": "Any"}, {"lineNumber": 352, "col_offset": 38, "nodeName": "complex_args", "type": "Callable[..., Any]"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 378, "col_offset": 13, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 378, "col_offset": 42, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, str]], int]]"}, {"lineNumber": 385, "col_offset": 13, "nodeName": "fill_config", "type": "Any"}, {"lineNumber": 385, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Union[Dict[str, str], int]]"}, {"lineNumber": 392, "col_offset": 13, "nodeName": "fill_config", "type": "Any"}, {"lineNumber": 392, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 409, "col_offset": 17, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 409, "col_offset": 46, "nodeName": "cfg", "type": "Dict[str, Dict[str, Union[List[str], str]]]"}, {"lineNumber": 420, "col_offset": 17, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 420, "col_offset": 46, "nodeName": "cfg", "type": "Dict[str, Dict[str, Union[List[Union[int, bool]], str]]]"}, {"lineNumber": 430, "col_offset": 46, "nodeName": "cfg", "type": "str"}, {"lineNumber": 432, "col_offset": 46, "nodeName": "cfg", "type": "str"}, {"lineNumber": 436, "col_offset": 15, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 439, "col_offset": 13, "nodeName": "to_str", "type": "Any"}, {"lineNumber": 440, "col_offset": 11, "nodeName": "filled", "type": "Any"}, {"lineNumber": 443, "col_offset": 13, "nodeName": "to_str", "type": "Any"}, {"lineNumber": 444, "col_offset": 11, "nodeName": "filled", "type": "Any"}, {"lineNumber": 452, "col_offset": 13, "nodeName": "to_str", "type": "Any"}, {"lineNumber": 454, "col_offset": 11, "nodeName": "filled", "type": "Any"}, {"lineNumber": 454, "col_offset": 21, "nodeName": "expected", "type": "str"}, {"lineNumber": 456, "col_offset": 13, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 457, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 473, "col_offset": 13, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 473, "col_offset": 42, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Union[float, str]], Dict[str, Union[Dict[str, Union[Dict[str, str], Dict[str, Union[float, int, str]]]], str]], Dict[str, Union[float, int]]]]"}, {"lineNumber": 474, "col_offset": 12, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "ones", "type": "Any"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "begin_update", "type": "Any"}, {"lineNumber": 477, "col_offset": 23, "nodeName": "X", "type": "Any"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "finish_update", "type": "Any"}, {"lineNumber": 487, "col_offset": 53, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 492, "col_offset": 33, "nodeName": "config", "type": "Dict[str, Dict[str, Union[float, str]]]"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 503, "col_offset": 33, "nodeName": "config", "type": "Dict[str, Dict[str, Union[int, float, str]]]"}, {"lineNumber": 544, "col_offset": 51, "nodeName": "List", "type": "Any"}, {"lineNumber": 547, "col_offset": 13, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 547, "col_offset": 42, "nodeName": "config", "type": "Dict[str, Dict[str, Union[Dict[str, Union[int, float, str]], float, str]]]"}, {"lineNumber": 548, "col_offset": 16, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 549, "col_offset": 11, "nodeName": "b1", "type": "Any"}, {"lineNumber": 550, "col_offset": 27, "nodeName": "schedules", "type": "Any"}, {"lineNumber": 551, "col_offset": 11, "nodeName": "learn_rate", "type": "Any"}, {"lineNumber": 560, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 560, "col_offset": 19, "nodeName": "func", "type": "Any"}, {"lineNumber": 564, "col_offset": 11, "nodeName": "default", "type": "Any"}, {"lineNumber": 566, "col_offset": 4, "nodeName": "func", "type": "Any"}, {"lineNumber": 584, "col_offset": 50, "nodeName": "Callable", "type": "Any"}, {"lineNumber": 588, "col_offset": 62, "nodeName": "Callable", "type": "Any"}, {"lineNumber": 612, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 612, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 612, "col_offset": 30, "nodeName": "GeneratorType", "type": "Type[types.GeneratorType]"}, {"lineNumber": 616, "col_offset": 15, "nodeName": "rate", "type": "Any"}, {"lineNumber": 623, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 623, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 623, "col_offset": 30, "nodeName": "GeneratorType", "type": "Type[types.GeneratorType]"}, {"lineNumber": 634, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 634, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 634, "col_offset": 30, "nodeName": "GeneratorType", "type": "Type[types.GeneratorType]"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 648, "col_offset": 15, "nodeName": "model", "type": "thinc.model.Model[int, int]"}, {"lineNumber": 652, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 652, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 652, "col_offset": 29, "nodeName": "Model", "type": "Type[thinc.model.Model[Any, Any]]"}, {"lineNumber": 653, "col_offset": 11, "nodeName": "name", "type": "Any"}, {"lineNumber": 693, "col_offset": 13, "nodeName": "fill_config", "type": "Any"}, {"lineNumber": 693, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 697, "col_offset": 13, "nodeName": "fill_config", "type": "Any"}, {"lineNumber": 697, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 702, "col_offset": 13, "nodeName": "fill_config", "type": "Any"}, {"lineNumber": 702, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 709, "col_offset": 8, "nodeName": "overrides", "type": "Dict[str, int]"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "overrides", "type": "Dict[str, Optional[Dict[str, str]]]"}, {"lineNumber": 717, "col_offset": 8, "nodeName": "overrides", "type": "Dict[str, bool]"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "overrides", "type": "Dict[str, bool]"}, {"lineNumber": 730, "col_offset": 13, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 730, "col_offset": 42, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 734, "col_offset": 13, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 734, "col_offset": 42, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 738, "col_offset": 13, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 738, "col_offset": 42, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 743, "col_offset": 8, "nodeName": "overrides", "type": "Dict[str, int]"}, {"lineNumber": 747, "col_offset": 8, "nodeName": "overrides", "type": "Dict[str, Optional[Dict[str, str]]]"}, {"lineNumber": 751, "col_offset": 8, "nodeName": "overrides", "type": "Dict[str, bool]"}, {"lineNumber": 754, "col_offset": 8, "nodeName": "overrides", "type": "Dict[str, bool]"}, {"lineNumber": 764, "col_offset": 54, "nodeName": "expected", "type": "Any"}, {"lineNumber": 778, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 778, "col_offset": 33, "nodeName": "Language", "type": "Type[Any]"}, {"lineNumber": 786, "col_offset": 46, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 792, "col_offset": 29, "nodeName": "result", "type": "Any"}, {"lineNumber": 796, "col_offset": 13, "nodeName": "Config", "type": "Any"}, {"lineNumber": 797, "col_offset": 13, "nodeName": "copy", "type": "Any"}, {"lineNumber": 799, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 799, "col_offset": 21, "nodeName": "copied", "type": "Any"}, {"lineNumber": 800, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 800, "col_offset": 25, "nodeName": "copied", "type": "Any"}, {"lineNumber": 802, "col_offset": 13, "nodeName": "Config", "type": "Any"}, {"lineNumber": 811, "col_offset": 13, "nodeName": "from_str", "type": "Any"}, {"lineNumber": 811, "col_offset": 31, "nodeName": "config_str", "type": "str"}, {"lineNumber": 813, "col_offset": 30, "nodeName": "config_str", "type": "str"}, {"lineNumber": 822, "col_offset": 13, "nodeName": "Config", "type": "Any"}, {"lineNumber": 822, "col_offset": 20, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Dict[str, int]]], Dict[str, Union[int, Dict[str, int]]]]]"}, {"lineNumber": 823, "col_offset": 30, "nodeName": "expected", "type": "str"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "catalogue", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "cute_level", "type": "int"}, {"lineNumber": 139, "col_offset": 14, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 146, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "_fill", "type": "Any"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "invalid_config", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 147, "col_offset": 42, "nodeName": "HelloIntsSchema", "type": "Type[HelloIntsSchema]"}, {"lineNumber": 152, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "_fill", "type": "Any"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "invalid_config", "type": "Dict[str, int]"}, {"lineNumber": 153, "col_offset": 42, "nodeName": "HelloIntsSchema", "type": "Type[HelloIntsSchema]"}, {"lineNumber": 158, "col_offset": 19, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "filled", "type": "Any"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "filled", "type": "Any"}, {"lineNumber": 162, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "_fill", "type": "Any"}, {"lineNumber": 163, "col_offset": 26, "nodeName": "invalid_config", "type": "Dict[str, str]"}, {"lineNumber": 163, "col_offset": 42, "nodeName": "DefaultsSchema", "type": "Type[DefaultsSchema]"}, {"lineNumber": 168, "col_offset": 28, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 169, "col_offset": 11, "nodeName": "filled", "type": "Any"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "filled", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "is_promise", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "is_promise", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 191, "col_offset": 19, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 197, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 198, "col_offset": 21, "nodeName": "schema", "type": "Any"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "schema", "type": "Any"}, {"lineNumber": 204, "col_offset": 27, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 211, "col_offset": 27, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 217, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 217, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "_fill", "type": "Any"}, {"lineNumber": 218, "col_offset": 26, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 218, "col_offset": 34, "nodeName": "HelloIntsSchema", "type": "Type[HelloIntsSchema]"}, {"lineNumber": 219, "col_offset": 4, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 220, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "_fill", "type": "Any"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Union[bool, str]], int]]"}, {"lineNumber": 221, "col_offset": 34, "nodeName": "DefaultsSchema", "type": "Type[DefaultsSchema]"}, {"lineNumber": 225, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 225, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "create", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "dogs", "type": "Any"}, {"lineNumber": 231, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 232, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 232, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "create", "type": "Any"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 237, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "get", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "register", "type": "Any"}, {"lineNumber": 240, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 240, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "get", "type": "Any"}, {"lineNumber": 246, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 247, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 248, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 249, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 249, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 251, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, str]], int]]"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "extra", "type": "str"}, {"lineNumber": 266, "col_offset": 4, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 266, "col_offset": 48, "nodeName": "TestBaseSchema", "type": "Type[Any]"}, {"lineNumber": 268, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 268, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 270, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 272, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 274, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 284, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 284, "col_offset": 57, "nodeName": "TestBaseSchema", "type": "Type[Any]"}, {"lineNumber": 285, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 286, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 287, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 291, "col_offset": 18, "nodeName": "EXAMPLE_CONFIG", "type": "str"}, {"lineNumber": 302, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 304, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 309, "col_offset": 11, "nodeName": "strip", "type": "Any"}, {"lineNumber": 309, "col_offset": 35, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "strip", "type": "Any"}, {"lineNumber": 311, "col_offset": 35, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "strip", "type": "Any"}, {"lineNumber": 323, "col_offset": -1, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 329, "col_offset": 16, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "strip", "type": "Any"}, {"lineNumber": 331, "col_offset": 39, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 336, "col_offset": 9, "nodeName": "make_tempdir", "type": "Any"}, {"lineNumber": 337, "col_offset": 19, "nodeName": "path", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "to_disk", "type": "Any"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "cfg_path", "type": "Any"}, {"lineNumber": 339, "col_offset": 18, "nodeName": "from_disk", "type": "Any"}, {"lineNumber": 339, "col_offset": 37, "nodeName": "cfg_path", "type": "Any"}, {"lineNumber": 340, "col_offset": 11, "nodeName": "strip", "type": "Any"}, {"lineNumber": 340, "col_offset": 39, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 351, "col_offset": 4, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "complex", "type": "Any"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 354, "col_offset": 44, "nodeName": "cfg", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 356, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 356, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 360, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 360, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 364, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 364, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 366, "col_offset": 37, "nodeName": "cfg", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 367, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 367, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "fill_config", "type": "Any"}, {"lineNumber": 369, "col_offset": 32, "nodeName": "cfg", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 371, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 371, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 378, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 379, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 380, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 385, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 386, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 387, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 387, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "fill_config", "type": "Any"}, {"lineNumber": 389, "col_offset": 32, "nodeName": "config", "type": "Dict[str, Union[Dict[str, str], int]]"}, {"lineNumber": 392, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 393, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 401, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 404, "col_offset": 15, "nodeName": "foo", "type": "str"}, {"lineNumber": 405, "col_offset": 15, "nodeName": "args", "type": "Tuple[Optional[str], ...]"}, {"lineNumber": 408, "col_offset": 65, "nodeName": "args", "type": "List[str]"}, {"lineNumber": 409, "col_offset": 17, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 410, "col_offset": 11, "nodeName": "filled_cfg", "type": "Any"}, {"lineNumber": 417, "col_offset": 15, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 420, "col_offset": 17, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 421, "col_offset": 11, "nodeName": "filled_cfg", "type": "Any"}, {"lineNumber": 423, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 423, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 425, "col_offset": 37, "nodeName": "cfg", "type": "Dict[str, Dict[str, Union[List[Union[int, str]], str]]]"}, {"lineNumber": 430, "col_offset": 11, "nodeName": "to_str", "type": "Any"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "to_str", "type": "Any"}, {"lineNumber": 441, "col_offset": 11, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 445, "col_offset": 11, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 448, "col_offset": 22, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 449, "col_offset": 24, "nodeName": "y", "type": "int"}, {"lineNumber": 456, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 456, "col_offset": 42, "nodeName": "from_str", "type": "Any"}, {"lineNumber": 456, "col_offset": 60, "nodeName": "cfg", "type": "str"}, {"lineNumber": 473, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 476, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 476, "col_offset": 23, "nodeName": "X", "type": "Any"}, {"lineNumber": 477, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 478, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 478, "col_offset": 24, "nodeName": "loaded", "type": "Any"}, {"lineNumber": 483, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 487, "col_offset": 37, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 487, "col_offset": 62, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 492, "col_offset": 4, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 499, "col_offset": 39, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 503, "col_offset": 4, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 509, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 518, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 518, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 519, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 522, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 522, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 523, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Dict[str, Union[int, str]]]"}, {"lineNumber": 540, "col_offset": 58, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 541, "col_offset": 15, "nodeName": "RAdam", "type": "Any"}, {"lineNumber": 541, "col_offset": 21, "nodeName": "learn_rate", "type": "List[float]"}, {"lineNumber": 544, "col_offset": 28, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 544, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 545, "col_offset": 15, "nodeName": "repeat", "type": "int"}, {"lineNumber": 544, "col_offset": 56, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 547, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 549, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 550, "col_offset": 27, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 551, "col_offset": 11, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 558, "col_offset": 37, "nodeName": "name", "type": "str"}, {"lineNumber": 559, "col_offset": 11, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 559, "col_offset": 40, "nodeName": "cfg", "type": "Dict[str, Dict[str, Union[float, str]]]"}, {"lineNumber": 562, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 562, "col_offset": 15, "nodeName": "parameters", "type": "Mapping[str, inspect.Parameter]"}, {"lineNumber": 566, "col_offset": 9, "nodeName": "NumpyOps", "type": "Any"}, {"lineNumber": 568, "col_offset": 41, "nodeName": "name", "type": "str"}, {"lineNumber": 569, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 569, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 570, "col_offset": 37, "nodeName": "bad_cfg", "type": "Dict[str, Dict[str, Union[List[float], str]]]"}, {"lineNumber": 571, "col_offset": 41, "nodeName": "name", "type": "str"}, {"lineNumber": 572, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 572, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 573, "col_offset": 37, "nodeName": "bad_cfg", "type": "Dict[str, Dict[str, Union[int, float, str]]]"}, {"lineNumber": 580, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 580, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 581, "col_offset": 15, "nodeName": "a", "type": "int"}, {"lineNumber": 581, "col_offset": 19, "nodeName": "b", "type": "int"}, {"lineNumber": 584, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 585, "col_offset": 15, "nodeName": "partial", "type": "Callable"}, {"lineNumber": 585, "col_offset": 23, "nodeName": "test_initializer", "type": "Callable[..., int]"}, {"lineNumber": 588, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 596, "col_offset": 11, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 597, "col_offset": 11, "nodeName": "func", "type": "Any"}, {"lineNumber": 598, "col_offset": 11, "nodeName": "func", "type": "Any"}, {"lineNumber": 611, "col_offset": 13, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 615, "col_offset": 30, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 622, "col_offset": 13, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 627, "col_offset": 15, "nodeName": "schedules", "type": "Dict[str, Any]"}, {"lineNumber": 633, "col_offset": 13, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 637, "col_offset": 36, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 638, "col_offset": 15, "nodeName": "schedules", "type": "Tuple[Any, ...]"}, {"lineNumber": 647, "col_offset": 8, "nodeName": "model", "type": "thinc.model.Model[int, int]"}, {"lineNumber": 651, "col_offset": 12, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 653, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 667, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 667, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "from_str", "type": "Any"}, {"lineNumber": 668, "col_offset": 26, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "from_str", "type": "Any"}, {"lineNumber": 681, "col_offset": 26, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 693, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 693, "col_offset": 55, "nodeName": "overrides", "type": "Dict[str, bool]"}, {"lineNumber": 697, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 697, "col_offset": 55, "nodeName": "overrides", "type": "Dict[str, int]"}, {"lineNumber": 702, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 702, "col_offset": 55, "nodeName": "overrides", "type": "Dict[str, Optional[Dict[str, Union[bool, str]]]]"}, {"lineNumber": 703, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 708, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 708, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 710, "col_offset": 8, "nodeName": "fill_config", "type": "Any"}, {"lineNumber": 710, "col_offset": 32, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 712, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 712, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "fill_config", "type": "Any"}, {"lineNumber": 714, "col_offset": 32, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 716, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 716, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "fill_config", "type": "Any"}, {"lineNumber": 718, "col_offset": 32, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 719, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 719, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 721, "col_offset": 8, "nodeName": "fill_config", "type": "Any"}, {"lineNumber": 721, "col_offset": 32, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 730, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 730, "col_offset": 60, "nodeName": "overrides", "type": "Dict[str, bool]"}, {"lineNumber": 734, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 734, "col_offset": 60, "nodeName": "overrides", "type": "Dict[str, int]"}, {"lineNumber": 738, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 738, "col_offset": 60, "nodeName": "overrides", "type": "Dict[str, Optional[Dict[str, Union[bool, str]]]]"}, {"lineNumber": 739, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 740, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 742, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 742, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 744, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 746, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 746, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 748, "col_offset": 8, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 748, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 750, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 750, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 752, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 753, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 753, "col_offset": 23, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 755, "col_offset": 8, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 755, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Union[Dict[str, Dict[str, Union[bool, str]]], int]]"}, {"lineNumber": 764, "col_offset": 11, "nodeName": "_is_in_config", "type": "Any"}, {"lineNumber": 764, "col_offset": 37, "nodeName": "prop", "type": "Any"}, {"lineNumber": 764, "col_offset": 43, "nodeName": "config", "type": "Dict[str, Dict[str, Union[List[int], Dict[str, int]]]]"}, {"lineNumber": 773, "col_offset": 23, "nodeName": "Language", "type": "Type[Any]"}, {"lineNumber": 773, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 774, "col_offset": 16, "nodeName": "nlp", "type": "Any"}, {"lineNumber": 774, "col_offset": 21, "nodeName": "value", "type": "int"}, {"lineNumber": 777, "col_offset": 13, "nodeName": "make_from_config", "type": "Any"}, {"lineNumber": 777, "col_offset": 42, "nodeName": "config", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 778, "col_offset": 22, "nodeName": "result", "type": "Any"}, {"lineNumber": 779, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 786, "col_offset": 31, "nodeName": "StrictBool", "type": "Any"}, {"lineNumber": 790, "col_offset": 13, "nodeName": "fill_config", "type": "Any"}, {"lineNumber": 790, "col_offset": 37, "nodeName": "config", "type": "Dict[str, Union[int, Dict[str, Union[bool, str]]]]"}, {"lineNumber": 791, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 797, "col_offset": 13, "nodeName": "config", "type": "Any"}, {"lineNumber": 802, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 803, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 803, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 804, "col_offset": 8, "nodeName": "copy", "type": "Any"}, {"lineNumber": 813, "col_offset": 11, "nodeName": "to_str", "type": "Any"}, {"lineNumber": 823, "col_offset": 11, "nodeName": "to_str", "type": "Any"}, {"lineNumber": 146, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 152, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 162, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 171, "col_offset": 11, "nodeName": "filled", "type": "Any"}, {"lineNumber": 172, "col_offset": 11, "nodeName": "filled", "type": "Any"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "filled", "type": "Any"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "filled", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 212, "col_offset": 11, "nodeName": "filled", "type": "Any"}, {"lineNumber": 217, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 220, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 225, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "get_all", "type": "Any"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "get_all", "type": "Any"}, {"lineNumber": 232, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 237, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "cats", "type": "Any"}, {"lineNumber": 240, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 249, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 268, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 270, "col_offset": 52, "nodeName": "TestBaseSchema", "type": "Type[Any]"}, {"lineNumber": 272, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 274, "col_offset": 52, "nodeName": "TestBaseSchema", "type": "Type[Any]"}, {"lineNumber": 292, "col_offset": 10, "nodeName": "Config", "type": "Any"}, {"lineNumber": 294, "col_offset": 11, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 301, "col_offset": 10, "nodeName": "Config", "type": "Any"}, {"lineNumber": 308, "col_offset": 10, "nodeName": "Config", "type": "Any"}, {"lineNumber": 309, "col_offset": 35, "nodeName": "OPTIMIZER_CFG", "type": "str"}, {"lineNumber": 310, "col_offset": 10, "nodeName": "Config", "type": "Any"}, {"lineNumber": 311, "col_offset": 35, "nodeName": "OPTIMIZER_CFG", "type": "str"}, {"lineNumber": 328, "col_offset": 10, "nodeName": "Config", "type": "Any"}, {"lineNumber": 330, "col_offset": 14, "nodeName": "Config", "type": "Any"}, {"lineNumber": 331, "col_offset": 39, "nodeName": "OPTIMIZER_CFG", "type": "str"}, {"lineNumber": 335, "col_offset": 10, "nodeName": "Config", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 340, "col_offset": 39, "nodeName": "OPTIMIZER_CFG", "type": "str"}, {"lineNumber": 347, "col_offset": 19, "nodeName": "constr", "type": "Any"}, {"lineNumber": 352, "col_offset": 4, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 356, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 358, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 358, "col_offset": 48, "nodeName": "cfg", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 360, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 362, "col_offset": 48, "nodeName": "cfg", "type": "Dict[str, Union[str, int, float]]"}, {"lineNumber": 364, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 367, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 371, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 373, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 373, "col_offset": 48, "nodeName": "cfg", "type": "Dict[str, Union[str, float]]"}, {"lineNumber": 386, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 387, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 393, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 394, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 396, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 401, "col_offset": 26, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 402, "col_offset": 15, "nodeName": "args", "type": "Tuple[Optional[str], ...]"}, {"lineNumber": 403, "col_offset": 15, "nodeName": "args", "type": "Tuple[Optional[str], ...]"}, {"lineNumber": 415, "col_offset": 26, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 416, "col_offset": 15, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 423, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 439, "col_offset": 13, "nodeName": "fill_config", "type": "Any"}, {"lineNumber": 441, "col_offset": 11, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 441, "col_offset": 40, "nodeName": "from_str", "type": "Any"}, {"lineNumber": 441, "col_offset": 58, "nodeName": "cfg", "type": "str"}, {"lineNumber": 443, "col_offset": 13, "nodeName": "fill_config", "type": "Any"}, {"lineNumber": 445, "col_offset": 11, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 445, "col_offset": 40, "nodeName": "from_str", "type": "Any"}, {"lineNumber": 445, "col_offset": 58, "nodeName": "cfg", "type": "str"}, {"lineNumber": 452, "col_offset": 13, "nodeName": "fill_config", "type": "Any"}, {"lineNumber": 476, "col_offset": 28, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 489, "col_offset": 18, "nodeName": "some_value", "type": "float"}, {"lineNumber": 518, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 522, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 523, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 540, "col_offset": 38, "nodeName": "List", "type": "Any"}, {"lineNumber": 541, "col_offset": 39, "nodeName": "beta1", "type": "float"}, {"lineNumber": 545, "col_offset": 25, "nodeName": "base_rate", "type": "float"}, {"lineNumber": 559, "col_offset": 11, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 564, "col_offset": 11, "nodeName": "parameters", "type": "Mapping[str, inspect.Parameter]"}, {"lineNumber": 569, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 570, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 572, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 573, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 585, "col_offset": 43, "nodeName": "b", "type": "int"}, {"lineNumber": 584, "col_offset": 66, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 588, "col_offset": 25, "nodeName": "Callable", "type": "Any"}, {"lineNumber": 588, "col_offset": 78, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 596, "col_offset": 11, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 596, "col_offset": 49, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Union[int, str]], int, str]]"}, {"lineNumber": 611, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 611, "col_offset": 51, "nodeName": "cfg", "type": "Dict[str, str]"}, {"lineNumber": 622, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 622, "col_offset": 51, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, str], str]]"}, {"lineNumber": 626, "col_offset": 35, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 633, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 633, "col_offset": 51, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, Dict[str, str]], str]]"}, {"lineNumber": 646, "col_offset": 28, "nodeName": "Model", "type": "Type[thinc.model.Model[Any, Any]]"}, {"lineNumber": 651, "col_offset": 12, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 651, "col_offset": 50, "nodeName": "cfg", "type": "Dict[str, Union[Dict[str, str], str]]"}, {"lineNumber": 667, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 683, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 683, "col_offset": 27, "nodeName": "ConfigValidationError", "type": "Any"}, {"lineNumber": 684, "col_offset": 12, "nodeName": "from_str", "type": "Any"}, {"lineNumber": 684, "col_offset": 30, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 698, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 704, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 705, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 706, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 708, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 710, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 710, "col_offset": 50, "nodeName": "overrides", "type": "Dict[str, int]"}, {"lineNumber": 712, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 714, "col_offset": 50, "nodeName": "overrides", "type": "Dict[str, Optional[Dict[str, str]]]"}, {"lineNumber": 716, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 718, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 718, "col_offset": 50, "nodeName": "overrides", "type": "Dict[str, bool]"}, {"lineNumber": 719, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 721, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 721, "col_offset": 50, "nodeName": "overrides", "type": "Dict[str, bool]"}, {"lineNumber": 731, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 735, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 742, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 744, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 744, "col_offset": 55, "nodeName": "overrides", "type": "Dict[str, int]"}, {"lineNumber": 746, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 748, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 748, "col_offset": 55, "nodeName": "overrides", "type": "Dict[str, Optional[Dict[str, str]]]"}, {"lineNumber": 750, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 752, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 752, "col_offset": 55, "nodeName": "overrides", "type": "Dict[str, bool]"}, {"lineNumber": 753, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 755, "col_offset": 8, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 755, "col_offset": 55, "nodeName": "overrides", "type": "Dict[str, bool]"}, {"lineNumber": 764, "col_offset": 11, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 776, "col_offset": 61, "nodeName": "Language", "type": "Type[Any]"}, {"lineNumber": 777, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 787, "col_offset": 32, "nodeName": "evil", "type": "Any"}, {"lineNumber": 786, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 786, "col_offset": 56, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 790, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 803, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 804, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 811, "col_offset": 13, "nodeName": "Config", "type": "Any"}, {"lineNumber": 813, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 823, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "dogs", "type": "Any"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "dogs", "type": "Any"}, {"lineNumber": 239, "col_offset": 4, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 295, "col_offset": 11, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 296, "col_offset": 11, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 309, "col_offset": 11, "nodeName": "to_str", "type": "Any"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "to_str", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "to_str", "type": "Any"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "to_str", "type": "Any"}, {"lineNumber": 339, "col_offset": 18, "nodeName": "Config", "type": "Any"}, {"lineNumber": 340, "col_offset": 11, "nodeName": "to_str", "type": "Any"}, {"lineNumber": 401, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 430, "col_offset": 11, "nodeName": "from_str", "type": "Any"}, {"lineNumber": 430, "col_offset": 29, "nodeName": "cfg", "type": "str"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "from_str", "type": "Any"}, {"lineNumber": 432, "col_offset": 29, "nodeName": "cfg", "type": "str"}, {"lineNumber": 439, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 439, "col_offset": 37, "nodeName": "from_str", "type": "Any"}, {"lineNumber": 439, "col_offset": 55, "nodeName": "cfg", "type": "str"}, {"lineNumber": 443, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 443, "col_offset": 37, "nodeName": "from_str", "type": "Any"}, {"lineNumber": 443, "col_offset": 55, "nodeName": "cfg", "type": "str"}, {"lineNumber": 452, "col_offset": 13, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 452, "col_offset": 37, "nodeName": "from_str", "type": "Any"}, {"lineNumber": 452, "col_offset": 55, "nodeName": "cfg", "type": "str"}, {"lineNumber": 456, "col_offset": 42, "nodeName": "Config", "type": "Any"}, {"lineNumber": 476, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 540, "col_offset": 43, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 562, "col_offset": 15, "nodeName": "signature", "type": "Callable[..., inspect.Signature]"}, {"lineNumber": 562, "col_offset": 33, "nodeName": "func", "type": "Any"}, {"lineNumber": 584, "col_offset": 60, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 588, "col_offset": 72, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 668, "col_offset": 8, "nodeName": "Config", "type": "Any"}, {"lineNumber": 681, "col_offset": 8, "nodeName": "Config", "type": "Any"}, {"lineNumber": 683, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 694, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 812, "col_offset": 11, "nodeName": "config", "type": "Any"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "my_registry", "type": "Type[my_registry]"}, {"lineNumber": 309, "col_offset": 11, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 311, "col_offset": 11, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 331, "col_offset": 11, "nodeName": "new_cfg", "type": "Any"}, {"lineNumber": 340, "col_offset": 11, "nodeName": "new_cfg", "type": "Any"}, {"lineNumber": 415, "col_offset": 35, "nodeName": "Union", "type": "Any"}, {"lineNumber": 441, "col_offset": 40, "nodeName": "Config", "type": "Any"}, {"lineNumber": 445, "col_offset": 40, "nodeName": "Config", "type": "Any"}, {"lineNumber": 562, "col_offset": 15, "nodeName": "inspect", "type": "module"}, {"lineNumber": 564, "col_offset": 11, "nodeName": "signature", "type": "Callable[..., inspect.Signature]"}, {"lineNumber": 564, "col_offset": 29, "nodeName": "func", "type": "Any"}, {"lineNumber": 588, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 626, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 626, "col_offset": 45, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 646, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 646, "col_offset": 39, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 684, "col_offset": 12, "nodeName": "Config", "type": "Any"}, {"lineNumber": 297, "col_offset": 11, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 430, "col_offset": 11, "nodeName": "Config", "type": "Any"}, {"lineNumber": 432, "col_offset": 11, "nodeName": "Config", "type": "Any"}, {"lineNumber": 439, "col_offset": 37, "nodeName": "Config", "type": "Any"}, {"lineNumber": 443, "col_offset": 37, "nodeName": "Config", "type": "Any"}, {"lineNumber": 452, "col_offset": 37, "nodeName": "Config", "type": "Any"}, {"lineNumber": 564, "col_offset": 11, "nodeName": "inspect", "type": "module"}, {"lineNumber": 588, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 415, "col_offset": 41, "nodeName": "StrictBool", "type": "Any"}, {"lineNumber": 415, "col_offset": 53, "nodeName": "PositiveInt", "type": "Any"}]