[{"lineNumber": 12, "col_offset": 0, "nodeName": "sequence_like", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 28, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "BaseModel", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "main", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "extra", "type": "str"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "schedules", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "layers", "type": "Any"}, {"lineNumber": 49, "col_offset": 56, "nodeName": "Callable", "type": "Any"}, {"lineNumber": 128, "col_offset": 37, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 138, "col_offset": 53, "nodeName": "Callable", "type": "Any"}, {"lineNumber": 161, "col_offset": 57, "nodeName": "ModelMetaclass", "type": "Any"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "pydantic", "type": "Any"}, {"lineNumber": 12, "col_offset": 40, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 12, "col_offset": 51, "nodeName": "v", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "data", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "error", "type": "Any"}, {"lineNumber": 19, "col_offset": 21, "nodeName": "errors", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "extra", "type": "str"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "create", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "create", "type": "Any"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "create", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "reg", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "reg", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "func", "type": "Any"}, {"lineNumber": 64, "col_offset": 48, "nodeName": "EmptySchema", "type": "Type[EmptySchema]"}, {"lineNumber": 69, "col_offset": 11, "nodeName": "validate", "type": "bool"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "filled", "type": "Dict[Any, Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "validation", "type": "Dict[Any, Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "id_keys", "type": "List[Any]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "id_keys", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "args", "type": "List[Tuple[int, Any]]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 48, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "id_keys", "type": "List[str]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "sig_args", "type": "Dict[str, Any]"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "param", "type": "inspect.Parameter"}, {"lineNumber": 172, "col_offset": 33, "nodeName": "_PromiseSchemaConfig", "type": "Type[_PromiseSchemaConfig]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "return_annotation", "type": "Any"}, {"lineNumber": 12, "col_offset": 55, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 12, "col_offset": 61, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 12, "col_offset": 68, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 12, "col_offset": 73, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "err_loc", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "self", "type": "ConfigValidationError"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "catalogue", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "catalogue", "type": "Any"}, {"lineNumber": 38, "col_offset": 13, "nodeName": "catalogue", "type": "Any"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 41, "col_offset": 54, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "cls", "type": "Type[registry]"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "registry_name", "type": "str"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "create", "type": "Any"}, {"lineNumber": 45, "col_offset": 40, "nodeName": "registry_name", "type": "str"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "cls", "type": "Type[registry]"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "registry_name", "type": "str"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "reg", "type": "Any"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 49, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "cls", "type": "Type[registry]"}, {"lineNumber": 53, "col_offset": 27, "nodeName": "registry_name", "type": "str"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "func_name", "type": "str"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "func", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "filled", "type": "Dict[str, Any]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "value", "type": "Any"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "items", "type": "Callable"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "is_promise", "type": "Callable[[Any], bool]"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "filled", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "getter", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "filled", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "value", "type": "Any"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "ValidationError", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "value", "type": "Any"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "items", "type": "Callable"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "filled", "type": "Dict[Any, Any]"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "validation", "type": "Dict[Any, Any]"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "Any", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "k", "type": "Any"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "k", "type": "str"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "err", "type": "str"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "value", "type": "Any"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "items", "type": "Callable"}, {"lineNumber": 158, "col_offset": 55, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "get_constructor", "type": "Callable[[Dict[str, Any]], Callable[..., Any]]"}, {"lineNumber": 162, "col_offset": 35, "nodeName": "obj", "type": "Dict[str, Any]"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "k", "type": "str"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "values", "type": "Callable"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "sig_args", "type": "Dict[str, Any]"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "create_model", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "get_constructor", "type": "Callable[[Dict[str, Any]], Callable[..., Any]]"}, {"lineNumber": 177, "col_offset": 35, "nodeName": "obj", "type": "Dict[str, Any]"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 22, "col_offset": 45, "nodeName": "table", "type": "Any"}, {"lineNumber": 22, "col_offset": 51, "nodeName": "data", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "join", "type": "Callable"}, {"lineNumber": 23, "col_offset": 44, "nodeName": "result", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "catalogue", "type": "Any"}, {"lineNumber": 45, "col_offset": 68, "nodeName": "entry_points", "type": "bool"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "cls", "type": "Type[registry]"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "registry_name", "type": "str"}, {"lineNumber": 52, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "reg", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "filled", "type": "Dict[Any, Any]"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "_", "type": "Dict[Any, Any]"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "fill_and_validate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 46, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 54, "nodeName": "base_schema", "type": "Any"}, {"lineNumber": 74, "col_offset": 26, "nodeName": "config", "type": "Dict[str, Any]"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "value", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "value", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "cls", "type": "Type[registry]"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "get_constructor", "type": "Callable[[Dict[str, Any]], Callable[..., Any]]"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "filled", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "parse_args", "type": "Callable[[Dict[str, Any]], Tuple[List[Any], Dict[str, Any]]]"}, {"lineNumber": 81, "col_offset": 42, "nodeName": "filled", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "getter", "type": "Callable[..., Any]"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "Any", "type": "Any"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "config", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "is_promise", "type": "Callable[[Any], bool]"}, {"lineNumber": 96, "col_offset": 30, "nodeName": "value", "type": "Any"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "promise_schema", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "getter", "type": "Callable[..., Any]"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "parse_obj", "type": "Any"}, {"lineNumber": 118, "col_offset": 38, "nodeName": "validation", "type": "Dict[Any, Any]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "validation", "type": "Dict[Any, Any]"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "dict", "type": "Any"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "validation", "type": "Dict[Any, Any]"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "key", "type": "Any"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "filled", "type": "Dict[Any, Any]"}, {"lineNumber": 124, "col_offset": 30, "nodeName": "value", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "obj", "type": "Any"}, {"lineNumber": 131, "col_offset": 25, "nodeName": "k", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "id_keys", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "k", "type": "str"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "id_keys", "type": "Any"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "err", "type": "str"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "id_keys", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "obj", "type": "Dict[str, Any]"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "get", "type": "Callable[[str, str], Callable[..., Any]]"}, {"lineNumber": 146, "col_offset": 36, "nodeName": "value", "type": "Any"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "obj", "type": "Dict[str, Any]"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "value", "type": "Any"}, {"lineNumber": 161, "col_offset": 38, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "cls", "type": "Type[registry]"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "k", "type": "str"}, {"lineNumber": 165, "col_offset": 36, "nodeName": "id_keys", "type": "List[str]"}, {"lineNumber": 165, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "parameters", "type": "Mapping[str, inspect.Parameter]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "default", "type": "Any"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "empty", "type": "Any"}, {"lineNumber": 173, "col_offset": 42, "nodeName": "sig_args", "type": "Dict[str, Any]"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "cls", "type": "Type[registry]"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "signature", "type": "Callable[..., inspect.Signature]"}, {"lineNumber": 178, "col_offset": 33, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "data", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "err_loc", "type": "str"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "ModelMetaclass", "type": "Any"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "cls", "type": "Type[registry]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "filled", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "make_from_config", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 76, "col_offset": 51, "nodeName": "value", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "filled", "type": "Union[Dict[str, Any], Dict[Any, Any]]"}, {"lineNumber": 80, "col_offset": 21, "nodeName": "cls", "type": "Type[registry]"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "cls", "type": "Type[registry]"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "cls", "type": "Type[registry]"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "make_promise_schema", "type": "Callable[[Dict[str, Any]], Any]"}, {"lineNumber": 97, "col_offset": 57, "nodeName": "value", "type": "Any"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "_", "type": "Any"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "fill_and_validate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 55, "nodeName": "value", "type": "Any"}, {"lineNumber": 98, "col_offset": 62, "nodeName": "promise_schema", "type": "Any"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "get_constructor", "type": "Callable[[Dict[str, Any]], Callable[..., Any]]"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 103, "col_offset": 22, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "parse_args", "type": "Callable[[Dict[str, Any]], Tuple[List[Any], Dict[str, Any]]]"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "validation", "type": "Dict[Any, Any]"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "getter", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "value", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "value", "type": "Any"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "schema", "type": "Any"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "ConfigValidationError", "type": "Type[ConfigValidationError]"}, {"lineNumber": 120, "col_offset": 40, "nodeName": "config", "type": "Any"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "result", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "filled", "type": "Dict[Any, Any]"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "keys", "type": "Any"}, {"lineNumber": 131, "col_offset": 44, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 139, "col_offset": 30, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 139, "col_offset": 44, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "key", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "cls", "type": "Type[registry]"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 149, "col_offset": 54, "nodeName": "List", "type": "Any"}, {"lineNumber": 149, "col_offset": 65, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 164, "col_offset": 44, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 165, "col_offset": 23, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "param", "type": "inspect.Parameter"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "param", "type": "inspect.Parameter"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "sig_args", "type": "Dict[str, Any]"}, {"lineNumber": 169, "col_offset": 40, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 169, "col_offset": 58, "nodeName": "default", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "sig_args", "type": "Dict[str, Any]"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "inspect", "type": "module"}, {"lineNumber": 20, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 20, "col_offset": 39, "nodeName": "p", "type": "Any"}, {"lineNumber": 20, "col_offset": 46, "nodeName": "p", "type": "Any"}, {"lineNumber": 21, "col_offset": 34, "nodeName": "get", "type": "Any"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "key", "type": "str"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "cls", "type": "Type[registry]"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "key", "type": "str"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "cls", "type": "Type[registry]"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "filled", "type": "Dict[Any, Any]"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "cls", "type": "Type[registry]"}, {"lineNumber": 102, "col_offset": 25, "nodeName": "cls", "type": "Type[registry]"}, {"lineNumber": 102, "col_offset": 45, "nodeName": "filled", "type": "Dict[Any, Any]"}, {"lineNumber": 103, "col_offset": 31, "nodeName": "cls", "type": "Type[registry]"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "filled", "type": "Dict[Any, Any]"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 104, "col_offset": 42, "nodeName": "args", "type": "List[Any]"}, {"lineNumber": 104, "col_offset": 50, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "__fields__", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "field", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "field_type", "type": "Any"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "type_", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "field_type", "type": "Type[EmptySchema]"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "EmptySchema", "type": "Type[EmptySchema]"}, {"lineNumber": 111, "col_offset": 47, "nodeName": "fill_and_validate", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 69, "nodeName": "value", "type": "Any"}, {"lineNumber": 111, "col_offset": 76, "nodeName": "field_type", "type": "Union[Type[EmptySchema], Any]"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "filled", "type": "Dict[Any, Any]"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "validation", "type": "Dict[Any, Any]"}, {"lineNumber": 120, "col_offset": 48, "nodeName": "errors", "type": "Any"}, {"lineNumber": 124, "col_offset": 23, "nodeName": "key", "type": "Any"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "obj", "type": "Any"}, {"lineNumber": 131, "col_offset": 44, "nodeName": "k", "type": "Any"}, {"lineNumber": 138, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 138, "col_offset": 44, "nodeName": "Any", "type": "Any"}, {"lineNumber": 139, "col_offset": 30, "nodeName": "obj", "type": "Dict[str, Any]"}, {"lineNumber": 139, "col_offset": 44, "nodeName": "k", "type": "str"}, {"lineNumber": 149, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 149, "col_offset": 39, "nodeName": "Any", "type": "Any"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "key", "type": "str"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "key", "type": "str"}, {"lineNumber": 154, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 154, "col_offset": 43, "nodeName": "isdigit", "type": "Callable[[], bool]"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "key", "type": "int"}, {"lineNumber": 158, "col_offset": 31, "nodeName": "value", "type": "Any"}, {"lineNumber": 158, "col_offset": 40, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 158, "col_offset": 47, "nodeName": "args", "type": "List[Tuple[int, Any]]"}, {"lineNumber": 149, "col_offset": 59, "nodeName": "Any", "type": "Any"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "Any", "type": "Any"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "obj", "type": "Dict[str, Any]"}, {"lineNumber": 164, "col_offset": 44, "nodeName": "k", "type": "str"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "signature", "type": "Callable[..., inspect.Signature]"}, {"lineNumber": 166, "col_offset": 39, "nodeName": "func", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "name", "type": "str"}, {"lineNumber": 169, "col_offset": 40, "nodeName": "param", "type": "inspect.Parameter"}, {"lineNumber": 169, "col_offset": 58, "nodeName": "param", "type": "inspect.Parameter"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "name", "type": "str"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "param", "type": "inspect.Parameter"}, {"lineNumber": 176, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 176, "col_offset": 44, "nodeName": "Any", "type": "Any"}, {"lineNumber": 20, "col_offset": 51, "nodeName": "get", "type": "Any"}, {"lineNumber": 21, "col_offset": 34, "nodeName": "error", "type": "Any"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "key", "type": "Any"}, {"lineNumber": 102, "col_offset": 52, "nodeName": "key", "type": "Any"}, {"lineNumber": 103, "col_offset": 53, "nodeName": "key", "type": "Any"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "schema", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "__fields__", "type": "Any"}, {"lineNumber": 108, "col_offset": 33, "nodeName": "field", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "filled", "type": "Dict[Any, Any]"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "validation", "type": "Dict[Any, Any]"}, {"lineNumber": 111, "col_offset": 47, "nodeName": "cls", "type": "Type[registry]"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "key", "type": "Any"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "key", "type": "Any"}, {"lineNumber": 120, "col_offset": 48, "nodeName": "e", "type": "Any"}, {"lineNumber": 154, "col_offset": 43, "nodeName": "key", "type": "str"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "args", "type": "List[Tuple[int, Any]]"}, {"lineNumber": 155, "col_offset": 43, "nodeName": "value", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "key", "type": "str"}, {"lineNumber": 149, "col_offset": 70, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 149, "col_offset": 75, "nodeName": "Any", "type": "Any"}, {"lineNumber": 166, "col_offset": 21, "nodeName": "inspect", "type": "module"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "param", "type": "inspect.Parameter"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "param", "type": "inspect.Parameter"}, {"lineNumber": 20, "col_offset": 51, "nodeName": "error", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "schema", "type": "Any"}, {"lineNumber": 107, "col_offset": 46, "nodeName": "key", "type": "Any"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "key", "type": "Any"}, {"lineNumber": 111, "col_offset": 40, "nodeName": "key", "type": "Any"}, {"lineNumber": 155, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 155, "col_offset": 37, "nodeName": "key", "type": "str"}]