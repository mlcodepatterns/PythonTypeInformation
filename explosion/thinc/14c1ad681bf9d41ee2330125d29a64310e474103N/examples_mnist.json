[{"lineNumber": 23, "col_offset": 0, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 10, "col_offset": 14, "nodeName": "Network", "type": "Type[thinc.base.Network]"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "Hidden", "type": "Type[thinc.vec2vec.ReLu]"}, {"lineNumber": 11, "col_offset": 13, "nodeName": "ReLu", "type": "Type[thinc.vec2vec.ReLu]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "Output", "type": "Type[thinc.vec2vec.Softmax]"}, {"lineNumber": 12, "col_offset": 13, "nodeName": "Softmax", "type": "Type[thinc.vec2vec.Softmax]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "width", "type": "int"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "depth", "type": "int"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "model", "type": "ReLuMLP"}, {"lineNumber": 39, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "ReLuMLP", "type": "Type[ReLuMLP]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "check_data", "type": "Any"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "test_data", "type": "Iterator[Tuple[Any, Any]]"}, {"lineNumber": 25, "col_offset": 40, "nodeName": "keras_mnist", "type": "Callable[[], Tuple[Any, Any, Iterator[Tuple[Any, Any]]]]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "depth", "type": "int"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "nr_in", "type": "int"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "width", "type": "int"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 25, "col_offset": 40, "nodeName": "datasets", "type": "module"}, {"lineNumber": 27, "col_offset": 9, "nodeName": "begin_training", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 27, "col_offset": 46, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 27, "col_offset": 55, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "examples", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "truth", "type": "Any"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "iterate", "type": "Any"}, {"lineNumber": 28, "col_offset": 47, "nodeName": "model", "type": "ReLuMLP"}, {"lineNumber": 28, "col_offset": 54, "nodeName": "train_data", "type": "Any"}, {"lineNumber": 28, "col_offset": 66, "nodeName": "check_data", "type": "Any"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "score_model", "type": "Callable[[Any, Any], float]"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "model", "type": "ReLuMLP"}, {"lineNumber": 36, "col_offset": 44, "nodeName": "test_data", "type": "Iterator[Tuple[Any, Any]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "call", "type": "Any"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "main", "type": "Callable[..., Any]"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "self", "type": "ReLuMLP"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "self", "type": "ReLuMLP"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "layers", "type": "List[Any]"}, {"lineNumber": 20, "col_offset": 27, "nodeName": "Output", "type": "Type[thinc.vec2vec.Softmax]"}, {"lineNumber": 20, "col_offset": 39, "nodeName": "nr_out", "type": "Any"}, {"lineNumber": 20, "col_offset": 47, "nodeName": "nr_in", "type": "Union[int, Any]"}, {"lineNumber": 27, "col_offset": 9, "nodeName": "model", "type": "ReLuMLP"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "guess", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "update", "type": "Any"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "begin_update", "type": "Callable"}, {"lineNumber": 29, "col_offset": 47, "nodeName": "examples", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "loss", "type": "Any"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "get_gradient", "type": "Any"}, {"lineNumber": 31, "col_offset": 48, "nodeName": "guess", "type": "Any"}, {"lineNumber": 31, "col_offset": 55, "nodeName": "truth", "type": "Any"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "set_loss", "type": "Any"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "loss", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "finish_update", "type": "Any"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 34, "col_offset": 36, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "plac", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "layers", "type": "List[Any]"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "Hidden", "type": "Type[thinc.vec2vec.ReLu]"}, {"lineNumber": 18, "col_offset": 43, "nodeName": "width", "type": "int"}, {"lineNumber": 18, "col_offset": 55, "nodeName": "nr_in", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "ReLuMLP"}, {"lineNumber": 20, "col_offset": 27, "nodeName": "self", "type": "ReLuMLP"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "model", "type": "ReLuMLP"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "model", "type": "ReLuMLP"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 34, "col_offset": 50, "nodeName": "L2", "type": "Any"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "self", "type": "ReLuMLP"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "self", "type": "ReLuMLP"}, {"lineNumber": 18, "col_offset": 43, "nodeName": "self", "type": "ReLuMLP"}, {"lineNumber": 34, "col_offset": 50, "nodeName": "trainer", "type": "Any"}]