[{"lineNumber": 172, "col_offset": 0, "nodeName": "_take_which", "type": "Callable[..., Any]"}, {"lineNumber": 5, "col_offset": 13, "nodeName": "Model", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "Affine", "type": "Type[Affine]"}, {"lineNumber": 95, "col_offset": 14, "nodeName": "Affine", "type": "Type[Affine]"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "Affine", "type": "Type[Affine]"}, {"lineNumber": 6, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 7, "col_offset": 4, "nodeName": "nr_out", "type": "None"}, {"lineNumber": 8, "col_offset": 4, "nodeName": "nr_in", "type": "None"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "data", "type": "None"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "nr_piece", "type": "int"}, {"lineNumber": 173, "col_offset": 4, "nodeName": "output", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 176, "col_offset": 11, "nodeName": "output", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "W", "type": "None"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "d_W", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "d_b", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "output_BO", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "finish_update", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "output_BO", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "output_bo", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "W", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "d_W", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "d_b", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "acts_bop", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "acts_bop", "type": "Any"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "which_bo", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "W_OCI", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "W", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "b_OC", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "output_BOC", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "output_BOC", "type": "Any"}, {"lineNumber": 151, "col_offset": 22, "nodeName": "b_OC", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "which_BO", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "best_BO", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "finish_update", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "finish_update", "type": "Callable[..., Any]"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "allocate", "type": "Any"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 13, "col_offset": 15, "nodeName": "W", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "nr_in", "type": "Any"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "nr_out", "type": "Any"}, {"lineNumber": 25, "col_offset": 44, "nodeName": "nr_out", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "Affine"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "nr_out", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "nr_in", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "example", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "nr_in", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "Affine"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "allocate_shape", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "Affine"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "allocate_shape", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "d_data", "type": "Any"}, {"lineNumber": 58, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "Affine"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "allocate_shape", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "Affine"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "allocate_shape", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "affine", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "W", "type": "Any"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "b", "type": "Any"}, {"lineNumber": 63, "col_offset": 47, "nodeName": "input_BI", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "check_shape", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "input_BI", "type": "Any"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "predict_batch", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 39, "nodeName": "input_BI", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "output_BO", "type": "Any"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "bp_dropout", "type": "Any"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 68, "col_offset": 49, "nodeName": "output_BO", "type": "Any"}, {"lineNumber": 68, "col_offset": 60, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "output_BO", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "d_b", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "d_W", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "predict_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 41, "nodeName": "self", "type": "ReLu"}, {"lineNumber": 85, "col_offset": 47, "nodeName": "input_BI", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "maximum", "type": "Any"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "output_BO", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "output_BO", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "finish_affine", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "begin_update", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 55, "nodeName": "self", "type": "ReLu"}, {"lineNumber": 89, "col_offset": 61, "nodeName": "input_BI", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "output_BO", "type": "Any"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "finish_update", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "set_weights", "type": "Callable[..., Any]"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "self", "type": "Softmax"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "predict_batch", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "self", "type": "Softmax"}, {"lineNumber": 102, "col_offset": 47, "nodeName": "input_bi", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "output_bo", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "begin_update", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "self", "type": "Softmax"}, {"lineNumber": 106, "col_offset": 41, "nodeName": "input_BI", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "nr_piece", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "example", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "nr_in", "type": "Any"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "allocate_shape", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "allocate_shape", "type": "Any"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "data", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "d_data", "type": "Any"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "allocate_shape", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "allocate_shape", "type": "Any"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "tensordot", "type": "Any"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "input_bi", "type": "Any"}, {"lineNumber": 142, "col_offset": 51, "nodeName": "W", "type": "Any"}, {"lineNumber": 143, "col_offset": 20, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "acts_bop", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "_take_which", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "ops", "type": "Any"}, {"lineNumber": 145, "col_offset": 37, "nodeName": "acts_bop", "type": "Any"}, {"lineNumber": 145, "col_offset": 47, "nodeName": "which_bo", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "tensordot", "type": "Any"}, {"lineNumber": 150, "col_offset": 43, "nodeName": "input_BI", "type": "Any"}, {"lineNumber": 150, "col_offset": 53, "nodeName": "W_OCI", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 152, "col_offset": 35, "nodeName": "output_BOC", "type": "Any"}, {"lineNumber": 153, "col_offset": 18, "nodeName": "_take_which", "type": "Callable[..., Any]"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "ops", "type": "Any"}, {"lineNumber": 153, "col_offset": 40, "nodeName": "output_BOC", "type": "Any"}, {"lineNumber": 153, "col_offset": 52, "nodeName": "which_BO", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "best_BO", "type": "Any"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "bp_dropout", "type": "Any"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 154, "col_offset": 47, "nodeName": "best_BO", "type": "Any"}, {"lineNumber": 154, "col_offset": 56, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "_get_finish_update", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 155, "col_offset": 48, "nodeName": "input_BI", "type": "Any"}, {"lineNumber": 155, "col_offset": 58, "nodeName": "which_BO", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "best_BO", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "d_b", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "d_W", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "d_acts_BI", "type": "Any"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "d_acts_BI", "type": "Any"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "ops", "type": "Any"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "which", "type": "Any"}, {"lineNumber": 174, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 13, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "nr_out", "type": "Any"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "nr_in", "type": "Any"}, {"lineNumber": 25, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "self", "type": "Affine"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "shape", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "self", "type": "Affine"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "nr_out", "type": "Any"}, {"lineNumber": 32, "col_offset": 39, "nodeName": "nr_in", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "set_weights", "type": "Callable[..., Any]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "set_gradient", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "W", "type": "Any"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "get", "type": "Callable"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "get", "type": "Callable"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "self", "type": "Affine"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "self", "type": "Affine"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 48, "col_offset": 38, "nodeName": "nr_out", "type": "Any"}, {"lineNumber": 48, "col_offset": 51, "nodeName": "nr_in", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "nr_out", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "xavier_uniform_init", "type": "Any"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "W", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "Affine"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "allocate_pool", "type": "Any"}, {"lineNumber": 55, "col_offset": 49, "nodeName": "nr_weight", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "Affine"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "d_data", "type": "Any"}, {"lineNumber": 59, "col_offset": 47, "nodeName": "nr_out", "type": "Any"}, {"lineNumber": 59, "col_offset": 60, "nodeName": "nr_in", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "d_data", "type": "Any"}, {"lineNumber": 60, "col_offset": 47, "nodeName": "nr_out", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "ops", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "self", "type": "Affine"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "self", "type": "Affine"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "Affine"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "self", "type": "Affine"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "ops", "type": "Any"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "bp_dropout", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "self", "type": "Affine"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "Affine"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "batch_outer", "type": "Any"}, {"lineNumber": 74, "col_offset": 45, "nodeName": "d_acts_BO", "type": "Any"}, {"lineNumber": 74, "col_offset": 56, "nodeName": "acts_BI", "type": "Any"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "batch_dot", "type": "Any"}, {"lineNumber": 78, "col_offset": 38, "nodeName": "d_acts_BO", "type": "Any"}, {"lineNumber": 78, "col_offset": 49, "nodeName": "T", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "Affine", "type": "Type[Affine]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "xp", "type": "Any"}, {"lineNumber": 86, "col_offset": 54, "nodeName": "output_BO", "type": "Any"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "Affine", "type": "Type[Affine]"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "finish_affine", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "Affine", "type": "Type[Affine]"}, {"lineNumber": 99, "col_offset": 41, "nodeName": "example", "type": "Any"}, {"lineNumber": 99, "col_offset": 55, "nodeName": "data", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "Affine", "type": "Type[Affine]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "ops", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "Affine", "type": "Type[Affine]"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 61, "nodeName": "nr_out", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "nr_out", "type": "Any"}, {"lineNumber": 125, "col_offset": 51, "nodeName": "nr_piece", "type": "int"}, {"lineNumber": 125, "col_offset": 66, "nodeName": "nr_in", "type": "Any"}, {"lineNumber": 126, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "nr_out", "type": "Any"}, {"lineNumber": 126, "col_offset": 51, "nodeName": "nr_piece", "type": "int"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "nr_piece", "type": "int"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "allocate_pool", "type": "Any"}, {"lineNumber": 133, "col_offset": 49, "nodeName": "nr_weight", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "d_data", "type": "Any"}, {"lineNumber": 137, "col_offset": 47, "nodeName": "nr_out", "type": "Any"}, {"lineNumber": 137, "col_offset": 60, "nodeName": "nr_piece", "type": "int"}, {"lineNumber": 137, "col_offset": 75, "nodeName": "nr_in", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "d_data", "type": "Any"}, {"lineNumber": 138, "col_offset": 47, "nodeName": "nr_out", "type": "Any"}, {"lineNumber": 138, "col_offset": 60, "nodeName": "nr_piece", "type": "int"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "xp", "type": "Any"}, {"lineNumber": 142, "col_offset": 51, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "ops", "type": "Any"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "xp", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "ops", "type": "Any"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "ops", "type": "Any"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "bp_dropout", "type": "Any"}, {"lineNumber": 156, "col_offset": 35, "nodeName": "finish_update", "type": "Callable[..., Any]"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "allocate", "type": "Any"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "nr_piece", "type": "int"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "sum", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "tensordot", "type": "Any"}, {"lineNumber": 165, "col_offset": 46, "nodeName": "d_acts_BOP", "type": "Any"}, {"lineNumber": 165, "col_offset": 58, "nodeName": "acts_BI", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "tensordot", "type": "Any"}, {"lineNumber": 167, "col_offset": 46, "nodeName": "d_acts_BOP", "type": "Any"}, {"lineNumber": 167, "col_offset": 58, "nodeName": "W", "type": "Any"}, {"lineNumber": 174, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "axis", "type": "int"}, {"lineNumber": 175, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "which", "type": "Any"}, {"lineNumber": 175, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "self", "type": "Affine"}, {"lineNumber": 32, "col_offset": 39, "nodeName": "self", "type": "Affine"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "self", "type": "Affine"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "self", "type": "Affine"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "self", "type": "Affine"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "self", "type": "Affine"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "example", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "self", "type": "Affine"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "self", "type": "Affine"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "allocate_pool", "type": "Any"}, {"lineNumber": 45, "col_offset": 51, "nodeName": "nr_weight", "type": "Any"}, {"lineNumber": 48, "col_offset": 38, "nodeName": "self", "type": "Affine"}, {"lineNumber": 48, "col_offset": 51, "nodeName": "self", "type": "Affine"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "self", "type": "Affine"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "ops", "type": "Any"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "self", "type": "Affine"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "ops", "type": "Any"}, {"lineNumber": 55, "col_offset": 49, "nodeName": "self", "type": "Affine"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "self", "type": "Affine"}, {"lineNumber": 59, "col_offset": 47, "nodeName": "self", "type": "Affine"}, {"lineNumber": 59, "col_offset": 60, "nodeName": "self", "type": "Affine"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "self", "type": "Affine"}, {"lineNumber": 60, "col_offset": 47, "nodeName": "self", "type": "Affine"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "self", "type": "Affine"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "self", "type": "Affine"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "_get_finish_update", "type": "Callable[[Any], Any]"}, {"lineNumber": 69, "col_offset": 61, "nodeName": "input_BI", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "d_acts_BO", "type": "Any"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "ops", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "W", "type": "Any"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "d_W", "type": "Any"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "d_b", "type": "Any"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "ops", "type": "Any"}, {"lineNumber": 78, "col_offset": 49, "nodeName": "W", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "ops", "type": "Any"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "gradient", "type": "Any"}, {"lineNumber": 91, "col_offset": 62, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 91, "col_offset": 70, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "self", "type": "Softmax"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "nr_out", "type": "Any"}, {"lineNumber": 115, "col_offset": 47, "nodeName": "nr_in", "type": "Any"}, {"lineNumber": 115, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "example", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "allocate_pool", "type": "Any"}, {"lineNumber": 122, "col_offset": 51, "nodeName": "nr_weight", "type": "Any"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 125, "col_offset": 51, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 125, "col_offset": 66, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 126, "col_offset": 38, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 126, "col_offset": 51, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "xavier_uniform_init", "type": "Any"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "ops", "type": "Any"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 137, "col_offset": 47, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 137, "col_offset": 60, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 137, "col_offset": 75, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 138, "col_offset": 47, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 138, "col_offset": 60, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "ops", "type": "Any"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "ops", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "ops", "type": "Any"}, {"lineNumber": 160, "col_offset": 64, "nodeName": "nr_out", "type": "Any"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "nr_piece", "type": "int"}, {"lineNumber": 162, "col_offset": 27, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "d_acts_BOP", "type": "Any"}, {"lineNumber": 163, "col_offset": 39, "nodeName": "d_acts_BO", "type": "Any"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "d_acts_BOP", "type": "Any"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "xp", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "xp", "type": "Any"}, {"lineNumber": 167, "col_offset": 58, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "get", "type": "Callable"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "get", "type": "Callable"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "ops", "type": "Any"}, {"lineNumber": 45, "col_offset": 51, "nodeName": "self", "type": "Affine"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "Affine"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "self", "type": "Affine"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "name", "type": "str"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "self", "type": "Affine"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "self", "type": "Affine"}, {"lineNumber": 75, "col_offset": 41, "nodeName": "self", "type": "Affine"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "self", "type": "Affine"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "self", "type": "Affine"}, {"lineNumber": 76, "col_offset": 68, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "self", "type": "Affine"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "self", "type": "Affine"}, {"lineNumber": 77, "col_offset": 68, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "self", "type": "Affine"}, {"lineNumber": 78, "col_offset": 49, "nodeName": "self", "type": "Affine"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "self", "type": "ReLu"}, {"lineNumber": 91, "col_offset": 45, "nodeName": "output_BO", "type": "Any"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "ops", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "ops", "type": "Any"}, {"lineNumber": 129, "col_offset": 45, "nodeName": "W", "type": "Any"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "name", "type": "str"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 150, "col_offset": 21, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 160, "col_offset": 44, "nodeName": "shape", "type": "Any"}, {"lineNumber": 160, "col_offset": 64, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 163, "col_offset": 52, "nodeName": "which_BO", "type": "Any"}, {"lineNumber": 163, "col_offset": 64, "nodeName": "i", "type": "int"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "ops", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "ops", "type": "Any"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "self", "type": "Affine"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "name", "type": "str"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "self", "type": "Affine"}, {"lineNumber": 76, "col_offset": 54, "nodeName": "name", "type": "str"}, {"lineNumber": 77, "col_offset": 54, "nodeName": "name", "type": "str"}, {"lineNumber": 122, "col_offset": 28, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 123, "col_offset": 38, "nodeName": "name", "type": "str"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 129, "col_offset": 45, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 134, "col_offset": 34, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 160, "col_offset": 44, "nodeName": "d_acts_BO", "type": "Any"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 165, "col_offset": 24, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "self", "type": "Affine"}, {"lineNumber": 76, "col_offset": 54, "nodeName": "self", "type": "Affine"}, {"lineNumber": 77, "col_offset": 54, "nodeName": "self", "type": "Affine"}, {"lineNumber": 123, "col_offset": 38, "nodeName": "self", "type": "Maxout"}, {"lineNumber": 129, "col_offset": 55, "nodeName": "i", "type": "int"}]