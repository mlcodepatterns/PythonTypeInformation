[{"lineNumber": 7, "col_offset": 0, "nodeName": "ops", "type": "Callable[[], Any]"}, {"lineNumber": 12, "col_offset": 0, "nodeName": "test_init", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 0, "nodeName": "test_reserve", "type": "Callable[[], Any]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "test_get_dropout_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "test_get_dropout_not_empty", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "ops", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "data", "type": "Any"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "drop", "type": "float"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "drop", "type": "float"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "mask", "type": "Any"}, {"lineNumber": 9, "col_offset": 11, "nodeName": "NumpyOps", "type": "Any"}, {"lineNumber": 13, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 13, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 13, "col_offset": 32, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 18, "col_offset": 10, "nodeName": "NumpyOps", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "reserve", "type": "Any"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "allocate", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "get_dropout", "type": "Any"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 28, "col_offset": 34, "nodeName": "drop", "type": "float"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "drop", "type": "float"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "get_dropout", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 38, "col_offset": 34, "nodeName": "drop", "type": "float"}, {"lineNumber": 39, "col_offset": 7, "nodeName": "drop", "type": "float"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "shape", "type": "Tuple[int, int]"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 13, "col_offset": 22, "nodeName": "ops", "type": "Any"}, {"lineNumber": 13, "col_offset": 32, "nodeName": "numpy", "type": "module"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "ops", "type": "Any"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "ops", "type": "Any"}, {"lineNumber": 21, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 21, "col_offset": 23, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "reserve", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "ops", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "ops", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "mask", "type": "Any"}, {"lineNumber": 21, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "ops", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "value", "type": "Any"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "value", "type": "Any"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "flatten", "type": "Any"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "mask", "type": "Any"}]