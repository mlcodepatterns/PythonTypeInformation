[{"lineNumber": 23, "col_offset": 0, "nodeName": "read_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "partition", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "minibatch", "type": "Callable[..., Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 186, "col_offset": 0, "nodeName": "_softmax", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "NeuralNet", "type": "Any"}, {"lineNumber": 136, "col_offset": 18, "nodeName": "NeuralNet", "type": "Any"}, {"lineNumber": 194, "col_offset": 14, "nodeName": "AveragedPerceptron", "type": "Any"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "examples", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "n_docs", "type": "int"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "split", "type": "int"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "max_", "type": "Union[int, Any]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "nums", "type": "List[float]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "Z", "type": "float"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 248, "col_offset": 4, "nodeName": "get_bow", "type": "Tuple[Extractor]"}, {"lineNumber": 256, "col_offset": 4, "nodeName": "prev_best", "type": "int"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "best_weights", "type": "None"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "prev_score", "type": "float"}, {"lineNumber": 275, "col_offset": 4, "nodeName": "eval_data", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 276, "col_offset": 4, "nodeName": "n_correct", "type": "Any"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "eval_data", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 281, "col_offset": 4, "nodeName": "n_correct", "type": "Any"}, {"lineNumber": 285, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "subdir", "type": "str"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "label", "type": "int"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "filename", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "examples", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "examples", "type": "List[Any]"}, {"lineNumber": 36, "col_offset": 13, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "examples", "type": "List[Any]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 42, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 42, "col_offset": 33, "nodeName": "bs", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "split", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "line", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "bigrams", "type": "Any"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "bigrams", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "vocab", "type": "Dict[Any, int]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "doc", "type": "List[Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "dropout", "type": "Union[Any, float]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "bow", "type": "collections.defaultdict[int, Any]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "all_words", "type": "collections.defaultdict[int, Any]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "prev", "type": "None"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "inc", "type": "Union[float, Any]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "word", "type": "Any"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "doc", "type": "List[Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "total", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "bow", "type": "collections.defaultdict[int, Any]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "unigram_width", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "width", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "bigram_width", "type": "int"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "nn_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "get_bow", "type": "Any"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "get_bow", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "bow", "type": "Dict[Tuple[int, Any], Any]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "eg", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "costs", "type": "List[bool]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "features", "type": "Dict[Tuple[int, Any], Any]"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "bow", "type": "Dict[Tuple[int, Any], Any]"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "eg", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "bow", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "output", "type": "Dict[Tuple[int, Any], Any]"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "output", "type": "Dict[Tuple[int, Any], Any]"}, {"lineNumber": 130, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 133, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "vocab", "type": "Dict[Any, int]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "window_size", "type": "Any"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "window_size", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "unigram_width", "type": "int"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "nn_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "doc", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "doc", "type": "List[Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "doc", "type": "List[int]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "egs", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "egs", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "total", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "scores", "type": "List[Union[int, Any]]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "eg", "type": "Any"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "egs", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "scores", "type": "List[float]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "costs", "type": "Any"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "costs", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "total", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "total", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "label", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "best", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "delta_loss", "type": "List[Any]"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "eg", "type": "Any"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "egs", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 187, "col_offset": 11, "nodeName": "max", "type": "Callable"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "nums", "type": "List[Union[int, Any]]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "nums", "type": "List[float]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "nr_class", "type": "Any"}, {"lineNumber": 197, "col_offset": 24, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "get_bow", "type": "Any"}, {"lineNumber": 198, "col_offset": 23, "nodeName": "get_bow", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "bow", "type": "Dict[Tuple[int, Any], Any]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "eg", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "costs", "type": "List[bool]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "features", "type": "Dict[Tuple[int, Any], Any]"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "bow", "type": "Dict[Tuple[int, Any], Any]"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "eg", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "bow", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "output", "type": "Dict[Tuple[int, Any], Any]"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "output", "type": "Dict[Tuple[int, Any], Any]"}, {"lineNumber": 223, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 226, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "NeuralNGram", "type": "Type[NeuralNGram]"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "n_classes", "type": "int"}, {"lineNumber": 249, "col_offset": 35, "nodeName": "width", "type": "Any"}, {"lineNumber": 249, "col_offset": 42, "nodeName": "depth", "type": "Any"}, {"lineNumber": 253, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 254, "col_offset": 4, "nodeName": "train_data", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "dev_data", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 254, "col_offset": 27, "nodeName": "partition", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 255, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "seed", "type": "Any"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "epoch", "type": "int"}, {"lineNumber": 272, "col_offset": 11, "nodeName": "KeyboardInterrupt", "type": "Type[KeyboardInterrupt]"}, {"lineNumber": 274, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 276, "col_offset": 16, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 278, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "end_training", "type": "Any"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 282, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "call", "type": "Any"}, {"lineNumber": 286, "col_offset": 14, "nodeName": "main", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "iterdir", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "text", "type": "Any"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "n_docs", "type": "int"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "split_size", "type": "Any"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "examples", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "examples", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "text", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "Extractor"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "Extractor"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "Extractor"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 69, "col_offset": 14, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "id_", "type": "int"}, {"lineNumber": 84, "col_offset": 30, "nodeName": "inc", "type": "Union[Any, float]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "bow", "type": "collections.defaultdict[int, Any]"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "all_words", "type": "collections.defaultdict[int, Any]"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "word", "type": "int"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "freq", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "items", "type": "Callable"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "self", "type": "DenseAveragedNetwork"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "nn_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "DenseAveragedNetwork"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "get_feats", "type": "Callable[..., Any]"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "text", "type": "Any"}, {"lineNumber": 117, "col_offset": 13, "nodeName": "Example", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "eg", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "eg", "type": "Any"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "get_bow", "type": "Any"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "text", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "word_id", "type": "Any"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "freq", "type": "Any"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "items", "type": "Any"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "freq", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "self", "type": "NeuralNGram"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "NeuralNGram"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 142, "col_offset": 19, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 143, "col_offset": 14, "nodeName": "unigram_width", "type": "int"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "nn_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "self", "type": "NeuralNGram"}, {"lineNumber": 144, "col_offset": 33, "nodeName": "nn_shape", "type": "Tuple[Any, ...]"}, {"lineNumber": 149, "col_offset": 14, "nodeName": "preprocess", "type": "Callable[[Any], Any]"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "ngram", "type": "List[int]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "feats", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "eg", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "costs", "type": "List[bool]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "features", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "feats", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "Example", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "eg", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "eg_scores", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "scores", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "total", "type": "Any"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "_softmax", "type": "Callable[[Any], Any]"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "scores", "type": "List[Union[int, Any]]"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "total", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "self", "type": "NeuralNGram"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "egs", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "total", "type": "Any"}, {"lineNumber": 178, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "nr_class", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "costs", "type": "List[Any]"}, {"lineNumber": 181, "col_offset": 23, "nodeName": "delta_loss", "type": "List[Any]"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "total", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 188, "col_offset": 28, "nodeName": "n", "type": "Union[int, Any]"}, {"lineNumber": 188, "col_offset": 33, "nodeName": "nums", "type": "List[Union[int, Any]]"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "n", "type": "float"}, {"lineNumber": 190, "col_offset": 14, "nodeName": "Z", "type": "float"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "n", "type": "float"}, {"lineNumber": 190, "col_offset": 25, "nodeName": "nums", "type": "List[float]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 196, "col_offset": 36, "nodeName": "self", "type": "BOWTron"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "BOWTron"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "self", "type": "BOWTron"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "size", "type": "Any"}, {"lineNumber": 209, "col_offset": 14, "nodeName": "get_feats", "type": "Callable[..., Any]"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "text", "type": "Any"}, {"lineNumber": 210, "col_offset": 13, "nodeName": "Example", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "eg", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "eg", "type": "Any"}, {"lineNumber": 216, "col_offset": 14, "nodeName": "get_bow", "type": "Any"}, {"lineNumber": 216, "col_offset": 27, "nodeName": "text", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "word_id", "type": "Any"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "freq", "type": "Any"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "items", "type": "Any"}, {"lineNumber": 219, "col_offset": 35, "nodeName": "freq", "type": "Any"}, {"lineNumber": 248, "col_offset": 14, "nodeName": "Extractor", "type": "Type[Extractor]"}, {"lineNumber": 250, "col_offset": 36, "nodeName": "solver", "type": "Any"}, {"lineNumber": 250, "col_offset": 48, "nodeName": "rho", "type": "Any"}, {"lineNumber": 250, "col_offset": 57, "nodeName": "eta", "type": "Any"}, {"lineNumber": 251, "col_offset": 73, "nodeName": "noise", "type": "Any"}, {"lineNumber": 254, "col_offset": 37, "nodeName": "read_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "random", "type": "Any"}, {"lineNumber": 262, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 262, "col_offset": 27, "nodeName": "n_iter", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "train_loss", "type": "float"}, {"lineNumber": 268, "col_offset": 12, "nodeName": "nr_correct", "type": "Any"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "eta", "type": "Any"}, {"lineNumber": 275, "col_offset": 21, "nodeName": "read_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 277, "col_offset": 10, "nodeName": "n_correct", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "model", "type": "NeuralNGram"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "read_data", "type": "Callable[[Any], Any]"}, {"lineNumber": 282, "col_offset": 10, "nodeName": "n_correct", "type": "Any"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "plac", "type": "Any"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "read", "type": "Any"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "split", "type": "int"}, {"lineNumber": 38, "col_offset": 38, "nodeName": "split", "type": "int"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "data", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "line", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "split", "type": "Any"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "self", "type": "Extractor"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "word", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "inc", "type": "Union[Any, float]"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "prev", "type": "Any"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "word", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "prev", "type": "None"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "all_words", "type": "collections.defaultdict[int, Any]"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "values", "type": "Callable"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "bow", "type": "collections.defaultdict[int, Any]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "bow", "type": "collections.defaultdict[int, Any]"}, {"lineNumber": 90, "col_offset": 38, "nodeName": "total", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "NeuralNet", "type": "Any"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "rho", "type": "Any"}, {"lineNumber": 111, "col_offset": 40, "nodeName": "eta", "type": "Any"}, {"lineNumber": 111, "col_offset": 57, "nodeName": "update_step", "type": "Any"}, {"lineNumber": 112, "col_offset": 38, "nodeName": "batch_norm", "type": "Any"}, {"lineNumber": 112, "col_offset": 56, "nodeName": "noise", "type": "Any"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "self", "type": "DenseAveragedNetwork"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "nr_class", "type": "Any"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "label", "type": "Any"}, {"lineNumber": 118, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "self", "type": "DenseAveragedNetwork"}, {"lineNumber": 123, "col_offset": 41, "nodeName": "dropout", "type": "bool"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "bow", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "output", "type": "Dict[Tuple[int, Any], Any]"}, {"lineNumber": 141, "col_offset": 28, "nodeName": "width", "type": "Any"}, {"lineNumber": 141, "col_offset": 36, "nodeName": "window_size", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "NeuralNet", "type": "Any"}, {"lineNumber": 145, "col_offset": 31, "nodeName": "rho", "type": "Any"}, {"lineNumber": 145, "col_offset": 40, "nodeName": "eta", "type": "Any"}, {"lineNumber": 145, "col_offset": 57, "nodeName": "update_step", "type": "Any"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "norm_type", "type": "Any"}, {"lineNumber": 146, "col_offset": 54, "nodeName": "noise", "type": "Any"}, {"lineNumber": 150, "col_offset": 39, "nodeName": "window_size", "type": "Any"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "setdefault", "type": "Callable"}, {"lineNumber": 151, "col_offset": 37, "nodeName": "word", "type": "Any"}, {"lineNumber": 151, "col_offset": 68, "nodeName": "word", "type": "Any"}, {"lineNumber": 151, "col_offset": 76, "nodeName": "doc", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "doc", "type": "List[int]"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "doc", "type": "List[int]"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "Example", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "eg", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "eg", "type": "Any"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "eg", "type": "Any"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "nr_class", "type": "Any"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "_", "type": "int"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "__call__", "type": "Any"}, {"lineNumber": 166, "col_offset": 36, "nodeName": "self", "type": "NeuralNGram"}, {"lineNumber": 166, "col_offset": 42, "nodeName": "eg", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "eg", "type": "Any"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "nr_class", "type": "Any"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "egs", "type": "Any"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "_", "type": "int"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "self", "type": "NeuralNGram"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "delta_loss", "type": "List[Any]"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "eg", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 182, "col_offset": 29, "nodeName": "self", "type": "NeuralNGram"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "eg", "type": "Any"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "n", "type": "Union[Any, int]"}, {"lineNumber": 188, "col_offset": 18, "nodeName": "max_", "type": "Union[int, Any]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "AveragedPerceptron", "type": "Any"}, {"lineNumber": 196, "col_offset": 42, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "mem", "type": "Any"}, {"lineNumber": 209, "col_offset": 14, "nodeName": "self", "type": "BOWTron"}, {"lineNumber": 210, "col_offset": 30, "nodeName": "nr_class", "type": "Any"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "label", "type": "Any"}, {"lineNumber": 211, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 216, "col_offset": 14, "nodeName": "self", "type": "BOWTron"}, {"lineNumber": 216, "col_offset": 41, "nodeName": "dropout", "type": "bool"}, {"lineNumber": 218, "col_offset": 29, "nodeName": "bow", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "output", "type": "Dict[Tuple[int, Any], Any]"}, {"lineNumber": 248, "col_offset": 32, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 251, "col_offset": 45, "nodeName": "batch_norm", "type": "Any"}, {"lineNumber": 254, "col_offset": 47, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 258, "col_offset": 4, "nodeName": "numpy", "type": "module"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "shuffle", "type": "Any"}, {"lineNumber": 263, "col_offset": 33, "nodeName": "train_data", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "text", "type": "Any"}, {"lineNumber": 265, "col_offset": 22, "nodeName": "label", "type": "int"}, {"lineNumber": 265, "col_offset": 31, "nodeName": "train_data", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "eg", "type": "List[Any]"}, {"lineNumber": 267, "col_offset": 16, "nodeName": "train_loss", "type": "Any"}, {"lineNumber": 268, "col_offset": 25, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 269, "col_offset": 18, "nodeName": "epoch", "type": "int"}, {"lineNumber": 269, "col_offset": 25, "nodeName": "train_loss", "type": "Union[float, Any]"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "model", "type": "NeuralNGram"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 275, "col_offset": 31, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 276, "col_offset": 20, "nodeName": "guess", "type": "Any"}, {"lineNumber": 276, "col_offset": 48, "nodeName": "y", "type": "int"}, {"lineNumber": 276, "col_offset": 62, "nodeName": "eval_data", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 277, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 277, "col_offset": 26, "nodeName": "eval_data", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 280, "col_offset": 31, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "guess", "type": "Any"}, {"lineNumber": 281, "col_offset": 48, "nodeName": "y", "type": "int"}, {"lineNumber": 281, "col_offset": 62, "nodeName": "eval_data", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 282, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 282, "col_offset": 26, "nodeName": "eval_data", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "data_dir", "type": "Any"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "subdir", "type": "str"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "text", "type": "Any"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "replace", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "vocab", "type": "Dict[Any, int]"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "dropout", "type": "Union[float, Any]"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "isalpha", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "bow", "type": "collections.defaultdict[int, Any]"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "bigrams", "type": "Any"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "id_", "type": "int"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "values", "type": "Callable"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "bow", "type": "collections.defaultdict[int, Any]"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "word", "type": "int"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "freq", "type": "Any"}, {"lineNumber": 109, "col_offset": 77, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 116, "col_offset": 43, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "self", "type": "DenseAveragedNetwork"}, {"lineNumber": 117, "col_offset": 53, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 117, "col_offset": 57, "nodeName": "bow", "type": "Dict[Tuple[int, Any], Any]"}, {"lineNumber": 118, "col_offset": 40, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 118, "col_offset": 46, "nodeName": "nr_class", "type": "Any"}, {"lineNumber": 142, "col_offset": 35, "nodeName": "depth", "type": "Any"}, {"lineNumber": 142, "col_offset": 44, "nodeName": "n_classes", "type": "Any"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "doc", "type": "List[Any]"}, {"lineNumber": 150, "col_offset": 39, "nodeName": "self", "type": "NeuralNGram"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "vocab", "type": "Dict[Any, int]"}, {"lineNumber": 154, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 155, "col_offset": 22, "nodeName": "i", "type": "int"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "id_", "type": "int"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "nr_class", "type": "Any"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "i", "type": "int"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "label", "type": "Any"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "egs", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "self", "type": "NeuralNGram"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "nr_class", "type": "Any"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "NeuralNet", "type": "Any"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "self", "type": "NeuralNGram"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "scores", "type": "List[Union[int, Any]]"}, {"lineNumber": 169, "col_offset": 29, "nodeName": "eg_scores", "type": "Any"}, {"lineNumber": 177, "col_offset": 35, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 177, "col_offset": 41, "nodeName": "nr_class", "type": "Any"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 179, "col_offset": 28, "nodeName": "scores", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "NeuralNet", "type": "Any"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 43, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 210, "col_offset": 30, "nodeName": "self", "type": "BOWTron"}, {"lineNumber": 210, "col_offset": 53, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 210, "col_offset": 57, "nodeName": "bow", "type": "Dict[Tuple[int, Any], Any]"}, {"lineNumber": 211, "col_offset": 40, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 211, "col_offset": 46, "nodeName": "nr_class", "type": "Any"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "random", "type": "Any"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "Eg", "type": "Callable[..., Any]"}, {"lineNumber": 266, "col_offset": 30, "nodeName": "text", "type": "Any"}, {"lineNumber": 266, "col_offset": 36, "nodeName": "label", "type": "int"}, {"lineNumber": 267, "col_offset": 30, "nodeName": "update", "type": "Callable[[Any], Any]"}, {"lineNumber": 267, "col_offset": 43, "nodeName": "eg", "type": "List[Any]"}, {"lineNumber": 269, "col_offset": 37, "nodeName": "nr_correct", "type": "Any"}, {"lineNumber": 270, "col_offset": 39, "nodeName": "nr_weight", "type": "Any"}, {"lineNumber": 276, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 276, "col_offset": 57, "nodeName": "y", "type": "int"}, {"lineNumber": 281, "col_offset": 54, "nodeName": "x", "type": "Any"}, {"lineNumber": 281, "col_offset": 57, "nodeName": "y", "type": "int"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "open", "type": "Any"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "text", "type": "Any"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "label", "type": "int"}, {"lineNumber": 43, "col_offset": 21, "nodeName": "i", "type": "int"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "bs", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "line", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "line", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "line", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "line", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "line", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "lower", "type": "Any"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "self", "type": "Extractor"}, {"lineNumber": 74, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "vocab", "type": "Dict[Any, int]"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 75, "col_offset": 52, "nodeName": "word", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "id_", "type": "int"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "self", "type": "Extractor"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "prev", "type": "None"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "bow", "type": "collections.defaultdict[int, Any]"}, {"lineNumber": 109, "col_offset": 68, "nodeName": "depth", "type": "Any"}, {"lineNumber": 110, "col_offset": 51, "nodeName": "width", "type": "Any"}, {"lineNumber": 110, "col_offset": 57, "nodeName": "bigram_width", "type": "int"}, {"lineNumber": 116, "col_offset": 48, "nodeName": "label", "type": "Any"}, {"lineNumber": 118, "col_offset": 46, "nodeName": "self", "type": "DenseAveragedNetwork"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "word_id", "type": "Any"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "width", "type": "Any"}, {"lineNumber": 144, "col_offset": 51, "nodeName": "unigram_width", "type": "int"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "self", "type": "NeuralNGram"}, {"lineNumber": 151, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 151, "col_offset": 47, "nodeName": "vocab", "type": "Dict[Any, int]"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "i", "type": "int"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "window_size", "type": "Any"}, {"lineNumber": 155, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "id_", "type": "int"}, {"lineNumber": 155, "col_offset": 47, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 155, "col_offset": 57, "nodeName": "ngram", "type": "List[int]"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "self", "type": "NeuralNGram"}, {"lineNumber": 156, "col_offset": 57, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 156, "col_offset": 61, "nodeName": "feats", "type": "List[Tuple[int, int, int]]"}, {"lineNumber": 157, "col_offset": 44, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 157, "col_offset": 50, "nodeName": "nr_class", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "self", "type": "NeuralNGram"}, {"lineNumber": 169, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 169, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 177, "col_offset": 41, "nodeName": "self", "type": "NeuralNGram"}, {"lineNumber": 179, "col_offset": 28, "nodeName": "total", "type": "Any"}, {"lineNumber": 179, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 179, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 179, "col_offset": 57, "nodeName": "label", "type": "Any"}, {"lineNumber": 209, "col_offset": 48, "nodeName": "label", "type": "Any"}, {"lineNumber": 211, "col_offset": 46, "nodeName": "self", "type": "BOWTron"}, {"lineNumber": 219, "col_offset": 23, "nodeName": "word_id", "type": "Any"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 266, "col_offset": 21, "nodeName": "model", "type": "NeuralNGram"}, {"lineNumber": 267, "col_offset": 30, "nodeName": "model", "type": "NeuralNGram"}, {"lineNumber": 268, "col_offset": 29, "nodeName": "guess", "type": "Any"}, {"lineNumber": 268, "col_offset": 57, "nodeName": "y", "type": "int"}, {"lineNumber": 268, "col_offset": 71, "nodeName": "dev_data", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 269, "col_offset": 50, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 269, "col_offset": 54, "nodeName": "dev_data", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 270, "col_offset": 18, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "weights", "type": "Any"}, {"lineNumber": 270, "col_offset": 39, "nodeName": "model", "type": "NeuralNGram"}, {"lineNumber": 276, "col_offset": 20, "nodeName": "model", "type": "NeuralNGram"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "model", "type": "NeuralNGram"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "filename", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "strip", "type": "Any"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "line", "type": "Any"}, {"lineNumber": 74, "col_offset": 50, "nodeName": "self", "type": "Extractor"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "random", "type": "Any"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "unigram_width", "type": "Any"}, {"lineNumber": 109, "col_offset": 42, "nodeName": "bigram_width", "type": "int"}, {"lineNumber": 109, "col_offset": 59, "nodeName": "width", "type": "Any"}, {"lineNumber": 151, "col_offset": 47, "nodeName": "self", "type": "NeuralNGram"}, {"lineNumber": 154, "col_offset": 28, "nodeName": "self", "type": "NeuralNGram"}, {"lineNumber": 157, "col_offset": 50, "nodeName": "self", "type": "NeuralNGram"}, {"lineNumber": 268, "col_offset": 63, "nodeName": "x", "type": "Any"}, {"lineNumber": 268, "col_offset": 66, "nodeName": "y", "type": "int"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "model", "type": "NeuralNGram"}, {"lineNumber": 276, "col_offset": 26, "nodeName": "Eg", "type": "Callable[..., Any]"}, {"lineNumber": 276, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 281, "col_offset": 26, "nodeName": "Eg", "type": "Callable[..., Any]"}, {"lineNumber": 281, "col_offset": 35, "nodeName": "x", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "line", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 268, "col_offset": 29, "nodeName": "model", "type": "NeuralNGram"}, {"lineNumber": 276, "col_offset": 26, "nodeName": "model", "type": "NeuralNGram"}, {"lineNumber": 281, "col_offset": 26, "nodeName": "model", "type": "NeuralNGram"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "Eg", "type": "Callable[..., Any]"}, {"lineNumber": 268, "col_offset": 44, "nodeName": "x", "type": "Any"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "model", "type": "NeuralNGram"}]