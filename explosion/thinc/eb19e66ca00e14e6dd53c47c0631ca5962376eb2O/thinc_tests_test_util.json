[{"lineNumber": 34, "col_offset": 0, "nodeName": "test_get_width_fail", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "test_array_module_cpu_gpu_helpers", "type": "Callable[[], Any]"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "test_to_categorical", "type": "Callable[[], Any]"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "test_convert_recursive", "type": "Callable[[], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "xp", "type": "Any"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "nc", "type": "int"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "shapes", "type": "List[Union[Tuple[int], Tuple[int, int], Tuple[int, int, int]]]"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "expected_shapes", "type": "List[Union[Tuple[int, int], Tuple[int, int, int], Tuple[int, int, int, int]]]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "one_hots", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "is_match", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "convert_item", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "obj", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "result", "type": "Any"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "width", "type": "Any"}, {"lineNumber": 41, "col_offset": 9, "nodeName": "get_array_module", "type": "Any"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, Union[bytearray, str, unicode]], bool]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "xp", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "is_numpy_array", "type": "Any"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "to_categorical", "type": "Any"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "label", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "expected_shape", "type": "Any"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 59, "col_offset": 46, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 54, "nodeName": "one_hots", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 64, "nodeName": "expected_shapes", "type": "List[Union[Tuple[int, int], Tuple[int, int, int], Tuple[int, int, int, int]]]"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "convert_recursive", "type": "Any"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "is_match", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 41, "nodeName": "convert_item", "type": "Callable[[Any], Any]"}, {"lineNumber": 72, "col_offset": 55, "nodeName": "obj", "type": "Dict[str, Dict[Tuple[str, str], Dict[str, Union[str, List[Union[str, Dict[str, Union[str, Tuple[int, str]]]]]]]]]"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "convert_recursive", "type": "Any"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "is_match", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 41, "nodeName": "convert_item", "type": "Callable[[Any], Any]"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "obj", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "args", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "get_width", "type": "Any"}, {"lineNumber": 31, "col_offset": 21, "nodeName": "obj", "type": "Any"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "raises", "type": "Any"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "get_width", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "obj", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "is_numpy_array", "type": "Any"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "nc", "type": "int"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "nc", "type": "int"}, {"lineNumber": 56, "col_offset": 48, "nodeName": "nc", "type": "int"}, {"lineNumber": 56, "col_offset": 63, "nodeName": "nc", "type": "int"}, {"lineNumber": 56, "col_offset": 72, "nodeName": "nc", "type": "int"}, {"lineNumber": 56, "col_offset": 84, "nodeName": "nc", "type": "int"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "randint", "type": "Any"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "nc", "type": "int"}, {"lineNumber": 57, "col_offset": 42, "nodeName": "shape", "type": "Union[Tuple[int, int, int], Tuple[int], Tuple[int, int]]"}, {"lineNumber": 57, "col_offset": 53, "nodeName": "shape", "type": "Union[Tuple[int], Tuple[int, int], Tuple[int, int, int]]"}, {"lineNumber": 57, "col_offset": 62, "nodeName": "shapes", "type": "List[Union[Tuple[int], Tuple[int, int], Tuple[int, int, int]]]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "to_categorical", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "label", "type": "Any"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "nc", "type": "int"}, {"lineNumber": 58, "col_offset": 46, "nodeName": "label", "type": "Any"}, {"lineNumber": 58, "col_offset": 55, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "expected_shape", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "array_equal", "type": "Any"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "obj", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "upper", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "ArgsKwargs", "type": "Any"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "numpy", "type": "module"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "random", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 61, "col_offset": 42, "nodeName": "astype", "type": "Any"}, {"lineNumber": 61, "col_offset": 57, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 63, "col_offset": 75, "nodeName": "label", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "obj", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 57, "col_offset": 14, "nodeName": "numpy", "type": "module"}, {"lineNumber": 61, "col_offset": 42, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 63, "col_offset": 59, "nodeName": "shape", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "result", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 63, "col_offset": 59, "nodeName": "label", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "one_hot", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "numpy", "type": "module"}]