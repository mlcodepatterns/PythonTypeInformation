[{"lineNumber": 10, "col_offset": 0, "nodeName": "make_tempdir", "type": "Callable[[], Any]"}, {"lineNumber": 17, "col_offset": 0, "nodeName": "get_model", "type": "Callable[..., Any]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "get_shape", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "get_data_checker", "type": "Callable[[Any], Any]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "assert_arrays_match", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "assert_lists_match", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 62, "col_offset": 0, "nodeName": "assert_raggeds_match", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "assert_paddeds_match", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "assert_padded_data_match", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "assert_ragged_data_match", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "check_input_converters", "type": "Callable[[Any, Any, Any, Any, Any, Any], Any]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "d", "type": "pathlib.Path"}, {"lineNumber": 17, "col_offset": 29, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "W_b_input", "type": "Any"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "shape", "type": "Any"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 23, "col_offset": 11, "nodeName": "model", "type": "Any"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "W_b_input", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "dX", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "input_type", "type": "Union[Any, Type[Tuple[Any, ...]]]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 13, "col_offset": 10, "nodeName": "d", "type": "pathlib.Path"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "W", "type": "Any"}, {"lineNumber": 18, "col_offset": 7, "nodeName": "b", "type": "Any"}, {"lineNumber": 18, "col_offset": 10, "nodeName": "input_", "type": "Any"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "nr_out", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "nr_in", "type": "Any"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "W", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "cls", "type": "Any"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "nr_out", "type": "Any"}, {"lineNumber": 20, "col_offset": 24, "nodeName": "nr_in", "type": "Any"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "set_param", "type": "Any"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "W", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "set_param", "type": "Any"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "W", "type": "Any"}, {"lineNumber": 27, "col_offset": 7, "nodeName": "b", "type": "Any"}, {"lineNumber": 27, "col_offset": 10, "nodeName": "input_", "type": "Any"}, {"lineNumber": 32, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "Ragged", "type": "Type[thinc.types.Ragged]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "assert_raggeds_match", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "X", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "Y", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "x", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "y", "type": "Any"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "X", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "Y", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "X", "type": "thinc.types.Ragged"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "Ragged", "type": "Type[thinc.types.Ragged]"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "Y", "type": "thinc.types.Ragged"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "Ragged", "type": "Type[thinc.types.Ragged]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "assert_arrays_match", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "lengths", "type": "thinc.types.Array1d"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "lengths", "type": "thinc.types.Array1d"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "assert_arrays_match", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "data", "type": "thinc.types.Array2d"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "data", "type": "thinc.types.Array2d"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "X", "type": "thinc.types.Padded"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "Padded", "type": "Type[thinc.types.Padded]"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "Y", "type": "thinc.types.Padded"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "Padded", "type": "Type[thinc.types.Padded]"}, {"lineNumber": 73, "col_offset": 4, "nodeName": "assert_arrays_match", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "size_at_t", "type": "thinc.types.Array1d"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "size_at_t", "type": "thinc.types.Array1d"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "lengths", "type": "List[int]"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "lengths", "type": "List[int]"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "indices", "type": "List[int]"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "assert_paddeds_match", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "assert_raggeds_match", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "Y", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "ArgsKwargs", "type": "Type[thinc.types.ArgsKwargs]"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "n_args", "type": "Any"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "kwargs_keys", "type": "Any"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 96, "col_offset": 9, "nodeName": "backprop", "type": "Any"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "Y", "type": "Any"}, {"lineNumber": 97, "col_offset": 63, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 98, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "dX", "type": "Any"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "input_type", "type": "Union[Any, Type[Tuple[Any, ...]]]"}, {"lineNumber": 99, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 99, "col_offset": 24, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 12, "col_offset": 13, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 14, "col_offset": 4, "nodeName": "shutil", "type": "module"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "d", "type": "pathlib.Path"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 22, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "shape", "type": "Any"}, {"lineNumber": 28, "col_offset": 40, "nodeName": "shape", "type": "Any"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "Padded", "type": "Type[thinc.types.Padded]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "assert_paddeds_match", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "X", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "Y", "type": "Any"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "shape", "type": "Any"}, {"lineNumber": 56, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "X", "type": "Any"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "Y", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assert_arrays_match", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "y", "type": "Any"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "X", "type": "thinc.types.Ragged"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "Y", "type": "thinc.types.Ragged"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "X", "type": "thinc.types.Ragged"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "Y", "type": "thinc.types.Ragged"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "X", "type": "thinc.types.Padded"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "Y", "type": "thinc.types.Padded"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "X", "type": "thinc.types.Padded"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "Y", "type": "thinc.types.Padded"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "X", "type": "thinc.types.Padded"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "Y", "type": "thinc.types.Padded"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "data", "type": "thinc.types.Array3d"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "data", "type": "thinc.types.Array3d"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "shape", "type": "Any"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "Padded", "type": "Type[thinc.types.Padded]"}, {"lineNumber": 83, "col_offset": 44, "nodeName": "Padded", "type": "Type[thinc.types.Padded]"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "Ragged", "type": "Type[thinc.types.Ragged]"}, {"lineNumber": 87, "col_offset": 44, "nodeName": "Ragged", "type": "Type[thinc.types.Ragged]"}, {"lineNumber": 92, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "args", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 97, "col_offset": 17, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 100, "col_offset": 34, "nodeName": "kwargs_keys", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 102, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 12, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "input_", "type": "Any"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "W", "type": "Any"}, {"lineNumber": 28, "col_offset": 40, "nodeName": "W", "type": "Any"}, {"lineNumber": 36, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 36, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "assert_lists_match", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "X", "type": "Any"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "Y", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "X", "type": "thinc.types.Padded"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "Y", "type": "thinc.types.Padded"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "data", "type": "thinc.types.Array3d"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "data", "type": "thinc.types.Array3d"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "data", "type": "thinc.types.Array3d"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "data", "type": "thinc.types.Array3d"}, {"lineNumber": 83, "col_offset": 40, "nodeName": "X", "type": "Any"}, {"lineNumber": 83, "col_offset": 52, "nodeName": "Y", "type": "Any"}, {"lineNumber": 87, "col_offset": 40, "nodeName": "X", "type": "Any"}, {"lineNumber": 87, "col_offset": 52, "nodeName": "Y", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "Y", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "keys", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "arg", "type": "Any"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "type_", "type": "Any"}, {"lineNumber": 94, "col_offset": 42, "nodeName": "arg", "type": "Any"}, {"lineNumber": 94, "col_offset": 49, "nodeName": "args", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "arg", "type": "Any"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "type_", "type": "Any"}, {"lineNumber": 95, "col_offset": 42, "nodeName": "arg", "type": "Any"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 97, "col_offset": 46, "nodeName": "data", "type": "Any"}, {"lineNumber": 97, "col_offset": 52, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "dX", "type": "Any"}, {"lineNumber": 103, "col_offset": 30, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 105, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "ArgsKwargs", "type": "Type[thinc.types.ArgsKwargs]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "assert_padded_data_match", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "X", "type": "thinc.types.Padded"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "Y", "type": "thinc.types.Padded"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "X", "type": "thinc.types.Padded"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "Y", "type": "thinc.types.Padded"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 94, "col_offset": 49, "nodeName": "Y", "type": "Any"}, {"lineNumber": 95, "col_offset": 49, "nodeName": "values", "type": "Any"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "keys", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "arr", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 101, "col_offset": 54, "nodeName": "arr", "type": "Any"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "n_args", "type": "Any"}, {"lineNumber": 107, "col_offset": 41, "nodeName": "kwargs_keys", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "assert_ragged_data_match", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "assert_arrays_match", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "Y", "type": "Any"}, {"lineNumber": 95, "col_offset": 49, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "dX", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "numpy", "type": "module"}, {"lineNumber": 101, "col_offset": 61, "nodeName": "values", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "arr", "type": "Any"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 104, "col_offset": 54, "nodeName": "arr", "type": "Any"}, {"lineNumber": 104, "col_offset": 61, "nodeName": "dX", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "args", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 110, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "fail", "type": "Any"}, {"lineNumber": 38, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 38, "col_offset": 43, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 95, "col_offset": 49, "nodeName": "Y", "type": "Any"}, {"lineNumber": 101, "col_offset": 61, "nodeName": "dX", "type": "Any"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "numpy", "type": "module"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "dX", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "keys", "type": "Any"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "arg", "type": "Any"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 108, "col_offset": 54, "nodeName": "arg", "type": "Any"}, {"lineNumber": 108, "col_offset": 61, "nodeName": "args", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "arg", "type": "Any"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 109, "col_offset": 54, "nodeName": "arg", "type": "Any"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "numpy", "type": "module"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 40, "col_offset": 43, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "numpy", "type": "module"}, {"lineNumber": 108, "col_offset": 61, "nodeName": "dX", "type": "Any"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "numpy", "type": "module"}, {"lineNumber": 109, "col_offset": 61, "nodeName": "values", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "dX", "type": "Any"}, {"lineNumber": 109, "col_offset": 61, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 109, "col_offset": 61, "nodeName": "dX", "type": "Any"}]