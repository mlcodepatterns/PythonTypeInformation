[{"lineNumber": 18, "col_offset": 16, "nodeName": "Shim", "type": "Any"}, {"lineNumber": 9, "col_offset": 7, "nodeName": "ImportError", "type": "Type[ImportError]"}, {"lineNumber": 29, "col_offset": 45, "nodeName": "Any", "type": "Any"}, {"lineNumber": 24, "col_offset": 11, "nodeName": "is_train", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "model_bytes", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "copied", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "copied", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "msg", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "msg", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "self", "type": "MXNetShim"}, {"lineNumber": 29, "col_offset": 30, "nodeName": "ArgsKwargs", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "set_training", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "set_training", "type": "Any"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "ArgsKwargs", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "set_training", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "set_recording", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "_model", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "backprop", "type": "Callable[[Any], Any]"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "values", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "grad", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "to_bytes", "type": "Callable[[], Any]"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "self", "type": "MXNetShim"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "initialize", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "from_bytes", "type": "Any"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "model_bytes", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "device", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "_model", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "_model", "type": "Any"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "temp", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "weights_bytes", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "cfg", "type": "Any"}, {"lineNumber": 87, "col_offset": 44, "nodeName": "weights_bytes", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "msgpack_dumps", "type": "Any"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "msg", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "msgpack_loads", "type": "Any"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "bytes_data", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "MXNetShim"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "msg", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "_load_params", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "temp", "type": "Any"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "begin_update", "type": "Callable[[Any], Any]"}, {"lineNumber": 25, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "pause", "type": "Any"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "_model", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "self", "type": "MXNetShim"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "set_recording", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "backward", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "convert_recursive", "type": "Any"}, {"lineNumber": 54, "col_offset": 64, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "cast", "type": "Callable"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "FloatsXd", "type": "Any"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "cast", "type": "Callable"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "FloatsXd", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "param", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "_", "type": "Any"}, {"lineNumber": 63, "col_offset": 23, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 63, "col_offset": 59, "nodeName": "param", "type": "Any"}, {"lineNumber": 63, "col_offset": 66, "nodeName": "grad", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "set_data", "type": "Any"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "current_context", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "self", "type": "MXNetShim"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "copy", "type": "module"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "_model", "type": "Any"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "ctx", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "copied", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "MXNetShim"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "copy", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "self", "type": "MXNetShim"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "copy", "type": "Callable[..., Any]"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "make_tempfile", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "save_parameters", "type": "Any"}, {"lineNumber": 84, "col_offset": 40, "nodeName": "name", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "seek", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "read", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "self", "type": "MXNetShim"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "srsly", "type": "Any"}, {"lineNumber": 91, "col_offset": 14, "nodeName": "srsly", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "MXNetShim"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "msg", "type": "Any"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "make_tempfile", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "params", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "load_parameters", "type": "Any"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "name", "type": "Any"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "self", "type": "MXNetShim"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "predict", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "mx", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 36, "col_offset": 22, "nodeName": "self", "type": "MXNetShim"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "args", "type": "Any"}, {"lineNumber": 36, "col_offset": 50, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "mx", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "mx", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "mx", "type": "Any"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "args", "type": "Any"}, {"lineNumber": 52, "col_offset": 51, "nodeName": "kwargs", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "collect_params", "type": "Any"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "mxnet2xp", "type": "Any"}, {"lineNumber": 62, "col_offset": 35, "nodeName": "mxnet2xp", "type": "Any"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "name", "type": "Any"}, {"lineNumber": 63, "col_offset": 46, "nodeName": "name", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "xp2mxnet", "type": "Any"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "param", "type": "Any"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "mx", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "copied", "type": "Any"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "self", "type": "MXNetShim"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "self", "type": "MXNetShim"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "_model", "type": "Any"}, {"lineNumber": 84, "col_offset": 40, "nodeName": "temp", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "temp", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "temp", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "temp", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "_model", "type": "Any"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "temp", "type": "Any"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "self", "type": "MXNetShim"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "mxnet", "type": "Any"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 36, "col_offset": 50, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "mx", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "mxnet", "type": "Any"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "grads", "type": "Any"}, {"lineNumber": 52, "col_offset": 51, "nodeName": "grads", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "_model", "type": "Any"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "grad", "type": "Any"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "value", "type": "Any"}, {"lineNumber": 63, "col_offset": 46, "nodeName": "value", "type": "Any"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "mx", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "mx", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "MXNetShim"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "self", "type": "MXNetShim"}, {"lineNumber": 100, "col_offset": 55, "nodeName": "current_context", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "self", "type": "MXNetShim"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "value", "type": "Any"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "value", "type": "Any"}, {"lineNumber": 100, "col_offset": 55, "nodeName": "mx", "type": "Any"}]