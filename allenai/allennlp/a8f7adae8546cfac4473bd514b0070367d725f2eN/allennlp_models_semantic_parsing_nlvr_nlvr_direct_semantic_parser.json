[{"lineNumber": 22, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 26, "col_offset": 31, "nodeName": "NlvrSemanticParser", "type": "Type[allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.NlvrSemanticParser]"}, {"lineNumber": 22, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 22, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "_decoder_trainer", "type": "allennlp.nn.decoding.decoder_trainers.maximum_marginal_likelihood.MaximumMarginalLikelihood"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "_decoder_beam_search", "type": "allennlp.nn.decoding.beam_search.BeamSearch"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "decoder_beam_search", "type": "allennlp.nn.decoding.beam_search.BeamSearch"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "_max_decoding_steps", "type": "int"}, {"lineNumber": 75, "col_offset": 35, "nodeName": "max_decoding_steps", "type": "int"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "_action_padding_index", "type": "int"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "initial_rnn_state", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "label_strings", "type": "Optional[Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "worlds_list", "type": "List[List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]]"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "outputs", "type": "Dict[str, Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "best_action_sequences", "type": "Dict[int, Union[List[List[int]], List[Any]]]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "batch_action_strings", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "batch_denotations", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "outputs", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 84, "col_offset": 52, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 171, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "sentence_embedder_params", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "sentence_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "action_embedding_dim", "type": "int"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "dropout", "type": "float"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "attention_function_type", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "decoder_beam_search", "type": "allennlp.nn.decoding.beam_search.BeamSearch"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "max_decoding_steps", "type": "int"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "MaximumMarginalLikelihood", "type": "Type[allennlp.nn.decoding.decoder_trainers.maximum_marginal_likelihood.MaximumMarginalLikelihood]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "NlvrDecoderStep", "type": "Type[allennlp.models.semantic_parsing.nlvr.nlvr_decoder_step.NlvrDecoderStep]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 90, "col_offset": 25, "nodeName": "worlds", "type": "List[List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "action_embeddings", "type": "Any"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "action_indices", "type": "Any"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "_embed_actions", "type": "Any"}, {"lineNumber": 91, "col_offset": 64, "nodeName": "actions", "type": "List[List[Tuple[str, bool, Any]]]"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "_get_initial_rnn_state", "type": "Any"}, {"lineNumber": 93, "col_offset": 56, "nodeName": "sentence", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "NlvrDecoderState", "type": "Type[allennlp.models.semantic_parsing.nlvr.nlvr_decoder_state.NlvrDecoderState]"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "target_action_sequences", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "target_action_sequences", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "target_mask", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "target_mask", "type": "None"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "target_action_sequences", "type": "Any"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "search", "type": "Any"}, {"lineNumber": 126, "col_offset": 61, "nodeName": "_max_decoding_steps", "type": "Any"}, {"lineNumber": 127, "col_offset": 61, "nodeName": "initial_state", "type": "allennlp.models.semantic_parsing.nlvr.nlvr_decoder_state.NlvrDecoderState"}, {"lineNumber": 128, "col_offset": 61, "nodeName": "_decoder_step", "type": "Any"}, {"lineNumber": 131, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "_get_action_strings", "type": "Any"}, {"lineNumber": 138, "col_offset": 56, "nodeName": "actions", "type": "List[List[Tuple[str, bool, Any]]]"}, {"lineNumber": 138, "col_offset": 65, "nodeName": "best_action_sequences", "type": "Dict[int, Union[List[List[int]], List[Any]]]"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "_get_denotations", "type": "Any"}, {"lineNumber": 139, "col_offset": 50, "nodeName": "batch_action_strings", "type": "Any"}, {"lineNumber": 139, "col_offset": 72, "nodeName": "worlds", "type": "List[List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]]"}, {"lineNumber": 140, "col_offset": 11, "nodeName": "target_action_sequences", "type": "Any"}, {"lineNumber": 145, "col_offset": 45, "nodeName": "batch_action_strings", "type": "Any"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "batch_denotations", "type": "Any"}, {"lineNumber": 155, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 155, "col_offset": 25, "nodeName": "worlds", "type": "List[List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]]"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "instance_action_strings", "type": "List[List[str]]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "sequence_is_correct", "type": "List[bool]"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "instance_action_strings", "type": "List[List[str]]"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "correct_in_world", "type": "Union[Any, bool]"}, {"lineNumber": 166, "col_offset": 36, "nodeName": "sequence_is_correct", "type": "Union[Any, List[bool]]"}, {"lineNumber": 171, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 178, "col_offset": 40, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "pop", "type": "Any"}, {"lineNumber": 180, "col_offset": 28, "nodeName": "from_params", "type": "Callable[[Any, allennlp.data.vocabulary.Vocabulary, allennlp.common.params.Params], allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 180, "col_offset": 58, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 180, "col_offset": 65, "nodeName": "sentence_embedder_params", "type": "Any"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "pop_int", "type": "Callable[..., int]"}, {"lineNumber": 182, "col_offset": 18, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "pop_float", "type": "Callable[..., float]"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "pop", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "attention_function_type", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "attention_function", "type": "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "attention_function", "type": "None"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.nn.decoding.beam_search.BeamSearch]"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "pop_int", "type": "Callable[..., int]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "assert_empty", "type": "Callable[[str], None]"}, {"lineNumber": 191, "col_offset": 28, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 192, "col_offset": 19, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 64, "col_offset": 61, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 65, "col_offset": 73, "nodeName": "sentence_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 66, "col_offset": 76, "nodeName": "action_embedding_dim", "type": "int"}, {"lineNumber": 67, "col_offset": 63, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 68, "col_offset": 63, "nodeName": "dropout", "type": "float"}, {"lineNumber": 71, "col_offset": 66, "nodeName": "action_embedding_dim", "type": "int"}, {"lineNumber": 72, "col_offset": 64, "nodeName": "attention_function", "type": "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction"}, {"lineNumber": 73, "col_offset": 53, "nodeName": "dropout", "type": "float"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 97, "col_offset": 59, "nodeName": "labels", "type": "Any"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "_get_label_strings", "type": "Any"}, {"lineNumber": 97, "col_offset": 48, "nodeName": "labels", "type": "Any"}, {"lineNumber": 99, "col_offset": 33, "nodeName": "_create_grammar_state", "type": "Any"}, {"lineNumber": 99, "col_offset": 90, "nodeName": "i", "type": "int"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "worlds", "type": "List[List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]]"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "initial_score_list", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 51, "nodeName": "initial_rnn_state", "type": "Any"}, {"lineNumber": 107, "col_offset": 55, "nodeName": "initial_grammar_state", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 59, "nodeName": "action_embeddings", "type": "Any"}, {"lineNumber": 109, "col_offset": 56, "nodeName": "action_indices", "type": "Any"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "actions", "type": "List[List[Tuple[str, bool, Any]]]"}, {"lineNumber": 111, "col_offset": 48, "nodeName": "worlds_list", "type": "List[List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]]"}, {"lineNumber": 112, "col_offset": 55, "nodeName": "label_strings", "type": "Optional[Any]"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "target_action_sequences", "type": "Any"}, {"lineNumber": 117, "col_offset": 53, "nodeName": "_action_padding_index", "type": "Any"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "decode", "type": "Any"}, {"lineNumber": 123, "col_offset": 51, "nodeName": "initial_state", "type": "allennlp.models.semantic_parsing.nlvr.nlvr_decoder_state.NlvrDecoderState"}, {"lineNumber": 124, "col_offset": 51, "nodeName": "_decoder_step", "type": "Any"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "_decoder_beam_search", "type": "Any"}, {"lineNumber": 126, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 61, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "best_final_states", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "best_action_indices", "type": "List[Any]"}, {"lineNumber": 137, "col_offset": 43, "nodeName": "best_action_indices", "type": "List[Any]"}, {"lineNumber": 138, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "_update_metrics", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "outputs", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "outputs", "type": "Union[Any, Dict[str, Any]]"}, {"lineNumber": 84, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 84, "col_offset": 62, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 150, "col_offset": 40, "nodeName": "List", "type": "Any"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "List", "type": "Any"}, {"lineNumber": 152, "col_offset": 39, "nodeName": "List", "type": "Any"}, {"lineNumber": 157, "col_offset": 38, "nodeName": "action_strings", "type": "List[List[List[str]]]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "instance_label_strings", "type": "List[str]"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "instance_worlds", "type": "List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "_consistency", "type": "Any"}, {"lineNumber": 173, "col_offset": 39, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 173, "col_offset": 76, "nodeName": "reset", "type": "bool"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 174, "col_offset": 60, "nodeName": "reset", "type": "bool"}, {"lineNumber": 171, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 171, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 180, "col_offset": 28, "nodeName": "TextFieldEmbedder", "type": "Type[allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 182, "col_offset": 18, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 182, "col_offset": 45, "nodeName": "pop", "type": "Any"}, {"lineNumber": 183, "col_offset": 18, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 184, "col_offset": 34, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 186, "col_offset": 33, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.modules.similarity_functions.similarity_function.SimilarityFunction]"}, {"lineNumber": 186, "col_offset": 64, "nodeName": "attention_function_type", "type": "Any"}, {"lineNumber": 189, "col_offset": 30, "nodeName": "BeamSearch", "type": "Type[allennlp.nn.decoding.beam_search.BeamSearch]"}, {"lineNumber": 189, "col_offset": 53, "nodeName": "pop", "type": "Any"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 191, "col_offset": 28, "nodeName": "cls", "type": "Any"}, {"lineNumber": 193, "col_offset": 37, "nodeName": "sentence_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 194, "col_offset": 40, "nodeName": "action_embedding_dim", "type": "int"}, {"lineNumber": 195, "col_offset": 27, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 196, "col_offset": 38, "nodeName": "attention_function", "type": "Optional[allennlp.modules.similarity_functions.similarity_function.SimilarityFunction]"}, {"lineNumber": 197, "col_offset": 39, "nodeName": "decoder_beam_search", "type": "allennlp.nn.decoding.beam_search.BeamSearch"}, {"lineNumber": 198, "col_offset": 38, "nodeName": "max_decoding_steps", "type": "int"}, {"lineNumber": 199, "col_offset": 27, "nodeName": "dropout", "type": "float"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "NlvrDirectSemanticParser", "type": "Any"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 64, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 96, "col_offset": 39, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 96, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 74, "nodeName": "actions", "type": "List[List[Tuple[str, bool, Any]]]"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 101, "col_offset": 42, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 101, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 103, "col_offset": 55, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 116, "col_offset": 38, "nodeName": "target_action_sequences", "type": "Any"}, {"lineNumber": 117, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "_decoder_trainer", "type": "Any"}, {"lineNumber": 124, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 52, "nodeName": "target_action_sequences", "type": "Any"}, {"lineNumber": 125, "col_offset": 77, "nodeName": "target_mask", "type": "Any"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "best_action_sequences", "type": "Dict[int, Union[List[List[int]], List[Any]]]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 48, "nodeName": "batch_action_strings", "type": "Any"}, {"lineNumber": 142, "col_offset": 40, "nodeName": "worlds", "type": "List[List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]]"}, {"lineNumber": 143, "col_offset": 47, "nodeName": "label_strings", "type": "Optional[Any]"}, {"lineNumber": 84, "col_offset": 62, "nodeName": "torch", "type": "Any"}, {"lineNumber": 157, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 160, "col_offset": 41, "nodeName": "label_strings", "type": "List[List[str]]"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "worlds", "type": "List[List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]]"}, {"lineNumber": 163, "col_offset": 38, "nodeName": "_check_denotation", "type": "Any"}, {"lineNumber": 164, "col_offset": 61, "nodeName": "instance_label_strings", "type": "List[str]"}, {"lineNumber": 165, "col_offset": 61, "nodeName": "instance_worlds", "type": "List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "_denotation_accuracy", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 39, "nodeName": "_denotation_accuracy", "type": "Any"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "_consistency", "type": "Any"}, {"lineNumber": 182, "col_offset": 45, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 186, "col_offset": 33, "nodeName": "SimilarityFunction", "type": "Type[allennlp.modules.similarity_functions.similarity_function.SimilarityFunction]"}, {"lineNumber": 189, "col_offset": 53, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 70, "col_offset": 64, "nodeName": "_encoder", "type": "Any"}, {"lineNumber": 99, "col_offset": 60, "nodeName": "worlds", "type": "List[List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]]"}, {"lineNumber": 99, "col_offset": 82, "nodeName": "i", "type": "int"}, {"lineNumber": 103, "col_offset": 60, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 103, "col_offset": 66, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 104, "col_offset": 64, "nodeName": "_", "type": "int"}, {"lineNumber": 123, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 39, "nodeName": "action_history", "type": "Any"}, {"lineNumber": 137, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 150, "col_offset": 45, "nodeName": "List", "type": "Any"}, {"lineNumber": 151, "col_offset": 37, "nodeName": "List", "type": "Any"}, {"lineNumber": 152, "col_offset": 44, "nodeName": "List", "type": "Any"}, {"lineNumber": 160, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 161, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 163, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 61, "nodeName": "instance_action_strings", "type": "List[List[str]]"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 47, "nodeName": "correct_in_world", "type": "Union[Any, bool]"}, {"lineNumber": 168, "col_offset": 35, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "sequence_is_correct", "type": "Union[Any, List[bool]]"}, {"lineNumber": 173, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 104, "col_offset": 69, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 104, "col_offset": 75, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 151, "col_offset": 42, "nodeName": "NlvrWorld", "type": "Type[allennlp.semparse.worlds.nlvr_world.NlvrWorld]"}, {"lineNumber": 152, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 150, "col_offset": 50, "nodeName": "List", "type": "Any"}, {"lineNumber": 136, "col_offset": 39, "nodeName": "best_final_states", "type": "Any"}, {"lineNumber": 150, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 136, "col_offset": 57, "nodeName": "i", "type": "int"}]