[{"lineNumber": 17, "col_offset": 33, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "inner_encoder", "type": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "constant_init", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "numpy_tensor", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "reshaped_input", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "reshaped_manual_output", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "manual_output", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 38, "col_offset": 58, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 39, "col_offset": 47, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "inner_encoder", "type": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "randint", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "view", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "reshaped_input", "type": "Any"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "inner_encoder", "type": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"}, {"lineNumber": 56, "col_offset": 52, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "view", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "TokenCharactersEncoder", "type": "Any"}, {"lineNumber": 38, "col_offset": 58, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 38, "col_offset": 70, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 38, "col_offset": 79, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 39, "col_offset": 47, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 39, "col_offset": 59, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "Seq2VecEncoder", "type": "Type[allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder]"}, {"lineNumber": 40, "col_offset": 56, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "constant", "type": "Any"}, {"lineNumber": 41, "col_offset": 62, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 42, "col_offset": 64, "nodeName": "constant_init", "type": "Callable[[Any], Any]"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "numpy_tensor", "type": "Any"}, {"lineNumber": 53, "col_offset": 25, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "reshaped_manual_output", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 58, "col_offset": 57, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "TestTokenCharactersEncoder", "type": "Type[TestTokenCharactersEncoder]"}, {"lineNumber": 19, "col_offset": 42, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "init", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 58, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 58, "col_offset": 57, "nodeName": "manual_output", "type": "Any"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "torch", "type": "Any"}]