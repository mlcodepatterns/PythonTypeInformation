[{"lineNumber": 21, "col_offset": 0, "nodeName": "sanitize", "type": "Callable[[Any], Any]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "group_by_count", "type": "Callable[[List[Any], int, Any], List[List[Any]]]"}, {"lineNumber": 109, "col_offset": 0, "nodeName": "add_noise_to_dict_values", "type": "Callable[[Dict[A, float], float], Dict[A, float]]"}, {"lineNumber": 123, "col_offset": 0, "nodeName": "namespace_match", "type": "Callable[[str, str], Any]"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "prepare_environment", "type": "Callable[[allennlp.common.params.Params], Any]"}, {"lineNumber": 171, "col_offset": 0, "nodeName": "get_spacy_model", "type": "Callable[[str, bool, bool, bool], Any]"}, {"lineNumber": 190, "col_offset": 0, "nodeName": "peak_memory_mb", "type": "Callable[[], float]"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "JsonDict", "type": "Type[Dict[str, Any]]"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "Any", "type": "Any"}, {"lineNumber": 67, "col_offset": 61, "nodeName": "List", "type": "Any"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "A", "type": "Any"}, {"lineNumber": 168, "col_offset": 0, "nodeName": "LOADED_SPACY_MODELS", "type": "Dict[Tuple[str, bool, bool, bool], Any]"}, {"lineNumber": 171, "col_offset": 86, "nodeName": "SpacyModelType", "type": "Any"}, {"lineNumber": 190, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 49, "col_offset": 75, "nodeName": "List", "type": "Any"}, {"lineNumber": 95, "col_offset": 7, "nodeName": "padding_on_right", "type": "bool"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "_", "type": "int"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "padded_sequence", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "TypeVar", "type": "type"}, {"lineNumber": 115, "col_offset": 4, "nodeName": "new_dict", "type": "Dict[nothing, float]"}, {"lineNumber": 120, "col_offset": 11, "nodeName": "new_dict", "type": "Dict[nothing, float]"}, {"lineNumber": 109, "col_offset": 80, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 151, "col_offset": 4, "nodeName": "seed", "type": "int"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "numpy_seed", "type": "int"}, {"lineNumber": 153, "col_offset": 4, "nodeName": "torch_seed", "type": "int"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "options", "type": "Tuple[str, bool, bool, bool]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "peak", "type": "int"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "ru_maxrss", "type": "int"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "Any", "type": "Any"}, {"lineNumber": 26, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 49, "col_offset": 67, "nodeName": "Any", "type": "Any"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "padded_sequence", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "padded_sequence", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "padding_on_right", "type": "bool"}, {"lineNumber": 109, "col_offset": 70, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "key", "type": "nothing"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "value", "type": "float"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "items", "type": "Callable"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "noise_value", "type": "float"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "noise", "type": "float"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "pop_int", "type": "Callable[..., int]"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "pop_int", "type": "Callable[..., int]"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "pop_int", "type": "Callable[..., int]"}, {"lineNumber": 155, "col_offset": 7, "nodeName": "seed", "type": "int"}, {"lineNumber": 157, "col_offset": 7, "nodeName": "numpy_seed", "type": "int"}, {"lineNumber": 159, "col_offset": 7, "nodeName": "torch_seed", "type": "int"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "log_pytorch_version_info", "type": "Callable[[], None]"}, {"lineNumber": 171, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 171, "col_offset": 53, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 171, "col_offset": 66, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 171, "col_offset": 77, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "spacy_model_name", "type": "str"}, {"lineNumber": 177, "col_offset": 33, "nodeName": "pos_tags", "type": "bool"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "parse", "type": "bool"}, {"lineNumber": 177, "col_offset": 50, "nodeName": "ner", "type": "bool"}, {"lineNumber": 178, "col_offset": 7, "nodeName": "options", "type": "Tuple[str, bool, bool, bool]"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "LOADED_SPACY_MODELS", "type": "Dict[Tuple[str, bool, bool, bool], Any]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "disable", "type": "List[str]"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "spacy_model", "type": "Any"}, {"lineNumber": 187, "col_offset": 39, "nodeName": "spacy_model", "type": "Any"}, {"lineNumber": 188, "col_offset": 11, "nodeName": "LOADED_SPACY_MODELS", "type": "Dict[Tuple[str, bool, bool, bool], Any]"}, {"lineNumber": 199, "col_offset": 7, "nodeName": "platform", "type": "str"}, {"lineNumber": 207, "col_offset": 7, "nodeName": "platform", "type": "str"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 19, "col_offset": 21, "nodeName": "Any", "type": "Any"}, {"lineNumber": 26, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 26, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 26, "col_offset": 39, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 29, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "List", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "l", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "l", "type": "Any"}, {"lineNumber": 49, "col_offset": 80, "nodeName": "List", "type": "Any"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "sequence", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 26, "nodeName": "sequence", "type": "List[Any]"}, {"lineNumber": 100, "col_offset": 19, "nodeName": "desired_length", "type": "int"}, {"lineNumber": 109, "col_offset": 41, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "dictionary", "type": "Dict[nothing, float]"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "value", "type": "float"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "noise_param", "type": "float"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "uniform", "type": "Callable[[Union[float, int], Union[float, int]], float]"}, {"lineNumber": 118, "col_offset": 45, "nodeName": "noise_value", "type": "float"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "new_dict", "type": "Dict[nothing, float]"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "value", "type": "float"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "noise", "type": "float"}, {"lineNumber": 109, "col_offset": 85, "nodeName": "A", "type": "Any"}, {"lineNumber": 109, "col_offset": 88, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 131, "col_offset": 9, "nodeName": "pattern", "type": "str"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "namespace", "type": "str"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 153, "col_offset": 17, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "seed", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "seed", "type": "int"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "seed", "type": "Any"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "numpy_seed", "type": "int"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "torch_seed", "type": "int"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 168, "col_offset": 56, "nodeName": "SpacyModelType", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "pos_tags", "type": "bool"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "parse", "type": "bool"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "ner", "type": "bool"}, {"lineNumber": 186, "col_offset": 22, "nodeName": "load", "type": "Any"}, {"lineNumber": 186, "col_offset": 33, "nodeName": "spacy_model_name", "type": "str"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "LOADED_SPACY_MODELS", "type": "Dict[Tuple[str, bool, bool, bool], Any]"}, {"lineNumber": 188, "col_offset": 31, "nodeName": "options", "type": "Tuple[str, bool, bool, bool]"}, {"lineNumber": 199, "col_offset": 7, "nodeName": "sys", "type": "module"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "getrusage", "type": "Callable[[int], resource._RUsage]"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "RUSAGE_SELF", "type": "int"}, {"lineNumber": 207, "col_offset": 7, "nodeName": "sys", "type": "module"}, {"lineNumber": 209, "col_offset": 15, "nodeName": "peak", "type": "int"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "peak", "type": "int"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "sanitize", "type": "Callable[[Any], Any]"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "_TensorBase", "type": "Any"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "Any", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "zip_longest", "type": "Callable[..., Iterator[Any]]"}, {"lineNumber": 49, "col_offset": 85, "nodeName": "Any", "type": "Any"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "desired_length", "type": "int"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "padded_sequence", "type": "List[Any]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "random", "type": "module"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "noise_value", "type": "float"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "key", "type": "nothing"}, {"lineNumber": 129, "col_offset": 7, "nodeName": "pattern", "type": "str"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "namespace", "type": "str"}, {"lineNumber": 129, "col_offset": 48, "nodeName": "pattern", "type": "str"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "random", "type": "module"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "random", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "manual_seed_all", "type": "Any"}, {"lineNumber": 163, "col_offset": 39, "nodeName": "torch_seed", "type": "int"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 186, "col_offset": 22, "nodeName": "spacy", "type": "Any"}, {"lineNumber": 186, "col_offset": 59, "nodeName": "disable", "type": "List[str]"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "options", "type": "Tuple[str, bool, bool, bool]"}, {"lineNumber": 205, "col_offset": 11, "nodeName": "resource", "type": "module"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "resource", "type": "module"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 34, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 61, "col_offset": 78, "nodeName": "default_value", "type": "Any"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "desired_length", "type": "int"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "padded_sequence", "type": "List[Any]"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "default_value", "type": "Callable[[], Any]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "padded_sequence", "type": "List[Any]"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "default_value", "type": "Callable[[], Any]"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "A", "type": "Any"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "disable", "type": "List[str]"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "disable", "type": "List[str]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "disable", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 37, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "number", "type": "Any"}, {"lineNumber": 61, "col_offset": 61, "nodeName": "count", "type": "int"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 168, "col_offset": 43, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 168, "col_offset": 49, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "item", "type": "Any"}, {"lineNumber": 40, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "iterable", "type": "List[Any]"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "sanitize", "type": "Callable[[Any], Any]"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "value", "type": "Any"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 47, "col_offset": 14, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 42, "col_offset": 41, "nodeName": "key", "type": "Any"}, {"lineNumber": 42, "col_offset": 46, "nodeName": "value", "type": "Any"}, {"lineNumber": 42, "col_offset": 55, "nodeName": "items", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "sanitize", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "x_i", "type": "Any"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "x_i", "type": "Any"}, {"lineNumber": 45, "col_offset": 41, "nodeName": "x", "type": "Any"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 47, "col_offset": 64, "nodeName": "x", "type": "Any"}, {"lineNumber": 42, "col_offset": 55, "nodeName": "x", "type": "Any"}, {"lineNumber": 47, "col_offset": 67, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 47, "col_offset": 72, "nodeName": "x", "type": "Any"}]