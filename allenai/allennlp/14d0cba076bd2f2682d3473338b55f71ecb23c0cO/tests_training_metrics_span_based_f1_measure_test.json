[{"lineNumber": 11, "col_offset": 22, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 25, "col_offset": 21, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "gold_tensor", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "prediction_map_tensor", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "gold_labels", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "gold_indices", "type": "List[int]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "gold_tensor", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "metric", "type": "allennlp.training.metrics.metric.Metric"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 15, "col_offset": 16, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "SpanBasedF1Test"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "gold_indices", "type": "List[List[int]]"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 39, "col_offset": 45, "nodeName": "prediction_map_indices", "type": "List[List[int]]"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "rand", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "SpanBasedF1Measure", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "gold_tensor", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "gold_tensor", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "rand", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "SpanBasedF1Measure", "type": "Any"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "gold_tensor", "type": "Any"}, {"lineNumber": 125, "col_offset": 47, "nodeName": "mask", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "prediction_tensor", "type": "Any"}, {"lineNumber": 138, "col_offset": 34, "nodeName": "gold_tensor", "type": "Any"}, {"lineNumber": 138, "col_offset": 47, "nodeName": "mask", "type": "Any"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 162, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 163, "col_offset": 44, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "_ignore_classes", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "_label_vocabulary", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "self", "type": "SpanBasedF1Test"}, {"lineNumber": 56, "col_offset": 62, "nodeName": "prediction_map_tensor", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "keys", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "keys", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "keys", "type": "Any"}, {"lineNumber": 72, "col_offset": 62, "nodeName": "prediction_map_tensor", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "keys", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "keys", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "keys", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "metric", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 89, "col_offset": 42, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 90, "col_offset": 42, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 91, "col_offset": 42, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 92, "col_offset": 42, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 93, "col_offset": 42, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 94, "col_offset": 42, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 95, "col_offset": 42, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 97, "col_offset": 42, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 98, "col_offset": 42, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "get_token_index", "type": "Callable[..., int]"}, {"lineNumber": 103, "col_offset": 51, "nodeName": "x", "type": "str"}, {"lineNumber": 103, "col_offset": 66, "nodeName": "x", "type": "str"}, {"lineNumber": 103, "col_offset": 71, "nodeName": "gold_labels", "type": "List[str]"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 105, "col_offset": 36, "nodeName": "gold_indices", "type": "List[int]"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "self", "type": "SpanBasedF1Test"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "keys", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "keys", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "keys", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "keys", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 144, "col_offset": 26, "nodeName": "keys", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "keys", "type": "Any"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "metric", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 151, "col_offset": 42, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 152, "col_offset": 42, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 153, "col_offset": 42, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 154, "col_offset": 42, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 155, "col_offset": 42, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 156, "col_offset": 42, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 157, "col_offset": 42, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 158, "col_offset": 42, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 159, "col_offset": 42, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "Metric", "type": "Type[allennlp.training.metrics.metric.Metric]"}, {"lineNumber": 163, "col_offset": 44, "nodeName": "self", "type": "SpanBasedF1Test"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "metric", "type": "allennlp.training.metrics.metric.Metric"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "metric", "type": "allennlp.training.metrics.metric.Metric"}, {"lineNumber": 165, "col_offset": 43, "nodeName": "get_index_to_token_vocabulary", "type": "Callable[..., Dict[int, str]]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "SpanBasedF1Test", "type": "Type[SpanBasedF1Test]"}, {"lineNumber": 14, "col_offset": 31, "nodeName": "self", "type": "SpanBasedF1Test"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 107, "col_offset": 46, "nodeName": "get_vocab_size", "type": "Callable[..., int]"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 144, "col_offset": 26, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 165, "col_offset": 43, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "metric", "type": "Any"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "metric", "type": "Any"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "metric", "type": "Any"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "metric", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "metric", "type": "Any"}, {"lineNumber": 84, "col_offset": 26, "nodeName": "metric", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "self", "type": "SpanBasedF1Test"}, {"lineNumber": 107, "col_offset": 46, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "metric", "type": "Any"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "metric", "type": "Any"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "metric", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "metric", "type": "Any"}, {"lineNumber": 144, "col_offset": 26, "nodeName": "metric", "type": "Any"}, {"lineNumber": 147, "col_offset": 26, "nodeName": "metric", "type": "Any"}, {"lineNumber": 165, "col_offset": 43, "nodeName": "self", "type": "SpanBasedF1Test"}, {"lineNumber": 107, "col_offset": 46, "nodeName": "self", "type": "SpanBasedF1Test"}]