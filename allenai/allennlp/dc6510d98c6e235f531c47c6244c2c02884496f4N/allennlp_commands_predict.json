[{"lineNumber": 51, "col_offset": 0, "nodeName": "get_predictor", "type": "Callable[[argparse.Namespace, Dict[str, str]], allennlp.service.predictors.predictor.Predictor]"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "predict", "type": "Callable[[Dict[str, str]], Any]"}, {"lineNumber": 35, "col_offset": 49, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 51, "col_offset": 75, "nodeName": "Predictor", "type": "Type[allennlp.service.predictors.predictor.Predictor]"}, {"lineNumber": 37, "col_offset": 4, "nodeName": "description", "type": "str"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 35, "col_offset": 49, "nodeName": "argparse", "type": "module"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "model_type", "type": "Any"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "predictor", "type": "allennlp.service.predictors.predictor.Predictor"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "predictor", "type": "allennlp.service.predictors.predictor.Predictor"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "line", "type": "Union[str, bytes]"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "input_file", "type": "IO[Union[str, bytes]]"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "predict_inner", "type": "Callable[[argparse.Namespace], None]"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "_SubParsersAction", "type": "Type[argparse._SubParsersAction]"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "add_parser", "type": "Callable[..., argparse.ArgumentParser]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "set_defaults", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "Namespace", "type": "Type[argparse.Namespace]"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "archive_file", "type": "Any"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "get", "type": "Any"}, {"lineNumber": 54, "col_offset": 7, "nodeName": "model_type", "type": "Any"}, {"lineNumber": 54, "col_offset": 25, "nodeName": "predictors", "type": "Dict[str, str]"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "from_archive", "type": "Callable[[Any, allennlp.models.archival.Archive, str], allennlp.service.predictors.predictor.Predictor]"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "Predictor", "type": "Type[allennlp.service.predictors.predictor.Predictor]"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "IO", "type": "Any"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "predictor", "type": "allennlp.service.predictors.predictor.Predictor"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "output_file", "type": "None"}, {"lineNumber": 34, "col_offset": 26, "nodeName": "argparse", "type": "module"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "parser", "type": "argparse._SubParsersAction"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "description", "type": "str"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 43, "col_offset": 4, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 45, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "argparse", "type": "module"}, {"lineNumber": 51, "col_offset": 56, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 52, "col_offset": 58, "nodeName": "cuda_device", "type": "Any"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "Predictor", "type": "Type[allennlp.service.predictors.predictor.Predictor]"}, {"lineNumber": 56, "col_offset": 48, "nodeName": "predictors", "type": "Dict[str, str]"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "result", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "output", "type": "str"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "print_to_console", "type": "bool"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "output_file", "type": "Optional[IO[Union[str, bytes]]]"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "Namespace", "type": "Type[argparse.Namespace]"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "get_predictor", "type": "Callable[[argparse.Namespace, Dict[str, str]], allennlp.service.predictors.predictor.Predictor]"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "predictors", "type": "Dict[str, str]"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "silent", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "stack", "type": "contextlib.ExitStack"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 41, "col_offset": 68, "nodeName": "FileType", "type": "Type[argparse.FileType]"}, {"lineNumber": 43, "col_offset": 49, "nodeName": "FileType", "type": "Type[argparse.FileType]"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "predict", "type": "Callable[[Dict[str, str]], Any]"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "predictors", "type": "Dict[str, str]"}, {"lineNumber": 52, "col_offset": 58, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "get", "type": "Any"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 55, "col_offset": 79, "nodeName": "model_type", "type": "Any"}, {"lineNumber": 56, "col_offset": 59, "nodeName": "model_type", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "IO", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "isspace", "type": "Callable[[], bool]"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "line", "type": "Union[str, bytes]"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "predict_json", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "data", "type": "Any"}, {"lineNumber": 67, "col_offset": 50, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "result", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "argparse", "type": "module"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "ExitStack", "type": "Type[contextlib.ExitStack]"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "enter_context", "type": "Callable"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "run", "type": "Callable[[allennlp.service.predictors.predictor.Predictor, IO[Any], Optional[IO[Any]], bool, int], None]"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "predictor", "type": "allennlp.service.predictors.predictor.Predictor"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 91, "col_offset": 39, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 91, "col_offset": 69, "nodeName": "cuda_device", "type": "Any"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 35, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 41, "col_offset": 68, "nodeName": "argparse", "type": "module"}, {"lineNumber": 43, "col_offset": 49, "nodeName": "argparse", "type": "module"}, {"lineNumber": 51, "col_offset": 61, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 51, "col_offset": 66, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "config", "type": "allennlp.common.params.Params"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "line", "type": "Union[str, bytes]"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "json", "type": "module"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "predictor", "type": "allennlp.service.predictors.predictor.Predictor"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "json", "type": "module"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "output", "type": "str"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "write", "type": "Callable"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "stack", "type": "contextlib.ExitStack"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "enter_context", "type": "Callable"}, {"lineNumber": 89, "col_offset": 50, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 91, "col_offset": 56, "nodeName": "silent", "type": "Any"}, {"lineNumber": 91, "col_offset": 69, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "output_file", "type": "Optional[IO[Union[str, bytes]]]"}, {"lineNumber": 73, "col_offset": 34, "nodeName": "output", "type": "str"}, {"lineNumber": 89, "col_offset": 30, "nodeName": "stack", "type": "contextlib.ExitStack"}, {"lineNumber": 89, "col_offset": 50, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 91, "col_offset": 56, "nodeName": "args", "type": "argparse.Namespace"}]