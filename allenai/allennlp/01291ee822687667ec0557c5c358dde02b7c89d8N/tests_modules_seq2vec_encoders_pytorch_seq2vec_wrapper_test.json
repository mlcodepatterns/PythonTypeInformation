[{"lineNumber": 15, "col_offset": 32, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "encoder", "type": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "encoder", "type": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "encoder", "type": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "lstm_output", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "encoder", "type": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "packed_sequence", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "reshaped_state", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "encoder", "type": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "results", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "encoder", "type": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "sorted_transposed_state", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "reshaped_state", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "PytorchSeq2VecWrapper", "type": "Type[allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper]"}, {"lineNumber": 18, "col_offset": 40, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "PytorchSeq2VecWrapper", "type": "Type[allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper]"}, {"lineNumber": 22, "col_offset": 40, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "PytorchSeq2VecWrapper", "type": "Type[allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper]"}, {"lineNumber": 28, "col_offset": 40, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 29, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "encoder", "type": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "PytorchSeq2VecWrapper", "type": "Type[allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper]"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "get_lengths_from_binary_sequence_mask", "type": "Callable[[Any], Any]"}, {"lineNumber": 51, "col_offset": 65, "nodeName": "mask", "type": "Any"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "pack_padded_sequence", "type": "Any"}, {"lineNumber": 52, "col_offset": 47, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "state", "type": "Any"}, {"lineNumber": 53, "col_offset": 19, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "packed_sequence", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 57, "col_offset": 40, "nodeName": "cat", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "encoder", "type": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 59, "col_offset": 47, "nodeName": "mask", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "PytorchSeq2VecWrapper", "type": "Type[allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper]"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "encoder", "type": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "mask", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "PytorchSeq2VecWrapper", "type": "Type[allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper]"}, {"lineNumber": 86, "col_offset": 40, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 101, "col_offset": 27, "nodeName": "get_lengths_from_binary_sequence_mask", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 65, "nodeName": "mask", "type": "Any"}, {"lineNumber": 102, "col_offset": 73, "nodeName": "sort_batch_by_length", "type": "Callable[[Any, Any], Tuple[Any, Any, Any, Any]]"}, {"lineNumber": 102, "col_offset": 94, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 103, "col_offset": 94, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "pack_padded_sequence", "type": "Any"}, {"lineNumber": 104, "col_offset": 47, "nodeName": "sorted_inputs", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "state", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "packed_sequence", "type": "Any"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 110, "col_offset": 75, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 112, "col_offset": 40, "nodeName": "cat", "type": "Any"}, {"lineNumber": 114, "col_offset": 25, "nodeName": "encoder", "type": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 114, "col_offset": 47, "nodeName": "mask", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "_", "type": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 52, "col_offset": 61, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 52, "col_offset": 66, "nodeName": "data", "type": "Any"}, {"lineNumber": 57, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 60, "col_offset": 57, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "rand", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 71, "col_offset": 39, "nodeName": "ones", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "all", "type": "Any"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 112, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 115, "col_offset": 57, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "PytorchSeq2VecWrapper", "type": "Type[allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper]"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "encoder", "type": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "encoder", "type": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "encoder", "type": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "encoder", "type": "allennlp.modules.seq2vec_encoders.pytorch_seq2vec_wrapper.PytorchSeq2VecWrapper"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 32, "col_offset": 57, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 52, "col_offset": 66, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 57, "col_offset": 51, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 58, "col_offset": 51, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 60, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 71, "col_offset": 39, "nodeName": "torch", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "all", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "data", "type": "Any"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "sorted_transposed_state", "type": "Any"}, {"lineNumber": 112, "col_offset": 51, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 113, "col_offset": 51, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 115, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 32, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 60, "col_offset": 57, "nodeName": "explicitly_concatenated_state", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "sorted_sequence_lengths", "type": "Any"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 115, "col_offset": 57, "nodeName": "explicitly_concatenated_state", "type": "Any"}, {"lineNumber": 57, "col_offset": 51, "nodeName": "reshaped_state", "type": "Any"}, {"lineNumber": 58, "col_offset": 51, "nodeName": "reshaped_state", "type": "Any"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "state", "type": "Any"}, {"lineNumber": 112, "col_offset": 51, "nodeName": "reshaped_state", "type": "Any"}, {"lineNumber": 113, "col_offset": 51, "nodeName": "reshaped_state", "type": "Any"}, {"lineNumber": 32, "col_offset": 57, "nodeName": "lstm_output", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "results", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "results", "type": "Any"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "i", "type": "int"}]