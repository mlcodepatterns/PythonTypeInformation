[{"lineNumber": 19, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 177, "col_offset": 78, "nodeName": "GrammarStatelet", "type": "Type[allennlp.state_machines.states.grammar_statelet.GrammarStatelet[Any]]"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "_sentence_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "sentence_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "_denotation_accuracy", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "_consistency", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "_rule_namespace", "type": "str"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "rule_namespace", "type": "str"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "_first_action_embedding", "type": "Any"}, {"lineNumber": 79, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "embedded_input", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "sentence_mask", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "encoder_outputs", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "memory_cell", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "encoder_outputs_list", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "sentence_mask_list", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "initial_rnn_state", "type": "List[allennlp.state_machines.states.rnn_statelet.RnnStatelet]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "initial_rnn_state", "type": "List[allennlp.state_machines.states.rnn_statelet.RnnStatelet]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "labels_data", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "label_strings", "type": "List[List[str]]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "instance_labels_data", "type": "Any"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "labels_data", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "label_strings", "type": "List[List[str]]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "all_action_strings", "type": "List[Union[List[List[str]], List[List[Union[Any, str]]]]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "all_action_strings", "type": "List[Union[List[List[str]], List[List[Union[Any, str]]]]]"}, {"lineNumber": 126, "col_offset": 75, "nodeName": "List", "type": "Any"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "all_denotations", "type": "List[List[List[str]]]"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "all_denotations", "type": "List[List[List[str]]]"}, {"lineNumber": 146, "col_offset": 59, "nodeName": "List", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "is_correct", "type": "List[bool]"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "is_correct", "type": "List[bool]"}, {"lineNumber": 167, "col_offset": 54, "nodeName": "List", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "valid_actions", "type": "Dict[str, List[str]]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "action_mapping", "type": "Dict[str, int]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "translated_valid_actions", "type": "Dict[str, Union[Dict[str, Union[Tuple[Any, Any, List[int]], Tuple[Any, Any, List[Any]]]], Dict[str, Tuple[Any, Any, List[Any]]]]]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "best_action_strings", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "world", "type": "allennlp.semparse.worlds.nlvr_world.NlvrWorld"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "logical_forms", "type": "List[List[str]]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "instance_action_sequences", "type": "Any"}, {"lineNumber": 213, "col_offset": 41, "nodeName": "best_action_strings", "type": "Any"}, {"lineNumber": 221, "col_offset": 38, "nodeName": "logical_forms", "type": "List[List[str]]"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 203, "col_offset": 62, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "instance_label_strings", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "history", "type": "List[int]"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "all_actions", "type": "List[Tuple[str, bool, Any]]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "action_sequence", "type": "List[str]"}, {"lineNumber": 224, "col_offset": 93, "nodeName": "List", "type": "Any"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "NlvrSemanticParser"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "NlvrSemanticParser"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "Average", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "NlvrSemanticParser"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "Average", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "NlvrSemanticParser"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "dropout", "type": "float"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "_dropout", "type": "Callable[[Any], Any]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "NlvrSemanticParser"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "NlvrSemanticParser"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "NlvrSemanticParser"}, {"lineNumber": 72, "col_offset": 39, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "normal_", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "_first_action_embedding", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "_sentence_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 82, "col_offset": 49, "nodeName": "sentence", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "float", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "get_final_encoder_states", "type": "Callable[..., Any]"}, {"lineNumber": 91, "col_offset": 61, "nodeName": "encoder_outputs", "type": "Any"}, {"lineNumber": 92, "col_offset": 61, "nodeName": "sentence_mask", "type": "Any"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "new_zeros", "type": "Any"}, {"lineNumber": 94, "col_offset": 48, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "attend_on_question", "type": "Any"}, {"lineNumber": 95, "col_offset": 69, "nodeName": "final_encoder_output", "type": "Any"}, {"lineNumber": 96, "col_offset": 69, "nodeName": "encoder_outputs", "type": "Any"}, {"lineNumber": 96, "col_offset": 86, "nodeName": "sentence_mask", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "label", "type": "Any"}, {"lineNumber": 115, "col_offset": 25, "nodeName": "instance_labels_data", "type": "Any"}, {"lineNumber": 133, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "possible_actions", "type": "List[List[Tuple[str, bool, Any]]]"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 134, "col_offset": 23, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "batch_actions", "type": "List[Tuple[str, bool, Any]]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "batch_best_sequences", "type": "Union[List[List[int]], List[nothing]]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "instance_worlds", "type": "List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "instance_action_sequences", "type": "List[List[str]]"}, {"lineNumber": 148, "col_offset": 58, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 148, "col_offset": 62, "nodeName": "worlds", "type": "List[List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]]"}, {"lineNumber": 148, "col_offset": 70, "nodeName": "action_strings", "type": "List[List[List[str]]]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "denotations", "type": "List[List[str]]"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "instance_action_strings", "type": "List[str]"}, {"lineNumber": 150, "col_offset": 43, "nodeName": "instance_action_sequences", "type": "List[List[str]]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "world", "type": "allennlp.semparse.worlds.nlvr_world.NlvrWorld"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "label", "type": "str"}, {"lineNumber": 169, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "worlds", "type": "List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]"}, {"lineNumber": 169, "col_offset": 40, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "denotation", "type": "bool"}, {"lineNumber": 167, "col_offset": 59, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 176, "col_offset": 37, "nodeName": "NlvrWorld", "type": "Type[allennlp.semparse.worlds.nlvr_world.NlvrWorld]"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "get_valid_actions", "type": "Callable[[], Dict[str, List[str]]]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "action", "type": "Tuple[str, bool, Any]"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "possible_actions", "type": "List[Tuple[str, bool, Any]]"}, {"lineNumber": 181, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 183, "col_offset": 17, "nodeName": "action_strings", "type": "List[str]"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "items", "type": "Callable"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "action_indices", "type": "List[int]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "global_actions", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "global_action_tensor", "type": "Any"}, {"lineNumber": 194, "col_offset": 12, "nodeName": "global_input_embeddings", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "GrammarStatelet", "type": "Type[allennlp.state_machines.states.grammar_statelet.GrammarStatelet[Any]]"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "translated_valid_actions", "type": "Dict[str, Union[Dict[str, Union[Tuple[Any, Any, List[int]], Tuple[Any, Any, List[Any]]]], Dict[str, Tuple[Any, Any, List[Any]]]]]"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 209, "col_offset": 30, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "NlvrWorld", "type": "Type[allennlp.semparse.worlds.nlvr_world.NlvrWorld]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "instance_logical_forms", "type": "List[str]"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "action_strings", "type": "Any"}, {"lineNumber": 215, "col_offset": 34, "nodeName": "instance_action_sequences", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 224, "col_offset": 46, "nodeName": "GrammarBasedState", "type": "Type[allennlp.state_machines.states.grammar_based_state.GrammarBasedState]"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "is_finished", "type": "Callable[[], bool]"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "batch_indices", "type": "List[int]"}, {"lineNumber": 232, "col_offset": 33, "nodeName": "extras", "type": "List[Any]"}, {"lineNumber": 233, "col_offset": 18, "nodeName": "action_history", "type": "List[List[int]]"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "possible_actions", "type": "List[List[Tuple[str, bool, Any]]]"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "_check_denotation", "type": "Callable[[List[str], List[str], List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]], List[bool]]"}, {"lineNumber": 236, "col_offset": 38, "nodeName": "action_sequence", "type": "List[str]"}, {"lineNumber": 236, "col_offset": 55, "nodeName": "instance_label_strings", "type": "Any"}, {"lineNumber": 236, "col_offset": 79, "nodeName": "worlds", "type": "List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]"}, {"lineNumber": 224, "col_offset": 98, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 55, "col_offset": 55, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "NlvrSemanticParser"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "self", "type": "NlvrSemanticParser"}, {"lineNumber": 64, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 68, "col_offset": 56, "nodeName": "action_embedding_dim", "type": "int"}, {"lineNumber": 72, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 72, "col_offset": 58, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 72, "col_offset": 76, "nodeName": "action_embedding_dim", "type": "int"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "init", "type": "Any"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "self", "type": "NlvrSemanticParser"}, {"lineNumber": 81, "col_offset": 47, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "self", "type": "NlvrSemanticParser"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "embedded_input", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "self", "type": "NlvrSemanticParser"}, {"lineNumber": 89, "col_offset": 40, "nodeName": "_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 89, "col_offset": 54, "nodeName": "embedded_input", "type": "Any"}, {"lineNumber": 89, "col_offset": 70, "nodeName": "sentence_mask", "type": "Any"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "util", "type": "module"}, {"lineNumber": 93, "col_offset": 61, "nodeName": "is_bidirectional", "type": "Callable[[], bool]"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "encoder_outputs", "type": "Any"}, {"lineNumber": 94, "col_offset": 60, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "_decoder_step", "type": "Any"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "encoder_outputs", "type": "Any"}, {"lineNumber": 97, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "sentence_mask", "type": "Any"}, {"lineNumber": 98, "col_offset": 51, "nodeName": "i", "type": "int"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "label_int", "type": "int"}, {"lineNumber": 125, "col_offset": 46, "nodeName": "List", "type": "Any"}, {"lineNumber": 126, "col_offset": 44, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "possible_actions", "type": "List[List[Tuple[str, bool, Any]]]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 141, "col_offset": 38, "nodeName": "action_strings", "type": "List[List[Union[Any, str]]]"}, {"lineNumber": 126, "col_offset": 80, "nodeName": "List", "type": "Any"}, {"lineNumber": 145, "col_offset": 41, "nodeName": "List", "type": "Any"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "List", "type": "Any"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "instance_denotations", "type": "List[str]"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "world", "type": "allennlp.semparse.worlds.nlvr_world.NlvrWorld"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "instance_worlds", "type": "List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "denotations", "type": "List[List[str]]"}, {"lineNumber": 146, "col_offset": 64, "nodeName": "List", "type": "Any"}, {"lineNumber": 165, "col_offset": 43, "nodeName": "List", "type": "Any"}, {"lineNumber": 166, "col_offset": 34, "nodeName": "List", "type": "Any"}, {"lineNumber": 167, "col_offset": 34, "nodeName": "List", "type": "Any"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "get_logical_form", "type": "Callable[..., str]"}, {"lineNumber": 170, "col_offset": 50, "nodeName": "action_sequence", "type": "List[str]"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 171, "col_offset": 39, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 177, "col_offset": 48, "nodeName": "List", "type": "Any"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "world", "type": "allennlp.semparse.worlds.nlvr_world.NlvrWorld"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "action_mapping", "type": "Dict[str, int]"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "valid_actions", "type": "Dict[str, List[str]]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "translated_valid_actions", "type": "Dict[str, Union[Dict[str, Union[Tuple[Any, Any, List[int]], Tuple[Any, Any, List[Any]]]], Dict[str, Tuple[Any, Any, List[Any]]]]]"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "global_action_tensors", "type": "Any"}, {"lineNumber": 192, "col_offset": 35, "nodeName": "global_action_ids", "type": "Any"}, {"lineNumber": 192, "col_offset": 55, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 193, "col_offset": 35, "nodeName": "cat", "type": "Any"}, {"lineNumber": 193, "col_offset": 45, "nodeName": "global_action_tensors", "type": "Any"}, {"lineNumber": 194, "col_offset": 38, "nodeName": "_action_embedder", "type": "Any"}, {"lineNumber": 194, "col_offset": 60, "nodeName": "global_action_tensor", "type": "Any"}, {"lineNumber": 195, "col_offset": 55, "nodeName": "global_input_embeddings", "type": "Any"}, {"lineNumber": 196, "col_offset": 55, "nodeName": "global_input_embeddings", "type": "Any"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "START_SYMBOL", "type": "str"}, {"lineNumber": 200, "col_offset": 31, "nodeName": "type_declaration", "type": "module"}, {"lineNumber": 203, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "action_strings", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 220, "col_offset": 33, "nodeName": "instance_logical_forms", "type": "List[str]"}, {"lineNumber": 203, "col_offset": 67, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 203, "col_offset": 72, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 224, "col_offset": 73, "nodeName": "List", "type": "Any"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "state", "type": "allennlp.state_machines.states.grammar_based_state.GrammarBasedState"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "state", "type": "allennlp.state_machines.states.grammar_based_state.GrammarBasedState"}, {"lineNumber": 232, "col_offset": 33, "nodeName": "state", "type": "allennlp.state_machines.states.grammar_based_state.GrammarBasedState"}, {"lineNumber": 232, "col_offset": 46, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 233, "col_offset": 18, "nodeName": "state", "type": "allennlp.state_machines.states.grammar_based_state.GrammarBasedState"}, {"lineNumber": 234, "col_offset": 22, "nodeName": "state", "type": "allennlp.state_machines.states.grammar_based_state.GrammarBasedState"}, {"lineNumber": 235, "col_offset": 54, "nodeName": "action", "type": "int"}, {"lineNumber": 235, "col_offset": 64, "nodeName": "history", "type": "List[int]"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "self", "type": "NlvrSemanticParser"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 55, "col_offset": 14, "nodeName": "NlvrSemanticParser", "type": "Type[NlvrSemanticParser]"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "self", "type": "NlvrSemanticParser"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "nn", "type": "Any"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "dropout", "type": "float"}, {"lineNumber": 67, "col_offset": 57, "nodeName": "get_vocab_size", "type": "Callable[..., int]"}, {"lineNumber": 67, "col_offset": 78, "nodeName": "_rule_namespace", "type": "str"}, {"lineNumber": 72, "col_offset": 39, "nodeName": "torch", "type": "Any"}, {"lineNumber": 72, "col_offset": 58, "nodeName": "torch", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "nn", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "get_text_field_mask", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 49, "nodeName": "sentence", "type": "Dict[str, Any]"}, {"lineNumber": 89, "col_offset": 40, "nodeName": "self", "type": "NlvrSemanticParser"}, {"lineNumber": 93, "col_offset": 61, "nodeName": "_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 94, "col_offset": 60, "nodeName": "_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "self", "type": "NlvrSemanticParser"}, {"lineNumber": 97, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 97, "col_offset": 60, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 97, "col_offset": 66, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 98, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 98, "col_offset": 56, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 98, "col_offset": 62, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "initial_rnn_state", "type": "List[allennlp.state_machines.states.rnn_statelet.RnnStatelet]"}, {"lineNumber": 101, "col_offset": 37, "nodeName": "RnnStatelet", "type": "Type[allennlp.state_machines.states.rnn_statelet.RnnStatelet]"}, {"lineNumber": 103, "col_offset": 49, "nodeName": "_first_action_embedding", "type": "Any"}, {"lineNumber": 105, "col_offset": 49, "nodeName": "encoder_outputs_list", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 49, "nodeName": "sentence_mask_list", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "detach", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "label_strings", "type": "List[List[str]]"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "label", "type": "Any"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "label_int", "type": "int"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 135, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 136, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 136, "col_offset": 61, "nodeName": "action_indices", "type": "Dict[int, List[List[int]]]"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "action_indices", "type": "Dict[int, List[List[int]]]"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "sequence", "type": "List[int]"}, {"lineNumber": 140, "col_offset": 46, "nodeName": "batch_best_sequences", "type": "Union[List[nothing], List[List[int]]]"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "all_action_strings", "type": "List[Union[List[List[str]], List[List[Union[Any, str]]]]]"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "instance_action_strings", "type": "List[str]"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "get_logical_form", "type": "Callable[..., str]"}, {"lineNumber": 153, "col_offset": 67, "nodeName": "instance_action_strings", "type": "List[str]"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 160, "col_offset": 35, "nodeName": "instance_denotations", "type": "List[str]"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "all_denotations", "type": "List[List[List[str]]]"}, {"lineNumber": 165, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 166, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "NlvrWorld", "type": "Type[allennlp.semparse.worlds.nlvr_world.NlvrWorld]"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "world", "type": "allennlp.semparse.worlds.nlvr_world.NlvrWorld"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "world", "type": "allennlp.semparse.worlds.nlvr_world.NlvrWorld"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "is_correct", "type": "List[bool]"}, {"lineNumber": 172, "col_offset": 57, "nodeName": "label", "type": "str"}, {"lineNumber": 177, "col_offset": 53, "nodeName": "ProductionRuleArray", "type": "Type[Tuple[str, bool, Any]]"}, {"lineNumber": 184, "col_offset": 37, "nodeName": "key", "type": "str"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "action_mapping", "type": "Dict[str, int]"}, {"lineNumber": 187, "col_offset": 64, "nodeName": "action_string", "type": "str"}, {"lineNumber": 187, "col_offset": 81, "nodeName": "action_strings", "type": "List[str]"}, {"lineNumber": 189, "col_offset": 59, "nodeName": "index", "type": "int"}, {"lineNumber": 189, "col_offset": 70, "nodeName": "index", "type": "int"}, {"lineNumber": 189, "col_offset": 79, "nodeName": "action_indices", "type": "List[int]"}, {"lineNumber": 192, "col_offset": 60, "nodeName": "global_actions", "type": "List[Tuple[Any, int]]"}, {"lineNumber": 193, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 194, "col_offset": 38, "nodeName": "self", "type": "NlvrSemanticParser"}, {"lineNumber": 197, "col_offset": 55, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 197, "col_offset": 60, "nodeName": "global_action_ids", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "logical_forms", "type": "List[List[str]]"}, {"lineNumber": 203, "col_offset": 72, "nodeName": "torch", "type": "Any"}, {"lineNumber": 224, "col_offset": 78, "nodeName": "NlvrWorld", "type": "Type[allennlp.semparse.worlds.nlvr_world.NlvrWorld]"}, {"lineNumber": 235, "col_offset": 27, "nodeName": "all_actions", "type": "List[Tuple[str, bool, Any]]"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 67, "col_offset": 57, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 81, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 81, "col_offset": 57, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 84, "col_offset": 24, "nodeName": "util", "type": "module"}, {"lineNumber": 93, "col_offset": 61, "nodeName": "self", "type": "NlvrSemanticParser"}, {"lineNumber": 94, "col_offset": 60, "nodeName": "self", "type": "NlvrSemanticParser"}, {"lineNumber": 101, "col_offset": 49, "nodeName": "final_encoder_output", "type": "Any"}, {"lineNumber": 102, "col_offset": 49, "nodeName": "memory_cell", "type": "Any"}, {"lineNumber": 103, "col_offset": 49, "nodeName": "self", "type": "NlvrSemanticParser"}, {"lineNumber": 104, "col_offset": 49, "nodeName": "attended_sentence", "type": "Any"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "labels", "type": "Any"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "get_token_from_index", "type": "Callable[..., str]"}, {"lineNumber": 120, "col_offset": 73, "nodeName": "label_int", "type": "int"}, {"lineNumber": 125, "col_offset": 51, "nodeName": "List", "type": "Any"}, {"lineNumber": 126, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 136, "col_offset": 50, "nodeName": "i", "type": "int"}, {"lineNumber": 139, "col_offset": 61, "nodeName": "rule_id", "type": "int"}, {"lineNumber": 126, "col_offset": 85, "nodeName": "List", "type": "Any"}, {"lineNumber": 145, "col_offset": 46, "nodeName": "List", "type": "Any"}, {"lineNumber": 146, "col_offset": 38, "nodeName": "List", "type": "Any"}, {"lineNumber": 158, "col_offset": 23, "nodeName": "world", "type": "allennlp.semparse.worlds.nlvr_world.NlvrWorld"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "denotations", "type": "List[List[str]]"}, {"lineNumber": 146, "col_offset": 69, "nodeName": "List", "type": "Any"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "action", "type": "Tuple[str, bool, Any]"}, {"lineNumber": 187, "col_offset": 45, "nodeName": "action_string", "type": "str"}, {"lineNumber": 203, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 203, "col_offset": 44, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 235, "col_offset": 39, "nodeName": "action", "type": "int"}, {"lineNumber": 81, "col_offset": 57, "nodeName": "torch", "type": "Any"}, {"lineNumber": 101, "col_offset": 70, "nodeName": "i", "type": "int"}, {"lineNumber": 102, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 104, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "label_strings", "type": "List[List[str]]"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 125, "col_offset": 56, "nodeName": "ProductionRuleArray", "type": "Type[Tuple[str, bool, Any]]"}, {"lineNumber": 126, "col_offset": 54, "nodeName": "List", "type": "Any"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "batch_actions", "type": "List[Tuple[str, bool, Any]]"}, {"lineNumber": 126, "col_offset": 90, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 146, "col_offset": 43, "nodeName": "NlvrWorld", "type": "Type[allennlp.semparse.worlds.nlvr_world.NlvrWorld]"}, {"lineNumber": 153, "col_offset": 31, "nodeName": "instance_worlds", "type": "List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 146, "col_offset": 74, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 189, "col_offset": 31, "nodeName": "possible_actions", "type": "List[Tuple[str, bool, Any]]"}, {"lineNumber": 203, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 217, "col_offset": 20, "nodeName": "instance_logical_forms", "type": "List[str]"}, {"lineNumber": 217, "col_offset": 50, "nodeName": "get_logical_form", "type": "Callable[..., str]"}, {"lineNumber": 217, "col_offset": 73, "nodeName": "action_strings", "type": "Any"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "instance_logical_forms", "type": "List[str]"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "self", "type": "NlvrSemanticParser"}, {"lineNumber": 139, "col_offset": 45, "nodeName": "rule_id", "type": "int"}, {"lineNumber": 145, "col_offset": 51, "nodeName": "List", "type": "Any"}, {"lineNumber": 159, "col_offset": 24, "nodeName": "instance_denotations", "type": "List[str]"}, {"lineNumber": 159, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "denotation", "type": "bool"}, {"lineNumber": 189, "col_offset": 48, "nodeName": "index", "type": "int"}, {"lineNumber": 217, "col_offset": 50, "nodeName": "world", "type": "allennlp.semparse.worlds.nlvr_world.NlvrWorld"}, {"lineNumber": 126, "col_offset": 59, "nodeName": "List", "type": "Any"}, {"lineNumber": 145, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 159, "col_offset": 56, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 159, "col_offset": 70, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 126, "col_offset": 64, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 159, "col_offset": 56, "nodeName": "world", "type": "allennlp.semparse.worlds.nlvr_world.NlvrWorld"}]