[{"lineNumber": 369, "col_offset": 0, "nodeName": "convert_bio_tags_to_conll_format", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 311, "col_offset": 4, "nodeName": "conll_formatted_predictions", "type": "List[str]"}, {"lineNumber": 312, "col_offset": 4, "nodeName": "conll_formatted_gold_labels", "type": "List[str]"}, {"lineNumber": 354, "col_offset": 4, "nodeName": "verb_only_sentence", "type": "List[Any]"}, {"lineNumber": 355, "col_offset": 7, "nodeName": "verb_index", "type": "Optional[int]"}, {"lineNumber": 392, "col_offset": 4, "nodeName": "sentence_length", "type": "int"}, {"lineNumber": 393, "col_offset": 4, "nodeName": "conll_labels", "type": "List[str]"}, {"lineNumber": 408, "col_offset": 11, "nodeName": "conll_labels", "type": "List[str]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 67, "col_offset": 35, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "span_metric", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "binary_feature_embedding", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "embedding_dropout", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "_label_smoothing", "type": "float"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "label_smoothing", "type": "float"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "ignore_span_metric", "type": "bool"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "ignore_span_metric", "type": "bool"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "embedded_verb_indicator", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "embedded_text_with_verb_indicator", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "reshaped_log_probs", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "mask", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 93, "col_offset": 58, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "all_predictions", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "all_tags", "type": "List[List[Any]]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "transition_matrix", "type": "Any"}, {"lineNumber": 188, "col_offset": 30, "nodeName": "all_tags", "type": "List[List[Any]]"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 168, "col_offset": 62, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "ignore_span_metric", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "all_labels", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "num_labels", "type": "int"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "transition_matrix", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "transition_matrix", "type": "Any"}, {"lineNumber": 230, "col_offset": 46, "nodeName": "TextIO", "type": "Type[TextIO]"}, {"lineNumber": 231, "col_offset": 40, "nodeName": "TextIO", "type": "Type[TextIO]"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 269, "col_offset": 18, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 270, "col_offset": 4, "nodeName": "write_bio_formatted_tags_to_file", "type": "Callable[[TextIO, TextIO, Optional[int], List[str], List[str], List[str]], Any]"}, {"lineNumber": 270, "col_offset": 37, "nodeName": "prediction_file", "type": "TextIO"}, {"lineNumber": 271, "col_offset": 37, "nodeName": "gold_file", "type": "TextIO"}, {"lineNumber": 272, "col_offset": 37, "nodeName": "verb_index", "type": "Optional[int]"}, {"lineNumber": 273, "col_offset": 37, "nodeName": "sentence", "type": "List[str]"}, {"lineNumber": 274, "col_offset": 37, "nodeName": "prediction", "type": "List[str]"}, {"lineNumber": 275, "col_offset": 37, "nodeName": "gold_labels", "type": "List[str]"}, {"lineNumber": 278, "col_offset": 54, "nodeName": "TextIO", "type": "Type[TextIO]"}, {"lineNumber": 279, "col_offset": 48, "nodeName": "TextIO", "type": "Type[TextIO]"}, {"lineNumber": 311, "col_offset": 34, "nodeName": "convert_bio_tags_to_conll_format", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 311, "col_offset": 67, "nodeName": "prediction", "type": "List[str]"}, {"lineNumber": 312, "col_offset": 34, "nodeName": "convert_bio_tags_to_conll_format", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 312, "col_offset": 67, "nodeName": "gold_labels", "type": "List[str]"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "write_conll_formatted_tags_to_file", "type": "Callable[[TextIO, TextIO, Optional[int], List[str], List[str], List[str]], Any]"}, {"lineNumber": 313, "col_offset": 39, "nodeName": "prediction_file", "type": "TextIO"}, {"lineNumber": 314, "col_offset": 39, "nodeName": "gold_file", "type": "TextIO"}, {"lineNumber": 315, "col_offset": 39, "nodeName": "verb_index", "type": "Optional[int]"}, {"lineNumber": 316, "col_offset": 39, "nodeName": "sentence", "type": "List[str]"}, {"lineNumber": 317, "col_offset": 39, "nodeName": "conll_formatted_predictions", "type": "List[str]"}, {"lineNumber": 318, "col_offset": 39, "nodeName": "conll_formatted_gold_labels", "type": "List[str]"}, {"lineNumber": 321, "col_offset": 56, "nodeName": "TextIO", "type": "Type[TextIO]"}, {"lineNumber": 322, "col_offset": 50, "nodeName": "TextIO", "type": "Type[TextIO]"}, {"lineNumber": 358, "col_offset": 33, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 358, "col_offset": 37, "nodeName": "verb_only_sentence", "type": "List[Any]"}, {"lineNumber": 359, "col_offset": 37, "nodeName": "conll_formatted_predictions", "type": "List[str]"}, {"lineNumber": 360, "col_offset": 37, "nodeName": "conll_formatted_gold_labels", "type": "List[str]"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "write", "type": "Callable"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "write", "type": "Callable"}, {"lineNumber": 392, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 392, "col_offset": 26, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 394, "col_offset": 11, "nodeName": "label", "type": "str"}, {"lineNumber": 394, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 394, "col_offset": 30, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 398, "col_offset": 8, "nodeName": "new_label", "type": "str"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 64, "col_offset": 37, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 65, "col_offset": 57, "nodeName": "regularizer", "type": "Optional[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "get_vocab_size", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "SpanBasedF1Measure", "type": "Any"}, {"lineNumber": 72, "col_offset": 46, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 40, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 76, "col_offset": 53, "nodeName": "binary_feature_dim", "type": "int"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "check_dimensions_match", "type": "Callable[[int, int, str, str], None]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "embedding_dropout", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "get_text_field_mask", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 35, "nodeName": "tokens", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "binary_feature_embedding", "type": "Any"}, {"lineNumber": 136, "col_offset": 44, "nodeName": "cat", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 137, "col_offset": 20, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 137, "col_offset": 37, "nodeName": "_", "type": "Any"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "size", "type": "Any"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 139, "col_offset": 36, "nodeName": "embedded_text_with_verb_indicator", "type": "Any"}, {"lineNumber": 139, "col_offset": 71, "nodeName": "mask", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "tag_projection_layer", "type": "Any"}, {"lineNumber": 141, "col_offset": 43, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "view", "type": "Any"}, {"lineNumber": 142, "col_offset": 45, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "view", "type": "Any"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "logits", "type": "Any"}, {"lineNumber": 146, "col_offset": 64, "nodeName": "class_probabilities", "type": "Any"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "tags", "type": "Any"}, {"lineNumber": 154, "col_offset": 34, "nodeName": "loss", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "words", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "verbs", "type": "Any"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 174, "col_offset": 26, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 175, "col_offset": 27, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "predictions_list", "type": "List[Any]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "predictions_list", "type": "List[Any]"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "get_viterbi_pairwise_potentials", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "length", "type": "Any"}, {"lineNumber": 183, "col_offset": 35, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 183, "col_offset": 39, "nodeName": "predictions_list", "type": "List[Any]"}, {"lineNumber": 183, "col_offset": 57, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 191, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "get_index_to_token_vocabulary", "type": "Any"}, {"lineNumber": 218, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "all_labels", "type": "Any"}, {"lineNumber": 219, "col_offset": 28, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 221, "col_offset": 15, "nodeName": "previous_label", "type": "Any"}, {"lineNumber": 221, "col_offset": 33, "nodeName": "items", "type": "Any"}, {"lineNumber": 232, "col_offset": 41, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 233, "col_offset": 39, "nodeName": "List", "type": "Any"}, {"lineNumber": 234, "col_offset": 41, "nodeName": "List", "type": "Any"}, {"lineNumber": 235, "col_offset": 42, "nodeName": "List", "type": "Any"}, {"lineNumber": 267, "col_offset": 4, "nodeName": "warnings", "type": "module"}, {"lineNumber": 280, "col_offset": 49, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 281, "col_offset": 47, "nodeName": "List", "type": "Any"}, {"lineNumber": 282, "col_offset": 49, "nodeName": "List", "type": "Any"}, {"lineNumber": 283, "col_offset": 50, "nodeName": "List", "type": "Any"}, {"lineNumber": 323, "col_offset": 51, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 324, "col_offset": 49, "nodeName": "List", "type": "Any"}, {"lineNumber": 325, "col_offset": 68, "nodeName": "List", "type": "Any"}, {"lineNumber": 326, "col_offset": 68, "nodeName": "List", "type": "Any"}, {"lineNumber": 354, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 354, "col_offset": 37, "nodeName": "sentence", "type": "List[str]"}, {"lineNumber": 356, "col_offset": 8, "nodeName": "verb_only_sentence", "type": "List[Any]"}, {"lineNumber": 356, "col_offset": 41, "nodeName": "sentence", "type": "List[str]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 365, "col_offset": 4, "nodeName": "prediction_file", "type": "TextIO"}, {"lineNumber": 366, "col_offset": 4, "nodeName": "gold_file", "type": "TextIO"}, {"lineNumber": 369, "col_offset": 45, "nodeName": "List", "type": "Any"}, {"lineNumber": 395, "col_offset": 11, "nodeName": "label", "type": "str"}, {"lineNumber": 402, "col_offset": 12, "nodeName": "new_label", "type": "str"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "new_label", "type": "str"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 407, "col_offset": 28, "nodeName": "new_label", "type": "str"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 77, "col_offset": 52, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 78, "col_offset": 59, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 79, "col_offset": 43, "nodeName": "embedding_dropout", "type": "float"}, {"lineNumber": 83, "col_offset": 70, "nodeName": "binary_feature_dim", "type": "int"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "List", "type": "Any"}, {"lineNumber": 131, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 53, "nodeName": "text_field_embedder", "type": "Any"}, {"lineNumber": 131, "col_offset": 78, "nodeName": "tokens", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 64, "nodeName": "long", "type": "Any"}, {"lineNumber": 136, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 136, "col_offset": 55, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 136, "col_offset": 76, "nodeName": "embedded_verb_indicator", "type": "Any"}, {"lineNumber": 137, "col_offset": 41, "nodeName": "embedded_text_with_verb_indicator", "type": "Any"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "logits", "type": "Any"}, {"lineNumber": 142, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 74, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 144, "col_offset": 74, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 145, "col_offset": 74, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "sequence_cross_entropy_with_logits", "type": "Callable[..., Any]"}, {"lineNumber": 148, "col_offset": 54, "nodeName": "logits", "type": "Any"}, {"lineNumber": 149, "col_offset": 54, "nodeName": "tags", "type": "Any"}, {"lineNumber": 150, "col_offset": 54, "nodeName": "mask", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "ignore_span_metric", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 163, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 163, "col_offset": 40, "nodeName": "words", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 164, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 164, "col_offset": 39, "nodeName": "verbs", "type": "Any"}, {"lineNumber": 93, "col_offset": 63, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 93, "col_offset": 68, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 175, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "dim", "type": "Any"}, {"lineNumber": 180, "col_offset": 32, "nodeName": "all_predictions", "type": "Any"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "max_likelihood_sequence", "type": "List[int]"}, {"lineNumber": 184, "col_offset": 37, "nodeName": "_", "type": "Any"}, {"lineNumber": 184, "col_offset": 41, "nodeName": "viterbi_decode", "type": "Callable[..., Tuple[List[int], Any]]"}, {"lineNumber": 184, "col_offset": 78, "nodeName": "transition_matrix", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "tags", "type": "List[Any]"}, {"lineNumber": 168, "col_offset": 67, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 168, "col_offset": 72, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 198, "col_offset": 26, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 202, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 219, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 219, "col_offset": 41, "nodeName": "num_labels", "type": "int"}, {"lineNumber": 219, "col_offset": 53, "nodeName": "num_labels", "type": "int"}, {"lineNumber": 221, "col_offset": 33, "nodeName": "all_labels", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "j", "type": "Any"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "label", "type": "Any"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "items", "type": "Any"}, {"lineNumber": 232, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 233, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 234, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 235, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 280, "col_offset": 58, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 281, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 282, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 283, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 323, "col_offset": 60, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 324, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 325, "col_offset": 73, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 326, "col_offset": 73, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 356, "col_offset": 27, "nodeName": "verb_index", "type": "Optional[int]"}, {"lineNumber": 356, "col_offset": 50, "nodeName": "verb_index", "type": "Optional[int]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "prediction_file", "type": "TextIO"}, {"lineNumber": 361, "col_offset": 30, "nodeName": "ljust", "type": "Any"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "prediction_file", "type": "TextIO"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "gold_file", "type": "TextIO"}, {"lineNumber": 363, "col_offset": 24, "nodeName": "ljust", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "gold_file", "type": "TextIO"}, {"lineNumber": 369, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 401, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 402, "col_offset": 42, "nodeName": "new_label", "type": "str"}, {"lineNumber": 405, "col_offset": 11, "nodeName": "i", "type": "int"}, {"lineNumber": 406, "col_offset": 24, "nodeName": "new_label", "type": "str"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "conll_labels", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "SemanticRoleLabeler", "type": "Any"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 59, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 78, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 131, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 64, "nodeName": "verb_indicator", "type": "Any"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 143, "col_offset": 40, "nodeName": "reshaped_log_probs", "type": "Any"}, {"lineNumber": 145, "col_offset": 74, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 70, "nodeName": "_label_smoothing", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "span_metric", "type": "Any"}, {"lineNumber": 153, "col_offset": 33, "nodeName": "class_probabilities", "type": "Any"}, {"lineNumber": 153, "col_offset": 54, "nodeName": "tags", "type": "Any"}, {"lineNumber": 153, "col_offset": 60, "nodeName": "mask", "type": "Any"}, {"lineNumber": 93, "col_offset": 68, "nodeName": "torch", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "all_predictions", "type": "Any"}, {"lineNumber": 178, "col_offset": 32, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 178, "col_offset": 70, "nodeName": "i", "type": "int"}, {"lineNumber": 184, "col_offset": 56, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "x", "type": "int"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "max_likelihood_sequence", "type": "List[int]"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "all_tags", "type": "List[List[Any]]"}, {"lineNumber": 168, "col_offset": 72, "nodeName": "torch", "type": "Any"}, {"lineNumber": 198, "col_offset": 26, "nodeName": "span_metric", "type": "Any"}, {"lineNumber": 198, "col_offset": 60, "nodeName": "reset", "type": "bool"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 222, "col_offset": 28, "nodeName": "all_labels", "type": "Any"}, {"lineNumber": 361, "col_offset": 30, "nodeName": "word", "type": "Any"}, {"lineNumber": 362, "col_offset": 30, "nodeName": "rjust", "type": "Any"}, {"lineNumber": 363, "col_offset": 24, "nodeName": "word", "type": "Any"}, {"lineNumber": 364, "col_offset": 24, "nodeName": "rjust", "type": "Any"}, {"lineNumber": 396, "col_offset": 12, "nodeName": "conll_labels", "type": "List[str]"}, {"lineNumber": 401, "col_offset": 11, "nodeName": "label", "type": "str"}, {"lineNumber": 401, "col_offset": 40, "nodeName": "label", "type": "str"}, {"lineNumber": 405, "col_offset": 16, "nodeName": "sentence_length", "type": "int"}, {"lineNumber": 405, "col_offset": 66, "nodeName": "label", "type": "str"}, {"lineNumber": 77, "col_offset": 59, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "F", "type": "Any"}, {"lineNumber": 151, "col_offset": 70, "nodeName": "self", "type": "Any"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 57, "nodeName": "x", "type": "Dict[str, Any]"}, {"lineNumber": 161, "col_offset": 62, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 168, "col_offset": 44, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 175, "col_offset": 27, "nodeName": "get_lengths_from_binary_sequence_mask", "type": "Callable[[Any], Any]"}, {"lineNumber": 178, "col_offset": 75, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 184, "col_offset": 69, "nodeName": "length", "type": "Any"}, {"lineNumber": 198, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 202, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 202, "col_offset": 37, "nodeName": "items", "type": "Any"}, {"lineNumber": 202, "col_offset": 73, "nodeName": "x", "type": "Any"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "i", "type": "Any"}, {"lineNumber": 225, "col_offset": 24, "nodeName": "j", "type": "Any"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "transition_matrix", "type": "Any"}, {"lineNumber": 226, "col_offset": 46, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 362, "col_offset": 30, "nodeName": "predicted", "type": "Any"}, {"lineNumber": 364, "col_offset": 24, "nodeName": "gold", "type": "Any"}, {"lineNumber": 401, "col_offset": 53, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 402, "col_offset": 30, "nodeName": "label", "type": "str"}, {"lineNumber": 405, "col_offset": 39, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 405, "col_offset": 79, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "x", "type": "Dict[str, Any]"}, {"lineNumber": 161, "col_offset": 42, "nodeName": "x", "type": "Dict[str, Any]"}, {"lineNumber": 168, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 175, "col_offset": 65, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 178, "col_offset": 32, "nodeName": "detach", "type": "Any"}, {"lineNumber": 178, "col_offset": 81, "nodeName": "size", "type": "Any"}, {"lineNumber": 202, "col_offset": 37, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "label", "type": "Any"}, {"lineNumber": 225, "col_offset": 54, "nodeName": "previous_label", "type": "Any"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "Any", "type": "Any"}, {"lineNumber": 178, "col_offset": 81, "nodeName": "all_predictions", "type": "Any"}, {"lineNumber": 226, "col_offset": 38, "nodeName": "i", "type": "Any"}, {"lineNumber": 226, "col_offset": 41, "nodeName": "j", "type": "Any"}, {"lineNumber": 401, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 405, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 405, "col_offset": 86, "nodeName": "i", "type": "int"}, {"lineNumber": 178, "col_offset": 32, "nodeName": "all_predictions", "type": "Any"}, {"lineNumber": 225, "col_offset": 78, "nodeName": "label", "type": "Any"}, {"lineNumber": 178, "col_offset": 48, "nodeName": "i", "type": "int"}]