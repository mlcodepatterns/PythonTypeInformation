[{"lineNumber": 18, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 18, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "default_implementation", "type": "str"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "_serialization_dir", "type": "str"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "_distributed", "type": "bool"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "distributed", "type": "bool"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "_rank", "type": "int"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "local_rank", "type": "int"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "_master", "type": "bool"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "_world_size", "type": "int"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "world_size", "type": "int"}, {"lineNumber": 75, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "typ3", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "check_for_gpu", "type": "Callable[[Union[int, List[int]]], None]"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "TrainerBase"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 42, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "distributed", "type": "bool"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "TrainerBase"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TrainerBase"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TrainerBase"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TrainerBase"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "_rank", "type": "int"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "TrainerBase"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 79, "col_offset": 21, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 79, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 79, "col_offset": 62, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "pop", "type": "Any"}, {"lineNumber": 84, "col_offset": 11, "nodeName": "typ3", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "pieces", "type": "allennlp.training.trainer_pieces.TrainerPieces"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "klass", "type": "Type[TrainerBase]"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "is_overriden", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 49, "col_offset": 39, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "world_size", "type": "int"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "self", "type": "TrainerBase"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "self", "type": "TrainerBase"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 71, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "Any", "type": "Any"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "from_params", "type": "Callable[..., allennlp.training.trainer_pieces.TrainerPieces]"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 89, "col_offset": 55, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 89, "col_offset": 74, "nodeName": "recover", "type": "bool"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 100, "col_offset": 59, "nodeName": "typ3", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "__func__", "type": "Any"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "__func__", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "from_params", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 106, "col_offset": 45, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 106, "col_offset": 64, "nodeName": "recover", "type": "bool"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "self", "type": "TrainerBase"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "get", "type": "Any"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "TrainerPieces", "type": "Type[allennlp.training.trainer_pieces.TrainerPieces]"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "Trainer", "type": "Any"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "train_dataset", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "validation_dataset", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 97, "col_offset": 36, "nodeName": "validation_iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 100, "col_offset": 24, "nodeName": "TrainerBase", "type": "Type[TrainerBase]"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "from_params", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "from_params", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "__name__", "type": "str"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "klass", "type": "Type[TrainerBase]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "pieces", "type": "allennlp.training.trainer_pieces.TrainerPieces"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "pieces", "type": "allennlp.training.trainer_pieces.TrainerPieces"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "pieces", "type": "allennlp.training.trainer_pieces.TrainerPieces"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "pieces", "type": "allennlp.training.trainer_pieces.TrainerPieces"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "pieces", "type": "allennlp.training.trainer_pieces.TrainerPieces"}, {"lineNumber": 97, "col_offset": 36, "nodeName": "pieces", "type": "allennlp.training.trainer_pieces.TrainerPieces"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "klass", "type": "Type[TrainerBase]"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "TrainerBase", "type": "Type[TrainerBase]"}, {"lineNumber": 105, "col_offset": 42, "nodeName": "klass", "type": "Type[TrainerBase]"}]