[{"lineNumber": 12, "col_offset": 15, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "check", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "exclude_indices", "type": "Any"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "_exclude_indices", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "counts", "type": "Counter[Any]"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "unigram_check", "type": "Dict[Tuple[int], int]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "bigram_check", "type": "Dict[Tuple[int, int], int]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "trigram_check", "type": "Dict[Tuple[int, int, int], int]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "gold_targets", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "bleu", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "check", "type": "float"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "setup_method", "type": "Callable[[], None]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "BleuTest"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "BLEU", "type": "Any"}, {"lineNumber": 18, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "long", "type": "Any"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 22, "col_offset": 24, "nodeName": "result", "type": "Any"}, {"lineNumber": 22, "col_offset": 32, "nodeName": "check", "type": "Any"}, {"lineNumber": 25, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "metric", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "counts", "type": "Counter[Any]"}, {"lineNumber": 33, "col_offset": 25, "nodeName": "unigram_check", "type": "Dict[Tuple[int], int]"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "bigram_check", "type": "Dict[Tuple[int, int], int]"}, {"lineNumber": 41, "col_offset": 17, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "trigram_check", "type": "Dict[Tuple[int, int, int], int]"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "gold_targets", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "_prediction_lengths", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "_reference_lengths", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "bleu", "type": "Any"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "check", "type": "float"}, {"lineNumber": 90, "col_offset": 58, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 19, "col_offset": 67, "nodeName": "device", "type": "str"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 21, "col_offset": 66, "nodeName": "device", "type": "str"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 26, "col_offset": 57, "nodeName": "device", "type": "str"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "ngrams", "type": "Callable[[Any, int, Set[int]], Dict[Tuple[int, ...], int]]"}, {"lineNumber": 31, "col_offset": 41, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 31, "col_offset": 52, "nodeName": "exclude_indices", "type": "Any"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "ngrams", "type": "Callable[[Any, int, Set[int]], Dict[Tuple[int, ...], int]]"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "exclude_indices", "type": "Any"}, {"lineNumber": 41, "col_offset": 25, "nodeName": "ngrams", "type": "Callable[[Any, int, Set[int]], Dict[Tuple[int, ...], int]]"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "exclude_indices", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "ngrams", "type": "Callable[[Any, int, Set[int]], Dict[Tuple[int, ...], int]]"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 46, "col_offset": 43, "nodeName": "exclude_indices", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 54, "col_offset": 77, "nodeName": "device", "type": "str"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 57, "col_offset": 78, "nodeName": "device", "type": "str"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "_precision_matches", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "_precision_totals", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "_precision_matches", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "_precision_totals", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "_get_brevity_penalty", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "math", "type": "module"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "get_valid_tokens_mask", "type": "Callable[[Any, Set[int]], Any]"}, {"lineNumber": 20, "col_offset": 39, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 20, "col_offset": 47, "nodeName": "_exclude_indices", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 20, "col_offset": 47, "nodeName": "metric", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 20, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 86, "col_offset": 68, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 86, "col_offset": 82, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "math", "type": "module"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "math", "type": "module"}, {"lineNumber": 86, "col_offset": 68, "nodeName": "math", "type": "module"}, {"lineNumber": 86, "col_offset": 82, "nodeName": "math", "type": "module"}]