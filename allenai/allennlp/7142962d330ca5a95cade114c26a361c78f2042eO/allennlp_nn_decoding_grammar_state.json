[{"lineNumber": 66, "col_offset": 29, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "_nonterminal_stack", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "nonterminal_stack", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "_lambda_stacks", "type": "Dict[Tuple[str, str], List[str]]"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "lambda_stacks", "type": "Dict[Tuple[str, str], List[str]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "_valid_actions", "type": "Dict[str, List[int]]"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "valid_actions", "type": "Dict[str, List[int]]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "_action_indices", "type": "Dict[str, int]"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "action_indices", "type": "Dict[str, int]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "_is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "actions", "type": "List[int]"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "_lambda_stacks", "type": "Dict[Tuple[str, str], List[str]]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "actions", "type": "List[int]"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "List", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "new_stack", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "new_lambda_stacks", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "productions", "type": "List[str]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "production", "type": "str"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "finished_lambdas", "type": "Set[Any]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "finished_lambda", "type": "Any"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "finished_lambdas", "type": "Set[Any]"}, {"lineNumber": 146, "col_offset": 64, "nodeName": "List", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "GrammarState"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "GrammarState"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "GrammarState"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "GrammarState"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "GrammarState"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "_nonterminal_stack", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "_valid_actions", "type": "Dict[str, List[int]]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "type_", "type": "str"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "variable", "type": "str"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "self", "type": "GrammarState"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 84, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "left_side", "type": "str"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "right_side", "type": "str"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "left_side", "type": "str"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "_nonterminal_stack", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "_lambda_stacks", "type": "Dict[Tuple[str, str], List[str]]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "lambda_stack", "type": "Any"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "items", "type": "Any"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "_get_productions_from_string", "type": "Callable[[str], List[str]]"}, {"lineNumber": 108, "col_offset": 56, "nodeName": "right_side", "type": "str"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "production", "type": "str"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "lambda_variable", "type": "str"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "lambda_type", "type": "str"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "productions", "type": "List[str]"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 133, "col_offset": 17, "nodeName": "lambda_stack", "type": "Any"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "items", "type": "Any"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "GrammarState", "type": "Type[GrammarState]"}, {"lineNumber": 146, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 146, "col_offset": 69, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "List", "type": "Any"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 59, "col_offset": 33, "nodeName": "Callable", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "self", "type": "GrammarState"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "self", "type": "GrammarState"}, {"lineNumber": 79, "col_offset": 46, "nodeName": "type_", "type": "str"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "production_string", "type": "str"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "actions", "type": "List[int]"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "production_rule", "type": "str"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "_nonterminal_stack", "type": "List[str]"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "self", "type": "GrammarState"}, {"lineNumber": 103, "col_offset": 37, "nodeName": "self", "type": "GrammarState"}, {"lineNumber": 104, "col_offset": 33, "nodeName": "new_lambda_stacks", "type": "Any"}, {"lineNumber": 105, "col_offset": 39, "nodeName": "left_side", "type": "str"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "pop", "type": "Any"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "self", "type": "GrammarState"}, {"lineNumber": 109, "col_offset": 23, "nodeName": "productions", "type": "List[str]"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "productions", "type": "List[str]"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "production", "type": "str"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "left_side", "type": "str"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "new_lambda_stacks", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "_is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 126, "col_offset": 36, "nodeName": "production", "type": "str"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "lambda_stack", "type": "Any"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "new_lambda_stacks", "type": "Any"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "lambda_stack", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "new_lambda_stacks", "type": "Any"}, {"lineNumber": 139, "col_offset": 46, "nodeName": "new_stack", "type": "List[str]"}, {"lineNumber": 140, "col_offset": 42, "nodeName": "new_lambda_stacks", "type": "Any"}, {"lineNumber": 141, "col_offset": 42, "nodeName": "_valid_actions", "type": "Dict[str, List[int]]"}, {"lineNumber": 142, "col_offset": 43, "nodeName": "_action_indices", "type": "Dict[str, int]"}, {"lineNumber": 143, "col_offset": 43, "nodeName": "_is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 152, "col_offset": 11, "nodeName": "production_string", "type": "str"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "production_string", "type": "str"}, {"lineNumber": 55, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "_nonterminal_stack", "type": "List[str]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "_nonterminal_stack", "type": "List[str]"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "actions", "type": "List[int]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "self", "type": "GrammarState"}, {"lineNumber": 100, "col_offset": 77, "nodeName": "_nonterminal_stack", "type": "List[str]"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "lambda_stack", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "lambda_stack", "type": "Any"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "production", "type": "str"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "left_side", "type": "str"}, {"lineNumber": 121, "col_offset": 22, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 121, "col_offset": 73, "nodeName": "left_side", "type": "str"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "self", "type": "GrammarState"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 127, "col_offset": 33, "nodeName": "production", "type": "str"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "values", "type": "Any"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 135, "col_offset": 37, "nodeName": "key", "type": "Any"}, {"lineNumber": 137, "col_offset": 34, "nodeName": "finished_lambda", "type": "Any"}, {"lineNumber": 141, "col_offset": 42, "nodeName": "self", "type": "GrammarState"}, {"lineNumber": 142, "col_offset": 43, "nodeName": "self", "type": "GrammarState"}, {"lineNumber": 143, "col_offset": 43, "nodeName": "self", "type": "GrammarState"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 59, "col_offset": 49, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "self", "type": "GrammarState"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "self", "type": "GrammarState"}, {"lineNumber": 80, "col_offset": 39, "nodeName": "type_", "type": "str"}, {"lineNumber": 80, "col_offset": 50, "nodeName": "variable", "type": "str"}, {"lineNumber": 100, "col_offset": 77, "nodeName": "self", "type": "GrammarState"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "production", "type": "str"}, {"lineNumber": 111, "col_offset": 40, "nodeName": "production", "type": "str"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "production", "type": "str"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "lambda_type", "type": "str"}, {"lineNumber": 123, "col_offset": 44, "nodeName": "lambda_variable", "type": "str"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "new_stack", "type": "List[str]"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "new_lambda_stacks", "type": "Any"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "append", "type": "Any"}, {"lineNumber": 129, "col_offset": 40, "nodeName": "production", "type": "str"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "finished_lambdas", "type": "Set[Any]"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "production_string", "type": "str"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 56, "col_offset": 54, "nodeName": "List", "type": "Any"}, {"lineNumber": 57, "col_offset": 42, "nodeName": "List", "type": "Any"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "_action_indices", "type": "Dict[str, int]"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "lambda_stack", "type": "Any"}, {"lineNumber": 56, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 57, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "self", "type": "GrammarState"}, {"lineNumber": 81, "col_offset": 58, "nodeName": "production_string", "type": "str"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 56, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}]