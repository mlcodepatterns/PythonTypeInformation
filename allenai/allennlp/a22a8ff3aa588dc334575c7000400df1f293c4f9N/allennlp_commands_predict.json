[{"lineNumber": 60, "col_offset": 0, "nodeName": "_get_predictor", "type": "Callable[[argparse.Namespace, Dict[str, str]], allennlp.service.predictors.predictor.Predictor]"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "_predict", "type": "Callable[[Dict[str, str]], Any]"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "Subcommand", "type": "Type[allennlp.commands.subcommand.Subcommand]"}, {"lineNumber": 60, "col_offset": 76, "nodeName": "Predictor", "type": "Type[allennlp.service.predictors.predictor.Predictor]"}, {"lineNumber": 39, "col_offset": 78, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 62, "col_offset": 4, "nodeName": "model_type", "type": "Any"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "predictor", "type": "allennlp.service.predictors.predictor.Predictor"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "predictor", "type": "allennlp.service.predictors.predictor.Predictor"}, {"lineNumber": 92, "col_offset": 4, "nodeName": "batch_json_data", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "line", "type": "Union[str, bytes]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "input_file", "type": "IO[Union[str, bytes]]"}, {"lineNumber": 104, "col_offset": 7, "nodeName": "batch_json_data", "type": "Union[List[Any], List[nothing]]"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "predict_inner", "type": "Callable[[argparse.Namespace], None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "predictors", "type": "Dict[str, str]"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "predictors", "type": "Dict[str, str]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "description", "type": "str"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 39, "col_offset": 78, "nodeName": "argparse", "type": "module"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "Namespace", "type": "Type[argparse.Namespace]"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "archive_file", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "get", "type": "Any"}, {"lineNumber": 63, "col_offset": 7, "nodeName": "model_type", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "predictors", "type": "Dict[str, str]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "from_archive", "type": "Callable[[Any, allennlp.models.archival.Archive, str], allennlp.service.predictors.predictor.Predictor]"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "Predictor", "type": "Type[allennlp.service.predictors.predictor.Predictor]"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "IO", "type": "Any"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "predictor", "type": "allennlp.service.predictors.predictor.Predictor"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "output_file", "type": "None"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "Predict"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 39, "col_offset": 47, "nodeName": "_SubParsersAction", "type": "Type[argparse._SubParsersAction]"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "add_parser", "type": "Callable[..., argparse.ArgumentParser]"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "set_defaults", "type": "Callable[..., None]"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "argparse", "type": "module"}, {"lineNumber": 60, "col_offset": 57, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 61, "col_offset": 58, "nodeName": "cuda_device", "type": "Any"}, {"lineNumber": 61, "col_offset": 86, "nodeName": "overrides", "type": "Any"}, {"lineNumber": 64, "col_offset": 14, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "Predictor", "type": "Type[allennlp.service.predictors.predictor.Predictor]"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "predictors", "type": "Dict[str, str]"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "result", "type": "Dict[str, Any]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "results", "type": "List[Dict[str, Any]]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "results", "type": "List[Dict[str, Any]]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "model_input", "type": "nothing"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "output", "type": "nothing"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "batch_data", "type": "List[Any]"}, {"lineNumber": 84, "col_offset": 51, "nodeName": "results", "type": "List[Dict[str, Any]]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "string_output", "type": "str"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "print_to_console", "type": "bool"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "output_file", "type": "Optional[IO[Union[str, bytes]]]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "json_data", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "_run_predictor", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "batch_json_data", "type": "Union[List[Any], List[nothing]]"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "Namespace", "type": "Type[argparse.Namespace]"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "_get_predictor", "type": "Callable[[argparse.Namespace, Dict[str, str]], allennlp.service.predictors.predictor.Predictor]"}, {"lineNumber": 110, "col_offset": 35, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 110, "col_offset": 41, "nodeName": "predictors", "type": "Dict[str, str]"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "silent", "type": "Any"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "stack", "type": "contextlib.ExitStack"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 39, "col_offset": 47, "nodeName": "argparse", "type": "module"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "parser", "type": "argparse._SubParsersAction"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "description", "type": "str"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 44, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 48, "col_offset": 52, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 50, "col_offset": 53, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 61, "col_offset": 58, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 61, "col_offset": 86, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "get", "type": "Any"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 64, "col_offset": 79, "nodeName": "model_type", "type": "Any"}, {"lineNumber": 65, "col_offset": 59, "nodeName": "model_type", "type": "Any"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "IO", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "batch_data", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "predict_json", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 77, "col_offset": 59, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "result", "type": "Dict[str, Any]"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "predict_batch_json", "type": "Callable[..., List[Dict[str, Any]]]"}, {"lineNumber": 82, "col_offset": 51, "nodeName": "batch_data", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 63, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "output", "type": "nothing"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "isspace", "type": "Callable[[], bool]"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 96, "col_offset": 35, "nodeName": "line", "type": "Union[bytes, str]"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "json_data", "type": "Any"}, {"lineNumber": 98, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "batch_json_data", "type": "List[nothing]"}, {"lineNumber": 109, "col_offset": 28, "nodeName": "argparse", "type": "module"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "exit", "type": "Callable[..., Any]"}, {"lineNumber": 119, "col_offset": 13, "nodeName": "ExitStack", "type": "Type[contextlib.ExitStack]"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "enter_context", "type": "Callable"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "_run", "type": "Callable[[allennlp.service.predictors.predictor.Predictor, IO[Any], Optional[IO[Any]], int, bool, int], None]"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "predictor", "type": "allennlp.service.predictors.predictor.Predictor"}, {"lineNumber": 124, "col_offset": 28, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 124, "col_offset": 53, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 124, "col_offset": 87, "nodeName": "cuda_device", "type": "Any"}, {"lineNumber": 45, "col_offset": 72, "nodeName": "FileType", "type": "Type[argparse.FileType]"}, {"lineNumber": 47, "col_offset": 53, "nodeName": "FileType", "type": "Type[argparse.FileType]"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "_predict", "type": "Callable[[Dict[str, str]], Any]"}, {"lineNumber": 56, "col_offset": 45, "nodeName": "predictors", "type": "Dict[str, str]"}, {"lineNumber": 60, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 60, "col_offset": 67, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "config", "type": "allennlp.common.params.Params"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "predictor", "type": "allennlp.service.predictors.predictor.Predictor"}, {"lineNumber": 77, "col_offset": 44, "nodeName": "batch_data", "type": "List[Any]"}, {"lineNumber": 82, "col_offset": 22, "nodeName": "predictor", "type": "allennlp.service.predictors.predictor.Predictor"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "json", "type": "module"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "model_input", "type": "nothing"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 88, "col_offset": 38, "nodeName": "string_output", "type": "str"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "write", "type": "Callable"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "line", "type": "Union[bytes, str]"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "json", "type": "module"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "batch_json_data", "type": "List[Any]"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "batch_json_data", "type": "List[Any]"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "_run_predictor", "type": "Callable[[Any], Any]"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "batch_json_data", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 108, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 113, "col_offset": 31, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "sys", "type": "module"}, {"lineNumber": 120, "col_offset": 25, "nodeName": "stack", "type": "contextlib.ExitStack"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "enter_context", "type": "Callable"}, {"lineNumber": 122, "col_offset": 50, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 124, "col_offset": 53, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 124, "col_offset": 74, "nodeName": "silent", "type": "Any"}, {"lineNumber": 124, "col_offset": 87, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 36, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 45, "col_offset": 72, "nodeName": "argparse", "type": "module"}, {"lineNumber": 47, "col_offset": 53, "nodeName": "argparse", "type": "module"}, {"lineNumber": 56, "col_offset": 45, "nodeName": "self", "type": "Predict"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "output_file", "type": "IO[Union[str, bytes]]"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "string_output", "type": "str"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "stack", "type": "contextlib.ExitStack"}, {"lineNumber": 122, "col_offset": 50, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 124, "col_offset": 74, "nodeName": "args", "type": "argparse.Namespace"}]