[{"lineNumber": 15, "col_offset": 17, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "torch_array_dict", "type": "Dict[str, Any]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "torch_array_dict", "type": "Dict[str, Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "torch_array_dict", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "vector_1d", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "vector_1d_softmaxed", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "vector_1d", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "vector_1d_softmaxed", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "vector_zero", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "vector_zero_softmaxed", "type": "Any"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "masked_matrix_softmaxed", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "masked_matrix_softmaxed", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "vector_1d", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "mask_1d", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "vector_1d_softmaxed", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "vector_1d", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "mask_1d", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "vector_1d_softmaxed", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "vector_1d", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "mask_1d", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "vector_1d_softmaxed", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "vector_1d", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "mask_1d", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "vector_1d_softmaxed", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "vector_1d", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "mask_1d", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "vector_1d_softmaxed", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "masked_matrix_softmaxed", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "masked_matrix_softmaxed", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "masked_matrix_softmaxed", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "masked_matrix_softmaxed", "type": "Any"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "arrays_to_variables", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 26, "col_offset": 47, "nodeName": "array_dict", "type": "Dict[str, Any]"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "equal", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "equal", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "equal", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "arrays_to_variables", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 44, "col_offset": 47, "nodeName": "array_dict", "type": "Dict[str, Any]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "equal", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "equal", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "equal", "type": "Any"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "arrays_to_variables", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 63, "col_offset": 47, "nodeName": "array_dict", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "equal", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "equal", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "equal", "type": "Any"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "ByteTensor", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "get_lengths_from_binary_sequence_mask", "type": "Callable[[Any], Any]"}, {"lineNumber": 77, "col_offset": 56, "nodeName": "binary_mask", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "sorted_tensor", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "sorted_lengths", "type": "Any"}, {"lineNumber": 88, "col_offset": 39, "nodeName": "reverse_indices", "type": "Any"}, {"lineNumber": 88, "col_offset": 57, "nodeName": "sort_batch_by_length", "type": "Callable[[Any, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 88, "col_offset": 78, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 88, "col_offset": 86, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "equal", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "equal", "type": "Any"}, {"lineNumber": 99, "col_offset": 52, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "vector_1d_softmaxed", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "vector_1d_softmaxed", "type": "Any"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "vector_zero_softmaxed", "type": "Any"}, {"lineNumber": 121, "col_offset": 17, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "masked_matrix_softmaxed", "type": "Any"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "masked_matrix_softmaxed", "type": "Any"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 138, "col_offset": 30, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "vector_1d_softmaxed", "type": "Any"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 143, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "vector_1d_softmaxed", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 154, "col_offset": 34, "nodeName": "vector_1d_softmaxed", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "vector_1d_softmaxed", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 169, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 171, "col_offset": 34, "nodeName": "vector_1d_softmaxed", "type": "Any"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 178, "col_offset": 34, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 179, "col_offset": 34, "nodeName": "masked_matrix_softmaxed", "type": "Any"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 186, "col_offset": 15, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 188, "col_offset": 34, "nodeName": "masked_matrix_softmaxed", "type": "Any"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 196, "col_offset": 34, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 197, "col_offset": 34, "nodeName": "masked_matrix_softmaxed", "type": "Any"}, {"lineNumber": 201, "col_offset": 17, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 203, "col_offset": 34, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 204, "col_offset": 34, "nodeName": "masked_matrix_softmaxed", "type": "Any"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "DoubleTensor", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "DoubleTensor", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "DoubleTensor", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "IntTensor", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "ByteTensor", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "ones", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "IntTensor", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "ByteTensor", "type": "Any"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 78, "col_offset": 58, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "sorted_lengths", "type": "Any"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "sum", "type": "Any"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "vector_1d_softmaxed", "type": "Any"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 131, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 137, "col_offset": 27, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 138, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 146, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 168, "col_offset": 29, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 178, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 180, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 185, "col_offset": 26, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 189, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 196, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 198, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 201, "col_offset": 26, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 203, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 21, "col_offset": 33, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 22, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "numpy", "type": "module"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "ones", "type": "Any"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 33, "col_offset": 35, "nodeName": "ones", "type": "Any"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "numpy", "type": "module"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 49, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "ones", "type": "Any"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "torch", "type": "Any"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "ones", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "numpy", "type": "module"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "ones", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "ones", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 78, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "sorted_tensor", "type": "Any"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "numpy", "type": "module"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 115, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 118, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 131, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 137, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 146, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 151, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 152, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 155, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 160, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 168, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 169, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 172, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 177, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 180, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 185, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 189, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 198, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 201, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 205, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 21, "col_offset": 33, "nodeName": "numpy", "type": "module"}, {"lineNumber": 22, "col_offset": 38, "nodeName": "numpy", "type": "module"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "numpy", "type": "module"}, {"lineNumber": 31, "col_offset": 35, "nodeName": "numpy", "type": "module"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "torch_array_dict", "type": "Dict[str, Any]"}, {"lineNumber": 33, "col_offset": 35, "nodeName": "numpy", "type": "module"}, {"lineNumber": 39, "col_offset": 33, "nodeName": "numpy", "type": "module"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "numpy", "type": "module"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "numpy", "type": "module"}, {"lineNumber": 49, "col_offset": 32, "nodeName": "numpy", "type": "module"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "torch_array_dict", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "numpy", "type": "module"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "numpy", "type": "module"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "numpy", "type": "module"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "numpy", "type": "module"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "torch_array_dict", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 70, "col_offset": 38, "nodeName": "numpy", "type": "module"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "sorted_tensor", "type": "Any"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "sorted_tensor", "type": "Any"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "sorted_tensor", "type": "Any"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "sorted_tensor", "type": "Any"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "reverse_indices", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "masked_softmax", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 45, "nodeName": "vector_1d", "type": "Any"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "masked_softmax", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 45, "nodeName": "vector_1d", "type": "Any"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "masked_softmax", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 47, "nodeName": "vector_zero", "type": "Any"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "masked_softmax", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 49, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "masked_softmax", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 49, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 138, "col_offset": 30, "nodeName": "masked_softmax", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 45, "nodeName": "vector_1d", "type": "Any"}, {"lineNumber": 138, "col_offset": 56, "nodeName": "mask_1d", "type": "Any"}, {"lineNumber": 144, "col_offset": 30, "nodeName": "masked_softmax", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 144, "col_offset": 45, "nodeName": "vector_1d", "type": "Any"}, {"lineNumber": 144, "col_offset": 56, "nodeName": "mask_1d", "type": "Any"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "masked_softmax", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 153, "col_offset": 45, "nodeName": "vector_1d", "type": "Any"}, {"lineNumber": 153, "col_offset": 56, "nodeName": "mask_1d", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "masked_softmax", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 161, "col_offset": 45, "nodeName": "vector_1d", "type": "Any"}, {"lineNumber": 161, "col_offset": 56, "nodeName": "mask_1d", "type": "Any"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "masked_softmax", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 45, "nodeName": "vector_1d", "type": "Any"}, {"lineNumber": 170, "col_offset": 56, "nodeName": "mask_1d", "type": "Any"}, {"lineNumber": 178, "col_offset": 34, "nodeName": "masked_softmax", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 178, "col_offset": 49, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 178, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "masked_softmax", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 187, "col_offset": 49, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 187, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 196, "col_offset": 34, "nodeName": "masked_softmax", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 196, "col_offset": 49, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 196, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 203, "col_offset": 34, "nodeName": "masked_softmax", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 203, "col_offset": 49, "nodeName": "matrix", "type": "Any"}, {"lineNumber": 203, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "torch_array_dict", "type": "Dict[str, Any]"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "torch_array_dict", "type": "Dict[str, Any]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "torch_array_dict", "type": "Dict[str, Any]"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "torch_array_dict", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "torch_array_dict", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "torch_array_dict", "type": "Dict[str, Any]"}]