[{"lineNumber": 13, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 13, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 13, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 25, "nodeName": "Field", "type": "Type[allennlp.data.fields.field.Field[Any]]"}, {"lineNumber": 83, "col_offset": 59, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 13, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 16, "col_offset": 31, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "labels", "type": "Union[List[int], List[str]]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "labels", "type": "Union[List[int], List[str]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "sequence_field", "type": "allennlp.data.fields.sequence_field.SequenceField[Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "sequence_field", "type": "allennlp.data.fields.sequence_field.SequenceField[Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "_label_namespace", "type": "str"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "label_namespace", "type": "str"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "_indexed_labels", "type": "None"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "desired_num_tokens", "type": "int"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "padded_tags", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 59, "nodeName": "numpy", "type": "module"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "sequence_label_field", "type": "SequenceLabelField"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "_indexed_labels", "type": "List[nothing]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "sequence_label_field", "type": "SequenceLabelField"}, {"lineNumber": 16, "col_offset": 31, "nodeName": "numpy", "type": "module"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "SequenceLabelField"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "self", "type": "SequenceLabelField"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "SequenceLabelField"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "SequenceLabelField"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "_indexed_labels", "type": "Union[List[int], List[str]]"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "labels", "type": "Union[List[int], List[str]]"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "_indexed_labels", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "label", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "labels", "type": "Any"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "_indexed_labels", "type": "Any"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "padding_lengths", "type": "Dict[str, int]"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "pad_sequence_to_length", "type": "Callable[..., List[Any]]"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "_indexed_labels", "type": "Any"}, {"lineNumber": 85, "col_offset": 67, "nodeName": "desired_num_tokens", "type": "int"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "padded_tags", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "SequenceLabelField", "type": "Type[SequenceLabelField]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "sequence_label_field", "type": "SequenceLabelField"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 79, "nodeName": "_label_namespace", "type": "str"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "labels", "type": "Union[List[int], List[str]]"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "sequence_length", "type": "Callable[[], int]"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "self", "type": "SequenceLabelField"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 79, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 83, "col_offset": 40, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 48, "col_offset": 58, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 52, "col_offset": 79, "nodeName": "self", "type": "SequenceLabelField"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "sequence_field", "type": "allennlp.data.fields.sequence_field.SequenceField[Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "x", "type": "Union[str, int]"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "x", "type": "Union[int, str]"}, {"lineNumber": 58, "col_offset": 44, "nodeName": "labels", "type": "Union[List[int], List[str]]"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 76, "col_offset": 40, "nodeName": "label", "type": "Any"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "labels", "type": "Any"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "sequence_field", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "_label_namespace", "type": "str"}, {"lineNumber": 48, "col_offset": 58, "nodeName": "_label_namespace", "type": "str"}, {"lineNumber": 62, "col_offset": 37, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 64, "col_offset": 57, "nodeName": "labels", "type": "Union[List[int], List[str]]"}, {"lineNumber": 67, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "counter", "type": "Dict[str, Dict[Union[str, Any], int]]"}, {"lineNumber": 70, "col_offset": 47, "nodeName": "label", "type": "Any"}, {"lineNumber": 76, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 83, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "self", "type": "SequenceLabelField"}, {"lineNumber": 48, "col_offset": 58, "nodeName": "self", "type": "SequenceLabelField"}, {"lineNumber": 56, "col_offset": 65, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 56, "col_offset": 69, "nodeName": "labels", "type": "Union[List[int], List[str]]"}, {"lineNumber": 56, "col_offset": 78, "nodeName": "sequence_length", "type": "Callable[[], int]"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 61, "col_offset": 33, "nodeName": "x", "type": "Union[str, int]"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 61, "col_offset": 45, "nodeName": "x", "type": "Union[int, str]"}, {"lineNumber": 61, "col_offset": 50, "nodeName": "labels", "type": "Union[List[int], List[str]]"}, {"lineNumber": 67, "col_offset": 51, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "_label_namespace", "type": "Any"}, {"lineNumber": 56, "col_offset": 78, "nodeName": "sequence_field", "type": "allennlp.data.fields.sequence_field.SequenceField[Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 64, "col_offset": 66, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 64, "col_offset": 71, "nodeName": "x", "type": "Union[str, int]"}, {"lineNumber": 64, "col_offset": 78, "nodeName": "x", "type": "Union[str, int]"}, {"lineNumber": 64, "col_offset": 83, "nodeName": "labels", "type": "Union[List[int], List[str]]"}, {"lineNumber": 70, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 67, "col_offset": 61, "nodeName": "int", "type": "Type[int]"}]