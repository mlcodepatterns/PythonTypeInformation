[{"lineNumber": 14, "col_offset": 33, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "optim", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "sched", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 177, "col_offset": 44, "nodeName": "cosine_schedule_cases", "type": "List[Union[Tuple[int, Dict[str, Union[float, int, str]], List[Tuple[int, float]], List[int]], Tuple[int, Dict[str, Union[float, int, str]], List[Tuple[int, float]], List[nothing]], Tuple[int, Dict[str, Union[int, str]], List[Tuple[int, float]], List[nothing]]]]"}, {"lineNumber": 205, "col_offset": 54, "nodeName": "cosine_schedule_cases", "type": "List[Union[Tuple[int, Dict[str, Union[float, int, str]], List[Tuple[int, float]], List[int]], Tuple[int, Dict[str, Union[float, int, str]], List[Tuple[int, float]], List[nothing]], Tuple[int, Dict[str, Union[int, str]], List[Tuple[int, float]], List[nothing]]]]"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 18, "col_offset": 54, "nodeName": "context", "type": "unittest.case._AssertRaisesContext[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 42, "col_offset": 14, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "step_batch", "type": "Callable[[Optional[int]], None]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 157, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "_get_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "t_initial", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "_initialized", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "epochs", "type": "int"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "params", "type": "Union[Dict[str, Union[float, int, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 177, "col_offset": 28, "nodeName": "lr_checks", "type": "List[Tuple[int, float]]"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "_", "type": "Union[List[int], List[nothing]]"}, {"lineNumber": 177, "col_offset": 44, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "epoch", "type": "int"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "lr_checks", "type": "List[Tuple[int, float]]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "scheduler", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]"}, {"lineNumber": 203, "col_offset": 19, "nodeName": "scheduler", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 205, "col_offset": 28, "nodeName": "lr_checks", "type": "Any"}, {"lineNumber": 205, "col_offset": 39, "nodeName": "checkpoints", "type": "Any"}, {"lineNumber": 205, "col_offset": 54, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "scheduler", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper]"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "epoch", "type": "int"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "lr_checks", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 17, "col_offset": 36, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "LearningRateSchedulersTest"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 34, "col_offset": 36, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 35, "col_offset": 48, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 37, "col_offset": 48, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "lrs", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper]"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 42, "col_offset": 14, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 42, "col_offset": 48, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "lrs", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "lrs", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper]"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 53, "col_offset": 41, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 158, "col_offset": 37, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 158, "col_offset": 68, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 163, "col_offset": 50, "nodeName": "optim", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "sched", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "sched", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 171, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 173, "col_offset": 46, "nodeName": "optim", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "_get_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "params", "type": "Union[Dict[str, Union[float, int, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 182, "col_offset": 31, "nodeName": "epochs", "type": "int"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "it", "type": "int"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "lr", "type": "float"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 200, "col_offset": 58, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "state_dict", "type": "Dict[str, Any]"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "_get_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "init_and_restore_scheduler", "type": "Callable[..., Any]"}, {"lineNumber": 207, "col_offset": 51, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 207, "col_offset": 62, "nodeName": "params", "type": "Any"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 211, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "it", "type": "Any"}, {"lineNumber": 223, "col_offset": 20, "nodeName": "lr", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 17, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "self", "type": "LearningRateSchedulersTest"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "exception", "type": "allennlp.common.checks.ConfigurationError"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 34, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 35, "col_offset": 48, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 35, "col_offset": 70, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 36, "col_offset": 70, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 42, "col_offset": 48, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 42, "col_offset": 70, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 43, "col_offset": 70, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "CosineWithRestartsTest", "type": "Type[CosineWithRestartsTest]"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 53, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 53, "col_offset": 41, "nodeName": "nn", "type": "Any"}, {"lineNumber": 158, "col_offset": 37, "nodeName": "model", "type": "Any"}, {"lineNumber": 158, "col_offset": 97, "nodeName": "lr", "type": "float"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 163, "col_offset": 57, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 171, "col_offset": 13, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 173, "col_offset": 53, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 180, "col_offset": 58, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 183, "col_offset": 31, "nodeName": "epoch", "type": "int"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 187, "col_offset": 34, "nodeName": "lr", "type": "float"}, {"lineNumber": 194, "col_offset": 51, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 200, "col_offset": 24, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 200, "col_offset": 69, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 200, "col_offset": 76, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 202, "col_offset": 55, "nodeName": "state_dict", "type": "Dict[str, Any]"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 212, "col_offset": 19, "nodeName": "epoch", "type": "int"}, {"lineNumber": 212, "col_offset": 28, "nodeName": "checkpoints", "type": "Any"}, {"lineNumber": 214, "col_offset": 20, "nodeName": "scheduler", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper]"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 217, "col_offset": 34, "nodeName": "epoch", "type": "int"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 221, "col_offset": 24, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 224, "col_offset": 34, "nodeName": "lr", "type": "Any"}, {"lineNumber": 17, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 25, "col_offset": 23, "nodeName": "context", "type": "unittest.case._AssertRaisesContext[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 29, "col_offset": 42, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 31, "col_offset": 42, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 34, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 35, "col_offset": 70, "nodeName": "model", "type": "Any"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 42, "col_offset": 70, "nodeName": "model", "type": "Any"}, {"lineNumber": 53, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 158, "col_offset": 37, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "optim", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 180, "col_offset": 24, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 180, "col_offset": 69, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 180, "col_offset": 76, "nodeName": "params", "type": "Union[Dict[str, Union[float, int, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 187, "col_offset": 23, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "scheduler", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper]"}, {"lineNumber": 210, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 214, "col_offset": 32, "nodeName": "init_and_restore_scheduler", "type": "Callable[..., Any]"}, {"lineNumber": 214, "col_offset": 59, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 214, "col_offset": 70, "nodeName": "params", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "scheduler", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper]"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 221, "col_offset": 24, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 224, "col_offset": 23, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 19, "col_offset": 46, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 21, "col_offset": 46, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 29, "col_offset": 42, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 29, "col_offset": 64, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 30, "col_offset": 64, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 181, "col_offset": 19, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 187, "col_offset": 27, "nodeName": "it", "type": "int"}, {"lineNumber": 194, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 194, "col_offset": 61, "nodeName": "Any", "type": "Any"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "scheduler", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper]"}, {"lineNumber": 210, "col_offset": 19, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 214, "col_offset": 89, "nodeName": "state", "type": "Any"}, {"lineNumber": 218, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 221, "col_offset": 24, "nodeName": "scheduler", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper]"}, {"lineNumber": 224, "col_offset": 27, "nodeName": "it", "type": "Any"}, {"lineNumber": 19, "col_offset": 46, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 19, "col_offset": 68, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 20, "col_offset": 68, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 29, "col_offset": 64, "nodeName": "model", "type": "Any"}, {"lineNumber": 184, "col_offset": 27, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 218, "col_offset": 27, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 19, "col_offset": 68, "nodeName": "model", "type": "Any"}]