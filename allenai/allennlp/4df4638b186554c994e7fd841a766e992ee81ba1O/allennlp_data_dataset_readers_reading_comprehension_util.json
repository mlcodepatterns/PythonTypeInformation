[{"lineNumber": 22, "col_offset": 0, "nodeName": "normalize_text", "type": "Callable[[str], str]"}, {"lineNumber": 15, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "IGNORED_TOKENS", "type": "Set[str]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "STRIPPED_CHARACTERS", "type": "str"}, {"lineNumber": 22, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 142, "col_offset": 87, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 15, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 15, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "punctuation", "type": "str"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "error", "type": "bool"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "start_index", "type": "int"}, {"lineNumber": 76, "col_offset": 4, "nodeName": "end_index", "type": "int"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "start_index", "type": "int"}, {"lineNumber": 35, "col_offset": 64, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "normalized_tokens", "type": "List[str]"}, {"lineNumber": 108, "col_offset": 4, "nodeName": "word_positions", "type": "Dict[str, List[int]]"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "answer_text", "type": "str"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "answer_texts", "type": "List[str]"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 96, "col_offset": 56, "nodeName": "List", "type": "Any"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "additional_metadata", "type": "Union[Dict[str, Any], Dict[nothing, nothing]]"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "fields", "type": "Dict[str, Union[allennlp.data.fields.field.Field[Any], allennlp.data.fields.text_field.TextField, allennlp.data.fields.index_field.IndexField, allennlp.data.fields.metadata_field.MetadataField[nothing]]]"}, {"lineNumber": 184, "col_offset": 4, "nodeName": "passage_offsets", "type": "List[Tuple[int, int]]"}, {"lineNumber": 187, "col_offset": 4, "nodeName": "passage_field", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 188, "col_offset": 24, "nodeName": "passage_field", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 196, "col_offset": 7, "nodeName": "answer_texts", "type": "List[str]"}, {"lineNumber": 199, "col_offset": 7, "nodeName": "token_spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 15, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "string", "type": "module"}, {"lineNumber": 20, "col_offset": 43, "nodeName": "join", "type": "Callable"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "start_index", "type": "int"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "start_index", "type": "int"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "error", "type": "bool"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "end_index", "type": "int"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "error", "type": "bool"}, {"lineNumber": 92, "col_offset": 37, "nodeName": "error", "type": "bool"}, {"lineNumber": 108, "col_offset": 43, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 108, "col_offset": 55, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "token", "type": "str"}, {"lineNumber": 109, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 109, "col_offset": 30, "nodeName": "normalized_tokens", "type": "List[str]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "answer_tokens", "type": "List[str]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "num_answer_tokens", "type": "int"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "span_start", "type": "int"}, {"lineNumber": 182, "col_offset": 26, "nodeName": "additional_metadata", "type": "Dict[str, Any]"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "passage_tokens", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 187, "col_offset": 46, "nodeName": "token_indexers", "type": "Dict[str, allennlp.data.token_indexers.token_indexer.TokenIndexer[Union[int, List[int]]]]"}, {"lineNumber": 188, "col_offset": 4, "nodeName": "fields", "type": "Dict[str, Union[allennlp.data.fields.field.Field[Any], allennlp.data.fields.text_field.TextField, allennlp.data.fields.index_field.IndexField, allennlp.data.fields.metadata_field.MetadataField[nothing]]]"}, {"lineNumber": 189, "col_offset": 4, "nodeName": "fields", "type": "Dict[str, Union[allennlp.data.fields.field.Field[Any], allennlp.data.fields.text_field.TextField, allennlp.data.fields.index_field.IndexField, allennlp.data.fields.metadata_field.MetadataField[nothing]]]"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 189, "col_offset": 35, "nodeName": "question_tokens", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 189, "col_offset": 52, "nodeName": "token_indexers", "type": "Dict[str, allennlp.data.token_indexers.token_indexer.TokenIndexer[Union[int, List[int]]]]"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "passage_text", "type": "str"}, {"lineNumber": 192, "col_offset": 29, "nodeName": "passage_offsets", "type": "List[Tuple[int, int]]"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "answer_texts", "type": "List[str]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "candidate_answers", "type": "Counter[Any]"}, {"lineNumber": 205, "col_offset": 27, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 206, "col_offset": 36, "nodeName": "token_spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "update", "type": "Callable"}, {"lineNumber": 213, "col_offset": 20, "nodeName": "additional_metadata", "type": "Union[Dict[nothing, nothing], Dict[str, Any]]"}, {"lineNumber": 214, "col_offset": 4, "nodeName": "fields", "type": "Dict[str, Union[allennlp.data.fields.field.Field[Any], allennlp.data.fields.text_field.TextField, allennlp.data.fields.index_field.IndexField, allennlp.data.fields.metadata_field.MetadataField[nothing]]]"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "MetadataField", "type": "Type[allennlp.data.fields.metadata_field.MetadataField[Any]]"}, {"lineNumber": 214, "col_offset": 39, "nodeName": "metadata", "type": "Dict[str, Any]"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "fields", "type": "Dict[str, Union[allennlp.data.fields.field.Field[Any], allennlp.data.fields.text_field.TextField, allennlp.data.fields.index_field.IndexField, allennlp.data.fields.metadata_field.MetadataField[nothing]]]"}, {"lineNumber": 34, "col_offset": 43, "nodeName": "List", "type": "Any"}, {"lineNumber": 35, "col_offset": 44, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 66, "col_offset": 10, "nodeName": "start_index", "type": "int"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "character_span", "type": "Tuple[int, int]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "character_span", "type": "Tuple[int, int]"}, {"lineNumber": 77, "col_offset": 10, "nodeName": "end_index", "type": "int"}, {"lineNumber": 79, "col_offset": 7, "nodeName": "end_index", "type": "int"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "start_index", "type": "int"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 38, "nodeName": "character_span", "type": "Tuple[int, int]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "start_index", "type": "int"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "end_index", "type": "int"}, {"lineNumber": 35, "col_offset": 87, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "List", "type": "Any"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "List", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 105, "col_offset": 50, "nodeName": "STRIPPED_CHARACTERS", "type": "str"}, {"lineNumber": 105, "col_offset": 75, "nodeName": "token", "type": "allennlp.data.tokenizers.token.Token"}, {"lineNumber": 105, "col_offset": 84, "nodeName": "passage_tokens", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "answer_tokens", "type": "List[str]"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "word_positions", "type": "Dict[str, List[int]]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "span_end", "type": "int"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "span_start", "type": "int"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "answer_index", "type": "int"}, {"lineNumber": 96, "col_offset": 61, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 142, "col_offset": 61, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "idx", "type": "int"}, {"lineNumber": 184, "col_offset": 68, "nodeName": "token", "type": "allennlp.data.tokenizers.token.Token"}, {"lineNumber": 184, "col_offset": 77, "nodeName": "passage_tokens", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 193, "col_offset": 32, "nodeName": "text", "type": "str"}, {"lineNumber": 194, "col_offset": 31, "nodeName": "text", "type": "str"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "metadata", "type": "Dict[str, Any]"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "span_start", "type": "int"}, {"lineNumber": 206, "col_offset": 24, "nodeName": "span_end", "type": "int"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "fields", "type": "Dict[str, Union[allennlp.data.fields.field.Field[Any], allennlp.data.fields.text_field.TextField, allennlp.data.fields.index_field.IndexField, allennlp.data.fields.metadata_field.MetadataField[nothing]]]"}, {"lineNumber": 210, "col_offset": 31, "nodeName": "IndexField", "type": "Type[allennlp.data.fields.index_field.IndexField]"}, {"lineNumber": 210, "col_offset": 42, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 210, "col_offset": 54, "nodeName": "passage_field", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "fields", "type": "Dict[str, Union[allennlp.data.fields.field.Field[Any], allennlp.data.fields.text_field.TextField, allennlp.data.fields.index_field.IndexField, allennlp.data.fields.metadata_field.MetadataField[nothing]]]"}, {"lineNumber": 211, "col_offset": 29, "nodeName": "IndexField", "type": "Type[allennlp.data.fields.index_field.IndexField]"}, {"lineNumber": 211, "col_offset": 40, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 211, "col_offset": 50, "nodeName": "passage_field", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "metadata", "type": "Dict[str, Any]"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "token", "type": "str"}, {"lineNumber": 66, "col_offset": 24, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "token_offsets", "type": "List[Tuple[int, int]]"}, {"lineNumber": 66, "col_offset": 79, "nodeName": "character_span", "type": "Tuple[int, int]"}, {"lineNumber": 69, "col_offset": 7, "nodeName": "token_offsets", "type": "List[Tuple[int, int]]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 74, "col_offset": 7, "nodeName": "token_offsets", "type": "List[Tuple[int, int]]"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "token_offsets", "type": "List[Tuple[int, int]]"}, {"lineNumber": 77, "col_offset": 75, "nodeName": "character_span", "type": "Tuple[int, int]"}, {"lineNumber": 79, "col_offset": 66, "nodeName": "character_span", "type": "Tuple[int, int]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "character_span", "type": "Tuple[int, int]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 7, "nodeName": "token_offsets", "type": "List[Tuple[int, int]]"}, {"lineNumber": 35, "col_offset": 70, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 95, "col_offset": 49, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 96, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "token", "type": "str"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "num_answer_tokens", "type": "int"}, {"lineNumber": 131, "col_offset": 36, "nodeName": "answer_index", "type": "int"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "token", "type": "allennlp.data.tokenizers.token.Token"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "idx", "type": "int"}, {"lineNumber": 193, "col_offset": 32, "nodeName": "token", "type": "allennlp.data.tokenizers.token.Token"}, {"lineNumber": 193, "col_offset": 47, "nodeName": "token", "type": "allennlp.data.tokenizers.token.Token"}, {"lineNumber": 193, "col_offset": 56, "nodeName": "question_tokens", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 194, "col_offset": 31, "nodeName": "token", "type": "allennlp.data.tokenizers.token.Token"}, {"lineNumber": 194, "col_offset": 46, "nodeName": "token", "type": "allennlp.data.tokenizers.token.Token"}, {"lineNumber": 194, "col_offset": 55, "nodeName": "passage_tokens", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "candidate_answers", "type": "Counter[Any]"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "token", "type": "str"}, {"lineNumber": 31, "col_offset": 37, "nodeName": "IGNORED_TOKENS", "type": "Set[str]"}, {"lineNumber": 34, "col_offset": 48, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 35, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 35, "col_offset": 55, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 66, "col_offset": 47, "nodeName": "token_offsets", "type": "List[Tuple[int, int]]"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "start_index", "type": "int"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "start_index", "type": "int"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "token_offsets", "type": "List[Tuple[int, int]]"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "token_offsets", "type": "List[Tuple[int, int]]"}, {"lineNumber": 84, "col_offset": 9, "nodeName": "token_offsets", "type": "List[Tuple[int, int]]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 90, "col_offset": 21, "nodeName": "end_index", "type": "int"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "word_positions", "type": "Dict[str, List[int]]"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 117, "col_offset": 50, "nodeName": "STRIPPED_CHARACTERS", "type": "str"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "answer_tokens", "type": "List[str]"}, {"lineNumber": 122, "col_offset": 18, "nodeName": "answer_index", "type": "int"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "num_answer_tokens", "type": "int"}, {"lineNumber": 123, "col_offset": 24, "nodeName": "normalized_tokens", "type": "List[str]"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "token", "type": "str"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "answer_index", "type": "int"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "span_end", "type": "int"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 96, "col_offset": 67, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 96, "col_offset": 72, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 142, "col_offset": 66, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 142, "col_offset": 71, "nodeName": "Any", "type": "Any"}, {"lineNumber": 184, "col_offset": 35, "nodeName": "token", "type": "allennlp.data.tokenizers.token.Token"}, {"lineNumber": 184, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 184, "col_offset": 51, "nodeName": "text", "type": "str"}, {"lineNumber": 208, "col_offset": 31, "nodeName": "most_common", "type": "Callable"}, {"lineNumber": 66, "col_offset": 61, "nodeName": "start_index", "type": "int"}, {"lineNumber": 77, "col_offset": 59, "nodeName": "end_index", "type": "int"}, {"lineNumber": 79, "col_offset": 50, "nodeName": "end_index", "type": "int"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "end_index", "type": "int"}, {"lineNumber": 35, "col_offset": 76, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 35, "col_offset": 81, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "text", "type": "str"}, {"lineNumber": 110, "col_offset": 23, "nodeName": "token", "type": "str"}, {"lineNumber": 122, "col_offset": 55, "nodeName": "span_end", "type": "int"}, {"lineNumber": 122, "col_offset": 70, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 122, "col_offset": 74, "nodeName": "normalized_tokens", "type": "List[str]"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "answer_tokens", "type": "List[str]"}, {"lineNumber": 127, "col_offset": 21, "nodeName": "token", "type": "str"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "IGNORED_TOKENS", "type": "Set[str]"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "span_end", "type": "int"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "span_start", "type": "int"}, {"lineNumber": 132, "col_offset": 42, "nodeName": "span_end", "type": "int"}, {"lineNumber": 184, "col_offset": 51, "nodeName": "token", "type": "allennlp.data.tokenizers.token.Token"}, {"lineNumber": 207, "col_offset": 31, "nodeName": "span_start", "type": "int"}, {"lineNumber": 207, "col_offset": 43, "nodeName": "span_end", "type": "int"}, {"lineNumber": 208, "col_offset": 31, "nodeName": "candidate_answers", "type": "Counter[Any]"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 30, "col_offset": 53, "nodeName": "STRIPPED_CHARACTERS", "type": "str"}, {"lineNumber": 34, "col_offset": 54, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 34, "col_offset": 59, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "token", "type": "allennlp.data.tokenizers.token.Token"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 123, "col_offset": 42, "nodeName": "span_end", "type": "int"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "answer_index", "type": "int"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "answer_text", "type": "str"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 30, "col_offset": 34, "nodeName": "text", "type": "str"}]