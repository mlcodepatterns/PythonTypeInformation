[{"lineNumber": 10, "col_offset": 20, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "field1", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "field2", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "field3", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "list_field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "field1", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "field2", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "field3", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "list_field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "field1", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "field2", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "field3", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "list_field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "padding_lengths", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "array", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "list_field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "padding_lengths", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "arrays", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TestListField"}, {"lineNumber": 13, "col_offset": 21, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 26, "col_offset": 17, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 30, "col_offset": 21, "nodeName": "ListField", "type": "Type[allennlp.data.fields.list_field.ListField]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "get_padding_lengths", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 38, "col_offset": 17, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "ListField", "type": "Type[allennlp.data.fields.list_field.ListField]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "pad", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "ListField", "type": "Type[allennlp.data.fields.list_field.ListField]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "get_padding_lengths", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "padding_lengths", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "padding_lengths", "type": "Any"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "pad", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "padding_lengths", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 78, "col_offset": 21, "nodeName": "ListField", "type": "Type[allennlp.data.fields.list_field.ListField]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "get_padding_lengths", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "pad", "type": "Any"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "padding_lengths", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "words", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "characters", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "words", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 30, "col_offset": 32, "nodeName": "field1", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 30, "col_offset": 40, "nodeName": "field2", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 30, "col_offset": 48, "nodeName": "field3", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "list_field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 31, "col_offset": 25, "nodeName": "self", "type": "TestListField"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "list_field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "field1", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "field2", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 41, "col_offset": 48, "nodeName": "field3", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "list_field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "self", "type": "TestListField"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "list_field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "get_padding_lengths", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 45, "col_offset": 61, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 46, "col_offset": 61, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 47, "col_offset": 61, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "field1", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "field2", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "field3", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "list_field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "self", "type": "TestListField"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "list_field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "list_field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 61, "col_offset": 61, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 62, "col_offset": 61, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 63, "col_offset": 61, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 64, "col_offset": 61, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 65, "col_offset": 61, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "field1", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 78, "col_offset": 40, "nodeName": "field2", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 78, "col_offset": 48, "nodeName": "field3", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "list_field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "self", "type": "TestListField"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "list_field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "list_field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 83, "col_offset": 55, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 87, "col_offset": 48, "nodeName": "characters", "type": "Any"}, {"lineNumber": 87, "col_offset": 63, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 93, "col_offset": 48, "nodeName": "characters", "type": "Any"}, {"lineNumber": 93, "col_offset": 63, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 99, "col_offset": 48, "nodeName": "characters", "type": "Any"}, {"lineNumber": 99, "col_offset": 63, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "TestListField"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "TestListField"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "TestListField"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "TestListField"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestListField"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestListField"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestListField"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestListField"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestListField"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 23, "col_offset": 14, "nodeName": "TestListField", "type": "Type[TestListField]"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "self", "type": "TestListField"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "list_field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "array", "type": "Any"}, {"lineNumber": 45, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 46, "col_offset": 48, "nodeName": "array", "type": "Any"}, {"lineNumber": 46, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "array", "type": "Any"}, {"lineNumber": 47, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "array", "type": "Any"}, {"lineNumber": 61, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 62, "col_offset": 48, "nodeName": "array", "type": "Any"}, {"lineNumber": 62, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 63, "col_offset": 48, "nodeName": "array", "type": "Any"}, {"lineNumber": 63, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 64, "col_offset": 48, "nodeName": "array", "type": "Any"}, {"lineNumber": 64, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "array", "type": "Any"}, {"lineNumber": 65, "col_offset": 61, "nodeName": "numpy", "type": "module"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 83, "col_offset": 55, "nodeName": "numpy", "type": "module"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 87, "col_offset": 63, "nodeName": "numpy", "type": "module"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 93, "col_offset": 63, "nodeName": "numpy", "type": "module"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 99, "col_offset": 63, "nodeName": "numpy", "type": "module"}, {"lineNumber": 26, "col_offset": 61, "nodeName": "token_indexers", "type": "Dict[str, Union[Type[allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer], Type[allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer], Type[allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]]]"}, {"lineNumber": 27, "col_offset": 74, "nodeName": "token_indexers", "type": "Dict[str, Union[Type[allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer], Type[allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer], Type[allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]]]"}, {"lineNumber": 28, "col_offset": 67, "nodeName": "token_indexers", "type": "Dict[str, Union[Type[allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer], Type[allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer], Type[allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]]]"}, {"lineNumber": 37, "col_offset": 61, "nodeName": "token_indexers", "type": "Dict[str, Union[Type[allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer], Type[allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer], Type[allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]]]"}, {"lineNumber": 38, "col_offset": 74, "nodeName": "token_indexers", "type": "Dict[str, Union[Type[allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer], Type[allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer], Type[allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]]]"}, {"lineNumber": 39, "col_offset": 67, "nodeName": "token_indexers", "type": "Dict[str, Union[Type[allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer], Type[allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer], Type[allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]]]"}, {"lineNumber": 51, "col_offset": 61, "nodeName": "token_indexers", "type": "Dict[str, Union[Type[allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer], Type[allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer], Type[allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]]]"}, {"lineNumber": 52, "col_offset": 74, "nodeName": "token_indexers", "type": "Dict[str, Union[Type[allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer], Type[allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer], Type[allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]]]"}, {"lineNumber": 53, "col_offset": 67, "nodeName": "token_indexers", "type": "Dict[str, Union[Type[allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer], Type[allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer], Type[allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]]]"}, {"lineNumber": 69, "col_offset": 28, "nodeName": "token_indexers", "type": "Dict[str, Union[Type[allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer], Type[allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer], Type[allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]]]"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "token_indexers", "type": "Dict[str, Union[Type[allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer], Type[allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer], Type[allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]]]"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "token_indexers", "type": "Dict[str, Union[Type[allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer], Type[allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer], Type[allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]]]"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "token_indexers", "type": "Dict[str, Union[Type[allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer], Type[allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer], Type[allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]]]"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "token_indexers", "type": "Dict[str, Union[Type[allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer], Type[allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer], Type[allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]]]"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "token_indexers", "type": "Dict[str, Union[Type[allennlp.data.token_indexers.single_id_token_indexer.SingleIdTokenIndexer], Type[allennlp.data.token_indexers.token_characters_indexer.TokenCharactersIndexer], Type[allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]]]"}]