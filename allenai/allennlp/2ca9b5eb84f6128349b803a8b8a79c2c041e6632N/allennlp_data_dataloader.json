[{"lineNumber": 17, "col_offset": 0, "nodeName": "allennlp_collate", "type": "Callable[[List[allennlp.data.instance.Instance]], Dict[str, Union[Any, Dict[str, Any]]]]"}, {"lineNumber": 14, "col_offset": 0, "nodeName": "TensorDict", "type": "Type[Dict[str, Union[Any, Dict[str, Any]]]]"}, {"lineNumber": 17, "col_offset": 51, "nodeName": "TensorDict", "type": "Type[Dict[str, Union[Any, Dict[str, Any]]]]"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 22, "col_offset": 30, "nodeName": "DataLoader", "type": "Any"}, {"lineNumber": 140, "col_offset": 0, "nodeName": "default_implementation", "type": "str"}, {"lineNumber": 14, "col_offset": 13, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "batch", "type": "allennlp.data.batch.Batch"}, {"lineNumber": 22, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 139, "col_offset": 55, "nodeName": "DataLoader", "type": "Type[DataLoader]"}, {"lineNumber": 140, "col_offset": 0, "nodeName": "DataLoader", "type": "Type[DataLoader]"}, {"lineNumber": 18, "col_offset": 12, "nodeName": "Batch", "type": "Type[allennlp.data.batch.Batch]"}, {"lineNumber": 18, "col_offset": 18, "nodeName": "instances", "type": "List[allennlp.data.instance.Instance]"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "as_tensor_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "allennlp_collate", "type": "Callable[[List[allennlp.data.instance.Instance]], Dict[str, Union[Any, Dict[str, Any]]]]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "_batches_per_epoch", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "_data_generator", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "_batches_per_epoch", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 139, "col_offset": 0, "nodeName": "register", "type": "Callable"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 17, "col_offset": 32, "nodeName": "List", "type": "Any"}, {"lineNumber": 19, "col_offset": 11, "nodeName": "batch", "type": "allennlp.data.batch.Batch"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "get_padding_lengths", "type": "Callable[[], Dict[str, Dict[str, int]]]"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "DataLoader"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "batches_per_epoch", "type": "int"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "DataLoader"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "__iter__", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "self", "type": "DataLoader"}, {"lineNumber": 86, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "_batches_per_epoch", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "batch_sampler", "type": "allennlp.common.lazy.Lazy[Any]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "batch_sampler_", "type": "Any"}, {"lineNumber": 114, "col_offset": 11, "nodeName": "sampler", "type": "allennlp.common.lazy.Lazy[Any]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "sampler_", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "cls", "type": "Type[DataLoader]"}, {"lineNumber": 139, "col_offset": 0, "nodeName": "DataLoader", "type": "Type[DataLoader]"}, {"lineNumber": 14, "col_offset": 23, "nodeName": "Union", "type": "Any"}, {"lineNumber": 17, "col_offset": 37, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "batch", "type": "allennlp.data.batch.Batch"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 67, "col_offset": 23, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "shuffle", "type": "bool"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "batch_sampler", "type": "Any"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "num_workers", "type": "int"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "collate_fn", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "pin_memory", "type": "bool"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "drop_last", "type": "bool"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "timeout", "type": "int"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "worker_init_fn", "type": "Any"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "multiprocessing_context", "type": "str"}, {"lineNumber": 79, "col_offset": 55, "nodeName": "__len__", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "self", "type": "DataLoader"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "construct", "type": "Callable"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "construct", "type": "Callable"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "shuffle", "type": "bool"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "sampler_", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "batch_sampler_", "type": "Any"}, {"lineNumber": 125, "col_offset": 24, "nodeName": "num_workers", "type": "int"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "allennlp_collate", "type": "Callable[[List[allennlp.data.instance.Instance]], Dict[str, Union[Any, Dict[str, Any]]]]"}, {"lineNumber": 130, "col_offset": 23, "nodeName": "pin_memory", "type": "bool"}, {"lineNumber": 131, "col_offset": 22, "nodeName": "drop_last", "type": "bool"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "timeout", "type": "int"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "worker_init_fn", "type": "Any"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "multiprocessing_context", "type": "str"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "batches_per_epoch", "type": "int"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "_data_generator", "type": "Any"}, {"lineNumber": 111, "col_offset": 29, "nodeName": "batch_sampler", "type": "allennlp.common.lazy.Lazy[Any]"}, {"lineNumber": 111, "col_offset": 65, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "sampler", "type": "allennlp.common.lazy.Lazy[Any]"}, {"lineNumber": 115, "col_offset": 53, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 14, "col_offset": 29, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 79, "col_offset": 55, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "next", "type": "Callable"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "_data_generator", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "self", "type": "DataLoader"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "__iter__", "type": "Any"}, {"lineNumber": 14, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 14, "col_offset": 43, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "self", "type": "DataLoader"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "next", "type": "Callable"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "_data_generator", "type": "Any"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "self", "type": "DataLoader"}, {"lineNumber": 14, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 14, "col_offset": 53, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 14, "col_offset": 53, "nodeName": "torch", "type": "Any"}]