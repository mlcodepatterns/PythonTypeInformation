[{"lineNumber": 11, "col_offset": 19, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "default_iterator", "type": "str"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "default_data_iterator", "type": "str"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "default_data_iterator", "type": "str"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "default_data_iterator", "type": "str"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "default_iterator", "type": "str"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "default_iterator", "type": "str"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "default_tokenizer", "type": "str"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "default_tokenizer", "type": "str"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "default_tokenizer", "type": "str"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "default_iterator", "type": "str"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "default_iterator", "type": "str"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "default_token_indexer", "type": "str"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "default_token_indexer", "type": "str"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "default_token_indexer", "type": "str"}, {"lineNumber": 122, "col_offset": 41, "nodeName": "default_iterator", "type": "str"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "default_regularizer", "type": "str"}, {"lineNumber": 146, "col_offset": 30, "nodeName": "default_regularizer", "type": "str"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "default_regularizer", "type": "str"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "default_regularizer", "type": "str"}, {"lineNumber": 150, "col_offset": 39, "nodeName": "default_regularizer", "type": "str"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "default_initializer", "type": "str"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "default_initializer", "type": "str"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "default_initializer", "type": "str"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "default_initializer", "type": "str"}, {"lineNumber": 191, "col_offset": 39, "nodeName": "default_initializer", "type": "str"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 33, "col_offset": 54, "nodeName": "Fake", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "_dataset_readers", "type": "Dict[str, Type[allennlp.data.dataset_reader.DatasetReader]]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 55, "col_offset": 53, "nodeName": "Fake", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "_data_iterators", "type": "Dict[str, Type[allennlp.data.data_iterator.DataIterator]]"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "default_iterator", "type": "str"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "default_data_iterator", "type": "str"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 86, "col_offset": 49, "nodeName": "Fake", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "_tokenizers", "type": "Dict[str, Type[allennlp.data.tokenizer.Tokenizer]]"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 91, "col_offset": 48, "nodeName": "default_iterator", "type": "str"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 114, "col_offset": 53, "nodeName": "Fake", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "_token_indexers", "type": "Dict[str, Type[allennlp.data.token_indexer.TokenIndexer[Any]]]"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 119, "col_offset": 52, "nodeName": "default_iterator", "type": "str"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 142, "col_offset": 51, "nodeName": "Fake", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "_regularizers", "type": "Dict[str, Type[allennlp.training.regularizer.Regularizer]]"}, {"lineNumber": 146, "col_offset": 30, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 147, "col_offset": 50, "nodeName": "default_regularizer", "type": "str"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "normal", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "orthogonal", "type": "Any"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "constant", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "dirac", "type": "Any"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "xavier_normal", "type": "Any"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "xavier_uniform", "type": "Any"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "kaiming_normal", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "kaiming_uniform", "type": "Any"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "eye", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 168, "col_offset": 17, "nodeName": "value", "type": "Any"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "items", "type": "Callable"}, {"lineNumber": 183, "col_offset": 51, "nodeName": "fake_initializer", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "_initializers", "type": "Dict[str, Any]"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 188, "col_offset": 50, "nodeName": "default_initializer", "type": "str"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 22, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "list_dataset_readers", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "get_dataset_reader", "type": "Callable[[Any, str], Type[allennlp.data.dataset_reader.DatasetReader]]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "list_data_iterators", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "get_data_iterator", "type": "Callable[[Any, str], Type[allennlp.data.data_iterator.DataIterator]]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "list_data_iterators", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "list_tokenizers", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "get_tokenizer", "type": "Callable[[Any, str], Type[allennlp.data.tokenizer.Tokenizer]]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "list_token_indexers", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "get_token_indexer", "type": "Callable[[Any, str], Type[allennlp.data.token_indexer.TokenIndexer[Any]]]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 131, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "list_regularizers", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "get_regularizer", "type": "Callable[[Any, Any], Type[allennlp.training.regularizer.Regularizer]]"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "init", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "init", "type": "Any"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "init", "type": "Any"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "init", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "init", "type": "Any"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "init", "type": "Any"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "init", "type": "Any"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "init", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "init", "type": "Any"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "init", "type": "Any"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "init", "type": "Any"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "all_initializers", "type": "Dict[str, Any]"}, {"lineNumber": 169, "col_offset": 52, "nodeName": "value", "type": "Any"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "list_initializers", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "get_initializer", "type": "Callable[[Any, Any], Callable[[Any], None]]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "get_dataset_reader", "type": "Callable[[Any, str], Type[allennlp.data.dataset_reader.DatasetReader]]"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "get_dataset_reader", "type": "Callable[[Any, str], Type[allennlp.data.dataset_reader.DatasetReader]]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "get_dataset_reader", "type": "Callable[[Any, str], Type[allennlp.data.dataset_reader.DatasetReader]]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "get_dataset_reader", "type": "Callable[[Any, str], Type[allennlp.data.dataset_reader.DatasetReader]]"}, {"lineNumber": 22, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 29, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "get_data_iterator", "type": "Callable[[Any, str], Type[allennlp.data.data_iterator.DataIterator]]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "get_data_iterator", "type": "Callable[[Any, str], Type[allennlp.data.data_iterator.DataIterator]]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "get_data_iterator", "type": "Callable[[Any, str], Type[allennlp.data.data_iterator.DataIterator]]"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "list_data_iterators", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "list_data_iterators", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 63, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "get_tokenizer", "type": "Callable[[Any, str], Type[allennlp.data.tokenizer.Tokenizer]]"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "get_tokenizer", "type": "Callable[[Any, str], Type[allennlp.data.tokenizer.Tokenizer]]"}, {"lineNumber": 75, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "list_tokenizers", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "list_tokenizers", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "get_token_indexer", "type": "Callable[[Any, str], Type[allennlp.data.token_indexer.TokenIndexer[Any]]]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "get_token_indexer", "type": "Callable[[Any, str], Type[allennlp.data.token_indexer.TokenIndexer[Any]]]"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "list_token_indexers", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "list_token_indexers", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "get_regularizer", "type": "Callable[[Any, Any], Type[allennlp.training.regularizer.Regularizer]]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "get_regularizer", "type": "Callable[[Any, Any], Type[allennlp.training.regularizer.Regularizer]]"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 138, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "list_regularizers", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "list_regularizers", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "nn", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "nn", "type": "Any"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "get_initializer", "type": "Callable[[Any, Any], Callable[[Any], None]]"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "key", "type": "str"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 179, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "list_initializers", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "list_initializers", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 160, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 161, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 163, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 169, "col_offset": 19, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}]