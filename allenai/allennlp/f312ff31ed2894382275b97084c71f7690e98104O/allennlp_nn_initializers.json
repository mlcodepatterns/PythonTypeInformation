[{"lineNumber": 40, "col_offset": 0, "nodeName": "_initializer_wrapper", "type": "Callable[[Callable[..., None]], Type[Initializer]]"}, {"lineNumber": 11, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 14, "col_offset": 18, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 11, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 11, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "default_implementation", "type": "str"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "Initializer", "type": "Type[Initializer]"}, {"lineNumber": 52, "col_offset": 11, "nodeName": "Init", "type": "Type[Any]"}, {"lineNumber": 40, "col_offset": 64, "nodeName": "Type", "type": "Any"}, {"lineNumber": 11, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 28, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 40, "col_offset": 69, "nodeName": "Initializer", "type": "Type[Initializer]"}, {"lineNumber": 57, "col_offset": 18, "nodeName": "_initializer_wrapper", "type": "Callable[[Callable[..., None]], Type[Initializer]]"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "normal", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "_initializer_wrapper", "type": "Callable[[Callable[..., None]], Type[Initializer]]"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "_initializer_wrapper", "type": "Callable[[Callable[..., None]], Type[Initializer]]"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "orthogonal", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "_initializer_wrapper", "type": "Callable[[Callable[..., None]], Type[Initializer]]"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "constant", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "_initializer_wrapper", "type": "Callable[[Callable[..., None]], Type[Initializer]]"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "dirac", "type": "Any"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "_initializer_wrapper", "type": "Callable[[Callable[..., None]], Type[Initializer]]"}, {"lineNumber": 62, "col_offset": 46, "nodeName": "xavier_normal", "type": "Any"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "_initializer_wrapper", "type": "Callable[[Callable[..., None]], Type[Initializer]]"}, {"lineNumber": 63, "col_offset": 47, "nodeName": "xavier_uniform", "type": "Any"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "_initializer_wrapper", "type": "Callable[[Callable[..., None]], Type[Initializer]]"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "kaiming_normal", "type": "Any"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "_initializer_wrapper", "type": "Callable[[Callable[..., None]], Type[Initializer]]"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "kaiming_uniform", "type": "Any"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "_initializer_wrapper", "type": "Callable[[Callable[..., None]], Type[Initializer]]"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "_initializer_wrapper", "type": "Callable[[Callable[..., None]], Type[Initializer]]"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "eye", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "_initializers", "type": "Union[Dict[str, Initializer], Dict[nothing, nothing]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "_default_initializer", "type": "Initializer"}, {"lineNumber": 96, "col_offset": 36, "nodeName": "default_initializer", "type": "Initializer"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "_exclude", "type": "Union[Sequence[str], List[nothing]]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "not_explicitly_initialized_parameters", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "not_explicitly_initialized_parameters", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "exclude_regexes", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "initializers", "type": "Dict[nothing, Any]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "name", "type": "nothing"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "default", "type": "Any"}, {"lineNumber": 21, "col_offset": 31, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 33, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "choice", "type": "Any"}, {"lineNumber": 40, "col_offset": 40, "nodeName": "Callable", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "_init_function", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "init_function", "type": "Callable[..., None]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "init", "type": "Any"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "init", "type": "Any"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "init", "type": "Any"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "init", "type": "Any"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "init", "type": "Any"}, {"lineNumber": 62, "col_offset": 46, "nodeName": "init", "type": "Any"}, {"lineNumber": 63, "col_offset": 47, "nodeName": "init", "type": "Any"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "init", "type": "Any"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "init", "type": "Any"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "init", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "init", "type": "Any"}, {"lineNumber": 78, "col_offset": 38, "nodeName": "Initializer", "type": "Type[Initializer]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "InitializerApplicator"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "initializers", "type": "Dict[str, Initializer]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "InitializerApplicator"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "InitializerApplicator"}, {"lineNumber": 97, "col_offset": 24, "nodeName": "exclude", "type": "Sequence[str]"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "Module", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 112, "col_offset": 18, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "is_initialized", "type": "bool"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "_default_initializer", "type": "Initializer"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 133, "col_offset": 33, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "pop", "type": "Any"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "initializer_params", "type": "Any"}, {"lineNumber": 177, "col_offset": 18, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "assert_empty", "type": "Callable[[str], None]"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "__name__", "type": "str"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "InitializerApplicator", "type": "Type[InitializerApplicator]"}, {"lineNumber": 179, "col_offset": 37, "nodeName": "initializers", "type": "Dict[nothing, Any]"}, {"lineNumber": 179, "col_offset": 51, "nodeName": "default", "type": "Any"}, {"lineNumber": 179, "col_offset": 60, "nodeName": "exclude_regexes", "type": "Any"}, {"lineNumber": 21, "col_offset": 31, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "pop_choice", "type": "Callable[..., Any]"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "from_params", "type": "Callable[[allennlp.common.params.Params], Any]"}, {"lineNumber": 37, "col_offset": 51, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 35, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "_init_function", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "cls", "type": "Any"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "nn", "type": "Any"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "nn", "type": "Any"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "nn", "type": "Any"}, {"lineNumber": 62, "col_offset": 46, "nodeName": "nn", "type": "Any"}, {"lineNumber": 63, "col_offset": 47, "nodeName": "nn", "type": "Any"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "nn", "type": "Any"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "nn", "type": "Any"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 79, "col_offset": 26, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 78, "col_offset": 52, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "module", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "initializer_regex", "type": "str"}, {"lineNumber": 114, "col_offset": 35, "nodeName": "initializer", "type": "Initializer"}, {"lineNumber": 114, "col_offset": 50, "nodeName": "items", "type": "Callable"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "is_initialized", "type": "bool"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "self", "type": "InitializerApplicator"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 173, "col_offset": 33, "nodeName": "pop", "type": "Any"}, {"lineNumber": 173, "col_offset": 44, "nodeName": "name", "type": "nothing"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "name", "type": "nothing"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "initializers", "type": "Dict[nothing, Any]"}, {"lineNumber": 176, "col_offset": 33, "nodeName": "from_params", "type": "Callable[[allennlp.common.params.Params], Any]"}, {"lineNumber": 176, "col_offset": 57, "nodeName": "initializer_params", "type": "Any"}, {"lineNumber": 177, "col_offset": 18, "nodeName": "initializers", "type": "Dict[nothing, Any]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "cls", "type": "Type[InitializerApplicator]"}, {"lineNumber": 21, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 36, "col_offset": 47, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 45, "col_offset": 35, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "_kwargs", "type": "Any"}, {"lineNumber": 48, "col_offset": 50, "nodeName": "_init_function", "type": "Any"}, {"lineNumber": 48, "col_offset": 71, "nodeName": "_kwargs", "type": "Any"}, {"lineNumber": 57, "col_offset": 39, "nodeName": "torch", "type": "Any"}, {"lineNumber": 58, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 62, "col_offset": 46, "nodeName": "torch", "type": "Any"}, {"lineNumber": 63, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 66, "col_offset": 39, "nodeName": "torch", "type": "Any"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 114, "col_offset": 50, "nodeName": "_initializers", "type": "Union[Dict[str, Initializer], Dict[nothing, nothing]]"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "search", "type": "Callable"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "initializer_regex", "type": "str"}, {"lineNumber": 115, "col_offset": 48, "nodeName": "name", "type": "Any"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "is_initialized", "type": "bool"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 72, "nodeName": "name", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 77, "nodeName": "name", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "_default_initializer", "type": "Initializer"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 172, "col_offset": 25, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 173, "col_offset": 33, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 175, "col_offset": 23, "nodeName": "name", "type": "nothing"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "name", "type": "nothing"}, {"lineNumber": 176, "col_offset": 33, "nodeName": "Initializer", "type": "Type[Initializer]"}, {"lineNumber": 177, "col_offset": 46, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 36, "col_offset": 47, "nodeName": "cls", "type": "Type[Initializer]"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "choice", "type": "Any"}, {"lineNumber": 45, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 71, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "as_dict", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 114, "col_offset": 50, "nodeName": "self", "type": "InitializerApplicator"}, {"lineNumber": 115, "col_offset": 19, "nodeName": "re", "type": "module"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "initializer", "type": "Initializer"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 117, "col_offset": 73, "nodeName": "name", "type": "Any"}, {"lineNumber": 117, "col_offset": 79, "nodeName": "initializer_regex", "type": "str"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "not_explicitly_initialized_parameters", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 121, "col_offset": 62, "nodeName": "name", "type": "Any"}, {"lineNumber": 121, "col_offset": 68, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "search", "type": "Callable"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "exclude_regex", "type": "str"}, {"lineNumber": 126, "col_offset": 44, "nodeName": "name", "type": "Any"}, {"lineNumber": 126, "col_offset": 54, "nodeName": "exclude_regex", "type": "str"}, {"lineNumber": 126, "col_offset": 71, "nodeName": "_exclude", "type": "Union[Sequence[str], List[nothing]]"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "self", "type": "InitializerApplicator"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "name", "type": "nothing"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "name", "type": "nothing"}, {"lineNumber": 177, "col_offset": 46, "nodeName": "Initializer", "type": "Type[Initializer]"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "cls", "type": "Type[Initializer]"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 126, "col_offset": 19, "nodeName": "re", "type": "module"}, {"lineNumber": 126, "col_offset": 71, "nodeName": "self", "type": "InitializerApplicator"}]