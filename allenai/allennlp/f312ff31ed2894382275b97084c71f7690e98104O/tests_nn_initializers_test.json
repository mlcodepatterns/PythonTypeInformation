[{"lineNumber": 13, "col_offset": 23, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "disabled", "type": "bool"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "disabled", "type": "bool"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "Module", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "initializers", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "bias", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "weight", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "to_exclude", "type": "List[str]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "initializer_applicator", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "initializers", "type": "Dict[str, allennlp.nn.initializers.Initializer]"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "_initializers", "type": "Dict[str, allennlp.nn.initializers.Initializer]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "Module", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "tearDown", "type": "Callable[[], None]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 52, "col_offset": 57, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "Net", "type": "Type[Any]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "initializers", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "linear_1_with_funky_name", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "equal", "type": "Any"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "linear_1_with_funky_name", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "equal", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 78, "col_offset": 67, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "_exclude", "type": "Union[List[nothing], Sequence[str]]"}, {"lineNumber": 80, "col_offset": 50, "nodeName": "to_exclude", "type": "List[str]"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "initializer_applicator", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "_init_function", "type": "Any"}, {"lineNumber": 82, "col_offset": 54, "nodeName": "orthogonal", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "Net", "type": "Type[Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "initializers", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "equal", "type": "Any"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "linear_1_with_funky_name", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "linear_2", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "conv", "type": "Any"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "parse_string", "type": "Any"}, {"lineNumber": 51, "col_offset": 59, "nodeName": "json_params", "type": "str"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "conv", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "equal", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "linear_2", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "equal", "type": "Any"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "to_exclude", "type": "List[str]"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "initializer_applicator", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 82, "col_offset": 54, "nodeName": "init", "type": "Any"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "initializers", "type": "Dict[str, allennlp.nn.initializers.Initializer]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 86, "col_offset": 57, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "linear1", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "linear2", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "equal", "type": "Any"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "equal", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 15, "col_offset": 14, "nodeName": "TestInitializers", "type": "Type[TestInitializers]"}, {"lineNumber": 15, "col_offset": 32, "nodeName": "self", "type": "TestInitializers"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "TestInitializers", "type": "Type[TestInitializers]"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "self", "type": "TestInitializers"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 30, "col_offset": 31, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "Conv1d", "type": "Any"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "ConfigFactory", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 60, "col_offset": 43, "nodeName": "ones", "type": "Any"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "ones", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "initializers", "type": "Dict[str, allennlp.nn.initializers.Initializer]"}, {"lineNumber": 82, "col_offset": 54, "nodeName": "nn", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 86, "col_offset": 57, "nodeName": "numpy", "type": "module"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "linear1", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 106, "col_offset": 31, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "linear2", "type": "Any"}, {"lineNumber": 109, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 24, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 27, "col_offset": 79, "nodeName": "constant", "type": "Any"}, {"lineNumber": 27, "col_offset": 88, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 30, "col_offset": 47, "nodeName": "ones", "type": "Any"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "nn", "type": "Any"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "nn", "type": "Any"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "nn", "type": "Any"}, {"lineNumber": 51, "col_offset": 24, "nodeName": "pyhocon", "type": "Any"}, {"lineNumber": 57, "col_offset": 47, "nodeName": "ones", "type": "Any"}, {"lineNumber": 60, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 60, "col_offset": 54, "nodeName": "size", "type": "Any"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 62, "col_offset": 54, "nodeName": "size", "type": "Any"}, {"lineNumber": 65, "col_offset": 47, "nodeName": "ones", "type": "Any"}, {"lineNumber": 82, "col_offset": 54, "nodeName": "torch", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 100, "col_offset": 80, "nodeName": "constant", "type": "Any"}, {"lineNumber": 100, "col_offset": 89, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 106, "col_offset": 47, "nodeName": "ones", "type": "Any"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 109, "col_offset": 47, "nodeName": "ones", "type": "Any"}, {"lineNumber": 30, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 30, "col_offset": 58, "nodeName": "size", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "Net", "type": "Type[Any]"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 37, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 57, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 57, "col_offset": 58, "nodeName": "size", "type": "Any"}, {"lineNumber": 60, "col_offset": 54, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 62, "col_offset": 54, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 65, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 65, "col_offset": 58, "nodeName": "size", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "Net", "type": "Type[Any]"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 93, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "weight", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "bias", "type": "Any"}, {"lineNumber": 106, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 106, "col_offset": 58, "nodeName": "size", "type": "Any"}, {"lineNumber": 109, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 109, "col_offset": 58, "nodeName": "size", "type": "Any"}, {"lineNumber": 30, "col_offset": 58, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 57, "col_offset": 58, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 65, "col_offset": 58, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "linear2", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "linear2", "type": "Any"}, {"lineNumber": 106, "col_offset": 58, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 109, "col_offset": 58, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "self", "type": "Any"}]