[{"lineNumber": 13, "col_offset": 22, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "feedforward", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "feedforward", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "feedforward", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "constant_init", "type": "allennlp.nn.initializers.Initializer"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 15, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 21, "col_offset": 46, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 34, "col_offset": 46, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 36, "col_offset": 55, "nodeName": "ReLU", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 37, "col_offset": 55, "nodeName": "ReLU", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 65, "col_offset": 46, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "feedforward", "type": "Any"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 21, "col_offset": 22, "nodeName": "FeedForward", "type": "Type[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "_activations", "type": "Any"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 23, "col_offset": 27, "nodeName": "a", "type": "Any"}, {"lineNumber": 23, "col_offset": 30, "nodeName": "ReLU", "type": "Any"}, {"lineNumber": 23, "col_offset": 49, "nodeName": "a", "type": "Any"}, {"lineNumber": 23, "col_offset": 54, "nodeName": "_activations", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "_linear_layers", "type": "Any"}, {"lineNumber": 25, "col_offset": 43, "nodeName": "l", "type": "Any"}, {"lineNumber": 25, "col_offset": 48, "nodeName": "_linear_layers", "type": "Any"}, {"lineNumber": 34, "col_offset": 22, "nodeName": "FeedForward", "type": "Type[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "_activations", "type": "Any"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "_activations", "type": "Any"}, {"lineNumber": 36, "col_offset": 55, "nodeName": "nn", "type": "Any"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "_activations", "type": "Any"}, {"lineNumber": 37, "col_offset": 55, "nodeName": "nn", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 40, "col_offset": 59, "nodeName": "ReLU", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "_linear_layers", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "d", "type": "Any"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "FeedForward", "type": "Type[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "FeedForward", "type": "Type[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 65, "col_offset": 22, "nodeName": "FeedForward", "type": "Type[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "Initializer", "type": "Type[allennlp.nn.initializers.Initializer]"}, {"lineNumber": 67, "col_offset": 48, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 71, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "output", "type": "Any"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "feedforward", "type": "Any"}, {"lineNumber": 23, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 23, "col_offset": 54, "nodeName": "feedforward", "type": "Any"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "feedforward", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "size", "type": "Any"}, {"lineNumber": 25, "col_offset": 48, "nodeName": "feedforward", "type": "Any"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "feedforward", "type": "Any"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "feedforward", "type": "Any"}, {"lineNumber": 36, "col_offset": 55, "nodeName": "torch", "type": "Any"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "feedforward", "type": "Any"}, {"lineNumber": 37, "col_offset": 55, "nodeName": "torch", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "_activations", "type": "Any"}, {"lineNumber": 40, "col_offset": 59, "nodeName": "nn", "type": "Any"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "feedforward", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "weight", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "weight", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "weight", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "feedforward", "type": "Any"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "d", "type": "Any"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "feedforward", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 68, "col_offset": 52, "nodeName": "constant_init", "type": "allennlp.nn.initializers.Initializer"}, {"lineNumber": 23, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "weight", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "feedforward", "type": "Any"}, {"lineNumber": 40, "col_offset": 59, "nodeName": "torch", "type": "Any"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "feedforward", "type": "Any"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "l", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "_linear_layers", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "_linear_layers", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "_linear_layers", "type": "Any"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "Activation", "type": "Type[allennlp.nn.activations.Activation]"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 56, "col_offset": 64, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "feedforward", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "feedforward", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "feedforward", "type": "Any"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "Activation", "type": "Type[allennlp.nn.activations.Activation]"}, {"lineNumber": 56, "col_offset": 64, "nodeName": "Activation", "type": "Type[allennlp.nn.activations.Activation]"}]