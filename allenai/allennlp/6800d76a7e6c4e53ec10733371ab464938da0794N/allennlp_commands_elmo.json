[{"lineNumber": 125, "col_offset": 0, "nodeName": "empty_embedding", "type": "Callable[[], numpy.ndarray]"}, {"lineNumber": 326, "col_offset": 0, "nodeName": "elmo_command", "type": "Callable[[Any], Any]"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "DEFAULT_OPTIONS_FILE", "type": "str"}, {"lineNumber": 74, "col_offset": 0, "nodeName": "DEFAULT_WEIGHT_FILE", "type": "str"}, {"lineNumber": 75, "col_offset": 0, "nodeName": "DEFAULT_BATCH_SIZE", "type": "int"}, {"lineNumber": 78, "col_offset": 11, "nodeName": "Subcommand", "type": "Type[allennlp.commands.subcommand.Subcommand]"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 71, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 86, "col_offset": 78, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 182, "col_offset": 53, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 327, "col_offset": 4, "nodeName": "elmo_embedder", "type": "ElmoEmbedder"}, {"lineNumber": 328, "col_offset": 4, "nodeName": "output_format", "type": "str"}, {"lineNumber": 329, "col_offset": 7, "nodeName": "all", "type": "Any"}, {"lineNumber": 56, "col_offset": 5, "nodeName": "catch_warnings", "type": "Type[warnings.catch_warnings]"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "filterwarnings", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "description", "type": "str"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "group", "type": "argparse._MutuallyExclusiveGroup"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 86, "col_offset": 78, "nodeName": "argparse", "type": "module"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 130, "col_offset": 37, "nodeName": "DEFAULT_OPTIONS_FILE", "type": "str"}, {"lineNumber": 131, "col_offset": 36, "nodeName": "DEFAULT_WEIGHT_FILE", "type": "str"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "indexer", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "elmo_bilm", "type": "allennlp.modules.elmo._ElmoBiLm"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "character_ids", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "bilm_output", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "layer_activations", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "mask_with_bos_eos", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "activations", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 152, "col_offset": 61, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 182, "col_offset": 53, "nodeName": "numpy", "type": "module"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "elmo_embeddings", "type": "List[numpy.ndarray]"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "elmo_embeddings", "type": "List[numpy.ndarray]"}, {"lineNumber": 201, "col_offset": 53, "nodeName": "List", "type": "Any"}, {"lineNumber": 237, "col_offset": 42, "nodeName": "DEFAULT_BATCH_SIZE", "type": "int"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "batch", "type": "List[List[str]]"}, {"lineNumber": 237, "col_offset": 65, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 262, "col_offset": 37, "nodeName": "DEFAULT_BATCH_SIZE", "type": "int"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "sentences", "type": "List[Union[bytes, str]]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "blank_lines", "type": "List[int]"}, {"lineNumber": 290, "col_offset": 11, "nodeName": "blank_lines", "type": "List[int]"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "split_sentences", "type": "List[Union[List[bytes], List[str]]]"}, {"lineNumber": 296, "col_offset": 11, "nodeName": "use_sentence_keys", "type": "bool"}, {"lineNumber": 327, "col_offset": 20, "nodeName": "ElmoEmbedder", "type": "Type[ElmoEmbedder]"}, {"lineNumber": 327, "col_offset": 33, "nodeName": "options_file", "type": "Any"}, {"lineNumber": 327, "col_offset": 52, "nodeName": "weight_file", "type": "Any"}, {"lineNumber": 327, "col_offset": 70, "nodeName": "cuda_device", "type": "Any"}, {"lineNumber": 329, "col_offset": 7, "nodeName": "args", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "output_format", "type": "str"}, {"lineNumber": 331, "col_offset": 9, "nodeName": "top", "type": "Any"}, {"lineNumber": 56, "col_offset": 5, "nodeName": "warnings", "type": "module"}, {"lineNumber": 57, "col_offset": 4, "nodeName": "warnings", "type": "module"}, {"lineNumber": 57, "col_offset": 47, "nodeName": "FutureWarning", "type": "Type[FutureWarning]"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "_SubParsersAction", "type": "Type[argparse._SubParsersAction]"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "add_parser", "type": "Callable[..., argparse.ArgumentParser]"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "add_mutually_exclusive_group", "type": "Callable[..., argparse._MutuallyExclusiveGroup]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "set_defaults", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "numpy", "type": "module"}, {"lineNumber": 132, "col_offset": 30, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "ElmoEmbedder"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "ELMoTokenCharactersIndexer", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "ElmoEmbedder"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "_ElmoBiLm", "type": "Type[allennlp.modules.elmo._ElmoBiLm]"}, {"lineNumber": 146, "col_offset": 35, "nodeName": "options_file", "type": "str"}, {"lineNumber": 146, "col_offset": 49, "nodeName": "weight_file", "type": "str"}, {"lineNumber": 147, "col_offset": 11, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "elmo_bilm", "type": "allennlp.modules.elmo._ElmoBiLm"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "self", "type": "ElmoEmbedder"}, {"lineNumber": 164, "col_offset": 24, "nodeName": "batch_to_ids", "type": "Callable[[List[List[str]]], Any]"}, {"lineNumber": 164, "col_offset": 37, "nodeName": "batch", "type": "List[List[str]]"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "character_ids", "type": "Any"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "elmo_bilm", "type": "Any"}, {"lineNumber": 168, "col_offset": 37, "nodeName": "character_ids", "type": "Any"}, {"lineNumber": 169, "col_offset": 28, "nodeName": "bilm_output", "type": "Any"}, {"lineNumber": 170, "col_offset": 28, "nodeName": "bilm_output", "type": "Any"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "cat", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "activations", "type": "Any"}, {"lineNumber": 180, "col_offset": 28, "nodeName": "mask", "type": "Any"}, {"lineNumber": 221, "col_offset": 11, "nodeName": "batch", "type": "List[List[str]]"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 201, "col_offset": 58, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 237, "col_offset": 36, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 255, "col_offset": 21, "nodeName": "lazy_groups_of", "type": "Callable"}, {"lineNumber": 255, "col_offset": 53, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 237, "col_offset": 74, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 263, "col_offset": 38, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 284, "col_offset": 15, "nodeName": "output_format", "type": "str"}, {"lineNumber": 289, "col_offset": 23, "nodeName": "i", "type": "int"}, {"lineNumber": 299, "col_offset": 12, "nodeName": "embedded_sentences", "type": "Union[Iterator[Tuple[bytes, numpy.ndarray]], Iterator[Tuple[str, numpy.ndarray]]]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 305, "col_offset": 49, "nodeName": "fout", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 327, "col_offset": 33, "nodeName": "args", "type": "Any"}, {"lineNumber": 327, "col_offset": 52, "nodeName": "args", "type": "Any"}, {"lineNumber": 327, "col_offset": 70, "nodeName": "args", "type": "Any"}, {"lineNumber": 331, "col_offset": 9, "nodeName": "args", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "output_format", "type": "str"}, {"lineNumber": 333, "col_offset": 9, "nodeName": "average", "type": "Any"}, {"lineNumber": 336, "col_offset": 9, "nodeName": "no_grad", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "embed_file", "type": "Callable[..., None]"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "input_file", "type": "Any"}, {"lineNumber": 339, "col_offset": 16, "nodeName": "output_file", "type": "Any"}, {"lineNumber": 340, "col_offset": 16, "nodeName": "output_format", "type": "str"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 342, "col_offset": 16, "nodeName": "use_sentence_keys", "type": "Any"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "argparse", "type": "module"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "parser", "type": "argparse._SubParsersAction"}, {"lineNumber": 90, "col_offset": 34, "nodeName": "description", "type": "str"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 93, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "group", "type": "argparse._MutuallyExclusiveGroup"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "group", "type": "argparse._MutuallyExclusiveGroup"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "group", "type": "argparse._MutuallyExclusiveGroup"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 100, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 103, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "DEFAULT_OPTIONS_FILE", "type": "str"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 108, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "DEFAULT_WEIGHT_FILE", "type": "str"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 111, "col_offset": 52, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 111, "col_offset": 65, "nodeName": "DEFAULT_BATCH_SIZE", "type": "int"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 112, "col_offset": 53, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 120, "col_offset": 36, "nodeName": "elmo_command", "type": "Callable[[Any], Any]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "self", "type": "ElmoEmbedder"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 152, "col_offset": 41, "nodeName": "List", "type": "Any"}, {"lineNumber": 165, "col_offset": 11, "nodeName": "self", "type": "ElmoEmbedder"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "self", "type": "ElmoEmbedder"}, {"lineNumber": 174, "col_offset": 31, "nodeName": "layer", "type": "Any"}, {"lineNumber": 174, "col_offset": 40, "nodeName": "layer_activations", "type": "Any"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "without_bos_eos", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 152, "col_offset": 67, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 152, "col_offset": 81, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 182, "col_offset": 39, "nodeName": "List", "type": "Any"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "embed_batch", "type": "Callable[[List[List[str]]], List[numpy.ndarray]]"}, {"lineNumber": 201, "col_offset": 33, "nodeName": "List", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 224, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "batch_to_embeddings", "type": "Callable[[List[List[str]]], Tuple[Any, Any]]"}, {"lineNumber": 224, "col_offset": 56, "nodeName": "batch", "type": "List[List[str]]"}, {"lineNumber": 225, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "length", "type": "int"}, {"lineNumber": 201, "col_offset": 58, "nodeName": "numpy", "type": "module"}, {"lineNumber": 255, "col_offset": 36, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 255, "col_offset": 41, "nodeName": "sentences", "type": "Iterable[List[str]]"}, {"lineNumber": 237, "col_offset": 74, "nodeName": "numpy", "type": "module"}, {"lineNumber": 287, "col_offset": 21, "nodeName": "strip", "type": "Union[Callable[..., bytes], Callable[..., str]]"}, {"lineNumber": 287, "col_offset": 38, "nodeName": "line", "type": "Union[bytes, str]"}, {"lineNumber": 287, "col_offset": 46, "nodeName": "input_file", "type": "IO[Union[str, bytes]]"}, {"lineNumber": 291, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 293, "col_offset": 27, "nodeName": "split", "type": "Union[Callable[..., List[bytes]], Callable[..., List[str]]]"}, {"lineNumber": 293, "col_offset": 48, "nodeName": "sentence", "type": "Union[str, bytes]"}, {"lineNumber": 293, "col_offset": 60, "nodeName": "sentences", "type": "List[Union[bytes, str]]"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 299, "col_offset": 33, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 299, "col_offset": 37, "nodeName": "sentences", "type": "List[Union[bytes, str]]"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 305, "col_offset": 13, "nodeName": "File", "type": "Any"}, {"lineNumber": 305, "col_offset": 23, "nodeName": "output_file_path", "type": "str"}, {"lineNumber": 306, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 306, "col_offset": 21, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 306, "col_offset": 35, "nodeName": "tqdm", "type": "Callable[..., Any]"}, {"lineNumber": 306, "col_offset": 45, "nodeName": "embedded_sentences", "type": "Union[Iterator[Tuple[str, numpy.ndarray]], Generator[Tuple[str, numpy.ndarray], Any, None], Iterator[Tuple[bytes, numpy.ndarray]]]"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "input_file", "type": "IO[Union[str, bytes]]"}, {"lineNumber": 333, "col_offset": 9, "nodeName": "args", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "output_format", "type": "str"}, {"lineNumber": 336, "col_offset": 9, "nodeName": "torch", "type": "Any"}, {"lineNumber": 337, "col_offset": 8, "nodeName": "elmo_embedder", "type": "ElmoEmbedder"}, {"lineNumber": 338, "col_offset": 16, "nodeName": "args", "type": "Any"}, {"lineNumber": 339, "col_offset": 16, "nodeName": "args", "type": "Any"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "args", "type": "Any"}, {"lineNumber": 342, "col_offset": 16, "nodeName": "args", "type": "Any"}, {"lineNumber": 92, "col_offset": 50, "nodeName": "FileType", "type": "Type[argparse.FileType]"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "elmo_bilm", "type": "Any"}, {"lineNumber": 148, "col_offset": 56, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "character_ids", "type": "Any"}, {"lineNumber": 166, "col_offset": 54, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 176, "col_offset": 33, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 176, "col_offset": 57, "nodeName": "ele", "type": "Tuple[Any, Any]"}, {"lineNumber": 176, "col_offset": 64, "nodeName": "without_bos_eos", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 152, "col_offset": 67, "nodeName": "torch", "type": "Any"}, {"lineNumber": 152, "col_offset": 81, "nodeName": "torch", "type": "Any"}, {"lineNumber": 182, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 199, "col_offset": 15, "nodeName": "self", "type": "ElmoEmbedder"}, {"lineNumber": 199, "col_offset": 33, "nodeName": "sentence", "type": "List[str]"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "elmo_embeddings", "type": "List[numpy.ndarray]"}, {"lineNumber": 222, "col_offset": 35, "nodeName": "empty_embedding", "type": "Callable[[], numpy.ndarray]"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "self", "type": "ElmoEmbedder"}, {"lineNumber": 225, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 225, "col_offset": 31, "nodeName": "batch", "type": "List[List[str]]"}, {"lineNumber": 226, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 228, "col_offset": 19, "nodeName": "length", "type": "int"}, {"lineNumber": 256, "col_offset": 23, "nodeName": "embed_batch", "type": "Callable[[List[List[str]]], List[numpy.ndarray]]"}, {"lineNumber": 256, "col_offset": 40, "nodeName": "batch", "type": "List[List[str]]"}, {"lineNumber": 287, "col_offset": 21, "nodeName": "line", "type": "Union[bytes, str]"}, {"lineNumber": 289, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 289, "col_offset": 33, "nodeName": "line", "type": "Union[bytes, str]"}, {"lineNumber": 289, "col_offset": 42, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 289, "col_offset": 52, "nodeName": "sentences", "type": "List[Union[bytes, str]]"}, {"lineNumber": 289, "col_offset": 66, "nodeName": "line", "type": "Union[str, bytes]"}, {"lineNumber": 293, "col_offset": 27, "nodeName": "sentence", "type": "Union[bytes, str]"}, {"lineNumber": 297, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 299, "col_offset": 48, "nodeName": "embed_sentences", "type": "Callable[..., Iterable[numpy.ndarray]]"}, {"lineNumber": 299, "col_offset": 69, "nodeName": "split_sentences", "type": "List[Union[List[bytes], List[str]]]"}, {"lineNumber": 299, "col_offset": 86, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 301, "col_offset": 43, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 305, "col_offset": 13, "nodeName": "h5py", "type": "Any"}, {"lineNumber": 306, "col_offset": 35, "nodeName": "Tqdm", "type": "Type[allennlp.common.tqdm.Tqdm]"}, {"lineNumber": 307, "col_offset": 19, "nodeName": "use_sentence_keys", "type": "bool"}, {"lineNumber": 312, "col_offset": 19, "nodeName": "output_format", "type": "str"}, {"lineNumber": 313, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 313, "col_offset": 29, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "create_dataset", "type": "Any"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "shape", "type": "Any"}, {"lineNumber": 92, "col_offset": 50, "nodeName": "argparse", "type": "module"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "self", "type": "ElmoEmbedder"}, {"lineNumber": 152, "col_offset": 46, "nodeName": "List", "type": "Any"}, {"lineNumber": 166, "col_offset": 54, "nodeName": "self", "type": "ElmoEmbedder"}, {"lineNumber": 201, "col_offset": 38, "nodeName": "List", "type": "Any"}, {"lineNumber": 226, "col_offset": 29, "nodeName": "sum", "type": "Any"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 231, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 256, "col_offset": 23, "nodeName": "self", "type": "ElmoEmbedder"}, {"lineNumber": 291, "col_offset": 38, "nodeName": "blank_lines", "type": "List[int]"}, {"lineNumber": 299, "col_offset": 48, "nodeName": "self", "type": "ElmoEmbedder"}, {"lineNumber": 301, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 301, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 301, "col_offset": 50, "nodeName": "i", "type": "int"}, {"lineNumber": 301, "col_offset": 53, "nodeName": "x", "type": "numpy.ndarray"}, {"lineNumber": 302, "col_offset": 34, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 307, "col_offset": 41, "nodeName": "key", "type": "Any"}, {"lineNumber": 308, "col_offset": 26, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 314, "col_offset": 21, "nodeName": "output_format", "type": "str"}, {"lineNumber": 315, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "fout", "type": "Any"}, {"lineNumber": 320, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 320, "col_offset": 28, "nodeName": "key", "type": "Any"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "output", "type": "Any"}, {"lineNumber": 322, "col_offset": 29, "nodeName": "output", "type": "Any"}, {"lineNumber": 152, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 176, "col_offset": 33, "nodeName": "ele", "type": "Tuple[Any, Any]"}, {"lineNumber": 201, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "elmo_embeddings", "type": "List[numpy.ndarray]"}, {"lineNumber": 229, "col_offset": 43, "nodeName": "empty_embedding", "type": "Callable[[], numpy.ndarray]"}, {"lineNumber": 231, "col_offset": 20, "nodeName": "elmo_embeddings", "type": "List[numpy.ndarray]"}, {"lineNumber": 231, "col_offset": 43, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 302, "col_offset": 44, "nodeName": "embed_sentences", "type": "Callable[..., Iterable[numpy.ndarray]]"}, {"lineNumber": 302, "col_offset": 65, "nodeName": "split_sentences", "type": "List[Union[List[bytes], List[str]]]"}, {"lineNumber": 302, "col_offset": 82, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 307, "col_offset": 48, "nodeName": "keys", "type": "Any"}, {"lineNumber": 315, "col_offset": 29, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "output_format", "type": "str"}, {"lineNumber": 317, "col_offset": 20, "nodeName": "output", "type": "Any"}, {"lineNumber": 226, "col_offset": 29, "nodeName": "mask", "type": "Any"}, {"lineNumber": 302, "col_offset": 44, "nodeName": "self", "type": "ElmoEmbedder"}, {"lineNumber": 307, "col_offset": 48, "nodeName": "fout", "type": "Any"}, {"lineNumber": 308, "col_offset": 70, "nodeName": "output_file_path", "type": "str"}, {"lineNumber": 317, "col_offset": 29, "nodeName": "average", "type": "Any"}, {"lineNumber": 317, "col_offset": 43, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 231, "col_offset": 43, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 317, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 226, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 231, "col_offset": 43, "nodeName": "detach", "type": "Any"}, {"lineNumber": 231, "col_offset": 43, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 231, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 231, "col_offset": 61, "nodeName": "length", "type": "int"}]