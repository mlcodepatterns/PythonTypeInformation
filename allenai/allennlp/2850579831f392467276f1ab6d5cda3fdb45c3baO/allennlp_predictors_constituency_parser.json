[{"lineNumber": 17, "col_offset": 0, "nodeName": "LINK_TO_LABEL", "type": "Dict[Any, str]"}, {"lineNumber": 20, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 61, "col_offset": 34, "nodeName": "Predictor", "type": "Type[allennlp.predictors.predictor.Predictor]"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "x", "type": "Any"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "x", "type": "Any"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 24, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 33, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 34, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 36, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 40, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 42, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 51, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 52, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 55, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 57, "col_offset": 0, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 72, "col_offset": 40, "nodeName": "JsonDict", "type": "Type[Dict[str, Any]]"}, {"lineNumber": 86, "col_offset": 56, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 96, "col_offset": 54, "nodeName": "JsonDict", "type": "Type[Dict[str, Any]]"}, {"lineNumber": 115, "col_offset": 78, "nodeName": "JsonDict", "type": "Type[Dict[str, Any]]"}, {"lineNumber": 17, "col_offset": 30, "nodeName": "x", "type": "Any"}, {"lineNumber": 17, "col_offset": 35, "nodeName": "TAG_MAP", "type": "Any"}, {"lineNumber": 20, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 20, "col_offset": 45, "nodeName": "TAG_MAP", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "_tokenizer", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "spacy_tokens", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "sentence_text", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "pos_tags", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 108, "col_offset": 22, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 106, "col_offset": 67, "nodeName": "List", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "children", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "child", "type": "Any"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "tree", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "label", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "span", "type": "str"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "hierplane_node", "type": "Dict[str, Any]"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "children", "type": "List[Any]"}, {"lineNumber": 151, "col_offset": 11, "nodeName": "is_root", "type": "bool"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "hierplane_node", "type": "Union[Dict[str, Any], Dict[str, Union[Dict[str, Any], str, Dict[Any, List[str]], Dict[Any, str]]]]"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "DatasetReader", "type": "Type[allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 67, "col_offset": 69, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[allennlp.models.model.Model, allennlp.data.dataset_readers.dataset_reader.DatasetReader], None]"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "dataset_reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "SpacyWordSplitter", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "predict_json", "type": "Any"}, {"lineNumber": 86, "col_offset": 43, "nodeName": "JsonDict", "type": "Type[Dict[str, Any]]"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "split_words", "type": "Any"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "text", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "tag_", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "text_to_instance", "type": "Any"}, {"lineNumber": 93, "col_offset": 53, "nodeName": "sentence_text", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 68, "nodeName": "pos_tags", "type": "List[Any]"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "forward_on_instance", "type": "Any"}, {"lineNumber": 97, "col_offset": 50, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "pop", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "_build_hierplane_tree", "type": "Any"}, {"lineNumber": 101, "col_offset": 63, "nodeName": "tree", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "pformat", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "sanitize", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "forward_on_instances", "type": "Any"}, {"lineNumber": 107, "col_offset": 51, "nodeName": "instances", "type": "List[allennlp.data.instance.Instance]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "tree", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "sanitize", "type": "Callable[[Any], Any]"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 106, "col_offset": 72, "nodeName": "JsonDict", "type": "Type[Dict[str, Any]]"}, {"lineNumber": 115, "col_offset": 42, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 115, "col_offset": 55, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 115, "col_offset": 69, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "label", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "join", "type": "Callable"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "span", "type": "str"}, {"lineNumber": 147, "col_offset": 52, "nodeName": "label", "type": "Any"}, {"lineNumber": 147, "col_offset": 90, "nodeName": "label", "type": "Any"}, {"lineNumber": 149, "col_offset": 41, "nodeName": "children", "type": "List[Any]"}, {"lineNumber": 70, "col_offset": 53, "nodeName": "language", "type": "str"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 46, "nodeName": "sentence", "type": "str"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "_tokenizer", "type": "Any"}, {"lineNumber": 90, "col_offset": 51, "nodeName": "json_dict", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 25, "nodeName": "token", "type": "Any"}, {"lineNumber": 91, "col_offset": 40, "nodeName": "token", "type": "Any"}, {"lineNumber": 91, "col_offset": 49, "nodeName": "spacy_tokens", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "token", "type": "Any"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "token", "type": "Any"}, {"lineNumber": 92, "col_offset": 44, "nodeName": "spacy_tokens", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "_dataset_reader", "type": "Any"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "_model", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "tree", "type": "Any"}, {"lineNumber": 106, "col_offset": 48, "nodeName": "List", "type": "Any"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "_model", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "pop", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "_build_hierplane_tree", "type": "Any"}, {"lineNumber": 111, "col_offset": 66, "nodeName": "tree", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "pformat", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "child", "type": "Any"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 143, "col_offset": 16, "nodeName": "index", "type": "int"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "tree", "type": "Any"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "leaves", "type": "Any"}, {"lineNumber": 147, "col_offset": 74, "nodeName": "label", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "hierplane_node", "type": "Dict[str, Any]"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "LINK_TO_LABEL", "type": "Dict[Any, str]"}, {"lineNumber": 154, "col_offset": 35, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Dict[Any, List[str]]"}, {"lineNumber": 155, "col_offset": 24, "nodeName": "span", "type": "str"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "hierplane_node", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 53, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "output", "type": "Any"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "tree", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "child", "type": "Any"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "tree", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "children", "type": "List[Any]"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "_build_hierplane_tree", "type": "Any"}, {"lineNumber": 139, "col_offset": 59, "nodeName": "child", "type": "Any"}, {"lineNumber": 139, "col_offset": 66, "nodeName": "index", "type": "int"}, {"lineNumber": 139, "col_offset": 32, "nodeName": "self", "type": "Any"}]