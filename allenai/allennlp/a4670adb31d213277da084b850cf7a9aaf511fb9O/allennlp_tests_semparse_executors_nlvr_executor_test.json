[{"lineNumber": 10, "col_offset": 23, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "test_filename", "type": "pathlib.Path"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "box_lists", "type": "List[List[allennlp.semparse.worlds.nlvr_box.Box]]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "executors", "type": "List[allennlp.semparse.executors.nlvr_executor.NlvrExecutor]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "logical_form_true", "type": "str"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "logical_form_false", "type": "str"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 24, "col_offset": 31, "nodeName": "NlvrExecutor", "type": "Type[allennlp.semparse.executors.nlvr_executor.NlvrExecutor]"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "executors", "type": "List[allennlp.semparse.executors.nlvr_executor.NlvrExecutor]"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "executors", "type": "List[allennlp.semparse.executors.nlvr_executor.NlvrExecutor]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "executors", "type": "List[allennlp.semparse.executors.nlvr_executor.NlvrExecutor]"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "executors", "type": "List[allennlp.semparse.executors.nlvr_executor.NlvrExecutor]"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "executors", "type": "List[allennlp.semparse.executors.nlvr_executor.NlvrExecutor]"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "executors", "type": "List[allennlp.semparse.executors.nlvr_executor.NlvrExecutor]"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "executors", "type": "List[allennlp.semparse.executors.nlvr_executor.NlvrExecutor]"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "executors", "type": "List[allennlp.semparse.executors.nlvr_executor.NlvrExecutor]"}, {"lineNumber": 14, "col_offset": 55, "nodeName": "line", "type": "str"}, {"lineNumber": 15, "col_offset": 88, "nodeName": "box_rep", "type": "Any"}, {"lineNumber": 15, "col_offset": 99, "nodeName": "data", "type": "List[Any]"}, {"lineNumber": 16, "col_offset": 26, "nodeName": "NlvrExecutor", "type": "Type[allennlp.semparse.executors.nlvr_executor.NlvrExecutor]"}, {"lineNumber": 16, "col_offset": 39, "nodeName": "boxes", "type": "List[allennlp.semparse.worlds.nlvr_box.Box]"}, {"lineNumber": 16, "col_offset": 50, "nodeName": "boxes", "type": "List[allennlp.semparse.worlds.nlvr_box.Box]"}, {"lineNumber": 16, "col_offset": 59, "nodeName": "box_lists", "type": "List[List[allennlp.semparse.worlds.nlvr_box.Box]]"}, {"lineNumber": 28, "col_offset": 19, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 31, "col_offset": 32, "nodeName": "logical_form_true", "type": "str"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "logical_form_false", "type": "str"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 39, "col_offset": 32, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 65, "col_offset": 32, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 68, "col_offset": 19, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 78, "col_offset": 32, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 93, "col_offset": 44, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 98, "col_offset": 44, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "ExecutionError", "type": "Type[allennlp.semparse.worlds.world.ExecutionError]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "ExecutionError", "type": "Type[allennlp.semparse.worlds.world.ExecutionError]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], bool]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 13, "col_offset": 24, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 14, "col_offset": 16, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 14, "col_offset": 27, "nodeName": "line", "type": "str"}, {"lineNumber": 14, "col_offset": 63, "nodeName": "readlines", "type": "Callable"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "Box", "type": "Type[allennlp.semparse.worlds.nlvr_box.Box]"}, {"lineNumber": 15, "col_offset": 26, "nodeName": "object_reps", "type": "Any"}, {"lineNumber": 15, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 24, "col_offset": 45, "nodeName": "Box", "type": "Type[allennlp.semparse.worlds.nlvr_box.Box]"}, {"lineNumber": 24, "col_offset": 49, "nodeName": "object_rep", "type": "List[Dict[str, Union[str, int]]]"}, {"lineNumber": 24, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "custom_executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "custom_executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "custom_executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "custom_executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "custom_executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "custom_executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "custom_executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 118, "col_offset": 13, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "custom_executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 125, "col_offset": 13, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "custom_executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "custom_executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "custom_executor", "type": "allennlp.semparse.executors.nlvr_executor.NlvrExecutor"}, {"lineNumber": 13, "col_offset": 24, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 14, "col_offset": 16, "nodeName": "json", "type": "module"}, {"lineNumber": 15, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 15, "col_offset": 49, "nodeName": "object_reps", "type": "Any"}, {"lineNumber": 15, "col_offset": 64, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 15, "col_offset": 74, "nodeName": "box_rep", "type": "Any"}, {"lineNumber": 24, "col_offset": 68, "nodeName": "i", "type": "int"}, {"lineNumber": 24, "col_offset": 71, "nodeName": "object_rep", "type": "List[Dict[str, Union[str, int]]]"}, {"lineNumber": 25, "col_offset": 45, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 25, "col_offset": 55, "nodeName": "custom_rep", "type": "List[List[Dict[str, Union[str, int]]]]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "self", "type": "TestNlvrExecutor"}, {"lineNumber": 14, "col_offset": 63, "nodeName": "open", "type": "Callable"}, {"lineNumber": 14, "col_offset": 68, "nodeName": "test_filename", "type": "pathlib.Path"}]