[{"lineNumber": 14, "col_offset": 29, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "optim", "type": "Any"}, {"lineNumber": 121, "col_offset": 44, "nodeName": "cosine_schedule_cases", "type": "List[Union[Tuple[int, Dict[str, Union[float, int, str]], List[Tuple[int, float]], List[int]], Tuple[int, Dict[str, Union[float, int, str]], List[Tuple[int, float]], List[nothing]], Tuple[int, Dict[str, Union[int, str]], List[Tuple[int, float]], List[nothing]]]]"}, {"lineNumber": 155, "col_offset": 54, "nodeName": "cosine_schedule_cases", "type": "List[Union[Tuple[int, Dict[str, Union[float, int, str]], List[Tuple[int, float]], List[int]], Tuple[int, Dict[str, Union[float, int, str]], List[Tuple[int, float]], List[nothing]], Tuple[int, Dict[str, Union[int, str]], List[Tuple[int, float]], List[nothing]]]]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "setup_method", "type": "Callable[[], None]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "_get_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "t_initial", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "last_epoch", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "epochs", "type": "int"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "params", "type": "Union[Dict[str, Union[float, int, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 121, "col_offset": 28, "nodeName": "lr_checks", "type": "List[Tuple[int, float]]"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "_", "type": "Union[List[int], List[nothing]]"}, {"lineNumber": 121, "col_offset": 44, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 128, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 132, "col_offset": 26, "nodeName": "lr_checks", "type": "List[Tuple[int, float]]"}, {"lineNumber": 153, "col_offset": 19, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 155, "col_offset": 28, "nodeName": "lr_checks", "type": "Any"}, {"lineNumber": 155, "col_offset": 39, "nodeName": "checkpoints", "type": "Any"}, {"lineNumber": 155, "col_offset": 54, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "epoch", "type": "int"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "lr_checks", "type": "Any"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 17, "col_offset": 41, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 105, "col_offset": 16, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler]"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "optim", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "sched", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "sched", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "_get_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "params", "type": "Union[Dict[str, Union[float, int, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 128, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "epochs", "type": "int"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "it", "type": "int"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "lr", "type": "float"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "state_dict", "type": "Dict[str, Any]"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "_get_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "init_and_restore_scheduler", "type": "Callable[..., Any]"}, {"lineNumber": 157, "col_offset": 51, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 157, "col_offset": 62, "nodeName": "params", "type": "Any"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 161, "col_offset": 31, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "it", "type": "Any"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "lr", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 17, "col_offset": 41, "nodeName": "nn", "type": "Any"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 99, "col_offset": 67, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 106, "col_offset": 36, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler]"}, {"lineNumber": 117, "col_offset": 56, "nodeName": "optim", "type": "Any"}, {"lineNumber": 122, "col_offset": 24, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler]"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "lr", "type": "float"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler]"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 152, "col_offset": 42, "nodeName": "state_dict", "type": "Dict[str, Any]"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 162, "col_offset": 19, "nodeName": "epoch", "type": "int"}, {"lineNumber": 162, "col_offset": 28, "nodeName": "checkpoints", "type": "Any"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "lr", "type": "Any"}, {"lineNumber": 17, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 99, "col_offset": 96, "nodeName": "lr", "type": "float"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "optim", "type": "Any"}, {"lineNumber": 117, "col_offset": 70, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 125, "col_offset": 44, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 125, "col_offset": 51, "nodeName": "params", "type": "Union[Dict[str, Union[float, int, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 23, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 51, "nodeName": "it", "type": "int"}, {"lineNumber": 133, "col_offset": 70, "nodeName": "lr", "type": "float"}, {"lineNumber": 149, "col_offset": 44, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 164, "col_offset": 32, "nodeName": "init_and_restore_scheduler", "type": "Callable[..., Any]"}, {"lineNumber": 164, "col_offset": 59, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 164, "col_offset": 70, "nodeName": "params", "type": "Any"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 174, "col_offset": 51, "nodeName": "it", "type": "Any"}, {"lineNumber": 174, "col_offset": 70, "nodeName": "lr", "type": "Any"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "it", "type": "int"}, {"lineNumber": 133, "col_offset": 57, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 141, "col_offset": 34, "nodeName": "Any", "type": "Any"}, {"lineNumber": 149, "col_offset": 51, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 149, "col_offset": 60, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 164, "col_offset": 89, "nodeName": "state", "type": "Any"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "it", "type": "Any"}, {"lineNumber": 174, "col_offset": 57, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 133, "col_offset": 61, "nodeName": "it", "type": "int"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 174, "col_offset": 61, "nodeName": "it", "type": "Any"}]