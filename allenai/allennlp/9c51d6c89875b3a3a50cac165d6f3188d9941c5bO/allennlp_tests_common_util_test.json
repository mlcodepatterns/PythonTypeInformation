[{"lineNumber": 21, "col_offset": 22, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "xs", "type": "List[int]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "groups", "type": "Iterator[List[int]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "named_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "punct_forward", "type": "Set[str]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "punct_backward", "type": "Set[str]"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "test_cases", "type": "List[Any]"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "lazy_groups_of", "type": "Callable"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "_", "type": "List[int]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "namespace_match", "type": "Callable[[str, str], bool]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "namespace_match", "type": "Callable[[str, str], bool]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "namespace_match", "type": "Callable[[str, str], bool]"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "namespace_match", "type": "Callable[[str, str], bool]"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "mkdir", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "touch", "type": "Callable[..., None]"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "mkdir", "type": "Callable[..., None]"}, {"lineNumber": 63, "col_offset": 50, "nodeName": "touch", "type": "Callable[..., None]"}, {"lineNumber": 64, "col_offset": 50, "nodeName": "touch", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "get_frozen_and_tunable_parameter_names", "type": "Callable[[Any], Tuple[Iterable[str], Iterable[str]]]"}, {"lineNumber": 86, "col_offset": 56, "nodeName": "model", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "ptb_string", "type": "Any"}, {"lineNumber": 134, "col_offset": 24, "nodeName": "expected", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "actual", "type": "str"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "group_by_count", "type": "Callable[[List[Any], int, Any], List[List[Any]]]"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "util", "type": "module"}, {"lineNumber": 31, "col_offset": 37, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 31, "col_offset": 42, "nodeName": "xs", "type": "List[int]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "groups", "type": "Iterator[List[int]]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "groups", "type": "Iterator[List[int]]"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "next", "type": "Callable"}, {"lineNumber": 34, "col_offset": 20, "nodeName": "groups", "type": "Iterator[List[int]]"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "next", "type": "Callable"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "groups", "type": "Iterator[List[int]]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "pad_sequence_to_length", "type": "Callable[..., List[Any]]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "pad_sequence_to_length", "type": "Callable[..., List[Any]]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "pad_sequence_to_length", "type": "Callable[..., List[Any]]"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "util", "type": "module"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "util", "type": "module"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "util", "type": "module"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "util", "type": "module"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "namespace_match", "type": "Callable[[str, str], bool]"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "sanitize", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "sanitize", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "sanitize", "type": "Callable[[Any], Any]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "sanitize", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "push_python_path", "type": "Callable[..., contextlib._GeneratorContextManager[nothing]]"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "TEST_DIR", "type": "pathlib.Path"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "modules", "type": "Dict[str, module]"}, {"lineNumber": 68, "col_offset": 47, "nodeName": "modules", "type": "Dict[str, module]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "import_module_and_submodules", "type": "Callable[[str], None]"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "modules", "type": "Dict[str, module]"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "modules", "type": "Dict[str, module]"}, {"lineNumber": 74, "col_offset": 56, "nodeName": "modules", "type": "Dict[str, module]"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "util", "type": "module"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "frozen_parameter_names", "type": "Iterable[str]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "tunable_parameter_names", "type": "Iterable[str]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "create_surrounding_test_case", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "create_surrounding_test_case", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "create_surrounding_test_case", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "create_surrounding_test_case", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "create_surrounding_test_case", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "create_surrounding_test_case", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "create_surrounding_test_case", "type": "Callable[[Any, Any, Any, Any], Any]"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "sanitize_ptb_tokenized_string", "type": "Callable[[str], str]"}, {"lineNumber": 135, "col_offset": 56, "nodeName": "ptb_string", "type": "Any"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "actual", "type": "str"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "expected", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "util", "type": "module"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "util", "type": "module"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "util", "type": "module"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "util", "type": "module"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "util", "type": "module"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "util", "type": "module"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "util", "type": "module"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "util", "type": "module"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "Unsanitizable", "type": "Type[Unsanitizable]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "util", "type": "module"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "Sanitizable", "type": "Type[Sanitizable]"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "TEST_DIR", "type": "pathlib.Path"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "self", "type": "TestCommonUtils"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "sys", "type": "module"}, {"lineNumber": 68, "col_offset": 47, "nodeName": "sys", "type": "module"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "util", "type": "module"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "sys", "type": "module"}, {"lineNumber": 73, "col_offset": 43, "nodeName": "sys", "type": "module"}, {"lineNumber": 74, "col_offset": 56, "nodeName": "sys", "type": "module"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "model", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "named_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "named_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "start_ptb_token", "type": "str"}, {"lineNumber": 93, "col_offset": 56, "nodeName": "end_ptb_token", "type": "str"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "start_token", "type": "str"}, {"lineNumber": 94, "col_offset": 50, "nodeName": "end_token", "type": "str"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "fwd_token", "type": "str"}, {"lineNumber": 98, "col_offset": 47, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 98, "col_offset": 62, "nodeName": "fwd_token", "type": "str"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "backward_token", "type": "str"}, {"lineNumber": 101, "col_offset": 52, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 101, "col_offset": 67, "nodeName": "backward_token", "type": "str"}, {"lineNumber": 135, "col_offset": 21, "nodeName": "util", "type": "module"}, {"lineNumber": 51, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 52, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "self", "type": "TestCommonUtils"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "TEST_DIR", "type": "pathlib.Path"}, {"lineNumber": 62, "col_offset": 9, "nodeName": "TEST_DIR", "type": "pathlib.Path"}, {"lineNumber": 120, "col_offset": 14, "nodeName": "create_fwd_token_test_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "t", "type": "str"}, {"lineNumber": 120, "col_offset": 48, "nodeName": "t", "type": "str"}, {"lineNumber": 120, "col_offset": 53, "nodeName": "punct_forward", "type": "Set[str]"}, {"lineNumber": 122, "col_offset": 14, "nodeName": "create_backward_token_test_case", "type": "Callable[[Any], Any]"}, {"lineNumber": 122, "col_offset": 46, "nodeName": "t", "type": "str"}, {"lineNumber": 122, "col_offset": 53, "nodeName": "t", "type": "str"}, {"lineNumber": 122, "col_offset": 58, "nodeName": "punct_backward", "type": "Set[str]"}, {"lineNumber": 61, "col_offset": 9, "nodeName": "self", "type": "TestCommonUtils"}, {"lineNumber": 62, "col_offset": 9, "nodeName": "self", "type": "TestCommonUtils"}, {"lineNumber": 63, "col_offset": 9, "nodeName": "TEST_DIR", "type": "pathlib.Path"}, {"lineNumber": 64, "col_offset": 9, "nodeName": "TEST_DIR", "type": "pathlib.Path"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "Conv1d", "type": "Any"}, {"lineNumber": 78, "col_offset": 72, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 63, "col_offset": 9, "nodeName": "self", "type": "TestCommonUtils"}, {"lineNumber": 64, "col_offset": 9, "nodeName": "self", "type": "TestCommonUtils"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 78, "col_offset": 72, "nodeName": "nn", "type": "Any"}, {"lineNumber": 78, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 78, "col_offset": 72, "nodeName": "torch", "type": "Any"}]