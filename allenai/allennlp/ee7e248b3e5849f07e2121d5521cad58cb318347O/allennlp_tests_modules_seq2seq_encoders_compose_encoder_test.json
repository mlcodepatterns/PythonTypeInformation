[{"lineNumber": 35, "col_offset": 0, "nodeName": "_make_feedforward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 11, "col_offset": 25, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 23, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 14, "col_offset": 25, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "output_dim", "type": "int"}, {"lineNumber": 15, "col_offset": 26, "nodeName": "output_dim", "type": "int"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "bidirectional", "type": "bool"}, {"lineNumber": 16, "col_offset": 29, "nodeName": "bidirectional", "type": "bool"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "input_dim", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "FeedForwardEncoder", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "encoders", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "encoders", "type": "Any"}, {"lineNumber": 12, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 12, "col_offset": 51, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 12, "col_offset": 71, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "MockSeq2SeqEncoder"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "MockSeq2SeqEncoder"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "MockSeq2SeqEncoder"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "FeedForward", "type": "Type[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "ComposeEncoder", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "randn", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 68, "col_offset": 30, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "mask", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "ComposeEncoder", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 38, "col_offset": 59, "nodeName": "relu", "type": "Any"}, {"lineNumber": 38, "col_offset": 83, "nodeName": "output_dim", "type": "int"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "get_input_dim", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "self", "type": "TestPassThroughEncoder"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "self", "type": "TestPassThroughEncoder"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "self", "type": "TestPassThroughEncoder"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "self", "type": "TestPassThroughEncoder"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "mask", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 74, "col_offset": 43, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 78, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "ComposeEncoder", "type": "Any"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "ComposeEncoder", "type": "Any"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "ComposeEncoder", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 38, "col_offset": 59, "nodeName": "torch", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "_make_feedforward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "_make_feedforward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 47, "col_offset": 64, "nodeName": "_make_feedforward", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 78, "col_offset": 13, "nodeName": "self", "type": "TestPassThroughEncoder"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "self", "type": "TestPassThroughEncoder"}, {"lineNumber": 91, "col_offset": 13, "nodeName": "self", "type": "TestPassThroughEncoder"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "MockSeq2SeqEncoder", "type": "Type[MockSeq2SeqEncoder]"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "MockSeq2SeqEncoder", "type": "Type[MockSeq2SeqEncoder]"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "self", "type": "TestPassThroughEncoder"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "self", "type": "TestPassThroughEncoder"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 74, "col_offset": 43, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "MockSeq2SeqEncoder", "type": "Type[MockSeq2SeqEncoder]"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "MockSeq2SeqEncoder", "type": "Type[MockSeq2SeqEncoder]"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "MockSeq2SeqEncoder", "type": "Type[MockSeq2SeqEncoder]"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "MockSeq2SeqEncoder", "type": "Type[MockSeq2SeqEncoder]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "detach", "type": "Any"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "detach", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "detach", "type": "Any"}, {"lineNumber": 74, "col_offset": 43, "nodeName": "detach", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 74, "col_offset": 43, "nodeName": "tensor", "type": "Any"}]