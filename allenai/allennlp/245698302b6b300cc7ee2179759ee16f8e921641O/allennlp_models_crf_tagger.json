[{"lineNumber": 18, "col_offset": 16, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "label_namespace", "type": "str"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "label_namespace", "type": "str"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 58, "col_offset": 35, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "num_tags", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "dropout", "type": "float"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "predicted_tags", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "output", "type": "Dict[str, Any]"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "output", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 154, "col_offset": 62, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 169, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "embedder_params", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "label_namespace", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "constraint_type", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "include_start_end_transitions", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "regularizer", "type": "Optional[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "regularizer", "type": "Optional[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "get_vocab_size", "type": "Any"}, {"lineNumber": 59, "col_offset": 50, "nodeName": "label_namespace", "type": "str"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "dropout", "type": "None"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "constraint_type", "type": "str"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "constraints", "type": "List[Tuple[int, int]]"}, {"lineNumber": 74, "col_offset": 19, "nodeName": "ConditionalRandomField", "type": "Type[allennlp.modules.conditional_random_field.ConditionalRandomField]"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "num_tags", "type": "Any"}, {"lineNumber": 75, "col_offset": 31, "nodeName": "constraints", "type": "List[Tuple[int, int]]"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "SpanBasedF1Measure", "type": "Any"}, {"lineNumber": 79, "col_offset": 46, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "check_dimensions_match", "type": "Callable[[int, int, str, str], None]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "text_field_embedder", "type": "Any"}, {"lineNumber": 121, "col_offset": 55, "nodeName": "tokens", "type": "Dict[str, Any]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "get_text_field_mask", "type": "Callable[..., Any]"}, {"lineNumber": 122, "col_offset": 40, "nodeName": "tokens", "type": "Dict[str, Any]"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 127, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "tag_projection_layer", "type": "Any"}, {"lineNumber": 132, "col_offset": 43, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "viterbi_tags", "type": "Any"}, {"lineNumber": 133, "col_offset": 47, "nodeName": "logits", "type": "Any"}, {"lineNumber": 133, "col_offset": 55, "nodeName": "mask", "type": "Any"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "logits", "type": "Any"}, {"lineNumber": 135, "col_offset": 44, "nodeName": "mask", "type": "Any"}, {"lineNumber": 135, "col_offset": 58, "nodeName": "predicted_tags", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "tags", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "log_likelihood", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "class_probabilities", "type": "Any"}, {"lineNumber": 169, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "x", "type": "Any"}, {"lineNumber": 171, "col_offset": 19, "nodeName": "y", "type": "Any"}, {"lineNumber": 174, "col_offset": 32, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 174, "col_offset": 52, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "pop", "type": "Any"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "from_params", "type": "Callable[[Any, allennlp.data.vocabulary.Vocabulary, allennlp.common.params.Params], allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 176, "col_offset": 60, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 176, "col_offset": 67, "nodeName": "embedder_params", "type": "Any"}, {"lineNumber": 177, "col_offset": 18, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "pop", "type": "Any"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "pop", "type": "Any"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "pop", "type": "Any"}, {"lineNumber": 181, "col_offset": 40, "nodeName": "pop", "type": "Any"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "from_params", "type": "Callable[[Any, List[Tuple[str, allennlp.common.params.Params]]], allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "from_params", "type": "Callable[[Any, List[Tuple[str, allennlp.common.params.Params]]], Optional[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "assert_empty", "type": "Callable[[str], None]"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 187, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "dropout", "type": "float"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 52, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 66, "col_offset": 59, "nodeName": "num_tags", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "get_index_to_token_vocabulary", "type": "Any"}, {"lineNumber": 69, "col_offset": 62, "nodeName": "label_namespace", "type": "str"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "allowed_transitions", "type": "Callable[[str, Dict[int, str]], List[Tuple[int, int]]]"}, {"lineNumber": 70, "col_offset": 46, "nodeName": "constraint_type", "type": "str"}, {"lineNumber": 70, "col_offset": 63, "nodeName": "labels", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "include_start_end_transitions", "type": "bool"}, {"lineNumber": 80, "col_offset": 60, "nodeName": "label_namespace", "type": "str"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 83, "col_offset": 69, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "util", "type": "module"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 125, "col_offset": 47, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 130, "col_offset": 40, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 132, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "crf", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "crf", "type": "Any"}, {"lineNumber": 139, "col_offset": 38, "nodeName": "logits", "type": "Any"}, {"lineNumber": 139, "col_offset": 46, "nodeName": "tags", "type": "Any"}, {"lineNumber": 139, "col_offset": 52, "nodeName": "mask", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "output", "type": "Dict[str, Any]"}, {"lineNumber": 140, "col_offset": 30, "nodeName": "log_likelihood", "type": "Any"}, {"lineNumber": 144, "col_offset": 34, "nodeName": "logits", "type": "Any"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "instance_tags", "type": "Any"}, {"lineNumber": 145, "col_offset": 36, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 145, "col_offset": 46, "nodeName": "predicted_tags", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "span_metric", "type": "Any"}, {"lineNumber": 149, "col_offset": 29, "nodeName": "class_probabilities", "type": "Any"}, {"lineNumber": 149, "col_offset": 50, "nodeName": "tags", "type": "Any"}, {"lineNumber": 149, "col_offset": 56, "nodeName": "mask", "type": "Any"}, {"lineNumber": 90, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 90, "col_offset": 60, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 154, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "instance_tags", "type": "Any"}, {"lineNumber": 154, "col_offset": 67, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 154, "col_offset": 72, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "span_metric", "type": "Any"}, {"lineNumber": 170, "col_offset": 56, "nodeName": "reset", "type": "bool"}, {"lineNumber": 169, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 169, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 175, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 176, "col_offset": 30, "nodeName": "TextFieldEmbedder", "type": "Type[allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 177, "col_offset": 18, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 177, "col_offset": 45, "nodeName": "pop", "type": "Any"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 180, "col_offset": 18, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 181, "col_offset": 40, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 182, "col_offset": 22, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 182, "col_offset": 56, "nodeName": "pop", "type": "Any"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "RegularizerApplicator", "type": "Type[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]"}, {"lineNumber": 183, "col_offset": 56, "nodeName": "pop", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 185, "col_offset": 28, "nodeName": "cls", "type": "Any"}, {"lineNumber": 187, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 188, "col_offset": 39, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 190, "col_offset": 35, "nodeName": "label_namespace", "type": "Any"}, {"lineNumber": 191, "col_offset": 35, "nodeName": "constraint_type", "type": "Any"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 193, "col_offset": 49, "nodeName": "include_start_end_transitions", "type": "Any"}, {"lineNumber": 194, "col_offset": 31, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 195, "col_offset": 31, "nodeName": "regularizer", "type": "Optional[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]"}, {"lineNumber": 54, "col_offset": 39, "nodeName": "RegularizerApplicator", "type": "Type[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 65, "col_offset": 59, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 66, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 81, "col_offset": 61, "nodeName": "constraint_type", "type": "str"}, {"lineNumber": 83, "col_offset": 31, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 83, "col_offset": 69, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "j", "type": "int"}, {"lineNumber": 146, "col_offset": 23, "nodeName": "tag_id", "type": "Any"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 146, "col_offset": 43, "nodeName": "instance_tags", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 162, "col_offset": 21, "nodeName": "tag", "type": "Any"}, {"lineNumber": 163, "col_offset": 37, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 154, "col_offset": 72, "nodeName": "torch", "type": "Any"}, {"lineNumber": 170, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "x", "type": "Any"}, {"lineNumber": 171, "col_offset": 28, "nodeName": "y", "type": "Any"}, {"lineNumber": 171, "col_offset": 33, "nodeName": "items", "type": "Any"}, {"lineNumber": 171, "col_offset": 69, "nodeName": "x", "type": "Any"}, {"lineNumber": 177, "col_offset": 45, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 182, "col_offset": 56, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 183, "col_offset": 56, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 65, "col_offset": 59, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "class_probabilities", "type": "Any"}, {"lineNumber": 154, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 154, "col_offset": 44, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 171, "col_offset": 33, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 154, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 147, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 147, "col_offset": 43, "nodeName": "j", "type": "int"}, {"lineNumber": 147, "col_offset": 46, "nodeName": "tag_id", "type": "Any"}]