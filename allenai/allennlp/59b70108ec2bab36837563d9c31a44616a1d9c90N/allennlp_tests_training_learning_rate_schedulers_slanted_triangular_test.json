[{"lineNumber": 16, "col_offset": 0, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "has_increasing_segment", "type": "bool"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "has_decreasing_segment", "type": "bool"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "k", "type": "int"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "delta", "type": "float"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "has_increasing_segment", "type": "bool"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "has_decreasing_segment", "type": "bool"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "optimizer_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "lrs", "type": "List[List[Any]]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "batch_num_total", "type": "int"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "epoch", "type": "int"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "lrs", "type": "List[List[Any]]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "instances", "type": "List[int]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "optim", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "optim", "type": "Any"}, {"lineNumber": 256, "col_offset": 33, "nodeName": "slanted_triangular_cases", "type": "List[Tuple[Dict[str, Any], List[Tuple[int, int, float]]]]"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "gradual_unfreezing", "type": "bool"}, {"lineNumber": 16, "col_offset": 34, "nodeName": "List", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "learning_rates", "type": "List[float]"}, {"lineNumber": 29, "col_offset": 11, "nodeName": "delta", "type": "float"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "has_increasing_segment", "type": "bool"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "has_decreasing_segment", "type": "bool"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "optimizer_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "from_params", "type": "Callable[[Any, List[Any], allennlp.common.params.Params], Any]"}, {"lineNumber": 56, "col_offset": 68, "nodeName": "optimizer_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "_get_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "_get_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "_learning_rate_scheduler", "type": "Any"}, {"lineNumber": 123, "col_offset": 60, "nodeName": "SlantedTriangular", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "num_epochs", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "num_steps_per_epoch", "type": "Any"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 146, "col_offset": 18, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "num_epochs", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "_get_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "num_epochs", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "num_steps_per_epoch", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "gradual_unfreezing", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "freezing_current", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 256, "col_offset": 20, "nodeName": "lr_checks", "type": "List[Tuple[int, int, float]]"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "lrs", "type": "List[List[Any]]"}, {"lineNumber": 259, "col_offset": 33, "nodeName": "lr_checks", "type": "List[Tuple[int, int, float]]"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "discriminative_fine_tuning", "type": "bool"}, {"lineNumber": 16, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "learning_rates", "type": "List[float]"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "learning_rates", "type": "List[float]"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "delta", "type": "float"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 54, "col_offset": 56, "nodeName": "lr", "type": "float"}, {"lineNumber": 55, "col_offset": 68, "nodeName": "m", "type": "Any"}, {"lineNumber": 55, "col_offset": 73, "nodeName": "_modules", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "self", "type": "SlantedTriangularTest"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler]"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "params", "type": "Any"}, {"lineNumber": 68, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "num_steps_per_epoch", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "batch_num_total", "type": "int"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 82, "col_offset": 33, "nodeName": "epoch", "type": "int"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 88, "col_offset": 19, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "self", "type": "SlantedTriangularTest"}, {"lineNumber": 115, "col_offset": 18, "nodeName": "TrainerBase", "type": "Type[allennlp.training.trainer_base.TrainerBase]"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "TEST_DIR", "type": "pathlib.Path"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "instances", "type": "List[int]"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "_learning_rate_scheduler", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "_learning_rate_scheduler", "type": "Any"}, {"lineNumber": 146, "col_offset": 18, "nodeName": "TrainerBase", "type": "Type[allennlp.training.trainer_base.TrainerBase]"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "TEST_DIR", "type": "pathlib.Path"}, {"lineNumber": 150, "col_offset": 19, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 152, "col_offset": 23, "nodeName": "instances", "type": "List[int]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "_learning_rate_scheduler", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "self", "type": "SlantedTriangularTest"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler]"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "optim", "type": "Any"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "sched", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "sched", "type": "Any"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "sched", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "sched", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 180, "col_offset": 53, "nodeName": "ratio", "type": "Any"}, {"lineNumber": 181, "col_offset": 53, "nodeName": "ratio", "type": "Any"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 183, "col_offset": 31, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 257, "col_offset": 18, "nodeName": "_run_scheduler_get_lrs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 257, "col_offset": 46, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 259, "col_offset": 16, "nodeName": "it", "type": "int"}, {"lineNumber": 259, "col_offset": 20, "nodeName": "layer", "type": "int"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "lr", "type": "float"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "lr_check", "type": "float"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "lr", "type": "float"}, {"lineNumber": 272, "col_offset": 20, "nodeName": "num_actual_steps_per_epoch", "type": "int"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "k", "type": "int"}, {"lineNumber": 35, "col_offset": 19, "nodeName": "has_increasing_segment", "type": "bool"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 55, "col_offset": 73, "nodeName": "model", "type": "Any"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "model", "type": "Any"}, {"lineNumber": 62, "col_offset": 40, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "step_batch", "type": "Any"}, {"lineNumber": 78, "col_offset": 37, "nodeName": "batch_num_total", "type": "int"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "freezing_current", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 116, "col_offset": 18, "nodeName": "self", "type": "SlantedTriangularTest"}, {"lineNumber": 117, "col_offset": 22, "nodeName": "Lazy", "type": "Type[allennlp.common.lazy.Lazy[Any]]"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "self", "type": "SlantedTriangularTest"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "BasicIterator", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "self", "type": "SlantedTriangularTest"}, {"lineNumber": 148, "col_offset": 22, "nodeName": "Lazy", "type": "Type[allennlp.common.lazy.Lazy[Any]]"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "self", "type": "SlantedTriangularTest"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "BasicIterator", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "trainer", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "optim", "type": "Any"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 180, "col_offset": 53, "nodeName": "sched", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 181, "col_offset": 53, "nodeName": "sched", "type": "Any"}, {"lineNumber": 183, "col_offset": 13, "nodeName": "self", "type": "SlantedTriangularTest"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler]"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "optim", "type": "Any"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.learning_rate_scheduler.LearningRateScheduler]"}, {"lineNumber": 189, "col_offset": 26, "nodeName": "optim", "type": "Any"}, {"lineNumber": 257, "col_offset": 18, "nodeName": "self", "type": "SlantedTriangularTest"}, {"lineNumber": 257, "col_offset": 54, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 260, "col_offset": 27, "nodeName": "round", "type": "Callable"}, {"lineNumber": 260, "col_offset": 33, "nodeName": "lr", "type": "float"}, {"lineNumber": 261, "col_offset": 21, "nodeName": "round", "type": "Callable"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "lr", "type": "float"}, {"lineNumber": 263, "col_offset": 26, "nodeName": "lr_check", "type": "float"}, {"lineNumber": 279, "col_offset": 20, "nodeName": "lrs", "type": "List[List[Any]]"}, {"lineNumber": 280, "col_offset": 20, "nodeName": "first_layer_lrs", "type": "List[Any]"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "second_layer_lrs", "type": "List[Any]"}, {"lineNumber": 283, "col_offset": 23, "nodeName": "gradual_unfreezing", "type": "bool"}, {"lineNumber": 28, "col_offset": 51, "nodeName": "k", "type": "int"}, {"lineNumber": 55, "col_offset": 73, "nodeName": "self", "type": "SlantedTriangularTest"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "self", "type": "SlantedTriangularTest"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 62, "col_offset": 56, "nodeName": "params", "type": "Any"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "lrs", "type": "List[List[Any]]"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 79, "col_offset": 56, "nodeName": "epoch", "type": "int"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 88, "col_offset": 40, "nodeName": "k", "type": "int"}, {"lineNumber": 88, "col_offset": 47, "nodeName": "k", "type": "int"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 89, "col_offset": 52, "nodeName": "k", "type": "int"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 90, "col_offset": 36, "nodeName": "k", "type": "int"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "k", "type": "int"}, {"lineNumber": 90, "col_offset": 62, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 90, "col_offset": 80, "nodeName": "k", "type": "int"}, {"lineNumber": 117, "col_offset": 44, "nodeName": "optim", "type": "Any"}, {"lineNumber": 148, "col_offset": 44, "nodeName": "optim", "type": "Any"}, {"lineNumber": 179, "col_offset": 19, "nodeName": "optim", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "optim", "type": "Any"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "optim", "type": "Any"}, {"lineNumber": 186, "col_offset": 40, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 264, "col_offset": 36, "nodeName": "lr", "type": "float"}, {"lineNumber": 264, "col_offset": 54, "nodeName": "it", "type": "int"}, {"lineNumber": 264, "col_offset": 68, "nodeName": "layer", "type": "int"}, {"lineNumber": 264, "col_offset": 79, "nodeName": "lr_check", "type": "float"}, {"lineNumber": 276, "col_offset": 46, "nodeName": "gradual_unfreezing", "type": "bool"}, {"lineNumber": 277, "col_offset": 54, "nodeName": "discriminative_fine_tuning", "type": "bool"}, {"lineNumber": 279, "col_offset": 26, "nodeName": "_run_scheduler_get_lrs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 279, "col_offset": 54, "nodeName": "params", "type": "Dict[str, Union[bool, int, str]]"}, {"lineNumber": 279, "col_offset": 62, "nodeName": "num_actual_steps_per_epoch", "type": "int"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 50, "col_offset": 69, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 55, "col_offset": 54, "nodeName": "m", "type": "Any"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "params", "type": "Any"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 89, "col_offset": 45, "nodeName": "k", "type": "int"}, {"lineNumber": 89, "col_offset": 57, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 90, "col_offset": 48, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 90, "col_offset": 73, "nodeName": "k", "type": "int"}, {"lineNumber": 90, "col_offset": 85, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "k", "type": "int"}, {"lineNumber": 94, "col_offset": 28, "nodeName": "k", "type": "int"}, {"lineNumber": 261, "col_offset": 27, "nodeName": "lrs", "type": "List[List[Any]]"}, {"lineNumber": 261, "col_offset": 35, "nodeName": "layer", "type": "int"}, {"lineNumber": 279, "col_offset": 26, "nodeName": "self", "type": "SlantedTriangularTest"}, {"lineNumber": 280, "col_offset": 39, "nodeName": "rates", "type": "List[Any]"}, {"lineNumber": 280, "col_offset": 52, "nodeName": "rates", "type": "List[Any]"}, {"lineNumber": 280, "col_offset": 61, "nodeName": "lrs", "type": "List[List[Any]]"}, {"lineNumber": 281, "col_offset": 40, "nodeName": "rates", "type": "List[Any]"}, {"lineNumber": 281, "col_offset": 53, "nodeName": "rates", "type": "List[Any]"}, {"lineNumber": 281, "col_offset": 62, "nodeName": "lrs", "type": "List[List[Any]]"}, {"lineNumber": 286, "col_offset": 31, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 287, "col_offset": 31, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 288, "col_offset": 31, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 290, "col_offset": 31, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 290, "col_offset": 45, "nodeName": "first_layer_lrs", "type": "List[Any]"}, {"lineNumber": 291, "col_offset": 31, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 291, "col_offset": 45, "nodeName": "second_layer_lrs", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 50, "col_offset": 69, "nodeName": "nn", "type": "Any"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 92, "col_offset": 13, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "k", "type": "int"}, {"lineNumber": 92, "col_offset": 26, "nodeName": "k", "type": "int"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "k", "type": "int"}, {"lineNumber": 94, "col_offset": 33, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 261, "col_offset": 31, "nodeName": "it", "type": "int"}, {"lineNumber": 284, "col_offset": 31, "nodeName": "max", "type": "Callable"}, {"lineNumber": 285, "col_offset": 31, "nodeName": "min", "type": "Callable"}, {"lineNumber": 286, "col_offset": 45, "nodeName": "first_layer_lrs", "type": "List[Any]"}, {"lineNumber": 287, "col_offset": 45, "nodeName": "second_layer_lrs", "type": "List[Any]"}, {"lineNumber": 288, "col_offset": 45, "nodeName": "second_layer_lrs", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 50, "col_offset": 69, "nodeName": "torch", "type": "Any"}, {"lineNumber": 75, "col_offset": 43, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "k", "type": "int"}, {"lineNumber": 284, "col_offset": 35, "nodeName": "first_layer_lrs", "type": "List[Any]"}, {"lineNumber": 285, "col_offset": 35, "nodeName": "first_layer_lrs", "type": "List[Any]"}, {"lineNumber": 286, "col_offset": 61, "nodeName": "num_actual_steps_per_epoch", "type": "int"}, {"lineNumber": 287, "col_offset": 63, "nodeName": "num_actual_steps_per_epoch", "type": "int"}, {"lineNumber": 288, "col_offset": 62, "nodeName": "num_actual_steps_per_epoch", "type": "int"}, {"lineNumber": 284, "col_offset": 52, "nodeName": "num_actual_steps_per_epoch", "type": "int"}, {"lineNumber": 285, "col_offset": 52, "nodeName": "num_actual_steps_per_epoch", "type": "int"}]