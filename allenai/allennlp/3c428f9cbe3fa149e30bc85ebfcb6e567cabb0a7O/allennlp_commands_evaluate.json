[{"lineNumber": 96, "col_offset": 0, "nodeName": "evaluate_from_args", "type": "Callable[[argparse.Namespace], Dict[str, Any]]"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "Subcommand", "type": "Type[allennlp.commands.subcommand.Subcommand]"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 42, "col_offset": 78, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "generator", "type": "Generator[Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]], None, None]"}, {"lineNumber": 86, "col_offset": 4, "nodeName": "generator_tqdm", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "generator_tqdm", "type": "Any"}, {"lineNumber": 81, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "disabled", "type": "bool"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "disabled", "type": "bool"}, {"lineNumber": 103, "col_offset": 4, "nodeName": "archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "config", "type": "allennlp.common.params.Params"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "config", "type": "allennlp.common.params.Params"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 110, "col_offset": 4, "nodeName": "dataset_reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 111, "col_offset": 4, "nodeName": "evaluation_data_path", "type": "Any"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "evaluation_data_file", "type": "Any"}, {"lineNumber": 113, "col_offset": 4, "nodeName": "dataset", "type": "allennlp.data.dataset.InstanceCollection"}, {"lineNumber": 116, "col_offset": 4, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator[allennlp.data.dataset.InstanceCollection]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 96, "col_offset": 52, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 38, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "description", "type": "str"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "archive_file", "type": "argparse._MutuallyExclusiveGroup"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "evaluation_data_file", "type": "argparse._MutuallyExclusiveGroup"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "cuda_device", "type": "argparse._MutuallyExclusiveGroup"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 42, "col_offset": 78, "nodeName": "argparse", "type": "module"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "InstanceCollection", "type": "Type[allennlp.data.dataset.InstanceCollection]"}, {"lineNumber": 80, "col_offset": 23, "nodeName": "DataIterator", "type": "Type[allennlp.data.iterators.data_iterator.DataIterator[Any]]"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "eval", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator[allennlp.data.dataset.InstanceCollection]"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "dataset", "type": "allennlp.data.dataset.InstanceCollection"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "tqdm", "type": "Any"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "generator", "type": "Generator[Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]], None, None]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "metrics", "type": "Dict[str, float]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "description", "type": "str"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "get_metrics", "type": "Callable[..., Dict[str, float]]"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "Namespace", "type": "Type[argparse.Namespace]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "setLevel", "type": "Callable[[Union[int, str]], None]"}, {"lineNumber": 100, "col_offset": 77, "nodeName": "INFO", "type": "int"}, {"lineNumber": 103, "col_offset": 14, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "archive_file", "type": "Any"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "cuda_device", "type": "Any"}, {"lineNumber": 103, "col_offset": 64, "nodeName": "overrides", "type": "Any"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "prepare_environment", "type": "Callable[[allennlp.common.params.Params], None]"}, {"lineNumber": 105, "col_offset": 24, "nodeName": "config", "type": "allennlp.common.params.Params"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "eval", "type": "Any"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 112, "col_offset": 51, "nodeName": "evaluation_data_path", "type": "Any"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "read", "type": "Callable[[str], allennlp.data.dataset.InstanceCollection]"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "evaluation_data_path", "type": "Any"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "index_instances", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.data.iterators.data_iterator.DataIterator[Any]]"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "evaluate", "type": "Callable[[allennlp.models.model.Model, allennlp.data.dataset.InstanceCollection, allennlp.data.iterators.data_iterator.DataIterator[Any], int], Dict[str, Any]]"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 118, "col_offset": 30, "nodeName": "dataset", "type": "allennlp.data.dataset.InstanceCollection"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator[allennlp.data.dataset.InstanceCollection]"}, {"lineNumber": 118, "col_offset": 49, "nodeName": "cuda_device", "type": "Any"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 122, "col_offset": 13, "nodeName": "metric", "type": "Any"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "items", "type": "Callable"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "_SubParsersAction", "type": "Type[argparse._SubParsersAction]"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "add_parser", "type": "Callable[..., argparse.ArgumentParser]"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "add_mutually_exclusive_group", "type": "Callable[..., argparse._MutuallyExclusiveGroup]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "add_mutually_exclusive_group", "type": "Callable[..., argparse._MutuallyExclusiveGroup]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "add_mutually_exclusive_group", "type": "Callable[..., argparse._MutuallyExclusiveGroup]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "set_defaults", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 84, "col_offset": 60, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "tqdm", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "get_metrics", "type": "Callable[..., Dict[str, float]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "set_description", "type": "Any"}, {"lineNumber": 91, "col_offset": 39, "nodeName": "description", "type": "str"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 81, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "Any", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "argparse", "type": "module"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 100, "col_offset": 77, "nodeName": "logging", "type": "module"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 103, "col_offset": 64, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "DatasetReader", "type": "Type[allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "pop", "type": "Any"}, {"lineNumber": 112, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 113, "col_offset": 14, "nodeName": "dataset_reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 114, "col_offset": 4, "nodeName": "dataset", "type": "allennlp.data.dataset.InstanceCollection"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "DataIterator", "type": "Type[allennlp.data.iterators.data_iterator.DataIterator[Any]]"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "pop", "type": "Any"}, {"lineNumber": 118, "col_offset": 49, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 122, "col_offset": 23, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "key", "type": "str"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "metric", "type": "Any"}, {"lineNumber": 96, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 96, "col_offset": 62, "nodeName": "Any", "type": "Any"}, {"lineNumber": 42, "col_offset": 47, "nodeName": "argparse", "type": "module"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "parser", "type": "argparse._SubParsersAction"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "description", "type": "str"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "archive_file", "type": "argparse._MutuallyExclusiveGroup"}, {"lineNumber": 49, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "archive_file", "type": "argparse._MutuallyExclusiveGroup"}, {"lineNumber": 50, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 50, "col_offset": 67, "nodeName": "SUPPRESS", "type": "str"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "evaluation_data_file", "type": "argparse._MutuallyExclusiveGroup"}, {"lineNumber": 55, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "evaluation_data_file", "type": "argparse._MutuallyExclusiveGroup"}, {"lineNumber": 58, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 59, "col_offset": 47, "nodeName": "SUPPRESS", "type": "str"}, {"lineNumber": 61, "col_offset": 22, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "cuda_device", "type": "argparse._MutuallyExclusiveGroup"}, {"lineNumber": 63, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "cuda_device", "type": "argparse._MutuallyExclusiveGroup"}, {"lineNumber": 66, "col_offset": 55, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 66, "col_offset": 65, "nodeName": "SUPPRESS", "type": "str"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "evaluate_from_args", "type": "Callable[[argparse.Namespace], Dict[str, Any]]"}, {"lineNumber": 86, "col_offset": 48, "nodeName": "get_num_batches", "type": "Callable"}, {"lineNumber": 86, "col_offset": 73, "nodeName": "dataset", "type": "allennlp.data.dataset.InstanceCollection"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "batch", "type": "Any"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "join", "type": "Callable"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "generator_tqdm", "type": "Any"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "config", "type": "allennlp.common.params.Params"}, {"lineNumber": 116, "col_offset": 40, "nodeName": "config", "type": "allennlp.common.params.Params"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 50, "col_offset": 67, "nodeName": "argparse", "type": "module"}, {"lineNumber": 59, "col_offset": 47, "nodeName": "argparse", "type": "module"}, {"lineNumber": 66, "col_offset": 65, "nodeName": "argparse", "type": "module"}, {"lineNumber": 86, "col_offset": 48, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator[allennlp.data.dataset.InstanceCollection]"}, {"lineNumber": 100, "col_offset": 4, "nodeName": "logging", "type": "module"}, {"lineNumber": 90, "col_offset": 47, "nodeName": "name", "type": "str"}, {"lineNumber": 90, "col_offset": 53, "nodeName": "value", "type": "float"}, {"lineNumber": 90, "col_offset": 64, "nodeName": "name", "type": "str"}, {"lineNumber": 90, "col_offset": 70, "nodeName": "value", "type": "float"}, {"lineNumber": 90, "col_offset": 79, "nodeName": "items", "type": "Callable"}, {"lineNumber": 90, "col_offset": 79, "nodeName": "metrics", "type": "Dict[str, float]"}]