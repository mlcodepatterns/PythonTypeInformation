[{"lineNumber": 15, "col_offset": 21, "nodeName": "Predictor", "type": "Type[allennlp.predictors.predictor.Predictor]"}, {"lineNumber": 20, "col_offset": 54, "nodeName": "JsonDict", "type": "Type[Dict[str, Any]]"}, {"lineNumber": 41, "col_offset": 56, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "question_text", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "passage_text", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "new_instance", "type": "Any"}, {"lineNumber": 52, "col_offset": 79, "nodeName": "List", "type": "Any"}, {"lineNumber": 20, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 20, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "predict_json", "type": "Any"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "JsonDict", "type": "Type[Dict[str, Any]]"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "json_dict", "type": "Dict[str, Any]"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "json_dict", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "text_to_instance", "type": "Any"}, {"lineNumber": 47, "col_offset": 53, "nodeName": "question_text", "type": "Any"}, {"lineNumber": 47, "col_offset": 68, "nodeName": "passage_text", "type": "Any"}, {"lineNumber": 51, "col_offset": 51, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 53, "col_offset": 23, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "outputs", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "span_start_label", "type": "Any"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "span_end_label", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "passage_field", "type": "allennlp.data.fields.sequence_field.SequenceField[Any]"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "new_instance", "type": "Any"}, {"lineNumber": 52, "col_offset": 84, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 45, "nodeName": "passage", "type": "str"}, {"lineNumber": 38, "col_offset": 66, "nodeName": "question", "type": "str"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "_dataset_reader", "type": "Any"}, {"lineNumber": 52, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "new_instance", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "add_field", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "add_field", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "outputs", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "answer_type", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "outputs", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "outputs", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "new_instance", "type": "Any"}, {"lineNumber": 59, "col_offset": 49, "nodeName": "IndexField", "type": "Type[allennlp.data.fields.index_field.IndexField]"}, {"lineNumber": 59, "col_offset": 83, "nodeName": "passage_field", "type": "allennlp.data.fields.sequence_field.SequenceField[Any]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "new_instance", "type": "Any"}, {"lineNumber": 60, "col_offset": 47, "nodeName": "IndexField", "type": "Type[allennlp.data.fields.index_field.IndexField]"}, {"lineNumber": 60, "col_offset": 79, "nodeName": "passage_field", "type": "allennlp.data.fields.sequence_field.SequenceField[Any]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "answer_type", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 52, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 52, "col_offset": 60, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 59, "col_offset": 60, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 59, "col_offset": 64, "nodeName": "span_start_label", "type": "Any"}, {"lineNumber": 60, "col_offset": 58, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 60, "col_offset": 62, "nodeName": "span_end_label", "type": "Any"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "outputs", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "ListField", "type": "Type[allennlp.data.fields.list_field.ListField]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "add_field", "type": "Any"}, {"lineNumber": 70, "col_offset": 59, "nodeName": "field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "answer_type", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "span", "type": "Any"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "word_span_start", "type": "None"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "word_span_end", "type": "None"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "offsets", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "passage_field", "type": "allennlp.data.fields.sequence_field.SequenceField[Any]"}, {"lineNumber": 52, "col_offset": 60, "nodeName": "numpy", "type": "module"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "new_instance", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "index", "type": "int"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "offset", "type": "Any"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 81, "col_offset": 47, "nodeName": "offsets", "type": "Any"}, {"lineNumber": 87, "col_offset": 47, "nodeName": "new_instance", "type": "Any"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "ListField", "type": "Type[allennlp.data.fields.list_field.ListField]"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "add_field", "type": "Any"}, {"lineNumber": 91, "col_offset": 66, "nodeName": "field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "answer_type", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "sequence_labels", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "numbers_field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "label", "type": "Any"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "sequence_labels", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "LabelField", "type": "Type[allennlp.data.fields.label_field.LabelField]"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "word_span_start", "type": "int"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "index", "type": "int"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "word_span_end", "type": "int"}, {"lineNumber": 85, "col_offset": 40, "nodeName": "index", "type": "int"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "new_instance", "type": "Any"}, {"lineNumber": 98, "col_offset": 43, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "ListField", "type": "Type[allennlp.data.fields.list_field.ListField]"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "add_field", "type": "Any"}, {"lineNumber": 114, "col_offset": 72, "nodeName": "field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "answer_type", "type": "Any"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "span", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "word_span_start", "type": "None"}, {"lineNumber": 122, "col_offset": 16, "nodeName": "word_span_end", "type": "None"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "question_offsets", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "question_field", "type": "allennlp.data.fields.sequence_field.SequenceField[Any]"}, {"lineNumber": 69, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "outputs", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "new_instance", "type": "Any"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "offset", "type": "Any"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "span", "type": "Any"}, {"lineNumber": 84, "col_offset": 23, "nodeName": "offset", "type": "Any"}, {"lineNumber": 84, "col_offset": 36, "nodeName": "span", "type": "Any"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "SpanField", "type": "Type[allennlp.data.fields.span_field.SpanField]"}, {"lineNumber": 88, "col_offset": 45, "nodeName": "word_span_start", "type": "Optional[int]"}, {"lineNumber": 89, "col_offset": 45, "nodeName": "word_span_end", "type": "Optional[int]"}, {"lineNumber": 90, "col_offset": 45, "nodeName": "passage_field", "type": "allennlp.data.fields.sequence_field.SequenceField[Any]"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "outputs", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "new_instance", "type": "Any"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "index", "type": "int"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "offset", "type": "Any"}, {"lineNumber": 124, "col_offset": 37, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 124, "col_offset": 47, "nodeName": "question_offsets", "type": "Any"}, {"lineNumber": 130, "col_offset": 48, "nodeName": "new_instance", "type": "Any"}, {"lineNumber": 131, "col_offset": 24, "nodeName": "ListField", "type": "Type[allennlp.data.fields.list_field.ListField]"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "add_field", "type": "Any"}, {"lineNumber": 134, "col_offset": 67, "nodeName": "field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "label", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "SequenceLabelField", "type": "Type[allennlp.data.fields.sequence_label_field.SequenceLabelField]"}, {"lineNumber": 113, "col_offset": 54, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 113, "col_offset": 62, "nodeName": "numbers_field", "type": "allennlp.data.fields.list_field.ListField"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "word_span_start", "type": "int"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "index", "type": "int"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "word_span_end", "type": "int"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "index", "type": "int"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "new_instance", "type": "Any"}, {"lineNumber": 69, "col_offset": 50, "nodeName": "outputs", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "labels", "type": "List[int]"}, {"lineNumber": 108, "col_offset": 38, "nodeName": "label", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "outputs", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "new_instance", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "offset", "type": "Any"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "span", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "offset", "type": "Any"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "span", "type": "Any"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "SpanField", "type": "Type[allennlp.data.fields.span_field.SpanField]"}, {"lineNumber": 131, "col_offset": 45, "nodeName": "word_span_start", "type": "Optional[int]"}, {"lineNumber": 132, "col_offset": 45, "nodeName": "word_span_end", "type": "Optional[int]"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "question_field", "type": "allennlp.data.fields.sequence_field.SequenceField[Any]"}]