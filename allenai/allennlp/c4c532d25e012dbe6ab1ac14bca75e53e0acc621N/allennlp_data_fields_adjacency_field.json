[{"lineNumber": 13, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 13, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 13, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 16, "col_offset": 21, "nodeName": "Field", "type": "Type[allennlp.data.fields.field.Field[Any]]"}, {"lineNumber": 46, "col_offset": 4, "nodeName": "_already_warned_namespaces", "type": "Set[str]"}, {"lineNumber": 102, "col_offset": 60, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 13, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 16, "col_offset": 27, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "Set", "type": "Any"}, {"lineNumber": 46, "col_offset": 43, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "indices", "type": "List[Tuple[int, int]]"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "indices", "type": "List[Tuple[int, int]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "sequence_field", "type": "allennlp.data.fields.sequence_field.SequenceField"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "sequence_field", "type": "allennlp.data.fields.sequence_field.SequenceField"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "_label_namespace", "type": "str"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "label_namespace", "type": "str"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "_padding_value", "type": "int"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "padding_value", "type": "int"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "_indexed_labels", "type": "None"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "field_length", "type": "int"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "desired_num_tokens", "type": "int"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "labels", "type": "Union[Any, List[int]]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 102, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "empty_list", "type": "List[Tuple[int, int]]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "adjacency_field", "type": "AdjacencyField"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "length", "type": "int"}, {"lineNumber": 16, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "AdjacencyField"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "AdjacencyField"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "AdjacencyField"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "AdjacencyField"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "AdjacencyField"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "AdjacencyField"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "_maybe_warn_for_namespace", "type": "Callable[[str], None]"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "label_namespace", "type": "str"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "sequence_length", "type": "Callable[[], int]"}, {"lineNumber": 75, "col_offset": 57, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "label", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "labels", "type": "Any"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "labels", "type": "Any"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "padding_lengths", "type": "Dict[str, int]"}, {"lineNumber": 104, "col_offset": 70, "nodeName": "_padding_value", "type": "Any"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "_indexed_labels", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "label", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "indices", "type": "Any"}, {"lineNumber": 107, "col_offset": 46, "nodeName": "labels", "type": "Union[Any, List[int]]"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "label", "type": "Any"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "AdjacencyField", "type": "Type[AdjacencyField]"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "empty_list", "type": "List[Tuple[int, int]]"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "sequence_length", "type": "Callable[[], int]"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "join", "type": "Callable"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "AdjacencyField"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "sequence_field", "type": "allennlp.data.fields.sequence_field.SequenceField"}, {"lineNumber": 64, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "indices", "type": "List[Tuple[int, int]]"}, {"lineNumber": 65, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "label_namespace", "type": "str"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "_already_warned_namespaces", "type": "Set[str]"}, {"lineNumber": 86, "col_offset": 41, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "_indexed_labels", "type": "Any"}, {"lineNumber": 87, "col_offset": 44, "nodeName": "labels", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 98, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 98, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "ones", "type": "Any"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "desired_num_tokens", "type": "int"}, {"lineNumber": 104, "col_offset": 48, "nodeName": "desired_num_tokens", "type": "int"}, {"lineNumber": 104, "col_offset": 70, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 117, "col_offset": 41, "nodeName": "empty_field", "type": "Any"}, {"lineNumber": 118, "col_offset": 55, "nodeName": "_padding_value", "type": "Any"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "sequence_field", "type": "allennlp.data.fields.sequence_field.SequenceField"}, {"lineNumber": 127, "col_offset": 43, "nodeName": "length", "type": "int"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "formatted_indices", "type": "str"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "formatted_labels", "type": "str"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "_label_namespace", "type": "str"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "indices", "type": "List[Tuple[int, int]]"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 71, "col_offset": 38, "nodeName": "indices", "type": "List[Tuple[int, int]]"}, {"lineNumber": 71, "col_offset": 50, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 71, "col_offset": 54, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 76, "col_offset": 60, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 77, "col_offset": 38, "nodeName": "self", "type": "AdjacencyField"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "_label_namespace", "type": "str"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 83, "col_offset": 52, "nodeName": "label_namespace", "type": "str"}, {"lineNumber": 87, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 40, "nodeName": "label", "type": "Any"}, {"lineNumber": 95, "col_offset": 49, "nodeName": "labels", "type": "Any"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "sequence_field", "type": "Any"}, {"lineNumber": 104, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 105, "col_offset": 48, "nodeName": "_", "type": "int"}, {"lineNumber": 108, "col_offset": 19, "nodeName": "index", "type": "Any"}, {"lineNumber": 117, "col_offset": 41, "nodeName": "sequence_field", "type": "Any"}, {"lineNumber": 118, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "self", "type": "AdjacencyField"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "labels", "type": "str"}, {"lineNumber": 126, "col_offset": 41, "nodeName": "index", "type": "str"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "self", "type": "AdjacencyField"}, {"lineNumber": 65, "col_offset": 74, "nodeName": "indices", "type": "List[Tuple[int, int]]"}, {"lineNumber": 67, "col_offset": 86, "nodeName": "index", "type": "Tuple[int, int]"}, {"lineNumber": 67, "col_offset": 95, "nodeName": "indices", "type": "List[Tuple[int, int]]"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "indices", "type": "List[Tuple[int, int]]"}, {"lineNumber": 68, "col_offset": 38, "nodeName": "field_length", "type": "int"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 72, "col_offset": 38, "nodeName": "indices", "type": "List[Tuple[int, int]]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "_label_namespace", "type": "str"}, {"lineNumber": 76, "col_offset": 60, "nodeName": "_label_namespace", "type": "str"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "self", "type": "AdjacencyField"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "_already_warned_namespaces", "type": "Set[str]"}, {"lineNumber": 86, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "counter", "type": "Dict[str, Dict[Union[str, Any], int]]"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "label", "type": "Any"}, {"lineNumber": 95, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 102, "col_offset": 51, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 105, "col_offset": 53, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 117, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "wrap", "type": "Callable[..., List[str]]"}, {"lineNumber": 126, "col_offset": 50, "nodeName": "wrap", "type": "Callable[..., List[str]]"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "field_length", "type": "int"}, {"lineNumber": 67, "col_offset": 69, "nodeName": "field_length", "type": "int"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "self", "type": "AdjacencyField"}, {"lineNumber": 76, "col_offset": 60, "nodeName": "self", "type": "AdjacencyField"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "self", "type": "AdjacencyField"}, {"lineNumber": 86, "col_offset": 51, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "_label_namespace", "type": "Any"}, {"lineNumber": 105, "col_offset": 59, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 105, "col_offset": 63, "nodeName": "indices", "type": "Any"}, {"lineNumber": 124, "col_offset": 50, "nodeName": "textwrap", "type": "module"}, {"lineNumber": 124, "col_offset": 64, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 124, "col_offset": 69, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 126, "col_offset": 50, "nodeName": "textwrap", "type": "module"}, {"lineNumber": 126, "col_offset": 64, "nodeName": "repr", "type": "Callable[[Any], str]"}, {"lineNumber": 126, "col_offset": 69, "nodeName": "indices", "type": "List[Tuple[int, int]]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "index", "type": "Tuple[int, int]"}, {"lineNumber": 67, "col_offset": 58, "nodeName": "index", "type": "Tuple[int, int]"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 63, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 69, "nodeName": "self", "type": "AdjacencyField"}, {"lineNumber": 126, "col_offset": 69, "nodeName": "self", "type": "AdjacencyField"}, {"lineNumber": 86, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 86, "col_offset": 61, "nodeName": "int", "type": "Type[int]"}]