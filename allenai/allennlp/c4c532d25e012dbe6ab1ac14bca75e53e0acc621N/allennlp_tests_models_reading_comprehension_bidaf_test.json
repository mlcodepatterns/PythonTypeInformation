[{"lineNumber": 15, "col_offset": 37, "nodeName": "ModelTestCase", "type": "Any"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "test_forward_pass_runs_correctly", "type": "Callable[[Any], Any]"}, {"lineNumber": 48, "col_offset": 4, "nodeName": "test_model_can_train_save_and_load", "type": "Callable[[Any], Any]"}, {"lineNumber": 52, "col_offset": 4, "nodeName": "test_batch_predictions_are_consistent", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "test_get_best_span", "type": "Callable[[Any], Any]"}, {"lineNumber": 109, "col_offset": 4, "nodeName": "test_mismatching_dimensions_throws_configuration_error", "type": "Callable[[Any], Any]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "training_tensors", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "span_start_probs", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "span_end_probs", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "saved_model", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "saved_instances", "type": "Any"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "instances", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "reader", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "_token_indexers", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "instances", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "instance", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "instances", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "saved_model", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "instances", "type": "Any"}, {"lineNumber": 82, "col_offset": 25, "nodeName": "saved_instances", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "span_begin_probs", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "span_end_probs", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "begin_end_idxs", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "span_begin_probs", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "span_end_probs", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "begin_end_idxs", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "span_begin_probs", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "span_end_probs", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "begin_end_idxs", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "span_begin_probs", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "span_end_probs", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "begin_end_idxs", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "set_up_model", "type": "Any"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "Batch", "type": "Any"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "instances", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "index_instances", "type": "Any"}, {"lineNumber": 23, "col_offset": 30, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "as_tensor_dict", "type": "Any"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 44, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Any"}, {"lineNumber": 50, "col_offset": 50, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "from_file", "type": "Any"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "reader", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "read", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "from_instances", "type": "Any"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "instances", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "ensure_batch_predictions_are_consistent", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "log", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "log", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "get_best_span", "type": "Any"}, {"lineNumber": 87, "col_offset": 66, "nodeName": "span_begin_probs", "type": "Any"}, {"lineNumber": 87, "col_offset": 84, "nodeName": "span_end_probs", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "log", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "log", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "get_best_span", "type": "Any"}, {"lineNumber": 95, "col_offset": 66, "nodeName": "span_begin_probs", "type": "Any"}, {"lineNumber": 95, "col_offset": 84, "nodeName": "span_end_probs", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "log", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "log", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "get_best_span", "type": "Any"}, {"lineNumber": 101, "col_offset": 66, "nodeName": "span_begin_probs", "type": "Any"}, {"lineNumber": 101, "col_offset": 84, "nodeName": "span_end_probs", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "log", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "log", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "get_best_span", "type": "Any"}, {"lineNumber": 106, "col_offset": 66, "nodeName": "span_begin_probs", "type": "Any"}, {"lineNumber": 106, "col_offset": 84, "nodeName": "span_end_probs", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "from_file", "type": "Any"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "from_file", "type": "Any"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "from_file", "type": "Any"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 22, "col_offset": 22, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "batch", "type": "Any"}, {"lineNumber": 23, "col_offset": 30, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "batch", "type": "Any"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 25, "col_offset": 35, "nodeName": "training_tensors", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 38, "col_offset": 38, "nodeName": "span_start_probs", "type": "Any"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 39, "col_offset": 38, "nodeName": "span_end_probs", "type": "Any"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "Params", "type": "Any"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "DatasetReader", "type": "Any"}, {"lineNumber": 68, "col_offset": 43, "nodeName": "params", "type": "Any"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "_token_indexers", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "reader", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "Vocabulary", "type": "Any"}, {"lineNumber": 71, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "index_fields", "type": "Any"}, {"lineNumber": 73, "col_offset": 34, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "Model", "type": "Any"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "BidirectionalAttentionFlow", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "BidirectionalAttentionFlow", "type": "Any"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "BidirectionalAttentionFlow", "type": "Any"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "BidirectionalAttentionFlow", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "Params", "type": "Any"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 114, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "Params", "type": "Any"}, {"lineNumber": 117, "col_offset": 34, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "Params", "type": "Any"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 128, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "Any"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "data", "type": "Any"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 69, "col_offset": 44, "nodeName": "reader", "type": "Any"}, {"lineNumber": 70, "col_offset": 37, "nodeName": "FIXTURES_ROOT", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "instance", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 76, "col_offset": 59, "nodeName": "params", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "Model", "type": "Any"}, {"lineNumber": 115, "col_offset": 36, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "Model", "type": "Any"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "Model", "type": "Any"}, {"lineNumber": 129, "col_offset": 36, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "fields", "type": "Any"}, {"lineNumber": 70, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "params", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 86, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 88, "col_offset": 28, "nodeName": "begin_end_idxs", "type": "Any"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 94, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "begin_end_idxs", "type": "Any"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 100, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "begin_end_idxs", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 107, "col_offset": 28, "nodeName": "begin_end_idxs", "type": "Any"}, {"lineNumber": 115, "col_offset": 36, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 115, "col_offset": 55, "nodeName": "pop", "type": "Any"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 122, "col_offset": 55, "nodeName": "pop", "type": "Any"}, {"lineNumber": 129, "col_offset": 36, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 129, "col_offset": 55, "nodeName": "pop", "type": "Any"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 115, "col_offset": 55, "nodeName": "params", "type": "Any"}, {"lineNumber": 122, "col_offset": 55, "nodeName": "params", "type": "Any"}, {"lineNumber": 129, "col_offset": 55, "nodeName": "params", "type": "Any"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "instances", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}]