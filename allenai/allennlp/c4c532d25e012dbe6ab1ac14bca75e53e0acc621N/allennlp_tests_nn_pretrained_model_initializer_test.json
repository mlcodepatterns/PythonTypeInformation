[{"lineNumber": 12, "col_offset": 12, "nodeName": "Module", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "Module", "type": "Any"}, {"lineNumber": 32, "col_offset": 37, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 40, "col_offset": 80, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 47, "col_offset": 86, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 12, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "linear_2", "type": "Any"}, {"lineNumber": 22, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "linear_3", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "net1", "type": "_Net1"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "net2", "type": "_Net2"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "temp_file", "type": "pathlib.Path"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "parameter_name_overrides", "type": "Optional[Union[Dict[str, str], Dict[nothing, nothing]]]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.Initializer"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "weights", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "name_overrides", "type": "Dict[str, str]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.Initializer"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "weights", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "applicator", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "name_overrides", "type": "Dict[str, str]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "applicator", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "name_overrides", "type": "Dict[str, str]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "applicator", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "temp_file", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "applicator", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "temp_file", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "applicator", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "applicator", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "_Net1"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "_Net1"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "_Net2"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "_Net2"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "_Net1", "type": "Type[_Net1]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "_Net2", "type": "Type[_Net2]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "TEST_DIR", "type": "pathlib.Path"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 38, "col_offset": 43, "nodeName": "temp_file", "type": "pathlib.Path"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 40, "col_offset": 60, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 48, "col_offset": 35, "nodeName": "parameter_name_overrides", "type": "Optional[Dict[str, str]]"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "from_params", "type": "Callable[..., allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 67, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "initializer", "type": "allennlp.nn.initializers.Initializer"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "parameter_name_overrides", "type": "Any"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 78, "col_offset": 46, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "initializer", "type": "allennlp.nn.initializers.Initializer"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "parameter_name_overrides", "type": "Any"}, {"lineNumber": 80, "col_offset": 55, "nodeName": "name_overrides", "type": "Dict[str, str]"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "_get_applicator", "type": "Callable[..., allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 86, "col_offset": 75, "nodeName": "temp_file", "type": "pathlib.Path"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "applicator", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "net1", "type": "_Net1"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "_are_equal", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 88, "col_offset": 51, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "_get_applicator", "type": "Callable[..., allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 95, "col_offset": 54, "nodeName": "temp_file", "type": "pathlib.Path"}, {"lineNumber": 95, "col_offset": 70, "nodeName": "name_overrides", "type": "Dict[str, str]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "applicator", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "net1", "type": "_Net1"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "_are_equal", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "_are_equal", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "linear_2", "type": "Any"}, {"lineNumber": 98, "col_offset": 51, "nodeName": "linear_3", "type": "Any"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "_get_applicator", "type": "Callable[..., allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 105, "col_offset": 56, "nodeName": "temp_file", "type": "pathlib.Path"}, {"lineNumber": 105, "col_offset": 72, "nodeName": "name_overrides", "type": "Dict[str, str]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "is_cuda", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "is_cuda", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "is_cuda", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "is_cuda", "type": "Any"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "TEST_DIR", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 124, "col_offset": 43, "nodeName": "temp_file", "type": "Any"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "_get_applicator", "type": "Any"}, {"lineNumber": 126, "col_offset": 56, "nodeName": "temp_file", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "applicator", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "net1", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "is_cuda", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "is_cuda", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "is_cuda", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "is_cuda", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "_are_equal", "type": "Any"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 136, "col_offset": 51, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "is_cuda", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "is_cuda", "type": "Any"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "TEST_DIR", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "save", "type": "Any"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "temp_file", "type": "Any"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "_get_applicator", "type": "Any"}, {"lineNumber": 151, "col_offset": 56, "nodeName": "temp_file", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "applicator", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "net1", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "is_cuda", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "is_cuda", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "_are_equal", "type": "Any"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "is_cuda", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "is_cuda", "type": "Any"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "_get_applicator", "type": "Any"}, {"lineNumber": 172, "col_offset": 56, "nodeName": "temp_file", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "applicator", "type": "Any"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "net1", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "is_cuda", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "is_cuda", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "_are_equal", "type": "Any"}, {"lineNumber": 180, "col_offset": 57, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 38, "col_offset": 43, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 40, "col_offset": 60, "nodeName": "nn", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "equal", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "weight", "type": "Any"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "weight", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "equal", "type": "Any"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "bias", "type": "Any"}, {"lineNumber": 42, "col_offset": 42, "nodeName": "bias", "type": "Any"}, {"lineNumber": 47, "col_offset": 50, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "weights_file_path", "type": "str"}, {"lineNumber": 52, "col_offset": 44, "nodeName": "parameter_name_overrides", "type": "Optional[Union[Dict[str, str], Dict[nothing, nothing]]]"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 57, "col_offset": 49, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "_are_equal", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 63, "col_offset": 55, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "_are_equal", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "linear_2", "type": "Any"}, {"lineNumber": 64, "col_offset": 55, "nodeName": "linear_3", "type": "Any"}, {"lineNumber": 67, "col_offset": 68, "nodeName": "temp_file", "type": "pathlib.Path"}, {"lineNumber": 68, "col_offset": 22, "nodeName": "Initializer", "type": "Type[allennlp.nn.initializers.Initializer]"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "initializer", "type": "allennlp.nn.initializers.Initializer"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "temp_file", "type": "pathlib.Path"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "name_overrides", "type": "Dict[str, str]"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "Initializer", "type": "Type[allennlp.nn.initializers.Initializer]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "initializer", "type": "allennlp.nn.initializers.Initializer"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 86, "col_offset": 75, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "net1", "type": "_Net1"}, {"lineNumber": 88, "col_offset": 51, "nodeName": "net2", "type": "_Net2"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "_are_equal", "type": "Callable[[Any, Any], bool]"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "linear_2", "type": "Any"}, {"lineNumber": 89, "col_offset": 55, "nodeName": "linear_3", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 95, "col_offset": 54, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "net1", "type": "_Net1"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "net2", "type": "_Net2"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "net1", "type": "_Net1"}, {"lineNumber": 98, "col_offset": 51, "nodeName": "net2", "type": "_Net2"}, {"lineNumber": 105, "col_offset": 21, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 105, "col_offset": 56, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "applicator", "type": "Any"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "net1", "type": "_Net1"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "net1", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "net2", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "weight", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "bias", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "weight", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "bias", "type": "Any"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 126, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "weight", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "bias", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "weight", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "bias", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "net1", "type": "Any"}, {"lineNumber": 136, "col_offset": 51, "nodeName": "net2", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "net2", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "weight", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "bias", "type": "Any"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "torch", "type": "Any"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 151, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "weight", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "bias", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "net1", "type": "Any"}, {"lineNumber": 159, "col_offset": 51, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "net1", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "weight", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "bias", "type": "Any"}, {"lineNumber": 172, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "weight", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "bias", "type": "Any"}, {"lineNumber": 180, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 180, "col_offset": 57, "nodeName": "net2", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 16, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "net2", "type": "_Net2"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 40, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "linear1", "type": "Any"}, {"lineNumber": 41, "col_offset": 43, "nodeName": "linear2", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "linear1", "type": "Any"}, {"lineNumber": 42, "col_offset": 42, "nodeName": "linear2", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "net1", "type": "_Net1"}, {"lineNumber": 63, "col_offset": 55, "nodeName": "net2", "type": "_Net2"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "net1", "type": "_Net1"}, {"lineNumber": 64, "col_offset": 55, "nodeName": "net2", "type": "_Net2"}, {"lineNumber": 67, "col_offset": 68, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 88, "col_offset": 51, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "net1", "type": "_Net1"}, {"lineNumber": 89, "col_offset": 55, "nodeName": "net2", "type": "_Net2"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 98, "col_offset": 51, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "net2", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "net2", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 159, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 51, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 180, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 47, "col_offset": 59, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 55, "col_offset": 33, "nodeName": "regex", "type": "str"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "initializer_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 63, "col_offset": 55, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 64, "col_offset": 35, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 64, "col_offset": 55, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 89, "col_offset": 35, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 89, "col_offset": 55, "nodeName": "self", "type": "TestPretrainedModelInitializer"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "net1", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "net1", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "net2", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "net2", "type": "Any"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "net1", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "net1", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "net2", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "net2", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "net2", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "net2", "type": "Any"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "net1", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "net1", "type": "Any"}, {"lineNumber": 159, "col_offset": 51, "nodeName": "net2", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "net1", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "net1", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "net1", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "net1", "type": "Any"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "net1", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 180, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 64, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 47, "col_offset": 69, "nodeName": "str", "type": "Type[str]"}]