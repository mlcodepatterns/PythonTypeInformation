[{"lineNumber": 11, "col_offset": 33, "nodeName": "DomainLanguage", "type": "Type[allennlp.semparse.domain_languages.domain_language.DomainLanguage]"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 14, "col_offset": 51, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "items", "type": "Set[Object]"}, {"lineNumber": 18, "col_offset": 43, "nodeName": "Set", "type": "Any"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "items", "type": "Set[Object]"}, {"lineNumber": 22, "col_offset": 46, "nodeName": "Set", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "items", "type": "Set[Object]"}, {"lineNumber": 26, "col_offset": 48, "nodeName": "Set", "type": "Any"}, {"lineNumber": 30, "col_offset": 29, "nodeName": "Set", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "world", "type": "FakeLanguageWithAssertions"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "black_logical_forms", "type": "List[str]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "black_triangle_touch_forms", "type": "List[str]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "black_logical_forms", "type": "List[str]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "agenda", "type": "List[str]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "ten_shortest_logical_forms", "type": "List[str]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "shortest_logical_form", "type": "str"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "length_three_logical_forms", "type": "List[str]"}, {"lineNumber": 18, "col_offset": 47, "nodeName": "Object", "type": "Type[Object]"}, {"lineNumber": 22, "col_offset": 50, "nodeName": "Object", "type": "Type[Object]"}, {"lineNumber": 26, "col_offset": 52, "nodeName": "Object", "type": "Type[Object]"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "Object", "type": "Type[Object]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "FakeLanguageWithAssertions", "type": "Type[FakeLanguageWithAssertions]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "ActionSpaceWalker", "type": "Type[allennlp.semparse.action_space_walker.ActionSpaceWalker]"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "world", "type": "FakeLanguageWithAssertions"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "shortest_logical_form", "type": "str"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 51, "col_offset": 79, "nodeName": "agenda", "type": "List[str]"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "shortest_logical_form", "type": "str"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 73, "col_offset": 79, "nodeName": "agenda", "type": "List[str]"}, {"lineNumber": 101, "col_offset": 73, "nodeName": "log", "type": "unittest.case._AssertLogsContext"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "first_four_logical_forms", "type": "List[str]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "output", "type": "List[str]"}, {"lineNumber": 115, "col_offset": 73, "nodeName": "log", "type": "unittest.case._AssertLogsContext"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "first_four_logical_forms", "type": "List[str]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "output", "type": "List[str]"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 126, "col_offset": 62, "nodeName": "agenda", "type": "List[str]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "empty_set", "type": "List[str]"}, {"lineNumber": 131, "col_offset": 73, "nodeName": "log", "type": "unittest.case._AssertLogsContext"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "yellow_black_triangle_touch_forms", "type": "List[str]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "output", "type": "List[str]"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "get_all_logical_forms", "type": "Callable[..., List[str]]"}, {"lineNumber": 153, "col_offset": 32, "nodeName": "ten_shortest_logical_forms", "type": "List[str]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "shortest_logical_form", "type": "str"}, {"lineNumber": 155, "col_offset": 37, "nodeName": "ten_shortest_logical_forms", "type": "List[str]"}, {"lineNumber": 14, "col_offset": 35, "nodeName": "Set", "type": "Any"}, {"lineNumber": 18, "col_offset": 27, "nodeName": "Set", "type": "Any"}, {"lineNumber": 22, "col_offset": 30, "nodeName": "Set", "type": "Any"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "Set", "type": "Any"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "black_logical_forms", "type": "List[str]"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "black_triangle_touch_forms", "type": "List[str]"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "black_logical_forms", "type": "List[str]"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "assertLogs", "type": "Callable[..., unittest.case._AssertLogsContext]"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 104, "col_offset": 39, "nodeName": "empty_agenda_logical_forms", "type": "List[str]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 109, "col_offset": 25, "nodeName": "log", "type": "unittest.case._AssertLogsContext"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "assertLogs", "type": "Callable[..., unittest.case._AssertLogsContext]"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 116, "col_offset": 83, "nodeName": "agenda", "type": "List[str]"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "empty_agenda_logical_forms", "type": "List[str]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "log", "type": "unittest.case._AssertLogsContext"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "assertLogs", "type": "Callable[..., unittest.case._AssertLogsContext]"}, {"lineNumber": 136, "col_offset": 48, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 136, "col_offset": 90, "nodeName": "agenda", "type": "List[str]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 146, "col_offset": 25, "nodeName": "log", "type": "unittest.case._AssertLogsContext"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 156, "col_offset": 19, "nodeName": "length_three_logical_forms", "type": "List[str]"}, {"lineNumber": 14, "col_offset": 39, "nodeName": "Object", "type": "Type[Object]"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "Object", "type": "Type[Object]"}, {"lineNumber": 22, "col_offset": 34, "nodeName": "Object", "type": "Type[Object]"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "Object", "type": "Type[Object]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 37, "col_offset": 61, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 63, "col_offset": 30, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 73, "col_offset": 37, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "black_triangle_touch_forms", "type": "List[str]"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "black_triangle_touch_forms", "type": "List[str]"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "black_triangle_touch_forms", "type": "List[str]"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "first_four_logical_forms", "type": "List[str]"}, {"lineNumber": 115, "col_offset": 13, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 119, "col_offset": 23, "nodeName": "first_four_logical_forms", "type": "List[str]"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 131, "col_offset": 13, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 136, "col_offset": 48, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 139, "col_offset": 23, "nodeName": "yellow_black_triangle_touch_forms", "type": "List[str]"}, {"lineNumber": 152, "col_offset": 37, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 116, "col_offset": 41, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 136, "col_offset": 48, "nodeName": "self", "type": "ActionSpaceWalkerTest"}]