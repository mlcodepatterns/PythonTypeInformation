[{"lineNumber": 16, "col_offset": 35, "nodeName": "DatasetReader", "type": "Type[allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "ModelTestCase", "type": "Type[allennlp.common.testing.model_test_case.ModelTestCase]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "_token_indexers", "type": "Union[Dict[str, allennlp.data.token_indexers.token_indexer.TokenIndexer[Union[int, List[int], numpy.ndarray]]], Dict[nothing, nothing]]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "sentence1", "type": "str"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "tokens1", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "label1", "type": "str"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "sentence2", "type": "str"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "tokens2", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "label2", "type": "str"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "monkeypatch", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "config_path", "type": "pathlib.Path"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "config", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "param_file", "type": "pathlib.Path"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "param_file", "type": "pathlib.Path"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "padding_lengths", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "tensors", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "decoded", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "param_file", "type": "pathlib.Path"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "model1", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "model2", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "model3", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "model4", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "model5", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "model6", "type": "Any"}, {"lineNumber": 20, "col_offset": 28, "nodeName": "WordTokenizer", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "lazy", "type": "bool"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 22, "col_offset": 31, "nodeName": "token_indexers", "type": "Dict[str, allennlp.data.token_indexers.token_indexer.TokenIndexer[Union[int, List[int], numpy.ndarray]]]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 28, "col_offset": 42, "nodeName": "sentence1", "type": "str"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 33, "col_offset": 42, "nodeName": "sentence2", "type": "str"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "instance1", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "instance2", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestBertForClassification"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "MonkeyPatch", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "BertConfig", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "setattr", "type": "Any"}, {"lineNumber": 52, "col_offset": 33, "nodeName": "BertModel", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "undo", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "tearDown", "type": "Callable[[], None]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "param_file", "type": "pathlib.Path"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 62, "col_offset": 50, "nodeName": "param_file", "type": "pathlib.Path"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "param_file", "type": "pathlib.Path"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "get_padding_lengths", "type": "Callable[[], Dict[str, Dict[str, int]]]"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "decode", "type": "Any"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "tensors", "type": "Any"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "decoded", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 75, "col_offset": 26, "nodeName": "param_file", "type": "pathlib.Path"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 76, "col_offset": 50, "nodeName": "param_file", "type": "pathlib.Path"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "model1", "type": "Any"}, {"lineNumber": 81, "col_offset": 25, "nodeName": "model2", "type": "Any"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "model3", "type": "Any"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "model4", "type": "Any"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "load", "type": "Callable[..., Any]"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "model5", "type": "Any"}, {"lineNumber": 89, "col_offset": 29, "nodeName": "model6", "type": "Any"}, {"lineNumber": 23, "col_offset": 38, "nodeName": "WordTokenizer", "type": "Any"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "config_path", "type": "pathlib.Path"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "monkeypatch", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "monkeypatch", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "TestBertForClassification"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "TestBertForClassification"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "TestBertForClassification"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "dataset", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "self", "type": "TestBertForClassification"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "TestBertForClassification"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestBertForClassification"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "PretrainedBertModel", "type": "Type[allennlp.modules.token_embedders.bert_token_embedder.PretrainedBertModel]"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "PretrainedBertModel", "type": "Type[allennlp.modules.token_embedders.bert_token_embedder.PretrainedBertModel]"}, {"lineNumber": 83, "col_offset": 17, "nodeName": "PretrainedBertModel", "type": "Type[allennlp.modules.token_embedders.bert_token_embedder.PretrainedBertModel]"}, {"lineNumber": 84, "col_offset": 17, "nodeName": "PretrainedBertModel", "type": "Type[allennlp.modules.token_embedders.bert_token_embedder.PretrainedBertModel]"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "PretrainedBertModel", "type": "Type[allennlp.modules.token_embedders.bert_token_embedder.PretrainedBertModel]"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "PretrainedBertModel", "type": "Type[allennlp.modules.token_embedders.bert_token_embedder.PretrainedBertModel]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 36, "col_offset": 50, "nodeName": "tokens1", "type": "Any"}, {"lineNumber": 36, "col_offset": 59, "nodeName": "_token_indexers", "type": "Any"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "LabelField", "type": "Type[allennlp.data.fields.label_field.LabelField]"}, {"lineNumber": 37, "col_offset": 50, "nodeName": "label1", "type": "str"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 38, "col_offset": 50, "nodeName": "tokens2", "type": "Any"}, {"lineNumber": 38, "col_offset": 59, "nodeName": "_token_indexers", "type": "Any"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "LabelField", "type": "Type[allennlp.data.fields.label_field.LabelField]"}, {"lineNumber": 39, "col_offset": 50, "nodeName": "label2", "type": "str"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "self", "type": "TestBertForClassification"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "TestBertForClassification"}, {"lineNumber": 52, "col_offset": 73, "nodeName": "BertModel", "type": "Any"}, {"lineNumber": 52, "col_offset": 83, "nodeName": "config", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestBertForClassification"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "self", "type": "TestBertForClassification"}, {"lineNumber": 65, "col_offset": 21, "nodeName": "self", "type": "TestBertForClassification"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "self", "type": "TestBertForClassification"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "as_tensor_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 68, "col_offset": 59, "nodeName": "padding_lengths", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "self", "type": "TestBertForClassification"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "self", "type": "TestBertForClassification"}, {"lineNumber": 36, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "dataset", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "self", "type": "TestBertForClassification"}]