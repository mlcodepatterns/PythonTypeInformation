[{"lineNumber": 11, "col_offset": 19, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "default_attr_name", "type": "str"}, {"lineNumber": 16, "col_offset": 86, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "fake", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "current_default", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "dictionary", "type": "Dict[str, Type[allennlp.data.data_iterator.DataIterator]]"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "registry_helper", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "list_dataset_readers", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "get_dataset_reader", "type": "Callable[[Any, str], Type[allennlp.data.dataset_reader.DatasetReader]]"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "register_dataset_reader", "type": "Callable[[str], Any]"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "_dataset_readers", "type": "Dict[str, Type[allennlp.data.dataset_reader.DatasetReader]]"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "registry_helper", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "list_data_iterators", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "get_data_iterator", "type": "Callable[[Any, str], Type[allennlp.data.data_iterator.DataIterator]]"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "register_data_iterator", "type": "Callable[[str], Any]"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "_data_iterators", "type": "Dict[str, Type[allennlp.data.data_iterator.DataIterator]]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "registry_helper", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "list_tokenizers", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "get_tokenizer", "type": "Callable[[Any, str], Type[allennlp.data.tokenizer.Tokenizer]]"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "register_tokenizer", "type": "Callable[[str], Any]"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "_tokenizers", "type": "Dict[str, Type[allennlp.data.tokenizer.Tokenizer]]"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "registry_helper", "type": "Callable[..., Any]"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "list_token_indexers", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "get_token_indexer", "type": "Callable[[Any, str], Type[allennlp.data.token_indexer.TokenIndexer[Any]]]"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "register_token_indexer", "type": "Callable[[str], Any]"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "_token_indexers", "type": "Dict[str, Type[allennlp.data.token_indexer.TokenIndexer[Any]]]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "registry_helper", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "list_regularizers", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "get_regularizer", "type": "Callable[[Any, Any], Type[allennlp.training.regularizer.Regularizer]]"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "register_regularizer", "type": "Callable[[str], Any]"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "_regularizers", "type": "Dict[str, Type[allennlp.training.regularizer.Regularizer]]"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "normal", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "orthogonal", "type": "Any"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "constant", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "dirac", "type": "Any"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "xavier_normal", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "xavier_uniform", "type": "Any"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "kaiming_normal", "type": "Any"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "kaiming_uniform", "type": "Any"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "eye", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "value", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "items", "type": "Callable"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "registry_helper", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "list_initializers", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "get_initializer", "type": "Callable[[Any, Any], Callable[[Any], None]]"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "register_initializer", "type": "Callable[[str], Any]"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "_initializers", "type": "Dict[str, Any]"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "registry_helper", "type": "Callable[..., Any]"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "list_token_embedders", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "get_token_embedder", "type": "Callable[[Any, str], Type[Any]]"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "register_token_embedder", "type": "Callable[[str], Any]"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "_token_embedders", "type": "Dict[str, Any]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "registry_helper", "type": "Callable[..., Any]"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "list_text_field_embedders", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "get_text_field_embedder", "type": "Callable[[Any, str], Type[Any]]"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "register_text_field_embedder", "type": "Callable[[str], Any]"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "_text_field_embedders", "type": "Dict[str, Any]"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "registry_helper", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "list_seq2seq_encoders", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 173, "col_offset": 29, "nodeName": "get_seq2seq_encoder", "type": "Callable[[Any, str], Type[Any]]"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "register_seq2seq_encoder", "type": "Callable[[str], Any]"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "_seq2seq_encoders", "type": "Dict[str, Any]"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "registry_helper", "type": "Callable[..., Any]"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "list_seq2vec_encoders", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "get_seq2vec_encoder", "type": "Callable[[Any, str], Type[Any]]"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "register_seq2vec_encoder", "type": "Callable[[str], Any]"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "_seq2vec_encoders", "type": "Dict[str, Any]"}, {"lineNumber": 28, "col_offset": 29, "nodeName": "list_fn", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "get_fn", "type": "Callable[[Any, str], Type[allennlp.data.data_iterator.DataIterator]]"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "default_attr_name", "type": "str"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "current_default", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 38, "col_offset": 20, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 38, "col_offset": 30, "nodeName": "default_attr_name", "type": "str"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 43, "col_offset": 20, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "default_attr_name", "type": "str"}, {"lineNumber": 43, "col_offset": 49, "nodeName": "current_default", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "TestRegistry"}, {"lineNumber": 55, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 58, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestRegistry"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "TestRegistry"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "TestRegistry"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 95, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestRegistry"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 110, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "init", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "init", "type": "Any"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "init", "type": "Any"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "init", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "init", "type": "Any"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "init", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "init", "type": "Any"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "init", "type": "Any"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "init", "type": "Any"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "init", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "init", "type": "Any"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "all_initializers", "type": "Dict[str, Any]"}, {"lineNumber": 130, "col_offset": 52, "nodeName": "value", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "self", "type": "TestRegistry"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "TestRegistry"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "self", "type": "TestRegistry"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 160, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "_module_class", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "_module_class", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "_module_class", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "self", "type": "TestRegistry"}, {"lineNumber": 172, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 173, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 175, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "_module_class", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "_module_class", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "_module_class", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "self", "type": "TestRegistry"}, {"lineNumber": 186, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 187, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 188, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "decorator_fn", "type": "Callable[[str], Any]"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "raises", "type": "Any"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "setattr", "type": "Callable[[Any, str, Any], None]"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "default_attr_name", "type": "str"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "list_fn", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "get_dataset_reader", "type": "Callable[[Any, str], Type[allennlp.data.dataset_reader.DatasetReader]]"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "get_dataset_reader", "type": "Callable[[Any, str], Type[allennlp.data.dataset_reader.DatasetReader]]"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "get_dataset_reader", "type": "Callable[[Any, str], Type[allennlp.data.dataset_reader.DatasetReader]]"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "get_dataset_reader", "type": "Callable[[Any, str], Type[allennlp.data.dataset_reader.DatasetReader]]"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "get_data_iterator", "type": "Callable[[Any, str], Type[allennlp.data.data_iterator.DataIterator]]"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "get_data_iterator", "type": "Callable[[Any, str], Type[allennlp.data.data_iterator.DataIterator]]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "get_data_iterator", "type": "Callable[[Any, str], Type[allennlp.data.data_iterator.DataIterator]]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "get_tokenizer", "type": "Callable[[Any, str], Type[allennlp.data.tokenizer.Tokenizer]]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "get_tokenizer", "type": "Callable[[Any, str], Type[allennlp.data.tokenizer.Tokenizer]]"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "get_token_indexer", "type": "Callable[[Any, str], Type[allennlp.data.token_indexer.TokenIndexer[Any]]]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "get_token_indexer", "type": "Callable[[Any, str], Type[allennlp.data.token_indexer.TokenIndexer[Any]]]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "get_regularizer", "type": "Callable[[Any, Any], Type[allennlp.training.regularizer.Regularizer]]"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "get_regularizer", "type": "Callable[[Any, Any], Type[allennlp.training.regularizer.Regularizer]]"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "nn", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "nn", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "get_initializer", "type": "Callable[[Any, Any], Callable[[Any], None]]"}, {"lineNumber": 130, "col_offset": 44, "nodeName": "key", "type": "str"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "get_token_embedder", "type": "Callable[[Any, str], Type[Any]]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "get_text_field_embedder", "type": "Callable[[Any, str], Type[Any]]"}, {"lineNumber": 37, "col_offset": 19, "nodeName": "list_fn", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "list_fn", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 40, "col_offset": 17, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 122, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 124, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 125, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "get_seq2seq_encoder", "type": "Callable[[Any, str], Type[Any]]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "get_seq2seq_encoder", "type": "Callable[[Any, str], Type[Any]]"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "get_seq2seq_encoder", "type": "Callable[[Any, str], Type[Any]]"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "get_seq2vec_encoder", "type": "Callable[[Any, str], Type[Any]]"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "get_seq2vec_encoder", "type": "Callable[[Any, str], Type[Any]]"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "get_seq2vec_encoder", "type": "Callable[[Any, str], Type[Any]]"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 181, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "Registry", "type": "Type[allennlp.experiments.registry.Registry]"}]