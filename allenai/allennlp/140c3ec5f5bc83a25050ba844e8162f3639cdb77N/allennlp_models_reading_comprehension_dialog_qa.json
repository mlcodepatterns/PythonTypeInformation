[{"lineNumber": 19, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 433, "col_offset": 63, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "_num_context_answers", "type": "int"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "num_context_answers", "type": "int"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "_max_span_length", "type": "int"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "max_span_length", "type": "int"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "_text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "_phrase_layer", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "phrase_layer", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "_marker_embedding_dim", "type": "int"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "marker_embedding_dim", "type": "int"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "_encoding_dim", "type": "int"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "_matrix_attention", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "_merge_atten", "type": "allennlp.modules.time_distributed.TimeDistributed"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "_residual_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "residual_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "_self_attention", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "_followup_lin", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "_span_start_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "span_start_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "_span_end_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 92, "col_offset": 33, "nodeName": "span_end_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "_span_start_predictor", "type": "allennlp.modules.time_distributed.TimeDistributed"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "_span_end_predictor", "type": "allennlp.modules.time_distributed.TimeDistributed"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "_span_yesno_predictor", "type": "allennlp.modules.time_distributed.TimeDistributed"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "_span_followup_predictor", "type": "allennlp.modules.time_distributed.TimeDistributed"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "_span_start_accuracy", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "_span_end_accuracy", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "_span_yesno_accuracy", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "_span_followup_accuracy", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "_span_gt_yesno_accuracy", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "_span_gt_followup_accuracy", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "_span_accuracy", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "_official_f1", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "_variational_dropout", "type": "allennlp.modules.input_variational_dropout.InputVariationalDropout"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "total_qa_count", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "qa_mask", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "embedded_question", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "embedded_question", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "embedded_passage", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "question_mask", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "question_mask", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "passage_mask", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "repeated_passage_mask", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "repeated_passage_mask", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "encoded_question", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "passage_question_similarity", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "passage_question_attention", "type": "Any"}, {"lineNumber": 253, "col_offset": 8, "nodeName": "passage_question_vectors", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "question_passage_similarity", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "question_passage_attention", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "question_passage_vector", "type": "Any"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "final_merged_passage", "type": "Any"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "self_attention_matrix", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "self_mask", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "self_mask", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "self_attention_probs", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "self_attention_vecs", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "residual_layer", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "final_merged_passage", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "final_merged_passage", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "start_rep", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "span_start_logits", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "span_end_logits", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "span_yesno_logits", "type": "Any"}, {"lineNumber": 308, "col_offset": 8, "nodeName": "span_followup_logits", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "span_start_logits", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "span_end_logits", "type": "Any"}, {"lineNumber": 318, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "best_span_cpu", "type": "Any"}, {"lineNumber": 364, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 408, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 129, "col_offset": 58, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 416, "col_offset": 31, "nodeName": "yesno_tags", "type": "List[List[Any]]"}, {"lineNumber": 417, "col_offset": 34, "nodeName": "followup_tags", "type": "List[List[Any]]"}, {"lineNumber": 418, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 411, "col_offset": 62, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 420, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "max_span_log_prob", "type": "List[Any]"}, {"lineNumber": 440, "col_offset": 8, "nodeName": "span_start_argmax", "type": "List[int]"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "best_word_span", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "span_start_logits", "type": "Any"}, {"lineNumber": 445, "col_offset": 8, "nodeName": "span_end_logits", "type": "Any"}, {"lineNumber": 446, "col_offset": 8, "nodeName": "span_yesno_logits", "type": "Any"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "span_followup_logits", "type": "Any"}, {"lineNumber": 448, "col_offset": 12, "nodeName": "b_i", "type": "int"}, {"lineNumber": 461, "col_offset": 12, "nodeName": "b_i", "type": "int"}, {"lineNumber": 467, "col_offset": 15, "nodeName": "best_word_span", "type": "Any"}, {"lineNumber": 433, "col_offset": 63, "nodeName": "torch", "type": "Any"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "LinearMatrixAttention", "type": "Any"}, {"lineNumber": 75, "col_offset": 55, "nodeName": "_encoding_dim", "type": "int"}, {"lineNumber": 75, "col_offset": 75, "nodeName": "_encoding_dim", "type": "int"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 28, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 11, "nodeName": "num_context_answers", "type": "int"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "_prev_ans_marker", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "LinearMatrixAttention", "type": "Any"}, {"lineNumber": 85, "col_offset": 53, "nodeName": "_encoding_dim", "type": "int"}, {"lineNumber": 85, "col_offset": 73, "nodeName": "_encoding_dim", "type": "int"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "_encoding_dim", "type": "int"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 37, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 37, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 40, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 97, "col_offset": 56, "nodeName": "_followup_lin", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "check_dimensions_match", "type": "Callable[[int, int, str, str], None]"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 39, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 39, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 42, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "BooleanAccuracy", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 28, "nodeName": "Average", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 36, "nodeName": "InputVariationalDropout", "type": "Type[allennlp.modules.input_variational_dropout.InputVariationalDropout]"}, {"lineNumber": 117, "col_offset": 60, "nodeName": "dropout", "type": "float"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "max_qa_count", "type": "Any"}, {"lineNumber": 194, "col_offset": 34, "nodeName": "max_q_len", "type": "Any"}, {"lineNumber": 194, "col_offset": 45, "nodeName": "_", "type": "Any"}, {"lineNumber": 194, "col_offset": 49, "nodeName": "size", "type": "Any"}, {"lineNumber": 195, "col_offset": 25, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 195, "col_offset": 38, "nodeName": "max_qa_count", "type": "Any"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "view", "type": "Any"}, {"lineNumber": 196, "col_offset": 50, "nodeName": "total_qa_count", "type": "Any"}, {"lineNumber": 197, "col_offset": 28, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 197, "col_offset": 54, "nodeName": "question", "type": "Dict[str, Any]"}, {"lineNumber": 198, "col_offset": 28, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 198, "col_offset": 54, "nodeName": "total_qa_count", "type": "Any"}, {"lineNumber": 198, "col_offset": 70, "nodeName": "max_q_len", "type": "Any"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "_variational_dropout", "type": "Any"}, {"lineNumber": 200, "col_offset": 54, "nodeName": "embedded_question", "type": "Any"}, {"lineNumber": 201, "col_offset": 27, "nodeName": "_variational_dropout", "type": "Any"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 204, "col_offset": 24, "nodeName": "float", "type": "Any"}, {"lineNumber": 205, "col_offset": 24, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 205, "col_offset": 46, "nodeName": "total_qa_count", "type": "Any"}, {"lineNumber": 205, "col_offset": 62, "nodeName": "max_q_len", "type": "Any"}, {"lineNumber": 206, "col_offset": 23, "nodeName": "float", "type": "Any"}, {"lineNumber": 208, "col_offset": 32, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 208, "col_offset": 68, "nodeName": "max_qa_count", "type": "Any"}, {"lineNumber": 209, "col_offset": 32, "nodeName": "view", "type": "Any"}, {"lineNumber": 209, "col_offset": 59, "nodeName": "total_qa_count", "type": "Any"}, {"lineNumber": 209, "col_offset": 75, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "_num_context_answers", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "question_num_ind", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "question_num_ind", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "question_num_ind", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "question_num_ind", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "question_num_marker_emb", "type": "Any"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "embedded_question", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "p1_answer_marker", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "p1_answer_marker_emb", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "repeated_embedded_passage", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "encoded_passage", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "repeated_encoded_passage", "type": "Any"}, {"lineNumber": 246, "col_offset": 27, "nodeName": "_variational_dropout", "type": "Any"}, {"lineNumber": 249, "col_offset": 38, "nodeName": "_matrix_attention", "type": "Any"}, {"lineNumber": 249, "col_offset": 61, "nodeName": "repeated_encoded_passage", "type": "Any"}, {"lineNumber": 249, "col_offset": 87, "nodeName": "encoded_question", "type": "Any"}, {"lineNumber": 251, "col_offset": 37, "nodeName": "masked_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 251, "col_offset": 57, "nodeName": "passage_question_similarity", "type": "Any"}, {"lineNumber": 251, "col_offset": 86, "nodeName": "question_mask", "type": "Any"}, {"lineNumber": 253, "col_offset": 35, "nodeName": "weighted_sum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 253, "col_offset": 53, "nodeName": "encoded_question", "type": "Any"}, {"lineNumber": 253, "col_offset": 71, "nodeName": "passage_question_attention", "type": "Any"}, {"lineNumber": 257, "col_offset": 28, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 257, "col_offset": 55, "nodeName": "passage_question_similarity", "type": "Any"}, {"lineNumber": 261, "col_offset": 38, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 262, "col_offset": 37, "nodeName": "masked_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 262, "col_offset": 57, "nodeName": "question_passage_similarity", "type": "Any"}, {"lineNumber": 262, "col_offset": 86, "nodeName": "repeated_passage_mask", "type": "Any"}, {"lineNumber": 264, "col_offset": 34, "nodeName": "weighted_sum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 264, "col_offset": 52, "nodeName": "repeated_encoded_passage", "type": "Any"}, {"lineNumber": 264, "col_offset": 78, "nodeName": "question_passage_attention", "type": "Any"}, {"lineNumber": 265, "col_offset": 40, "nodeName": "expand", "type": "Any"}, {"lineNumber": 265, "col_offset": 84, "nodeName": "total_qa_count", "type": "Any"}, {"lineNumber": 266, "col_offset": 84, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 267, "col_offset": 84, "nodeName": "_encoding_dim", "type": "Any"}, {"lineNumber": 270, "col_offset": 31, "nodeName": "cat", "type": "Any"}, {"lineNumber": 276, "col_offset": 31, "nodeName": "relu", "type": "Any"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "_variational_dropout", "type": "Any"}, {"lineNumber": 280, "col_offset": 32, "nodeName": "_self_attention", "type": "Any"}, {"lineNumber": 280, "col_offset": 53, "nodeName": "residual_layer", "type": "Any"}, {"lineNumber": 280, "col_offset": 69, "nodeName": "residual_layer", "type": "Any"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "eye", "type": "Any"}, {"lineNumber": 284, "col_offset": 30, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 284, "col_offset": 46, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 285, "col_offset": 41, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 285, "col_offset": 57, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "mask", "type": "Any"}, {"lineNumber": 288, "col_offset": 31, "nodeName": "masked_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 288, "col_offset": 51, "nodeName": "self_attention_matrix", "type": "Any"}, {"lineNumber": 288, "col_offset": 74, "nodeName": "mask", "type": "Any"}, {"lineNumber": 291, "col_offset": 30, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 291, "col_offset": 43, "nodeName": "self_attention_probs", "type": "Any"}, {"lineNumber": 291, "col_offset": 65, "nodeName": "residual_layer", "type": "Any"}, {"lineNumber": 292, "col_offset": 30, "nodeName": "cat", "type": "Any"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "relu", "type": "Any"}, {"lineNumber": 297, "col_offset": 31, "nodeName": "final_merged_passage", "type": "Any"}, {"lineNumber": 297, "col_offset": 54, "nodeName": "residual_layer", "type": "Any"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "_variational_dropout", "type": "Any"}, {"lineNumber": 299, "col_offset": 57, "nodeName": "final_merged_passage", "type": "Any"}, {"lineNumber": 300, "col_offset": 20, "nodeName": "_span_start_encoder", "type": "Any"}, {"lineNumber": 300, "col_offset": 45, "nodeName": "final_merged_passage", "type": "Any"}, {"lineNumber": 300, "col_offset": 67, "nodeName": "repeated_passage_mask", "type": "Any"}, {"lineNumber": 301, "col_offset": 28, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 303, "col_offset": 18, "nodeName": "_span_end_encoder", "type": "Any"}, {"lineNumber": 304, "col_offset": 41, "nodeName": "repeated_passage_mask", "type": "Any"}, {"lineNumber": 305, "col_offset": 26, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 307, "col_offset": 28, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 308, "col_offset": 31, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 310, "col_offset": 28, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 310, "col_offset": 55, "nodeName": "span_start_logits", "type": "Any"}, {"lineNumber": 310, "col_offset": 74, "nodeName": "repeated_passage_mask", "type": "Any"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 312, "col_offset": 53, "nodeName": "span_end_logits", "type": "Any"}, {"lineNumber": 312, "col_offset": 70, "nodeName": "repeated_passage_mask", "type": "Any"}, {"lineNumber": 314, "col_offset": 20, "nodeName": "_get_best_span_yesno_followup", "type": "Any"}, {"lineNumber": 314, "col_offset": 55, "nodeName": "span_start_logits", "type": "Any"}, {"lineNumber": 314, "col_offset": 74, "nodeName": "span_end_logits", "type": "Any"}, {"lineNumber": 315, "col_offset": 55, "nodeName": "span_yesno_logits", "type": "Any"}, {"lineNumber": 315, "col_offset": 74, "nodeName": "span_followup_logits", "type": "Any"}, {"lineNumber": 316, "col_offset": 55, "nodeName": "_max_span_length", "type": "Any"}, {"lineNumber": 321, "col_offset": 11, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 332, "col_offset": 12, "nodeName": "gold_span_end_loc", "type": "List[Any]"}, {"lineNumber": 333, "col_offset": 12, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 334, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "gold_span_end_loc", "type": "Any"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "pred_span_end_loc", "type": "List[Any]"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 345, "col_offset": 12, "nodeName": "predicted_end", "type": "Any"}, {"lineNumber": 347, "col_offset": 12, "nodeName": "_yesno", "type": "Any"}, {"lineNumber": 348, "col_offset": 12, "nodeName": "_followup", "type": "Any"}, {"lineNumber": 349, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 352, "col_offset": 12, "nodeName": "_yesno", "type": "Any"}, {"lineNumber": 353, "col_offset": 12, "nodeName": "_followup", "type": "Any"}, {"lineNumber": 356, "col_offset": 34, "nodeName": "loss", "type": "Any"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 362, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 363, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 364, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 364, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 365, "col_offset": 12, "nodeName": "passage_str", "type": "Any"}, {"lineNumber": 366, "col_offset": 12, "nodeName": "offsets", "type": "Any"}, {"lineNumber": 367, "col_offset": 12, "nodeName": "f1_score", "type": "float"}, {"lineNumber": 368, "col_offset": 12, "nodeName": "per_dialog_best_span_list", "type": "List[Any]"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "per_dialog_yesno_list", "type": "List[Any]"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "per_dialog_followup_list", "type": "List[Any]"}, {"lineNumber": 371, "col_offset": 12, "nodeName": "per_dialog_query_id_list", "type": "List[Any]"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 420, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 429, "col_offset": 57, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 430, "col_offset": 55, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 431, "col_offset": 57, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 432, "col_offset": 60, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 433, "col_offset": 55, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 438, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 438, "col_offset": 20, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 438, "col_offset": 37, "nodeName": "size", "type": "Any"}, {"lineNumber": 439, "col_offset": 38, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 440, "col_offset": 34, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 442, "col_offset": 25, "nodeName": "new_zeros", "type": "Any"}, {"lineNumber": 444, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 445, "col_offset": 26, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 446, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 447, "col_offset": 31, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 448, "col_offset": 19, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 448, "col_offset": 25, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 449, "col_offset": 16, "nodeName": "j", "type": "int"}, {"lineNumber": 461, "col_offset": 19, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 461, "col_offset": 25, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 462, "col_offset": 12, "nodeName": "j", "type": "Any"}, {"lineNumber": 463, "col_offset": 12, "nodeName": "yesno_pred", "type": "Any"}, {"lineNumber": 464, "col_offset": 12, "nodeName": "followup_pred", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "phrase_layer", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 75, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 75, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 76, "col_offset": 84, "nodeName": "_encoding_dim", "type": "int"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 81, "col_offset": 59, "nodeName": "max_turn_length", "type": "int"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 83, "col_offset": 86, "nodeName": "marker_embedding_dim", "type": "int"}, {"lineNumber": 85, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 73, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 53, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 89, "col_offset": 69, "nodeName": "_encoding_dim", "type": "int"}, {"lineNumber": 94, "col_offset": 53, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 94, "col_offset": 69, "nodeName": "_encoding_dim", "type": "int"}, {"lineNumber": 95, "col_offset": 51, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 95, "col_offset": 67, "nodeName": "_encoding_dim", "type": "int"}, {"lineNumber": 96, "col_offset": 53, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 96, "col_offset": 69, "nodeName": "_encoding_dim", "type": "int"}, {"lineNumber": 97, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 129, "col_offset": 26, "nodeName": "List", "type": "Any"}, {"lineNumber": 197, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 28, "nodeName": "embedded_question", "type": "Any"}, {"lineNumber": 199, "col_offset": 54, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 201, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 201, "col_offset": 53, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 201, "col_offset": 79, "nodeName": "passage", "type": "Dict[str, Any]"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "embedded_passage", "type": "Any"}, {"lineNumber": 205, "col_offset": 24, "nodeName": "question_mask", "type": "Any"}, {"lineNumber": 209, "col_offset": 32, "nodeName": "repeated_passage_mask", "type": "Any"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "get_range_vector", "type": "Callable[[int, int], Any]"}, {"lineNumber": 213, "col_offset": 53, "nodeName": "max_qa_count", "type": "Any"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 214, "col_offset": 72, "nodeName": "max_q_len", "type": "Any"}, {"lineNumber": 215, "col_offset": 31, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 215, "col_offset": 68, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 216, "col_offset": 31, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 216, "col_offset": 56, "nodeName": "total_qa_count", "type": "Any"}, {"lineNumber": 216, "col_offset": 72, "nodeName": "max_q_len", "type": "Any"}, {"lineNumber": 217, "col_offset": 38, "nodeName": "_question_num_marker", "type": "Any"}, {"lineNumber": 217, "col_offset": 64, "nodeName": "question_num_ind", "type": "Any"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "cat", "type": "Any"}, {"lineNumber": 221, "col_offset": 40, "nodeName": "view", "type": "Any"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "total_qa_count", "type": "Any"}, {"lineNumber": 222, "col_offset": 37, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "view", "type": "Any"}, {"lineNumber": 224, "col_offset": 53, "nodeName": "total_qa_count", "type": "Any"}, {"lineNumber": 224, "col_offset": 69, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 225, "col_offset": 35, "nodeName": "_prev_ans_marker", "type": "Any"}, {"lineNumber": 225, "col_offset": 57, "nodeName": "p1_answer_marker", "type": "Any"}, {"lineNumber": 226, "col_offset": 40, "nodeName": "cat", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "_num_context_answers", "type": "Any"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "p2_answer_marker", "type": "Any"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "p2_answer_marker_emb", "type": "Any"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "repeated_embedded_passage", "type": "Any"}, {"lineNumber": 237, "col_offset": 39, "nodeName": "_variational_dropout", "type": "Any"}, {"lineNumber": 240, "col_offset": 30, "nodeName": "_variational_dropout", "type": "Any"}, {"lineNumber": 241, "col_offset": 39, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 241, "col_offset": 78, "nodeName": "max_qa_count", "type": "Any"}, {"lineNumber": 242, "col_offset": 39, "nodeName": "view", "type": "Any"}, {"lineNumber": 242, "col_offset": 69, "nodeName": "total_qa_count", "type": "Any"}, {"lineNumber": 243, "col_offset": 69, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 244, "col_offset": 69, "nodeName": "_encoding_dim", "type": "Any"}, {"lineNumber": 246, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 246, "col_offset": 53, "nodeName": "_phrase_layer", "type": "Any"}, {"lineNumber": 246, "col_offset": 72, "nodeName": "embedded_question", "type": "Any"}, {"lineNumber": 246, "col_offset": 91, "nodeName": "question_mask", "type": "Any"}, {"lineNumber": 249, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 251, "col_offset": 37, "nodeName": "util", "type": "module"}, {"lineNumber": 253, "col_offset": 35, "nodeName": "util", "type": "module"}, {"lineNumber": 257, "col_offset": 28, "nodeName": "util", "type": "module"}, {"lineNumber": 258, "col_offset": 55, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 262, "col_offset": 37, "nodeName": "util", "type": "module"}, {"lineNumber": 264, "col_offset": 34, "nodeName": "util", "type": "module"}, {"lineNumber": 267, "col_offset": 84, "nodeName": "self", "type": "Any"}, {"lineNumber": 270, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 270, "col_offset": 42, "nodeName": "repeated_encoded_passage", "type": "Any"}, {"lineNumber": 271, "col_offset": 42, "nodeName": "passage_question_vectors", "type": "Any"}, {"lineNumber": 276, "col_offset": 31, "nodeName": "F", "type": "Any"}, {"lineNumber": 276, "col_offset": 38, "nodeName": "_merge_atten", "type": "Any"}, {"lineNumber": 276, "col_offset": 56, "nodeName": "final_merged_passage", "type": "Any"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 278, "col_offset": 51, "nodeName": "_residual_encoder", "type": "Any"}, {"lineNumber": 278, "col_offset": 74, "nodeName": "final_merged_passage", "type": "Any"}, {"lineNumber": 279, "col_offset": 74, "nodeName": "repeated_passage_mask", "type": "Any"}, {"lineNumber": 280, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 282, "col_offset": 45, "nodeName": "total_qa_count", "type": "Any"}, {"lineNumber": 282, "col_offset": 61, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 283, "col_offset": 17, "nodeName": "reshape", "type": "Any"}, {"lineNumber": 283, "col_offset": 47, "nodeName": "total_qa_count", "type": "Any"}, {"lineNumber": 283, "col_offset": 66, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 284, "col_offset": 69, "nodeName": "device", "type": "Any"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "self_mask", "type": "Any"}, {"lineNumber": 286, "col_offset": 27, "nodeName": "self_mask", "type": "Any"}, {"lineNumber": 288, "col_offset": 31, "nodeName": "util", "type": "module"}, {"lineNumber": 291, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 292, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 292, "col_offset": 41, "nodeName": "self_attention_vecs", "type": "Any"}, {"lineNumber": 292, "col_offset": 62, "nodeName": "residual_layer", "type": "Any"}, {"lineNumber": 295, "col_offset": 25, "nodeName": "F", "type": "Any"}, {"lineNumber": 295, "col_offset": 32, "nodeName": "_merge_self_attention", "type": "Any"}, {"lineNumber": 295, "col_offset": 59, "nodeName": "self_attention_vecs", "type": "Any"}, {"lineNumber": 299, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 300, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 303, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 303, "col_offset": 41, "nodeName": "cat", "type": "Any"}, {"lineNumber": 310, "col_offset": 28, "nodeName": "util", "type": "module"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "util", "type": "module"}, {"lineNumber": 314, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 316, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 322, "col_offset": 19, "nodeName": "nll_loss", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "_span_start_accuracy", "type": "Any"}, {"lineNumber": 324, "col_offset": 38, "nodeName": "span_start_logits", "type": "Any"}, {"lineNumber": 325, "col_offset": 20, "nodeName": "nll_loss", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "_span_end_accuracy", "type": "Any"}, {"lineNumber": 327, "col_offset": 36, "nodeName": "span_end_logits", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "_span_accuracy", "type": "Any"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 334, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 334, "col_offset": 30, "nodeName": "total_qa_count", "type": "Any"}, {"lineNumber": 338, "col_offset": 32, "nodeName": "new", "type": "Any"}, {"lineNumber": 338, "col_offset": 47, "nodeName": "gold_span_end_loc", "type": "List[Any]"}, {"lineNumber": 341, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 341, "col_offset": 30, "nodeName": "total_qa_count", "type": "Any"}, {"lineNumber": 345, "col_offset": 28, "nodeName": "new", "type": "Any"}, {"lineNumber": 345, "col_offset": 43, "nodeName": "pred_span_end_loc", "type": "List[Any]"}, {"lineNumber": 347, "col_offset": 21, "nodeName": "view", "type": "Any"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "view", "type": "Any"}, {"lineNumber": 349, "col_offset": 20, "nodeName": "nll_loss", "type": "Any"}, {"lineNumber": 350, "col_offset": 20, "nodeName": "nll_loss", "type": "Any"}, {"lineNumber": 352, "col_offset": 21, "nodeName": "view", "type": "Any"}, {"lineNumber": 353, "col_offset": 24, "nodeName": "view", "type": "Any"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "_span_yesno_accuracy", "type": "Any"}, {"lineNumber": 354, "col_offset": 38, "nodeName": "_yesno", "type": "Any"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "_span_followup_accuracy", "type": "Any"}, {"lineNumber": 355, "col_offset": 41, "nodeName": "_followup", "type": "Any"}, {"lineNumber": 356, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 372, "col_offset": 63, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 374, "col_offset": 16, "nodeName": "predicted_span", "type": "Tuple[Any, ...]"}, {"lineNumber": 376, "col_offset": 16, "nodeName": "start_offset", "type": "Any"}, {"lineNumber": 377, "col_offset": 16, "nodeName": "end_offset", "type": "Any"}, {"lineNumber": 379, "col_offset": 16, "nodeName": "yesno_pred", "type": "Any"}, {"lineNumber": 380, "col_offset": 16, "nodeName": "followup_pred", "type": "Any"}, {"lineNumber": 385, "col_offset": 16, "nodeName": "best_span_string", "type": "Any"}, {"lineNumber": 387, "col_offset": 19, "nodeName": "answer_texts", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 404, "col_offset": 38, "nodeName": "per_dialog_query_id_list", "type": "List[Any]"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 405, "col_offset": 48, "nodeName": "per_dialog_best_span_list", "type": "List[Any]"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 406, "col_offset": 40, "nodeName": "per_dialog_yesno_list", "type": "List[Any]"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 407, "col_offset": 43, "nodeName": "per_dialog_followup_list", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 63, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 129, "col_offset": 68, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 411, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 413, "col_offset": 26, "nodeName": "yn_list", "type": "Any"}, {"lineNumber": 415, "col_offset": 29, "nodeName": "followup_list", "type": "Any"}, {"lineNumber": 411, "col_offset": 67, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 411, "col_offset": 72, "nodeName": "Any", "type": "Any"}, {"lineNumber": 421, "col_offset": 29, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 421, "col_offset": 66, "nodeName": "reset", "type": "bool"}, {"lineNumber": 422, "col_offset": 27, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 422, "col_offset": 62, "nodeName": "reset", "type": "bool"}, {"lineNumber": 423, "col_offset": 28, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 423, "col_offset": 59, "nodeName": "reset", "type": "bool"}, {"lineNumber": 424, "col_offset": 25, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 424, "col_offset": 62, "nodeName": "reset", "type": "bool"}, {"lineNumber": 425, "col_offset": 28, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 425, "col_offset": 68, "nodeName": "reset", "type": "bool"}, {"lineNumber": 426, "col_offset": 22, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 426, "col_offset": 51, "nodeName": "reset", "type": "bool"}, {"lineNumber": 420, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 420, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 429, "col_offset": 57, "nodeName": "torch", "type": "Any"}, {"lineNumber": 430, "col_offset": 55, "nodeName": "torch", "type": "Any"}, {"lineNumber": 431, "col_offset": 57, "nodeName": "torch", "type": "Any"}, {"lineNumber": 432, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 437, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 438, "col_offset": 37, "nodeName": "span_start_logits", "type": "Any"}, {"lineNumber": 442, "col_offset": 25, "nodeName": "span_start_logits", "type": "Any"}, {"lineNumber": 442, "col_offset": 54, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 442, "col_offset": 76, "nodeName": "long", "type": "Any"}, {"lineNumber": 449, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 449, "col_offset": 27, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 450, "col_offset": 16, "nodeName": "val1", "type": "Any"}, {"lineNumber": 454, "col_offset": 16, "nodeName": "val2", "type": "Any"}, {"lineNumber": 462, "col_offset": 16, "nodeName": "best_word_span", "type": "Any"}, {"lineNumber": 463, "col_offset": 25, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 464, "col_offset": 28, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 465, "col_offset": 12, "nodeName": "best_word_span", "type": "Any"}, {"lineNumber": 465, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 465, "col_offset": 41, "nodeName": "yesno_pred", "type": "Any"}, {"lineNumber": 466, "col_offset": 12, "nodeName": "best_word_span", "type": "Any"}, {"lineNumber": 466, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 466, "col_offset": 41, "nodeName": "followup_pred", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "nn", "type": "Any"}, {"lineNumber": 76, "col_offset": 60, "nodeName": "_encoding_dim", "type": "int"}, {"lineNumber": 76, "col_offset": 84, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 82, "col_offset": 59, "nodeName": "marker_embedding_dim", "type": "int"}, {"lineNumber": 82, "col_offset": 82, "nodeName": "num_context_answers", "type": "int"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 88, "col_offset": 53, "nodeName": "nn", "type": "Any"}, {"lineNumber": 88, "col_offset": 69, "nodeName": "_encoding_dim", "type": "int"}, {"lineNumber": 89, "col_offset": 69, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 53, "nodeName": "nn", "type": "Any"}, {"lineNumber": 94, "col_offset": 69, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 51, "nodeName": "nn", "type": "Any"}, {"lineNumber": 95, "col_offset": 67, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 53, "nodeName": "nn", "type": "Any"}, {"lineNumber": 96, "col_offset": 69, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "phrase_layer", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "marker_embedding_dim", "type": "int"}, {"lineNumber": 101, "col_offset": 54, "nodeName": "num_context_answers", "type": "int"}, {"lineNumber": 194, "col_offset": 49, "nodeName": "question", "type": "Dict[str, Any]"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "ge", "type": "Any"}, {"lineNumber": 196, "col_offset": 27, "nodeName": "followup_list", "type": "Any"}, {"lineNumber": 199, "col_offset": 54, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 201, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 204, "col_offset": 24, "nodeName": "get_text_field_mask", "type": "Callable[..., Any]"}, {"lineNumber": 204, "col_offset": 49, "nodeName": "question", "type": "Dict[str, Any]"}, {"lineNumber": 206, "col_offset": 23, "nodeName": "get_text_field_mask", "type": "Callable[..., Any]"}, {"lineNumber": 206, "col_offset": 48, "nodeName": "passage", "type": "Dict[str, Any]"}, {"lineNumber": 208, "col_offset": 32, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 213, "col_offset": 31, "nodeName": "util", "type": "module"}, {"lineNumber": 213, "col_offset": 67, "nodeName": "get_device_of", "type": "Callable[[Any], int]"}, {"lineNumber": 213, "col_offset": 86, "nodeName": "embedded_question", "type": "Any"}, {"lineNumber": 216, "col_offset": 31, "nodeName": "question_num_ind", "type": "Any"}, {"lineNumber": 217, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 218, "col_offset": 43, "nodeName": "embedded_question", "type": "Any"}, {"lineNumber": 218, "col_offset": 62, "nodeName": "question_num_marker_emb", "type": "Any"}, {"lineNumber": 222, "col_offset": 53, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 224, "col_offset": 31, "nodeName": "p1_answer_marker", "type": "Any"}, {"lineNumber": 225, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 226, "col_offset": 51, "nodeName": "repeated_embedded_passage", "type": "Any"}, {"lineNumber": 226, "col_offset": 78, "nodeName": "p1_answer_marker_emb", "type": "Any"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 228, "col_offset": 35, "nodeName": "view", "type": "Any"}, {"lineNumber": 228, "col_offset": 57, "nodeName": "total_qa_count", "type": "Any"}, {"lineNumber": 228, "col_offset": 73, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 229, "col_offset": 39, "nodeName": "_prev_ans_marker", "type": "Any"}, {"lineNumber": 229, "col_offset": 61, "nodeName": "p2_answer_marker", "type": "Any"}, {"lineNumber": 230, "col_offset": 44, "nodeName": "cat", "type": "Any"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "_num_context_answers", "type": "Any"}, {"lineNumber": 232, "col_offset": 20, "nodeName": "p3_answer_marker", "type": "Any"}, {"lineNumber": 233, "col_offset": 20, "nodeName": "p3_answer_marker_emb", "type": "Any"}, {"lineNumber": 237, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 237, "col_offset": 65, "nodeName": "_phrase_layer", "type": "Any"}, {"lineNumber": 237, "col_offset": 84, "nodeName": "repeated_embedded_passage", "type": "Any"}, {"lineNumber": 238, "col_offset": 84, "nodeName": "repeated_passage_mask", "type": "Any"}, {"lineNumber": 240, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 56, "nodeName": "_phrase_layer", "type": "Any"}, {"lineNumber": 240, "col_offset": 75, "nodeName": "embedded_passage", "type": "Any"}, {"lineNumber": 240, "col_offset": 93, "nodeName": "passage_mask", "type": "Any"}, {"lineNumber": 242, "col_offset": 39, "nodeName": "repeated_encoded_passage", "type": "Any"}, {"lineNumber": 244, "col_offset": 69, "nodeName": "self", "type": "Any"}, {"lineNumber": 246, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 55, "nodeName": "question_mask", "type": "Any"}, {"lineNumber": 265, "col_offset": 40, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 272, "col_offset": 42, "nodeName": "repeated_encoded_passage", "type": "Any"}, {"lineNumber": 272, "col_offset": 69, "nodeName": "passage_question_vectors", "type": "Any"}, {"lineNumber": 273, "col_offset": 42, "nodeName": "repeated_encoded_passage", "type": "Any"}, {"lineNumber": 273, "col_offset": 69, "nodeName": "tiled_question_passage_vector", "type": "Any"}, {"lineNumber": 276, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 278, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "repeated_passage_mask", "type": "Any"}, {"lineNumber": 283, "col_offset": 17, "nodeName": "repeated_passage_mask", "type": "Any"}, {"lineNumber": 284, "col_offset": 69, "nodeName": "self_attention_matrix", "type": "Any"}, {"lineNumber": 293, "col_offset": 41, "nodeName": "residual_layer", "type": "Any"}, {"lineNumber": 293, "col_offset": 58, "nodeName": "self_attention_vecs", "type": "Any"}, {"lineNumber": 295, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 301, "col_offset": 28, "nodeName": "_span_start_predictor", "type": "Any"}, {"lineNumber": 301, "col_offset": 55, "nodeName": "start_rep", "type": "Any"}, {"lineNumber": 303, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 303, "col_offset": 52, "nodeName": "final_merged_passage", "type": "Any"}, {"lineNumber": 303, "col_offset": 74, "nodeName": "start_rep", "type": "Any"}, {"lineNumber": 305, "col_offset": 26, "nodeName": "_span_end_predictor", "type": "Any"}, {"lineNumber": 305, "col_offset": 51, "nodeName": "end_rep", "type": "Any"}, {"lineNumber": 307, "col_offset": 28, "nodeName": "_span_yesno_predictor", "type": "Any"}, {"lineNumber": 307, "col_offset": 55, "nodeName": "end_rep", "type": "Any"}, {"lineNumber": 308, "col_offset": 31, "nodeName": "_span_followup_predictor", "type": "Any"}, {"lineNumber": 308, "col_offset": 61, "nodeName": "end_rep", "type": "Any"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "masked_log_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 322, "col_offset": 52, "nodeName": "span_start_logits", "type": "Any"}, {"lineNumber": 322, "col_offset": 71, "nodeName": "repeated_passage_mask", "type": "Any"}, {"lineNumber": 322, "col_offset": 95, "nodeName": "view", "type": "Any"}, {"lineNumber": 324, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 324, "col_offset": 57, "nodeName": "view", "type": "Any"}, {"lineNumber": 324, "col_offset": 83, "nodeName": "qa_mask", "type": "Any"}, {"lineNumber": 325, "col_offset": 29, "nodeName": "masked_log_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 325, "col_offset": 53, "nodeName": "span_end_logits", "type": "Any"}, {"lineNumber": 326, "col_offset": 53, "nodeName": "repeated_passage_mask", "type": "Any"}, {"lineNumber": 326, "col_offset": 77, "nodeName": "view", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 327, "col_offset": 53, "nodeName": "view", "type": "Any"}, {"lineNumber": 327, "col_offset": 77, "nodeName": "qa_mask", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 328, "col_offset": 32, "nodeName": "best_span", "type": "Any"}, {"lineNumber": 329, "col_offset": 32, "nodeName": "view", "type": "Any"}, {"lineNumber": 329, "col_offset": 77, "nodeName": "total_qa_count", "type": "Any"}, {"lineNumber": 335, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 337, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 338, "col_offset": 32, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 342, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 344, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 345, "col_offset": 28, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 349, "col_offset": 29, "nodeName": "log_softmax", "type": "Any"}, {"lineNumber": 349, "col_offset": 43, "nodeName": "_yesno", "type": "Any"}, {"lineNumber": 349, "col_offset": 60, "nodeName": "view", "type": "Any"}, {"lineNumber": 350, "col_offset": 29, "nodeName": "log_softmax", "type": "Any"}, {"lineNumber": 350, "col_offset": 43, "nodeName": "_followup", "type": "Any"}, {"lineNumber": 350, "col_offset": 63, "nodeName": "view", "type": "Any"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 354, "col_offset": 46, "nodeName": "view", "type": "Any"}, {"lineNumber": 354, "col_offset": 72, "nodeName": "qa_mask", "type": "Any"}, {"lineNumber": 355, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 355, "col_offset": 52, "nodeName": "view", "type": "Any"}, {"lineNumber": 355, "col_offset": 81, "nodeName": "qa_mask", "type": "Any"}, {"lineNumber": 363, "col_offset": 24, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 365, "col_offset": 26, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 366, "col_offset": 22, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 373, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 374, "col_offset": 33, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 379, "col_offset": 29, "nodeName": "predicted_span", "type": "Tuple[Any, ...]"}, {"lineNumber": 380, "col_offset": 32, "nodeName": "predicted_span", "type": "Tuple[Any, ...]"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 381, "col_offset": 45, "nodeName": "yesno_pred", "type": "Any"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 382, "col_offset": 48, "nodeName": "followup_pred", "type": "Any"}, {"lineNumber": 383, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 383, "col_offset": 48, "nodeName": "iid", "type": "Any"}, {"lineNumber": 385, "col_offset": 35, "nodeName": "passage_str", "type": "Any"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 386, "col_offset": 49, "nodeName": "best_span_string", "type": "Any"}, {"lineNumber": 403, "col_offset": 16, "nodeName": "_official_f1", "type": "Any"}, {"lineNumber": 129, "col_offset": 68, "nodeName": "torch", "type": "Any"}, {"lineNumber": 412, "col_offset": 23, "nodeName": "get_token_from_index", "type": "Any"}, {"lineNumber": 412, "col_offset": 55, "nodeName": "x", "type": "Any"}, {"lineNumber": 412, "col_offset": 88, "nodeName": "x", "type": "Any"}, {"lineNumber": 413, "col_offset": 37, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 414, "col_offset": 26, "nodeName": "get_token_from_index", "type": "Any"}, {"lineNumber": 414, "col_offset": 58, "nodeName": "x", "type": "Any"}, {"lineNumber": 414, "col_offset": 94, "nodeName": "x", "type": "Any"}, {"lineNumber": 415, "col_offset": 46, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 421, "col_offset": 29, "nodeName": "_span_start_accuracy", "type": "Any"}, {"lineNumber": 422, "col_offset": 27, "nodeName": "_span_end_accuracy", "type": "Any"}, {"lineNumber": 423, "col_offset": 28, "nodeName": "_span_accuracy", "type": "Any"}, {"lineNumber": 424, "col_offset": 25, "nodeName": "_span_yesno_accuracy", "type": "Any"}, {"lineNumber": 425, "col_offset": 28, "nodeName": "_span_followup_accuracy", "type": "Any"}, {"lineNumber": 426, "col_offset": 22, "nodeName": "_official_f1", "type": "Any"}, {"lineNumber": 436, "col_offset": 11, "nodeName": "dim", "type": "Any"}, {"lineNumber": 436, "col_offset": 43, "nodeName": "dim", "type": "Any"}, {"lineNumber": 442, "col_offset": 76, "nodeName": "torch", "type": "Any"}, {"lineNumber": 444, "col_offset": 28, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 445, "col_offset": 26, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 446, "col_offset": 28, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 447, "col_offset": 31, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 450, "col_offset": 23, "nodeName": "span_start_logits", "type": "Any"}, {"lineNumber": 451, "col_offset": 19, "nodeName": "val1", "type": "Any"}, {"lineNumber": 452, "col_offset": 45, "nodeName": "j", "type": "int"}, {"lineNumber": 453, "col_offset": 20, "nodeName": "val1", "type": "Any"}, {"lineNumber": 454, "col_offset": 23, "nodeName": "span_end_logits", "type": "Any"}, {"lineNumber": 459, "col_offset": 45, "nodeName": "j", "type": "int"}, {"lineNumber": 463, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 463, "col_offset": 35, "nodeName": "span_yesno_logits", "type": "Any"}, {"lineNumber": 464, "col_offset": 28, "nodeName": "np", "type": "module"}, {"lineNumber": 464, "col_offset": 38, "nodeName": "span_followup_logits", "type": "Any"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 76, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 83, "col_offset": 56, "nodeName": "num_context_answers", "type": "int"}, {"lineNumber": 88, "col_offset": 53, "nodeName": "torch", "type": "Any"}, {"lineNumber": 94, "col_offset": 53, "nodeName": "torch", "type": "Any"}, {"lineNumber": 95, "col_offset": 51, "nodeName": "torch", "type": "Any"}, {"lineNumber": 96, "col_offset": 53, "nodeName": "torch", "type": "Any"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 129, "col_offset": 31, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 196, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 199, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 204, "col_offset": 24, "nodeName": "util", "type": "module"}, {"lineNumber": 206, "col_offset": 23, "nodeName": "util", "type": "module"}, {"lineNumber": 208, "col_offset": 32, "nodeName": "passage_mask", "type": "Any"}, {"lineNumber": 213, "col_offset": 67, "nodeName": "util", "type": "module"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 215, "col_offset": 31, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 221, "col_offset": 40, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 221, "col_offset": 80, "nodeName": "max_qa_count", "type": "Any"}, {"lineNumber": 222, "col_offset": 53, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 228, "col_offset": 35, "nodeName": "p2_answer_marker", "type": "Any"}, {"lineNumber": 229, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 230, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 230, "col_offset": 55, "nodeName": "repeated_embedded_passage", "type": "Any"}, {"lineNumber": 230, "col_offset": 82, "nodeName": "p2_answer_marker_emb", "type": "Any"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 232, "col_offset": 39, "nodeName": "view", "type": "Any"}, {"lineNumber": 232, "col_offset": 61, "nodeName": "total_qa_count", "type": "Any"}, {"lineNumber": 232, "col_offset": 77, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 233, "col_offset": 43, "nodeName": "_prev_ans_marker", "type": "Any"}, {"lineNumber": 233, "col_offset": 65, "nodeName": "p3_answer_marker", "type": "Any"}, {"lineNumber": 234, "col_offset": 48, "nodeName": "cat", "type": "Any"}, {"lineNumber": 237, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 241, "col_offset": 39, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 261, "col_offset": 38, "nodeName": "max", "type": "Any"}, {"lineNumber": 265, "col_offset": 40, "nodeName": "question_passage_vector", "type": "Any"}, {"lineNumber": 301, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 307, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 308, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "util", "type": "module"}, {"lineNumber": 322, "col_offset": 95, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 324, "col_offset": 57, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 325, "col_offset": 29, "nodeName": "util", "type": "module"}, {"lineNumber": 326, "col_offset": 77, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 327, "col_offset": 53, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 330, "col_offset": 37, "nodeName": "long", "type": "Any"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 335, "col_offset": 16, "nodeName": "gold_span_end_loc", "type": "List[Any]"}, {"lineNumber": 335, "col_offset": 41, "nodeName": "max", "type": "Callable"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "gold_span_end_loc", "type": "List[Any]"}, {"lineNumber": 336, "col_offset": 41, "nodeName": "max", "type": "Callable"}, {"lineNumber": 337, "col_offset": 16, "nodeName": "gold_span_end_loc", "type": "List[Any]"}, {"lineNumber": 337, "col_offset": 41, "nodeName": "max", "type": "Callable"}, {"lineNumber": 342, "col_offset": 16, "nodeName": "pred_span_end_loc", "type": "List[Any]"}, {"lineNumber": 342, "col_offset": 41, "nodeName": "max", "type": "Callable"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "pred_span_end_loc", "type": "List[Any]"}, {"lineNumber": 343, "col_offset": 41, "nodeName": "max", "type": "Callable"}, {"lineNumber": 344, "col_offset": 16, "nodeName": "pred_span_end_loc", "type": "List[Any]"}, {"lineNumber": 344, "col_offset": 41, "nodeName": "max", "type": "Callable"}, {"lineNumber": 347, "col_offset": 21, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 347, "col_offset": 64, "nodeName": "gold_span_end_loc", "type": "Any"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 348, "col_offset": 70, "nodeName": "gold_span_end_loc", "type": "Any"}, {"lineNumber": 349, "col_offset": 29, "nodeName": "F", "type": "Any"}, {"lineNumber": 349, "col_offset": 60, "nodeName": "yesno_list", "type": "Any"}, {"lineNumber": 350, "col_offset": 29, "nodeName": "F", "type": "Any"}, {"lineNumber": 350, "col_offset": 63, "nodeName": "followup_list", "type": "Any"}, {"lineNumber": 352, "col_offset": 21, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 352, "col_offset": 64, "nodeName": "predicted_end", "type": "Any"}, {"lineNumber": 353, "col_offset": 24, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 353, "col_offset": 70, "nodeName": "predicted_end", "type": "Any"}, {"lineNumber": 354, "col_offset": 46, "nodeName": "yesno_list", "type": "Any"}, {"lineNumber": 355, "col_offset": 52, "nodeName": "followup_list", "type": "Any"}, {"lineNumber": 365, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 366, "col_offset": 31, "nodeName": "i", "type": "int"}, {"lineNumber": 374, "col_offset": 39, "nodeName": "best_span_cpu", "type": "Any"}, {"lineNumber": 376, "col_offset": 31, "nodeName": "offsets", "type": "Any"}, {"lineNumber": 377, "col_offset": 29, "nodeName": "offsets", "type": "Any"}, {"lineNumber": 381, "col_offset": 16, "nodeName": "per_dialog_yesno_list", "type": "List[Any]"}, {"lineNumber": 382, "col_offset": 16, "nodeName": "per_dialog_followup_list", "type": "List[Any]"}, {"lineNumber": 383, "col_offset": 16, "nodeName": "per_dialog_query_id_list", "type": "List[Any]"}, {"lineNumber": 385, "col_offset": 47, "nodeName": "start_offset", "type": "Any"}, {"lineNumber": 385, "col_offset": 60, "nodeName": "end_offset", "type": "Any"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "per_dialog_best_span_list", "type": "List[Any]"}, {"lineNumber": 389, "col_offset": 24, "nodeName": "t_f1", "type": "List[Any]"}, {"lineNumber": 391, "col_offset": 28, "nodeName": "answer_index", "type": "int"}, {"lineNumber": 398, "col_offset": 24, "nodeName": "f1_score", "type": "Any"}, {"lineNumber": 403, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 403, "col_offset": 40, "nodeName": "f1_score", "type": "Any"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 405, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 407, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 411, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 411, "col_offset": 44, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 412, "col_offset": 23, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 413, "col_offset": 37, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 414, "col_offset": 26, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 415, "col_offset": 46, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 421, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 422, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 423, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 424, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 425, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 426, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 436, "col_offset": 11, "nodeName": "span_start_logits", "type": "Any"}, {"lineNumber": 436, "col_offset": 43, "nodeName": "span_end_logits", "type": "Any"}, {"lineNumber": 444, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 445, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 446, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 447, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 451, "col_offset": 26, "nodeName": "span_start_logits", "type": "Any"}, {"lineNumber": 452, "col_offset": 20, "nodeName": "span_start_argmax", "type": "List[int]"}, {"lineNumber": 453, "col_offset": 27, "nodeName": "span_start_logits", "type": "Any"}, {"lineNumber": 455, "col_offset": 19, "nodeName": "val1", "type": "Any"}, {"lineNumber": 455, "col_offset": 26, "nodeName": "val2", "type": "Any"}, {"lineNumber": 455, "col_offset": 33, "nodeName": "max_span_log_prob", "type": "List[Any]"}, {"lineNumber": 456, "col_offset": 52, "nodeName": "max_span_length", "type": "int"}, {"lineNumber": 458, "col_offset": 20, "nodeName": "best_word_span", "type": "Any"}, {"lineNumber": 458, "col_offset": 45, "nodeName": "span_start_argmax", "type": "List[int]"}, {"lineNumber": 459, "col_offset": 20, "nodeName": "best_word_span", "type": "Any"}, {"lineNumber": 460, "col_offset": 20, "nodeName": "max_span_log_prob", "type": "List[Any]"}, {"lineNumber": 460, "col_offset": 45, "nodeName": "val1", "type": "Any"}, {"lineNumber": 460, "col_offset": 52, "nodeName": "val2", "type": "Any"}, {"lineNumber": 462, "col_offset": 31, "nodeName": "b_i", "type": "int"}, {"lineNumber": 465, "col_offset": 27, "nodeName": "b_i", "type": "int"}, {"lineNumber": 466, "col_offset": 27, "nodeName": "b_i", "type": "int"}, {"lineNumber": 214, "col_offset": 31, "nodeName": "question_num_ind", "type": "Any"}, {"lineNumber": 215, "col_offset": 31, "nodeName": "question_num_ind", "type": "Any"}, {"lineNumber": 222, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 232, "col_offset": 39, "nodeName": "p3_answer_marker", "type": "Any"}, {"lineNumber": 233, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 234, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 234, "col_offset": 59, "nodeName": "repeated_embedded_passage", "type": "Any"}, {"lineNumber": 234, "col_offset": 86, "nodeName": "p3_answer_marker_emb", "type": "Any"}, {"lineNumber": 241, "col_offset": 39, "nodeName": "encoded_passage", "type": "Any"}, {"lineNumber": 261, "col_offset": 38, "nodeName": "masked_similarity", "type": "Any"}, {"lineNumber": 329, "col_offset": 32, "nodeName": "stack", "type": "Any"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 363, "col_offset": 24, "nodeName": "detach", "type": "Any"}, {"lineNumber": 373, "col_offset": 24, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 373, "col_offset": 52, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 388, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 388, "col_offset": 27, "nodeName": "answer_texts", "type": "Any"}, {"lineNumber": 391, "col_offset": 44, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 392, "col_offset": 28, "nodeName": "idxes", "type": "List[int]"}, {"lineNumber": 394, "col_offset": 28, "nodeName": "refs", "type": "List[Any]"}, {"lineNumber": 400, "col_offset": 35, "nodeName": "metric_max_over_ground_truths", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 400, "col_offset": 76, "nodeName": "f1_score", "type": "Callable[[Any, Any], Union[float, int]]"}, {"lineNumber": 401, "col_offset": 76, "nodeName": "best_span_string", "type": "Any"}, {"lineNumber": 402, "col_offset": 76, "nodeName": "answer_texts", "type": "Any"}, {"lineNumber": 411, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 412, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 414, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 444, "col_offset": 28, "nodeName": "span_start_logits", "type": "Any"}, {"lineNumber": 445, "col_offset": 26, "nodeName": "span_end_logits", "type": "Any"}, {"lineNumber": 446, "col_offset": 28, "nodeName": "span_yesno_logits", "type": "Any"}, {"lineNumber": 447, "col_offset": 31, "nodeName": "span_followup_logits", "type": "Any"}, {"lineNumber": 450, "col_offset": 41, "nodeName": "b_i", "type": "int"}, {"lineNumber": 452, "col_offset": 38, "nodeName": "b_i", "type": "int"}, {"lineNumber": 454, "col_offset": 39, "nodeName": "b_i", "type": "int"}, {"lineNumber": 454, "col_offset": 44, "nodeName": "j", "type": "int"}, {"lineNumber": 455, "col_offset": 51, "nodeName": "b_i", "type": "int"}, {"lineNumber": 456, "col_offset": 23, "nodeName": "j", "type": "int"}, {"lineNumber": 458, "col_offset": 63, "nodeName": "b_i", "type": "int"}, {"lineNumber": 460, "col_offset": 38, "nodeName": "b_i", "type": "int"}, {"lineNumber": 463, "col_offset": 53, "nodeName": "b_i", "type": "int"}, {"lineNumber": 463, "col_offset": 58, "nodeName": "j", "type": "Any"}, {"lineNumber": 464, "col_offset": 59, "nodeName": "b_i", "type": "int"}, {"lineNumber": 464, "col_offset": 64, "nodeName": "j", "type": "Any"}, {"lineNumber": 129, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "Any", "type": "Any"}, {"lineNumber": 221, "col_offset": 40, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 329, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 329, "col_offset": 45, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 329, "col_offset": 57, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 330, "col_offset": 37, "nodeName": "expand", "type": "Any"}, {"lineNumber": 347, "col_offset": 21, "nodeName": "view", "type": "Any"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "view", "type": "Any"}, {"lineNumber": 352, "col_offset": 21, "nodeName": "view", "type": "Any"}, {"lineNumber": 353, "col_offset": 24, "nodeName": "view", "type": "Any"}, {"lineNumber": 363, "col_offset": 24, "nodeName": "best_span", "type": "Any"}, {"lineNumber": 373, "col_offset": 33, "nodeName": "i", "type": "int"}, {"lineNumber": 373, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 374, "col_offset": 72, "nodeName": "per_dialog_query_index", "type": "int"}, {"lineNumber": 376, "col_offset": 39, "nodeName": "predicted_span", "type": "Tuple[Any, ...]"}, {"lineNumber": 377, "col_offset": 37, "nodeName": "predicted_span", "type": "Tuple[Any, ...]"}, {"lineNumber": 391, "col_offset": 50, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 391, "col_offset": 54, "nodeName": "answer_texts", "type": "Any"}, {"lineNumber": 392, "col_offset": 36, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 393, "col_offset": 28, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 393, "col_offset": 38, "nodeName": "answer_index", "type": "int"}, {"lineNumber": 395, "col_offset": 28, "nodeName": "append", "type": "Callable"}, {"lineNumber": 398, "col_offset": 53, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 398, "col_offset": 57, "nodeName": "t_f1", "type": "List[Any]"}, {"lineNumber": 400, "col_offset": 35, "nodeName": "squad_eval", "type": "module"}, {"lineNumber": 400, "col_offset": 76, "nodeName": "squad_eval", "type": "module"}, {"lineNumber": 450, "col_offset": 46, "nodeName": "span_start_argmax", "type": "List[int]"}, {"lineNumber": 451, "col_offset": 44, "nodeName": "b_i", "type": "int"}, {"lineNumber": 451, "col_offset": 49, "nodeName": "j", "type": "int"}, {"lineNumber": 453, "col_offset": 45, "nodeName": "b_i", "type": "int"}, {"lineNumber": 453, "col_offset": 50, "nodeName": "j", "type": "int"}, {"lineNumber": 456, "col_offset": 27, "nodeName": "span_start_argmax", "type": "List[int]"}, {"lineNumber": 458, "col_offset": 35, "nodeName": "b_i", "type": "int"}, {"lineNumber": 459, "col_offset": 35, "nodeName": "b_i", "type": "int"}, {"lineNumber": 221, "col_offset": 40, "nodeName": "embedded_passage", "type": "Any"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 335, "col_offset": 45, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 335, "col_offset": 63, "nodeName": "i", "type": "int"}, {"lineNumber": 335, "col_offset": 67, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 342, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 342, "col_offset": 71, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 347, "col_offset": 21, "nodeName": "span_yesno_logits", "type": "Any"}, {"lineNumber": 348, "col_offset": 24, "nodeName": "span_followup_logits", "type": "Any"}, {"lineNumber": 352, "col_offset": 21, "nodeName": "span_yesno_logits", "type": "Any"}, {"lineNumber": 353, "col_offset": 24, "nodeName": "span_followup_logits", "type": "Any"}, {"lineNumber": 374, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 374, "col_offset": 57, "nodeName": "max_qa_count", "type": "Any"}, {"lineNumber": 392, "col_offset": 41, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 393, "col_offset": 28, "nodeName": "idxes", "type": "List[int]"}, {"lineNumber": 394, "col_offset": 36, "nodeName": "answer_texts", "type": "Any"}, {"lineNumber": 394, "col_offset": 56, "nodeName": "z", "type": "int"}, {"lineNumber": 394, "col_offset": 61, "nodeName": "idxes", "type": "List[int]"}, {"lineNumber": 395, "col_offset": 28, "nodeName": "t_f1", "type": "List[Any]"}, {"lineNumber": 395, "col_offset": 40, "nodeName": "metric_max_over_ground_truths", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 395, "col_offset": 81, "nodeName": "f1_score", "type": "Callable[[Any, Any], Union[float, int]]"}, {"lineNumber": 396, "col_offset": 81, "nodeName": "best_span_string", "type": "Any"}, {"lineNumber": 397, "col_offset": 81, "nodeName": "refs", "type": "List[Any]"}, {"lineNumber": 398, "col_offset": 41, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 398, "col_offset": 45, "nodeName": "t_f1", "type": "List[Any]"}, {"lineNumber": 450, "col_offset": 64, "nodeName": "b_i", "type": "int"}, {"lineNumber": 456, "col_offset": 45, "nodeName": "b_i", "type": "int"}, {"lineNumber": 330, "col_offset": 37, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 335, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 336, "col_offset": 45, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 336, "col_offset": 63, "nodeName": "i", "type": "int"}, {"lineNumber": 336, "col_offset": 67, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 337, "col_offset": 45, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 337, "col_offset": 63, "nodeName": "i", "type": "int"}, {"lineNumber": 337, "col_offset": 67, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 342, "col_offset": 45, "nodeName": "best_span", "type": "Any"}, {"lineNumber": 343, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 343, "col_offset": 71, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 344, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 344, "col_offset": 71, "nodeName": "passage_length", "type": "Any"}, {"lineNumber": 392, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 392, "col_offset": 51, "nodeName": "answer_texts", "type": "Any"}, {"lineNumber": 394, "col_offset": 49, "nodeName": "z", "type": "int"}, {"lineNumber": 395, "col_offset": 40, "nodeName": "squad_eval", "type": "module"}, {"lineNumber": 395, "col_offset": 81, "nodeName": "squad_eval", "type": "module"}, {"lineNumber": 330, "col_offset": 37, "nodeName": "qa_mask", "type": "Any"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "view", "type": "Any"}, {"lineNumber": 333, "col_offset": 37, "nodeName": "total_qa_count", "type": "Any"}, {"lineNumber": 336, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 337, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 342, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 343, "col_offset": 45, "nodeName": "best_span", "type": "Any"}, {"lineNumber": 344, "col_offset": 45, "nodeName": "best_span", "type": "Any"}, {"lineNumber": 333, "col_offset": 23, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 343, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 344, "col_offset": 55, "nodeName": "i", "type": "int"}]