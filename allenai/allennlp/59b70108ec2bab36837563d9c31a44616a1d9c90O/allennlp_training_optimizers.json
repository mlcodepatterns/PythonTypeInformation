[{"lineNumber": 31, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 31, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 39, "col_offset": 4, "nodeName": "default_implementation", "type": "str"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "optim", "type": "Any"}, {"lineNumber": 31, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "groups", "type": "Any"}, {"lineNumber": 57, "col_offset": 11, "nodeName": "groups", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "num_parameters", "type": "int"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "parameter_group", "type": "Any"}, {"lineNumber": 129, "col_offset": 31, "nodeName": "parameter_groups", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "infer_type_and_cast", "type": "bool"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "params_as_dict", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "subclass", "type": "Type[Optimizer]"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "AdamW", "type": "Any"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "AdamW", "type": "Any"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "SparseAdam", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "Adagrad", "type": "Any"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "Adadelta", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "RMSprop", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "Adamax", "type": "Any"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "ASGD", "type": "Any"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "defaults", "type": "Dict[Any, Any]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "loss", "type": "None"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 214, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 283, "col_offset": 15, "nodeName": "loss", "type": "Optional[Any]"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "List", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "from_params", "type": "Callable[[List[Any], allennlp.common.params.Params], Any]"}, {"lineNumber": 43, "col_offset": 37, "nodeName": "model_parameters", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "List", "type": "Any"}, {"lineNumber": 47, "col_offset": 57, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "pop", "type": "Any"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "parameter_groups", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "k", "type": "int"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "regex_use_counts", "type": "Dict[Any, int]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "parameter_group_names", "type": "List[Set[Any]]"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "model_parameters", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "k", "type": "int"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "parameter_groups", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 58, "nodeName": "num_parameters", "type": "Union[Any, int]"}, {"lineNumber": 140, "col_offset": 30, "nodeName": "pop_bool", "type": "Callable[..., bool]"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "as_dict", "type": "Callable[..., Any]"}, {"lineNumber": 142, "col_offset": 36, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 142, "col_offset": 54, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 145, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 145, "col_offset": 19, "nodeName": "subclass", "type": "Type[Optimizer]"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "optim", "type": "Any"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "optim", "type": "Any"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "optim", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "optim", "type": "Any"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "optim", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "optim", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "optim", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "optim", "type": "Any"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "optim", "type": "Any"}, {"lineNumber": 198, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 199, "col_offset": 33, "nodeName": "defaults", "type": "Dict[Any, Any]"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "closure", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 214, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 43, "col_offset": 55, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "pop_choice", "type": "Callable[..., Any]"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "param", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "group_index", "type": "None"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "regex", "type": "Any"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "count", "type": "int"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "items", "type": "Callable"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "param", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "parameter_group", "type": "Any"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "num_parameters", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "num_parameters", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 140, "col_offset": 30, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 141, "col_offset": 60, "nodeName": "infer_type_and_cast", "type": "bool"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 142, "col_offset": 36, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "from_params", "type": "Callable[[List[Any], allennlp.common.params.Params], Any]"}, {"lineNumber": 146, "col_offset": 40, "nodeName": "parameter_groups", "type": "Any"}, {"lineNumber": 154, "col_offset": 13, "nodeName": "torch", "type": "Any"}, {"lineNumber": 155, "col_offset": 14, "nodeName": "torch", "type": "Any"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 159, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 190, "col_offset": 22, "nodeName": "lr", "type": "Any"}, {"lineNumber": 191, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 192, "col_offset": 22, "nodeName": "eps", "type": "Any"}, {"lineNumber": 193, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 195, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 197, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 198, "col_offset": 27, "nodeName": "lr", "type": "Any"}, {"lineNumber": 198, "col_offset": 37, "nodeName": "betas", "type": "Any"}, {"lineNumber": 198, "col_offset": 48, "nodeName": "eps", "type": "Any"}, {"lineNumber": 212, "col_offset": 19, "nodeName": "closure", "type": "Any"}, {"lineNumber": 215, "col_offset": 21, "nodeName": "group", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 235, "col_offset": 19, "nodeName": "is_sparse", "type": "Any"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 53, "col_offset": 50, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 79, "col_offset": 56, "nodeName": "_", "type": "int"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "groups", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "update", "type": "Any"}, {"lineNumber": 85, "col_offset": 40, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 85, "col_offset": 58, "nodeName": "_", "type": "int"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "k", "type": "int"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "group_regexes", "type": "Any"}, {"lineNumber": 89, "col_offset": 40, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 89, "col_offset": 50, "nodeName": "groups", "type": "Any"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "regex", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "group_index", "type": "Optional[int]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "key", "type": "Any"}, {"lineNumber": 113, "col_offset": 25, "nodeName": "val", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 48, "nodeName": "k", "type": "int"}, {"lineNumber": 115, "col_offset": 83, "nodeName": "group_options", "type": "Dict[Any, Any]"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "regex_use_counts", "type": "Dict[Any, int]"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "count", "type": "int"}, {"lineNumber": 125, "col_offset": 57, "nodeName": "model_parameters", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 34, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "numel", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "subclass", "type": "Type[Optimizer]"}, {"lineNumber": 146, "col_offset": 65, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 191, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 191, "col_offset": 64, "nodeName": "lr", "type": "Any"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 193, "col_offset": 64, "nodeName": "eps", "type": "Any"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "betas", "type": "Any"}, {"lineNumber": 195, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 196, "col_offset": 22, "nodeName": "betas", "type": "Any"}, {"lineNumber": 197, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "grad", "type": "Any"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "grad", "type": "Any"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "state", "type": "Any"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "exp_avg", "type": "Any"}, {"lineNumber": 232, "col_offset": 25, "nodeName": "exp_avg_sq", "type": "Any"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 233, "col_offset": 23, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "group", "type": "Any"}, {"lineNumber": 235, "col_offset": 19, "nodeName": "grad", "type": "Any"}, {"lineNumber": 236, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 237, "col_offset": 20, "nodeName": "grad_indices", "type": "Any"}, {"lineNumber": 238, "col_offset": 20, "nodeName": "grad_values", "type": "Any"}, {"lineNumber": 239, "col_offset": 20, "nodeName": "size", "type": "Any"}, {"lineNumber": 250, "col_offset": 20, "nodeName": "old_exp_avg_values", "type": "Any"}, {"lineNumber": 251, "col_offset": 20, "nodeName": "exp_avg_update_values", "type": "Any"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "old_exp_avg_sq_values", "type": "Any"}, {"lineNumber": 260, "col_offset": 20, "nodeName": "numer", "type": "Any"}, {"lineNumber": 262, "col_offset": 20, "nodeName": "denom", "type": "Any"}, {"lineNumber": 265, "col_offset": 20, "nodeName": "bias_correction1", "type": "Any"}, {"lineNumber": 266, "col_offset": 20, "nodeName": "bias_correction2", "type": "Any"}, {"lineNumber": 267, "col_offset": 20, "nodeName": "step_size", "type": "Any"}, {"lineNumber": 275, "col_offset": 20, "nodeName": "denom", "type": "Any"}, {"lineNumber": 277, "col_offset": 20, "nodeName": "bias_correction1", "type": "Any"}, {"lineNumber": 278, "col_offset": 20, "nodeName": "bias_correction2", "type": "Any"}, {"lineNumber": 279, "col_offset": 20, "nodeName": "step_size", "type": "Any"}, {"lineNumber": 53, "col_offset": 50, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 79, "col_offset": 61, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 82, "col_offset": 43, "nodeName": "as_dict", "type": "Any"}, {"lineNumber": 85, "col_offset": 63, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 90, "col_offset": 33, "nodeName": "group_regexes", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "append", "type": "Any"}, {"lineNumber": 102, "col_offset": 67, "nodeName": "param", "type": "Any"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "add", "type": "Any"}, {"lineNumber": 103, "col_offset": 59, "nodeName": "name", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "append", "type": "Any"}, {"lineNumber": 106, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "add", "type": "Callable"}, {"lineNumber": 107, "col_offset": 50, "nodeName": "name", "type": "Any"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "groups", "type": "Any"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 115, "col_offset": 51, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "regex", "type": "Any"}, {"lineNumber": 125, "col_offset": 42, "nodeName": "name", "type": "Any"}, {"lineNumber": 125, "col_offset": 48, "nodeName": "param", "type": "Any"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "parameter_group", "type": "Any"}, {"lineNumber": 195, "col_offset": 76, "nodeName": "betas", "type": "Any"}, {"lineNumber": 197, "col_offset": 76, "nodeName": "betas", "type": "Any"}, {"lineNumber": 216, "col_offset": 19, "nodeName": "p", "type": "Any"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "p", "type": "Any"}, {"lineNumber": 220, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 220, "col_offset": 35, "nodeName": "p", "type": "Any"}, {"lineNumber": 223, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "state", "type": "Any"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 226, "col_offset": 39, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 226, "col_offset": 56, "nodeName": "data", "type": "Any"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 228, "col_offset": 42, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 228, "col_offset": 59, "nodeName": "data", "type": "Any"}, {"lineNumber": 232, "col_offset": 38, "nodeName": "state", "type": "Any"}, {"lineNumber": 232, "col_offset": 56, "nodeName": "state", "type": "Any"}, {"lineNumber": 236, "col_offset": 27, "nodeName": "coalesce", "type": "Any"}, {"lineNumber": 237, "col_offset": 35, "nodeName": "_indices", "type": "Any"}, {"lineNumber": 238, "col_offset": 34, "nodeName": "_values", "type": "Any"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "size", "type": "Any"}, {"lineNumber": 242, "col_offset": 24, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 242, "col_offset": 38, "nodeName": "new", "type": "Any"}, {"lineNumber": 250, "col_offset": 41, "nodeName": "_values", "type": "Any"}, {"lineNumber": 251, "col_offset": 44, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 252, "col_offset": 20, "nodeName": "add_", "type": "Any"}, {"lineNumber": 253, "col_offset": 44, "nodeName": "_values", "type": "Any"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 257, "col_offset": 20, "nodeName": "add_", "type": "Any"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "add_", "type": "Any"}, {"lineNumber": 260, "col_offset": 55, "nodeName": "old_exp_avg_values", "type": "Any"}, {"lineNumber": 261, "col_offset": 20, "nodeName": "add_", "type": "Any"}, {"lineNumber": 261, "col_offset": 50, "nodeName": "old_exp_avg_sq_values", "type": "Any"}, {"lineNumber": 262, "col_offset": 28, "nodeName": "add_", "type": "Any"}, {"lineNumber": 267, "col_offset": 76, "nodeName": "bias_correction1", "type": "Any"}, {"lineNumber": 269, "col_offset": 20, "nodeName": "add_", "type": "Any"}, {"lineNumber": 273, "col_offset": 20, "nodeName": "add_", "type": "Any"}, {"lineNumber": 273, "col_offset": 56, "nodeName": "grad", "type": "Any"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "addcmul_", "type": "Any"}, {"lineNumber": 274, "col_offset": 63, "nodeName": "grad", "type": "Any"}, {"lineNumber": 274, "col_offset": 69, "nodeName": "grad", "type": "Any"}, {"lineNumber": 275, "col_offset": 28, "nodeName": "add_", "type": "Any"}, {"lineNumber": 279, "col_offset": 76, "nodeName": "bias_correction1", "type": "Any"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "addcdiv_", "type": "Any"}, {"lineNumber": 281, "col_offset": 48, "nodeName": "exp_avg", "type": "Any"}, {"lineNumber": 281, "col_offset": 57, "nodeName": "denom", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "parameter_groups", "type": "Any"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "regex", "type": "Any"}, {"lineNumber": 91, "col_offset": 40, "nodeName": "regex_use_counts", "type": "Dict[Any, int]"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "search", "type": "Callable"}, {"lineNumber": 93, "col_offset": 37, "nodeName": "regex", "type": "Any"}, {"lineNumber": 93, "col_offset": 44, "nodeName": "name", "type": "Any"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "group_index", "type": "int"}, {"lineNumber": 98, "col_offset": 42, "nodeName": "k", "type": "int"}, {"lineNumber": 113, "col_offset": 33, "nodeName": "key", "type": "Any"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "val", "type": "Any"}, {"lineNumber": 113, "col_offset": 45, "nodeName": "items", "type": "Any"}, {"lineNumber": 113, "col_offset": 76, "nodeName": "key", "type": "Any"}, {"lineNumber": 115, "col_offset": 56, "nodeName": "parameter_group_names", "type": "List[Set[Any]]"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 131, "col_offset": 38, "nodeName": "numel", "type": "Any"}, {"lineNumber": 131, "col_offset": 60, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 226, "col_offset": 39, "nodeName": "torch", "type": "Any"}, {"lineNumber": 226, "col_offset": 56, "nodeName": "p", "type": "Any"}, {"lineNumber": 228, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 228, "col_offset": 59, "nodeName": "p", "type": "Any"}, {"lineNumber": 236, "col_offset": 27, "nodeName": "grad", "type": "Any"}, {"lineNumber": 237, "col_offset": 35, "nodeName": "grad", "type": "Any"}, {"lineNumber": 238, "col_offset": 34, "nodeName": "grad", "type": "Any"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "grad", "type": "Any"}, {"lineNumber": 242, "col_offset": 38, "nodeName": "grad", "type": "Any"}, {"lineNumber": 245, "col_offset": 31, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 245, "col_offset": 43, "nodeName": "grad_indices", "type": "Any"}, {"lineNumber": 245, "col_offset": 57, "nodeName": "values", "type": "Any"}, {"lineNumber": 245, "col_offset": 65, "nodeName": "size", "type": "Any"}, {"lineNumber": 251, "col_offset": 89, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 252, "col_offset": 20, "nodeName": "exp_avg", "type": "Any"}, {"lineNumber": 252, "col_offset": 33, "nodeName": "make_sparse", "type": "Callable[[Any], Any]"}, {"lineNumber": 252, "col_offset": 45, "nodeName": "exp_avg_update_values", "type": "Any"}, {"lineNumber": 255, "col_offset": 80, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 257, "col_offset": 20, "nodeName": "exp_avg_sq", "type": "Any"}, {"lineNumber": 257, "col_offset": 36, "nodeName": "make_sparse", "type": "Callable[[Any], Any]"}, {"lineNumber": 257, "col_offset": 48, "nodeName": "exp_avg_sq_update_values", "type": "Any"}, {"lineNumber": 260, "col_offset": 28, "nodeName": "exp_avg_update_values", "type": "Any"}, {"lineNumber": 261, "col_offset": 20, "nodeName": "exp_avg_sq_update_values", "type": "Any"}, {"lineNumber": 262, "col_offset": 66, "nodeName": "group", "type": "Any"}, {"lineNumber": 265, "col_offset": 43, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 266, "col_offset": 43, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 269, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 269, "col_offset": 32, "nodeName": "make_sparse", "type": "Callable[[Any], Any]"}, {"lineNumber": 273, "col_offset": 49, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 274, "col_offset": 56, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 275, "col_offset": 51, "nodeName": "group", "type": "Any"}, {"lineNumber": 277, "col_offset": 43, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 278, "col_offset": 43, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 281, "col_offset": 37, "nodeName": "step_size", "type": "Any"}, {"lineNumber": 79, "col_offset": 67, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 71, "nodeName": "groups", "type": "Any"}, {"lineNumber": 82, "col_offset": 33, "nodeName": "k", "type": "int"}, {"lineNumber": 85, "col_offset": 69, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 85, "col_offset": 73, "nodeName": "groups", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "regex_use_counts", "type": "Dict[Any, int]"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "re", "type": "module"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "regex_use_counts", "type": "Dict[Any, int]"}, {"lineNumber": 103, "col_offset": 20, "nodeName": "parameter_group_names", "type": "List[Set[Any]]"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "parameter_group_names", "type": "List[Set[Any]]"}, {"lineNumber": 115, "col_offset": 78, "nodeName": "k", "type": "int"}, {"lineNumber": 131, "col_offset": 38, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 131, "col_offset": 73, "nodeName": "parameter_group", "type": "Any"}, {"lineNumber": 244, "col_offset": 35, "nodeName": "resize_as_", "type": "Any"}, {"lineNumber": 244, "col_offset": 60, "nodeName": "grad", "type": "Any"}, {"lineNumber": 250, "col_offset": 41, "nodeName": "sparse_mask", "type": "Any"}, {"lineNumber": 250, "col_offset": 61, "nodeName": "grad", "type": "Any"}, {"lineNumber": 251, "col_offset": 44, "nodeName": "sub", "type": "Any"}, {"lineNumber": 251, "col_offset": 60, "nodeName": "old_exp_avg_values", "type": "Any"}, {"lineNumber": 253, "col_offset": 44, "nodeName": "sparse_mask", "type": "Any"}, {"lineNumber": 253, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "sub_", "type": "Any"}, {"lineNumber": 255, "col_offset": 48, "nodeName": "old_exp_avg_sq_values", "type": "Any"}, {"lineNumber": 262, "col_offset": 28, "nodeName": "sqrt_", "type": "Any"}, {"lineNumber": 265, "col_offset": 52, "nodeName": "state", "type": "Any"}, {"lineNumber": 266, "col_offset": 52, "nodeName": "state", "type": "Any"}, {"lineNumber": 267, "col_offset": 32, "nodeName": "group", "type": "Any"}, {"lineNumber": 267, "col_offset": 46, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 267, "col_offset": 56, "nodeName": "bias_correction2", "type": "Any"}, {"lineNumber": 269, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 273, "col_offset": 20, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 273, "col_offset": 33, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 274, "col_offset": 36, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 275, "col_offset": 28, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 277, "col_offset": 52, "nodeName": "state", "type": "Any"}, {"lineNumber": 278, "col_offset": 52, "nodeName": "state", "type": "Any"}, {"lineNumber": 279, "col_offset": 32, "nodeName": "group", "type": "Any"}, {"lineNumber": 279, "col_offset": 46, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 279, "col_offset": 56, "nodeName": "bias_correction2", "type": "Any"}, {"lineNumber": 281, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 82, "col_offset": 43, "nodeName": "groups", "type": "Any"}, {"lineNumber": 92, "col_offset": 45, "nodeName": "regex", "type": "Any"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "group_index", "type": "None"}, {"lineNumber": 94, "col_offset": 59, "nodeName": "group_index", "type": "None"}, {"lineNumber": 99, "col_offset": 45, "nodeName": "regex", "type": "Any"}, {"lineNumber": 102, "col_offset": 20, "nodeName": "parameter_groups", "type": "Any"}, {"lineNumber": 103, "col_offset": 42, "nodeName": "group_index", "type": "Optional[int]"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "parameter_groups", "type": "Any"}, {"lineNumber": 113, "col_offset": 45, "nodeName": "parameter_groups", "type": "Any"}, {"lineNumber": 243, "col_offset": 27, "nodeName": "dim", "type": "Any"}, {"lineNumber": 243, "col_offset": 54, "nodeName": "dim", "type": "Any"}, {"lineNumber": 250, "col_offset": 41, "nodeName": "exp_avg", "type": "Any"}, {"lineNumber": 251, "col_offset": 44, "nodeName": "grad_values", "type": "Any"}, {"lineNumber": 253, "col_offset": 44, "nodeName": "exp_avg_sq", "type": "Any"}, {"lineNumber": 262, "col_offset": 28, "nodeName": "exp_avg_sq_update_values", "type": "Any"}, {"lineNumber": 267, "col_offset": 46, "nodeName": "math", "type": "module"}, {"lineNumber": 269, "col_offset": 45, "nodeName": "step_size", "type": "Any"}, {"lineNumber": 269, "col_offset": 57, "nodeName": "div_", "type": "Any"}, {"lineNumber": 269, "col_offset": 68, "nodeName": "denom", "type": "Any"}, {"lineNumber": 273, "col_offset": 20, "nodeName": "exp_avg", "type": "Any"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "exp_avg_sq", "type": "Any"}, {"lineNumber": 275, "col_offset": 28, "nodeName": "exp_avg_sq", "type": "Any"}, {"lineNumber": 279, "col_offset": 46, "nodeName": "math", "type": "module"}, {"lineNumber": 82, "col_offset": 50, "nodeName": "k", "type": "int"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "group_index", "type": "Optional[int]"}, {"lineNumber": 113, "col_offset": 62, "nodeName": "k", "type": "int"}, {"lineNumber": 243, "col_offset": 27, "nodeName": "grad_indices", "type": "Any"}, {"lineNumber": 243, "col_offset": 54, "nodeName": "values", "type": "Any"}, {"lineNumber": 244, "col_offset": 35, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "pow", "type": "Any"}, {"lineNumber": 269, "col_offset": 57, "nodeName": "numer", "type": "Any"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "grad_values", "type": "Any"}]