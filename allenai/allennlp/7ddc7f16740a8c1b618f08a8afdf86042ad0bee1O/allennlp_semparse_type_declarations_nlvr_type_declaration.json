[{"lineNumber": 59, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 9, "col_offset": 23, "nodeName": "HigherOrderType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.HigherOrderType]"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "NUM_TYPE", "type": "Any"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "BOX_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 29, "col_offset": 0, "nodeName": "OBJECT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 30, "col_offset": 0, "nodeName": "COLOR_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "SHAPE_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 32, "col_offset": 0, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "BOX_MEMBERSHIP_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 37, "col_offset": 0, "nodeName": "BOX_COLOR_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 38, "col_offset": 0, "nodeName": "BOX_SHAPE_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "BOX_COUNT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 41, "col_offset": 0, "nodeName": "BOX_ATTRIBUTE_SAME_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 44, "col_offset": 0, "nodeName": "ASSERT_COLOR_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 45, "col_offset": 0, "nodeName": "ASSERT_SHAPE_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 46, "col_offset": 0, "nodeName": "ASSERT_BOX_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 47, "col_offset": 0, "nodeName": "ASSERT_OBJECT_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 49, "col_offset": 0, "nodeName": "BOX_EXISTS_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "OBJECT_EXISTS_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 53, "col_offset": 0, "nodeName": "COMMON_NAME_MAPPING", "type": "Dict[Union[str, Any], Union[str, Any]]"}, {"lineNumber": 54, "col_offset": 0, "nodeName": "COMMON_TYPE_SIGNATURE", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 56, "col_offset": 0, "nodeName": "BASIC_TYPES", "type": "Set[Any]"}, {"lineNumber": 175, "col_offset": 4, "nodeName": "num", "type": "int"}, {"lineNumber": 27, "col_offset": 11, "nodeName": "EntityType", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "NamedBasicType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.NamedBasicType]"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "NamedBasicType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.NamedBasicType]"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "NamedBasicType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.NamedBasicType]"}, {"lineNumber": 31, "col_offset": 13, "nodeName": "NamedBasicType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.NamedBasicType]"}, {"lineNumber": 32, "col_offset": 21, "nodeName": "ComplexType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.ComplexType]"}, {"lineNumber": 32, "col_offset": 33, "nodeName": "OBJECT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 32, "col_offset": 46, "nodeName": "OBJECT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "NegateFilterType", "type": "Type[NegateFilterType]"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "ComplexType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.ComplexType]"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "BOX_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 35, "col_offset": 44, "nodeName": "OBJECT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 37, "col_offset": 24, "nodeName": "ComplexType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.ComplexType]"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "BOX_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "ComplexType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.ComplexType]"}, {"lineNumber": 38, "col_offset": 36, "nodeName": "BOX_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "ComplexType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.ComplexType]"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "BOX_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 41, "col_offset": 33, "nodeName": "ComplexType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.ComplexType]"}, {"lineNumber": 41, "col_offset": 45, "nodeName": "BOX_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 41, "col_offset": 55, "nodeName": "BOX_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "ComplexType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.ComplexType]"}, {"lineNumber": 44, "col_offset": 32, "nodeName": "OBJECT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "ComplexType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.ComplexType]"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "OBJECT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "ComplexType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.ComplexType]"}, {"lineNumber": 46, "col_offset": 36, "nodeName": "BOX_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "ComplexType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.ComplexType]"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "OBJECT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "ComplexType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.ComplexType]"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "BOX_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 49, "col_offset": 40, "nodeName": "TRUTH_TYPE", "type": "Any"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "ComplexType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.ComplexType]"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "OBJECT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "TRUTH_TYPE", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "NUM_TYPE", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "BOX_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "OBJECT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 56, "col_offset": 48, "nodeName": "COLOR_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 56, "col_offset": 60, "nodeName": "SHAPE_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "mapping", "type": "str"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "type_signature", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 65, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 65, "col_offset": 46, "nodeName": "OBJECT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 66, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 66, "col_offset": 44, "nodeName": "BOX_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 67, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 67, "col_offset": 47, "nodeName": "COLOR_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 68, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "COLOR_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "COLOR_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 70, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 70, "col_offset": 50, "nodeName": "SHAPE_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 71, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 71, "col_offset": 48, "nodeName": "SHAPE_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 72, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 72, "col_offset": 48, "nodeName": "SHAPE_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 76, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 76, "col_offset": 48, "nodeName": "BOX_MEMBERSHIP_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 80, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 80, "col_offset": 59, "nodeName": "ASSERT_COLOR_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 81, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 81, "col_offset": 60, "nodeName": "ASSERT_COLOR_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 82, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 60, "nodeName": "ASSERT_COLOR_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 83, "col_offset": 59, "nodeName": "ASSERT_SHAPE_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 84, "col_offset": 60, "nodeName": "ASSERT_SHAPE_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 85, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 85, "col_offset": 60, "nodeName": "ASSERT_SHAPE_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 86, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 86, "col_offset": 52, "nodeName": "ASSERT_BOX_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 87, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 87, "col_offset": 56, "nodeName": "ASSERT_BOX_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 88, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 88, "col_offset": 53, "nodeName": "ASSERT_BOX_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 89, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 89, "col_offset": 60, "nodeName": "ASSERT_BOX_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 90, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 90, "col_offset": 52, "nodeName": "ASSERT_BOX_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 91, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 91, "col_offset": 59, "nodeName": "ASSERT_BOX_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 56, "nodeName": "ASSERT_OBJECT_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 93, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 93, "col_offset": 60, "nodeName": "ASSERT_OBJECT_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 94, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 94, "col_offset": 57, "nodeName": "ASSERT_OBJECT_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 95, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 95, "col_offset": 64, "nodeName": "ASSERT_OBJECT_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 96, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 56, "nodeName": "ASSERT_OBJECT_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 97, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 97, "col_offset": 63, "nodeName": "ASSERT_OBJECT_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 98, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 98, "col_offset": 62, "nodeName": "ASSERT_OBJECT_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 99, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 99, "col_offset": 66, "nodeName": "ASSERT_OBJECT_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 100, "col_offset": 63, "nodeName": "ASSERT_OBJECT_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 101, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 101, "col_offset": 70, "nodeName": "ASSERT_OBJECT_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 102, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 102, "col_offset": 62, "nodeName": "ASSERT_OBJECT_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 103, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 103, "col_offset": 69, "nodeName": "ASSERT_OBJECT_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 104, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 62, "nodeName": "ASSERT_OBJECT_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 105, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 105, "col_offset": 66, "nodeName": "ASSERT_OBJECT_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 106, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 106, "col_offset": 63, "nodeName": "ASSERT_OBJECT_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 107, "col_offset": 70, "nodeName": "ASSERT_OBJECT_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 108, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 62, "nodeName": "ASSERT_OBJECT_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 109, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 109, "col_offset": 69, "nodeName": "ASSERT_OBJECT_COUNT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 111, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 111, "col_offset": 46, "nodeName": "BOX_EXISTS_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 112, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 112, "col_offset": 49, "nodeName": "OBJECT_EXISTS_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 116, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 116, "col_offset": 55, "nodeName": "BOX_COUNT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 117, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 117, "col_offset": 59, "nodeName": "BOX_COUNT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 118, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 118, "col_offset": 59, "nodeName": "BOX_SHAPE_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 119, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 119, "col_offset": 60, "nodeName": "BOX_SHAPE_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 120, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 120, "col_offset": 60, "nodeName": "BOX_SHAPE_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 121, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 121, "col_offset": 59, "nodeName": "BOX_COLOR_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 122, "col_offset": 60, "nodeName": "BOX_COLOR_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 123, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 123, "col_offset": 60, "nodeName": "BOX_COLOR_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 124, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 124, "col_offset": 56, "nodeName": "BOX_COUNT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 125, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 125, "col_offset": 63, "nodeName": "BOX_COUNT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 126, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 126, "col_offset": 55, "nodeName": "BOX_COUNT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 127, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 127, "col_offset": 62, "nodeName": "BOX_COUNT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 128, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 128, "col_offset": 62, "nodeName": "BOX_COUNT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 129, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 129, "col_offset": 66, "nodeName": "BOX_COUNT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 130, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 130, "col_offset": 63, "nodeName": "BOX_COUNT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 131, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 131, "col_offset": 70, "nodeName": "BOX_COUNT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 132, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 132, "col_offset": 62, "nodeName": "BOX_COUNT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 133, "col_offset": 69, "nodeName": "BOX_COUNT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 134, "col_offset": 62, "nodeName": "BOX_COUNT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 135, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 135, "col_offset": 66, "nodeName": "BOX_COUNT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 136, "col_offset": 63, "nodeName": "BOX_COUNT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 137, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 137, "col_offset": 70, "nodeName": "BOX_COUNT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 138, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 138, "col_offset": 62, "nodeName": "BOX_COUNT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 139, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 139, "col_offset": 69, "nodeName": "BOX_COUNT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 140, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 54, "nodeName": "BOX_ATTRIBUTE_SAME_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 141, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 141, "col_offset": 54, "nodeName": "BOX_ATTRIBUTE_SAME_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 142, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 142, "col_offset": 59, "nodeName": "BOX_ATTRIBUTE_SAME_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 143, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 143, "col_offset": 59, "nodeName": "BOX_ATTRIBUTE_SAME_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 147, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 147, "col_offset": 41, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 148, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 148, "col_offset": 40, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 149, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 150, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 150, "col_offset": 46, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 151, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 151, "col_offset": 44, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 152, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 152, "col_offset": 42, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 153, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 153, "col_offset": 42, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 154, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 154, "col_offset": 46, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 155, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 155, "col_offset": 46, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 156, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 156, "col_offset": 48, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 157, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 157, "col_offset": 45, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 158, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 158, "col_offset": 48, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 159, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 159, "col_offset": 46, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 160, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 160, "col_offset": 47, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 161, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 162, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 162, "col_offset": 41, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 163, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 163, "col_offset": 41, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 164, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 164, "col_offset": 39, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 165, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 165, "col_offset": 42, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 166, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 166, "col_offset": 41, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 167, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 167, "col_offset": 42, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 168, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 168, "col_offset": 39, "nodeName": "OBJECT_FILTER_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 170, "col_offset": 0, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 170, "col_offset": 48, "nodeName": "NEGATE_FILTER_TYPE", "type": "NegateFilterType"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "num_string", "type": "str"}, {"lineNumber": 18, "col_offset": 66, "nodeName": "List", "type": "Any"}, {"lineNumber": 33, "col_offset": 38, "nodeName": "ComplexType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.ComplexType]"}, {"lineNumber": 33, "col_offset": 50, "nodeName": "OBJECT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 33, "col_offset": 63, "nodeName": "OBJECT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 34, "col_offset": 38, "nodeName": "ComplexType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.ComplexType]"}, {"lineNumber": 34, "col_offset": 50, "nodeName": "OBJECT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 34, "col_offset": 63, "nodeName": "OBJECT_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 37, "col_offset": 46, "nodeName": "ComplexType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.ComplexType]"}, {"lineNumber": 37, "col_offset": 58, "nodeName": "COLOR_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 37, "col_offset": 70, "nodeName": "BOX_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 38, "col_offset": 46, "nodeName": "ComplexType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.ComplexType]"}, {"lineNumber": 38, "col_offset": 58, "nodeName": "SHAPE_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 38, "col_offset": 70, "nodeName": "BOX_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 39, "col_offset": 46, "nodeName": "ComplexType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.ComplexType]"}, {"lineNumber": 39, "col_offset": 58, "nodeName": "NUM_TYPE", "type": "Any"}, {"lineNumber": 39, "col_offset": 68, "nodeName": "BOX_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 44, "col_offset": 45, "nodeName": "ComplexType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.ComplexType]"}, {"lineNumber": 44, "col_offset": 57, "nodeName": "COLOR_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 44, "col_offset": 69, "nodeName": "TRUTH_TYPE", "type": "Any"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "ComplexType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.ComplexType]"}, {"lineNumber": 45, "col_offset": 57, "nodeName": "SHAPE_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 45, "col_offset": 69, "nodeName": "TRUTH_TYPE", "type": "Any"}, {"lineNumber": 46, "col_offset": 46, "nodeName": "ComplexType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.ComplexType]"}, {"lineNumber": 46, "col_offset": 58, "nodeName": "NUM_TYPE", "type": "Any"}, {"lineNumber": 46, "col_offset": 68, "nodeName": "TRUTH_TYPE", "type": "Any"}, {"lineNumber": 47, "col_offset": 52, "nodeName": "ComplexType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.ComplexType]"}, {"lineNumber": 47, "col_offset": 64, "nodeName": "NUM_TYPE", "type": "Any"}, {"lineNumber": 47, "col_offset": 74, "nodeName": "TRUTH_TYPE", "type": "Any"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "COMMON_NAME_MAPPING", "type": "Dict[Union[str, Any], Union[str, Any]]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "COMMON_TYPE_SIGNATURE", "type": "Dict[Union[str, Any], Any]"}, {"lineNumber": 176, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "num", "type": "int"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "add_common_name_with_type", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "num_string", "type": "str"}, {"lineNumber": 177, "col_offset": 42, "nodeName": "num_string", "type": "str"}, {"lineNumber": 177, "col_offset": 54, "nodeName": "NUM_TYPE", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[int, Any, Any], None]"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 18, "col_offset": 71, "nodeName": "Type", "type": "Any"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "name", "type": "str"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "mapping", "type": "str"}, {"lineNumber": 15, "col_offset": 48, "nodeName": "first", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 15, "col_offset": 62, "nodeName": "second", "type": "allennlp.semparse.type_declarations.type_declaration.ComplexType"}, {"lineNumber": 18, "col_offset": 47, "nodeName": "Set", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 18, "col_offset": 51, "nodeName": "BasicType", "type": "Any"}]