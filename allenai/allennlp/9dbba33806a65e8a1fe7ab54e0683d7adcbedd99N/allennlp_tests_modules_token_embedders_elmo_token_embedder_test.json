[{"lineNumber": 17, "col_offset": 28, "nodeName": "ModelTestCase", "type": "Type[allennlp.common.testing.model_test_case.ModelTestCase]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "dataset", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "training_tensors", "type": "Dict[str, Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "tags", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "example_tags", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "tags", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "archive_file", "type": "str"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "unarchive_dir", "type": "str"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "fta_file", "type": "str"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "word1", "type": "List[int]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "word2", "type": "List[int]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "embedding_layer", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 24, "col_offset": 50, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "Batch", "type": "Type[allennlp.data.dataset.Batch]"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "instances", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "index_instances", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 28, "col_offset": 32, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "as_tensor_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 36, "col_offset": 16, "nodeName": "tag_id", "type": "Any"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "example_tags", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "join", "type": "Callable"}, {"lineNumber": 44, "col_offset": 41, "nodeName": "TEST_DIR", "type": "pathlib.Path"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "train_model", "type": "Callable[..., allennlp.models.model.Model]"}, {"lineNumber": 45, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 49, "col_offset": 37, "nodeName": "TEST_DIR", "type": "pathlib.Path"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "archive", "type": "tarfile.TarFile"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "unarchive_dir", "type": "str"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "fta_file", "type": "str"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "fta", "type": "TextIO"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "files_to_archive", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "files_to_archive", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "original_filename", "type": "Any"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "items", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "new_filename", "type": "str"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "word1", "type": "List[int]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "word1", "type": "List[int]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "word1", "type": "List[int]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "word1", "type": "List[int]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "word2", "type": "List[int]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "word2", "type": "List[int]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "word2", "type": "List[int]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "word2", "type": "List[int]"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestElmoTokenEmbedder"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "TestElmoTokenEmbedder"}, {"lineNumber": 24, "col_offset": 50, "nodeName": "self", "type": "TestElmoTokenEmbedder"}, {"lineNumber": 27, "col_offset": 24, "nodeName": "self", "type": "TestElmoTokenEmbedder"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "dataset", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 28, "col_offset": 32, "nodeName": "self", "type": "TestElmoTokenEmbedder"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "dataset", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 30, "col_offset": 22, "nodeName": "self", "type": "TestElmoTokenEmbedder"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "training_tensors", "type": "Dict[str, Any]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "tags", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "tag", "type": "str"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "path", "type": "module"}, {"lineNumber": 44, "col_offset": 41, "nodeName": "self", "type": "TestElmoTokenEmbedder"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 49, "col_offset": 37, "nodeName": "self", "type": "TestElmoTokenEmbedder"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "open", "type": "Callable[..., tarfile.TarFile]"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "archive_file", "type": "str"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "extractall", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "unarchive_dir", "type": "str"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 58, "col_offset": 18, "nodeName": "fta_file", "type": "str"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "files_to_archive", "type": "Any"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "join", "type": "Callable"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "unarchive_dir", "type": "str"}, {"lineNumber": 70, "col_offset": 62, "nodeName": "key", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "cmp", "type": "Callable[..., bool]"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "original_filename", "type": "Any"}, {"lineNumber": 71, "col_offset": 50, "nodeName": "new_filename", "type": "str"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "ElmoTokenEmbedder", "type": "Any"}, {"lineNumber": 89, "col_offset": 75, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "tags", "type": "Any"}, {"lineNumber": 34, "col_offset": 19, "nodeName": "tags", "type": "Any"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "get_token_from_index", "type": "Callable[..., str]"}, {"lineNumber": 37, "col_offset": 60, "nodeName": "tag_id", "type": "Any"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "tag", "type": "str"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "os", "type": "module"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 50, "col_offset": 13, "nodeName": "tarfile", "type": "module"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "archive", "type": "tarfile.TarFile"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "json", "type": "module"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "read", "type": "Callable"}, {"lineNumber": 62, "col_offset": 63, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 64, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "path", "type": "module"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "filecmp", "type": "module"}, {"lineNumber": 90, "col_offset": 42, "nodeName": "word1", "type": "List[int]"}, {"lineNumber": 90, "col_offset": 49, "nodeName": "word2", "type": "List[int]"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "self", "type": "TestElmoTokenEmbedder"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "fta", "type": "TextIO"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "os", "type": "module"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 91, "col_offset": 19, "nodeName": "embedding_layer", "type": "Any"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "word1", "type": "List[int]"}, {"lineNumber": 95, "col_offset": 19, "nodeName": "embedding_layer", "type": "Any"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "self", "type": "TestElmoTokenEmbedder"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "self", "type": "TestElmoTokenEmbedder"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "self", "type": "TestElmoTokenEmbedder"}, {"lineNumber": 76, "col_offset": 31, "nodeName": "self", "type": "TestElmoTokenEmbedder"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "self", "type": "TestElmoTokenEmbedder"}]