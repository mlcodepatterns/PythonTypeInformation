[{"lineNumber": 13, "col_offset": 18, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "token_indexer", "type": "Dict[str, Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "instance1", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "instance2", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "padding_lengths", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "padding_lengths", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "tensors", "type": "Dict[str, Any]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "text1", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "text2", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "lazy_dataset", "type": "allennlp.data.dataset.LazyDataset"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "instances", "type": "List[allennlp.data.instance.Instance]"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "instances", "type": "List[allennlp.data.instance.Instance]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "generator", "type": "Callable[[], Any]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "TestDataset"}, {"lineNumber": 15, "col_offset": 21, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestDataset"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 28, "col_offset": 12, "nodeName": "_", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "get_dataset", "type": "Callable[[], Any]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "index_instances", "type": "Any"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "get_padding_lengths", "type": "Callable[[], Dict[str, Dict[str, int]]]"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "padding_lengths", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "get_dataset", "type": "Callable[[], Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "index_instances", "type": "Any"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "get_padding_lengths", "type": "Callable[[], Dict[str, Dict[str, int]]]"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "as_tensor_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "padding_lengths", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "text1", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 46, "col_offset": 48, "nodeName": "text2", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "get_lazy_dataset", "type": "Callable[[], Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "index_instances", "type": "Any"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "padding_lengths", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "tensors", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "text1", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "text2", "type": "Any"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "token_indexer", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "token_indexer", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "token_indexer", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "token_indexer", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "Dataset", "type": "Type[allennlp.data.dataset.Dataset]"}, {"lineNumber": 76, "col_offset": 23, "nodeName": "instances", "type": "List[allennlp.data.instance.Instance]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "LazyDataset", "type": "Type[allennlp.data.dataset.LazyDataset]"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "generator", "type": "Callable[[], Any]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 21, "col_offset": 40, "nodeName": "SingleIdTokenIndexer", "type": "Any"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 27, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "Dataset", "type": "Type[allennlp.data.dataset.Dataset]"}, {"lineNumber": 31, "col_offset": 18, "nodeName": "self", "type": "TestDataset"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 32, "col_offset": 32, "nodeName": "self", "type": "TestDataset"}, {"lineNumber": 33, "col_offset": 26, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "self", "type": "TestDataset"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "self", "type": "TestDataset"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 44, "col_offset": 55, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 46, "col_offset": 55, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "self", "type": "TestDataset"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "lazy_dataset", "type": "allennlp.data.dataset.LazyDataset"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "self", "type": "TestDataset"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "Dataset", "type": "Type[allennlp.data.dataset.Dataset]"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "get_padding_lengths", "type": "Callable[[], Dict[str, Dict[str, int]]]"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "as_tensor_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 56, "col_offset": 45, "nodeName": "padding_lengths", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 60, "col_offset": 52, "nodeName": "text1", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 62, "col_offset": 52, "nodeName": "text2", "type": "Any"}, {"lineNumber": 67, "col_offset": 27, "nodeName": "self", "type": "TestDataset"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "self", "type": "TestDataset"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "self", "type": "TestDataset"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "self", "type": "TestDataset"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 75, "col_offset": 21, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "get_dataset", "type": "Callable[[], Any]"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "iter", "type": "Callable"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "instances", "type": "List[allennlp.data.instance.Instance]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "TestDataset"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "TestDataset"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestDataset"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestDataset"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestDataset"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 22, "col_offset": 14, "nodeName": "TestDataset", "type": "Type[TestDataset]"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "self", "type": "TestDataset"}, {"lineNumber": 25, "col_offset": 38, "nodeName": "LabelField", "type": "Type[allennlp.data.fields.label_field.LabelField]"}, {"lineNumber": 26, "col_offset": 39, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 27, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 28, "col_offset": 25, "nodeName": "instance1", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "instance2", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 44, "col_offset": 55, "nodeName": "numpy", "type": "module"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 46, "col_offset": 55, "nodeName": "numpy", "type": "module"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "instance", "type": "Any"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 60, "col_offset": 59, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "t", "type": "str"}, {"lineNumber": 66, "col_offset": 41, "nodeName": "t", "type": "str"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "t", "type": "str"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "t", "type": "str"}, {"lineNumber": 70, "col_offset": 28, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "t", "type": "str"}, {"lineNumber": 70, "col_offset": 41, "nodeName": "t", "type": "str"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "t", "type": "str"}, {"lineNumber": 72, "col_offset": 41, "nodeName": "t", "type": "str"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "field1", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 74, "col_offset": 57, "nodeName": "field2", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "field3", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 75, "col_offset": 57, "nodeName": "field4", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "self", "type": "TestDataset"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 54, "col_offset": 44, "nodeName": "instance", "type": "Any"}, {"lineNumber": 54, "col_offset": 56, "nodeName": "lazy_dataset", "type": "allennlp.data.dataset.LazyDataset"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 60, "col_offset": 59, "nodeName": "numpy", "type": "module"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "numpy", "type": "module"}, {"lineNumber": 26, "col_offset": 50, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "tensors", "type": "Dict[str, Any]"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "tensors", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "tensors", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "tensors", "type": "Dict[str, Any]"}]