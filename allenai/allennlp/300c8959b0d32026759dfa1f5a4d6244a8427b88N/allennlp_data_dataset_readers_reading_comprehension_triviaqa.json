[{"lineNumber": 17, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 21, "col_offset": 21, "nodeName": "DatasetReader", "type": "Type[allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 17, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 143, "col_offset": 64, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 17, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "_base_tarball_path", "type": "str"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "base_tarball_path", "type": "str"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "_unfiltered_tarball_path", "type": "str"}, {"lineNumber": 61, "col_offset": 40, "nodeName": "unfiltered_tarball_path", "type": "str"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "_tokenizer", "type": "allennlp.data.tokenizers.tokenizer.Tokenizer"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "_token_indexers", "type": "Union[Dict[str, allennlp.data.token_indexers.token_indexer.TokenIndexer[Union[int, List[int]]]], Dict[str, Any]]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "base_tarball", "type": "tarfile.TarFile"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "question_json", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "paragraphs", "type": "List[str]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "evidence_file", "type": "List[str]"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "evidence_files", "type": "List[List[str]]"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "paragraphs", "type": "List[str]"}, {"lineNumber": 117, "col_offset": 59, "nodeName": "List", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "base_tarball_path", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "unfiltered_tarball_path", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "tokenizer", "type": "allennlp.data.tokenizers.tokenizer.Tokenizer"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "token_indexers", "type": "Dict[str, allennlp.data.token_indexers.token_indexer.TokenIndexer[Union[int, List[int]]]]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "lazy", "type": "Any"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "lazy", "type": "bool"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "tokenizer", "type": "allennlp.data.tokenizers.tokenizer.Tokenizer"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 31, "nodeName": "token_indexers", "type": "Dict[str, allennlp.data.token_indexers.token_indexer.TokenIndexer[Union[int, List[int]]]]"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 55, "nodeName": "_base_tarball_path", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "open", "type": "Callable[..., tarfile.TarFile]"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "file_path", "type": "str"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "unfiltered_tarball", "type": "tarfile.TarFile"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "data_json", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "path", "type": "str"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "data_json", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 29, "nodeName": "data_json", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "question_text", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "evidence_files", "type": "List[List[str]]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "answer_json", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "human_answers", "type": "List[str]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "answer_texts", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "paragraph", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "whole_document", "type": "str"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "tokens", "type": "List[str]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "paragraph", "type": "str"}, {"lineNumber": 117, "col_offset": 64, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "question_tokens", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 147, "col_offset": 15, "nodeName": "passage_tokens", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "passage_tokens", "type": "Any"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "make_reading_comprehension_instance", "type": "Callable[..., allennlp.data.instance.Instance]"}, {"lineNumber": 149, "col_offset": 56, "nodeName": "question_tokens", "type": "Union[List[allennlp.data.tokenizers.token.Token], Any]"}, {"lineNumber": 150, "col_offset": 56, "nodeName": "passage_tokens", "type": "Union[Any, List[allennlp.data.tokenizers.token.Token]]"}, {"lineNumber": 151, "col_offset": 56, "nodeName": "_token_indexers", "type": "Any"}, {"lineNumber": 152, "col_offset": 56, "nodeName": "passage_text", "type": "str"}, {"lineNumber": 153, "col_offset": 56, "nodeName": "token_spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 154, "col_offset": 56, "nodeName": "answer_texts", "type": "List[str]"}, {"lineNumber": 157, "col_offset": 33, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "pop", "type": "Any"}, {"lineNumber": 159, "col_offset": 34, "nodeName": "pop", "type": "Any"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.data.tokenizers.tokenizer.Tokenizer]"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "dict_from_params", "type": "Callable[[Any, allennlp.common.params.Params], Dict[str, allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]]"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "pop", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assert_empty", "type": "Callable[[str], None]"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 67, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 23, "nodeName": "tarfile", "type": "module"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "cached_path", "type": "Callable[..., str]"}, {"lineNumber": 68, "col_offset": 48, "nodeName": "_base_tarball_path", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 65, "nodeName": "_unfiltered_tarball_path", "type": "Any"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "open", "type": "Callable[..., tarfile.TarFile]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "file_path", "type": "str"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "question_json", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 82, "col_offset": 55, "nodeName": "question_text", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "file_path", "type": "str"}, {"lineNumber": 86, "col_offset": 20, "nodeName": "result", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "result", "type": "Any"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "question_json", "type": "Any"}, {"lineNumber": 98, "col_offset": 62, "nodeName": "human_answers", "type": "List[str]"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "pick_paragraphs", "type": "Any"}, {"lineNumber": 99, "col_offset": 50, "nodeName": "evidence_files", "type": "List[List[str]]"}, {"lineNumber": 99, "col_offset": 66, "nodeName": "question_text", "type": "Any"}, {"lineNumber": 99, "col_offset": 81, "nodeName": "answer_texts", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "paragraph_tokens", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "token_spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 117, "col_offset": 38, "nodeName": "List", "type": "Any"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "join", "type": "Callable"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "evidence_file", "type": "List[str]"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 133, "col_offset": 30, "nodeName": "paragraph", "type": "str"}, {"lineNumber": 143, "col_offset": 41, "nodeName": "List", "type": "Any"}, {"lineNumber": 146, "col_offset": 30, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 146, "col_offset": 55, "nodeName": "question_text", "type": "str"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 148, "col_offset": 54, "nodeName": "passage_text", "type": "str"}, {"lineNumber": 149, "col_offset": 15, "nodeName": "util", "type": "module"}, {"lineNumber": 151, "col_offset": 56, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 28, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 159, "col_offset": 34, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 160, "col_offset": 20, "nodeName": "Tokenizer", "type": "Type[allennlp.data.tokenizers.tokenizer.Tokenizer]"}, {"lineNumber": 160, "col_offset": 42, "nodeName": "pop", "type": "Any"}, {"lineNumber": 161, "col_offset": 25, "nodeName": "TokenIndexer", "type": "Type[allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]"}, {"lineNumber": 161, "col_offset": 55, "nodeName": "pop", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 163, "col_offset": 28, "nodeName": "cls", "type": "Any"}, {"lineNumber": 164, "col_offset": 37, "nodeName": "base_tarball_path", "type": "Any"}, {"lineNumber": 165, "col_offset": 43, "nodeName": "unfiltered_tarball_path", "type": "Any"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "tokenizer", "type": "allennlp.data.tokenizers.tokenizer.Tokenizer"}, {"lineNumber": 167, "col_offset": 34, "nodeName": "token_indexers", "type": "Dict[str, allennlp.data.token_indexers.token_indexer.TokenIndexer[Union[int, List[int]]]]"}, {"lineNumber": 168, "col_offset": 24, "nodeName": "lazy", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 63, "col_offset": 60, "nodeName": "SingleIdTokenIndexer", "type": "Any"}, {"lineNumber": 68, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 70, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "tarfile", "type": "module"}, {"lineNumber": 71, "col_offset": 46, "nodeName": "cached_path", "type": "Callable[..., str]"}, {"lineNumber": 71, "col_offset": 58, "nodeName": "_unfiltered_tarball_path", "type": "Any"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "json", "type": "module"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "decode", "type": "Callable[..., str]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "json", "type": "module"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "decode", "type": "Callable[..., str]"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "_tokenizer", "type": "Any"}, {"lineNumber": 86, "col_offset": 30, "nodeName": "question_json", "type": "Any"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "filename", "type": "Any"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "evidence_file", "type": "Optional[IO[bytes]]"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "question_json", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "filename", "type": "Any"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "evidence_file", "type": "Optional[IO[bytes]]"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "normalize_text", "type": "Callable[[str], str]"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "answer", "type": "Any"}, {"lineNumber": 97, "col_offset": 61, "nodeName": "answer", "type": "Any"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "answer_json", "type": "Any"}, {"lineNumber": 99, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 100, "col_offset": 60, "nodeName": "paragraph", "type": "Any"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "find_valid_answer_spans", "type": "Callable[[List[allennlp.data.tokenizers.token.Token], List[str]], List[Tuple[int, int]]]"}, {"lineNumber": 101, "col_offset": 59, "nodeName": "paragraph_tokens", "type": "Any"}, {"lineNumber": 101, "col_offset": 77, "nodeName": "answer_texts", "type": "Any"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "token_spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "text_to_instance", "type": "Any"}, {"lineNumber": 106, "col_offset": 49, "nodeName": "question_text", "type": "Any"}, {"lineNumber": 107, "col_offset": 49, "nodeName": "paragraph", "type": "Any"}, {"lineNumber": 108, "col_offset": 49, "nodeName": "token_spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 109, "col_offset": 49, "nodeName": "answer_texts", "type": "Any"}, {"lineNumber": 110, "col_offset": 49, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 111, "col_offset": 49, "nodeName": "paragraph_tokens", "type": "Any"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "instance", "type": "Any"}, {"lineNumber": 117, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "whole_document", "type": "str"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "tokens", "type": "List[str]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "paragraphs", "type": "List[str]"}, {"lineNumber": 143, "col_offset": 46, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 146, "col_offset": 30, "nodeName": "_tokenizer", "type": "Any"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "_tokenizer", "type": "Any"}, {"lineNumber": 160, "col_offset": 42, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 161, "col_offset": 55, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 71, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "extractfile", "type": "Callable[[Union[str, tarfile.TarInfo]], Optional[IO[bytes]]]"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 92, "col_offset": 31, "nodeName": "result", "type": "Any"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "extractfile", "type": "Callable[[Union[str, tarfile.TarInfo]], Optional[IO[bytes]]]"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "util", "type": "module"}, {"lineNumber": 97, "col_offset": 71, "nodeName": "get", "type": "Any"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "_tokenizer", "type": "Any"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "util", "type": "module"}, {"lineNumber": 106, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "read", "type": "Callable"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "read", "type": "Callable"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "base_tarball", "type": "tarfile.TarFile"}, {"lineNumber": 88, "col_offset": 61, "nodeName": "join", "type": "Callable"}, {"lineNumber": 88, "col_offset": 93, "nodeName": "filename", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "evidence_files", "type": "List[List[str]]"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "base_tarball", "type": "tarfile.TarFile"}, {"lineNumber": 93, "col_offset": 61, "nodeName": "join", "type": "Callable"}, {"lineNumber": 93, "col_offset": 99, "nodeName": "filename", "type": "Any"}, {"lineNumber": 94, "col_offset": 20, "nodeName": "evidence_files", "type": "List[List[str]]"}, {"lineNumber": 97, "col_offset": 71, "nodeName": "answer_json", "type": "Any"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 61, "nodeName": "path", "type": "module"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "decode", "type": "Callable[..., str]"}, {"lineNumber": 89, "col_offset": 68, "nodeName": "line", "type": "bytes"}, {"lineNumber": 93, "col_offset": 61, "nodeName": "path", "type": "module"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "decode", "type": "Callable[..., str]"}, {"lineNumber": 94, "col_offset": 68, "nodeName": "line", "type": "bytes"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "extractfile", "type": "Callable[[Union[str, tarfile.TarInfo]], Optional[IO[bytes]]]"}, {"lineNumber": 73, "col_offset": 66, "nodeName": "file_path", "type": "str"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "extractfile", "type": "Callable[[Union[str, tarfile.TarInfo]], Optional[IO[bytes]]]"}, {"lineNumber": 77, "col_offset": 60, "nodeName": "path", "type": "str"}, {"lineNumber": 88, "col_offset": 61, "nodeName": "os", "type": "module"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "line", "type": "bytes"}, {"lineNumber": 89, "col_offset": 76, "nodeName": "readlines", "type": "Callable"}, {"lineNumber": 93, "col_offset": 61, "nodeName": "os", "type": "module"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "line", "type": "bytes"}, {"lineNumber": 94, "col_offset": 76, "nodeName": "readlines", "type": "Callable"}, {"lineNumber": 73, "col_offset": 35, "nodeName": "unfiltered_tarball", "type": "tarfile.TarFile"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "base_tarball", "type": "tarfile.TarFile"}, {"lineNumber": 89, "col_offset": 76, "nodeName": "evidence_file", "type": "Optional[IO[bytes]]"}, {"lineNumber": 94, "col_offset": 76, "nodeName": "evidence_file", "type": "Optional[IO[bytes]]"}]