[{"lineNumber": 20, "col_offset": 26, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 48, "col_offset": 21, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "expanded_verb_indicator", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "embedded_text_with_verb_indicator", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "batch_sequence_lengths", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "reshaped_log_probs", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "class_probabilities", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 63, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "model_input", "type": "Dict[str, Any]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "transition_matrix", "type": "Any"}, {"lineNumber": 130, "col_offset": 72, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "all_tags", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "num_tags", "type": "int"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "transition_matrix", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "transition_matrix", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "embedder_params", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "encoder_params", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "default_initializer_params", "type": "Dict[str, str]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "initializer_params", "type": "Any"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "TextFieldEmbedder", "type": "Type[allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 44, "col_offset": 34, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 45, "col_offset": 30, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "get_vocab_size", "type": "Callable[..., int]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "tag_projection_layer", "type": "allennlp.modules.time_distributed.TimeDistributed"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "text_field_embedder", "type": "Any"}, {"lineNumber": 99, "col_offset": 55, "nodeName": "tokens", "type": "Dict[str, Any]"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "get_text_field_mask", "type": "Callable[[Dict[str, Any]], Any]"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "tokens", "type": "Dict[str, Any]"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "float", "type": "Any"}, {"lineNumber": 105, "col_offset": 44, "nodeName": "cat", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "embedding_dim_with_binary_feature", "type": "Any"}, {"lineNumber": 106, "col_offset": 73, "nodeName": "size", "type": "Any"}, {"lineNumber": 108, "col_offset": 51, "nodeName": "embedding_dim_with_binary_feature", "type": "Any"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "get_lengths_from_binary_sequence_mask", "type": "Callable[[Any], Any]"}, {"lineNumber": 114, "col_offset": 71, "nodeName": "mask", "type": "Any"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "stacked_encoder", "type": "Any"}, {"lineNumber": 115, "col_offset": 44, "nodeName": "embedded_text_with_verb_indicator", "type": "Any"}, {"lineNumber": 115, "col_offset": 79, "nodeName": "batch_sequence_lengths", "type": "Any"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "tag_projection_layer", "type": "Any"}, {"lineNumber": 117, "col_offset": 43, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "view", "type": "Any"}, {"lineNumber": 118, "col_offset": 45, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "view", "type": "Any"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "logits", "type": "Any"}, {"lineNumber": 120, "col_offset": 64, "nodeName": "class_probabilities", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "tags", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 126, "col_offset": 34, "nodeName": "loss", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 130, "col_offset": 57, "nodeName": "IndexField", "type": "Type[allennlp.data.fields.index_field.IndexField]"}, {"lineNumber": 157, "col_offset": 19, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "index_fields", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 159, "col_offset": 22, "nodeName": "arrays_to_variables", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "forward", "type": "Any"}, {"lineNumber": 163, "col_offset": 22, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "get_viterbi_pairwise_potentials", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "max_likelihood_sequence", "type": "List[int]"}, {"lineNumber": 166, "col_offset": 33, "nodeName": "_", "type": "Any"}, {"lineNumber": 166, "col_offset": 37, "nodeName": "viterbi_decode", "type": "Callable[[Any, Any], Tuple[List[int], Any]]"}, {"lineNumber": 166, "col_offset": 52, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 166, "col_offset": 65, "nodeName": "transition_matrix", "type": "Any"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "tags", "type": "List[Any]"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "get_index_to_token_vocabulary", "type": "Any"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 186, "col_offset": 23, "nodeName": "all_tags", "type": "Any"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "previous_tag", "type": "Any"}, {"lineNumber": 189, "col_offset": 31, "nodeName": "items", "type": "Any"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 198, "col_offset": 52, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "pop", "type": "Any"}, {"lineNumber": 216, "col_offset": 60, "nodeName": "default_embedder_params", "type": "Dict[str, Dict[str, Union[bool, str]]]"}, {"lineNumber": 217, "col_offset": 30, "nodeName": "from_params", "type": "Callable[[Any, allennlp.data.vocabulary.Vocabulary, allennlp.common.params.Params], allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 217, "col_offset": 60, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 217, "col_offset": 67, "nodeName": "embedder_params", "type": "Any"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "pop", "type": "Any"}, {"lineNumber": 227, "col_offset": 55, "nodeName": "default_lstm_params", "type": "Dict[str, Union[bool, float, int, str]]"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 228, "col_offset": 53, "nodeName": "encoder_params", "type": "Any"}, {"lineNumber": 232, "col_offset": 29, "nodeName": "pop", "type": "Any"}, {"lineNumber": 232, "col_offset": 55, "nodeName": "default_initializer_params", "type": "Dict[str, str]"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 233, "col_offset": 56, "nodeName": "initializer_params", "type": "Any"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 55, "col_offset": 52, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 56, "col_offset": 59, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 105, "col_offset": 55, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 105, "col_offset": 76, "nodeName": "expanded_verb_indicator", "type": "Any"}, {"lineNumber": 106, "col_offset": 73, "nodeName": "embedded_text_with_verb_indicator", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "get_input_dim", "type": "Any"}, {"lineNumber": 109, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 118, "col_offset": 29, "nodeName": "logits", "type": "Any"}, {"lineNumber": 118, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 66, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 119, "col_offset": 78, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 119, "col_offset": 95, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "sequence_cross_entropy_with_logits", "type": "Callable[..., Any]"}, {"lineNumber": 125, "col_offset": 54, "nodeName": "logits", "type": "Any"}, {"lineNumber": 125, "col_offset": 62, "nodeName": "tags", "type": "Any"}, {"lineNumber": 125, "col_offset": 68, "nodeName": "mask", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 63, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 63, "col_offset": 60, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "text_field", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 157, "col_offset": 69, "nodeName": "verb_indicator", "type": "allennlp.data.fields.index_field.IndexField"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 42, "nodeName": "as_array_dict", "type": "Callable"}, {"lineNumber": 160, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 160, "col_offset": 37, "nodeName": "model_input", "type": "Dict[str, Any]"}, {"lineNumber": 163, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 20, "nodeName": "x", "type": "int"}, {"lineNumber": 168, "col_offset": 25, "nodeName": "max_likelihood_sequence", "type": "List[int]"}, {"lineNumber": 170, "col_offset": 53, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 130, "col_offset": 77, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 130, "col_offset": 82, "nodeName": "Any", "type": "Any"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 187, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 187, "col_offset": 41, "nodeName": "num_tags", "type": "int"}, {"lineNumber": 187, "col_offset": 51, "nodeName": "num_tags", "type": "int"}, {"lineNumber": 189, "col_offset": 31, "nodeName": "all_tags", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "j", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "tag", "type": "Any"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 211, "col_offset": 43, "nodeName": "GLOVE_PATH", "type": "str"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 217, "col_offset": 30, "nodeName": "TextFieldEmbedder", "type": "Type[allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 232, "col_offset": 29, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 233, "col_offset": 22, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 236, "col_offset": 39, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 237, "col_offset": 35, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 238, "col_offset": 31, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "SemanticRoleLabeler", "type": "Any"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 59, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 56, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "stacked_encoder", "type": "Any"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 119, "col_offset": 40, "nodeName": "reshaped_log_probs", "type": "Any"}, {"lineNumber": 119, "col_offset": 95, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "dim", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "tags", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "max", "type": "Any"}, {"lineNumber": 63, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 159, "col_offset": 42, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 170, "col_offset": 53, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 185, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "all_tags", "type": "Any"}, {"lineNumber": 55, "col_offset": 59, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 102, "col_offset": 34, "nodeName": "verb_indicator", "type": "Any"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "F", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "tags", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "tags", "type": "Any"}, {"lineNumber": 163, "col_offset": 22, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 193, "col_offset": 19, "nodeName": "i", "type": "Any"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "j", "type": "Any"}, {"lineNumber": 194, "col_offset": 20, "nodeName": "transition_matrix", "type": "Any"}, {"lineNumber": 194, "col_offset": 46, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 193, "col_offset": 30, "nodeName": "tag", "type": "Any"}, {"lineNumber": 193, "col_offset": 52, "nodeName": "previous_tag", "type": "Any"}, {"lineNumber": 194, "col_offset": 38, "nodeName": "i", "type": "Any"}, {"lineNumber": 194, "col_offset": 41, "nodeName": "j", "type": "Any"}, {"lineNumber": 193, "col_offset": 74, "nodeName": "tag", "type": "Any"}]