[{"lineNumber": 203, "col_offset": 0, "nodeName": "parse_args", "type": "Callable[[], Any]"}, {"lineNumber": 210, "col_offset": 0, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 20, "col_offset": 33, "nodeName": "Struct", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "Struct", "type": "Any"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "MarkdownRenderer", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "CROSS_REF_RE", "type": "Pattern[str]"}, {"lineNumber": 69, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "SPECIAL_MEMBERS", "type": "Tuple[str, str, str, str, str]"}, {"lineNumber": 120, "col_offset": 9, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 157, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "opts", "type": "argparse.Namespace"}, {"lineNumber": 232, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "codeblock_opened", "type": "bool"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "current_section", "type": "None"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "docstring", "type": "str"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "match", "type": "Optional[Match[str]]"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "match", "type": "Optional[Match[str]]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "line", "type": "str"}, {"lineNumber": 121, "col_offset": 8, "nodeName": "parts", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "dec", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "decorators", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "is_async", "type": "Any"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "signature_with_def", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "signature_args", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "return_", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "result", "type": "str"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "result", "type": "str"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "bases", "type": "str"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "metaclass", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "code", "type": "str"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "signature_python_help_style", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "code", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "submods", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "breadcrumbs", "type": "List[str]"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "docstring", "type": "Any"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 207, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 211, "col_offset": 11, "nodeName": "parse_args", "type": "Callable[[], Any]"}, {"lineNumber": 213, "col_offset": 14, "nodeName": "PydocMarkdown", "type": "Any"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "load_modules", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "process", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "render", "type": "Any"}, {"lineNumber": 233, "col_offset": 4, "nodeName": "main", "type": "Callable[[], Any]"}, {"lineNumber": 25, "col_offset": 19, "nodeName": "re", "type": "module"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "visit", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "process_node", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "split", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "node", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "join", "type": "Callable"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "match", "type": "Callable"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "line", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "current_section", "type": "str"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "line", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "line", "type": "Union[str, Any]"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "current_section", "type": "Union[str, Any]"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "match", "type": "Any"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "ty", "type": "Any"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "findall", "type": "Any"}, {"lineNumber": 73, "col_offset": 57, "nodeName": "line", "type": "str"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "line", "type": "str"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "visit", "type": "Any"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "_process_node", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "visible", "type": "bool"}, {"lineNumber": 119, "col_offset": 20, "nodeName": "Function", "type": "Any"}, {"lineNumber": 119, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 119, "col_offset": 73, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "func", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "signature_python_help_style", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "func", "type": "Any"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "signature_class_prefix", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "format_arglist", "type": "Any"}, {"lineNumber": 135, "col_offset": 49, "nodeName": "args", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "signature_args", "type": "Any"}, {"lineNumber": 150, "col_offset": 11, "nodeName": "func", "type": "Any"}, {"lineNumber": 152, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "parts", "type": "List[Any]"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "add_method_bar", "type": "bool"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "result", "type": "str"}, {"lineNumber": 157, "col_offset": 46, "nodeName": "Class", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 159, "col_offset": 11, "nodeName": "cls", "type": "Any"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "bases", "type": "str"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 161, "col_offset": 37, "nodeName": "name", "type": "Any"}, {"lineNumber": 161, "col_offset": 47, "nodeName": "bases", "type": "str"}, {"lineNumber": 162, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "code", "type": "Any"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "classdef_render_init_signature_if_needed", "type": "Any"}, {"lineNumber": 172, "col_offset": 50, "nodeName": "Module", "type": "Any"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "split", "type": "Any"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "submod_name", "type": "Any"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 177, "col_offset": 40, "nodeName": "submods", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "write", "type": "Any"}, {"lineNumber": 190, "col_offset": 42, "nodeName": "render_module_header", "type": "Any"}, {"lineNumber": 192, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 192, "col_offset": 22, "nodeName": "obj", "type": "Any"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "Module", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "_render_signature_block", "type": "Any"}, {"lineNumber": 194, "col_offset": 37, "nodeName": "fp", "type": "Any"}, {"lineNumber": 194, "col_offset": 41, "nodeName": "obj", "type": "Any"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "obj", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "lines", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "docstrings_as_blockquote", "type": "Any"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "argparse", "type": "module"}, {"lineNumber": 205, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 205, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 206, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 206, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 207, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 227, "col_offset": 4, "nodeName": "pydocmd", "type": "Any"}, {"lineNumber": 228, "col_offset": 4, "nodeName": "pydocmd", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "pydocmd", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "graph", "type": "Any"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "node", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "docstring", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "codeblock_opened", "type": "bool"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "codeblock_opened", "type": "bool"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "line", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 49, "col_offset": 52, "nodeName": "line", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "line", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "_transform_cross_references", "type": "Any"}, {"lineNumber": 65, "col_offset": 52, "nodeName": "line", "type": "Union[str, Any]"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "CROSS_REF_RE", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "path", "type": "Any"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "cross_ref", "type": "str"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "match", "type": "Any"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "cross_ref", "type": "str"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "graph", "type": "Any"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "parent", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "SPECIAL_MEMBERS", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "_check", "type": "Callable[[Any], Any]"}, {"lineNumber": 112, "col_offset": 22, "nodeName": "node", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "node", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "parent", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "parts", "type": "List[Any]"}, {"lineNumber": 134, "col_offset": 22, "nodeName": "override_name", "type": "str"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "name", "type": "Any"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "Argument", "type": "Any"}, {"lineNumber": 135, "col_offset": 49, "nodeName": "func", "type": "Any"}, {"lineNumber": 136, "col_offset": 11, "nodeName": "signature_args", "type": "Any"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "strip", "type": "Any"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "join", "type": "Callable"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "is_method", "type": "Any"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "map", "type": "Callable"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "bases", "type": "Any"}, {"lineNumber": 161, "col_offset": 37, "nodeName": "cls", "type": "Any"}, {"lineNumber": 163, "col_offset": 40, "nodeName": "code", "type": "str"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "name", "type": "Any"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "submods", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "title", "type": "str"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 186, "col_offset": 31, "nodeName": "title", "type": "str"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "fp", "type": "Any"}, {"lineNumber": 190, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "_render_header", "type": "Any"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "fp", "type": "Any"}, {"lineNumber": 191, "col_offset": 36, "nodeName": "level", "type": "Any"}, {"lineNumber": 191, "col_offset": 43, "nodeName": "obj", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "_render_module_breadcrumbs", "type": "Any"}, {"lineNumber": 193, "col_offset": 44, "nodeName": "fp", "type": "Any"}, {"lineNumber": 193, "col_offset": 48, "nodeName": "obj", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "split", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "write", "type": "Any"}, {"lineNumber": 216, "col_offset": 17, "nodeName": "AllenNlpRenderer", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "node", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "line", "type": "Any"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "codeblock_opened", "type": "bool"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "line", "type": "Any"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "current_section", "type": "Any"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "_preprocess_line", "type": "Any"}, {"lineNumber": 41, "col_offset": 62, "nodeName": "line", "type": "Any"}, {"lineNumber": 41, "col_offset": 68, "nodeName": "current_section", "type": "None"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "lines", "type": "List[Any]"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "re", "type": "module"}, {"lineNumber": 58, "col_offset": 23, "nodeName": "ty", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "split", "type": "Any"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "ty", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "href", "type": "str"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "href", "type": "str"}, {"lineNumber": 81, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "cross_ref", "type": "str"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "cross_ref", "type": "str"}, {"lineNumber": 85, "col_offset": 19, "nodeName": "line", "type": "str"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 108, "col_offset": 52, "nodeName": "parent", "type": "Any"}, {"lineNumber": 108, "col_offset": 65, "nodeName": "Module", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "parts", "type": "List[Any]"}, {"lineNumber": 123, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 123, "col_offset": 42, "nodeName": "name", "type": "Any"}, {"lineNumber": 124, "col_offset": 52, "nodeName": "is_method", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "parts", "type": "List[Any]"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "parts", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "parts", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "is_function", "type": "Any"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "func", "type": "Any"}, {"lineNumber": 131, "col_offset": 51, "nodeName": "is_class", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "parts", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "name", "type": "Any"}, {"lineNumber": 134, "col_offset": 39, "nodeName": "func", "type": "Any"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "filter", "type": "Callable"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "parts", "type": "List[Any]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "parts", "type": "List[Any]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "parts", "type": "List[Any]"}, {"lineNumber": 151, "col_offset": 25, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 151, "col_offset": 41, "nodeName": "return_", "type": "Any"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "func", "type": "Any"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "cls", "type": "Any"}, {"lineNumber": 160, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 160, "col_offset": 42, "nodeName": "metaclass", "type": "Any"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "members", "type": "Any"}, {"lineNumber": 165, "col_offset": 46, "nodeName": "visible", "type": "Any"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "_format_function_signature", "type": "Any"}, {"lineNumber": 173, "col_offset": 18, "nodeName": "mod", "type": "Any"}, {"lineNumber": 180, "col_offset": 17, "nodeName": "i", "type": "int"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "title", "type": "str"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "title", "type": "str"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "breadcrumbs", "type": "List[str]"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "obj", "type": "Any"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "Module", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "docstring", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "fp", "type": "Any"}, {"lineNumber": 199, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "lines", "type": "Union[Any, List[str]]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "fp", "type": "Any"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "PythonLoader", "type": "Any"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "AllenNlpFilterProcessor", "type": "Any"}, {"lineNumber": 215, "col_offset": 47, "nodeName": "AllenNlpDocstringProcessor", "type": "Any"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "out", "type": "Any"}, {"lineNumber": 41, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 51, "col_offset": 57, "nodeName": "startswith", "type": "Any"}, {"lineNumber": 53, "col_offset": 20, "nodeName": "current_section", "type": "Any"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "line", "type": "Any"}, {"lineNumber": 57, "col_offset": 20, "nodeName": "ident", "type": "Any"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "ty", "type": "Any"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "split", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "line", "type": "str"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "line", "type": "str"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "current_section", "type": "Any"}, {"lineNumber": 63, "col_offset": 20, "nodeName": "line", "type": "str"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 80, "col_offset": 46, "nodeName": "href", "type": "str"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "name", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 104, "col_offset": 49, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 108, "col_offset": 52, "nodeName": "node", "type": "Any"}, {"lineNumber": 123, "col_offset": 42, "nodeName": "dec", "type": "Any"}, {"lineNumber": 123, "col_offset": 52, "nodeName": "args", "type": "Any"}, {"lineNumber": 124, "col_offset": 52, "nodeName": "func", "type": "Any"}, {"lineNumber": 125, "col_offset": 40, "nodeName": "path", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "func", "type": "Any"}, {"lineNumber": 131, "col_offset": 51, "nodeName": "parent", "type": "Any"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "parent", "type": "Any"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "signature_args", "type": "Any"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "return_", "type": "Any"}, {"lineNumber": 141, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "signature_args", "type": "str"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "signature_args", "type": "Any"}, {"lineNumber": 151, "col_offset": 41, "nodeName": "func", "type": "Any"}, {"lineNumber": 154, "col_offset": 39, "nodeName": "l", "type": "str"}, {"lineNumber": 154, "col_offset": 45, "nodeName": "l", "type": "str"}, {"lineNumber": 160, "col_offset": 42, "nodeName": "cls", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "path", "type": "Any"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "cls", "type": "Any"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "members", "type": "Any"}, {"lineNumber": 179, "col_offset": 28, "nodeName": "submod_name", "type": "Any"}, {"lineNumber": 187, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 187, "col_offset": 32, "nodeName": "breadcrumbs", "type": "List[str]"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "obj", "type": "Any"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 198, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 198, "col_offset": 43, "nodeName": "lines", "type": "Any"}, {"lineNumber": 217, "col_offset": 21, "nodeName": "opts", "type": "argparse.Namespace"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "line", "type": "Any"}, {"lineNumber": 51, "col_offset": 57, "nodeName": "line", "type": "Any"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "line", "type": "Any"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 79, "col_offset": 66, "nodeName": "lower", "type": "Any"}, {"lineNumber": 80, "col_offset": 33, "nodeName": "path", "type": "Any"}, {"lineNumber": 82, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "parent", "type": "Any"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "node", "type": "Any"}, {"lineNumber": 104, "col_offset": 49, "nodeName": "name", "type": "Any"}, {"lineNumber": 123, "col_offset": 52, "nodeName": "dec", "type": "Any"}, {"lineNumber": 125, "col_offset": 40, "nodeName": "func", "type": "Any"}, {"lineNumber": 131, "col_offset": 51, "nodeName": "func", "type": "Any"}, {"lineNumber": 133, "col_offset": 25, "nodeName": "func", "type": "Any"}, {"lineNumber": 141, "col_offset": 24, "nodeName": "func", "type": "Any"}, {"lineNumber": 141, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 141, "col_offset": 50, "nodeName": "return_", "type": "Any"}, {"lineNumber": 145, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 145, "col_offset": 66, "nodeName": "arg", "type": "Any"}, {"lineNumber": 145, "col_offset": 75, "nodeName": "arg", "type": "Any"}, {"lineNumber": 145, "col_offset": 82, "nodeName": "args", "type": "Any"}, {"lineNumber": 154, "col_offset": 50, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "cls", "type": "Any"}, {"lineNumber": 165, "col_offset": 46, "nodeName": "members", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "cls", "type": "Any"}, {"lineNumber": 180, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 180, "col_offset": 26, "nodeName": "submods", "type": "Any"}, {"lineNumber": 181, "col_offset": 30, "nodeName": "submod_name", "type": "Any"}, {"lineNumber": 183, "col_offset": 29, "nodeName": "submod_name", "type": "Any"}, {"lineNumber": 214, "col_offset": 39, "nodeName": "module", "type": "Any"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "group", "type": "Callable"}, {"lineNumber": 59, "col_offset": 38, "nodeName": "ident", "type": "Any"}, {"lineNumber": 59, "col_offset": 50, "nodeName": "ty", "type": "Any"}, {"lineNumber": 61, "col_offset": 38, "nodeName": "ident", "type": "Any"}, {"lineNumber": 63, "col_offset": 32, "nodeName": "line", "type": "Any"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "path", "type": "Any"}, {"lineNumber": 82, "col_offset": 43, "nodeName": "lower", "type": "Any"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "node", "type": "Any"}, {"lineNumber": 104, "col_offset": 49, "nodeName": "node", "type": "Any"}, {"lineNumber": 141, "col_offset": 50, "nodeName": "func", "type": "Any"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "strip", "type": "Any"}, {"lineNumber": 145, "col_offset": 82, "nodeName": "func", "type": "Any"}, {"lineNumber": 154, "col_offset": 50, "nodeName": "result", "type": "str"}, {"lineNumber": 165, "col_offset": 46, "nodeName": "cls", "type": "Any"}, {"lineNumber": 214, "col_offset": 39, "nodeName": "opts", "type": "argparse.Namespace"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "match", "type": "Optional[Match[str]]"}, {"lineNumber": 79, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 79, "col_offset": 66, "nodeName": "path", "type": "Any"}, {"lineNumber": 82, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 145, "col_offset": 33, "nodeName": "s", "type": "Any"}, {"lineNumber": 79, "col_offset": 46, "nodeName": "path", "type": "Any"}]