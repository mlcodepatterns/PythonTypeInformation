[{"lineNumber": 6, "col_offset": 26, "nodeName": "ModelTestCase", "type": "Type[allennlp.common.testing.model_test_case.ModelTestCase]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "training_tensors", "type": "Dict[str, Any]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "probs", "type": "Any"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 13, "col_offset": 27, "nodeName": "as_tensor_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "decode", "type": "Any"}, {"lineNumber": 15, "col_offset": 40, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 23, "col_offset": 50, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 29, "col_offset": 50, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "self", "type": "TestBasicClassifier"}, {"lineNumber": 13, "col_offset": 27, "nodeName": "dataset", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "self", "type": "TestBasicClassifier"}, {"lineNumber": 14, "col_offset": 35, "nodeName": "training_tensors", "type": "Dict[str, Any]"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 16, "col_offset": 26, "nodeName": "keys", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 18, "col_offset": 42, "nodeName": "sum", "type": "Any"}, {"lineNumber": 18, "col_offset": 52, "nodeName": "probs", "type": "Any"}, {"lineNumber": 18, "col_offset": 64, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestBasicClassifier"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestBasicClassifier"}, {"lineNumber": 23, "col_offset": 50, "nodeName": "self", "type": "TestBasicClassifier"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestBasicClassifier"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestBasicClassifier"}, {"lineNumber": 29, "col_offset": 50, "nodeName": "self", "type": "TestBasicClassifier"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 8, "col_offset": 14, "nodeName": "TestBasicClassifier", "type": "Type[TestBasicClassifier]"}, {"lineNumber": 8, "col_offset": 35, "nodeName": "self", "type": "TestBasicClassifier"}, {"lineNumber": 9, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 13, "col_offset": 27, "nodeName": "self", "type": "TestBasicClassifier"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "self", "type": "TestBasicClassifier"}, {"lineNumber": 16, "col_offset": 26, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 18, "col_offset": 42, "nodeName": "numpy", "type": "module"}, {"lineNumber": 18, "col_offset": 64, "nodeName": "numpy", "type": "module"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 9, "col_offset": 26, "nodeName": "self", "type": "TestBasicClassifier"}, {"lineNumber": 10, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "self", "type": "TestBasicClassifier"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 27, "col_offset": 26, "nodeName": "self", "type": "TestBasicClassifier"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 10, "col_offset": 26, "nodeName": "self", "type": "TestBasicClassifier"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "self", "type": "TestBasicClassifier"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "self", "type": "TestBasicClassifier"}]