[{"lineNumber": 23, "col_offset": 12, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "matcher_word", "type": "allennlp.modules.bimpm_matching.BiMpmMatching"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "matcher_word", "type": "allennlp.modules.bimpm_matching.BiMpmMatching"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "encoder1", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "encoder1", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "matcher_forward1", "type": "allennlp.modules.bimpm_matching.BiMpmMatching"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "matcher_forward1", "type": "allennlp.modules.bimpm_matching.BiMpmMatching"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "matcher_backward1", "type": "allennlp.modules.bimpm_matching.BiMpmMatching"}, {"lineNumber": 87, "col_offset": 33, "nodeName": "matcher_backward1", "type": "allennlp.modules.bimpm_matching.BiMpmMatching"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "encoder2", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "encoder2", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "matcher_forward2", "type": "allennlp.modules.bimpm_matching.BiMpmMatching"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "matcher_forward2", "type": "allennlp.modules.bimpm_matching.BiMpmMatching"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "matcher_backward2", "type": "allennlp.modules.bimpm_matching.BiMpmMatching"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "matcher_backward2", "type": "allennlp.modules.bimpm_matching.BiMpmMatching"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "aggregator", "type": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "aggregator", "type": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "classifier_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "classifier_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "mask_premise", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "mask_hypothesis", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "embedded_premise", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "encoded_premise1", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "encoded_premise2", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "embedded_hypothesis", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "encoded_hypothesis1", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "encoded_hypothesis2", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "matching_vector_premise", "type": "List[Any]"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "matching_vector_hypothesis", "type": "List[Any]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "half_hidden_size_1", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "half_hidden_size_2", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "matching_vector_cat_premise", "type": "Any"}, {"lineNumber": 203, "col_offset": 8, "nodeName": "matching_vector_cat_hypothesis", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "probs", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 127, "col_offset": 9, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "argmax_indices", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 238, "col_offset": 31, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 231, "col_offset": 9, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 242, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 79, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "check_dimensions_match", "type": "Callable[[int, int, str, str], None]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "matching_dim", "type": "int"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 112, "col_offset": 40, "nodeName": "dropout", "type": "float"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "CrossEntropyLoss", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "get_text_field_mask", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 48, "nodeName": "premise", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "get_text_field_mask", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 51, "nodeName": "hypothesis", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 155, "col_offset": 27, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "add_matching_result", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 176, "col_offset": 28, "nodeName": "matcher_word", "type": "Any"}, {"lineNumber": 176, "col_offset": 47, "nodeName": "embedded_premise", "type": "Any"}, {"lineNumber": 176, "col_offset": 65, "nodeName": "embedded_hypothesis", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "add_matching_result", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "matcher_forward1", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "add_matching_result", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "matcher_backward1", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "add_matching_result", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "matcher_forward2", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "add_matching_result", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "matcher_backward2", "type": "Any"}, {"lineNumber": 202, "col_offset": 38, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 203, "col_offset": 41, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 209, "col_offset": 32, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "classifier_feedforward", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 217, "col_offset": 44, "nodeName": "logits", "type": "Any"}, {"lineNumber": 219, "col_offset": 33, "nodeName": "logits", "type": "Any"}, {"lineNumber": 219, "col_offset": 50, "nodeName": "probs", "type": "Any"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "label", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "metric", "type": "Any"}, {"lineNumber": 224, "col_offset": 34, "nodeName": "loss", "type": "Any"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 236, "col_offset": 38, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 242, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "metric_name", "type": "Any"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 100, "col_offset": 14, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 114, "col_offset": 36, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 126, "col_offset": 18, "nodeName": "List", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "util", "type": "module"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "util", "type": "module"}, {"lineNumber": 155, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "text_field_embedder", "type": "Any"}, {"lineNumber": 155, "col_offset": 65, "nodeName": "premise", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "encoder1", "type": "Any"}, {"lineNumber": 156, "col_offset": 54, "nodeName": "embedded_premise", "type": "Any"}, {"lineNumber": 156, "col_offset": 72, "nodeName": "mask_premise", "type": "Any"}, {"lineNumber": 157, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "encoder2", "type": "Any"}, {"lineNumber": 157, "col_offset": 54, "nodeName": "encoded_premise1", "type": "Any"}, {"lineNumber": 157, "col_offset": 72, "nodeName": "mask_premise", "type": "Any"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 160, "col_offset": 43, "nodeName": "text_field_embedder", "type": "Any"}, {"lineNumber": 160, "col_offset": 68, "nodeName": "hypothesis", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "encoder1", "type": "Any"}, {"lineNumber": 161, "col_offset": 57, "nodeName": "embedded_hypothesis", "type": "Any"}, {"lineNumber": 161, "col_offset": 78, "nodeName": "mask_hypothesis", "type": "Any"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 43, "nodeName": "encoder2", "type": "Any"}, {"lineNumber": 162, "col_offset": 57, "nodeName": "encoded_hypothesis1", "type": "Any"}, {"lineNumber": 162, "col_offset": 78, "nodeName": "mask_hypothesis", "type": "Any"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "matcher", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "encoded_premise", "type": "Any"}, {"lineNumber": 170, "col_offset": 33, "nodeName": "mask_premise", "type": "Any"}, {"lineNumber": 170, "col_offset": 47, "nodeName": "encoded_hypothesis", "type": "Any"}, {"lineNumber": 170, "col_offset": 67, "nodeName": "mask_hypothesis", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 176, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 29, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "encoded_premise1", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "encoded_hypothesis1", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "encoded_premise1", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "encoded_hypothesis1", "type": "Any"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "encoded_premise2", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "encoded_hypothesis2", "type": "Any"}, {"lineNumber": 196, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "encoded_premise2", "type": "Any"}, {"lineNumber": 198, "col_offset": 12, "nodeName": "encoded_hypothesis2", "type": "Any"}, {"lineNumber": 202, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 51, "nodeName": "cat", "type": "Any"}, {"lineNumber": 202, "col_offset": 61, "nodeName": "matching_vector_premise", "type": "List[Any]"}, {"lineNumber": 203, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 203, "col_offset": 54, "nodeName": "cat", "type": "Any"}, {"lineNumber": 203, "col_offset": 64, "nodeName": "matching_vector_hypothesis", "type": "List[Any]"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "aggregator", "type": "Any"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "matching_vector_cat_premise", "type": "Any"}, {"lineNumber": 207, "col_offset": 57, "nodeName": "mask_premise", "type": "Any"}, {"lineNumber": 209, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "aggregator", "type": "Any"}, {"lineNumber": 210, "col_offset": 28, "nodeName": "matching_vector_cat_hypothesis", "type": "Any"}, {"lineNumber": 210, "col_offset": 60, "nodeName": "mask_hypothesis", "type": "Any"}, {"lineNumber": 214, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "cat", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "functional", "type": "Any"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "loss", "type": "Any"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "logits", "type": "Any"}, {"lineNumber": 221, "col_offset": 37, "nodeName": "label", "type": "Any"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "values", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 127, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 230, "col_offset": 27, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 236, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 237, "col_offset": 18, "nodeName": "get_token_from_index", "type": "Any"}, {"lineNumber": 237, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 237, "col_offset": 77, "nodeName": "x", "type": "Any"}, {"lineNumber": 237, "col_offset": 82, "nodeName": "argmax_indices", "type": "Any"}, {"lineNumber": 231, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 244, "col_offset": 43, "nodeName": "reset", "type": "bool"}, {"lineNumber": 242, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 242, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 100, "col_offset": 14, "nodeName": "matcher_backward2", "type": "allennlp.modules.bimpm_matching.BiMpmMatching"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "aggregator", "type": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"}, {"lineNumber": 112, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 116, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 160, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "matching_vector_premise", "type": "List[Any]"}, {"lineNumber": 172, "col_offset": 43, "nodeName": "matching_result", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "matching_vector_hypothesis", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 46, "nodeName": "matching_result", "type": "Any"}, {"lineNumber": 177, "col_offset": 29, "nodeName": "encoder1", "type": "Any"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "encoder2", "type": "Any"}, {"lineNumber": 202, "col_offset": 51, "nodeName": "torch", "type": "Any"}, {"lineNumber": 203, "col_offset": 54, "nodeName": "torch", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 215, "col_offset": 23, "nodeName": "aggregated_premise", "type": "Any"}, {"lineNumber": 215, "col_offset": 43, "nodeName": "aggregated_hypothesis", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 221, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 223, "col_offset": 16, "nodeName": "metric", "type": "Any"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "logits", "type": "Any"}, {"lineNumber": 223, "col_offset": 31, "nodeName": "label", "type": "Any"}, {"lineNumber": 127, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 237, "col_offset": 18, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 231, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 244, "col_offset": 54, "nodeName": "metric_name", "type": "Any"}, {"lineNumber": 244, "col_offset": 67, "nodeName": "metric", "type": "Any"}, {"lineNumber": 244, "col_offset": 77, "nodeName": "items", "type": "Any"}, {"lineNumber": 100, "col_offset": 14, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 177, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 180, "col_offset": 36, "nodeName": "half_hidden_size_1", "type": "Any"}, {"lineNumber": 181, "col_offset": 39, "nodeName": "half_hidden_size_1", "type": "Any"}, {"lineNumber": 185, "col_offset": 35, "nodeName": "half_hidden_size_1", "type": "Any"}, {"lineNumber": 186, "col_offset": 38, "nodeName": "half_hidden_size_1", "type": "Any"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 36, "nodeName": "half_hidden_size_2", "type": "Any"}, {"lineNumber": 193, "col_offset": 39, "nodeName": "half_hidden_size_2", "type": "Any"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "half_hidden_size_2", "type": "Any"}, {"lineNumber": 198, "col_offset": 38, "nodeName": "half_hidden_size_2", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 230, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 230, "col_offset": 37, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 237, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 77, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 230, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 244, "col_offset": 77, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "Any", "type": "Any"}, {"lineNumber": 235, "col_offset": 22, "nodeName": "output_dict", "type": "Dict[str, Any]"}]