[{"lineNumber": 12, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 12, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "default_implementation", "type": "str"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 20, "col_offset": 11, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 61, "col_offset": 64, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 12, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 27, "col_offset": 47, "nodeName": "Generator", "type": "Any"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "batches", "type": "Iterable[allennlp.data.dataset.Batch]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "batch", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 71, "col_offset": 21, "nodeName": "batches", "type": "Iterable[allennlp.data.dataset.Batch]"}, {"lineNumber": 85, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 81, "col_offset": 79, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "iterator_type", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "num_epochs", "type": "int"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 69, "col_offset": 71, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 69, "col_offset": 90, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 69, "col_offset": 109, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "_create_batches", "type": "Callable[[Iterable[allennlp.data.instance.Instance], bool], Iterable[allennlp.data.dataset.Batch]]"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "instances", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 70, "col_offset": 50, "nodeName": "shuffle", "type": "bool"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "padding_lengths", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 81, "col_offset": 70, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 81, "col_offset": 88, "nodeName": "Batch", "type": "Type[allennlp.data.dataset.Batch]"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "pop_choice", "type": "Callable[..., Any]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "from_params", "type": "Callable[[allennlp.common.params.Params], DataIterator]"}, {"lineNumber": 93, "col_offset": 54, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "DataIterator"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "num_epochs", "type": "int"}, {"lineNumber": 61, "col_offset": 41, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 69, "col_offset": 42, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 70, "col_offset": 18, "nodeName": "self", "type": "DataIterator"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "get_padding_lengths", "type": "Callable[[], Dict[str, Dict[str, int]]]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 92, "col_offset": 50, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 27, "col_offset": 57, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 61, "col_offset": 50, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 69, "col_offset": 51, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "self", "type": "DataIterator"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "index_instances", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "batch", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 75, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 75, "col_offset": 58, "nodeName": "padding_lengths", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 47, "nodeName": "instances", "type": "List[allennlp.data.instance.Instance]"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "as_tensor_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "padding_lengths", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 81, "col_offset": 50, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 92, "col_offset": 50, "nodeName": "cls", "type": "Type[DataIterator]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 93, "col_offset": 27, "nodeName": "iterator_type", "type": "Any"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "_yield_one_epoch", "type": "Callable[[Iterable[allennlp.data.instance.Instance], bool, int, bool], Any]"}, {"lineNumber": 59, "col_offset": 49, "nodeName": "instances", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 59, "col_offset": 60, "nodeName": "shuffle", "type": "bool"}, {"lineNumber": 59, "col_offset": 69, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 59, "col_offset": 82, "nodeName": "for_training", "type": "bool"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "batch", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "self", "type": "DataIterator"}, {"lineNumber": 76, "col_offset": 47, "nodeName": "batch", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "batch", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 79, "col_offset": 52, "nodeName": "for_training", "type": "bool"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "cls", "type": "Type[DataIterator]"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "self", "type": "DataIterator"}, {"lineNumber": 27, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 27, "col_offset": 67, "nodeName": "Union", "type": "Any"}, {"lineNumber": 27, "col_offset": 73, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 27, "col_offset": 73, "nodeName": "numpy", "type": "module"}, {"lineNumber": 28, "col_offset": 73, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 28, "col_offset": 78, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 28, "col_offset": 83, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 28, "col_offset": 83, "nodeName": "numpy", "type": "module"}]