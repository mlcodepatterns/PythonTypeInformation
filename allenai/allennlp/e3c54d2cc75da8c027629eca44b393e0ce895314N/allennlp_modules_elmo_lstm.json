[{"lineNumber": 19, "col_offset": 15, "nodeName": "_EncoderBase", "type": "Type[allennlp.modules.encoder_base._EncoderBase]"}, {"lineNumber": 105, "col_offset": 43, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "input_size", "type": "int"}, {"lineNumber": 68, "col_offset": 26, "nodeName": "input_size", "type": "int"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "cell_size", "type": "int"}, {"lineNumber": 71, "col_offset": 25, "nodeName": "cell_size", "type": "int"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "forward_layers", "type": "List[allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "backward_layers", "type": "List[allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "lstm_input_size", "type": "int"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "input_size", "type": "int"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "go_forward", "type": "bool"}, {"lineNumber": 79, "col_offset": 12, "nodeName": "layer_index", "type": "int"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "forward_layers", "type": "List[allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection]"}, {"lineNumber": 100, "col_offset": 30, "nodeName": "forward_layers", "type": "List[allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "backward_layers", "type": "List[allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection]"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "backward_layers", "type": "List[allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "sequence_length_difference", "type": "Any"}, {"lineNumber": 105, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "forward_output_sequence", "type": "Any"}, {"lineNumber": 196, "col_offset": 34, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "backward_output_sequence", "type": "Any"}, {"lineNumber": 197, "col_offset": 35, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "final_states", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "sequence_outputs", "type": "List[Any]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "stacked_sequence_outputs", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 79, "col_offset": 33, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "lstm_input_size", "type": "int"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "total_sequence_length", "type": "Any"}, {"lineNumber": 120, "col_offset": 44, "nodeName": "size", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "sort_and_run_forward", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "_lstm_forward", "type": "Callable[..., Tuple[Any, Tuple[Any, Any]]]"}, {"lineNumber": 122, "col_offset": 58, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 122, "col_offset": 66, "nodeName": "mask", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "num_valid", "type": "Any"}, {"lineNumber": 124, "col_offset": 31, "nodeName": "returned_timesteps", "type": "Any"}, {"lineNumber": 124, "col_offset": 51, "nodeName": "encoder_dim", "type": "Any"}, {"lineNumber": 124, "col_offset": 65, "nodeName": "size", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "num_valid", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "stacked_sequence_output", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "new_states", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "final_states", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "final_states", "type": "List[Any]"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "new_states", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 37, "nodeName": "total_sequence_length", "type": "Any"}, {"lineNumber": 147, "col_offset": 61, "nodeName": "returned_timesteps", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "sequence_length_difference", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "stacked_sequence_output", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "_update_states", "type": "Callable[[Tuple[Any, ...], Any], None]"}, {"lineNumber": 156, "col_offset": 28, "nodeName": "final_states", "type": "Any"}, {"lineNumber": 156, "col_offset": 42, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 160, "col_offset": 55, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 186, "col_offset": 11, "nodeName": "initial_state", "type": "Optional[Tuple[Any, Any]]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "batch_lengths", "type": "Any"}, {"lineNumber": 195, "col_offset": 32, "nodeName": "pad_packed_sequence", "type": "Any"}, {"lineNumber": 195, "col_offset": 52, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "layer_index", "type": "int"}, {"lineNumber": 201, "col_offset": 25, "nodeName": "state", "type": "Optional[Tuple[Any, Any]]"}, {"lineNumber": 201, "col_offset": 34, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 201, "col_offset": 44, "nodeName": "hidden_states", "type": "Union[List[Tuple[Any, Any]], List[Optional[Tuple[Any, Any]]]]"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "forward_cache", "type": "Any"}, {"lineNumber": 205, "col_offset": 28, "nodeName": "forward_output_sequence", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "backward_cache", "type": "Any"}, {"lineNumber": 206, "col_offset": 29, "nodeName": "backward_output_sequence", "type": "Any"}, {"lineNumber": 235, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 235, "col_offset": 54, "nodeName": "stack", "type": "Any"}, {"lineNumber": 235, "col_offset": 66, "nodeName": "sequence_outputs", "type": "List[Any]"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "final_hidden_states", "type": "Any"}, {"lineNumber": 239, "col_offset": 29, "nodeName": "final_memory_states", "type": "Any"}, {"lineNumber": 239, "col_offset": 51, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "stacked_sequence_outputs", "type": "Any"}, {"lineNumber": 243, "col_offset": 41, "nodeName": "final_state_tuple", "type": "Tuple[Any, Any]"}, {"lineNumber": 245, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 251, "col_offset": 57, "nodeName": "fin", "type": "Any"}, {"lineNumber": 64, "col_offset": 46, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "LstmCellWithProjection", "type": "Type[allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection]"}, {"lineNumber": 80, "col_offset": 51, "nodeName": "lstm_input_size", "type": "int"}, {"lineNumber": 81, "col_offset": 51, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 82, "col_offset": 51, "nodeName": "cell_size", "type": "int"}, {"lineNumber": 83, "col_offset": 51, "nodeName": "go_forward", "type": "bool"}, {"lineNumber": 84, "col_offset": 51, "nodeName": "recurrent_dropout_probability", "type": "float"}, {"lineNumber": 85, "col_offset": 51, "nodeName": "memory_cell_clip_value", "type": "Optional[float]"}, {"lineNumber": 86, "col_offset": 51, "nodeName": "state_projection_clip_value", "type": "Optional[float]"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "LstmCellWithProjection", "type": "Type[allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection]"}, {"lineNumber": 87, "col_offset": 52, "nodeName": "lstm_input_size", "type": "int"}, {"lineNumber": 88, "col_offset": 52, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 89, "col_offset": 52, "nodeName": "cell_size", "type": "int"}, {"lineNumber": 91, "col_offset": 52, "nodeName": "recurrent_dropout_probability", "type": "float"}, {"lineNumber": 92, "col_offset": 52, "nodeName": "memory_cell_clip_value", "type": "Optional[float]"}, {"lineNumber": 93, "col_offset": 52, "nodeName": "state_projection_clip_value", "type": "Optional[float]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "add_module", "type": "Any"}, {"lineNumber": 96, "col_offset": 68, "nodeName": "forward_layer", "type": "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "add_module", "type": "Any"}, {"lineNumber": 97, "col_offset": 69, "nodeName": "backward_layer", "type": "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 98, "col_offset": 34, "nodeName": "forward_layer", "type": "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "backward_layer", "type": "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection"}, {"lineNumber": 104, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 120, "col_offset": 44, "nodeName": "mask", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 124, "col_offset": 65, "nodeName": "stacked_sequence_output", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "cat", "type": "Any"}, {"lineNumber": 137, "col_offset": 16, "nodeName": "state_dim", "type": "Any"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 153, "col_offset": 29, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 154, "col_offset": 38, "nodeName": "cat", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "stacked_sequence_output", "type": "Any"}, {"lineNumber": 164, "col_offset": 37, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "hidden_states", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 202, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 202, "col_offset": 36, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 203, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 203, "col_offset": 37, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "forward_state", "type": "Tuple[Any, Any]"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "backward_state", "type": "Tuple[Any, Any]"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "forward_state", "type": "None"}, {"lineNumber": 215, "col_offset": 16, "nodeName": "backward_state", "type": "None"}, {"lineNumber": 217, "col_offset": 53, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 217, "col_offset": 67, "nodeName": "forward_output_sequence", "type": "Any"}, {"lineNumber": 218, "col_offset": 67, "nodeName": "batch_lengths", "type": "Any"}, {"lineNumber": 219, "col_offset": 67, "nodeName": "forward_state", "type": "Optional[Tuple[Any, Any]]"}, {"lineNumber": 220, "col_offset": 55, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 220, "col_offset": 70, "nodeName": "backward_output_sequence", "type": "Any"}, {"lineNumber": 221, "col_offset": 70, "nodeName": "batch_lengths", "type": "Any"}, {"lineNumber": 222, "col_offset": 70, "nodeName": "backward_state", "type": "Optional[Tuple[Any, Any]]"}, {"lineNumber": 224, "col_offset": 15, "nodeName": "layer_index", "type": "int"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "forward_output_sequence", "type": "Any"}, {"lineNumber": 225, "col_offset": 43, "nodeName": "forward_cache", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "backward_output_sequence", "type": "Any"}, {"lineNumber": 226, "col_offset": 44, "nodeName": "backward_cache", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 239, "col_offset": 56, "nodeName": "final_states", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 241, "col_offset": 55, "nodeName": "cat", "type": "Any"}, {"lineNumber": 241, "col_offset": 65, "nodeName": "final_hidden_states", "type": "Any"}, {"lineNumber": 242, "col_offset": 55, "nodeName": "cat", "type": "Any"}, {"lineNumber": 242, "col_offset": 65, "nodeName": "final_memory_states", "type": "Any"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 251, "col_offset": 13, "nodeName": "File", "type": "Any"}, {"lineNumber": 252, "col_offset": 34, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 64, "col_offset": 55, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 65, "col_offset": 14, "nodeName": "ElmoLstm", "type": "Type[ElmoLstm]"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 90, "col_offset": 56, "nodeName": "go_forward", "type": "bool"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 96, "col_offset": 54, "nodeName": "layer_index", "type": "int"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 97, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 97, "col_offset": 55, "nodeName": "layer_index", "type": "int"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "forward_layers", "type": "List[allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "backward_layers", "type": "List[allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection]"}, {"lineNumber": 132, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 132, "col_offset": 49, "nodeName": "stacked_sequence_output", "type": "Any"}, {"lineNumber": 132, "col_offset": 74, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "size", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 154, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 154, "col_offset": 49, "nodeName": "stacked_sequence_output", "type": "Any"}, {"lineNumber": 154, "col_offset": 74, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 188, "col_offset": 74, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 188, "col_offset": 78, "nodeName": "forward_layers", "type": "List[allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection]"}, {"lineNumber": 189, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 189, "col_offset": 47, "nodeName": "forward_layers", "type": "List[allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection]"}, {"lineNumber": 190, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 202, "col_offset": 42, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 202, "col_offset": 68, "nodeName": "layer_index", "type": "int"}, {"lineNumber": 203, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 203, "col_offset": 70, "nodeName": "layer_index", "type": "int"}, {"lineNumber": 209, "col_offset": 16, "nodeName": "forward_hidden_state", "type": "Any"}, {"lineNumber": 209, "col_offset": 38, "nodeName": "backward_hidden_state", "type": "Any"}, {"lineNumber": 209, "col_offset": 62, "nodeName": "split", "type": "Any"}, {"lineNumber": 209, "col_offset": 77, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "forward_memory_state", "type": "Any"}, {"lineNumber": 210, "col_offset": 38, "nodeName": "backward_memory_state", "type": "Any"}, {"lineNumber": 210, "col_offset": 62, "nodeName": "split", "type": "Any"}, {"lineNumber": 210, "col_offset": 77, "nodeName": "cell_size", "type": "int"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "forward_hidden_state", "type": "Any"}, {"lineNumber": 211, "col_offset": 55, "nodeName": "forward_memory_state", "type": "Any"}, {"lineNumber": 212, "col_offset": 34, "nodeName": "backward_hidden_state", "type": "Any"}, {"lineNumber": 212, "col_offset": 57, "nodeName": "backward_memory_state", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "sequence_outputs", "type": "List[Any]"}, {"lineNumber": 228, "col_offset": 36, "nodeName": "cat", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "final_states", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 242, "col_offset": 55, "nodeName": "torch", "type": "Any"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 251, "col_offset": 13, "nodeName": "h5py", "type": "Any"}, {"lineNumber": 251, "col_offset": 23, "nodeName": "cached_path", "type": "Callable[..., str]"}, {"lineNumber": 251, "col_offset": 35, "nodeName": "weight_file", "type": "str"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 253, "col_offset": 24, "nodeName": "forward_layers", "type": "List[allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection]"}, {"lineNumber": 253, "col_offset": 45, "nodeName": "backward_layers", "type": "List[allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection]"}, {"lineNumber": 255, "col_offset": 20, "nodeName": "j_direction", "type": "int"}, {"lineNumber": 255, "col_offset": 33, "nodeName": "lstm", "type": "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection"}, {"lineNumber": 255, "col_offset": 41, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 255, "col_offset": 51, "nodeName": "lstms", "type": "Tuple[allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection, allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection]"}, {"lineNumber": 257, "col_offset": 20, "nodeName": "cell_size", "type": "int"}, {"lineNumber": 257, "col_offset": 32, "nodeName": "cell_size", "type": "int"}, {"lineNumber": 266, "col_offset": 20, "nodeName": "tf_weights", "type": "Any"}, {"lineNumber": 267, "col_offset": 20, "nodeName": "torch_weights", "type": "Any"}, {"lineNumber": 270, "col_offset": 20, "nodeName": "input_size", "type": "int"}, {"lineNumber": 270, "col_offset": 33, "nodeName": "input_size", "type": "int"}, {"lineNumber": 271, "col_offset": 20, "nodeName": "input_weights", "type": "Any"}, {"lineNumber": 272, "col_offset": 20, "nodeName": "recurrent_weights", "type": "Any"}, {"lineNumber": 273, "col_offset": 20, "nodeName": "tf_input_weights", "type": "Any"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "tf_recurrent_weights", "type": "Any"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 284, "col_offset": 64, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 285, "col_offset": 64, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 288, "col_offset": 20, "nodeName": "tf_bias", "type": "Any"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "torch_bias", "type": "Any"}, {"lineNumber": 298, "col_offset": 20, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 298, "col_offset": 62, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "proj_weights", "type": "Any"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 303, "col_offset": 65, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "new", "type": "Any"}, {"lineNumber": 127, "col_offset": 53, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 129, "col_offset": 53, "nodeName": "returned_timesteps", "type": "Any"}, {"lineNumber": 130, "col_offset": 53, "nodeName": "encoder_dim", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "state", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "new_states", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "cat", "type": "Any"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "new", "type": "Any"}, {"lineNumber": 149, "col_offset": 53, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 150, "col_offset": 53, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 151, "col_offset": 53, "nodeName": "sequence_length_difference", "type": "Any"}, {"lineNumber": 164, "col_offset": 46, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 188, "col_offset": 78, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 189, "col_offset": 13, "nodeName": "size", "type": "Any"}, {"lineNumber": 189, "col_offset": 47, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 193, "col_offset": 33, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 209, "col_offset": 77, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 210, "col_offset": 77, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 228, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 228, "col_offset": 47, "nodeName": "forward_output_sequence", "type": "Any"}, {"lineNumber": 229, "col_offset": 47, "nodeName": "backward_output_sequence", "type": "Any"}, {"lineNumber": 232, "col_offset": 33, "nodeName": "cat", "type": "Any"}, {"lineNumber": 233, "col_offset": 33, "nodeName": "cat", "type": "Any"}, {"lineNumber": 241, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 253, "col_offset": 24, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 253, "col_offset": 45, "nodeName": "self", "type": "ElmoLstm"}, {"lineNumber": 257, "col_offset": 32, "nodeName": "lstm", "type": "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection"}, {"lineNumber": 266, "col_offset": 33, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 267, "col_offset": 36, "nodeName": "copy", "type": "Any"}, {"lineNumber": 270, "col_offset": 33, "nodeName": "lstm", "type": "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection"}, {"lineNumber": 271, "col_offset": 36, "nodeName": "torch_weights", "type": "Any"}, {"lineNumber": 272, "col_offset": 40, "nodeName": "torch_weights", "type": "Any"}, {"lineNumber": 273, "col_offset": 39, "nodeName": "tf_weights", "type": "Any"}, {"lineNumber": 274, "col_offset": 43, "nodeName": "tf_weights", "type": "Any"}, {"lineNumber": 282, "col_offset": 20, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "weight", "type": "Any"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "weight", "type": "Any"}, {"lineNumber": 291, "col_offset": 20, "nodeName": "tf_bias", "type": "Any"}, {"lineNumber": 292, "col_offset": 33, "nodeName": "copy", "type": "Any"}, {"lineNumber": 294, "col_offset": 34, "nodeName": "tf_bias", "type": "Any"}, {"lineNumber": 296, "col_offset": 34, "nodeName": "tf_bias", "type": "Any"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 298, "col_offset": 20, "nodeName": "bias", "type": "Any"}, {"lineNumber": 301, "col_offset": 35, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 302, "col_offset": 20, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "weight", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 128, "col_offset": 53, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 128, "col_offset": 66, "nodeName": "num_valid", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "new", "type": "Any"}, {"lineNumber": 138, "col_offset": 39, "nodeName": "num_layers", "type": "Any"}, {"lineNumber": 138, "col_offset": 75, "nodeName": "state_dim", "type": "Any"}, {"lineNumber": 140, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 140, "col_offset": 45, "nodeName": "state", "type": "Any"}, {"lineNumber": 140, "col_offset": 52, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 152, "col_offset": 53, "nodeName": "size", "type": "Any"}, {"lineNumber": 193, "col_offset": 37, "nodeName": "split", "type": "Any"}, {"lineNumber": 193, "col_offset": 67, "nodeName": "split", "type": "Any"}, {"lineNumber": 209, "col_offset": 62, "nodeName": "state", "type": "Any"}, {"lineNumber": 210, "col_offset": 62, "nodeName": "state", "type": "Any"}, {"lineNumber": 232, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 233, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 165, "col_offset": 38, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 165, "col_offset": 52, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 266, "col_offset": 33, "nodeName": "numpy", "type": "module"}, {"lineNumber": 267, "col_offset": 36, "nodeName": "tf_weights", "type": "Any"}, {"lineNumber": 277, "col_offset": 43, "nodeName": "input_weights", "type": "Any"}, {"lineNumber": 277, "col_offset": 58, "nodeName": "tf_input_weights", "type": "Any"}, {"lineNumber": 278, "col_offset": 43, "nodeName": "recurrent_weights", "type": "Any"}, {"lineNumber": 278, "col_offset": 62, "nodeName": "tf_recurrent_weights", "type": "Any"}, {"lineNumber": 279, "col_offset": 24, "nodeName": "torch_w", "type": "Any"}, {"lineNumber": 279, "col_offset": 70, "nodeName": "tf_w", "type": "Any"}, {"lineNumber": 280, "col_offset": 24, "nodeName": "torch_w", "type": "Any"}, {"lineNumber": 280, "col_offset": 70, "nodeName": "tf_w", "type": "Any"}, {"lineNumber": 282, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 282, "col_offset": 59, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 282, "col_offset": 77, "nodeName": "input_weights", "type": "Any"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 283, "col_offset": 59, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 283, "col_offset": 77, "nodeName": "recurrent_weights", "type": "Any"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "input_linearity", "type": "Any"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "state_linearity", "type": "Any"}, {"lineNumber": 288, "col_offset": 30, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 292, "col_offset": 33, "nodeName": "tf_bias", "type": "Any"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 297, "col_offset": 57, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 297, "col_offset": 75, "nodeName": "torch_bias", "type": "Any"}, {"lineNumber": 298, "col_offset": 20, "nodeName": "state_linearity", "type": "Any"}, {"lineNumber": 301, "col_offset": 35, "nodeName": "numpy", "type": "module"}, {"lineNumber": 302, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 302, "col_offset": 60, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 302, "col_offset": 78, "nodeName": "proj_weights", "type": "Any"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "state_projection", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "stacked_sequence_output", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 138, "col_offset": 51, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 138, "col_offset": 64, "nodeName": "num_valid", "type": "Any"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "stacked_sequence_output", "type": "Any"}, {"lineNumber": 164, "col_offset": 52, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 164, "col_offset": 66, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 189, "col_offset": 13, "nodeName": "initial_state", "type": "Optional[Tuple[Any, Any]]"}, {"lineNumber": 232, "col_offset": 44, "nodeName": "forward_state", "type": "Any"}, {"lineNumber": 232, "col_offset": 62, "nodeName": "backward_state", "type": "Any"}, {"lineNumber": 233, "col_offset": 44, "nodeName": "forward_state", "type": "Any"}, {"lineNumber": 233, "col_offset": 62, "nodeName": "backward_state", "type": "Any"}, {"lineNumber": 165, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 165, "col_offset": 52, "nodeName": "torch", "type": "Any"}, {"lineNumber": 266, "col_offset": 49, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 271, "col_offset": 54, "nodeName": "input_size", "type": "int"}, {"lineNumber": 272, "col_offset": 57, "nodeName": "input_size", "type": "int"}, {"lineNumber": 273, "col_offset": 54, "nodeName": "input_size", "type": "int"}, {"lineNumber": 274, "col_offset": 57, "nodeName": "input_size", "type": "int"}, {"lineNumber": 282, "col_offset": 20, "nodeName": "weight", "type": "Any"}, {"lineNumber": 282, "col_offset": 59, "nodeName": "torch", "type": "Any"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "weight", "type": "Any"}, {"lineNumber": 283, "col_offset": 59, "nodeName": "torch", "type": "Any"}, {"lineNumber": 284, "col_offset": 20, "nodeName": "lstm", "type": "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection"}, {"lineNumber": 285, "col_offset": 20, "nodeName": "lstm", "type": "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection"}, {"lineNumber": 291, "col_offset": 33, "nodeName": "cell_size", "type": "int"}, {"lineNumber": 291, "col_offset": 49, "nodeName": "cell_size", "type": "int"}, {"lineNumber": 294, "col_offset": 47, "nodeName": "cell_size", "type": "int"}, {"lineNumber": 294, "col_offset": 63, "nodeName": "cell_size", "type": "int"}, {"lineNumber": 296, "col_offset": 47, "nodeName": "cell_size", "type": "int"}, {"lineNumber": 296, "col_offset": 63, "nodeName": "cell_size", "type": "int"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "bias", "type": "Any"}, {"lineNumber": 297, "col_offset": 57, "nodeName": "torch", "type": "Any"}, {"lineNumber": 298, "col_offset": 20, "nodeName": "lstm", "type": "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection"}, {"lineNumber": 301, "col_offset": 51, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 302, "col_offset": 20, "nodeName": "weight", "type": "Any"}, {"lineNumber": 302, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 303, "col_offset": 20, "nodeName": "lstm", "type": "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "state", "type": "Any"}, {"lineNumber": 152, "col_offset": 53, "nodeName": "stacked_sequence_output", "type": "Any"}, {"lineNumber": 164, "col_offset": 52, "nodeName": "torch", "type": "Any"}, {"lineNumber": 164, "col_offset": 66, "nodeName": "torch", "type": "Any"}, {"lineNumber": 193, "col_offset": 37, "nodeName": "initial_state", "type": "Optional[Tuple[Any, Any]]"}, {"lineNumber": 193, "col_offset": 67, "nodeName": "initial_state", "type": "Optional[Tuple[Any, Any]]"}, {"lineNumber": 259, "col_offset": 92, "nodeName": "i_layer", "type": "int"}, {"lineNumber": 282, "col_offset": 20, "nodeName": "input_linearity", "type": "Any"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "state_linearity", "type": "Any"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "state_linearity", "type": "Any"}, {"lineNumber": 302, "col_offset": 20, "nodeName": "state_projection", "type": "Any"}, {"lineNumber": 259, "col_offset": 30, "nodeName": "fin", "type": "Any"}, {"lineNumber": 279, "col_offset": 37, "nodeName": "cell_size", "type": "int"}, {"lineNumber": 279, "col_offset": 53, "nodeName": "cell_size", "type": "int"}, {"lineNumber": 279, "col_offset": 80, "nodeName": "cell_size", "type": "int"}, {"lineNumber": 279, "col_offset": 96, "nodeName": "cell_size", "type": "int"}, {"lineNumber": 280, "col_offset": 37, "nodeName": "cell_size", "type": "int"}, {"lineNumber": 280, "col_offset": 53, "nodeName": "cell_size", "type": "int"}, {"lineNumber": 280, "col_offset": 80, "nodeName": "cell_size", "type": "int"}, {"lineNumber": 280, "col_offset": 96, "nodeName": "cell_size", "type": "int"}, {"lineNumber": 282, "col_offset": 20, "nodeName": "lstm", "type": "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection"}, {"lineNumber": 283, "col_offset": 20, "nodeName": "lstm", "type": "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection"}, {"lineNumber": 297, "col_offset": 20, "nodeName": "lstm", "type": "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection"}, {"lineNumber": 302, "col_offset": 20, "nodeName": "lstm", "type": "allennlp.modules.lstm_cell_with_projection.LstmCellWithProjection"}, {"lineNumber": 259, "col_offset": 45, "nodeName": "j_direction", "type": "int"}]