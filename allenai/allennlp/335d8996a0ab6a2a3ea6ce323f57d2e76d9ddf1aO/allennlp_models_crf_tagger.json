[{"lineNumber": 20, "col_offset": 16, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "label_namespace", "type": "str"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "label_namespace", "type": "str"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "num_tags", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "_verbose_metrics", "type": "bool"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "verbose_metrics", "type": "bool"}, {"lineNumber": 99, "col_offset": 11, "nodeName": "dropout", "type": "Optional[float]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "_feedforward", "type": "Optional[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 103, "col_offset": 28, "nodeName": "feedforward", "type": "Optional[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "label_encoding", "type": "Optional[str]"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "label_encoding", "type": "Optional[str]"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "constrain_crf_decoding", "type": "bool"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "include_start_end_transitions", "type": "bool"}, {"lineNumber": 137, "col_offset": 45, "nodeName": "include_start_end_transitions", "type": "bool"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "calculate_span_f1", "type": "bool"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "calculate_span_f1", "type": "bool"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "calculate_span_f1", "type": "bool"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "best_paths", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "predicted_tags", "type": "List[Any]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "output", "type": "Dict[str, Any]"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "output", "type": "Dict[str, Any]"}, {"lineNumber": 174, "col_offset": 29, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 250, "col_offset": 62, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 269, "col_offset": 11, "nodeName": "calculate_span_f1", "type": "Any"}, {"lineNumber": 277, "col_offset": 15, "nodeName": "metrics_to_return", "type": "Dict[Any, Any]"}, {"lineNumber": 265, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 92, "col_offset": 32, "nodeName": "regularizer", "type": "Optional[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "get_vocab_size", "type": "Any"}, {"lineNumber": 96, "col_offset": 50, "nodeName": "label_namespace", "type": "str"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "dropout", "type": "None"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "feedforward", "type": "Optional[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "output_dim", "type": "Union[int, Sequence[int]]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "output_dim", "type": "int"}, {"lineNumber": 109, "col_offset": 36, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "constraint_type", "type": "Optional[str]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "label_encoding", "type": "Optional[str]"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "constraint_type", "type": "Optional[str]"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "constrain_crf_decoding", "type": "bool"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "calculate_span_f1", "type": "bool"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "labels", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "constraints", "type": "List[Tuple[int, int]]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "constraints", "type": "None"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 19, "nodeName": "ConditionalRandomField", "type": "Type[allennlp.modules.conditional_random_field.ConditionalRandomField]"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "num_tags", "type": "Any"}, {"lineNumber": 139, "col_offset": 31, "nodeName": "constraints", "type": "Optional[List[Tuple[int, int]]]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "check_dimensions_match", "type": "Callable[[int, int, str, str], None]"}, {"lineNumber": 163, "col_offset": 11, "nodeName": "feedforward", "type": "Optional[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 166, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 30, "nodeName": "text_field_embedder", "type": "Any"}, {"lineNumber": 207, "col_offset": 55, "nodeName": "tokens", "type": "Dict[str, Any]"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "get_text_field_mask", "type": "Callable[..., Any]"}, {"lineNumber": 208, "col_offset": 40, "nodeName": "tokens", "type": "Dict[str, Any]"}, {"lineNumber": 210, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 213, "col_offset": 36, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 213, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 215, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "_feedforward", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "tag_projection_layer", "type": "Any"}, {"lineNumber": 221, "col_offset": 43, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "viterbi_tags", "type": "Any"}, {"lineNumber": 222, "col_offset": 43, "nodeName": "logits", "type": "Any"}, {"lineNumber": 222, "col_offset": 51, "nodeName": "mask", "type": "Any"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "x", "type": "Any"}, {"lineNumber": 227, "col_offset": 28, "nodeName": "logits", "type": "Any"}, {"lineNumber": 227, "col_offset": 44, "nodeName": "mask", "type": "Any"}, {"lineNumber": 227, "col_offset": 58, "nodeName": "predicted_tags", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 11, "nodeName": "tags", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "log_likelihood", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "class_probabilities", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "metric", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "calculate_span_f1", "type": "Any"}, {"lineNumber": 245, "col_offset": 11, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 265, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 269, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "f1_dict", "type": "Any"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "_verbose_metrics", "type": "Any"}, {"lineNumber": 91, "col_offset": 30, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 100, "col_offset": 44, "nodeName": "dropout", "type": "Optional[float]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "get_output_dim", "type": "Callable[[], Union[int, Sequence[int]]]"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 109, "col_offset": 52, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 109, "col_offset": 59, "nodeName": "output_dim", "type": "Union[Sequence[int], int]"}, {"lineNumber": 110, "col_offset": 59, "nodeName": "num_tags", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "warn", "type": "Callable"}, {"lineNumber": 116, "col_offset": 53, "nodeName": "DeprecationWarning", "type": "Type[DeprecationWarning]"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "label_encoding", "type": "Optional[str]"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "get_index_to_token_vocabulary", "type": "Any"}, {"lineNumber": 132, "col_offset": 62, "nodeName": "label_namespace", "type": "str"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "allowed_transitions", "type": "Callable[[str, Dict[int, str]], List[Tuple[int, int]]]"}, {"lineNumber": 133, "col_offset": 46, "nodeName": "label_encoding", "type": "Optional[str]"}, {"lineNumber": 133, "col_offset": 62, "nodeName": "labels", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 46, "nodeName": "include_start_end_transitions", "type": "bool"}, {"lineNumber": 144, "col_offset": 28, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "label_encoding", "type": "Optional[str]"}, {"lineNumber": 152, "col_offset": 30, "nodeName": "SpanBasedF1Measure", "type": "Any"}, {"lineNumber": 152, "col_offset": 49, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 155, "col_offset": 13, "nodeName": "constraint_type", "type": "Optional[str]"}, {"lineNumber": 161, "col_offset": 31, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 161, "col_offset": 69, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "check_dimensions_match", "type": "Callable[[int, int, str, str], None]"}, {"lineNumber": 172, "col_offset": 26, "nodeName": "List", "type": "Any"}, {"lineNumber": 207, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "util", "type": "module"}, {"lineNumber": 211, "col_offset": 34, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 211, "col_offset": 47, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 216, "col_offset": 27, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 216, "col_offset": 40, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 218, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 27, "nodeName": "_feedforward", "type": "Any"}, {"lineNumber": 219, "col_offset": 45, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 221, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "crf", "type": "Any"}, {"lineNumber": 225, "col_offset": 40, "nodeName": "best_paths", "type": "Any"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "crf", "type": "Any"}, {"lineNumber": 231, "col_offset": 38, "nodeName": "logits", "type": "Any"}, {"lineNumber": 231, "col_offset": 46, "nodeName": "tags", "type": "Any"}, {"lineNumber": 231, "col_offset": 52, "nodeName": "mask", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "output", "type": "Dict[str, Any]"}, {"lineNumber": 232, "col_offset": 30, "nodeName": "log_likelihood", "type": "Any"}, {"lineNumber": 236, "col_offset": 34, "nodeName": "logits", "type": "Any"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 237, "col_offset": 19, "nodeName": "instance_tags", "type": "Any"}, {"lineNumber": 237, "col_offset": 36, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 237, "col_offset": 46, "nodeName": "predicted_tags", "type": "List[Any]"}, {"lineNumber": 241, "col_offset": 26, "nodeName": "values", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "output", "type": "Dict[str, Any]"}, {"lineNumber": 174, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 174, "col_offset": 39, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 250, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 259, "col_offset": 20, "nodeName": "instance_tags", "type": "Any"}, {"lineNumber": 250, "col_offset": 67, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 250, "col_offset": 72, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 265, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 265, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 91, "col_offset": 39, "nodeName": "RegularizerApplicator", "type": "Type[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "feedforward", "type": "Optional[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 110, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "warnings", "type": "module"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 153, "col_offset": 63, "nodeName": "label_namespace", "type": "str"}, {"lineNumber": 154, "col_offset": 64, "nodeName": "label_encoding", "type": "Optional[str]"}, {"lineNumber": 157, "col_offset": 30, "nodeName": "SpanBasedF1Measure", "type": "Any"}, {"lineNumber": 157, "col_offset": 49, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 161, "col_offset": 31, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 161, "col_offset": 69, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 164, "col_offset": 61, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 211, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 216, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 222, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 225, "col_offset": 35, "nodeName": "y", "type": "Any"}, {"lineNumber": 231, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 20, "nodeName": "j", "type": "int"}, {"lineNumber": 238, "col_offset": 23, "nodeName": "tag_id", "type": "Any"}, {"lineNumber": 238, "col_offset": 33, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 238, "col_offset": 43, "nodeName": "instance_tags", "type": "Any"}, {"lineNumber": 241, "col_offset": 26, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "metric", "type": "Any"}, {"lineNumber": 242, "col_offset": 23, "nodeName": "class_probabilities", "type": "Any"}, {"lineNumber": 242, "col_offset": 44, "nodeName": "tags", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "_f1_metric", "type": "Any"}, {"lineNumber": 244, "col_offset": 32, "nodeName": "class_probabilities", "type": "Any"}, {"lineNumber": 244, "col_offset": 53, "nodeName": "tags", "type": "Any"}, {"lineNumber": 246, "col_offset": 31, "nodeName": "x", "type": "Dict[str, Any]"}, {"lineNumber": 246, "col_offset": 46, "nodeName": "x", "type": "Dict[str, Any]"}, {"lineNumber": 246, "col_offset": 51, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 174, "col_offset": 39, "nodeName": "torch", "type": "Any"}, {"lineNumber": 258, "col_offset": 21, "nodeName": "tag", "type": "Any"}, {"lineNumber": 259, "col_offset": 37, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 250, "col_offset": 72, "nodeName": "torch", "type": "Any"}, {"lineNumber": 267, "col_offset": 29, "nodeName": "metric_name", "type": "Any"}, {"lineNumber": 267, "col_offset": 42, "nodeName": "metric", "type": "Any"}, {"lineNumber": 267, "col_offset": 52, "nodeName": "items", "type": "Any"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "_f1_metric", "type": "Any"}, {"lineNumber": 270, "col_offset": 55, "nodeName": "reset", "type": "bool"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 272, "col_offset": 41, "nodeName": "f1_dict", "type": "Any"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "update", "type": "Callable"}, {"lineNumber": 100, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 132, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 63, "nodeName": "label_namespace", "type": "str"}, {"lineNumber": 159, "col_offset": 64, "nodeName": "constraint_type", "type": "Optional[str]"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 164, "col_offset": 61, "nodeName": "feedforward", "type": "Optional[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 172, "col_offset": 31, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 239, "col_offset": 20, "nodeName": "class_probabilities", "type": "Any"}, {"lineNumber": 241, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 50, "nodeName": "float", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 59, "nodeName": "float", "type": "Any"}, {"lineNumber": 250, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 250, "col_offset": 44, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 267, "col_offset": 52, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 270, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "metrics_to_return", "type": "Dict[Any, Any]"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "metrics_to_return", "type": "Dict[Any, Any]"}, {"lineNumber": 242, "col_offset": 50, "nodeName": "mask", "type": "Any"}, {"lineNumber": 244, "col_offset": 59, "nodeName": "mask", "type": "Any"}, {"lineNumber": 250, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 267, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 172, "col_offset": 41, "nodeName": "Any", "type": "Any"}, {"lineNumber": 239, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 239, "col_offset": 43, "nodeName": "j", "type": "int"}, {"lineNumber": 239, "col_offset": 46, "nodeName": "tag_id", "type": "Any"}, {"lineNumber": 275, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 275, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 275, "col_offset": 41, "nodeName": "items", "type": "Any"}, {"lineNumber": 276, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 275, "col_offset": 41, "nodeName": "f1_dict", "type": "Any"}]