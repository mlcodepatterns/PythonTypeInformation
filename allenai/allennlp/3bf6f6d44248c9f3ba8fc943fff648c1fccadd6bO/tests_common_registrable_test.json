[{"lineNumber": 24, "col_offset": 22, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 43, "col_offset": 19, "nodeName": "base_class", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "default", "type": "str"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "default_implementation", "type": "str"}, {"lineNumber": 46, "col_offset": 45, "nodeName": "Fake", "type": "Any"}, {"lineNumber": 48, "col_offset": 18, "nodeName": "base_class", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 49, "col_offset": 11, "nodeName": "default", "type": "str"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "default_implementation", "type": "str"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "default_implementation", "type": "str"}, {"lineNumber": 57, "col_offset": 48, "nodeName": "default", "type": "str"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "registrable_helper", "type": "Callable[[Type[allennlp.common.registrable.Registrable]], Any]"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "DatasetReader", "type": "Type[allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "registrable_helper", "type": "Callable[[Type[allennlp.common.registrable.Registrable]], Any]"}, {"lineNumber": 82, "col_offset": 32, "nodeName": "DataIterator", "type": "Type[allennlp.data.iterators.data_iterator.DataIterator]"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "registrable_helper", "type": "Callable[[Type[allennlp.common.registrable.Registrable]], Any]"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "Tokenizer", "type": "Type[allennlp.data.tokenizers.tokenizer.Tokenizer]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "registrable_helper", "type": "Callable[[Type[allennlp.common.registrable.Registrable]], Any]"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "TokenIndexer", "type": "Type[allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "__name__", "type": "str"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "registrable_helper", "type": "Callable[[Type[allennlp.common.registrable.Registrable]], Any]"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "Regularizer", "type": "Type[allennlp.training.regularizers.regularizer.Regularizer]"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "normal", "type": "Any"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "uniform", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "orthogonal", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "constant", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "dirac", "type": "Any"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "xavier_normal", "type": "Any"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "xavier_uniform", "type": "Any"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "kaiming_normal", "type": "Any"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "kaiming_uniform", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "sparse", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "eye", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 127, "col_offset": 17, "nodeName": "value", "type": "Any"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "items", "type": "Callable"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "registrable_helper", "type": "Callable[[Type[allennlp.common.registrable.Registrable]], Any]"}, {"lineNumber": 131, "col_offset": 32, "nodeName": "Initializer", "type": "Type[allennlp.training.initializers.initializer.Initializer]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "registrable_helper", "type": "Callable[[Type[allennlp.common.registrable.Registrable]], Any]"}, {"lineNumber": 140, "col_offset": 32, "nodeName": "TokenEmbedder", "type": "Type[allennlp.modules.token_embedders.token_embedder.TokenEmbedder]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "registrable_helper", "type": "Callable[[Type[allennlp.common.registrable.Registrable]], Any]"}, {"lineNumber": 148, "col_offset": 32, "nodeName": "TextFieldEmbedder", "type": "Type[allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "registrable_helper", "type": "Callable[[Type[allennlp.common.registrable.Registrable]], Any]"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "registrable_helper", "type": "Callable[[Type[allennlp.common.registrable.Registrable]], Any]"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "Seq2VecEncoder", "type": "Type[allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder]"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "registrable_helper", "type": "Callable[[Type[allennlp.common.registrable.Registrable]], Any]"}, {"lineNumber": 182, "col_offset": 32, "nodeName": "SimilarityFunction", "type": "Type[allennlp.modules.similarity_function.SimilarityFunction]"}, {"lineNumber": 28, "col_offset": 39, "nodeName": "Type", "type": "Any"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 50, "col_offset": 53, "nodeName": "default", "type": "str"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "base_class", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "default_implementation", "type": "str"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "base_class", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "_registry", "type": "Dict[Any, Dict[str, Any]]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "TestRegistrable"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "TestRegistrable"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "TestRegistrable"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "TestRegistrable"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "TestRegistrable"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "init", "type": "Any"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "init", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "init", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "init", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "init", "type": "Any"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "init", "type": "Any"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "init", "type": "Any"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "init", "type": "Any"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "init", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "init", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "init", "type": "Any"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "all_initializers", "type": "Dict[str, Any]"}, {"lineNumber": 128, "col_offset": 47, "nodeName": "value", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestRegistrable"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "self", "type": "TestRegistrable"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestRegistrable"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "_module_class", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "_module_class", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "_module_class", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "self", "type": "TestRegistrable"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "_module_class", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "_module_class", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "_module_class", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "self", "type": "TestRegistrable"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "TestRegistrable"}, {"lineNumber": 28, "col_offset": 44, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "base_class", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "base_class", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "raises", "type": "Any"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "base_class", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "base_class", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "nn", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "nn", "type": "Any"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 128, "col_offset": 39, "nodeName": "key", "type": "str"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "by_name", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "by_name", "type": "Any"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "by_name", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "by_name", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "by_name", "type": "Any"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "by_name", "type": "Any"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "by_name", "type": "Any"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "by_name", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 54, "col_offset": 17, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "base_class", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "DatasetReader", "type": "Type[allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "DatasetReader", "type": "Type[allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "DatasetReader", "type": "Type[allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "DatasetReader", "type": "Type[allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "DataIterator", "type": "Type[allennlp.data.iterators.data_iterator.DataIterator]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "DataIterator", "type": "Type[allennlp.data.iterators.data_iterator.DataIterator]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "DataIterator", "type": "Type[allennlp.data.iterators.data_iterator.DataIterator]"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "Tokenizer", "type": "Type[allennlp.data.tokenizers.tokenizer.Tokenizer]"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "Tokenizer", "type": "Type[allennlp.data.tokenizers.tokenizer.Tokenizer]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "TokenIndexer", "type": "Type[allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "TokenIndexer", "type": "Type[allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "Regularizer", "type": "Type[allennlp.training.regularizers.regularizer.Regularizer]"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "Regularizer", "type": "Type[allennlp.training.regularizers.regularizer.Regularizer]"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 125, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "Initializer", "type": "Type[allennlp.training.initializers.initializer.Initializer]"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "TokenEmbedder", "type": "Type[allennlp.modules.token_embedders.token_embedder.TokenEmbedder]"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "TokenEmbedder", "type": "Type[allennlp.modules.token_embedders.token_embedder.TokenEmbedder]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "TextFieldEmbedder", "type": "Type[allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "by_name", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "by_name", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "by_name", "type": "Any"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "Seq2VecEncoder", "type": "Type[allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder]"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "by_name", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "by_name", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "by_name", "type": "Any"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "SimilarityFunction", "type": "Type[allennlp.modules.similarity_function.SimilarityFunction]"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "SimilarityFunction", "type": "Type[allennlp.modules.similarity_function.SimilarityFunction]"}, {"lineNumber": 178, "col_offset": 15, "nodeName": "SimilarityFunction", "type": "Type[allennlp.modules.similarity_function.SimilarityFunction]"}, {"lineNumber": 179, "col_offset": 15, "nodeName": "SimilarityFunction", "type": "Type[allennlp.modules.similarity_function.SimilarityFunction]"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "base_class", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "base_class", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "Seq2VecEncoder", "type": "Type[allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder]"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "Seq2VecEncoder", "type": "Type[allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "Seq2VecEncoder", "type": "Type[allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder]"}]