[{"lineNumber": 10, "col_offset": 20, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "bioul_sequence", "type": "List[str]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "bioul_sequence", "type": "List[str]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "bioul_sequence", "type": "List[str]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 252, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 272, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 13, "col_offset": 16, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 13, "col_offset": 45, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 39, "col_offset": 45, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 50, "col_offset": 45, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 60, "col_offset": 45, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 76, "col_offset": 45, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "iob1_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "iob1_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 91, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "iob1_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 96, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "iob1_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 123, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "SpacyTokenizer", "type": "Any"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "enumerate_spans", "type": "Callable[..., List[Tuple[int, int]]]"}, {"lineNumber": 136, "col_offset": 43, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "enumerate_spans", "type": "Callable[..., List[Tuple[int, int]]]"}, {"lineNumber": 155, "col_offset": 43, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "enumerate_spans", "type": "Callable[..., List[Tuple[int, int]]]"}, {"lineNumber": 158, "col_offset": 43, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "enumerate_spans", "type": "Callable[..., List[Tuple[int, int]]]"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 171, "col_offset": 15, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "bioul_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 175, "col_offset": 47, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "bioul_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 184, "col_offset": 47, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "to_bioul", "type": "Callable[..., List[str]]"}, {"lineNumber": 193, "col_offset": 45, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "bioul_sequence", "type": "List[str]"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "to_bioul", "type": "Callable[..., List[str]]"}, {"lineNumber": 197, "col_offset": 45, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "bioul_sequence", "type": "List[str]"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "to_bioul", "type": "Callable[..., List[str]]"}, {"lineNumber": 202, "col_offset": 45, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "bioul_sequence", "type": "List[str]"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "bioul_sequence", "type": "List[str]"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 212, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 216, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 221, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 225, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 229, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 233, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 238, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 242, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 248, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 252, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 257, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 261, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 265, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 269, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 273, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 277, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 281, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 285, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 13, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 23, "col_offset": 27, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 24, "col_offset": 49, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 56, "col_offset": 49, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "iob1_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 87, "col_offset": 50, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 92, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "iob1_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 108, "col_offset": 50, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 165, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 166, "col_offset": 74, "nodeName": "no_prefixed_punctuation", "type": "Callable[[List[allennlp.data.tokenizers.token.Token]], Any]"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "bioul_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 180, "col_offset": 51, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "bioul_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 189, "col_offset": 51, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 197, "col_offset": 25, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 206, "col_offset": 27, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 208, "col_offset": 29, "nodeName": "to_bioul", "type": "Callable[..., List[str]]"}, {"lineNumber": 208, "col_offset": 49, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 213, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 213, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 217, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 222, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 226, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 230, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 234, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 243, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 249, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 252, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 258, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 261, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 262, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 265, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 266, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 269, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 273, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 274, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 274, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 277, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 278, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 278, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 282, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 285, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 286, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 23, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 23, "col_offset": 27, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 86, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 161, "col_offset": 44, "nodeName": "List", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "pos_", "type": "Any"}, {"lineNumber": 163, "col_offset": 49, "nodeName": "pos_", "type": "Any"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 179, "col_offset": 27, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 188, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 189, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 206, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 206, "col_offset": 27, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 208, "col_offset": 29, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 161, "col_offset": 49, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "tokens", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 163, "col_offset": 49, "nodeName": "tokens", "type": "List[allennlp.data.tokenizers.token.Token]"}]