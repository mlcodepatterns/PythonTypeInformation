[{"lineNumber": 12, "col_offset": 28, "nodeName": "Scheduler", "type": "Type[allennlp.training.scheduler.Scheduler]"}, {"lineNumber": 12, "col_offset": 39, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 21, "col_offset": 43, "nodeName": "LearningRateScheduler", "type": "Type[LearningRateScheduler]"}, {"lineNumber": 41, "col_offset": 54, "nodeName": "_PyTorchLearningRateSchedulerWrapper", "type": "Type[_PyTorchLearningRateSchedulerWrapper]"}, {"lineNumber": 54, "col_offset": 32, "nodeName": "_PyTorchLearningRateSchedulerWrapper", "type": "Type[_PyTorchLearningRateSchedulerWrapper]"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "_PyTorchLearningRateSchedulerWrapper", "type": "Type[_PyTorchLearningRateSchedulerWrapper]"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "_PyTorchLearningRateSchedulerWrapper", "type": "Type[_PyTorchLearningRateSchedulerWrapper]"}, {"lineNumber": 97, "col_offset": 43, "nodeName": "_PyTorchLearningRateSchedulerWithMetricsWrapper", "type": "Type[_PyTorchLearningRateSchedulerWithMetricsWrapper]"}, {"lineNumber": 18, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 13, "col_offset": 34, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 13, "col_offset": 69, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 14, "col_offset": 25, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 14, "col_offset": 42, "nodeName": "last_epoch", "type": "int"}, {"lineNumber": 22, "col_offset": 37, "nodeName": "_LRScheduler", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "_PyTorchLearningRateSchedulerWithMetricsWrapper"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "get_last_lr", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 38, "col_offset": 42, "nodeName": "state_dict", "type": "Dict[str, Any]"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "metric", "type": "float"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 50, "col_offset": 31, "nodeName": "metric", "type": "float"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 60, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 60, "col_offset": 59, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 60, "col_offset": 84, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "StepLR", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 75, "col_offset": 25, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 75, "col_offset": 66, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 75, "col_offset": 91, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "MultiStepLR", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 80, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 89, "col_offset": 34, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 89, "col_offset": 52, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 89, "col_offset": 77, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "ExponentialLR", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 113, "col_offset": 13, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "ReduceLROnPlateau", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 13, "col_offset": 34, "nodeName": "optim", "type": "Any"}, {"lineNumber": 22, "col_offset": 37, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 33, "col_offset": 38, "nodeName": "Any", "type": "Any"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 63, "col_offset": 43, "nodeName": "step_size", "type": "int"}, {"lineNumber": 63, "col_offset": 60, "nodeName": "gamma", "type": "float"}, {"lineNumber": 63, "col_offset": 78, "nodeName": "last_epoch", "type": "int"}, {"lineNumber": 75, "col_offset": 48, "nodeName": "List", "type": "Any"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 78, "col_offset": 44, "nodeName": "milestones", "type": "List[int]"}, {"lineNumber": 78, "col_offset": 62, "nodeName": "gamma", "type": "float"}, {"lineNumber": 78, "col_offset": 80, "nodeName": "last_epoch", "type": "int"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 91, "col_offset": 39, "nodeName": "gamma", "type": "float"}, {"lineNumber": 91, "col_offset": 57, "nodeName": "last_epoch", "type": "int"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "mode", "type": "str"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "factor", "type": "float"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "patience", "type": "int"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "verbose", "type": "bool"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "threshold_mode", "type": "str"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "threshold", "type": "float"}, {"lineNumber": 123, "col_offset": 21, "nodeName": "cooldown", "type": "int"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "min_lr", "type": "Union[float, List[float]]"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "eps", "type": "float"}, {"lineNumber": 13, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 22, "col_offset": 37, "nodeName": "optim", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "self", "type": "_PyTorchLearningRateSchedulerWrapper"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "optim", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 75, "col_offset": 53, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "optim", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "optim", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "optim", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 22, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 37, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 37, "col_offset": 52, "nodeName": "Any", "type": "Any"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "torch", "type": "Any"}]