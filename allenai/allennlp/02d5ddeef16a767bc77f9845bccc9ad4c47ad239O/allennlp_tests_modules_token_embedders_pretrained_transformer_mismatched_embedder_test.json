[{"lineNumber": 13, "col_offset": 50, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "token_indexer", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "sentence1", "type": "List[str]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "sentence2", "type": "List[str]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "tokens1", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "tokens2", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "token_embedder", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "instance1", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "instance2", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "batch", "type": "allennlp.data.batch.Batch"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "padding_lengths", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "tensor_dict", "type": "Dict[str, Any]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "bert_vectors", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "token_indexer", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "sentence1", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "sentence2", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "tokens1", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "tokens2", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "token_embedder", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "instance1", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "instance2", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "batch", "type": "allennlp.data.batch.Batch"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "padding_lengths", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "tensor_dict", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "bert_vectors", "type": "Any"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "PretrainedTransformerMismatchedIndexer", "type": "Any"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "Batch", "type": "Type[allennlp.data.batch.Batch]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "index_instances", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "get_padding_lengths", "type": "Callable[[], Dict[str, Dict[str, int]]]"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "as_tensor_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "padding_lengths", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "tensor_dict", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "token_embedder", "type": "Any"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "PretrainedTransformerMismatchedIndexer", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 66, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 80, "col_offset": 20, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "Batch", "type": "Type[allennlp.data.batch.Batch]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "index_instances", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "get_padding_lengths", "type": "Callable[[], Dict[str, Dict[str, int]]]"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "as_tensor_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 86, "col_offset": 43, "nodeName": "padding_lengths", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 87, "col_offset": 17, "nodeName": "tensor_dict", "type": "Dict[str, Any]"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "token_embedder", "type": "Any"}, {"lineNumber": 99, "col_offset": 38, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 19, "col_offset": 19, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "word", "type": "str"}, {"lineNumber": 19, "col_offset": 35, "nodeName": "word", "type": "str"}, {"lineNumber": 19, "col_offset": 43, "nodeName": "sentence1", "type": "List[str]"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "word", "type": "str"}, {"lineNumber": 20, "col_offset": 35, "nodeName": "word", "type": "str"}, {"lineNumber": 20, "col_offset": 43, "nodeName": "sentence2", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "BasicTextFieldEmbedder", "type": "Any"}, {"lineNumber": 34, "col_offset": 66, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 34, "col_offset": 80, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "instance1", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "instance2", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "batch", "type": "allennlp.data.batch.Batch"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "batch", "type": "allennlp.data.batch.Batch"}, {"lineNumber": 43, "col_offset": 22, "nodeName": "batch", "type": "allennlp.data.batch.Batch"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "any", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "word", "type": "str"}, {"lineNumber": 61, "col_offset": 35, "nodeName": "word", "type": "str"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "sentence1", "type": "List[str]"}, {"lineNumber": 62, "col_offset": 19, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 62, "col_offset": 25, "nodeName": "word", "type": "str"}, {"lineNumber": 62, "col_offset": 35, "nodeName": "word", "type": "str"}, {"lineNumber": 62, "col_offset": 43, "nodeName": "sentence2", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "BasicTextFieldEmbedder", "type": "Any"}, {"lineNumber": 77, "col_offset": 66, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 77, "col_offset": 80, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 82, "col_offset": 23, "nodeName": "instance1", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 82, "col_offset": 34, "nodeName": "instance2", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "batch", "type": "allennlp.data.batch.Batch"}, {"lineNumber": 85, "col_offset": 26, "nodeName": "batch", "type": "allennlp.data.batch.Batch"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "batch", "type": "allennlp.data.batch.Batch"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "any", "type": "Any"}, {"lineNumber": 36, "col_offset": 40, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 36, "col_offset": 50, "nodeName": "tokens1", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 37, "col_offset": 40, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 37, "col_offset": 50, "nodeName": "tokens2", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "bert_vectors", "type": "Any"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "max", "type": "Callable"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 79, "col_offset": 50, "nodeName": "tokens1", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 80, "col_offset": 40, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 80, "col_offset": 50, "nodeName": "tokens2", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "bert_vectors", "type": "Any"}, {"lineNumber": 100, "col_offset": 42, "nodeName": "max", "type": "Callable"}, {"lineNumber": 36, "col_offset": 68, "nodeName": "token_indexer", "type": "Any"}, {"lineNumber": 37, "col_offset": 68, "nodeName": "token_indexer", "type": "Any"}, {"lineNumber": 53, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 53, "col_offset": 50, "nodeName": "sentence1", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 62, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 53, "col_offset": 66, "nodeName": "sentence2", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "bert_vectors", "type": "Any"}, {"lineNumber": 79, "col_offset": 68, "nodeName": "token_indexer", "type": "Any"}, {"lineNumber": 80, "col_offset": 68, "nodeName": "token_indexer", "type": "Any"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 100, "col_offset": 50, "nodeName": "sentence1", "type": "List[str]"}, {"lineNumber": 100, "col_offset": 62, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 100, "col_offset": 66, "nodeName": "sentence2", "type": "List[str]"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "isnan", "type": "Any"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "bert_vectors", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 89, "col_offset": 15, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 101, "col_offset": 19, "nodeName": "torch", "type": "Any"}]