[{"lineNumber": 12, "col_offset": 33, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "optim", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "sched", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 107, "col_offset": 48, "nodeName": "cosine_schedule_cases", "type": "List[Union[Tuple[int, int, float, List[Tuple[int, float]]], Tuple[int, int, int, List[Tuple[int, float]]]]]"}, {"lineNumber": 15, "col_offset": 16, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 16, "col_offset": 54, "nodeName": "context", "type": "unittest.case._AssertRaisesContext[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "step_batch", "type": "Callable[[Optional[int]], None]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "_get_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "t_max", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "_initialized", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "epochs", "type": "int"}, {"lineNumber": 107, "col_offset": 20, "nodeName": "t_max", "type": "int"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "factor", "type": "Union[float, int]"}, {"lineNumber": 107, "col_offset": 35, "nodeName": "lr_checks", "type": "List[Tuple[int, float]]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "scheduler", "type": "allennlp.training.learning_rate_schedulers.CosineWithRestarts"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "epoch", "type": "int"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "lr_checks", "type": "List[Tuple[int, float]]"}, {"lineNumber": 15, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 15, "col_offset": 36, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 16, "col_offset": 31, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "LearningRateSchedulersTest"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 35, "col_offset": 48, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "lrs", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 40, "col_offset": 14, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 42, "col_offset": 48, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "lrs", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "lrs", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper]"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 54, "col_offset": 68, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 57, "col_offset": 16, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 58, "col_offset": 50, "nodeName": "optim", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "sched", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "sched", "type": "Any"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 68, "col_offset": 46, "nodeName": "optim", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "_get_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "CosineWithRestarts", "type": "Type[allennlp.training.learning_rate_schedulers.CosineWithRestarts]"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 109, "col_offset": 54, "nodeName": "t_max", "type": "int"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "epochs", "type": "int"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "it", "type": "int"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "lr", "type": "float"}, {"lineNumber": 15, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 15, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 16, "col_offset": 13, "nodeName": "self", "type": "LearningRateSchedulersTest"}, {"lineNumber": 23, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "exception", "type": "allennlp.common.checks.ConfigurationError"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 33, "col_offset": 48, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 33, "col_offset": 70, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 34, "col_offset": 70, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 40, "col_offset": 70, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 41, "col_offset": 70, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 50, "col_offset": 14, "nodeName": "CosineWithRestartsTest", "type": "Type[CosineWithRestartsTest]"}, {"lineNumber": 50, "col_offset": 38, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 51, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "nn", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "model", "type": "Any"}, {"lineNumber": 54, "col_offset": 97, "nodeName": "lr", "type": "float"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 58, "col_offset": 57, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 66, "col_offset": 13, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 68, "col_offset": 53, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 109, "col_offset": 68, "nodeName": "factor", "type": "Union[int, float]"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "epoch", "type": "int"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "lr", "type": "float"}, {"lineNumber": 15, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "context", "type": "unittest.case._AssertRaisesContext[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 26, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 29, "col_offset": 42, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 33, "col_offset": 70, "nodeName": "model", "type": "Any"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 40, "col_offset": 70, "nodeName": "model", "type": "Any"}, {"lineNumber": 51, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "optim", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "scheduler", "type": "allennlp.training.learning_rate_schedulers.CosineWithRestarts"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 17, "col_offset": 46, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 19, "col_offset": 46, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 27, "col_offset": 64, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 28, "col_offset": 64, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 110, "col_offset": 19, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "it", "type": "int"}, {"lineNumber": 17, "col_offset": 46, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 17, "col_offset": 68, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 18, "col_offset": 68, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 27, "col_offset": 64, "nodeName": "model", "type": "Any"}, {"lineNumber": 113, "col_offset": 27, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 17, "col_offset": 68, "nodeName": "model", "type": "Any"}]