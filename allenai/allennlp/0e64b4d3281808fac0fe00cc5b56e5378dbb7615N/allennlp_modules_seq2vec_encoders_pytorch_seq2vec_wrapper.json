[{"lineNumber": 10, "col_offset": 28, "nodeName": "Seq2VecEncoder", "type": "Type[allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder]"}, {"lineNumber": 120, "col_offset": 24, "nodeName": "PytorchSeq2VecWrapper", "type": "Type[PytorchSeq2VecWrapper]"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "PytorchSeq2VecWrapper", "type": "Type[PytorchSeq2VecWrapper]"}, {"lineNumber": 174, "col_offset": 24, "nodeName": "PytorchSeq2VecWrapper", "type": "Type[PytorchSeq2VecWrapper]"}, {"lineNumber": 203, "col_offset": 34, "nodeName": "PytorchSeq2VecWrapper", "type": "Type[PytorchSeq2VecWrapper]"}, {"lineNumber": 229, "col_offset": 43, "nodeName": "PytorchSeq2VecWrapper", "type": "Type[PytorchSeq2VecWrapper]"}, {"lineNumber": 255, "col_offset": 45, "nodeName": "PytorchSeq2VecWrapper", "type": "Type[PytorchSeq2VecWrapper]"}, {"lineNumber": 53, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "_module", "type": "Any"}, {"lineNumber": 46, "col_offset": 23, "nodeName": "module", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "unsorted_state", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "last_layer_state", "type": "Any"}, {"lineNumber": 65, "col_offset": 9, "nodeName": "torch", "type": "Any"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "RNNBase", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "PytorchSeq2VecWrapper"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "_module", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "is_bidirectional", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "hidden_size", "type": "Any"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 64, "col_offset": 42, "nodeName": "BoolTensor", "type": "Any"}, {"lineNumber": 64, "col_offset": 74, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "mask", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "sort_and_run_forward", "type": "Callable[..., Tuple[Any, Any, Any]]"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "_module", "type": "Any"}, {"lineNumber": 80, "col_offset": 52, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 80, "col_offset": 60, "nodeName": "mask", "type": "Any"}, {"lineNumber": 80, "col_offset": 66, "nodeName": "hidden_state", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "state", "type": "Any"}, {"lineNumber": 83, "col_offset": 29, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "num_layers_times_directions", "type": "Any"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "num_valid", "type": "Any"}, {"lineNumber": 86, "col_offset": 48, "nodeName": "encoding_dim", "type": "Any"}, {"lineNumber": 86, "col_offset": 63, "nodeName": "size", "type": "Any"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "num_valid", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 105, "col_offset": 63, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "last_state_index", "type": "int"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "AttributeError", "type": "Type[AttributeError]"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "unsorted_state", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "view", "type": "Any"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "GRU", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 187, "col_offset": 23, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "RNN", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 215, "col_offset": 35, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 217, "col_offset": 17, "nodeName": "AugmentedLstm", "type": "Type[allennlp.modules.augmented_lstm.AugmentedLstm]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 241, "col_offset": 35, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 243, "col_offset": 17, "nodeName": "StackedAlternatingLstm", "type": "Type[allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 267, "col_offset": 21, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 269, "col_offset": 17, "nodeName": "StackedBidirectionalLstm", "type": "Type[allennlp.modules.stacked_bidirectional_lstm.StackedBidirectionalLstm]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "modules", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "batch_first", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "self", "type": "PytorchSeq2VecWrapper"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "_module", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "is_bidirectional", "type": "bool"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "_module", "type": "Any"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "is_bidirectional", "type": "Any"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 64, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 64, "col_offset": 74, "nodeName": "torch", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "mask", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "PytorchSeq2VecWrapper"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "self", "type": "PytorchSeq2VecWrapper"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 86, "col_offset": 63, "nodeName": "state", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "new_zeros", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "num_layers_times_directions", "type": "Any"}, {"lineNumber": 93, "col_offset": 69, "nodeName": "encoding_dim", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "cat", "type": "Any"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "bidirectional", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "last_state_index", "type": "int"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "nn", "type": "Any"}, {"lineNumber": 135, "col_offset": 23, "nodeName": "input_size", "type": "int"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 137, "col_offset": 23, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 138, "col_offset": 17, "nodeName": "bias", "type": "bool"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "dropout", "type": "float"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "bidirectional", "type": "bool"}, {"lineNumber": 143, "col_offset": 32, "nodeName": "module", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "nn", "type": "Any"}, {"lineNumber": 162, "col_offset": 23, "nodeName": "input_size", "type": "int"}, {"lineNumber": 163, "col_offset": 24, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "bias", "type": "bool"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "dropout", "type": "float"}, {"lineNumber": 168, "col_offset": 26, "nodeName": "bidirectional", "type": "bool"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "module", "type": "Any"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "nn", "type": "Any"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "input_size", "type": "int"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 192, "col_offset": 23, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 193, "col_offset": 25, "nodeName": "nonlinearity", "type": "str"}, {"lineNumber": 194, "col_offset": 17, "nodeName": "bias", "type": "bool"}, {"lineNumber": 196, "col_offset": 20, "nodeName": "dropout", "type": "float"}, {"lineNumber": 197, "col_offset": 26, "nodeName": "bidirectional", "type": "bool"}, {"lineNumber": 199, "col_offset": 32, "nodeName": "module", "type": "Any"}, {"lineNumber": 218, "col_offset": 23, "nodeName": "input_size", "type": "int"}, {"lineNumber": 219, "col_offset": 24, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "go_forward", "type": "bool"}, {"lineNumber": 221, "col_offset": 42, "nodeName": "recurrent_dropout_probability", "type": "float"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "use_highway", "type": "bool"}, {"lineNumber": 223, "col_offset": 38, "nodeName": "use_input_projection_bias", "type": "bool"}, {"lineNumber": 225, "col_offset": 32, "nodeName": "module", "type": "allennlp.modules.augmented_lstm.AugmentedLstm"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "input_size", "type": "int"}, {"lineNumber": 245, "col_offset": 24, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 246, "col_offset": 23, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 247, "col_offset": 42, "nodeName": "recurrent_dropout_probability", "type": "float"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "use_highway", "type": "bool"}, {"lineNumber": 249, "col_offset": 38, "nodeName": "use_input_projection_bias", "type": "bool"}, {"lineNumber": 251, "col_offset": 32, "nodeName": "module", "type": "allennlp.modules.stacked_alternating_lstm.StackedAlternatingLstm"}, {"lineNumber": 270, "col_offset": 23, "nodeName": "input_size", "type": "int"}, {"lineNumber": 271, "col_offset": 24, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 272, "col_offset": 23, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 273, "col_offset": 42, "nodeName": "recurrent_dropout_probability", "type": "float"}, {"lineNumber": 274, "col_offset": 38, "nodeName": "layer_dropout_probability", "type": "float"}, {"lineNumber": 275, "col_offset": 24, "nodeName": "use_highway", "type": "bool"}, {"lineNumber": 277, "col_offset": 32, "nodeName": "module", "type": "allennlp.modules.stacked_bidirectional_lstm.StackedBidirectionalLstm"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "_module", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "self", "type": "PytorchSeq2VecWrapper"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "self", "type": "PytorchSeq2VecWrapper"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 93, "col_offset": 45, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 93, "col_offset": 58, "nodeName": "num_valid", "type": "Any"}, {"lineNumber": 95, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "state", "type": "Any"}, {"lineNumber": 95, "col_offset": 38, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "_module", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 116, "col_offset": 55, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 134, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "self", "type": "PytorchSeq2VecWrapper"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "_module", "type": "Any"}, {"lineNumber": 72, "col_offset": 32, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 72, "col_offset": 40, "nodeName": "hidden_state", "type": "Any"}, {"lineNumber": 105, "col_offset": 25, "nodeName": "state", "type": "Any"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "self", "type": "PytorchSeq2VecWrapper"}, {"lineNumber": 115, "col_offset": 46, "nodeName": "last_state_index", "type": "int"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "last_layer_state", "type": "Any"}, {"lineNumber": 116, "col_offset": 55, "nodeName": "self", "type": "PytorchSeq2VecWrapper"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "self", "type": "PytorchSeq2VecWrapper"}]