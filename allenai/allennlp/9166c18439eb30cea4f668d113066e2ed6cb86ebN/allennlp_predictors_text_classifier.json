[{"lineNumber": 15, "col_offset": 30, "nodeName": "Predictor", "type": "Type[allennlp.predictors.predictor.Predictor]"}, {"lineNumber": 21, "col_offset": 40, "nodeName": "JsonDict", "type": "Type[Dict[str, Any]]"}, {"lineNumber": 25, "col_offset": 56, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "new_instance", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "label", "type": "Any"}, {"lineNumber": 39, "col_offset": 79, "nodeName": "List", "type": "Any"}, {"lineNumber": 21, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "predict_json", "type": "Any"}, {"lineNumber": 25, "col_offset": 43, "nodeName": "JsonDict", "type": "Type[Dict[str, Any]]"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "json_dict", "type": "Dict[str, Any]"}, {"lineNumber": 32, "col_offset": 12, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "sentence", "type": "List[str]"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "text_to_instance", "type": "Any"}, {"lineNumber": 34, "col_offset": 53, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 38, "col_offset": 51, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 40, "col_offset": 32, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "add_field", "type": "Any"}, {"lineNumber": 43, "col_offset": 16, "nodeName": "new_instance", "type": "Any"}, {"lineNumber": 39, "col_offset": 84, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 22, "col_offset": 46, "nodeName": "sentence", "type": "str"}, {"lineNumber": 32, "col_offset": 24, "nodeName": "WordTokenizer", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "_dataset_reader", "type": "Any"}, {"lineNumber": 39, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "outputs", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "new_instance", "type": "Any"}, {"lineNumber": 42, "col_offset": 40, "nodeName": "LabelField", "type": "Type[allennlp.data.fields.label_field.LabelField]"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "_dataset_reader", "type": "Any"}, {"lineNumber": 31, "col_offset": 66, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 31, "col_offset": 74, "nodeName": "_dataset_reader", "type": "Any"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "t", "type": "Any"}, {"lineNumber": 33, "col_offset": 35, "nodeName": "t", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 51, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 42, "col_offset": 55, "nodeName": "label", "type": "Any"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 74, "nodeName": "self", "type": "Any"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 33, "col_offset": 59, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 39, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 39, "col_offset": 60, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 33, "col_offset": 40, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 39, "col_offset": 60, "nodeName": "numpy", "type": "module"}]