[{"lineNumber": 10, "col_offset": 24, "nodeName": "TokenEmbedder", "type": "Type[allennlp.modules.token_embedders.token_embedder.TokenEmbedder]"}, {"lineNumber": 50, "col_offset": 47, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "elmo_output", "type": "Any"}, {"lineNumber": 50, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "options_file", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "weight_file", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "do_layer_norm", "type": "bool"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "dropout", "type": "float"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 39, "col_offset": 21, "nodeName": "Elmo", "type": "Type[allennlp.modules.elmo.Elmo]"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "options_file", "type": "str"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "weight_file", "type": "str"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "_elmo", "type": "Any"}, {"lineNumber": 62, "col_offset": 33, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 66, "col_offset": 32, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 66, "col_offset": 52, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "add_file_to_archive", "type": "Callable[[str], None]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "add_file_to_archive", "type": "Callable[[str], None]"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "pop", "type": "Any"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "pop", "type": "Any"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "pop", "type": "Any"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "pop_bool", "type": "Callable[..., bool]"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "pop_float", "type": "Callable[..., float]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assert_empty", "type": "Callable[[str], None]"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "options_file", "type": "Any"}, {"lineNumber": 75, "col_offset": 33, "nodeName": "weight_file", "type": "Any"}, {"lineNumber": 75, "col_offset": 46, "nodeName": "do_layer_norm", "type": "bool"}, {"lineNumber": 75, "col_offset": 61, "nodeName": "dropout", "type": "float"}, {"lineNumber": 42, "col_offset": 40, "nodeName": "do_layer_norm", "type": "bool"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "dropout", "type": "float"}, {"lineNumber": 44, "col_offset": 40, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "elmo_output", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 69, "col_offset": 23, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 73, "col_offset": 18, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "cls", "type": "Any"}, {"lineNumber": 75, "col_offset": 84, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 37, "col_offset": 14, "nodeName": "ElmoTokenEmbedder", "type": "Any"}, {"lineNumber": 37, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "_token_embedder", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "_elmo_lstm", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "_elmo", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "self", "type": "Any"}]