[{"lineNumber": 23, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "WikiTablesSemanticParser", "type": "Type[allennlp.models.semantic_parsing.wikitables.wikitables_semantic_parser.WikiTablesSemanticParser]"}, {"lineNumber": 23, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 23, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 261, "col_offset": 64, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 23, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "use_similarity", "type": "bool"}, {"lineNumber": 98, "col_offset": 25, "nodeName": "use_neighbor_similarity_for_linking", "type": "bool"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "model_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "archived_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "question_embedder_weight", "type": "str"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "vocab_index_mapping", "type": "List[Tuple[int, int]]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "index", "type": "int"}, {"lineNumber": 172, "col_offset": 15, "nodeName": "vocab_index_mapping", "type": "List[Tuple[int, int]]"}, {"lineNumber": 161, "col_offset": 70, "nodeName": "List", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 180, "col_offset": 51, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "action_history", "type": "List[int]"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "action_strings", "type": "List[str]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "lisp_string", "type": "str"}, {"lineNumber": 261, "col_offset": 64, "nodeName": "torch", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "question_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "action_embedding_dim", "type": "int"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "entity_encoder", "type": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "mixture_feedforward_type", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "attention_function_type", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "decoder_beam_size", "type": "int"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "max_decoding_steps", "type": "int"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "normalize_beam_score_by_length", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "use_neighbor_similarity_for_linking", "type": "bool"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "dropout", "type": "float"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "num_linking_features", "type": "int"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "tables_directory", "type": "Any"}, {"lineNumber": 300, "col_offset": 8, "nodeName": "rule_namespace", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "mml_model_file", "type": "Any"}, {"lineNumber": 97, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "ExpectedRiskMinimization", "type": "Type[allennlp.nn.decoding.decoder_trainers.expected_risk_minimization.ExpectedRiskMinimization[Any]]"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "initial_mml_model_file", "type": "str"}, {"lineNumber": 132, "col_offset": 56, "nodeName": "Archive", "type": "Type[allennlp.models.archival.Archive]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "weights", "type": "Any"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "items", "type": "Callable"}, {"lineNumber": 161, "col_offset": 55, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 163, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "token", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "archived_token_index", "type": "int"}, {"lineNumber": 206, "col_offset": 23, "nodeName": "_get_initial_state_and_scores", "type": "Any"}, {"lineNumber": 212, "col_offset": 24, "nodeName": "initial_info", "type": "Any"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "decode", "type": "Any"}, {"lineNumber": 215, "col_offset": 47, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 216, "col_offset": 47, "nodeName": "_decoder_step", "type": "Any"}, {"lineNumber": 217, "col_offset": 47, "nodeName": "_get_state_cost", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "training", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "linking_scores", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "feature_scores", "type": "Any"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "similarity_scores", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "action_mapping", "type": "Dict[Tuple[int, int], str]"}, {"lineNumber": 228, "col_offset": 40, "nodeName": "action_mapping", "type": "Dict[Tuple[int, int], str]"}, {"lineNumber": 230, "col_offset": 40, "nodeName": "linking_scores", "type": "Any"}, {"lineNumber": 233, "col_offset": 43, "nodeName": "similarity_scores", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "best_action_sequences", "type": "Any"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 261, "col_offset": 37, "nodeName": "WikiTablesDecoderState", "type": "Type[allennlp.models.semantic_parsing.wikitables.wikitables_decoder_state.WikiTablesDecoderState]"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "action_history", "type": "List[List[int]]"}, {"lineNumber": 265, "col_offset": 22, "nodeName": "batch_indices", "type": "List[int]"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "get_logical_form", "type": "Callable[..., str]"}, {"lineNumber": 267, "col_offset": 65, "nodeName": "action_strings", "type": "List[str]"}, {"lineNumber": 268, "col_offset": 22, "nodeName": "example_lisp_string", "type": "List[str]"}, {"lineNumber": 269, "col_offset": 11, "nodeName": "evaluate_logical_form", "type": "Any"}, {"lineNumber": 269, "col_offset": 59, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 269, "col_offset": 73, "nodeName": "lisp_string", "type": "str"}, {"lineNumber": 270, "col_offset": 12, "nodeName": "cost", "type": "Any"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "cost", "type": "Any"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "float", "type": "Any"}, {"lineNumber": 276, "col_offset": 40, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 277, "col_offset": 28, "nodeName": "from_params", "type": "Callable[[Any, allennlp.data.vocabulary.Vocabulary, allennlp.common.params.Params], allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 277, "col_offset": 58, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 278, "col_offset": 31, "nodeName": "pop_int", "type": "Callable[..., int]"}, {"lineNumber": 279, "col_offset": 18, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder]"}, {"lineNumber": 281, "col_offset": 35, "nodeName": "pop", "type": "Any"}, {"lineNumber": 282, "col_offset": 11, "nodeName": "mixture_feedforward_type", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "mixture_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "mixture_feedforward", "type": "None"}, {"lineNumber": 288, "col_offset": 34, "nodeName": "pop", "type": "Any"}, {"lineNumber": 289, "col_offset": 11, "nodeName": "attention_function_type", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "attention_function", "type": "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "attention_function", "type": "None"}, {"lineNumber": 293, "col_offset": 28, "nodeName": "pop_int", "type": "Callable[..., int]"}, {"lineNumber": 294, "col_offset": 29, "nodeName": "pop_int", "type": "Callable[..., int]"}, {"lineNumber": 295, "col_offset": 41, "nodeName": "pop", "type": "Any"}, {"lineNumber": 296, "col_offset": 46, "nodeName": "pop_bool", "type": "Callable[..., bool]"}, {"lineNumber": 297, "col_offset": 18, "nodeName": "pop_float", "type": "Callable[..., float]"}, {"lineNumber": 298, "col_offset": 31, "nodeName": "pop_int", "type": "Callable[..., int]"}, {"lineNumber": 299, "col_offset": 27, "nodeName": "pop", "type": "Any"}, {"lineNumber": 300, "col_offset": 25, "nodeName": "pop", "type": "Any"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "pop", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "assert_empty", "type": "Callable[[str], None]"}, {"lineNumber": 302, "col_offset": 28, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 303, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 303, "col_offset": 19, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 99, "col_offset": 64, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 100, "col_offset": 76, "nodeName": "question_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 101, "col_offset": 79, "nodeName": "action_embedding_dim", "type": "int"}, {"lineNumber": 102, "col_offset": 66, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 103, "col_offset": 73, "nodeName": "entity_encoder", "type": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"}, {"lineNumber": 104, "col_offset": 78, "nodeName": "mixture_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 105, "col_offset": 77, "nodeName": "max_decoding_steps", "type": "int"}, {"lineNumber": 106, "col_offset": 77, "nodeName": "attention_function", "type": "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction"}, {"lineNumber": 107, "col_offset": 94, "nodeName": "use_similarity", "type": "bool"}, {"lineNumber": 108, "col_offset": 66, "nodeName": "dropout", "type": "float"}, {"lineNumber": 109, "col_offset": 79, "nodeName": "num_linking_features", "type": "int"}, {"lineNumber": 110, "col_offset": 73, "nodeName": "rule_namespace", "type": "str"}, {"lineNumber": 111, "col_offset": 75, "nodeName": "tables_directory", "type": "str"}, {"lineNumber": 114, "col_offset": 51, "nodeName": "decoder_beam_size", "type": "int"}, {"lineNumber": 115, "col_offset": 61, "nodeName": "normalize_beam_score_by_length", "type": "bool"}, {"lineNumber": 116, "col_offset": 60, "nodeName": "_max_decoding_steps", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "isfile", "type": "Callable[[Union[bytes, str, _PathLike[Any]]], bool]"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "initial_mml_model_file", "type": "str"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "question_embedder_weight", "type": "str"}, {"lineNumber": 137, "col_offset": 43, "nodeName": "archived_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "question_embedder_weight", "type": "str"}, {"lineNumber": 138, "col_offset": 43, "nodeName": "model_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 139, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 142, "col_offset": 29, "nodeName": "archived_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "model_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "get_vocab_size", "type": "Any"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "get_token_from_index", "type": "Any"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "get_token_index", "type": "Callable[..., int]"}, {"lineNumber": 165, "col_offset": 66, "nodeName": "token", "type": "Any"}, {"lineNumber": 170, "col_offset": 96, "nodeName": "token", "type": "Any"}, {"lineNumber": 161, "col_offset": 75, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 177, "col_offset": 23, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 178, "col_offset": 23, "nodeName": "List", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "List", "type": "Any"}, {"lineNumber": 180, "col_offset": 37, "nodeName": "List", "type": "Any"}, {"lineNumber": 206, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 206, "col_offset": 67, "nodeName": "question", "type": "Dict[str, Any]"}, {"lineNumber": 207, "col_offset": 64, "nodeName": "table", "type": "Dict[str, Any]"}, {"lineNumber": 208, "col_offset": 64, "nodeName": "world", "type": "List[allennlp.semparse.worlds.wikitables_world.WikiTablesWorld]"}, {"lineNumber": 209, "col_offset": 66, "nodeName": "actions", "type": "List[List[Tuple[str, bool, Any]]]"}, {"lineNumber": 210, "col_offset": 78, "nodeName": "example_lisp_string", "type": "List[str]"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "_decoder_trainer", "type": "Any"}, {"lineNumber": 216, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 217, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "initial_info", "type": "Any"}, {"lineNumber": 221, "col_offset": 29, "nodeName": "initial_info", "type": "Any"}, {"lineNumber": 222, "col_offset": 32, "nodeName": "initial_info", "type": "Any"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 225, "col_offset": 29, "nodeName": "batch_actions", "type": "List[Tuple[str, bool, Any]]"}, {"lineNumber": 225, "col_offset": 46, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 225, "col_offset": 56, "nodeName": "actions", "type": "List[List[Tuple[str, bool, Any]]]"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 230, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "feature_scores", "type": "Any"}, {"lineNumber": 232, "col_offset": 44, "nodeName": "feature_scores", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 235, "col_offset": 36, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 236, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 236, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 180, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 180, "col_offset": 61, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "is_finished", "type": "Callable[[], bool]"}, {"lineNumber": 263, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "state", "type": "allennlp.models.semantic_parsing.wikitables.wikitables_decoder_state.WikiTablesDecoderState"}, {"lineNumber": 265, "col_offset": 22, "nodeName": "state", "type": "allennlp.models.semantic_parsing.wikitables.wikitables_decoder_state.WikiTablesDecoderState"}, {"lineNumber": 266, "col_offset": 72, "nodeName": "i", "type": "int"}, {"lineNumber": 266, "col_offset": 77, "nodeName": "action_history", "type": "List[int]"}, {"lineNumber": 268, "col_offset": 22, "nodeName": "state", "type": "allennlp.models.semantic_parsing.wikitables.wikitables_decoder_state.WikiTablesDecoderState"}, {"lineNumber": 268, "col_offset": 48, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 269, "col_offset": 11, "nodeName": "_denotation_accuracy", "type": "Any"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 277, "col_offset": 28, "nodeName": "TextFieldEmbedder", "type": "Type[allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 277, "col_offset": 65, "nodeName": "pop", "type": "Any"}, {"lineNumber": 278, "col_offset": 31, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 279, "col_offset": 18, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 279, "col_offset": 45, "nodeName": "pop", "type": "Any"}, {"lineNumber": 280, "col_offset": 25, "nodeName": "Seq2VecEncoder", "type": "Type[allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder]"}, {"lineNumber": 280, "col_offset": 52, "nodeName": "pop", "type": "Any"}, {"lineNumber": 281, "col_offset": 35, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 283, "col_offset": 34, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 283, "col_offset": 58, "nodeName": "mixture_feedforward_type", "type": "Any"}, {"lineNumber": 288, "col_offset": 34, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 290, "col_offset": 33, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.modules.similarity_functions.similarity_function.SimilarityFunction]"}, {"lineNumber": 290, "col_offset": 64, "nodeName": "attention_function_type", "type": "Any"}, {"lineNumber": 293, "col_offset": 28, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 294, "col_offset": 29, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 295, "col_offset": 41, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 296, "col_offset": 46, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 297, "col_offset": 18, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 298, "col_offset": 31, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 299, "col_offset": 27, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 300, "col_offset": 25, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 301, "col_offset": 25, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 302, "col_offset": 28, "nodeName": "cls", "type": "Any"}, {"lineNumber": 304, "col_offset": 37, "nodeName": "question_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 305, "col_offset": 40, "nodeName": "action_embedding_dim", "type": "int"}, {"lineNumber": 306, "col_offset": 27, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 307, "col_offset": 34, "nodeName": "entity_encoder", "type": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"}, {"lineNumber": 308, "col_offset": 39, "nodeName": "mixture_feedforward", "type": "Optional[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 309, "col_offset": 38, "nodeName": "attention_function", "type": "Optional[allennlp.modules.similarity_functions.similarity_function.SimilarityFunction]"}, {"lineNumber": 310, "col_offset": 37, "nodeName": "decoder_beam_size", "type": "int"}, {"lineNumber": 311, "col_offset": 38, "nodeName": "max_decoding_steps", "type": "int"}, {"lineNumber": 312, "col_offset": 50, "nodeName": "normalize_beam_score_by_length", "type": "Any"}, {"lineNumber": 313, "col_offset": 55, "nodeName": "use_neighbor_similarity_for_linking", "type": "bool"}, {"lineNumber": 314, "col_offset": 27, "nodeName": "dropout", "type": "float"}, {"lineNumber": 315, "col_offset": 40, "nodeName": "num_linking_features", "type": "int"}, {"lineNumber": 316, "col_offset": 36, "nodeName": "tables_directory", "type": "Any"}, {"lineNumber": 317, "col_offset": 34, "nodeName": "rule_namespace", "type": "Any"}, {"lineNumber": 318, "col_offset": 42, "nodeName": "mml_model_file", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 99, "col_offset": 14, "nodeName": "WikiTablesErmSemanticParser", "type": "Any"}, {"lineNumber": 99, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 123, "col_offset": 39, "nodeName": "initial_mml_model_file", "type": "str"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "_initialize_weights_from_archive", "type": "Any"}, {"lineNumber": 124, "col_offset": 54, "nodeName": "archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "question_embedder_weight", "type": "str"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "vocab_index_mapping", "type": "Any"}, {"lineNumber": 150, "col_offset": 20, "nodeName": "archived_embedding_weights", "type": "Any"}, {"lineNumber": 150, "col_offset": 49, "nodeName": "data", "type": "Any"}, {"lineNumber": 151, "col_offset": 20, "nodeName": "new_weights", "type": "Any"}, {"lineNumber": 152, "col_offset": 49, "nodeName": "vocab_index_mapping", "type": "Any"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "new_weights", "type": "Any"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 158, "col_offset": 52, "nodeName": "name", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 159, "col_offset": 50, "nodeName": "new_weights", "type": "Any"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 164, "col_offset": 58, "nodeName": "index", "type": "int"}, {"lineNumber": 165, "col_offset": 35, "nodeName": "archived_vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "get_token_from_index", "type": "Callable[..., str]"}, {"lineNumber": 170, "col_offset": 51, "nodeName": "archived_token_index", "type": "int"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "WikiTablesWorld", "type": "Type[allennlp.semparse.worlds.wikitables_world.WikiTablesWorld]"}, {"lineNumber": 180, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 215, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "action_index", "type": "int"}, {"lineNumber": 226, "col_offset": 34, "nodeName": "action", "type": "Tuple[str, bool, Any]"}, {"lineNumber": 226, "col_offset": 44, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 226, "col_offset": 54, "nodeName": "batch_actions", "type": "List[Tuple[str, bool, Any]]"}, {"lineNumber": 232, "col_offset": 16, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 240, "col_offset": 19, "nodeName": "i", "type": "int"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "best_action_sequences", "type": "Any"}, {"lineNumber": 242, "col_offset": 20, "nodeName": "best_action_sequence", "type": "Any"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "action_strings", "type": "List[str]"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "example_lisp_string", "type": "List[str]"}, {"lineNumber": 257, "col_offset": 23, "nodeName": "example_lisp_string", "type": "List[str]"}, {"lineNumber": 180, "col_offset": 61, "nodeName": "torch", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "state", "type": "allennlp.models.semantic_parsing.wikitables.wikitables_decoder_state.WikiTablesDecoderState"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "world", "type": "List[allennlp.semparse.worlds.wikitables_world.WikiTablesWorld]"}, {"lineNumber": 269, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 277, "col_offset": 65, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 279, "col_offset": 45, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 280, "col_offset": 52, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 283, "col_offset": 34, "nodeName": "FeedForward", "type": "Type[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 290, "col_offset": 33, "nodeName": "SimilarityFunction", "type": "Type[allennlp.modules.similarity_functions.similarity_function.SimilarityFunction]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 135, "col_offset": 35, "nodeName": "archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "_get_vocab_index_mapping", "type": "Any"}, {"lineNumber": 149, "col_offset": 72, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 150, "col_offset": 49, "nodeName": "weights", "type": "Any"}, {"lineNumber": 151, "col_offset": 34, "nodeName": "clone", "type": "Any"}, {"lineNumber": 152, "col_offset": 24, "nodeName": "index", "type": "Any"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "archived_index", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "weights", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "archived_vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "vocab_index_mapping", "type": "List[Tuple[int, int]]"}, {"lineNumber": 171, "col_offset": 44, "nodeName": "index", "type": "int"}, {"lineNumber": 171, "col_offset": 51, "nodeName": "archived_token_index", "type": "int"}, {"lineNumber": 161, "col_offset": 81, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 161, "col_offset": 86, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 176, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 176, "col_offset": 36, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 177, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 177, "col_offset": 33, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 179, "col_offset": 30, "nodeName": "List", "type": "Any"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "action_mapping", "type": "Dict[Tuple[int, int], str]"}, {"lineNumber": 227, "col_offset": 66, "nodeName": "action", "type": "Tuple[str, bool, Any]"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 247, "col_offset": 27, "nodeName": "ParsingError", "type": "Type[allennlp.semparse.worlds.world.ParsingError]"}, {"lineNumber": 252, "col_offset": 20, "nodeName": "append", "type": "Any"}, {"lineNumber": 252, "col_offset": 51, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "append", "type": "Any"}, {"lineNumber": 253, "col_offset": 47, "nodeName": "entities", "type": "List[str]"}, {"lineNumber": 255, "col_offset": 20, "nodeName": "append", "type": "Any"}, {"lineNumber": 256, "col_offset": 20, "nodeName": "_has_logical_form", "type": "Any"}, {"lineNumber": 266, "col_offset": 26, "nodeName": "possible_actions", "type": "List[List[Tuple[str, bool, Any]]]"}, {"lineNumber": 266, "col_offset": 62, "nodeName": "i", "type": "int"}, {"lineNumber": 267, "col_offset": 23, "nodeName": "state", "type": "allennlp.models.semantic_parsing.wikitables.wikitables_decoder_state.WikiTablesDecoderState"}, {"lineNumber": 267, "col_offset": 35, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 273, "col_offset": 24, "nodeName": "new", "type": "Any"}, {"lineNumber": 273, "col_offset": 64, "nodeName": "cost", "type": "Any"}, {"lineNumber": 149, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 72, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 151, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 153, "col_offset": 24, "nodeName": "new_weights", "type": "Any"}, {"lineNumber": 153, "col_offset": 45, "nodeName": "archived_embedding_weights", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "vocab_index_mapping", "type": "Any"}, {"lineNumber": 176, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 177, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "ProductionRuleArray", "type": "Type[Tuple[str, bool, Any]]"}, {"lineNumber": 223, "col_offset": 25, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 242, "col_offset": 43, "nodeName": "best_action_sequences", "type": "Any"}, {"lineNumber": 243, "col_offset": 38, "nodeName": "action_mapping", "type": "Dict[Tuple[int, int], str]"}, {"lineNumber": 243, "col_offset": 76, "nodeName": "action_index", "type": "Any"}, {"lineNumber": 243, "col_offset": 92, "nodeName": "best_action_sequence", "type": "Any"}, {"lineNumber": 245, "col_offset": 24, "nodeName": "_has_logical_form", "type": "Any"}, {"lineNumber": 246, "col_offset": 39, "nodeName": "get_logical_form", "type": "Callable[..., str]"}, {"lineNumber": 246, "col_offset": 65, "nodeName": "action_strings", "type": "List[str]"}, {"lineNumber": 249, "col_offset": 24, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "_denotation_accuracy", "type": "Any"}, {"lineNumber": 251, "col_offset": 50, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 253, "col_offset": 47, "nodeName": "table_graph", "type": "allennlp.semparse.contexts.table_question_knowledge_graph.TableQuestionKnowledgeGraph"}, {"lineNumber": 256, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 24, "nodeName": "_denotation_accuracy", "type": "Any"}, {"lineNumber": 266, "col_offset": 26, "nodeName": "state", "type": "allennlp.models.semantic_parsing.wikitables.wikitables_decoder_state.WikiTablesDecoderState"}, {"lineNumber": 266, "col_offset": 49, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 273, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 149, "col_offset": 72, "nodeName": "archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "index", "type": "Any"}, {"lineNumber": 153, "col_offset": 72, "nodeName": "archived_index", "type": "Any"}, {"lineNumber": 155, "col_offset": 58, "nodeName": "size", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "model_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 223, "col_offset": 30, "nodeName": "values", "type": "Callable"}, {"lineNumber": 227, "col_offset": 36, "nodeName": "batch_index", "type": "int"}, {"lineNumber": 227, "col_offset": 49, "nodeName": "action_index", "type": "int"}, {"lineNumber": 242, "col_offset": 65, "nodeName": "i", "type": "int"}, {"lineNumber": 245, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "_has_logical_form", "type": "Any"}, {"lineNumber": 251, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 251, "col_offset": 64, "nodeName": "example_lisp_string", "type": "List[str]"}, {"lineNumber": 252, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 253, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 255, "col_offset": 20, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 258, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 258, "col_offset": 56, "nodeName": "example_lisp_string", "type": "List[str]"}, {"lineNumber": 273, "col_offset": 24, "nodeName": "flattened_linking_scores", "type": "Any"}, {"lineNumber": 151, "col_offset": 34, "nodeName": "model_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 155, "col_offset": 58, "nodeName": "new_weights", "type": "Any"}, {"lineNumber": 159, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 223, "col_offset": 30, "nodeName": "question", "type": "Dict[str, Any]"}, {"lineNumber": 243, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 243, "col_offset": 57, "nodeName": "action_index", "type": "Any"}, {"lineNumber": 246, "col_offset": 39, "nodeName": "world", "type": "List[allennlp.semparse.worlds.wikitables_world.WikiTablesWorld]"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 251, "col_offset": 84, "nodeName": "i", "type": "int"}, {"lineNumber": 253, "col_offset": 47, "nodeName": "world", "type": "List[allennlp.semparse.worlds.wikitables_world.WikiTablesWorld]"}, {"lineNumber": 258, "col_offset": 76, "nodeName": "i", "type": "int"}, {"lineNumber": 273, "col_offset": 24, "nodeName": "state", "type": "allennlp.models.semantic_parsing.wikitables.wikitables_decoder_state.WikiTablesDecoderState"}, {"lineNumber": 151, "col_offset": 51, "nodeName": "name", "type": "Any"}, {"lineNumber": 246, "col_offset": 45, "nodeName": "i", "type": "int"}, {"lineNumber": 253, "col_offset": 53, "nodeName": "i", "type": "int"}]