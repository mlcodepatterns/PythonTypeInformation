[{"lineNumber": 16, "col_offset": 0, "nodeName": "allennlp_collate", "type": "Callable[[List[allennlp.data.instance.Instance]], Dict[str, Union[Any, Dict[str, Any]]]]"}, {"lineNumber": 13, "col_offset": 0, "nodeName": "TensorDict", "type": "Type[Dict[str, Union[Any, Dict[str, Any]]]]"}, {"lineNumber": 16, "col_offset": 51, "nodeName": "TensorDict", "type": "Type[Dict[str, Union[Any, Dict[str, Any]]]]"}, {"lineNumber": 21, "col_offset": 17, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "DataLoader", "type": "Any"}, {"lineNumber": 42, "col_offset": 41, "nodeName": "DataLoader", "type": "Type[DataLoader]"}, {"lineNumber": 13, "col_offset": 13, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "batch", "type": "allennlp.data.batch.Batch"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "default_implementation", "type": "str"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 17, "col_offset": 12, "nodeName": "Batch", "type": "Type[allennlp.data.batch.Batch]"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "instances", "type": "List[allennlp.data.instance.Instance]"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "as_tensor_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 37, "col_offset": 26, "nodeName": "Iterator", "type": "Any"}, {"lineNumber": 80, "col_offset": 19, "nodeName": "allennlp_collate", "type": "Callable[[List[allennlp.data.instance.Instance]], Dict[str, Union[Any, Dict[str, Any]]]]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "_data_generator", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "_batches_per_epoch", "type": "int"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "batches_per_epoch", "type": "int"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "sampler_", "type": "Any"}, {"lineNumber": 13, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 16, "col_offset": 32, "nodeName": "List", "type": "Any"}, {"lineNumber": 18, "col_offset": 11, "nodeName": "batch", "type": "allennlp.data.batch.Batch"}, {"lineNumber": 18, "col_offset": 32, "nodeName": "get_padding_lengths", "type": "Callable[[], Dict[str, Dict[str, int]]]"}, {"lineNumber": 37, "col_offset": 35, "nodeName": "TensorDict", "type": "Type[Dict[str, Union[Any, Dict[str, Any]]]]"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "PyTorchDataLoader"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "__iter__", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "PyTorchDataLoader"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "_batches_per_epoch", "type": "int"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "_batches_per_epoch", "type": "int"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "_batches_per_epoch", "type": "int"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 138, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "cls", "type": "Type[PyTorchDataLoader]"}, {"lineNumber": 13, "col_offset": 23, "nodeName": "Union", "type": "Any"}, {"lineNumber": 16, "col_offset": 37, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 18, "col_offset": 32, "nodeName": "batch", "type": "allennlp.data.batch.Batch"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "shuffle", "type": "bool"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "sampler", "type": "Any"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "batch_sampler", "type": "Any"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "num_workers", "type": "int"}, {"lineNumber": 95, "col_offset": 23, "nodeName": "collate_fn", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "pin_memory", "type": "bool"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "drop_last", "type": "bool"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "timeout", "type": "int"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "worker_init_fn", "type": "Any"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "multiprocessing_context", "type": "str"}, {"lineNumber": 106, "col_offset": 11, "nodeName": "self", "type": "PyTorchDataLoader"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "self", "type": "PyTorchDataLoader"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "self", "type": "PyTorchDataLoader"}, {"lineNumber": 117, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "_batches_per_epoch", "type": "int"}, {"lineNumber": 141, "col_offset": 20, "nodeName": "batch_sampler", "type": "allennlp.common.lazy.Lazy[Any]"}, {"lineNumber": 141, "col_offset": 47, "nodeName": "construct", "type": "Callable"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "sampler", "type": "allennlp.common.lazy.Lazy[Any]"}, {"lineNumber": 143, "col_offset": 48, "nodeName": "construct", "type": "Callable"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 147, "col_offset": 23, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "shuffle", "type": "bool"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "sampler_", "type": "Any"}, {"lineNumber": 150, "col_offset": 26, "nodeName": "batch_sampler_", "type": "Any"}, {"lineNumber": 151, "col_offset": 24, "nodeName": "num_workers", "type": "int"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "allennlp_collate", "type": "Callable[[List[allennlp.data.instance.Instance]], Dict[str, Union[Any, Dict[str, Any]]]]"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "pin_memory", "type": "bool"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "drop_last", "type": "bool"}, {"lineNumber": 158, "col_offset": 20, "nodeName": "timeout", "type": "int"}, {"lineNumber": 159, "col_offset": 27, "nodeName": "worker_init_fn", "type": "Any"}, {"lineNumber": 160, "col_offset": 36, "nodeName": "multiprocessing_context", "type": "str"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "batches_per_epoch", "type": "int"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "self", "type": "PyTorchDataLoader"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "StopIteration", "type": "Type[StopIteration]"}, {"lineNumber": 141, "col_offset": 47, "nodeName": "batch_sampler", "type": "allennlp.common.lazy.Lazy[Any]"}, {"lineNumber": 141, "col_offset": 83, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 143, "col_offset": 48, "nodeName": "sampler", "type": "allennlp.common.lazy.Lazy[Any]"}, {"lineNumber": 143, "col_offset": 78, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 13, "col_offset": 29, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "_data_generator", "type": "Any"}, {"lineNumber": 13, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 13, "col_offset": 43, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "next", "type": "Callable"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "_data_generator", "type": "Any"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "self", "type": "PyTorchDataLoader"}, {"lineNumber": 121, "col_offset": 43, "nodeName": "__iter__", "type": "Any"}, {"lineNumber": 119, "col_offset": 31, "nodeName": "self", "type": "PyTorchDataLoader"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "next", "type": "Callable"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "_data_generator", "type": "Any"}, {"lineNumber": 13, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 13, "col_offset": 53, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 121, "col_offset": 43, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 122, "col_offset": 31, "nodeName": "self", "type": "PyTorchDataLoader"}, {"lineNumber": 13, "col_offset": 53, "nodeName": "torch", "type": "Any"}]