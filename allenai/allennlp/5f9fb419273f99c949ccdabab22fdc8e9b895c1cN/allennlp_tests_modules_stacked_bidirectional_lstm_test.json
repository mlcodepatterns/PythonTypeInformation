[{"lineNumber": 13, "col_offset": 35, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "lstm", "type": "allennlp.modules.stacked_bidirectional_lstm.StackedBidirectionalLstm"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "is_bidirectional", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 15, "col_offset": 23, "nodeName": "rand", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 19, "col_offset": 23, "nodeName": "pack_padded_sequence", "type": "Any"}, {"lineNumber": 19, "col_offset": 44, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "StackedBidirectionalLstm", "type": "Type[allennlp.modules.stacked_bidirectional_lstm.StackedBidirectionalLstm]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 21, "col_offset": 20, "nodeName": "lstm", "type": "allennlp.modules.stacked_bidirectional_lstm.StackedBidirectionalLstm"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 22, "col_offset": 25, "nodeName": "_", "type": "Any"}, {"lineNumber": 22, "col_offset": 29, "nodeName": "pad_packed_sequence", "type": "Any"}, {"lineNumber": 22, "col_offset": 49, "nodeName": "output", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 32, "col_offset": 45, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 43, "col_offset": 45, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 53, "col_offset": 45, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "rand", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "mask", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 15, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 23, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 24, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 25, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 32, "col_offset": 18, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "get_input_dim", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 43, "col_offset": 18, "nodeName": "Seq2VecEncoder", "type": "Type[allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder]"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "get_input_dim", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "Seq2VecEncoder", "type": "Type[allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder]"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 23, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 24, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 25, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 23, "col_offset": 41, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 24, "col_offset": 41, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 25, "col_offset": 41, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "detach", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "output", "type": "Any"}]