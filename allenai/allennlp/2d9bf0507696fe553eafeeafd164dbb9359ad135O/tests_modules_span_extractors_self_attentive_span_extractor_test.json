[{"lineNumber": 11, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "extractor", "type": "allennlp.modules.span_extractors.span_extractor.SpanExtractor"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "sequence_tensor", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "span_representations", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "batch_element", "type": "int"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "spans", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "mean_embeddings", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "mean_embeddings", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "batch_element", "type": "int"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "spans", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "mean_embeddings", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "mean_embeddings", "type": "Any"}, {"lineNumber": 11, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 12, "col_offset": 20, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.modules.span_extractors.span_extractor.SpanExtractor]"}, {"lineNumber": 12, "col_offset": 46, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 13, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 13, "col_offset": 26, "nodeName": "extractor", "type": "allennlp.modules.span_extractors.span_extractor.SpanExtractor"}, {"lineNumber": 13, "col_offset": 37, "nodeName": "SelfAttentiveSpanExtractor", "type": "Any"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 18, "col_offset": 20, "nodeName": "SelfAttentiveSpanExtractor", "type": "Any"}, {"lineNumber": 19, "col_offset": 45, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 20, "col_offset": 44, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 28, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 32, "col_offset": 31, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 32, "col_offset": 41, "nodeName": "sequence_tensor", "type": "Any"}, {"lineNumber": 32, "col_offset": 58, "nodeName": "indices", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "span_representations", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "mean", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "mean", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "span_representations", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "mean", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "mean", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 12, "col_offset": 20, "nodeName": "SpanExtractor", "type": "Type[allennlp.modules.span_extractors.span_extractor.SpanExtractor]"}, {"lineNumber": 17, "col_offset": 35, "nodeName": "randn", "type": "Any"}, {"lineNumber": 18, "col_offset": 57, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "get_input_dim", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 33, "col_offset": 59, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "batch_element", "type": "int"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 40, "col_offset": 71, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 43, "col_offset": 48, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 43, "col_offset": 71, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 46, "col_offset": 37, "nodeName": "batch_element", "type": "int"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 49, "col_offset": 48, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 49, "col_offset": 71, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 52, "col_offset": 48, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 52, "col_offset": 71, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 17, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 17, "col_offset": 54, "nodeName": "input_dim", "type": "int"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "weight", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "bias", "type": "Any"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "size", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "sequence_tensor", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "data", "type": "Any"}, {"lineNumber": 40, "col_offset": 71, "nodeName": "data", "type": "Any"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "sequence_tensor", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 43, "col_offset": 48, "nodeName": "data", "type": "Any"}, {"lineNumber": 43, "col_offset": 71, "nodeName": "data", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "sequence_tensor", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 49, "col_offset": 48, "nodeName": "data", "type": "Any"}, {"lineNumber": 49, "col_offset": 71, "nodeName": "data", "type": "Any"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "sequence_tensor", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 52, "col_offset": 48, "nodeName": "data", "type": "Any"}, {"lineNumber": 52, "col_offset": 71, "nodeName": "data", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "_module", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "_module", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "span_representations", "type": "Any"}, {"lineNumber": 40, "col_offset": 71, "nodeName": "mean_embeddings", "type": "Any"}, {"lineNumber": 43, "col_offset": 71, "nodeName": "mean_embeddings", "type": "Any"}, {"lineNumber": 49, "col_offset": 71, "nodeName": "mean_embeddings", "type": "Any"}, {"lineNumber": 52, "col_offset": 71, "nodeName": "mean_embeddings", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "_global_attention", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "_global_attention", "type": "Any"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "batch_element", "type": "int"}, {"lineNumber": 40, "col_offset": 48, "nodeName": "spans", "type": "Any"}, {"lineNumber": 42, "col_offset": 42, "nodeName": "batch_element", "type": "int"}, {"lineNumber": 43, "col_offset": 48, "nodeName": "spans", "type": "Any"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "batch_element", "type": "int"}, {"lineNumber": 49, "col_offset": 48, "nodeName": "spans", "type": "Any"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "batch_element", "type": "int"}, {"lineNumber": 52, "col_offset": 48, "nodeName": "spans", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "extractor", "type": "Any"}]