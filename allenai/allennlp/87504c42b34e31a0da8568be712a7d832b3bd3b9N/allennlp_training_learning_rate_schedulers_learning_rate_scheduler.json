[{"lineNumber": 19, "col_offset": 28, "nodeName": "Scheduler", "type": "Type[allennlp.training.scheduler.Scheduler]"}, {"lineNumber": 19, "col_offset": 39, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 28, "col_offset": 43, "nodeName": "LearningRateScheduler", "type": "Type[LearningRateScheduler]"}, {"lineNumber": 48, "col_offset": 54, "nodeName": "_PyTorchLearningRateSchedulerWrapper", "type": "Type[_PyTorchLearningRateSchedulerWrapper]"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "_PyTorchLearningRateSchedulerWrapper", "type": "Type[_PyTorchLearningRateSchedulerWrapper]"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "_PyTorchLearningRateSchedulerWrapper", "type": "Type[_PyTorchLearningRateSchedulerWrapper]"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "_PyTorchLearningRateSchedulerWrapper", "type": "Type[_PyTorchLearningRateSchedulerWrapper]"}, {"lineNumber": 107, "col_offset": 43, "nodeName": "_PyTorchLearningRateSchedulerWithMetricsWrapper", "type": "Type[_PyTorchLearningRateSchedulerWithMetricsWrapper]"}, {"lineNumber": 142, "col_offset": 36, "nodeName": "_PyTorchLearningRateSchedulerWrapper", "type": "Type[_PyTorchLearningRateSchedulerWrapper]"}, {"lineNumber": 154, "col_offset": 46, "nodeName": "_PyTorchLearningRateSchedulerWrapper", "type": "Type[_PyTorchLearningRateSchedulerWrapper]"}, {"lineNumber": 168, "col_offset": 44, "nodeName": "_PyTorchLearningRateSchedulerWrapper", "type": "Type[_PyTorchLearningRateSchedulerWrapper]"}, {"lineNumber": 193, "col_offset": 56, "nodeName": "_PyTorchLearningRateSchedulerWrapper", "type": "Type[_PyTorchLearningRateSchedulerWrapper]"}, {"lineNumber": 25, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 30, "col_offset": 28, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 20, "col_offset": 34, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 20, "col_offset": 69, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 21, "col_offset": 42, "nodeName": "last_epoch", "type": "int"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "_LRScheduler", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "ConstantLearningRateScheduler"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "get_last_lr", "type": "Any"}, {"lineNumber": 36, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 45, "col_offset": 42, "nodeName": "state_dict", "type": "Dict[str, Any]"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "metric", "type": "float"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 57, "col_offset": 31, "nodeName": "metric", "type": "float"}, {"lineNumber": 68, "col_offset": 25, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 68, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 68, "col_offset": 59, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 68, "col_offset": 84, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "StepLR", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 84, "col_offset": 66, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 84, "col_offset": 91, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "MultiStepLR", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 99, "col_offset": 52, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 99, "col_offset": 77, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "ExponentialLR", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 103, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 124, "col_offset": 13, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "ReduceLROnPlateau", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 148, "col_offset": 34, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 148, "col_offset": 57, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 149, "col_offset": 23, "nodeName": "get_constant_schedule", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 150, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 160, "col_offset": 34, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 160, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 160, "col_offset": 80, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "get_constant_schedule_with_warmup", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "get_cosine_schedule_with_warmup", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 189, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 205, "col_offset": 20, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 207, "col_offset": 23, "nodeName": "get_cosine_with_hard_restarts_schedule_with_warmup", "type": "Any"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "__init__", "type": "Callable[[Any], None]"}, {"lineNumber": 214, "col_offset": 25, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 20, "col_offset": 34, "nodeName": "optim", "type": "Any"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 40, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "Any", "type": "Any"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 71, "col_offset": 43, "nodeName": "step_size", "type": "int"}, {"lineNumber": 71, "col_offset": 60, "nodeName": "gamma", "type": "float"}, {"lineNumber": 71, "col_offset": 78, "nodeName": "last_epoch", "type": "int"}, {"lineNumber": 84, "col_offset": 48, "nodeName": "List", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 87, "col_offset": 22, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 87, "col_offset": 44, "nodeName": "milestones", "type": "List[int]"}, {"lineNumber": 87, "col_offset": 62, "nodeName": "gamma", "type": "float"}, {"lineNumber": 87, "col_offset": 80, "nodeName": "last_epoch", "type": "int"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 101, "col_offset": 22, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 101, "col_offset": 39, "nodeName": "gamma", "type": "float"}, {"lineNumber": 101, "col_offset": 57, "nodeName": "last_epoch", "type": "int"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 127, "col_offset": 22, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "mode", "type": "str"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "factor", "type": "float"}, {"lineNumber": 130, "col_offset": 21, "nodeName": "patience", "type": "int"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "verbose", "type": "bool"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "threshold_mode", "type": "str"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "threshold", "type": "float"}, {"lineNumber": 134, "col_offset": 21, "nodeName": "cooldown", "type": "int"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "min_lr", "type": "Union[List[float], float]"}, {"lineNumber": 136, "col_offset": 16, "nodeName": "eps", "type": "float"}, {"lineNumber": 149, "col_offset": 55, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 149, "col_offset": 77, "nodeName": "last_epoch", "type": "int"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 162, "col_offset": 50, "nodeName": "num_warmup_steps", "type": "int"}, {"lineNumber": 162, "col_offset": 79, "nodeName": "last_epoch", "type": "int"}, {"lineNumber": 183, "col_offset": 22, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 184, "col_offset": 29, "nodeName": "num_warmup_steps", "type": "int"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "num_training_steps", "type": "int"}, {"lineNumber": 186, "col_offset": 23, "nodeName": "num_cycles", "type": "float"}, {"lineNumber": 187, "col_offset": 23, "nodeName": "last_epoch", "type": "int"}, {"lineNumber": 208, "col_offset": 22, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 209, "col_offset": 29, "nodeName": "num_warmup_steps", "type": "int"}, {"lineNumber": 210, "col_offset": 31, "nodeName": "num_training_steps", "type": "int"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "num_cycles", "type": "int"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "last_epoch", "type": "int"}, {"lineNumber": 20, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "optim", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "self", "type": "_PyTorchLearningRateSchedulerWrapper"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "optim", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 84, "col_offset": 53, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "optim", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "optim", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "optim", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 44, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 44, "col_offset": 52, "nodeName": "Any", "type": "Any"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "torch", "type": "Any"}]