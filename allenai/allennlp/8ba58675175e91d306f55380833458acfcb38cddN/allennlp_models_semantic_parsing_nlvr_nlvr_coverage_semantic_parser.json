[{"lineNumber": 25, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 29, "col_offset": 33, "nodeName": "NlvrSemanticParser", "type": "Type[allennlp.models.semantic_parsing.nlvr.nlvr_semantic_parser.NlvrSemanticParser]"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 354, "col_offset": 58, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "_agenda_coverage", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "_terminal_productions", "type": "Set[str]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "_checklist_cost_weight", "type": "float"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "checklist_cost_weight", "type": "float"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "_dynamic_cost_wait_epochs", "type": "None"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "_dynamic_cost_rate", "type": "None"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "dynamic_cost_weight", "type": "Dict[str, Union[int, float]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "_penalize_non_agenda_actions", "type": "bool"}, {"lineNumber": 110, "col_offset": 44, "nodeName": "penalize_non_agenda_actions", "type": "bool"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "_last_epoch_in_forward", "type": "None"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "model_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "archived_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "sentence_embedder_weight", "type": "str"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "vocab_index_mapping", "type": "List[Tuple[int, int]]"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "index", "type": "int"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "vocab_index_mapping", "type": "List[Tuple[int, int]]"}, {"lineNumber": 166, "col_offset": 70, "nodeName": "List", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "instance_epoch_num", "type": "int"}, {"lineNumber": 204, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "initial_rnn_state", "type": "Any"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "label_strings", "type": "Optional[Any]"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "agenda_list", "type": "List[Any]"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "initial_checklist_states", "type": "List[allennlp.nn.decoding.checklist_state.ChecklistState]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "agenda_data", "type": "List[Any]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "best_action_sequences", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "batch_action_strings", "type": "Any"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "batch_denotations", "type": "Any"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 186, "col_offset": 48, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "terminal_indices", "type": "List[List[int]]"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "target_checklist_list", "type": "List[List[int]]"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "agenda_indices_set", "type": "Set[int]"}, {"lineNumber": 301, "col_offset": 11, "nodeName": "_penalize_non_agenda_actions", "type": "Any"}, {"lineNumber": 263, "col_offset": 71, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 347, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 363, "col_offset": 8, "nodeName": "checklist_balance", "type": "Any"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "checklist_cost", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "denotation_cost", "type": "Any"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "checklist_cost", "type": "Any"}, {"lineNumber": 380, "col_offset": 15, "nodeName": "cost", "type": "Any"}, {"lineNumber": 354, "col_offset": 58, "nodeName": "torch", "type": "Any"}, {"lineNumber": 391, "col_offset": 8, "nodeName": "model_scores", "type": "List[float]"}, {"lineNumber": 392, "col_offset": 8, "nodeName": "all_actions", "type": "Any"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "agenda_sequences", "type": "List[List[Any]]"}, {"lineNumber": 396, "col_offset": 8, "nodeName": "all_agenda_indices", "type": "List[List[int]]"}, {"lineNumber": 382, "col_offset": 40, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 416, "col_offset": 8, "nodeName": "sentence_embedder_params", "type": "Any"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "sentence_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 418, "col_offset": 8, "nodeName": "action_embedding_dim", "type": "int"}, {"lineNumber": 419, "col_offset": 8, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "attention_function_type", "type": "Any"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "beam_size", "type": "int"}, {"lineNumber": 426, "col_offset": 8, "nodeName": "normalize_beam_score_by_length", "type": "bool"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "max_decoding_steps", "type": "int"}, {"lineNumber": 428, "col_offset": 8, "nodeName": "checklist_cost_weight", "type": "float"}, {"lineNumber": 429, "col_offset": 8, "nodeName": "dynamic_cost_weight", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "penalize_non_agenda_actions", "type": "bool"}, {"lineNumber": 431, "col_offset": 8, "nodeName": "initial_mml_model_file", "type": "Any"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 32, "nodeName": "Average", "type": "Any"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "ExpectedRiskMinimization", "type": "Type[allennlp.nn.decoding.decoder_trainers.expected_risk_minimization.ExpectedRiskMinimization[Any]]"}, {"lineNumber": 96, "col_offset": 41, "nodeName": "beam_size", "type": "int"}, {"lineNumber": 96, "col_offset": 52, "nodeName": "normalize_beam_score_by_length", "type": "bool"}, {"lineNumber": 96, "col_offset": 84, "nodeName": "max_decoding_steps", "type": "int"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 37, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "NlvrDecoderStep", "type": "Type[allennlp.models.semantic_parsing.nlvr.nlvr_decoder_step.NlvrDecoderStep]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "_dynamic_cost_wait_epochs", "type": "Union[int, float]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "_dynamic_cost_rate", "type": "Union[int, float]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "initial_mml_model_file", "type": "str"}, {"lineNumber": 127, "col_offset": 56, "nodeName": "Archive", "type": "Type[allennlp.models.archival.Archive]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 27, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "weights", "type": "Any"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "items", "type": "Callable"}, {"lineNumber": 166, "col_offset": 55, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "token", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "archived_token_index", "type": "int"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "_dynamic_cost_rate", "type": "Any"}, {"lineNumber": 204, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "worlds", "type": "List[List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "action_embeddings", "type": "Any"}, {"lineNumber": 205, "col_offset": 27, "nodeName": "action_indices", "type": "Any"}, {"lineNumber": 205, "col_offset": 44, "nodeName": "_embed_actions", "type": "Any"}, {"lineNumber": 205, "col_offset": 64, "nodeName": "actions", "type": "List[List[Tuple[str, bool, Any]]]"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "_get_initial_rnn_state", "type": "Any"}, {"lineNumber": 207, "col_offset": 56, "nodeName": "sentence", "type": "Dict[str, Any]"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "instance_actions", "type": "nothing"}, {"lineNumber": 219, "col_offset": 30, "nodeName": "instance_agenda", "type": "nothing"}, {"lineNumber": 219, "col_offset": 49, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 219, "col_offset": 53, "nodeName": "actions", "type": "List[List[Tuple[str, bool, Any]]]"}, {"lineNumber": 219, "col_offset": 62, "nodeName": "agenda_list", "type": "List[Any]"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "checklist_info", "type": "Any"}, {"lineNumber": 221, "col_offset": 65, "nodeName": "checklist_info", "type": "Any"}, {"lineNumber": 229, "col_offset": 24, "nodeName": "NlvrDecoderState", "type": "Type[allennlp.models.semantic_parsing.nlvr.nlvr_decoder_state.NlvrDecoderState]"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 242, "col_offset": 18, "nodeName": "decode", "type": "Any"}, {"lineNumber": 242, "col_offset": 47, "nodeName": "initial_state", "type": "allennlp.models.semantic_parsing.nlvr.nlvr_decoder_state.NlvrDecoderState"}, {"lineNumber": 243, "col_offset": 47, "nodeName": "_decoder_step", "type": "Any"}, {"lineNumber": 244, "col_offset": 47, "nodeName": "_get_state_cost", "type": "Any"}, {"lineNumber": 245, "col_offset": 32, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 246, "col_offset": 31, "nodeName": "_get_action_strings", "type": "Any"}, {"lineNumber": 246, "col_offset": 56, "nodeName": "actions", "type": "List[List[Tuple[str, bool, Any]]]"}, {"lineNumber": 246, "col_offset": 65, "nodeName": "best_action_sequences", "type": "Any"}, {"lineNumber": 247, "col_offset": 28, "nodeName": "_get_denotations", "type": "Any"}, {"lineNumber": 247, "col_offset": 50, "nodeName": "batch_action_strings", "type": "Any"}, {"lineNumber": 247, "col_offset": 72, "nodeName": "worlds", "type": "List[List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]]"}, {"lineNumber": 248, "col_offset": 11, "nodeName": "labels", "type": "Any"}, {"lineNumber": 257, "col_offset": 45, "nodeName": "batch_action_strings", "type": "Any"}, {"lineNumber": 258, "col_offset": 37, "nodeName": "batch_denotations", "type": "Any"}, {"lineNumber": 262, "col_offset": 36, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 283, "col_offset": 29, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "index", "type": "int"}, {"lineNumber": 284, "col_offset": 19, "nodeName": "action", "type": "Tuple[str, bool, Any]"}, {"lineNumber": 284, "col_offset": 29, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 284, "col_offset": 39, "nodeName": "all_actions", "type": "List[Tuple[str, bool, Any]]"}, {"lineNumber": 296, "col_offset": 27, "nodeName": "new_variable_with_data", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 296, "col_offset": 55, "nodeName": "agenda", "type": "Any"}, {"lineNumber": 299, "col_offset": 27, "nodeName": "new_variable_with_data", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 299, "col_offset": 55, "nodeName": "agenda", "type": "Any"}, {"lineNumber": 301, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "checklist_mask", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "checklist_mask", "type": "Any"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "target_checklist", "type": "Any"}, {"lineNumber": 306, "col_offset": 33, "nodeName": "terminal_actions", "type": "Any"}, {"lineNumber": 306, "col_offset": 51, "nodeName": "checklist_mask", "type": "Any"}, {"lineNumber": 317, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 317, "col_offset": 25, "nodeName": "worlds", "type": "List[List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]]"}, {"lineNumber": 318, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 318, "col_offset": 23, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 320, "col_offset": 12, "nodeName": "instance_action_strings", "type": "Union[List[str], List[nothing]]"}, {"lineNumber": 321, "col_offset": 12, "nodeName": "sequence_is_correct", "type": "List[bool]"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "in_agenda_ratio", "type": "float"}, {"lineNumber": 323, "col_offset": 12, "nodeName": "instance_possible_actions", "type": "List[Tuple[str, bool, Any]]"}, {"lineNumber": 324, "col_offset": 15, "nodeName": "instance_action_strings", "type": "Union[List[str], List[nothing]]"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "correct_in_world", "type": "Union[bool, Any]"}, {"lineNumber": 341, "col_offset": 36, "nodeName": "sequence_is_correct", "type": "Union[List[bool], Any]"}, {"lineNumber": 347, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 354, "col_offset": 37, "nodeName": "NlvrDecoderState", "type": "Type[allennlp.models.semantic_parsing.nlvr.nlvr_decoder_state.NlvrDecoderState]"}, {"lineNumber": 363, "col_offset": 28, "nodeName": "get_balance", "type": "Callable[[], Any]"}, {"lineNumber": 364, "col_offset": 25, "nodeName": "sum", "type": "Any"}, {"lineNumber": 370, "col_offset": 26, "nodeName": "sum", "type": "Any"}, {"lineNumber": 371, "col_offset": 25, "nodeName": "_checklist_cost_weight", "type": "Any"}, {"lineNumber": 371, "col_offset": 55, "nodeName": "checklist_cost", "type": "Any"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "cost", "type": "Any"}, {"lineNumber": 377, "col_offset": 19, "nodeName": "checklist_cost", "type": "Any"}, {"lineNumber": 379, "col_offset": 12, "nodeName": "cost", "type": "Any"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "costs", "type": "List[float]"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "costs", "type": "List[nothing]"}, {"lineNumber": 392, "col_offset": 22, "nodeName": "possible_actions", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "agenda", "type": "Any"}, {"lineNumber": 397, "col_offset": 20, "nodeName": "checklist_target", "type": "Any"}, {"lineNumber": 397, "col_offset": 40, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 397, "col_offset": 44, "nodeName": "terminal_actions", "type": "Any"}, {"lineNumber": 397, "col_offset": 68, "nodeName": "checklist_target", "type": "Any"}, {"lineNumber": 398, "col_offset": 12, "nodeName": "agenda_indices", "type": "List[int]"}, {"lineNumber": 407, "col_offset": 26, "nodeName": "agenda_sequences", "type": "List[List[Any]]"}, {"lineNumber": 408, "col_offset": 34, "nodeName": "all_agenda_indices", "type": "List[List[int]]"}, {"lineNumber": 409, "col_offset": 27, "nodeName": "action_sequences", "type": "List[List[Any]]"}, {"lineNumber": 410, "col_offset": 35, "nodeName": "action_history", "type": "Any"}, {"lineNumber": 411, "col_offset": 25, "nodeName": "costs", "type": "Union[List[float], List[nothing]]"}, {"lineNumber": 412, "col_offset": 26, "nodeName": "model_scores", "type": "List[float]"}, {"lineNumber": 415, "col_offset": 40, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 416, "col_offset": 35, "nodeName": "pop", "type": "Any"}, {"lineNumber": 417, "col_offset": 28, "nodeName": "from_params", "type": "Callable[[Any, allennlp.data.vocabulary.Vocabulary, allennlp.common.params.Params], allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 417, "col_offset": 58, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 417, "col_offset": 65, "nodeName": "sentence_embedder_params", "type": "Any"}, {"lineNumber": 418, "col_offset": 31, "nodeName": "pop_int", "type": "Callable[..., int]"}, {"lineNumber": 419, "col_offset": 18, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 420, "col_offset": 34, "nodeName": "pop", "type": "Any"}, {"lineNumber": 421, "col_offset": 11, "nodeName": "attention_function_type", "type": "Any"}, {"lineNumber": 422, "col_offset": 12, "nodeName": "attention_function", "type": "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction"}, {"lineNumber": 424, "col_offset": 12, "nodeName": "attention_function", "type": "None"}, {"lineNumber": 425, "col_offset": 20, "nodeName": "pop_int", "type": "Callable[..., int]"}, {"lineNumber": 426, "col_offset": 41, "nodeName": "pop_bool", "type": "Callable[..., bool]"}, {"lineNumber": 427, "col_offset": 29, "nodeName": "pop_int", "type": "Callable[..., int]"}, {"lineNumber": 428, "col_offset": 32, "nodeName": "pop_float", "type": "Callable[..., float]"}, {"lineNumber": 429, "col_offset": 30, "nodeName": "pop", "type": "Any"}, {"lineNumber": 430, "col_offset": 38, "nodeName": "pop_bool", "type": "Callable[..., bool]"}, {"lineNumber": 431, "col_offset": 33, "nodeName": "pop", "type": "Any"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "assert_empty", "type": "Callable[[str], None]"}, {"lineNumber": 432, "col_offset": 28, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 433, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 433, "col_offset": 19, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 90, "col_offset": 63, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 91, "col_offset": 75, "nodeName": "sentence_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 92, "col_offset": 78, "nodeName": "action_embedding_dim", "type": "int"}, {"lineNumber": 93, "col_offset": 65, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 99, "col_offset": 41, "nodeName": "values", "type": "Callable"}, {"lineNumber": 101, "col_offset": 66, "nodeName": "action_embedding_dim", "type": "int"}, {"lineNumber": 102, "col_offset": 64, "nodeName": "attention_function", "type": "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 45, "nodeName": "dynamic_cost_weight", "type": "Dict[str, Union[int, float]]"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 38, "nodeName": "dynamic_cost_weight", "type": "Dict[str, Union[int, float]]"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "isfile", "type": "Callable[[Union[bytes, str, _PathLike[Any]]], bool]"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "initial_mml_model_file", "type": "str"}, {"lineNumber": 118, "col_offset": 16, "nodeName": "archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "sentence_embedder_weight", "type": "str"}, {"lineNumber": 132, "col_offset": 43, "nodeName": "archived_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "sentence_embedder_weight", "type": "str"}, {"lineNumber": 133, "col_offset": 43, "nodeName": "model_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 134, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "archived_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 138, "col_offset": 23, "nodeName": "model_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "get_vocab_size", "type": "Any"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "get_token_from_index", "type": "Any"}, {"lineNumber": 170, "col_offset": 35, "nodeName": "get_token_index", "type": "Callable[..., int]"}, {"lineNumber": 170, "col_offset": 66, "nodeName": "token", "type": "Any"}, {"lineNumber": 175, "col_offset": 96, "nodeName": "token", "type": "Any"}, {"lineNumber": 166, "col_offset": 75, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "List", "type": "Any"}, {"lineNumber": 193, "col_offset": 45, "nodeName": "epoch_num", "type": "List[int]"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "epoch_num", "type": "List[int]"}, {"lineNumber": 194, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "training", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "instance_epoch_num", "type": "int"}, {"lineNumber": 198, "col_offset": 37, "nodeName": "_last_epoch_in_forward", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "_last_epoch_in_forward", "type": "int"}, {"lineNumber": 203, "col_offset": 46, "nodeName": "instance_epoch_num", "type": "int"}, {"lineNumber": 205, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 210, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "_create_grammar_state", "type": "Any"}, {"lineNumber": 212, "col_offset": 90, "nodeName": "i", "type": "int"}, {"lineNumber": 215, "col_offset": 59, "nodeName": "labels", "type": "Any"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "_get_label_strings", "type": "Any"}, {"lineNumber": 215, "col_offset": 48, "nodeName": "labels", "type": "Any"}, {"lineNumber": 217, "col_offset": 23, "nodeName": "agenda", "type": "Any"}, {"lineNumber": 217, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "_get_checklist_info", "type": "Any"}, {"lineNumber": 220, "col_offset": 54, "nodeName": "instance_agenda", "type": "nothing"}, {"lineNumber": 220, "col_offset": 71, "nodeName": "instance_actions", "type": "nothing"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "checklist_target", "type": "Any"}, {"lineNumber": 221, "col_offset": 30, "nodeName": "terminal_actions", "type": "Any"}, {"lineNumber": 221, "col_offset": 48, "nodeName": "checklist_mask", "type": "Any"}, {"lineNumber": 222, "col_offset": 32, "nodeName": "new_variable_with_size", "type": "Callable[[Any, Tuple[int, ...], Any], Any]"}, {"lineNumber": 222, "col_offset": 60, "nodeName": "checklist_target", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 231, "col_offset": 47, "nodeName": "initial_score_list", "type": "List[Any]"}, {"lineNumber": 232, "col_offset": 51, "nodeName": "initial_rnn_state", "type": "Any"}, {"lineNumber": 233, "col_offset": 55, "nodeName": "initial_grammar_state", "type": "List[Any]"}, {"lineNumber": 234, "col_offset": 59, "nodeName": "action_embeddings", "type": "Any"}, {"lineNumber": 235, "col_offset": 56, "nodeName": "action_indices", "type": "Any"}, {"lineNumber": 236, "col_offset": 58, "nodeName": "actions", "type": "List[List[Tuple[str, bool, Any]]]"}, {"lineNumber": 237, "col_offset": 48, "nodeName": "worlds", "type": "List[List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]]"}, {"lineNumber": 238, "col_offset": 55, "nodeName": "label_strings", "type": "Optional[Any]"}, {"lineNumber": 239, "col_offset": 57, "nodeName": "initial_checklist_states", "type": "List[allennlp.nn.decoding.checklist_state.ChecklistState]"}, {"lineNumber": 241, "col_offset": 52, "nodeName": "agenda_", "type": "Any"}, {"lineNumber": 241, "col_offset": 63, "nodeName": "agenda_list", "type": "List[Any]"}, {"lineNumber": 242, "col_offset": 18, "nodeName": "_decoder_trainer", "type": "Any"}, {"lineNumber": 243, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 246, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 247, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "_update_metrics", "type": "Any"}, {"lineNumber": 257, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 186, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 186, "col_offset": 58, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 262, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 263, "col_offset": 41, "nodeName": "List", "type": "Any"}, {"lineNumber": 287, "col_offset": 28, "nodeName": "_terminal_productions", "type": "Any"}, {"lineNumber": 296, "col_offset": 27, "nodeName": "util", "type": "module"}, {"lineNumber": 297, "col_offset": 55, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 297, "col_offset": 68, "nodeName": "terminal_indices", "type": "List[List[int]]"}, {"lineNumber": 299, "col_offset": 27, "nodeName": "util", "type": "module"}, {"lineNumber": 300, "col_offset": 55, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 300, "col_offset": 68, "nodeName": "target_checklist_list", "type": "List[List[int]]"}, {"lineNumber": 303, "col_offset": 29, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 303, "col_offset": 45, "nodeName": "target_checklist", "type": "Any"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "float", "type": "Any"}, {"lineNumber": 263, "col_offset": 77, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 264, "col_offset": 77, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 265, "col_offset": 77, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 309, "col_offset": 40, "nodeName": "List", "type": "Any"}, {"lineNumber": 310, "col_offset": 32, "nodeName": "List", "type": "Any"}, {"lineNumber": 311, "col_offset": 39, "nodeName": "List", "type": "Any"}, {"lineNumber": 312, "col_offset": 42, "nodeName": "List", "type": "Any"}, {"lineNumber": 313, "col_offset": 37, "nodeName": "List", "type": "Any"}, {"lineNumber": 323, "col_offset": 40, "nodeName": "possible_actions", "type": "List[List[Tuple[str, bool, Any]]]"}, {"lineNumber": 325, "col_offset": 16, "nodeName": "terminal_agenda_actions", "type": "List[str]"}, {"lineNumber": 326, "col_offset": 20, "nodeName": "rule_id", "type": "int"}, {"lineNumber": 335, "col_offset": 16, "nodeName": "in_agenda_ratio", "type": "float"}, {"lineNumber": 336, "col_offset": 16, "nodeName": "instance_label_strings", "type": "List[str]"}, {"lineNumber": 337, "col_offset": 16, "nodeName": "instance_worlds", "type": "List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "_consistency", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "_agenda_coverage", "type": "Any"}, {"lineNumber": 344, "col_offset": 34, "nodeName": "in_agenda_ratio", "type": "float"}, {"lineNumber": 349, "col_offset": 39, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 349, "col_offset": 76, "nodeName": "reset", "type": "bool"}, {"lineNumber": 350, "col_offset": 31, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 350, "col_offset": 60, "nodeName": "reset", "type": "bool"}, {"lineNumber": 351, "col_offset": 35, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 351, "col_offset": 68, "nodeName": "reset", "type": "bool"}, {"lineNumber": 347, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 347, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 359, "col_offset": 15, "nodeName": "is_finished", "type": "Callable[[], bool]"}, {"lineNumber": 360, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 364, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 364, "col_offset": 36, "nodeName": "checklist_balance", "type": "Any"}, {"lineNumber": 370, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 370, "col_offset": 36, "nodeName": "float", "type": "Any"}, {"lineNumber": 371, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "label_strings", "type": "List[List[str]]"}, {"lineNumber": 376, "col_offset": 42, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 379, "col_offset": 19, "nodeName": "checklist_cost", "type": "Any"}, {"lineNumber": 387, "col_offset": 45, "nodeName": "is_finished", "type": "Any"}, {"lineNumber": 391, "col_offset": 24, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 391, "col_offset": 60, "nodeName": "score", "type": "Any"}, {"lineNumber": 391, "col_offset": 69, "nodeName": "score", "type": "Any"}, {"lineNumber": 392, "col_offset": 22, "nodeName": "state", "type": "Any"}, {"lineNumber": 394, "col_offset": 32, "nodeName": "history", "type": "Any"}, {"lineNumber": 394, "col_offset": 43, "nodeName": "action_history", "type": "Any"}, {"lineNumber": 397, "col_offset": 44, "nodeName": "state", "type": "Any"}, {"lineNumber": 397, "col_offset": 68, "nodeName": "state", "type": "Any"}, {"lineNumber": 399, "col_offset": 16, "nodeName": "action", "type": "Any"}, {"lineNumber": 399, "col_offset": 24, "nodeName": "is_wanted", "type": "Any"}, {"lineNumber": 399, "col_offset": 37, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 399, "col_offset": 41, "nodeName": "agenda", "type": "Any"}, {"lineNumber": 399, "col_offset": 49, "nodeName": "checklist_target", "type": "Any"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "action_int", "type": "int"}, {"lineNumber": 401, "col_offset": 16, "nodeName": "is_wanted_int", "type": "int"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 406, "col_offset": 38, "nodeName": "agenda_indices", "type": "List[int]"}, {"lineNumber": 410, "col_offset": 35, "nodeName": "state", "type": "Any"}, {"lineNumber": 382, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 382, "col_offset": 50, "nodeName": "List", "type": "Any"}, {"lineNumber": 416, "col_offset": 35, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 417, "col_offset": 28, "nodeName": "TextFieldEmbedder", "type": "Type[allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 418, "col_offset": 31, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 419, "col_offset": 18, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 419, "col_offset": 45, "nodeName": "pop", "type": "Any"}, {"lineNumber": 420, "col_offset": 34, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 422, "col_offset": 33, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.modules.similarity_functions.similarity_function.SimilarityFunction]"}, {"lineNumber": 422, "col_offset": 64, "nodeName": "attention_function_type", "type": "Any"}, {"lineNumber": 425, "col_offset": 20, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 426, "col_offset": 41, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 427, "col_offset": 29, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 428, "col_offset": 32, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 429, "col_offset": 30, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 430, "col_offset": 38, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 431, "col_offset": 33, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 432, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 432, "col_offset": 28, "nodeName": "cls", "type": "Any"}, {"lineNumber": 434, "col_offset": 37, "nodeName": "sentence_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 435, "col_offset": 40, "nodeName": "action_embedding_dim", "type": "int"}, {"lineNumber": 436, "col_offset": 27, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 437, "col_offset": 38, "nodeName": "attention_function", "type": "Optional[allennlp.modules.similarity_functions.similarity_function.SimilarityFunction]"}, {"lineNumber": 438, "col_offset": 29, "nodeName": "beam_size", "type": "int"}, {"lineNumber": 439, "col_offset": 38, "nodeName": "max_decoding_steps", "type": "int"}, {"lineNumber": 440, "col_offset": 50, "nodeName": "normalize_beam_score_by_length", "type": "bool"}, {"lineNumber": 441, "col_offset": 41, "nodeName": "checklist_cost_weight", "type": "float"}, {"lineNumber": 442, "col_offset": 39, "nodeName": "dynamic_cost_weight", "type": "Any"}, {"lineNumber": 443, "col_offset": 47, "nodeName": "penalize_non_agenda_actions", "type": "bool"}, {"lineNumber": 444, "col_offset": 42, "nodeName": "initial_mml_model_file", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 90, "col_offset": 14, "nodeName": "NlvrCoverageSemanticParser", "type": "Any"}, {"lineNumber": 90, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 41, "nodeName": "terminal_productions", "type": "Dict[Any, str]"}, {"lineNumber": 100, "col_offset": 64, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 103, "col_offset": 60, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 103, "col_offset": 64, "nodeName": "_terminal_productions", "type": "Set[str]"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 118, "col_offset": 39, "nodeName": "initial_mml_model_file", "type": "str"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "_initialize_weights_from_archive", "type": "Any"}, {"lineNumber": 119, "col_offset": 54, "nodeName": "archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 146, "col_offset": 20, "nodeName": "archived_projection_weights", "type": "Any"}, {"lineNumber": 146, "col_offset": 50, "nodeName": "data", "type": "Any"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "new_weights", "type": "Any"}, {"lineNumber": 148, "col_offset": 72, "nodeName": "archived_projection_weights", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 52, "nodeName": "name", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "copy_", "type": "Any"}, {"lineNumber": 164, "col_offset": 50, "nodeName": "new_weights", "type": "Any"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 169, "col_offset": 58, "nodeName": "index", "type": "int"}, {"lineNumber": 170, "col_offset": 35, "nodeName": "archived_vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "get_token_from_index", "type": "Callable[..., str]"}, {"lineNumber": 175, "col_offset": 51, "nodeName": "archived_token_index", "type": "int"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 186, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 195, "col_offset": 33, "nodeName": "instance_epoch_num", "type": "int"}, {"lineNumber": 198, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 199, "col_offset": 19, "nodeName": "instance_epoch_num", "type": "int"}, {"lineNumber": 199, "col_offset": 41, "nodeName": "_dynamic_cost_wait_epochs", "type": "Any"}, {"lineNumber": 200, "col_offset": 20, "nodeName": "decrement", "type": "Any"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "_checklist_cost_weight", "type": "Any"}, {"lineNumber": 201, "col_offset": 51, "nodeName": "decrement", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 210, "col_offset": 39, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 210, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 212, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 212, "col_offset": 74, "nodeName": "actions", "type": "List[List[Tuple[str, bool, Any]]]"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 213, "col_offset": 39, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 217, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 217, "col_offset": 42, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 217, "col_offset": 48, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 222, "col_offset": 32, "nodeName": "util", "type": "module"}, {"lineNumber": 223, "col_offset": 60, "nodeName": "size", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "initial_checklist_states", "type": "List[allennlp.nn.decoding.checklist_state.ChecklistState]"}, {"lineNumber": 225, "col_offset": 44, "nodeName": "ChecklistState", "type": "Type[allennlp.nn.decoding.checklist_state.ChecklistState]"}, {"lineNumber": 229, "col_offset": 55, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 242, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 250, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 250, "col_offset": 48, "nodeName": "batch_action_strings", "type": "Any"}, {"lineNumber": 251, "col_offset": 40, "nodeName": "worlds", "type": "List[List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]]"}, {"lineNumber": 252, "col_offset": 47, "nodeName": "label_strings", "type": "Optional[Any]"}, {"lineNumber": 253, "col_offset": 50, "nodeName": "actions", "type": "List[List[Tuple[str, bool, Any]]]"}, {"lineNumber": 254, "col_offset": 45, "nodeName": "agenda_data", "type": "List[Any]"}, {"lineNumber": 186, "col_offset": 58, "nodeName": "torch", "type": "Any"}, {"lineNumber": 263, "col_offset": 46, "nodeName": "ProductionRuleArray", "type": "Type[Tuple[str, bool, Any]]"}, {"lineNumber": 283, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 283, "col_offset": 38, "nodeName": "x", "type": "Any"}, {"lineNumber": 283, "col_offset": 45, "nodeName": "x", "type": "Any"}, {"lineNumber": 287, "col_offset": 15, "nodeName": "action", "type": "Tuple[str, bool, Any]"}, {"lineNumber": 287, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 288, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 289, "col_offset": 19, "nodeName": "index", "type": "int"}, {"lineNumber": 289, "col_offset": 28, "nodeName": "agenda_indices_set", "type": "Set[int]"}, {"lineNumber": 297, "col_offset": 55, "nodeName": "torch", "type": "Any"}, {"lineNumber": 300, "col_offset": 55, "nodeName": "torch", "type": "Any"}, {"lineNumber": 303, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 263, "col_offset": 77, "nodeName": "torch", "type": "Any"}, {"lineNumber": 264, "col_offset": 77, "nodeName": "torch", "type": "Any"}, {"lineNumber": 265, "col_offset": 77, "nodeName": "torch", "type": "Any"}, {"lineNumber": 320, "col_offset": 62, "nodeName": "action_strings", "type": "List[List[List[str]]]"}, {"lineNumber": 323, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 326, "col_offset": 31, "nodeName": "agenda_data", "type": "List[List[int]]"}, {"lineNumber": 329, "col_offset": 20, "nodeName": "action_string", "type": "str"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "right_side", "type": "str"}, {"lineNumber": 336, "col_offset": 41, "nodeName": "label_strings", "type": "List[List[str]]"}, {"lineNumber": 337, "col_offset": 34, "nodeName": "worlds", "type": "List[List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]]"}, {"lineNumber": 338, "col_offset": 38, "nodeName": "_check_denotation", "type": "Any"}, {"lineNumber": 338, "col_offset": 61, "nodeName": "instance_action_strings", "type": "List[str]"}, {"lineNumber": 339, "col_offset": 61, "nodeName": "instance_label_strings", "type": "List[str]"}, {"lineNumber": 340, "col_offset": 61, "nodeName": "instance_worlds", "type": "List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]"}, {"lineNumber": 342, "col_offset": 16, "nodeName": "_denotation_accuracy", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 344, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 349, "col_offset": 39, "nodeName": "_denotation_accuracy", "type": "Any"}, {"lineNumber": 350, "col_offset": 31, "nodeName": "_consistency", "type": "Any"}, {"lineNumber": 351, "col_offset": 35, "nodeName": "_agenda_coverage", "type": "Any"}, {"lineNumber": 359, "col_offset": 15, "nodeName": "state", "type": "allennlp.models.semantic_parsing.nlvr.nlvr_decoder_state.NlvrDecoderState"}, {"lineNumber": 363, "col_offset": 28, "nodeName": "checklist_state", "type": "List[allennlp.nn.decoding.checklist_state.ChecklistState]"}, {"lineNumber": 370, "col_offset": 36, "nodeName": "checklist_target", "type": "Any"}, {"lineNumber": 376, "col_offset": 11, "nodeName": "state", "type": "allennlp.models.semantic_parsing.nlvr.nlvr_decoder_state.NlvrDecoderState"}, {"lineNumber": 376, "col_offset": 46, "nodeName": "_check_state_denotations", "type": "Any"}, {"lineNumber": 376, "col_offset": 76, "nodeName": "state", "type": "allennlp.models.semantic_parsing.nlvr.nlvr_decoder_state.NlvrDecoderState"}, {"lineNumber": 379, "col_offset": 72, "nodeName": "denotation_cost", "type": "Any"}, {"lineNumber": 387, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 387, "col_offset": 15, "nodeName": "batch_indices", "type": "Any"}, {"lineNumber": 387, "col_offset": 45, "nodeName": "state", "type": "Any"}, {"lineNumber": 388, "col_offset": 21, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 391, "col_offset": 30, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 391, "col_offset": 69, "nodeName": "state", "type": "Any"}, {"lineNumber": 393, "col_offset": 29, "nodeName": "_get_action_string", "type": "Any"}, {"lineNumber": 393, "col_offset": 78, "nodeName": "action", "type": "Any"}, {"lineNumber": 394, "col_offset": 43, "nodeName": "state", "type": "Any"}, {"lineNumber": 400, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 401, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 402, "col_offset": 19, "nodeName": "is_wanted_int", "type": "int"}, {"lineNumber": 404, "col_offset": 12, "nodeName": "agenda_sequences", "type": "List[List[Any]]"}, {"lineNumber": 406, "col_offset": 12, "nodeName": "all_agenda_indices", "type": "List[List[int]]"}, {"lineNumber": 419, "col_offset": 45, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 422, "col_offset": 33, "nodeName": "SimilarityFunction", "type": "Type[allennlp.modules.similarity_functions.similarity_function.SimilarityFunction]"}, {"lineNumber": 100, "col_offset": 64, "nodeName": "_encoder", "type": "Any"}, {"lineNumber": 103, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 130, "col_offset": 35, "nodeName": "archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 146, "col_offset": 50, "nodeName": "weights", "type": "Any"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "clone", "type": "Any"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "new_weights", "type": "Any"}, {"lineNumber": 149, "col_offset": 21, "nodeName": "name", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "vocab_index_mapping", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "archived_embedding_weights", "type": "Any"}, {"lineNumber": 155, "col_offset": 49, "nodeName": "data", "type": "Any"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "new_weights", "type": "Any"}, {"lineNumber": 157, "col_offset": 49, "nodeName": "vocab_index_mapping", "type": "Any"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "new_weights", "type": "Any"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 168, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "archived_vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "vocab_index_mapping", "type": "List[Tuple[int, int]]"}, {"lineNumber": 176, "col_offset": 44, "nodeName": "index", "type": "int"}, {"lineNumber": 176, "col_offset": 51, "nodeName": "archived_token_index", "type": "int"}, {"lineNumber": 166, "col_offset": 81, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 166, "col_offset": 86, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 199, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 200, "col_offset": 32, "nodeName": "_checklist_cost_weight", "type": "Any"}, {"lineNumber": 200, "col_offset": 62, "nodeName": "_dynamic_cost_rate", "type": "Any"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 202, "col_offset": 67, "nodeName": "_checklist_cost_weight", "type": "Any"}, {"lineNumber": 212, "col_offset": 60, "nodeName": "worlds", "type": "List[List[allennlp.semparse.worlds.nlvr_world.NlvrWorld]]"}, {"lineNumber": 212, "col_offset": 82, "nodeName": "i", "type": "int"}, {"lineNumber": 223, "col_offset": 60, "nodeName": "checklist_target", "type": "Any"}, {"lineNumber": 225, "col_offset": 76, "nodeName": "terminal_actions", "type": "Any"}, {"lineNumber": 226, "col_offset": 76, "nodeName": "checklist_target", "type": "Any"}, {"lineNumber": 227, "col_offset": 74, "nodeName": "checklist_mask", "type": "Any"}, {"lineNumber": 228, "col_offset": 69, "nodeName": "initial_checklist", "type": "Any"}, {"lineNumber": 229, "col_offset": 60, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 229, "col_offset": 66, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 230, "col_offset": 64, "nodeName": "_", "type": "int"}, {"lineNumber": 283, "col_offset": 50, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 288, "col_offset": 16, "nodeName": "terminal_indices", "type": "List[List[int]]"}, {"lineNumber": 288, "col_offset": 41, "nodeName": "index", "type": "int"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "target_checklist", "type": "Any"}, {"lineNumber": 309, "col_offset": 45, "nodeName": "List", "type": "Any"}, {"lineNumber": 310, "col_offset": 37, "nodeName": "List", "type": "Any"}, {"lineNumber": 311, "col_offset": 44, "nodeName": "List", "type": "Any"}, {"lineNumber": 312, "col_offset": 47, "nodeName": "List", "type": "Any"}, {"lineNumber": 313, "col_offset": 42, "nodeName": "List", "type": "Any"}, {"lineNumber": 320, "col_offset": 77, "nodeName": "i", "type": "int"}, {"lineNumber": 320, "col_offset": 38, "nodeName": "action_strings", "type": "List[List[List[str]]]"}, {"lineNumber": 326, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "rule_id", "type": "int"}, {"lineNumber": 333, "col_offset": 37, "nodeName": "action", "type": "str"}, {"lineNumber": 333, "col_offset": 47, "nodeName": "instance_action_strings", "type": "List[str]"}, {"lineNumber": 333, "col_offset": 75, "nodeName": "action", "type": "str"}, {"lineNumber": 334, "col_offset": 37, "nodeName": "terminal_agenda_actions", "type": "List[str]"}, {"lineNumber": 335, "col_offset": 34, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 335, "col_offset": 38, "nodeName": "actions_in_agenda", "type": "List[bool]"}, {"lineNumber": 335, "col_offset": 59, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 335, "col_offset": 63, "nodeName": "actions_in_agenda", "type": "List[bool]"}, {"lineNumber": 336, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 337, "col_offset": 41, "nodeName": "i", "type": "int"}, {"lineNumber": 338, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 342, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 342, "col_offset": 47, "nodeName": "correct_in_world", "type": "Union[Any, bool]"}, {"lineNumber": 343, "col_offset": 35, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 343, "col_offset": 39, "nodeName": "sequence_is_correct", "type": "Union[List[bool], Any]"}, {"lineNumber": 349, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 350, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 363, "col_offset": 28, "nodeName": "state", "type": "allennlp.models.semantic_parsing.nlvr.nlvr_decoder_state.NlvrDecoderState"}, {"lineNumber": 376, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 379, "col_offset": 41, "nodeName": "_checklist_cost_weight", "type": "Any"}, {"lineNumber": 387, "col_offset": 15, "nodeName": "state", "type": "Any"}, {"lineNumber": 388, "col_offset": 27, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 393, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 393, "col_offset": 53, "nodeName": "all_actions", "type": "Any"}, {"lineNumber": 400, "col_offset": 33, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 401, "col_offset": 36, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 403, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 403, "col_offset": 42, "nodeName": "action_int", "type": "int"}, {"lineNumber": 405, "col_offset": 41, "nodeName": "action", "type": "int"}, {"lineNumber": 405, "col_offset": 51, "nodeName": "agenda_indices", "type": "List[int]"}, {"lineNumber": 99, "col_offset": 41, "nodeName": "NlvrWorld", "type": "Type[allennlp.semparse.worlds.nlvr_world.NlvrWorld]"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 154, "col_offset": 42, "nodeName": "_get_vocab_index_mapping", "type": "Any"}, {"lineNumber": 154, "col_offset": 72, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 155, "col_offset": 49, "nodeName": "weights", "type": "Any"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "clone", "type": "Any"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "index", "type": "Any"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "archived_index", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 34, "nodeName": "weights", "type": "Any"}, {"lineNumber": 200, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 200, "col_offset": 62, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 202, "col_offset": 67, "nodeName": "self", "type": "Any"}, {"lineNumber": 212, "col_offset": 67, "nodeName": "i", "type": "int"}, {"lineNumber": 230, "col_offset": 69, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 230, "col_offset": 75, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "agenda_", "type": "Any"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "target_checklist_list", "type": "List[List[int]]"}, {"lineNumber": 292, "col_offset": 20, "nodeName": "target_checklist_list", "type": "List[List[int]]"}, {"lineNumber": 310, "col_offset": 42, "nodeName": "NlvrWorld", "type": "Type[allennlp.semparse.worlds.nlvr_world.NlvrWorld]"}, {"lineNumber": 311, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 312, "col_offset": 52, "nodeName": "ProductionRuleArray", "type": "Type[Tuple[str, bool, Any]]"}, {"lineNumber": 313, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 320, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 329, "col_offset": 36, "nodeName": "instance_possible_actions", "type": "List[Tuple[str, bool, Any]]"}, {"lineNumber": 330, "col_offset": 33, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 331, "col_offset": 23, "nodeName": "isdigit", "type": "Callable[[], bool]"}, {"lineNumber": 332, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 332, "col_offset": 55, "nodeName": "action_string", "type": "str"}, {"lineNumber": 370, "col_offset": 36, "nodeName": "checklist_state", "type": "List[allennlp.nn.decoding.checklist_state.ChecklistState]"}, {"lineNumber": 379, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 391, "col_offset": 30, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 393, "col_offset": 65, "nodeName": "action", "type": "Any"}, {"lineNumber": 403, "col_offset": 20, "nodeName": "agenda_indices", "type": "List[int]"}, {"lineNumber": 154, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 154, "col_offset": 72, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "data", "type": "Any"}, {"lineNumber": 158, "col_offset": 24, "nodeName": "new_weights", "type": "Any"}, {"lineNumber": 158, "col_offset": 45, "nodeName": "archived_embedding_weights", "type": "Any"}, {"lineNumber": 159, "col_offset": 20, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 160, "col_offset": 36, "nodeName": "vocab_index_mapping", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "model_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 283, "col_offset": 50, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 309, "col_offset": 50, "nodeName": "List", "type": "Any"}, {"lineNumber": 329, "col_offset": 62, "nodeName": "rule_id", "type": "int"}, {"lineNumber": 330, "col_offset": 33, "nodeName": "action_string", "type": "str"}, {"lineNumber": 331, "col_offset": 23, "nodeName": "right_side", "type": "str"}, {"lineNumber": 331, "col_offset": 59, "nodeName": "right_side", "type": "str"}, {"lineNumber": 332, "col_offset": 24, "nodeName": "terminal_agenda_actions", "type": "List[str]"}, {"lineNumber": 370, "col_offset": 36, "nodeName": "state", "type": "allennlp.models.semantic_parsing.nlvr.nlvr_decoder_state.NlvrDecoderState"}, {"lineNumber": 388, "col_offset": 27, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 391, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 400, "col_offset": 33, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 401, "col_offset": 36, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "model_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 154, "col_offset": 72, "nodeName": "archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 158, "col_offset": 36, "nodeName": "index", "type": "Any"}, {"lineNumber": 158, "col_offset": 72, "nodeName": "archived_index", "type": "Any"}, {"lineNumber": 160, "col_offset": 58, "nodeName": "size", "type": "Any"}, {"lineNumber": 164, "col_offset": 33, "nodeName": "name", "type": "Any"}, {"lineNumber": 283, "col_offset": 50, "nodeName": "data", "type": "Any"}, {"lineNumber": 309, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 331, "col_offset": 74, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 331, "col_offset": 78, "nodeName": "right_side", "type": "str"}, {"lineNumber": 388, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 391, "col_offset": 30, "nodeName": "score", "type": "Any"}, {"lineNumber": 400, "col_offset": 33, "nodeName": "data", "type": "Any"}, {"lineNumber": 401, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 147, "col_offset": 51, "nodeName": "name", "type": "Any"}, {"lineNumber": 148, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 148, "col_offset": 41, "nodeName": "_terminal_productions", "type": "Any"}, {"lineNumber": 156, "col_offset": 34, "nodeName": "model_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 160, "col_offset": 58, "nodeName": "new_weights", "type": "Any"}, {"lineNumber": 400, "col_offset": 33, "nodeName": "action", "type": "Any"}, {"lineNumber": 401, "col_offset": 36, "nodeName": "is_wanted", "type": "Any"}, {"lineNumber": 148, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 51, "nodeName": "name", "type": "Any"}, {"lineNumber": 283, "col_offset": 50, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 388, "col_offset": 27, "nodeName": "_get_state_cost", "type": "Any"}, {"lineNumber": 388, "col_offset": 48, "nodeName": "state", "type": "Any"}, {"lineNumber": 283, "col_offset": 50, "nodeName": "agenda", "type": "Any"}, {"lineNumber": 388, "col_offset": 27, "nodeName": "self", "type": "Any"}]