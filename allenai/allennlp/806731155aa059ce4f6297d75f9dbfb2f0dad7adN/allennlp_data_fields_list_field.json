[{"lineNumber": 12, "col_offset": 16, "nodeName": "SequenceField", "type": "Type[allennlp.data.fields.sequence_field.SequenceField[Any]]"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 71, "col_offset": 48, "nodeName": "DataArray", "type": "Any"}, {"lineNumber": 12, "col_offset": 30, "nodeName": "DataArray", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "field_class_set", "type": "Set[Type[allennlp.data.fields.field.Field[Any]]]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "field_list", "type": "List[allennlp.data.fields.field.Field[Any]]"}, {"lineNumber": 32, "col_offset": 39, "nodeName": "field_list", "type": "List[allennlp.data.fields.field.Field[Any]]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "field", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "field_list", "type": "Any"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "field", "type": "Any"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "field_list", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "field_lengths", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "padding_lengths", "type": "Dict[str, Union[int, Any]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "possible_padding_keys", "type": "List[Any]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "padding_lengths", "type": "Dict[str, Union[int, Any]]"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "ListField[nothing]"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 40, "col_offset": 27, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "possible_padding_keys", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "field_list", "type": "Any"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "pad_sequence_to_length", "type": "Callable[..., List[Any]]"}, {"lineNumber": 72, "col_offset": 51, "nodeName": "field_list", "type": "Any"}, {"lineNumber": 74, "col_offset": 51, "nodeName": "empty_field", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "batch_tensors", "type": "Any"}, {"lineNumber": 82, "col_offset": 48, "nodeName": "padded_fields", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "ListField", "type": "Type[ListField[Any]]"}, {"lineNumber": 27, "col_offset": 35, "nodeName": "List", "type": "Any"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "__class__", "type": "Type[allennlp.data.fields.field.Field[Any]]"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "field_class_set", "type": "Set[Type[allennlp.data.fields.field.Field[Any]]]"}, {"lineNumber": 30, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 30, "col_offset": 46, "nodeName": "field_class_set", "type": "Set[Type[allennlp.data.fields.field.Field[Any]]]"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "count_vocab_items", "type": "Any"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "counter", "type": "Dict[str, Dict[str, int]]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "index", "type": "Any"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "get_padding_lengths", "type": "Any"}, {"lineNumber": 46, "col_offset": 57, "nodeName": "field", "type": "Any"}, {"lineNumber": 46, "col_offset": 66, "nodeName": "field_list", "type": "Any"}, {"lineNumber": 47, "col_offset": 41, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "field_list", "type": "Any"}, {"lineNumber": 52, "col_offset": 41, "nodeName": "field_length", "type": "Any"}, {"lineNumber": 52, "col_offset": 57, "nodeName": "field_lengths", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "key", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "padding_lengths", "type": "Dict[str, Union[int, Any]]"}, {"lineNumber": 60, "col_offset": 45, "nodeName": "max", "type": "Callable"}, {"lineNumber": 45, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 45, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 51, "nodeName": "padding_lengths", "type": "Dict[str, int]"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "field", "type": "Any"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "padded_field_list", "type": "List[Any]"}, {"lineNumber": 27, "col_offset": 40, "nodeName": "Field", "type": "Type[allennlp.data.fields.field.Field[Any]]"}, {"lineNumber": 28, "col_offset": 31, "nodeName": "field", "type": "allennlp.data.fields.field.Field[Any]"}, {"lineNumber": 28, "col_offset": 51, "nodeName": "field", "type": "allennlp.data.fields.field.Field[Any]"}, {"lineNumber": 28, "col_offset": 60, "nodeName": "field_list", "type": "List[allennlp.data.fields.field.Field[Any]]"}, {"lineNumber": 37, "col_offset": 12, "nodeName": "field", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "field", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "field", "type": "Any"}, {"lineNumber": 46, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 53, "col_offset": 44, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 74, "col_offset": 51, "nodeName": "field_list", "type": "Any"}, {"lineNumber": 78, "col_offset": 37, "nodeName": "key", "type": "str"}, {"lineNumber": 78, "col_offset": 42, "nodeName": "value", "type": "int"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "items", "type": "Callable"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "field_list", "type": "Any"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "empty_field", "type": "Any"}, {"lineNumber": 35, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 49, "nodeName": "keys", "type": "Any"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "key", "type": "Any"}, {"lineNumber": 60, "col_offset": 79, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 84, "nodeName": "field_lengths", "type": "List[Any]"}, {"lineNumber": 74, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 51, "nodeName": "padding_lengths", "type": "Dict[str, int]"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "key", "type": "str"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 51, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 53, "col_offset": 49, "nodeName": "field_length", "type": "Any"}, {"lineNumber": 60, "col_offset": 59, "nodeName": "key", "type": "Any"}, {"lineNumber": 60, "col_offset": 66, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 49, "nodeName": "x", "type": "Any"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "field_list", "type": "Any"}, {"lineNumber": 60, "col_offset": 51, "nodeName": "key", "type": "Any"}, {"lineNumber": 93, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 35, "col_offset": 61, "nodeName": "int", "type": "Type[int]"}]