[{"lineNumber": 34, "col_offset": 0, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "takes_kwargs", "type": "Callable[[Any], bool]"}, {"lineNumber": 69, "col_offset": 0, "nodeName": "can_construct_from_params", "type": "Callable[[Type[Any]], bool]"}, {"lineNumber": 84, "col_offset": 0, "nodeName": "is_base_registrable", "type": "Callable[[Any], bool]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "remove_optional", "type": "Callable[[Type[Any]], Any]"}, {"lineNumber": 115, "col_offset": 0, "nodeName": "infer_params", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 211, "col_offset": 0, "nodeName": "create_extras", "type": "Callable[[Type[T], Dict[str, Any]], Dict[str, Any]]"}, {"lineNumber": 25, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 27, "col_offset": 0, "nodeName": "T", "type": "Any"}, {"lineNumber": 31, "col_offset": 0, "nodeName": "_NO_DEFAULT", "type": "Any"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "empty", "type": "Any"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 69, "col_offset": 46, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 241, "col_offset": 5, "nodeName": "Any", "type": "Any"}, {"lineNumber": 312, "col_offset": 5, "nodeName": "Any", "type": "Any"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "TypeVar", "type": "type"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "Parameter", "type": "Type[inspect.Parameter]"}, {"lineNumber": 72, "col_offset": 4, "nodeName": "origin", "type": "Any"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "method_resolution_order", "type": "Tuple[Any, ...]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "base_class", "type": "Any"}, {"lineNumber": 94, "col_offset": 22, "nodeName": "method_resolution_order", "type": "Tuple[Any, ...]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "origin", "type": "Any"}, {"lineNumber": 107, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "signature", "type": "inspect.Signature"}, {"lineNumber": 122, "col_offset": 4, "nodeName": "parameters", "type": "Dict[str, inspect.Parameter]"}, {"lineNumber": 124, "col_offset": 4, "nodeName": "has_kwargs", "type": "bool"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "param", "type": "inspect.Parameter"}, {"lineNumber": 135, "col_offset": 4, "nodeName": "super_class", "type": "None"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "super_class_candidate", "type": "Any"}, {"lineNumber": 140, "col_offset": 7, "nodeName": "super_class", "type": "Any"}, {"lineNumber": 115, "col_offset": 72, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "parameters", "type": "Dict[str, Any]"}, {"lineNumber": 167, "col_offset": 4, "nodeName": "accepts_kwargs", "type": "bool"}, {"lineNumber": 204, "col_offset": 7, "nodeName": "accepts_kwargs", "type": "bool"}, {"lineNumber": 208, "col_offset": 11, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 150, "col_offset": 5, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 217, "col_offset": 4, "nodeName": "subextras", "type": "Dict[str, Any]"}, {"lineNumber": 236, "col_offset": 11, "nodeName": "subextras", "type": "Dict[str, Any]"}, {"lineNumber": 211, "col_offset": 59, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 261, "col_offset": 4, "nodeName": "name", "type": "str"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "argument_name", "type": "str"}, {"lineNumber": 295, "col_offset": 4, "nodeName": "popped_params", "type": "Any"}, {"lineNumber": 316, "col_offset": 4, "nodeName": "origin", "type": "Any"}, {"lineNumber": 317, "col_offset": 4, "nodeName": "args", "type": "Any"}, {"lineNumber": 320, "col_offset": 4, "nodeName": "optional", "type": "Any"}, {"lineNumber": 510, "col_offset": 9, "nodeName": "T", "type": "Any"}, {"lineNumber": 25, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 31, "col_offset": 14, "nodeName": "inspect", "type": "module"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 41, "col_offset": 7, "nodeName": "isclass", "type": "Callable[[object], bool]"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "obj", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "signature", "type": "inspect.Signature"}, {"lineNumber": 47, "col_offset": 11, "nodeName": "arg", "type": "str"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "parameters", "type": "Mapping[str, inspect.Parameter]"}, {"lineNumber": 57, "col_offset": 7, "nodeName": "isclass", "type": "Callable[[object], bool]"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "obj", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "signature", "type": "inspect.Signature"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 69, "col_offset": 37, "nodeName": "Type", "type": "Any"}, {"lineNumber": 70, "col_offset": 7, "nodeName": "type_", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "type_", "type": "Any"}, {"lineNumber": 73, "col_offset": 7, "nodeName": "origin", "type": "Any"}, {"lineNumber": 73, "col_offset": 17, "nodeName": "Lazy", "type": "Type[allennlp.common.lazy.Lazy[Any]]"}, {"lineNumber": 75, "col_offset": 9, "nodeName": "origin", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "type_", "type": "Any"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 106, "col_offset": 13, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 106, "col_offset": 21, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 107, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 109, "col_offset": 7, "nodeName": "origin", "type": "Any"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "Union", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 116, "col_offset": 7, "nodeName": "cls", "type": "Any"}, {"lineNumber": 116, "col_offset": 14, "nodeName": "FromParams", "type": "Type[FromParams]"}, {"lineNumber": 118, "col_offset": 7, "nodeName": "constructor", "type": "Callable[..., nothing]"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "signature", "type": "Callable[..., inspect.Signature]"}, {"lineNumber": 121, "col_offset": 34, "nodeName": "constructor", "type": "Callable[..., nothing]"}, {"lineNumber": 122, "col_offset": 17, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "parameters", "type": "Mapping[str, inspect.Parameter]"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "values", "type": "Callable"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "has_kwargs", "type": "bool"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "parameters", "type": "Dict[str, inspect.Parameter]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "super_parameters", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "super_parameters", "type": "Dict[nothing, nothing]"}, {"lineNumber": 145, "col_offset": 14, "nodeName": "super_parameters", "type": "Any"}, {"lineNumber": 145, "col_offset": 34, "nodeName": "parameters", "type": "Dict[str, inspect.Parameter]"}, {"lineNumber": 149, "col_offset": 57, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "infer_params", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 166, "col_offset": 30, "nodeName": "cls", "type": "Any"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "constructor", "type": "Callable[..., nothing]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "param_name", "type": "str"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "param", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "items", "type": "Callable"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "constructed_arg", "type": "Any"}, {"lineNumber": 218, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 218, "col_offset": 15, "nodeName": "cls", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "from_params_method", "type": "Any"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "from_params_method", "type": "Any"}, {"lineNumber": 226, "col_offset": 29, "nodeName": "cls", "type": "Any"}, {"lineNumber": 227, "col_offset": 7, "nodeName": "takes_kwargs", "type": "Callable[[Any], bool]"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "from_params_method", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "subextras", "type": "Dict[str, Any]"}, {"lineNumber": 231, "col_offset": 20, "nodeName": "extras", "type": "Dict[str, Any]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "subextras", "type": "Dict[str, Any]"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 240, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 240, "col_offset": 53, "nodeName": "Type", "type": "Any"}, {"lineNumber": 240, "col_offset": 68, "nodeName": "Any", "type": "Any"}, {"lineNumber": 240, "col_offset": 81, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 265, "col_offset": 7, "nodeName": "name", "type": "str"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "extras", "type": "Dict[str, Any]"}, {"lineNumber": 296, "col_offset": 7, "nodeName": "popped_params", "type": "Any"}, {"lineNumber": 297, "col_offset": 8, "nodeName": "origin", "type": "Any"}, {"lineNumber": 302, "col_offset": 11, "nodeName": "construct_arg", "type": "Callable[..., Any]"}, {"lineNumber": 302, "col_offset": 25, "nodeName": "class_name", "type": "str"}, {"lineNumber": 302, "col_offset": 37, "nodeName": "name", "type": "str"}, {"lineNumber": 302, "col_offset": 43, "nodeName": "popped_params", "type": "Any"}, {"lineNumber": 302, "col_offset": 58, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 302, "col_offset": 70, "nodeName": "default", "type": "Any"}, {"lineNumber": 306, "col_offset": 16, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 307, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 308, "col_offset": 19, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 309, "col_offset": 16, "nodeName": "Type", "type": "Any"}, {"lineNumber": 310, "col_offset": 13, "nodeName": "Any", "type": "Any"}, {"lineNumber": 316, "col_offset": 13, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 316, "col_offset": 21, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 317, "col_offset": 11, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 317, "col_offset": 19, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 320, "col_offset": 15, "nodeName": "default", "type": "Any"}, {"lineNumber": 320, "col_offset": 26, "nodeName": "_NO_DEFAULT", "type": "Any"}, {"lineNumber": 322, "col_offset": 7, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 322, "col_offset": 15, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 554, "col_offset": 8, "nodeName": "registered_subclasses", "type": "Optional[Dict[str, Tuple[Any, str]]]"}, {"lineNumber": 41, "col_offset": 7, "nodeName": "inspect", "type": "module"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "signature", "type": "Callable[..., inspect.Signature]"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "signature", "type": "inspect.Signature"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "signature", "type": "inspect.Signature"}, {"lineNumber": 57, "col_offset": 7, "nodeName": "inspect", "type": "module"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "signature", "type": "Callable[..., inspect.Signature]"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "signature", "type": "inspect.Signature"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "args", "type": "Any"}, {"lineNumber": 91, "col_offset": 11, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 91, "col_offset": 22, "nodeName": "cls", "type": "Any"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "getmro", "type": "Callable[[Type[Any]], Tuple[Type[Any], ...]]"}, {"lineNumber": 93, "col_offset": 45, "nodeName": "cls", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "Union", "type": "Any"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "Type", "type": "Any"}, {"lineNumber": 115, "col_offset": 44, "nodeName": "Callable", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "inspect", "type": "module"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "signature", "type": "inspect.Signature"}, {"lineNumber": 125, "col_offset": 17, "nodeName": "parameters", "type": "Dict[str, inspect.Parameter]"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "kind", "type": "inspect._ParameterKind"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "VAR_KEYWORD", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "has_kwargs", "type": "bool"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "mro", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 137, "col_offset": 22, "nodeName": "super_class_candidate", "type": "Any"}, {"lineNumber": 137, "col_offset": 45, "nodeName": "FromParams", "type": "Type[FromParams]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "super_class", "type": "Any"}, {"lineNumber": 138, "col_offset": 26, "nodeName": "super_class_candidate", "type": "Any"}, {"lineNumber": 141, "col_offset": 27, "nodeName": "infer_params", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 141, "col_offset": 40, "nodeName": "super_class", "type": "Any"}, {"lineNumber": 115, "col_offset": 77, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 115, "col_offset": 82, "nodeName": "Any", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "Callable", "type": "Any"}, {"lineNumber": 149, "col_offset": 40, "nodeName": "Type", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "parameters", "type": "Dict[str, Any]"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "param_name", "type": "str"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "kind", "type": "Any"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "VAR_KEYWORD", "type": "Any"}, {"lineNumber": 184, "col_offset": 12, "nodeName": "accepts_kwargs", "type": "bool"}, {"lineNumber": 190, "col_offset": 21, "nodeName": "remove_optional", "type": "Callable[[Type[Any]], Any]"}, {"lineNumber": 190, "col_offset": 37, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "pop_and_construct_arg", "type": "Callable[..., Any]"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 193, "col_offset": 26, "nodeName": "param_name", "type": "str"}, {"lineNumber": 193, "col_offset": 38, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 193, "col_offset": 50, "nodeName": "default", "type": "Any"}, {"lineNumber": 193, "col_offset": 65, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "constructed_arg", "type": "Any"}, {"lineNumber": 201, "col_offset": 34, "nodeName": "default", "type": "Any"}, {"lineNumber": 202, "col_offset": 33, "nodeName": "constructed_arg", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 205, "col_offset": 22, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "assert_empty", "type": "Callable[[str], None]"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 150, "col_offset": 10, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "Any", "type": "Any"}, {"lineNumber": 211, "col_offset": 23, "nodeName": "Type", "type": "Any"}, {"lineNumber": 211, "col_offset": 40, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 219, "col_offset": 29, "nodeName": "cls", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 235, "col_offset": 21, "nodeName": "k", "type": "str"}, {"lineNumber": 235, "col_offset": 24, "nodeName": "v", "type": "Any"}, {"lineNumber": 211, "col_offset": 64, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 211, "col_offset": 69, "nodeName": "Any", "type": "Any"}, {"lineNumber": 266, "col_offset": 11, "nodeName": "name", "type": "str"}, {"lineNumber": 266, "col_offset": 23, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "load_module_params", "type": "Any"}, {"lineNumber": 283, "col_offset": 8, "nodeName": "archive_file", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "module_path", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "freeze", "type": "Any"}, {"lineNumber": 286, "col_offset": 8, "nodeName": "archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 295, "col_offset": 49, "nodeName": "default", "type": "Any"}, {"lineNumber": 295, "col_offset": 60, "nodeName": "_NO_DEFAULT", "type": "Any"}, {"lineNumber": 295, "col_offset": 20, "nodeName": "pop", "type": "Any"}, {"lineNumber": 295, "col_offset": 31, "nodeName": "name", "type": "str"}, {"lineNumber": 295, "col_offset": 37, "nodeName": "default", "type": "Any"}, {"lineNumber": 295, "col_offset": 77, "nodeName": "pop", "type": "Any"}, {"lineNumber": 295, "col_offset": 88, "nodeName": "name", "type": "str"}, {"lineNumber": 297, "col_offset": 17, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 297, "col_offset": 25, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 298, "col_offset": 11, "nodeName": "origin", "type": "Any"}, {"lineNumber": 298, "col_offset": 21, "nodeName": "Lazy", "type": "Type[allennlp.common.lazy.Lazy[Any]]"}, {"lineNumber": 302, "col_offset": 81, "nodeName": "extras", "type": "Dict[str, Any]"}, {"lineNumber": 323, "col_offset": 11, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 323, "col_offset": 28, "nodeName": "default", "type": "Any"}, {"lineNumber": 324, "col_offset": 19, "nodeName": "default", "type": "Any"}, {"lineNumber": 345, "col_offset": 9, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "debug", "type": "Callable[..., None]"}, {"lineNumber": 540, "col_offset": 11, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 543, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 543, "col_offset": 22, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 543, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 554, "col_offset": 32, "nodeName": "get", "type": "Callable"}, {"lineNumber": 554, "col_offset": 58, "nodeName": "cls", "type": "Any"}, {"lineNumber": 570, "col_offset": 12, "nodeName": "as_registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 571, "col_offset": 12, "nodeName": "default_to_first_choice", "type": "bool"}, {"lineNumber": 572, "col_offset": 12, "nodeName": "choice", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "inspect", "type": "module"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "obj", "type": "Any"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "ismethod", "type": "Callable[[object], bool]"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "obj", "type": "Any"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "isfunction", "type": "Callable[[object], bool]"}, {"lineNumber": 43, "col_offset": 53, "nodeName": "obj", "type": "Any"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "signature", "type": "Callable[..., inspect.Signature]"}, {"lineNumber": 44, "col_offset": 38, "nodeName": "obj", "type": "Any"}, {"lineNumber": 46, "col_offset": 14, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 58, "col_offset": 20, "nodeName": "inspect", "type": "module"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "obj", "type": "Any"}, {"lineNumber": 59, "col_offset": 9, "nodeName": "ismethod", "type": "Callable[[object], bool]"}, {"lineNumber": 59, "col_offset": 26, "nodeName": "obj", "type": "Any"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "isfunction", "type": "Callable[[object], bool]"}, {"lineNumber": 59, "col_offset": 53, "nodeName": "obj", "type": "Any"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "signature", "type": "Callable[..., inspect.Signature]"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "obj", "type": "Any"}, {"lineNumber": 62, "col_offset": 14, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "p", "type": "inspect.Parameter"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 76, "col_offset": 19, "nodeName": "type_", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "type_", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 93, "col_offset": 30, "nodeName": "inspect", "type": "module"}, {"lineNumber": 95, "col_offset": 11, "nodeName": "issubclass", "type": "Callable[[Type[Any], Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "base_class", "type": "Any"}, {"lineNumber": 95, "col_offset": 34, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 95, "col_offset": 51, "nodeName": "base_class", "type": "Any"}, {"lineNumber": 95, "col_offset": 69, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "T", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "param", "type": "inspect.Parameter"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "param", "type": "inspect.Parameter"}, {"lineNumber": 136, "col_offset": 33, "nodeName": "cls", "type": "Any"}, {"lineNumber": 149, "col_offset": 45, "nodeName": "T", "type": "Any"}, {"lineNumber": 177, "col_offset": 11, "nodeName": "param", "type": "Any"}, {"lineNumber": 177, "col_offset": 25, "nodeName": "param", "type": "Any"}, {"lineNumber": 190, "col_offset": 37, "nodeName": "param", "type": "Any"}, {"lineNumber": 193, "col_offset": 12, "nodeName": "cls", "type": "Any"}, {"lineNumber": 193, "col_offset": 50, "nodeName": "param", "type": "Any"}, {"lineNumber": 193, "col_offset": 75, "nodeName": "extras", "type": "Dict[str, Any]"}, {"lineNumber": 201, "col_offset": 34, "nodeName": "param", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[Any, Any]"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 207, "col_offset": 28, "nodeName": "cls", "type": "Any"}, {"lineNumber": 211, "col_offset": 28, "nodeName": "T", "type": "Any"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "extras", "type": "Dict[str, Any]"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "name", "type": "str"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 279, "col_offset": 41, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "pop", "type": "Any"}, {"lineNumber": 283, "col_offset": 23, "nodeName": "pop", "type": "Any"}, {"lineNumber": 284, "col_offset": 22, "nodeName": "pop", "type": "Any"}, {"lineNumber": 285, "col_offset": 17, "nodeName": "pop", "type": "Any"}, {"lineNumber": 286, "col_offset": 18, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 286, "col_offset": 31, "nodeName": "archive_file", "type": "Any"}, {"lineNumber": 287, "col_offset": 17, "nodeName": "extract_module", "type": "Callable[..., Any]"}, {"lineNumber": 287, "col_offset": 40, "nodeName": "module_path", "type": "Any"}, {"lineNumber": 287, "col_offset": 53, "nodeName": "freeze", "type": "Any"}, {"lineNumber": 295, "col_offset": 20, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 295, "col_offset": 77, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 299, "col_offset": 19, "nodeName": "Lazy", "type": "Type[allennlp.common.lazy.Lazy[Any]]"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "subextras", "type": "Dict[str, Any]"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 345, "col_offset": 29, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 350, "col_offset": 9, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 350, "col_offset": 23, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 508, "col_offset": 32, "nodeName": "Callable", "type": "Any"}, {"lineNumber": 535, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 546, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 546, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 546, "col_offset": 34, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 554, "col_offset": 32, "nodeName": "_registry", "type": "Dict[Any, Dict[str, Tuple[Any, str]]]"}, {"lineNumber": 556, "col_offset": 11, "nodeName": "is_base_registrable", "type": "Callable[[Any], bool]"}, {"lineNumber": 556, "col_offset": 31, "nodeName": "cls", "type": "Any"}, {"lineNumber": 556, "col_offset": 40, "nodeName": "registered_subclasses", "type": "Optional[Dict[str, Tuple[Any, str]]]"}, {"lineNumber": 561, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 567, "col_offset": 11, "nodeName": "registered_subclasses", "type": "Optional[Dict[str, Tuple[Any, str]]]"}, {"lineNumber": 567, "col_offset": 53, "nodeName": "constructor_to_call", "type": "Callable[..., nothing]"}, {"lineNumber": 570, "col_offset": 29, "nodeName": "cast", "type": "Callable"}, {"lineNumber": 570, "col_offset": 53, "nodeName": "cls", "type": "Any"}, {"lineNumber": 571, "col_offset": 38, "nodeName": "default_implementation", "type": "str"}, {"lineNumber": 572, "col_offset": 21, "nodeName": "pop_choice", "type": "Callable[..., Any]"}, {"lineNumber": 577, "col_offset": 12, "nodeName": "subclass", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 577, "col_offset": 22, "nodeName": "constructor_name", "type": "Optional[str]"}, {"lineNumber": 577, "col_offset": 41, "nodeName": "resolve_class_name", "type": "Callable"}, {"lineNumber": 577, "col_offset": 75, "nodeName": "choice", "type": "Any"}, {"lineNumber": 579, "col_offset": 19, "nodeName": "constructor_name", "type": "Optional[str]"}, {"lineNumber": 580, "col_offset": 16, "nodeName": "constructor_to_inspect", "type": "Any"}, {"lineNumber": 580, "col_offset": 41, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 581, "col_offset": 16, "nodeName": "constructor_to_call", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 581, "col_offset": 38, "nodeName": "subclass", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 583, "col_offset": 16, "nodeName": "constructor_to_inspect", "type": "Any"}, {"lineNumber": 584, "col_offset": 16, "nodeName": "constructor_to_call", "type": "Any"}, {"lineNumber": 584, "col_offset": 38, "nodeName": "constructor_to_inspect", "type": "Any"}, {"lineNumber": 586, "col_offset": 15, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 586, "col_offset": 23, "nodeName": "subclass", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 588, "col_offset": 16, "nodeName": "extras", "type": "Dict[str, Any]"}, {"lineNumber": 590, "col_offset": 16, "nodeName": "retyped_subclass", "type": "Any"}, {"lineNumber": 609, "col_offset": 19, "nodeName": "constructor_to_inspect", "type": "Callable[..., nothing]"}, {"lineNumber": 610, "col_offset": 16, "nodeName": "constructor_to_inspect", "type": "Any"}, {"lineNumber": 610, "col_offset": 41, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 611, "col_offset": 19, "nodeName": "constructor_to_call", "type": "Callable[..., nothing]"}, {"lineNumber": 612, "col_offset": 16, "nodeName": "constructor_to_call", "type": "Any"}, {"lineNumber": 612, "col_offset": 38, "nodeName": "cls", "type": "Any"}, {"lineNumber": 614, "col_offset": 15, "nodeName": "constructor_to_inspect", "type": "Any"}, {"lineNumber": 614, "col_offset": 41, "nodeName": "__init__", "type": "Callable[[object], None]"}, {"lineNumber": 618, "col_offset": 16, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 622, "col_offset": 16, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 624, "col_offset": 19, "nodeName": "constructor_to_call", "type": "Any"}, {"lineNumber": 43, "col_offset": 9, "nodeName": "inspect", "type": "module"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "inspect", "type": "module"}, {"lineNumber": 44, "col_offset": 20, "nodeName": "inspect", "type": "module"}, {"lineNumber": 59, "col_offset": 9, "nodeName": "inspect", "type": "module"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "inspect", "type": "module"}, {"lineNumber": 60, "col_offset": 20, "nodeName": "inspect", "type": "module"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "values", "type": "Callable"}, {"lineNumber": 110, "col_offset": 21, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 115, "col_offset": 58, "nodeName": "T", "type": "Any"}, {"lineNumber": 149, "col_offset": 31, "nodeName": "T", "type": "Any"}, {"lineNumber": 202, "col_offset": 19, "nodeName": "param_name", "type": "str"}, {"lineNumber": 211, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 211, "col_offset": 50, "nodeName": "Any", "type": "Any"}, {"lineNumber": 235, "col_offset": 30, "nodeName": "k", "type": "str"}, {"lineNumber": 235, "col_offset": 33, "nodeName": "v", "type": "Any"}, {"lineNumber": 235, "col_offset": 38, "nodeName": "items", "type": "Callable"}, {"lineNumber": 235, "col_offset": 56, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 235, "col_offset": 66, "nodeName": "from_params_method", "type": "Any"}, {"lineNumber": 235, "col_offset": 86, "nodeName": "k", "type": "str"}, {"lineNumber": 267, "col_offset": 26, "nodeName": "name", "type": "str"}, {"lineNumber": 269, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "get", "type": "Any"}, {"lineNumber": 279, "col_offset": 34, "nodeName": "name", "type": "str"}, {"lineNumber": 280, "col_offset": 29, "nodeName": "get", "type": "Any"}, {"lineNumber": 280, "col_offset": 40, "nodeName": "name", "type": "str"}, {"lineNumber": 283, "col_offset": 23, "nodeName": "load_module_params", "type": "Any"}, {"lineNumber": 284, "col_offset": 22, "nodeName": "load_module_params", "type": "Any"}, {"lineNumber": 285, "col_offset": 17, "nodeName": "load_module_params", "type": "Any"}, {"lineNumber": 287, "col_offset": 17, "nodeName": "archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 288, "col_offset": 26, "nodeName": "result", "type": "Any"}, {"lineNumber": 288, "col_offset": 34, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 289, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 328, "col_offset": 24, "nodeName": "create_extras", "type": "Callable[[Type[T], Dict[str, Any]], Dict[str, Any]]"}, {"lineNumber": 328, "col_offset": 38, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 328, "col_offset": 50, "nodeName": "extras", "type": "Dict[str, Any]"}, {"lineNumber": 332, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 332, "col_offset": 26, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 332, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 336, "col_offset": 19, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 346, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 346, "col_offset": 16, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 346, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 346, "col_offset": 40, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 347, "col_offset": 19, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 347, "col_offset": 30, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 349, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 356, "col_offset": 9, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 356, "col_offset": 23, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 554, "col_offset": 32, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 570, "col_offset": 34, "nodeName": "Type", "type": "Any"}, {"lineNumber": 571, "col_offset": 38, "nodeName": "as_registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 572, "col_offset": 21, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 575, "col_offset": 40, "nodeName": "default_to_first_choice", "type": "bool"}, {"lineNumber": 577, "col_offset": 41, "nodeName": "as_registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 580, "col_offset": 41, "nodeName": "subclass", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 583, "col_offset": 41, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 583, "col_offset": 49, "nodeName": "subclass", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 583, "col_offset": 59, "nodeName": "constructor_name", "type": "Optional[str]"}, {"lineNumber": 588, "col_offset": 25, "nodeName": "create_extras", "type": "Callable[[Type[T], Dict[str, Any]], Dict[str, Any]]"}, {"lineNumber": 588, "col_offset": 39, "nodeName": "subclass", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 588, "col_offset": 49, "nodeName": "extras", "type": "Dict[str, Any]"}, {"lineNumber": 590, "col_offset": 35, "nodeName": "cast", "type": "Callable"}, {"lineNumber": 590, "col_offset": 49, "nodeName": "subclass", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 591, "col_offset": 23, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 610, "col_offset": 41, "nodeName": "cls", "type": "Any"}, {"lineNumber": 614, "col_offset": 41, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 619, "col_offset": 16, "nodeName": "assert_empty", "type": "Callable[[str], None]"}, {"lineNumber": 619, "col_offset": 36, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 622, "col_offset": 25, "nodeName": "create_kwargs", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 622, "col_offset": 39, "nodeName": "constructor_to_inspect", "type": "Any"}, {"lineNumber": 622, "col_offset": 63, "nodeName": "cls", "type": "Any"}, {"lineNumber": 622, "col_offset": 68, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 624, "col_offset": 41, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "parameters", "type": "Mapping[str, inspect.Parameter]"}, {"lineNumber": 79, "col_offset": 19, "nodeName": "can_construct_from_params", "type": "Callable[[Type[Any]], bool]"}, {"lineNumber": 79, "col_offset": 45, "nodeName": "arg", "type": "Any"}, {"lineNumber": 79, "col_offset": 54, "nodeName": "arg", "type": "Any"}, {"lineNumber": 79, "col_offset": 61, "nodeName": "args", "type": "Any"}, {"lineNumber": 110, "col_offset": 28, "nodeName": "arg", "type": "Any"}, {"lineNumber": 235, "col_offset": 38, "nodeName": "extras", "type": "Dict[str, Any]"}, {"lineNumber": 279, "col_offset": 23, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 280, "col_offset": 29, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "pop", "type": "Any"}, {"lineNumber": 282, "col_offset": 40, "nodeName": "name", "type": "str"}, {"lineNumber": 334, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 334, "col_offset": 28, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 334, "col_offset": 43, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 336, "col_offset": 19, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 336, "col_offset": 49, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 336, "col_offset": 66, "nodeName": "subextras", "type": "Dict[str, Any]"}, {"lineNumber": 352, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 352, "col_offset": 41, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 352, "col_offset": 52, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 352, "col_offset": 67, "nodeName": "Path", "type": "Type[pathlib.Path]"}, {"lineNumber": 353, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 353, "col_offset": 23, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 355, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 360, "col_offset": 19, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "value_cls", "type": "Any"}, {"lineNumber": 374, "col_offset": 8, "nodeName": "value_dict", "type": "Dict[nothing, Any]"}, {"lineNumber": 386, "col_offset": 15, "nodeName": "value_dict", "type": "Dict[nothing, Any]"}, {"lineNumber": 508, "col_offset": 46, "nodeName": "T", "type": "Any"}, {"lineNumber": 570, "col_offset": 39, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 574, "col_offset": 24, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 590, "col_offset": 40, "nodeName": "Type", "type": "Any"}, {"lineNumber": 591, "col_offset": 23, "nodeName": "retyped_subclass", "type": "Any"}, {"lineNumber": 592, "col_offset": 27, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 593, "col_offset": 40, "nodeName": "constructor_to_call", "type": "Any"}, {"lineNumber": 594, "col_offset": 43, "nodeName": "constructor_to_inspect", "type": "Any"}, {"lineNumber": 595, "col_offset": 22, "nodeName": "extras", "type": "Dict[str, Any]"}, {"lineNumber": 619, "col_offset": 16, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 619, "col_offset": 36, "nodeName": "cls", "type": "Any"}, {"lineNumber": 622, "col_offset": 78, "nodeName": "extras", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "signature", "type": "inspect.Signature"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "arg", "type": "Any"}, {"lineNumber": 110, "col_offset": 43, "nodeName": "args", "type": "Any"}, {"lineNumber": 282, "col_offset": 29, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 352, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 352, "col_offset": 16, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 359, "col_offset": 11, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 359, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 359, "col_offset": 40, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 362, "col_offset": 18, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 368, "col_offset": 8, "nodeName": "origin", "type": "Any"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "can_construct_from_params", "type": "Callable[[Type[Any]], bool]"}, {"lineNumber": 372, "col_offset": 20, "nodeName": "__args__", "type": "Any"}, {"lineNumber": 376, "col_offset": 12, "nodeName": "key", "type": "nothing"}, {"lineNumber": 376, "col_offset": 17, "nodeName": "value_params", "type": "nothing"}, {"lineNumber": 376, "col_offset": 33, "nodeName": "items", "type": "Callable"}, {"lineNumber": 389, "col_offset": 8, "nodeName": "value_list", "type": "List[Any]"}, {"lineNumber": 574, "col_offset": 24, "nodeName": "as_registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 590, "col_offset": 45, "nodeName": "T", "type": "Any"}, {"lineNumber": 110, "col_offset": 51, "nodeName": "arg", "type": "Any"}, {"lineNumber": 368, "col_offset": 19, "nodeName": "Mapping", "type": "Type[Mapping[Any, Any]]"}, {"lineNumber": 368, "col_offset": 44, "nodeName": "Mapping", "type": "Any"}, {"lineNumber": 368, "col_offset": 53, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 368, "col_offset": 59, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 369, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "args", "type": "Any"}, {"lineNumber": 370, "col_offset": 38, "nodeName": "args", "type": "Any"}, {"lineNumber": 372, "col_offset": 20, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 376, "col_offset": 33, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 377, "col_offset": 12, "nodeName": "value_dict", "type": "Dict[nothing, Any]"}, {"lineNumber": 388, "col_offset": 9, "nodeName": "origin", "type": "Any"}, {"lineNumber": 388, "col_offset": 38, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 391, "col_offset": 44, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 402, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 402, "col_offset": 21, "nodeName": "value_list", "type": "List[Any]"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "value_cls", "type": "Any"}, {"lineNumber": 407, "col_offset": 8, "nodeName": "value_set", "type": "Set[Any]"}, {"lineNumber": 420, "col_offset": 15, "nodeName": "value_set", "type": "Set[Any]"}, {"lineNumber": 110, "col_offset": 58, "nodeName": "type", "type": "Type[Type[Any]]"}, {"lineNumber": 368, "col_offset": 19, "nodeName": "abc", "type": "module"}, {"lineNumber": 377, "col_offset": 23, "nodeName": "key", "type": "nothing"}, {"lineNumber": 379, "col_offset": 38, "nodeName": "key", "type": "nothing"}, {"lineNumber": 383, "col_offset": 18, "nodeName": "extras", "type": "Dict[str, Any]"}, {"lineNumber": 388, "col_offset": 20, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 388, "col_offset": 27, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 391, "col_offset": 16, "nodeName": "value_cls", "type": "Any"}, {"lineNumber": 391, "col_offset": 27, "nodeName": "value_params", "type": "Any"}, {"lineNumber": 391, "col_offset": 54, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 391, "col_offset": 58, "nodeName": "__args__", "type": "Any"}, {"lineNumber": 391, "col_offset": 79, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 392, "col_offset": 20, "nodeName": "construct_arg", "type": "Callable[..., Any]"}, {"lineNumber": 395, "col_offset": 16, "nodeName": "value_params", "type": "Any"}, {"lineNumber": 396, "col_offset": 16, "nodeName": "value_cls", "type": "Any"}, {"lineNumber": 397, "col_offset": 16, "nodeName": "_NO_DEFAULT", "type": "Any"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 400, "col_offset": 30, "nodeName": "value", "type": "Any"}, {"lineNumber": 404, "col_offset": 9, "nodeName": "origin", "type": "Any"}, {"lineNumber": 404, "col_offset": 53, "nodeName": "can_construct_from_params", "type": "Callable[[Type[Any]], bool]"}, {"lineNumber": 405, "col_offset": 20, "nodeName": "__args__", "type": "Any"}, {"lineNumber": 407, "col_offset": 20, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 409, "col_offset": 15, "nodeName": "value_params", "type": "nothing"}, {"lineNumber": 409, "col_offset": 31, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 409, "col_offset": 41, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 422, "col_offset": 9, "nodeName": "origin", "type": "Any"}, {"lineNumber": 422, "col_offset": 19, "nodeName": "Union", "type": "Any"}, {"lineNumber": 424, "col_offset": 8, "nodeName": "backup_params", "type": "Any"}, {"lineNumber": 428, "col_offset": 12, "nodeName": "arg_annotation", "type": "Any"}, {"lineNumber": 428, "col_offset": 30, "nodeName": "args", "type": "Any"}, {"lineNumber": 368, "col_offset": 19, "nodeName": "collections", "type": "module"}, {"lineNumber": 388, "col_offset": 42, "nodeName": "can_construct_from_params", "type": "Callable[[Type[Any]], bool]"}, {"lineNumber": 388, "col_offset": 68, "nodeName": "arg", "type": "Any"}, {"lineNumber": 388, "col_offset": 77, "nodeName": "arg", "type": "Any"}, {"lineNumber": 388, "col_offset": 84, "nodeName": "args", "type": "Any"}, {"lineNumber": 391, "col_offset": 58, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 393, "col_offset": 16, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 393, "col_offset": 20, "nodeName": "value_cls", "type": "Any"}, {"lineNumber": 394, "col_offset": 16, "nodeName": "argument_name", "type": "str"}, {"lineNumber": 398, "col_offset": 18, "nodeName": "extras", "type": "Dict[str, Any]"}, {"lineNumber": 400, "col_offset": 12, "nodeName": "value_list", "type": "List[Any]"}, {"lineNumber": 404, "col_offset": 20, "nodeName": "Set", "type": "Any"}, {"lineNumber": 404, "col_offset": 25, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 404, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 404, "col_offset": 38, "nodeName": "args", "type": "Any"}, {"lineNumber": 404, "col_offset": 79, "nodeName": "args", "type": "Any"}, {"lineNumber": 405, "col_offset": 20, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 410, "col_offset": 20, "nodeName": "construct_arg", "type": "Callable[..., Any]"}, {"lineNumber": 413, "col_offset": 16, "nodeName": "value_params", "type": "nothing"}, {"lineNumber": 414, "col_offset": 16, "nodeName": "value_cls", "type": "Any"}, {"lineNumber": 415, "col_offset": 16, "nodeName": "_NO_DEFAULT", "type": "Any"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 418, "col_offset": 26, "nodeName": "value", "type": "Any"}, {"lineNumber": 424, "col_offset": 24, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 424, "col_offset": 33, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 444, "col_offset": 14, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 447, "col_offset": 9, "nodeName": "origin", "type": "Any"}, {"lineNumber": 447, "col_offset": 19, "nodeName": "Lazy", "type": "Type[allennlp.common.lazy.Lazy[Any]]"}, {"lineNumber": 450, "col_offset": 8, "nodeName": "value_cls", "type": "Any"}, {"lineNumber": 451, "col_offset": 8, "nodeName": "subextras", "type": "Dict[str, Any]"}, {"lineNumber": 411, "col_offset": 16, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 411, "col_offset": 20, "nodeName": "value_cls", "type": "Any"}, {"lineNumber": 412, "col_offset": 16, "nodeName": "argument_name", "type": "str"}, {"lineNumber": 416, "col_offset": 18, "nodeName": "extras", "type": "Dict[str, Any]"}, {"lineNumber": 418, "col_offset": 12, "nodeName": "value_set", "type": "Set[Any]"}, {"lineNumber": 448, "col_offset": 11, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 448, "col_offset": 28, "nodeName": "default", "type": "Any"}, {"lineNumber": 450, "col_offset": 20, "nodeName": "args", "type": "Any"}, {"lineNumber": 451, "col_offset": 20, "nodeName": "create_extras", "type": "Callable[[Type[T], Dict[str, Any]], Dict[str, Any]]"}, {"lineNumber": 451, "col_offset": 34, "nodeName": "value_cls", "type": "Any"}, {"lineNumber": 451, "col_offset": 45, "nodeName": "extras", "type": "Dict[str, Any]"}, {"lineNumber": 460, "col_offset": 12, "nodeName": "constructor_extras", "type": "Dict[str, Any]"}, {"lineNumber": 463, "col_offset": 15, "nodeName": "Lazy", "type": "Type[allennlp.common.lazy.Lazy[Any]]"}, {"lineNumber": 463, "col_offset": 20, "nodeName": "constructor", "type": "Callable[..., Any]"}, {"lineNumber": 473, "col_offset": 8, "nodeName": "value_cls", "type": "Any"}, {"lineNumber": 475, "col_offset": 8, "nodeName": "value_list", "type": "List[Any]"}, {"lineNumber": 488, "col_offset": 15, "nodeName": "value_list", "type": "List[Any]"}, {"lineNumber": 430, "col_offset": 23, "nodeName": "construct_arg", "type": "Callable[..., Any]"}, {"lineNumber": 432, "col_offset": 20, "nodeName": "argument_name", "type": "str"}, {"lineNumber": 433, "col_offset": 20, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 434, "col_offset": 20, "nodeName": "arg_annotation", "type": "Any"}, {"lineNumber": 435, "col_offset": 20, "nodeName": "default", "type": "Any"}, {"lineNumber": 449, "col_offset": 19, "nodeName": "Lazy", "type": "Type[allennlp.common.lazy.Lazy[Any]]"}, {"lineNumber": 460, "col_offset": 36, "nodeName": "subextras", "type": "Dict[str, Any]"}, {"lineNumber": 460, "col_offset": 49, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 461, "col_offset": 19, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 469, "col_offset": 8, "nodeName": "origin", "type": "Any"}, {"lineNumber": 471, "col_offset": 12, "nodeName": "can_construct_from_params", "type": "Callable[[Type[Any]], bool]"}, {"lineNumber": 473, "col_offset": 20, "nodeName": "__args__", "type": "Any"}, {"lineNumber": 477, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 477, "col_offset": 15, "nodeName": "value_params", "type": "nothing"}, {"lineNumber": 477, "col_offset": 31, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 477, "col_offset": 41, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 478, "col_offset": 12, "nodeName": "value", "type": "Any"}, {"lineNumber": 492, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 492, "col_offset": 22, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 492, "col_offset": 37, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 431, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 431, "col_offset": 24, "nodeName": "arg_annotation", "type": "Any"}, {"lineNumber": 436, "col_offset": 22, "nodeName": "extras", "type": "Dict[str, Any]"}, {"lineNumber": 461, "col_offset": 19, "nodeName": "value_cls", "type": "Any"}, {"lineNumber": 461, "col_offset": 75, "nodeName": "constructor_extras", "type": "Dict[str, Any]"}, {"lineNumber": 469, "col_offset": 19, "nodeName": "Iterable", "type": "Type[Iterable[Any]]"}, {"lineNumber": 469, "col_offset": 45, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 469, "col_offset": 55, "nodeName": "List", "type": "Any"}, {"lineNumber": 469, "col_offset": 61, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 470, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 470, "col_offset": 16, "nodeName": "args", "type": "Any"}, {"lineNumber": 471, "col_offset": 38, "nodeName": "args", "type": "Any"}, {"lineNumber": 473, "col_offset": 20, "nodeName": "annotation", "type": "Any"}, {"lineNumber": 478, "col_offset": 20, "nodeName": "construct_arg", "type": "Callable[..., Any]"}, {"lineNumber": 481, "col_offset": 16, "nodeName": "value_params", "type": "nothing"}, {"lineNumber": 482, "col_offset": 16, "nodeName": "value_cls", "type": "Any"}, {"lineNumber": 483, "col_offset": 16, "nodeName": "_NO_DEFAULT", "type": "Any"}, {"lineNumber": 486, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 486, "col_offset": 30, "nodeName": "value", "type": "Any"}, {"lineNumber": 493, "col_offset": 19, "nodeName": "as_dict", "type": "Callable[..., Any]"}, {"lineNumber": 461, "col_offset": 48, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 461, "col_offset": 57, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 469, "col_offset": 19, "nodeName": "abc", "type": "module"}, {"lineNumber": 479, "col_offset": 16, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 479, "col_offset": 20, "nodeName": "value_cls", "type": "Any"}, {"lineNumber": 480, "col_offset": 16, "nodeName": "argument_name", "type": "str"}, {"lineNumber": 484, "col_offset": 18, "nodeName": "extras", "type": "Dict[str, Any]"}, {"lineNumber": 486, "col_offset": 12, "nodeName": "value_list", "type": "List[Any]"}, {"lineNumber": 493, "col_offset": 19, "nodeName": "popped_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 469, "col_offset": 19, "nodeName": "collections", "type": "module"}]