[{"lineNumber": 19, "col_offset": 19, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "reshaped_log_probs", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 58, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "all_predictions", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "all_predictions", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "all_tags", "type": "List[List[Any]]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "predictions_list", "type": "List[Any]"}, {"lineNumber": 139, "col_offset": 30, "nodeName": "all_tags", "type": "List[List[Any]]"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 122, "col_offset": 62, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 143, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 44, "col_offset": 43, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 44, "col_offset": 50, "nodeName": "regularizer", "type": "Optional[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "get_vocab_size", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "check_dimensions_match", "type": "Callable[[int, int, str, str], None]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "text_field_embedder", "type": "Any"}, {"lineNumber": 98, "col_offset": 55, "nodeName": "tokens", "type": "Dict[str, Any]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 99, "col_offset": 37, "nodeName": "_", "type": "Any"}, {"lineNumber": 99, "col_offset": 41, "nodeName": "size", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "get_text_field_mask", "type": "Callable[..., Any]"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "tokens", "type": "Dict[str, Any]"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 101, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "tag_projection_layer", "type": "Any"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "view", "type": "Any"}, {"lineNumber": 104, "col_offset": 45, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "view", "type": "Any"}, {"lineNumber": 109, "col_offset": 33, "nodeName": "logits", "type": "Any"}, {"lineNumber": 109, "col_offset": 64, "nodeName": "class_probabilities", "type": "Any"}, {"lineNumber": 111, "col_offset": 11, "nodeName": "tags", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "metric", "type": "Any"}, {"lineNumber": 115, "col_offset": 34, "nodeName": "loss", "type": "Any"}, {"lineNumber": 117, "col_offset": 11, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "predictions_list", "type": "List[Any]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "predictions_list", "type": "List[Any]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "argmax_indices", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 143, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "metric_name", "type": "Any"}, {"lineNumber": 43, "col_offset": 30, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 49, "col_offset": 52, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 50, "col_offset": 59, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 52, "col_offset": 69, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "List", "type": "Any"}, {"lineNumber": 98, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 41, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "logits", "type": "Any"}, {"lineNumber": 104, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 74, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 106, "col_offset": 74, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 107, "col_offset": 74, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "sequence_cross_entropy_with_logits", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 54, "nodeName": "logits", "type": "Any"}, {"lineNumber": 112, "col_offset": 62, "nodeName": "tags", "type": "Any"}, {"lineNumber": 112, "col_offset": 68, "nodeName": "mask", "type": "Any"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "values", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 63, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 65, "col_offset": 68, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "all_predictions", "type": "Any"}, {"lineNumber": 132, "col_offset": 32, "nodeName": "all_predictions", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 135, "col_offset": 42, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "tags", "type": "List[Any]"}, {"lineNumber": 122, "col_offset": 67, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 122, "col_offset": 72, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 144, "col_offset": 47, "nodeName": "reset", "type": "bool"}, {"lineNumber": 143, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 143, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 43, "col_offset": 39, "nodeName": "RegularizerApplicator", "type": "Type[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "SimpleTagger", "type": "Any"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 59, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 50, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 52, "col_offset": 69, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 105, "col_offset": 40, "nodeName": "reshaped_log_probs", "type": "Any"}, {"lineNumber": 107, "col_offset": 74, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "metric", "type": "Any"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "logits", "type": "Any"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "tags", "type": "Any"}, {"lineNumber": 118, "col_offset": 36, "nodeName": "x", "type": "Dict[str, Any]"}, {"lineNumber": 118, "col_offset": 51, "nodeName": "x", "type": "Dict[str, Any]"}, {"lineNumber": 118, "col_offset": 56, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 65, "col_offset": 68, "nodeName": "torch", "type": "Any"}, {"lineNumber": 130, "col_offset": 32, "nodeName": "all_predictions", "type": "Any"}, {"lineNumber": 130, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 137, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "argmax_indices", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "all_tags", "type": "List[List[Any]]"}, {"lineNumber": 122, "col_offset": 72, "nodeName": "torch", "type": "Any"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "metric", "type": "Any"}, {"lineNumber": 144, "col_offset": 58, "nodeName": "metric_name", "type": "Any"}, {"lineNumber": 144, "col_offset": 71, "nodeName": "metric", "type": "Any"}, {"lineNumber": 144, "col_offset": 81, "nodeName": "items", "type": "Any"}, {"lineNumber": 49, "col_offset": 59, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 105, "col_offset": 30, "nodeName": "F", "type": "Any"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "float", "type": "Any"}, {"lineNumber": 122, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 122, "col_offset": 44, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 130, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 130, "col_offset": 60, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 144, "col_offset": 81, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "mask", "type": "Any"}, {"lineNumber": 122, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 128, "col_offset": 26, "nodeName": "all_predictions", "type": "Any"}, {"lineNumber": 130, "col_offset": 66, "nodeName": "shape", "type": "Any"}, {"lineNumber": 144, "col_offset": 81, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "Any", "type": "Any"}, {"lineNumber": 130, "col_offset": 66, "nodeName": "all_predictions", "type": "Any"}]