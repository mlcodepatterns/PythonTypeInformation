[{"lineNumber": 32, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 35, "col_offset": 0, "nodeName": "ParameterGroupsType", "type": "Type[List[Tuple[List[str], Dict[str, Any]]]]"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 173, "col_offset": 39, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 205, "col_offset": 21, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 355, "col_offset": 20, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 355, "col_offset": 31, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 381, "col_offset": 26, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 381, "col_offset": 37, "nodeName": "SparseAdam", "type": "Any"}, {"lineNumber": 403, "col_offset": 22, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 403, "col_offset": 33, "nodeName": "Adamax", "type": "Any"}, {"lineNumber": 427, "col_offset": 21, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 427, "col_offset": 32, "nodeName": "AdamW", "type": "Any"}, {"lineNumber": 453, "col_offset": 32, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 453, "col_offset": 43, "nodeName": "AdamW", "type": "Any"}, {"lineNumber": 479, "col_offset": 23, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 479, "col_offset": 34, "nodeName": "Adagrad", "type": "Any"}, {"lineNumber": 505, "col_offset": 24, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 505, "col_offset": 35, "nodeName": "Adadelta", "type": "Any"}, {"lineNumber": 529, "col_offset": 19, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 529, "col_offset": 30, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 555, "col_offset": 23, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 555, "col_offset": 34, "nodeName": "RMSprop", "type": "Any"}, {"lineNumber": 583, "col_offset": 27, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 583, "col_offset": 38, "nodeName": "ASGD", "type": "Any"}, {"lineNumber": 609, "col_offset": 22, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 609, "col_offset": 33, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "List", "type": "Any"}, {"lineNumber": 83, "col_offset": 7, "nodeName": "groups", "type": "Optional[List[Tuple[List[str], Dict[str, Any]]]]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "num_parameters", "type": "int"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "parameter_group", "type": "Any"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "parameter_groups", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 11, "nodeName": "parameter_groups", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 5, "nodeName": "Union", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "optim", "type": "Any"}, {"lineNumber": 197, "col_offset": 4, "nodeName": "default_implementation", "type": "str"}, {"lineNumber": 355, "col_offset": 31, "nodeName": "optim", "type": "Any"}, {"lineNumber": 381, "col_offset": 37, "nodeName": "optim", "type": "Any"}, {"lineNumber": 403, "col_offset": 33, "nodeName": "optim", "type": "Any"}, {"lineNumber": 427, "col_offset": 32, "nodeName": "optim", "type": "Any"}, {"lineNumber": 453, "col_offset": 43, "nodeName": "transformers", "type": "Any"}, {"lineNumber": 479, "col_offset": 34, "nodeName": "optim", "type": "Any"}, {"lineNumber": 505, "col_offset": 35, "nodeName": "optim", "type": "Any"}, {"lineNumber": 529, "col_offset": 30, "nodeName": "optim", "type": "Any"}, {"lineNumber": 555, "col_offset": 34, "nodeName": "optim", "type": "Any"}, {"lineNumber": 583, "col_offset": 38, "nodeName": "optim", "type": "Any"}, {"lineNumber": 609, "col_offset": 33, "nodeName": "optim", "type": "Any"}, {"lineNumber": 32, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "regex_use_counts", "type": "Dict[str, int]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "parameter_group_names", "type": "List[Set[Any]]"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "model_parameters", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "no_grad_group_indices", "type": "List[int]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "parameter_groups", "type": "List[Any]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 54, "nodeName": "num_parameters", "type": "Union[int, Any]"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "parameter_group", "type": "Tuple[List[str], Dict[Any, Any]]"}, {"lineNumber": 251, "col_offset": 31, "nodeName": "parameter_groups", "type": "List[Tuple[List[str], Dict[Any, Any]]]"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "model_parameter_tuple", "type": "Tuple[str, Any]"}, {"lineNumber": 260, "col_offset": 37, "nodeName": "model_parameters", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 292, "col_offset": 8, "nodeName": "parameter_groups", "type": "Any"}, {"lineNumber": 293, "col_offset": 12, "nodeName": "parameter_group", "type": "Any"}, {"lineNumber": 293, "col_offset": 31, "nodeName": "parameter_groups", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "made_parameter_groups", "type": "Union[List[Dict[Any, Any]], List[Any]]"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 335, "col_offset": 15, "nodeName": "optimizer_state_dict", "type": "Dict[str, Any]"}, {"lineNumber": 350, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 355, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 381, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 403, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 427, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 479, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 505, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 529, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 555, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 583, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 609, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 648, "col_offset": 8, "nodeName": "defaults", "type": "Dict[Any, Any]"}, {"lineNumber": 660, "col_offset": 8, "nodeName": "loss", "type": "None"}, {"lineNumber": 664, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 664, "col_offset": 21, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 733, "col_offset": 15, "nodeName": "loss", "type": "Optional[Any]"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 91, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "param", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "group_index", "type": "None"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 121, "col_offset": 33, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "group", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 145, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "regex", "type": "str"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "count", "type": "int"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "items", "type": "Callable"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "param", "type": "Any"}, {"lineNumber": 164, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "parameter_group", "type": "Any"}, {"lineNumber": 164, "col_offset": 39, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "num_parameters", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "num_parameters", "type": "Any"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 200, "col_offset": 34, "nodeName": "List", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 239, "col_offset": 26, "nodeName": "ParameterGroupsType", "type": "Type[List[Tuple[List[str], Dict[str, Any]]]]"}, {"lineNumber": 241, "col_offset": 28, "nodeName": "optimizers", "type": "Dict[str, allennlp.common.lazy.Lazy[Optimizer]]"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "optimizer_name", "type": "str"}, {"lineNumber": 252, "col_offset": 36, "nodeName": "parameter_group", "type": "Tuple[List[str], Dict[Any, Any]]"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "optimizer_name", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "optimizer_name", "type": "str"}, {"lineNumber": 261, "col_offset": 47, "nodeName": "model_parameter_tuple", "type": "Tuple[str, Any]"}, {"lineNumber": 262, "col_offset": 41, "nodeName": "parameter_groups", "type": "List[Tuple[List[str], Dict[Any, Any]]]"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "optimizer_name", "type": "str"}, {"lineNumber": 271, "col_offset": 28, "nodeName": "optimizer_parameters", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 271, "col_offset": 52, "nodeName": "items", "type": "Callable"}, {"lineNumber": 292, "col_offset": 27, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 292, "col_offset": 41, "nodeName": "parameter_groups", "type": "List[Tuple[List[str], Dict[Any, Any]]]"}, {"lineNumber": 294, "col_offset": 36, "nodeName": "parameter_group", "type": "Any"}, {"lineNumber": 295, "col_offset": 12, "nodeName": "optimizer_name", "type": "Any"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "optimizer", "type": "Optimizer"}, {"lineNumber": 303, "col_offset": 32, "nodeName": "make_parameter_groups", "type": "Callable[..., Union[List[Dict[str, Any]], List[Any]]]"}, {"lineNumber": 303, "col_offset": 54, "nodeName": "model_parameters", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 303, "col_offset": 72, "nodeName": "parameter_groups", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 304, "col_offset": 17, "nodeName": "value", "type": "Any"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 305, "col_offset": 45, "nodeName": "value", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 307, "col_offset": 25, "nodeName": "made_parameter_groups", "type": "Union[List[Any], List[Dict[Any, Any]]]"}, {"lineNumber": 314, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 342, "col_offset": 12, "nodeName": "optimizer_key", "type": "Any"}, {"lineNumber": 342, "col_offset": 27, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 342, "col_offset": 40, "nodeName": "items", "type": "Any"}, {"lineNumber": 346, "col_offset": 37, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 350, "col_offset": 25, "nodeName": "values", "type": "Any"}, {"lineNumber": 368, "col_offset": 17, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 392, "col_offset": 13, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 415, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 440, "col_offset": 17, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 466, "col_offset": 22, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 492, "col_offset": 13, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 517, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 542, "col_offset": 18, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 569, "col_offset": 18, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 596, "col_offset": 22, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 648, "col_offset": 19, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 649, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 649, "col_offset": 84, "nodeName": "defaults", "type": "Dict[Any, Any]"}, {"lineNumber": 661, "col_offset": 11, "nodeName": "closure", "type": "Any"}, {"lineNumber": 662, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 664, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 665, "col_offset": 16, "nodeName": "p", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "ParameterGroupsType", "type": "Type[List[Tuple[List[str], Dict[str, Any]]]]"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "_", "type": "int"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "groups", "type": "Optional[List[Tuple[List[str], Dict[str, Any]]]]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "update", "type": "Any"}, {"lineNumber": 95, "col_offset": 36, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 95, "col_offset": 54, "nodeName": "_", "type": "int"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "k", "type": "int"}, {"lineNumber": 99, "col_offset": 19, "nodeName": "group_regexes", "type": "Tuple[List[str], Dict[str, Any]]"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 99, "col_offset": 46, "nodeName": "groups", "type": "Optional[List[Tuple[List[str], Dict[str, Any]]]]"}, {"lineNumber": 100, "col_offset": 20, "nodeName": "regex", "type": "str"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "group_index", "type": "Optional[int]"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "names", "type": "Set[Any]"}, {"lineNumber": 121, "col_offset": 23, "nodeName": "group", "type": "Dict[str, Any]"}, {"lineNumber": 121, "col_offset": 43, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 121, "col_offset": 47, "nodeName": "parameter_group_names", "type": "List[Set[Any]]"}, {"lineNumber": 121, "col_offset": 70, "nodeName": "parameter_groups", "type": "Union[List[Any], List[Dict[str, Any]]]"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "param", "type": "Any"}, {"lineNumber": 132, "col_offset": 19, "nodeName": "unused_options", "type": "Dict[str, Any]"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 145, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "parameter_groups", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "val", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 44, "nodeName": "k", "type": "int"}, {"lineNumber": 149, "col_offset": 79, "nodeName": "group_options", "type": "Dict[Any, Any]"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "regex_use_counts", "type": "Dict[str, int]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "count", "type": "int"}, {"lineNumber": 159, "col_offset": 53, "nodeName": "model_parameters", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 165, "col_offset": 30, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "numel", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "List", "type": "Any"}, {"lineNumber": 41, "col_offset": 33, "nodeName": "List", "type": "Any"}, {"lineNumber": 201, "col_offset": 15, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 201, "col_offset": 54, "nodeName": "model_parameters", "type": "List[Any]"}, {"lineNumber": 237, "col_offset": 26, "nodeName": "List", "type": "Any"}, {"lineNumber": 238, "col_offset": 20, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 242, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 249, "col_offset": 35, "nodeName": "optimizer_name", "type": "str"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "regexes", "type": "List[str]"}, {"lineNumber": 252, "col_offset": 21, "nodeName": "pg_overrides", "type": "Dict[Any, Any]"}, {"lineNumber": 253, "col_offset": 29, "nodeName": "get", "type": "Callable"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 254, "col_offset": 70, "nodeName": "parameter_group", "type": "Tuple[List[str], Dict[Any, Any]]"}, {"lineNumber": 258, "col_offset": 35, "nodeName": "optimizer_name", "type": "str"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "parameter_name", "type": "str"}, {"lineNumber": 261, "col_offset": 28, "nodeName": "parameter_tensor", "type": "Any"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "regexes", "type": "List[str]"}, {"lineNumber": 262, "col_offset": 25, "nodeName": "pg_overrides", "type": "Dict[Any, Any]"}, {"lineNumber": 271, "col_offset": 52, "nodeName": "optimizer_name_to_model_parameters", "type": "Dict[str, List[Tuple[str, Any]]]"}, {"lineNumber": 292, "col_offset": 27, "nodeName": "copy", "type": "module"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "regexes", "type": "Any"}, {"lineNumber": 294, "col_offset": 21, "nodeName": "pg_overrides", "type": "Any"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "get", "type": "Any"}, {"lineNumber": 296, "col_offset": 24, "nodeName": "optimizers", "type": "Dict[str, Optimizer]"}, {"lineNumber": 297, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 297, "col_offset": 21, "nodeName": "value", "type": "Any"}, {"lineNumber": 297, "col_offset": 30, "nodeName": "items", "type": "Any"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "defaults", "type": "Any"}, {"lineNumber": 314, "col_offset": 25, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 338, "col_offset": 46, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 342, "col_offset": 40, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 350, "col_offset": 25, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 351, "col_offset": 32, "nodeName": "set_to_none", "type": "bool"}, {"lineNumber": 372, "col_offset": 15, "nodeName": "lr", "type": "float"}, {"lineNumber": 373, "col_offset": 18, "nodeName": "betas", "type": "Tuple[float, float]"}, {"lineNumber": 374, "col_offset": 16, "nodeName": "eps", "type": "float"}, {"lineNumber": 375, "col_offset": 25, "nodeName": "weight_decay", "type": "float"}, {"lineNumber": 376, "col_offset": 20, "nodeName": "amsgrad", "type": "bool"}, {"lineNumber": 396, "col_offset": 15, "nodeName": "lr", "type": "float"}, {"lineNumber": 397, "col_offset": 18, "nodeName": "betas", "type": "Tuple[float, float]"}, {"lineNumber": 398, "col_offset": 16, "nodeName": "eps", "type": "float"}, {"lineNumber": 419, "col_offset": 15, "nodeName": "lr", "type": "float"}, {"lineNumber": 420, "col_offset": 18, "nodeName": "betas", "type": "Tuple[float, float]"}, {"lineNumber": 421, "col_offset": 16, "nodeName": "eps", "type": "float"}, {"lineNumber": 422, "col_offset": 25, "nodeName": "weight_decay", "type": "float"}, {"lineNumber": 444, "col_offset": 15, "nodeName": "lr", "type": "float"}, {"lineNumber": 445, "col_offset": 18, "nodeName": "betas", "type": "Tuple[float, float]"}, {"lineNumber": 446, "col_offset": 16, "nodeName": "eps", "type": "float"}, {"lineNumber": 447, "col_offset": 25, "nodeName": "weight_decay", "type": "float"}, {"lineNumber": 448, "col_offset": 20, "nodeName": "amsgrad", "type": "bool"}, {"lineNumber": 470, "col_offset": 15, "nodeName": "lr", "type": "float"}, {"lineNumber": 471, "col_offset": 18, "nodeName": "betas", "type": "Tuple[float, float]"}, {"lineNumber": 472, "col_offset": 16, "nodeName": "eps", "type": "float"}, {"lineNumber": 473, "col_offset": 25, "nodeName": "weight_decay", "type": "float"}, {"lineNumber": 474, "col_offset": 25, "nodeName": "correct_bias", "type": "bool"}, {"lineNumber": 496, "col_offset": 15, "nodeName": "lr", "type": "float"}, {"lineNumber": 497, "col_offset": 21, "nodeName": "lr_decay", "type": "float"}, {"lineNumber": 498, "col_offset": 25, "nodeName": "weight_decay", "type": "float"}, {"lineNumber": 499, "col_offset": 38, "nodeName": "initial_accumulator_value", "type": "float"}, {"lineNumber": 500, "col_offset": 16, "nodeName": "eps", "type": "float"}, {"lineNumber": 521, "col_offset": 15, "nodeName": "lr", "type": "float"}, {"lineNumber": 522, "col_offset": 16, "nodeName": "rho", "type": "float"}, {"lineNumber": 523, "col_offset": 16, "nodeName": "eps", "type": "float"}, {"lineNumber": 524, "col_offset": 25, "nodeName": "weight_decay", "type": "float"}, {"lineNumber": 546, "col_offset": 15, "nodeName": "lr", "type": "float"}, {"lineNumber": 547, "col_offset": 21, "nodeName": "momentum", "type": "float"}, {"lineNumber": 548, "col_offset": 22, "nodeName": "dampening", "type": "float"}, {"lineNumber": 549, "col_offset": 25, "nodeName": "weight_decay", "type": "float"}, {"lineNumber": 550, "col_offset": 21, "nodeName": "nesterov", "type": "bool"}, {"lineNumber": 573, "col_offset": 15, "nodeName": "lr", "type": "float"}, {"lineNumber": 574, "col_offset": 18, "nodeName": "alpha", "type": "float"}, {"lineNumber": 575, "col_offset": 16, "nodeName": "eps", "type": "float"}, {"lineNumber": 576, "col_offset": 25, "nodeName": "weight_decay", "type": "float"}, {"lineNumber": 577, "col_offset": 21, "nodeName": "momentum", "type": "float"}, {"lineNumber": 578, "col_offset": 21, "nodeName": "centered", "type": "bool"}, {"lineNumber": 600, "col_offset": 15, "nodeName": "lr", "type": "float"}, {"lineNumber": 601, "col_offset": 18, "nodeName": "lambd", "type": "float"}, {"lineNumber": 602, "col_offset": 18, "nodeName": "alpha", "type": "float"}, {"lineNumber": 603, "col_offset": 15, "nodeName": "t0", "type": "float"}, {"lineNumber": 604, "col_offset": 25, "nodeName": "weight_decay", "type": "float"}, {"lineNumber": 640, "col_offset": 22, "nodeName": "lr", "type": "Any"}, {"lineNumber": 641, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 642, "col_offset": 22, "nodeName": "eps", "type": "Any"}, {"lineNumber": 643, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 645, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 647, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 648, "col_offset": 27, "nodeName": "lr", "type": "Any"}, {"lineNumber": 648, "col_offset": 37, "nodeName": "betas", "type": "Any"}, {"lineNumber": 648, "col_offset": 48, "nodeName": "eps", "type": "Any"}, {"lineNumber": 649, "col_offset": 25, "nodeName": "make_parameter_groups", "type": "Callable[..., Union[List[Dict[str, Any]], List[Any]]]"}, {"lineNumber": 649, "col_offset": 47, "nodeName": "model_parameters", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 649, "col_offset": 65, "nodeName": "parameter_groups", "type": "List[Tuple[List[str], Dict[str, Any]]]"}, {"lineNumber": 662, "col_offset": 19, "nodeName": "closure", "type": "Any"}, {"lineNumber": 665, "col_offset": 21, "nodeName": "group", "type": "Any"}, {"lineNumber": 668, "col_offset": 16, "nodeName": "grad", "type": "Any"}, {"lineNumber": 668, "col_offset": 23, "nodeName": "data", "type": "Any"}, {"lineNumber": 670, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 685, "col_offset": 19, "nodeName": "is_sparse", "type": "Any"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 95, "col_offset": 59, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "group_regexes", "type": "Tuple[List[str], Dict[str, Any]]"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 112, "col_offset": 63, "nodeName": "param", "type": "Any"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "add", "type": "Any"}, {"lineNumber": 113, "col_offset": 55, "nodeName": "name", "type": "str"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 116, "col_offset": 54, "nodeName": "param", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 117, "col_offset": 46, "nodeName": "name", "type": "str"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "get", "type": "Callable"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 123, "col_offset": 45, "nodeName": "k", "type": "int"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 83, "nodeName": "names", "type": "Set[Any]"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "group", "type": "Dict[str, Any]"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "key", "type": "str"}, {"lineNumber": 130, "col_offset": 25, "nodeName": "val", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "k", "type": "int"}, {"lineNumber": 136, "col_offset": 20, "nodeName": "names", "type": "Set[Any]"}, {"lineNumber": 136, "col_offset": 30, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 136, "col_offset": 40, "nodeName": "parameter_group_names", "type": "List[Set[Any]]"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "k", "type": "int"}, {"lineNumber": 137, "col_offset": 24, "nodeName": "no_grad_group_indices", "type": "List[int]"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "k", "type": "int"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "group", "type": "Any"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 140, "col_offset": 46, "nodeName": "parameter_groups", "type": "Union[List[Any], List[Dict[str, Any]]]"}, {"lineNumber": 140, "col_offset": 67, "nodeName": "k", "type": "int"}, {"lineNumber": 140, "col_offset": 76, "nodeName": "no_grad_group_indices", "type": "List[int]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 149, "col_offset": 47, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 20, "nodeName": "regex", "type": "str"}, {"lineNumber": 159, "col_offset": 38, "nodeName": "name", "type": "str"}, {"lineNumber": 159, "col_offset": 44, "nodeName": "param", "type": "Any"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "parameter_group", "type": "Any"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 201, "col_offset": 79, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 249, "col_offset": 53, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 253, "col_offset": 29, "nodeName": "pg_overrides", "type": "Dict[Any, Any]"}, {"lineNumber": 258, "col_offset": 53, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 263, "col_offset": 19, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 264, "col_offset": 20, "nodeName": "optimizer_name", "type": "Any"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 268, "col_offset": 69, "nodeName": "model_parameter_tuple", "type": "Tuple[str, Any]"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 273, "col_offset": 22, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 287, "col_offset": 16, "nodeName": "optimizer_name", "type": "str"}, {"lineNumber": 287, "col_offset": 32, "nodeName": "lazy_optimizer", "type": "allennlp.common.lazy.Lazy[Optimizer]"}, {"lineNumber": 287, "col_offset": 50, "nodeName": "items", "type": "Callable"}, {"lineNumber": 295, "col_offset": 29, "nodeName": "pg_overrides", "type": "Any"}, {"lineNumber": 296, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 296, "col_offset": 40, "nodeName": "optimizer_name", "type": "Any"}, {"lineNumber": 297, "col_offset": 30, "nodeName": "defaults", "type": "Any"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 298, "col_offset": 30, "nodeName": "pg_overrides", "type": "Any"}, {"lineNumber": 299, "col_offset": 40, "nodeName": "value", "type": "Any"}, {"lineNumber": 305, "col_offset": 12, "nodeName": "made_parameter_groups", "type": "Union[List[Any], List[Dict[Any, Any]]]"}, {"lineNumber": 305, "col_offset": 38, "nodeName": "key", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 314, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "optimizer_key", "type": "Any"}, {"lineNumber": 332, "col_offset": 31, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 332, "col_offset": 44, "nodeName": "items", "type": "Any"}, {"lineNumber": 342, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 343, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 343, "col_offset": 38, "nodeName": "training_state", "type": "Dict[str, Any]"}, {"lineNumber": 350, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 371, "col_offset": 19, "nodeName": "make_parameter_groups", "type": "Callable[..., Union[List[Dict[str, Any]], List[Any]]]"}, {"lineNumber": 371, "col_offset": 41, "nodeName": "model_parameters", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 371, "col_offset": 59, "nodeName": "parameter_groups", "type": "List[Tuple[List[str], Dict[str, Any]]]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 395, "col_offset": 19, "nodeName": "make_parameter_groups", "type": "Callable[..., Union[List[Dict[str, Any]], List[Any]]]"}, {"lineNumber": 395, "col_offset": 41, "nodeName": "model_parameters", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 395, "col_offset": 59, "nodeName": "parameter_groups", "type": "List[Tuple[List[str], Dict[str, Any]]]"}, {"lineNumber": 417, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 418, "col_offset": 19, "nodeName": "make_parameter_groups", "type": "Callable[..., Union[List[Dict[str, Any]], List[Any]]]"}, {"lineNumber": 418, "col_offset": 41, "nodeName": "model_parameters", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 418, "col_offset": 59, "nodeName": "parameter_groups", "type": "List[Tuple[List[str], Dict[str, Any]]]"}, {"lineNumber": 442, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 443, "col_offset": 19, "nodeName": "make_parameter_groups", "type": "Callable[..., Union[List[Dict[str, Any]], List[Any]]]"}, {"lineNumber": 443, "col_offset": 41, "nodeName": "model_parameters", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 443, "col_offset": 59, "nodeName": "parameter_groups", "type": "List[Tuple[List[str], Dict[str, Any]]]"}, {"lineNumber": 468, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 469, "col_offset": 19, "nodeName": "make_parameter_groups", "type": "Callable[..., Union[List[Dict[str, Any]], List[Any]]]"}, {"lineNumber": 469, "col_offset": 41, "nodeName": "model_parameters", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 469, "col_offset": 59, "nodeName": "parameter_groups", "type": "List[Tuple[List[str], Dict[str, Any]]]"}, {"lineNumber": 494, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 495, "col_offset": 19, "nodeName": "make_parameter_groups", "type": "Callable[..., Union[List[Dict[str, Any]], List[Any]]]"}, {"lineNumber": 495, "col_offset": 41, "nodeName": "model_parameters", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 495, "col_offset": 59, "nodeName": "parameter_groups", "type": "List[Tuple[List[str], Dict[str, Any]]]"}, {"lineNumber": 519, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 520, "col_offset": 19, "nodeName": "make_parameter_groups", "type": "Callable[..., Union[List[Dict[str, Any]], List[Any]]]"}, {"lineNumber": 520, "col_offset": 41, "nodeName": "model_parameters", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 520, "col_offset": 59, "nodeName": "parameter_groups", "type": "List[Tuple[List[str], Dict[str, Any]]]"}, {"lineNumber": 544, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 545, "col_offset": 19, "nodeName": "make_parameter_groups", "type": "Callable[..., Union[List[Dict[str, Any]], List[Any]]]"}, {"lineNumber": 545, "col_offset": 41, "nodeName": "model_parameters", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 545, "col_offset": 59, "nodeName": "parameter_groups", "type": "List[Tuple[List[str], Dict[str, Any]]]"}, {"lineNumber": 571, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 572, "col_offset": 19, "nodeName": "make_parameter_groups", "type": "Callable[..., Union[List[Dict[str, Any]], List[Any]]]"}, {"lineNumber": 572, "col_offset": 41, "nodeName": "model_parameters", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 572, "col_offset": 59, "nodeName": "parameter_groups", "type": "List[Tuple[List[str], Dict[str, Any]]]"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 599, "col_offset": 19, "nodeName": "make_parameter_groups", "type": "Callable[..., Union[List[Dict[str, Any]], List[Any]]]"}, {"lineNumber": 599, "col_offset": 41, "nodeName": "model_parameters", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 599, "col_offset": 59, "nodeName": "parameter_groups", "type": "List[Tuple[List[str], Dict[str, Any]]]"}, {"lineNumber": 641, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 641, "col_offset": 64, "nodeName": "lr", "type": "Any"}, {"lineNumber": 643, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 643, "col_offset": 64, "nodeName": "eps", "type": "Any"}, {"lineNumber": 644, "col_offset": 22, "nodeName": "betas", "type": "Any"}, {"lineNumber": 645, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 646, "col_offset": 22, "nodeName": "betas", "type": "Any"}, {"lineNumber": 647, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 649, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 666, "col_offset": 19, "nodeName": "grad", "type": "Any"}, {"lineNumber": 668, "col_offset": 23, "nodeName": "grad", "type": "Any"}, {"lineNumber": 670, "col_offset": 24, "nodeName": "state", "type": "Any"}, {"lineNumber": 680, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 682, "col_offset": 16, "nodeName": "exp_avg", "type": "Any"}, {"lineNumber": 682, "col_offset": 25, "nodeName": "exp_avg_sq", "type": "Any"}, {"lineNumber": 683, "col_offset": 16, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 683, "col_offset": 23, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 683, "col_offset": 31, "nodeName": "group", "type": "Any"}, {"lineNumber": 685, "col_offset": 19, "nodeName": "grad", "type": "Any"}, {"lineNumber": 686, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 687, "col_offset": 20, "nodeName": "grad_indices", "type": "Any"}, {"lineNumber": 688, "col_offset": 20, "nodeName": "grad_values", "type": "Any"}, {"lineNumber": 689, "col_offset": 20, "nodeName": "size", "type": "Any"}, {"lineNumber": 700, "col_offset": 20, "nodeName": "old_exp_avg_values", "type": "Any"}, {"lineNumber": 701, "col_offset": 20, "nodeName": "exp_avg_update_values", "type": "Any"}, {"lineNumber": 703, "col_offset": 20, "nodeName": "old_exp_avg_sq_values", "type": "Any"}, {"lineNumber": 710, "col_offset": 20, "nodeName": "numer", "type": "Any"}, {"lineNumber": 712, "col_offset": 20, "nodeName": "denom", "type": "Any"}, {"lineNumber": 715, "col_offset": 20, "nodeName": "bias_correction1", "type": "Any"}, {"lineNumber": 716, "col_offset": 20, "nodeName": "bias_correction2", "type": "Any"}, {"lineNumber": 717, "col_offset": 20, "nodeName": "step_size", "type": "Any"}, {"lineNumber": 725, "col_offset": 20, "nodeName": "denom", "type": "Any"}, {"lineNumber": 727, "col_offset": 20, "nodeName": "bias_correction1", "type": "Any"}, {"lineNumber": 728, "col_offset": 20, "nodeName": "bias_correction2", "type": "Any"}, {"lineNumber": 729, "col_offset": 20, "nodeName": "step_size", "type": "Any"}, {"lineNumber": 35, "col_offset": 33, "nodeName": "List", "type": "Any"}, {"lineNumber": 35, "col_offset": 44, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "parameter_groups", "type": "Union[List[Any], List[Dict[str, Any]]]"}, {"lineNumber": 92, "col_offset": 39, "nodeName": "groups", "type": "Optional[List[Tuple[List[str], Dict[str, Any]]]]"}, {"lineNumber": 101, "col_offset": 23, "nodeName": "regex", "type": "str"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "regex_use_counts", "type": "Dict[str, int]"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "search", "type": "Callable"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "regex", "type": "str"}, {"lineNumber": 103, "col_offset": 40, "nodeName": "name", "type": "str"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "group_index", "type": "int"}, {"lineNumber": 108, "col_offset": 38, "nodeName": "k", "type": "int"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "group", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "no_grad_group_indices", "type": "List[int]"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 72, "nodeName": "unused_options", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 88, "nodeName": "names", "type": "Set[Any]"}, {"lineNumber": 147, "col_offset": 29, "nodeName": "key", "type": "Any"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "val", "type": "Any"}, {"lineNumber": 147, "col_offset": 41, "nodeName": "items", "type": "Any"}, {"lineNumber": 147, "col_offset": 72, "nodeName": "key", "type": "Any"}, {"lineNumber": 149, "col_offset": 52, "nodeName": "parameter_group_names", "type": "List[Set[Any]]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 165, "col_offset": 34, "nodeName": "numel", "type": "Any"}, {"lineNumber": 165, "col_offset": 56, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 41, "col_offset": 16, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "nn", "type": "Any"}, {"lineNumber": 237, "col_offset": 31, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 238, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 249, "col_offset": 53, "nodeName": "optimizers", "type": "Dict[str, allennlp.common.lazy.Lazy[Optimizer]]"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "optimizer_name_to_parameter_groups", "type": "Dict[str, List[Union[Tuple[List[str], Dict[str, Any]], Tuple[List[str], Dict[Any, Any]]]]]"}, {"lineNumber": 258, "col_offset": 53, "nodeName": "optimizers", "type": "Dict[str, allennlp.common.lazy.Lazy[Optimizer]]"}, {"lineNumber": 264, "col_offset": 37, "nodeName": "get", "type": "Callable"}, {"lineNumber": 265, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 265, "col_offset": 78, "nodeName": "model_parameter_tuple", "type": "Tuple[str, Any]"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "optimizer_parameters", "type": "List[Tuple[str, Any]]"}, {"lineNumber": 287, "col_offset": 50, "nodeName": "optimizers", "type": "Dict[str, allennlp.common.lazy.Lazy[Optimizer]]"}, {"lineNumber": 297, "col_offset": 30, "nodeName": "optimizer", "type": "Optimizer"}, {"lineNumber": 299, "col_offset": 20, "nodeName": "pg_overrides", "type": "Any"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "optimizers", "type": "Dict[str, Optimizer]"}, {"lineNumber": 332, "col_offset": 44, "nodeName": "optimizers", "type": "Any"}, {"lineNumber": 338, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 338, "col_offset": 56, "nodeName": "Any", "type": "Any"}, {"lineNumber": 645, "col_offset": 76, "nodeName": "betas", "type": "Any"}, {"lineNumber": 647, "col_offset": 76, "nodeName": "betas", "type": "Any"}, {"lineNumber": 666, "col_offset": 19, "nodeName": "p", "type": "Any"}, {"lineNumber": 668, "col_offset": 23, "nodeName": "p", "type": "Any"}, {"lineNumber": 670, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 670, "col_offset": 35, "nodeName": "p", "type": "Any"}, {"lineNumber": 673, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 673, "col_offset": 23, "nodeName": "state", "type": "Any"}, {"lineNumber": 674, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 676, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 676, "col_offset": 39, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 676, "col_offset": 56, "nodeName": "data", "type": "Any"}, {"lineNumber": 678, "col_offset": 20, "nodeName": "state", "type": "Any"}, {"lineNumber": 678, "col_offset": 42, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 678, "col_offset": 59, "nodeName": "data", "type": "Any"}, {"lineNumber": 682, "col_offset": 38, "nodeName": "state", "type": "Any"}, {"lineNumber": 682, "col_offset": 56, "nodeName": "state", "type": "Any"}, {"lineNumber": 686, "col_offset": 27, "nodeName": "coalesce", "type": "Any"}, {"lineNumber": 687, "col_offset": 35, "nodeName": "_indices", "type": "Any"}, {"lineNumber": 688, "col_offset": 34, "nodeName": "_values", "type": "Any"}, {"lineNumber": 689, "col_offset": 27, "nodeName": "size", "type": "Any"}, {"lineNumber": 692, "col_offset": 24, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 692, "col_offset": 38, "nodeName": "new", "type": "Any"}, {"lineNumber": 700, "col_offset": 41, "nodeName": "_values", "type": "Any"}, {"lineNumber": 701, "col_offset": 44, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 702, "col_offset": 20, "nodeName": "add_", "type": "Any"}, {"lineNumber": 703, "col_offset": 44, "nodeName": "_values", "type": "Any"}, {"lineNumber": 705, "col_offset": 24, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 707, "col_offset": 20, "nodeName": "add_", "type": "Any"}, {"lineNumber": 710, "col_offset": 28, "nodeName": "add_", "type": "Any"}, {"lineNumber": 710, "col_offset": 55, "nodeName": "old_exp_avg_values", "type": "Any"}, {"lineNumber": 711, "col_offset": 20, "nodeName": "add_", "type": "Any"}, {"lineNumber": 711, "col_offset": 50, "nodeName": "old_exp_avg_sq_values", "type": "Any"}, {"lineNumber": 712, "col_offset": 28, "nodeName": "add_", "type": "Any"}, {"lineNumber": 717, "col_offset": 76, "nodeName": "bias_correction1", "type": "Any"}, {"lineNumber": 719, "col_offset": 20, "nodeName": "add_", "type": "Any"}, {"lineNumber": 723, "col_offset": 20, "nodeName": "add_", "type": "Any"}, {"lineNumber": 723, "col_offset": 45, "nodeName": "grad", "type": "Any"}, {"lineNumber": 724, "col_offset": 20, "nodeName": "addcmul_", "type": "Any"}, {"lineNumber": 724, "col_offset": 52, "nodeName": "grad", "type": "Any"}, {"lineNumber": 724, "col_offset": 58, "nodeName": "grad", "type": "Any"}, {"lineNumber": 725, "col_offset": 28, "nodeName": "add_", "type": "Any"}, {"lineNumber": 729, "col_offset": 76, "nodeName": "bias_correction1", "type": "Any"}, {"lineNumber": 731, "col_offset": 20, "nodeName": "addcdiv_", "type": "Any"}, {"lineNumber": 731, "col_offset": 36, "nodeName": "exp_avg", "type": "Any"}, {"lineNumber": 731, "col_offset": 45, "nodeName": "denom", "type": "Any"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 88, "col_offset": 46, "nodeName": "groups", "type": "Optional[List[Tuple[List[str], Dict[str, Any]]]]"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "k", "type": "int"}, {"lineNumber": 92, "col_offset": 46, "nodeName": "k", "type": "int"}, {"lineNumber": 95, "col_offset": 65, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 95, "col_offset": 69, "nodeName": "groups", "type": "Optional[List[Tuple[List[str], Dict[str, Any]]]]"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "regex_use_counts", "type": "Dict[str, int]"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "re", "type": "module"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "regex_use_counts", "type": "Dict[str, int]"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "parameter_group_names", "type": "List[Set[Any]]"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "parameter_group_names", "type": "List[Set[Any]]"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "param", "type": "Any"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "key", "type": "str"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "val", "type": "Any"}, {"lineNumber": 130, "col_offset": 45, "nodeName": "items", "type": "Callable"}, {"lineNumber": 130, "col_offset": 62, "nodeName": "key", "type": "str"}, {"lineNumber": 133, "col_offset": 20, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 149, "col_offset": 74, "nodeName": "k", "type": "int"}, {"lineNumber": 165, "col_offset": 34, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 165, "col_offset": 69, "nodeName": "parameter_group", "type": "Any"}, {"lineNumber": 41, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 238, "col_offset": 30, "nodeName": "Lazy", "type": "Type[allennlp.common.lazy.Lazy[Any]]"}, {"lineNumber": 254, "col_offset": 47, "nodeName": "optimizer_name", "type": "Any"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "search", "type": "Callable"}, {"lineNumber": 263, "col_offset": 33, "nodeName": "regex", "type": "str"}, {"lineNumber": 263, "col_offset": 40, "nodeName": "parameter_name", "type": "str"}, {"lineNumber": 263, "col_offset": 60, "nodeName": "regex", "type": "str"}, {"lineNumber": 263, "col_offset": 69, "nodeName": "regexes", "type": "List[str]"}, {"lineNumber": 264, "col_offset": 37, "nodeName": "pg_overrides", "type": "Dict[Any, Any]"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "optimizer_name_to_model_parameters", "type": "Dict[str, List[Tuple[str, Any]]]"}, {"lineNumber": 274, "col_offset": 34, "nodeName": "optimizer_name", "type": "str"}, {"lineNumber": 299, "col_offset": 33, "nodeName": "key", "type": "Any"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 332, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 676, "col_offset": 39, "nodeName": "torch", "type": "Any"}, {"lineNumber": 676, "col_offset": 56, "nodeName": "p", "type": "Any"}, {"lineNumber": 678, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 678, "col_offset": 59, "nodeName": "p", "type": "Any"}, {"lineNumber": 686, "col_offset": 27, "nodeName": "grad", "type": "Any"}, {"lineNumber": 687, "col_offset": 35, "nodeName": "grad", "type": "Any"}, {"lineNumber": 688, "col_offset": 34, "nodeName": "grad", "type": "Any"}, {"lineNumber": 689, "col_offset": 27, "nodeName": "grad", "type": "Any"}, {"lineNumber": 692, "col_offset": 38, "nodeName": "grad", "type": "Any"}, {"lineNumber": 695, "col_offset": 31, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 695, "col_offset": 43, "nodeName": "grad_indices", "type": "Any"}, {"lineNumber": 695, "col_offset": 57, "nodeName": "values", "type": "Any"}, {"lineNumber": 695, "col_offset": 65, "nodeName": "size", "type": "Any"}, {"lineNumber": 701, "col_offset": 89, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 702, "col_offset": 20, "nodeName": "exp_avg", "type": "Any"}, {"lineNumber": 702, "col_offset": 33, "nodeName": "make_sparse", "type": "Callable[[Any], Any]"}, {"lineNumber": 702, "col_offset": 45, "nodeName": "exp_avg_update_values", "type": "Any"}, {"lineNumber": 705, "col_offset": 80, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 707, "col_offset": 20, "nodeName": "exp_avg_sq", "type": "Any"}, {"lineNumber": 707, "col_offset": 36, "nodeName": "make_sparse", "type": "Callable[[Any], Any]"}, {"lineNumber": 707, "col_offset": 48, "nodeName": "exp_avg_sq_update_values", "type": "Any"}, {"lineNumber": 710, "col_offset": 28, "nodeName": "exp_avg_update_values", "type": "Any"}, {"lineNumber": 711, "col_offset": 20, "nodeName": "exp_avg_sq_update_values", "type": "Any"}, {"lineNumber": 712, "col_offset": 66, "nodeName": "group", "type": "Any"}, {"lineNumber": 715, "col_offset": 43, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 716, "col_offset": 43, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 719, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 719, "col_offset": 32, "nodeName": "make_sparse", "type": "Callable[[Any], Any]"}, {"lineNumber": 725, "col_offset": 51, "nodeName": "group", "type": "Any"}, {"lineNumber": 727, "col_offset": 43, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 728, "col_offset": 43, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 731, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 35, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 35, "col_offset": 54, "nodeName": "Any", "type": "Any"}, {"lineNumber": 102, "col_offset": 41, "nodeName": "regex", "type": "str"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "group_index", "type": "None"}, {"lineNumber": 104, "col_offset": 55, "nodeName": "group_index", "type": "None"}, {"lineNumber": 109, "col_offset": 41, "nodeName": "regex", "type": "str"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "parameter_groups", "type": "Union[List[Any], List[Dict[str, Any]]]"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "group_index", "type": "Optional[int]"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "parameter_groups", "type": "Union[List[Any], List[Dict[str, Any]]]"}, {"lineNumber": 130, "col_offset": 45, "nodeName": "group", "type": "Dict[str, Any]"}, {"lineNumber": 147, "col_offset": 41, "nodeName": "parameter_groups", "type": "List[Any]"}, {"lineNumber": 41, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 41, "col_offset": 26, "nodeName": "Any", "type": "Any"}, {"lineNumber": 237, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 237, "col_offset": 42, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 238, "col_offset": 35, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "re", "type": "module"}, {"lineNumber": 265, "col_offset": 20, "nodeName": "optimizer_name_to_model_parameters", "type": "Dict[str, List[Tuple[str, Any]]]"}, {"lineNumber": 343, "col_offset": 56, "nodeName": "optimizer_key", "type": "Any"}, {"lineNumber": 694, "col_offset": 35, "nodeName": "resize_as_", "type": "Any"}, {"lineNumber": 694, "col_offset": 60, "nodeName": "grad", "type": "Any"}, {"lineNumber": 700, "col_offset": 41, "nodeName": "sparse_mask", "type": "Any"}, {"lineNumber": 700, "col_offset": 61, "nodeName": "grad", "type": "Any"}, {"lineNumber": 701, "col_offset": 44, "nodeName": "sub", "type": "Any"}, {"lineNumber": 701, "col_offset": 60, "nodeName": "old_exp_avg_values", "type": "Any"}, {"lineNumber": 703, "col_offset": 44, "nodeName": "sparse_mask", "type": "Any"}, {"lineNumber": 703, "col_offset": 67, "nodeName": "grad", "type": "Any"}, {"lineNumber": 705, "col_offset": 24, "nodeName": "sub_", "type": "Any"}, {"lineNumber": 705, "col_offset": 48, "nodeName": "old_exp_avg_sq_values", "type": "Any"}, {"lineNumber": 712, "col_offset": 28, "nodeName": "sqrt_", "type": "Any"}, {"lineNumber": 715, "col_offset": 52, "nodeName": "state", "type": "Any"}, {"lineNumber": 716, "col_offset": 52, "nodeName": "state", "type": "Any"}, {"lineNumber": 717, "col_offset": 32, "nodeName": "group", "type": "Any"}, {"lineNumber": 717, "col_offset": 46, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 717, "col_offset": 56, "nodeName": "bias_correction2", "type": "Any"}, {"lineNumber": 719, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 723, "col_offset": 20, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 723, "col_offset": 33, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 723, "col_offset": 61, "nodeName": "beta1", "type": "Any"}, {"lineNumber": 724, "col_offset": 20, "nodeName": "mul_", "type": "Any"}, {"lineNumber": 724, "col_offset": 36, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 724, "col_offset": 74, "nodeName": "beta2", "type": "Any"}, {"lineNumber": 725, "col_offset": 28, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 727, "col_offset": 52, "nodeName": "state", "type": "Any"}, {"lineNumber": 728, "col_offset": 52, "nodeName": "state", "type": "Any"}, {"lineNumber": 729, "col_offset": 32, "nodeName": "group", "type": "Any"}, {"lineNumber": 729, "col_offset": 46, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 729, "col_offset": 56, "nodeName": "bias_correction2", "type": "Any"}, {"lineNumber": 731, "col_offset": 20, "nodeName": "p", "type": "Any"}, {"lineNumber": 731, "col_offset": 59, "nodeName": "step_size", "type": "Any"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "group_index", "type": "Optional[int]"}, {"lineNumber": 147, "col_offset": 58, "nodeName": "k", "type": "int"}, {"lineNumber": 237, "col_offset": 42, "nodeName": "nn", "type": "Any"}, {"lineNumber": 265, "col_offset": 55, "nodeName": "optimizer_name", "type": "Any"}, {"lineNumber": 693, "col_offset": 27, "nodeName": "dim", "type": "Any"}, {"lineNumber": 693, "col_offset": 54, "nodeName": "dim", "type": "Any"}, {"lineNumber": 700, "col_offset": 41, "nodeName": "exp_avg", "type": "Any"}, {"lineNumber": 701, "col_offset": 44, "nodeName": "grad_values", "type": "Any"}, {"lineNumber": 703, "col_offset": 44, "nodeName": "exp_avg_sq", "type": "Any"}, {"lineNumber": 712, "col_offset": 28, "nodeName": "exp_avg_sq_update_values", "type": "Any"}, {"lineNumber": 717, "col_offset": 46, "nodeName": "math", "type": "module"}, {"lineNumber": 719, "col_offset": 45, "nodeName": "step_size", "type": "Any"}, {"lineNumber": 719, "col_offset": 57, "nodeName": "div_", "type": "Any"}, {"lineNumber": 719, "col_offset": 68, "nodeName": "denom", "type": "Any"}, {"lineNumber": 723, "col_offset": 20, "nodeName": "exp_avg", "type": "Any"}, {"lineNumber": 724, "col_offset": 20, "nodeName": "exp_avg_sq", "type": "Any"}, {"lineNumber": 725, "col_offset": 28, "nodeName": "exp_avg_sq", "type": "Any"}, {"lineNumber": 729, "col_offset": 46, "nodeName": "math", "type": "module"}, {"lineNumber": 237, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 693, "col_offset": 27, "nodeName": "grad_indices", "type": "Any"}, {"lineNumber": 693, "col_offset": 54, "nodeName": "values", "type": "Any"}, {"lineNumber": 694, "col_offset": 35, "nodeName": "constructor", "type": "Any"}, {"lineNumber": 705, "col_offset": 24, "nodeName": "pow", "type": "Any"}, {"lineNumber": 719, "col_offset": 57, "nodeName": "numer", "type": "Any"}, {"lineNumber": 705, "col_offset": 24, "nodeName": "grad_values", "type": "Any"}]