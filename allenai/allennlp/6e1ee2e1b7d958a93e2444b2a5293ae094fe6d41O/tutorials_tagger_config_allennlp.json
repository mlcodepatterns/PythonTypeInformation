[{"lineNumber": 29, "col_offset": 23, "nodeName": "DatasetReader", "type": "Type[allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 53, "col_offset": 17, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "manual_seed", "type": "Any"}, {"lineNumber": 34, "col_offset": 79, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 68, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 87, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 90, "col_offset": 4, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 93, "col_offset": 4, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "tag_logits", "type": "Any"}, {"lineNumber": 96, "col_offset": 4, "nodeName": "tag_ids", "type": "Any"}, {"lineNumber": 26, "col_offset": 0, "nodeName": "torch", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "token_indexers", "type": "Union[Dict[str, allennlp.data.token_indexers.token_indexer.TokenIndexer[Union[int, List[int]]]], Dict[str, Any]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "sentence_field", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "fields", "type": "Dict[str, Union[allennlp.data.fields.text_field.TextField, allennlp.data.fields.sequence_label_field.SequenceLabelField]]"}, {"lineNumber": 38, "col_offset": 11, "nodeName": "tags", "type": "List[str]"}, {"lineNumber": 44, "col_offset": 39, "nodeName": "Iterator", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "word_embeddings", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "word_embeddings", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 60, "col_offset": 23, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "encoder_out", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "tag_logits", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "output", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "output", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 81, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "train_model", "type": "Callable[..., allennlp.models.model.Model]"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "SentenceTaggerPredictor", "type": "Any"}, {"lineNumber": 93, "col_offset": 40, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 95, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 95, "col_offset": 10, "nodeName": "tag_logits", "type": "Any"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "tag_logits", "type": "Any"}, {"lineNumber": 97, "col_offset": 4, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 99, "col_offset": 18, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 30, "nodeName": "token_indexers", "type": "Dict[str, allennlp.data.token_indexers.token_indexer.TokenIndexer[Union[int, List[int]]]]"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "tokens", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 35, "col_offset": 43, "nodeName": "token_indexers", "type": "Any"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "sentence_field", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "label_field", "type": "allennlp.data.fields.sequence_label_field.SequenceLabelField"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "label_field", "type": "allennlp.data.fields.sequence_label_field.SequenceLabelField"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "fields", "type": "Dict[str, Union[allennlp.data.fields.text_field.TextField, allennlp.data.fields.sequence_label_field.SequenceLabelField]]"}, {"lineNumber": 44, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "line", "type": "str"}, {"lineNumber": 46, "col_offset": 24, "nodeName": "f", "type": "TextIO"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "TextFieldEmbedder", "type": "Type[allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 56, "col_offset": 26, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 57, "col_offset": 24, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 24, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "get_text_field_mask", "type": "Callable[..., Any]"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "sentence", "type": "Dict[str, Any]"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "word_embeddings", "type": "Any"}, {"lineNumber": 70, "col_offset": 42, "nodeName": "sentence", "type": "Dict[str, Any]"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 71, "col_offset": 47, "nodeName": "mask", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "hidden2tag", "type": "Any"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "encoder_out", "type": "Any"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "tag_logits", "type": "Any"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "labels", "type": "Any"}, {"lineNumber": 81, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "predict", "type": "Any"}, {"lineNumber": 96, "col_offset": 14, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 4, "nodeName": "shutil", "type": "module"}, {"lineNumber": 30, "col_offset": 39, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 34, "col_offset": 39, "nodeName": "List", "type": "Any"}, {"lineNumber": 34, "col_offset": 58, "nodeName": "List", "type": "Any"}, {"lineNumber": 35, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "SequenceLabelField", "type": "Type[allennlp.data.fields.sequence_label_field.SequenceLabelField]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "fields", "type": "Dict[str, Union[allennlp.data.fields.text_field.TextField, allennlp.data.fields.sequence_label_field.SequenceLabelField]]"}, {"lineNumber": 45, "col_offset": 13, "nodeName": "open", "type": "Callable"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "file_path", "type": "str"}, {"lineNumber": 47, "col_offset": 16, "nodeName": "pairs", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "nn", "type": "Any"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "tag_logits", "type": "Any"}, {"lineNumber": 76, "col_offset": 38, "nodeName": "labels", "type": "Any"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "mask", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "output", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "sequence_cross_entropy_with_logits", "type": "Callable[..., Any]"}, {"lineNumber": 77, "col_offset": 64, "nodeName": "tag_logits", "type": "Any"}, {"lineNumber": 77, "col_offset": 76, "nodeName": "labels", "type": "Any"}, {"lineNumber": 77, "col_offset": 84, "nodeName": "mask", "type": "Any"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 82, "col_offset": 53, "nodeName": "reset", "type": "bool"}, {"lineNumber": 81, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 81, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 93, "col_offset": 62, "nodeName": "PosDatasetReader", "type": "Any"}, {"lineNumber": 94, "col_offset": 17, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "get_token_from_index", "type": "Callable[..., str]"}, {"lineNumber": 97, "col_offset": 44, "nodeName": "i", "type": "Any"}, {"lineNumber": 97, "col_offset": 61, "nodeName": "i", "type": "Any"}, {"lineNumber": 97, "col_offset": 66, "nodeName": "tag_ids", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 32, "col_offset": 59, "nodeName": "SingleIdTokenIndexer", "type": "Any"}, {"lineNumber": 34, "col_offset": 44, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 34, "col_offset": 63, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 39, "col_offset": 52, "nodeName": "tags", "type": "List[str]"}, {"lineNumber": 39, "col_offset": 73, "nodeName": "sentence_field", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 48, "col_offset": 26, "nodeName": "tags", "type": "Any"}, {"lineNumber": 48, "col_offset": 33, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 62, "col_offset": 55, "nodeName": "get_vocab_size", "type": "Callable[..., int]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "accuracy", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 30, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 30, "col_offset": 49, "nodeName": "TokenIndexer", "type": "Type[allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "text_to_instance", "type": "Any"}, {"lineNumber": 49, "col_offset": 80, "nodeName": "tags", "type": "Any"}, {"lineNumber": 61, "col_offset": 54, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 62, "col_offset": 55, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 82, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "line", "type": "str"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 48, "col_offset": 61, "nodeName": "pair", "type": "str"}, {"lineNumber": 48, "col_offset": 69, "nodeName": "pairs", "type": "List[str]"}, {"lineNumber": 49, "col_offset": 45, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 49, "col_offset": 51, "nodeName": "word", "type": "Any"}, {"lineNumber": 49, "col_offset": 61, "nodeName": "word", "type": "Any"}, {"lineNumber": 49, "col_offset": 69, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 48, "col_offset": 39, "nodeName": "pair", "type": "str"}]