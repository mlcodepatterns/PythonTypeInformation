[{"lineNumber": 19, "col_offset": 19, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 42, "col_offset": 31, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "reshaped_log_probs", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "class_probabilities", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "all_predictions", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "all_tags", "type": "List[List[Any]]"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "predictions_list", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "all_tags", "type": "Union[List[Any], List[List[Any]]]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 110, "col_offset": 62, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 134, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "embedder_params", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 35, "col_offset": 30, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "TextFieldEmbedder", "type": "Type[allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 38, "col_offset": 43, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "get_vocab_size", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 36, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "text_field_embedder", "type": "Any"}, {"lineNumber": 90, "col_offset": 55, "nodeName": "tokens", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "_", "type": "Any"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "size", "type": "Any"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "get_text_field_mask", "type": "Callable[[Dict[str, Any]], Any]"}, {"lineNumber": 92, "col_offset": 35, "nodeName": "tokens", "type": "Dict[str, Any]"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "stacked_encoder", "type": "Any"}, {"lineNumber": 93, "col_offset": 44, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 93, "col_offset": 65, "nodeName": "mask", "type": "Any"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "tag_projection_layer", "type": "Any"}, {"lineNumber": 95, "col_offset": 43, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "view", "type": "Any"}, {"lineNumber": 96, "col_offset": 45, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "view", "type": "Any"}, {"lineNumber": 99, "col_offset": 33, "nodeName": "logits", "type": "Any"}, {"lineNumber": 99, "col_offset": 64, "nodeName": "class_probabilities", "type": "Any"}, {"lineNumber": 101, "col_offset": 11, "nodeName": "tags", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "metric", "type": "Any"}, {"lineNumber": 105, "col_offset": 34, "nodeName": "loss", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "all_predictions", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "ndim", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "predictions_list", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "predictions_list", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "argmax_indices", "type": "Any"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "all_tags", "type": "List[Any]"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "metric_name", "type": "Any"}, {"lineNumber": 138, "col_offset": 32, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 138, "col_offset": 52, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "pop", "type": "Any"}, {"lineNumber": 140, "col_offset": 30, "nodeName": "from_params", "type": "Callable[[Any, allennlp.data.vocabulary.Vocabulary, allennlp.common.params.Params], allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 140, "col_offset": 60, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 140, "col_offset": 67, "nodeName": "embedder_params", "type": "Any"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 143, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 43, "col_offset": 52, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 44, "col_offset": 59, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 46, "col_offset": 51, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 47, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 53, "col_offset": 29, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "logits", "type": "Any"}, {"lineNumber": 96, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 66, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 97, "col_offset": 78, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 97, "col_offset": 95, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 102, "col_offset": 19, "nodeName": "sequence_cross_entropy_with_logits", "type": "Callable[..., Any]"}, {"lineNumber": 102, "col_offset": 54, "nodeName": "logits", "type": "Any"}, {"lineNumber": 102, "col_offset": 62, "nodeName": "tags", "type": "Any"}, {"lineNumber": 102, "col_offset": 68, "nodeName": "mask", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "values", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 59, "col_offset": 60, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 110, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "all_predictions", "type": "Any"}, {"lineNumber": 116, "col_offset": 43, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "all_predictions", "type": "Any"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "all_predictions", "type": "Any"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 124, "col_offset": 42, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "tags", "type": "List[Any]"}, {"lineNumber": 128, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "all_tags", "type": "List[List[Any]]"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "all_tags", "type": "List[List[Any]]"}, {"lineNumber": 110, "col_offset": 67, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 110, "col_offset": 72, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 135, "col_offset": 47, "nodeName": "reset", "type": "bool"}, {"lineNumber": 134, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 134, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 140, "col_offset": 30, "nodeName": "TextFieldEmbedder", "type": "Type[allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 141, "col_offset": 53, "nodeName": "pop", "type": "Any"}, {"lineNumber": 143, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 144, "col_offset": 39, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 145, "col_offset": 35, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "SimpleTagger", "type": "Any"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 59, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 44, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 46, "col_offset": 51, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 97, "col_offset": 40, "nodeName": "reshaped_log_probs", "type": "Any"}, {"lineNumber": 97, "col_offset": 95, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "metric", "type": "Any"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "logits", "type": "Any"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "tags", "type": "Any"}, {"lineNumber": 59, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 116, "col_offset": 43, "nodeName": "numpy", "type": "module"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "all_predictions", "type": "Any"}, {"lineNumber": 119, "col_offset": 55, "nodeName": "i", "type": "int"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "numpy", "type": "module"}, {"lineNumber": 126, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "argmax_indices", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "all_tags", "type": "List[List[Any]]"}, {"lineNumber": 110, "col_offset": 72, "nodeName": "torch", "type": "Any"}, {"lineNumber": 135, "col_offset": 29, "nodeName": "metric", "type": "Any"}, {"lineNumber": 135, "col_offset": 58, "nodeName": "metric_name", "type": "Any"}, {"lineNumber": 135, "col_offset": 71, "nodeName": "metric", "type": "Any"}, {"lineNumber": 135, "col_offset": 81, "nodeName": "items", "type": "Any"}, {"lineNumber": 141, "col_offset": 53, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 43, "col_offset": 59, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 49, "col_offset": 60, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 50, "col_offset": 60, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "F", "type": "Any"}, {"lineNumber": 103, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "float", "type": "Any"}, {"lineNumber": 110, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 110, "col_offset": 44, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 119, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 119, "col_offset": 60, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 135, "col_offset": 81, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 49, "col_offset": 60, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 50, "col_offset": 60, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "mask", "type": "Any"}, {"lineNumber": 110, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "all_predictions", "type": "Any"}, {"lineNumber": 119, "col_offset": 66, "nodeName": "shape", "type": "Any"}, {"lineNumber": 135, "col_offset": 81, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 66, "nodeName": "all_predictions", "type": "Any"}]