[{"lineNumber": 15, "col_offset": 33, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "test_get_output_dim_uses_encoder_output_dim", "type": "Callable[[Any], Any]"}, {"lineNumber": 47, "col_offset": 4, "nodeName": "test_forward_applies_embedding_then_encoder", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "inner_encoder", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "constant_init", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "numpy_tensor", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "reshaped_input", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "reshaped_manual_output", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "manual_output", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 18, "col_offset": 21, "nodeName": "Vocabulary", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Any"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "Params", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "InitializerApplicator", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "inner_encoder", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "randint", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "numpy_tensor", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 50, "col_offset": 38, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "view", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "reshaped_input", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "view", "type": "Any"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "inner_encoder", "type": "Any"}, {"lineNumber": 54, "col_offset": 52, "nodeName": "embedded", "type": "Any"}, {"lineNumber": 54, "col_offset": 62, "nodeName": "mask", "type": "Any"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "view", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 35, "col_offset": 23, "nodeName": "TokenCharactersEncoder", "type": "Any"}, {"lineNumber": 35, "col_offset": 64, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 36, "col_offset": 53, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 37, "col_offset": 29, "nodeName": "Seq2VecEncoder", "type": "Any"}, {"lineNumber": 37, "col_offset": 56, "nodeName": "params", "type": "Any"}, {"lineNumber": 38, "col_offset": 24, "nodeName": "Initializer", "type": "Any"}, {"lineNumber": 38, "col_offset": 48, "nodeName": "Params", "type": "Any"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 41, "col_offset": 20, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "random", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "reshaped_manual_output", "type": "Any"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 56, "col_offset": 57, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 35, "col_offset": 64, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 35, "col_offset": 83, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 35, "col_offset": 92, "nodeName": "params", "type": "Any"}, {"lineNumber": 36, "col_offset": 53, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 36, "col_offset": 72, "nodeName": "params", "type": "Any"}, {"lineNumber": 39, "col_offset": 52, "nodeName": "constant_init", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 48, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "long", "type": "Any"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 56, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "self", "type": "TestTokenCharactersEncoder"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 56, "col_offset": 57, "nodeName": "manual_output", "type": "Any"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "inputs", "type": "Any"}]