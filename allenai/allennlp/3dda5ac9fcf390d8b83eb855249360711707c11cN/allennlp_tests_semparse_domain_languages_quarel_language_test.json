[{"lineNumber": 7, "col_offset": 25, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 8, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "test_infer_quarel", "type": "Callable[[Any], Any]"}, {"lineNumber": 75, "col_offset": 4, "nodeName": "test_infer_quaval", "type": "Callable[[Any], Any]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "test_action_sequence_to_logical_form", "type": "Callable[[Any], Any]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "test_and_incompatible_setup", "type": "Callable[[Any], Any]"}, {"lineNumber": 152, "col_offset": 4, "nodeName": "test_get_nonterminal_productions", "type": "Callable[[Any], Any]"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "language", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "action_sequence", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "recovered_logical_form", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "productions", "type": "Any"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "self", "type": "QuaRelLanguageTest"}, {"lineNumber": 10, "col_offset": 24, "nodeName": "QuaRelLanguage", "type": "Any"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "logical_form_to_action_sequence", "type": "Any"}, {"lineNumber": 139, "col_offset": 72, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "action_sequence_to_logical_form", "type": "Any"}, {"lineNumber": 140, "col_offset": 79, "nodeName": "action_sequence", "type": "Any"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "recovered_logical_form", "type": "Any"}, {"lineNumber": 141, "col_offset": 41, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "get_nonterminal_productions", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "check_productions_match", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "check_productions_match", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "check_productions_match", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "check_productions_match", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "check_productions_match", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "check_productions_match", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "check_productions_match", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "check_productions_match", "type": "Any"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "execute", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "execute", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "execute", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "execute", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "logical_form_to_action_sequence", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "execute", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "execute", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "logical_form_to_action_sequence", "type": "Any"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "language", "type": "Any"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "language", "type": "Any"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "execute", "type": "Any"}, {"lineNumber": 150, "col_offset": 37, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "language", "type": "Any"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "productions", "type": "Any"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "productions", "type": "Any"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "productions", "type": "Any"}, {"lineNumber": 173, "col_offset": 32, "nodeName": "productions", "type": "Any"}, {"lineNumber": 174, "col_offset": 32, "nodeName": "productions", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "productions", "type": "Any"}, {"lineNumber": 179, "col_offset": 32, "nodeName": "productions", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "productions", "type": "Any"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "language", "type": "Any"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "language", "type": "Any"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "language", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "language", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "language", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "language", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "language", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "language", "type": "Any"}, {"lineNumber": 139, "col_offset": 26, "nodeName": "self", "type": "QuaRelLanguageTest"}, {"lineNumber": 140, "col_offset": 33, "nodeName": "self", "type": "QuaRelLanguageTest"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "language", "type": "Any"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "self", "type": "QuaRelLanguageTest"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "keys", "type": "Any"}, {"lineNumber": 14, "col_offset": 12, "nodeName": "self", "type": "QuaRelLanguageTest"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "self", "type": "QuaRelLanguageTest"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "self", "type": "QuaRelLanguageTest"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "QuaRelLanguageTest"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "self", "type": "QuaRelLanguageTest"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "QuaRelLanguageTest"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "self", "type": "QuaRelLanguageTest"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "self", "type": "QuaRelLanguageTest"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "self", "type": "QuaRelLanguageTest"}, {"lineNumber": 154, "col_offset": 19, "nodeName": "productions", "type": "Any"}]