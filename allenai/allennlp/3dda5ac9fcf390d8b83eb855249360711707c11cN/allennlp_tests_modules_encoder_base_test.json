[{"lineNumber": 11, "col_offset": 22, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "test_non_stateful_states_are_sorted_correctly", "type": "Callable[[Any], Any]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "test_get_initial_states", "type": "Callable[[Any], Any]"}, {"lineNumber": 139, "col_offset": 4, "nodeName": "test_update_states", "type": "Callable[[Any], Any]"}, {"lineNumber": 236, "col_offset": 4, "nodeName": "test_reset_states", "type": "Callable[[Any], Any]"}, {"lineNumber": 277, "col_offset": 4, "nodeName": "test_non_contiguous_initial_states_handled", "type": "Callable[[Any], Any]"}, {"lineNumber": 313, "col_offset": 4, "nodeName": "test_non_contiguous_initial_states_handled_on_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "mask", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "num_valid", "type": "int"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "sorting_indices", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "sorting_indices", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "original_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "original_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "new_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "index", "type": "int"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "index", "type": "int"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "small_new_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "small_restoration_indices", "type": "Any"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "index", "type": "int"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "index", "type": "int"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 247, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "bad_mask", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "final_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 303, "col_offset": 23, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "final_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 347, "col_offset": 23, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 14, "col_offset": 20, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 17, "col_offset": 19, "nodeName": "RNN", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 20, "col_offset": 28, "nodeName": "_EncoderBase", "type": "Any"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "ones", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "get_lengths_from_binary_sequence_mask", "type": "Any"}, {"lineNumber": 35, "col_offset": 65, "nodeName": "mask", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "_", "type": "Any"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "sorting_indices", "type": "Any"}, {"lineNumber": 36, "col_offset": 53, "nodeName": "sort_batch_by_length", "type": "Any"}, {"lineNumber": 36, "col_offset": 74, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 36, "col_offset": 82, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "_EncoderBase", "type": "Any"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "sort_and_run_forward", "type": "Any"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "mask", "type": "Any"}, {"lineNumber": 47, "col_offset": 50, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "original", "type": "Any"}, {"lineNumber": 58, "col_offset": 31, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 58, "col_offset": 35, "nodeName": "states", "type": "Any"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "state_with_zeros", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "unsorted_state", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "index", "type": "int"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "_get_initial_states", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "num_valid", "type": "int"}, {"lineNumber": 81, "col_offset": 45, "nodeName": "sorting_indices", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "_get_initial_states", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "num_valid", "type": "int"}, {"lineNumber": 116, "col_offset": 45, "nodeName": "sorting_indices", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "_states", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "_update_states", "type": "Any"}, {"lineNumber": 148, "col_offset": 41, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 148, "col_offset": 57, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "_update_states", "type": "Any"}, {"lineNumber": 168, "col_offset": 41, "nodeName": "new_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 168, "col_offset": 53, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 194, "col_offset": 36, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "_update_states", "type": "Any"}, {"lineNumber": 202, "col_offset": 41, "nodeName": "small_new_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 202, "col_offset": 59, "nodeName": "small_restoration_indices", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "_states", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "_update_states", "type": "Any"}, {"lineNumber": 244, "col_offset": 41, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 244, "col_offset": 57, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "reset_states", "type": "Any"}, {"lineNumber": 248, "col_offset": 39, "nodeName": "mask", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "reset_states", "type": "Any"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "_states", "type": "Any"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "_EncoderBase", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "sort_and_run_forward", "type": "Any"}, {"lineNumber": 295, "col_offset": 42, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 295, "col_offset": 53, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 295, "col_offset": 66, "nodeName": "mask", "type": "Any"}, {"lineNumber": 295, "col_offset": 77, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "sort_and_run_forward", "type": "Any"}, {"lineNumber": 296, "col_offset": 42, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 296, "col_offset": 52, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 296, "col_offset": 65, "nodeName": "mask", "type": "Any"}, {"lineNumber": 305, "col_offset": 23, "nodeName": "_EncoderBase", "type": "Any"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "_update_states", "type": "Any"}, {"lineNumber": 306, "col_offset": 36, "nodeName": "final_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 306, "col_offset": 50, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "sort_and_run_forward", "type": "Any"}, {"lineNumber": 307, "col_offset": 42, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 307, "col_offset": 53, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 307, "col_offset": 66, "nodeName": "mask", "type": "Any"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "reset_states", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "_update_states", "type": "Any"}, {"lineNumber": 310, "col_offset": 55, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "sort_and_run_forward", "type": "Any"}, {"lineNumber": 311, "col_offset": 42, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 311, "col_offset": 52, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 311, "col_offset": 65, "nodeName": "mask", "type": "Any"}, {"lineNumber": 324, "col_offset": 23, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "sort_and_run_forward", "type": "Any"}, {"lineNumber": 336, "col_offset": 68, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "sort_and_run_forward", "type": "Any"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "_update_states", "type": "Any"}, {"lineNumber": 350, "col_offset": 36, "nodeName": "final_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "sort_and_run_forward", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "reset_states", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "_update_states", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "sort_and_run_forward", "type": "Any"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "randn", "type": "Any"}, {"lineNumber": 42, "col_offset": 48, "nodeName": "randn", "type": "Any"}, {"lineNumber": 46, "col_offset": 41, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "x", "type": "Tuple[Any, ...]"}, {"lineNumber": 47, "col_offset": 26, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 47, "col_offset": 39, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 53, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "cat", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 61, "col_offset": 62, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "_get_initial_states", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "num_valid", "type": "int"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "sorting_indices", "type": "Any"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "randn", "type": "Any"}, {"lineNumber": 77, "col_offset": 50, "nodeName": "randn", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 81, "col_offset": 45, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "cat", "type": "Any"}, {"lineNumber": 85, "col_offset": 62, "nodeName": "state", "type": "Any"}, {"lineNumber": 85, "col_offset": 71, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 89, "col_offset": 55, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 92, "col_offset": 55, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "correct_expanded_states", "type": "List[Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 108, "col_offset": 45, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "randn", "type": "Any"}, {"lineNumber": 112, "col_offset": 52, "nodeName": "randn", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 116, "col_offset": 45, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 121, "col_offset": 55, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 124, "col_offset": 55, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 130, "col_offset": 80, "nodeName": "x", "type": "Any"}, {"lineNumber": 130, "col_offset": 85, "nodeName": "original_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 136, "col_offset": 45, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "randn", "type": "Any"}, {"lineNumber": 141, "col_offset": 49, "nodeName": "randn", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 144, "col_offset": 46, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 145, "col_offset": 46, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 148, "col_offset": 57, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 151, "col_offset": 55, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 154, "col_offset": 55, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "randn", "type": "Any"}, {"lineNumber": 157, "col_offset": 45, "nodeName": "randn", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "new_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "new_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 165, "col_offset": 42, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 168, "col_offset": 53, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "randn", "type": "Any"}, {"lineNumber": 192, "col_offset": 51, "nodeName": "randn", "type": "Any"}, {"lineNumber": 194, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "small_new_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "small_new_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 199, "col_offset": 48, "nodeName": "small_restoration_indices", "type": "Any"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 200, "col_offset": 48, "nodeName": "small_restoration_indices", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "randn", "type": "Any"}, {"lineNumber": 239, "col_offset": 49, "nodeName": "randn", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 241, "col_offset": 46, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 242, "col_offset": 46, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 244, "col_offset": 57, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 270, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 270, "col_offset": 31, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "reset_states", "type": "Any"}, {"lineNumber": 271, "col_offset": 43, "nodeName": "bad_mask", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "permute", "type": "Any"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "permute", "type": "Any"}, {"lineNumber": 290, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 290, "col_offset": 43, "nodeName": "Size", "type": "Any"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 291, "col_offset": 43, "nodeName": "Size", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 295, "col_offset": 42, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 295, "col_offset": 53, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 295, "col_offset": 66, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 296, "col_offset": 42, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 296, "col_offset": 52, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 296, "col_offset": 65, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 296, "col_offset": 76, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 306, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 306, "col_offset": 50, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 307, "col_offset": 42, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 307, "col_offset": 53, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 307, "col_offset": 66, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 310, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 310, "col_offset": 55, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 311, "col_offset": 42, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 311, "col_offset": 52, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 311, "col_offset": 65, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "permute", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "permute", "type": "Any"}, {"lineNumber": 330, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 330, "col_offset": 43, "nodeName": "Size", "type": "Any"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 331, "col_offset": 43, "nodeName": "Size", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 336, "col_offset": 30, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 336, "col_offset": 50, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 339, "col_offset": 29, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 339, "col_offset": 49, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 339, "col_offset": 67, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 350, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 350, "col_offset": 50, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 351, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 351, "col_offset": 42, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 351, "col_offset": 60, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 351, "col_offset": 80, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 353, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 354, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 354, "col_offset": 55, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 355, "col_offset": 8, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 355, "col_offset": 42, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 355, "col_offset": 59, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 355, "col_offset": 79, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 42, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 60, "col_offset": 42, "nodeName": "state", "type": "Any"}, {"lineNumber": 60, "col_offset": 49, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "state_with_zeros", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 71, "col_offset": 33, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 71, "col_offset": 49, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 77, "col_offset": 50, "nodeName": "torch", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 85, "col_offset": 23, "nodeName": "state", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 89, "col_offset": 55, "nodeName": "data", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 92, "col_offset": 55, "nodeName": "data", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "data", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 108, "col_offset": 45, "nodeName": "data", "type": "Any"}, {"lineNumber": 112, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 112, "col_offset": 52, "nodeName": "torch", "type": "Any"}, {"lineNumber": 115, "col_offset": 26, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 121, "col_offset": 55, "nodeName": "data", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 124, "col_offset": 55, "nodeName": "data", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "sorting_indices", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "data", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 136, "col_offset": 45, "nodeName": "data", "type": "Any"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 141, "col_offset": 49, "nodeName": "torch", "type": "Any"}, {"lineNumber": 144, "col_offset": 46, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 145, "col_offset": 46, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 151, "col_offset": 55, "nodeName": "data", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 154, "col_offset": 55, "nodeName": "data", "type": "Any"}, {"lineNumber": 157, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 157, "col_offset": 45, "nodeName": "torch", "type": "Any"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 165, "col_offset": 42, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 192, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 192, "col_offset": 51, "nodeName": "torch", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 239, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 239, "col_offset": 49, "nodeName": "torch", "type": "Any"}, {"lineNumber": 241, "col_offset": 46, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 242, "col_offset": 46, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 270, "col_offset": 13, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 275, "col_offset": 15, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 289, "col_offset": 19, "nodeName": "is_contiguous", "type": "Any"}, {"lineNumber": 289, "col_offset": 61, "nodeName": "is_contiguous", "type": "Any"}, {"lineNumber": 290, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 291, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 310, "col_offset": 37, "nodeName": "final_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 324, "col_offset": 23, "nodeName": "_EncoderBase", "type": "Any"}, {"lineNumber": 329, "col_offset": 19, "nodeName": "is_contiguous", "type": "Any"}, {"lineNumber": 329, "col_offset": 61, "nodeName": "is_contiguous", "type": "Any"}, {"lineNumber": 330, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 331, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 336, "col_offset": 30, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 336, "col_offset": 50, "nodeName": "mask", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 339, "col_offset": 29, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 339, "col_offset": 49, "nodeName": "mask", "type": "Any"}, {"lineNumber": 349, "col_offset": 23, "nodeName": "_EncoderBase", "type": "Any"}, {"lineNumber": 350, "col_offset": 50, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 351, "col_offset": 42, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 351, "col_offset": 60, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 351, "col_offset": 80, "nodeName": "mask", "type": "Any"}, {"lineNumber": 354, "col_offset": 37, "nodeName": "final_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 354, "col_offset": 55, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 355, "col_offset": 42, "nodeName": "rnn", "type": "Any"}, {"lineNumber": 355, "col_offset": 59, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 355, "col_offset": 79, "nodeName": "mask", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "size", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "testing", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 64, "col_offset": 62, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "x", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 130, "col_offset": 57, "nodeName": "num_valid", "type": "int"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "new_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "new_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 172, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "small_new_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "small_new_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 271, "col_offset": 12, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 290, "col_offset": 15, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 330, "col_offset": 15, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 331, "col_offset": 15, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 336, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 336, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 336, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 339, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 339, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 339, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 350, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 351, "col_offset": 80, "nodeName": "self", "type": "Any"}, {"lineNumber": 354, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 355, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 355, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 355, "col_offset": 79, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "state", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "numpy", "type": "module"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 64, "col_offset": 62, "nodeName": "data", "type": "Any"}, {"lineNumber": 85, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "_states", "type": "Any"}, {"lineNumber": 89, "col_offset": 55, "nodeName": "correct_expanded_states", "type": "List[Any]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "_states", "type": "Any"}, {"lineNumber": 92, "col_offset": 55, "nodeName": "correct_expanded_states", "type": "List[Any]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "returned_states", "type": "Any"}, {"lineNumber": 105, "col_offset": 45, "nodeName": "correct_returned_states", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "returned_states", "type": "Any"}, {"lineNumber": 108, "col_offset": 45, "nodeName": "correct_returned_states", "type": "List[Any]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "_states", "type": "Any"}, {"lineNumber": 121, "col_offset": 55, "nodeName": "original_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "_states", "type": "Any"}, {"lineNumber": 124, "col_offset": 55, "nodeName": "original_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 130, "col_offset": 57, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "returned_states", "type": "Any"}, {"lineNumber": 133, "col_offset": 45, "nodeName": "correct_returned_state", "type": "List[Any]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "returned_states", "type": "Any"}, {"lineNumber": 136, "col_offset": 45, "nodeName": "correct_returned_state", "type": "List[Any]"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "_states", "type": "Any"}, {"lineNumber": 151, "col_offset": 55, "nodeName": "index_selected_initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "_states", "type": "Any"}, {"lineNumber": 154, "col_offset": 55, "nodeName": "index_selected_initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 289, "col_offset": 19, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 289, "col_offset": 61, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 329, "col_offset": 19, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 329, "col_offset": 61, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "_states", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "index_selected_initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "_states", "type": "Any"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "index_selected_initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "_states", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "_states", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "zeros_like", "type": "Any"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "_states", "type": "Any"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "index_selected_initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "_states", "type": "Any"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "index_selected_initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "randn", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "unsorted_state", "type": "Any"}, {"lineNumber": 64, "col_offset": 62, "nodeName": "original", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "_states", "type": "Any"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "index_selected_initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "_states", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "index_selected_initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "_states", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "index_selected_new_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "_states", "type": "Any"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "index_selected_new_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "_states", "type": "Any"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "index_selected_new_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "_states", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "index_selected_new_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "_states", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "index_selected_small_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "_states", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "index_selected_small_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 252, "col_offset": 29, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 256, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "initial_states", "type": "Tuple[Any, Any]"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 326, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 173, "col_offset": 48, "nodeName": "index", "type": "int"}, {"lineNumber": 174, "col_offset": 52, "nodeName": "index", "type": "int"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 177, "col_offset": 48, "nodeName": "index", "type": "int"}, {"lineNumber": 178, "col_offset": 52, "nodeName": "index", "type": "int"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 183, "col_offset": 48, "nodeName": "index", "type": "int"}, {"lineNumber": 184, "col_offset": 48, "nodeName": "index", "type": "int"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 187, "col_offset": 48, "nodeName": "index", "type": "int"}, {"lineNumber": 188, "col_offset": 48, "nodeName": "index", "type": "int"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 207, "col_offset": 48, "nodeName": "index", "type": "int"}, {"lineNumber": 208, "col_offset": 48, "nodeName": "index", "type": "int"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 211, "col_offset": 48, "nodeName": "index", "type": "int"}, {"lineNumber": 212, "col_offset": 48, "nodeName": "index", "type": "int"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 217, "col_offset": 48, "nodeName": "index", "type": "int"}, {"lineNumber": 218, "col_offset": 50, "nodeName": "index", "type": "int"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "encoder_base", "type": "Any"}, {"lineNumber": 221, "col_offset": 48, "nodeName": "index", "type": "int"}, {"lineNumber": 222, "col_offset": 50, "nodeName": "index", "type": "int"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 255, "col_offset": 12, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 260, "col_offset": 12, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 264, "col_offset": 12, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 64, "col_offset": 38, "nodeName": "index", "type": "int"}, {"lineNumber": 64, "col_offset": 74, "nodeName": "index", "type": "int"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 207, "col_offset": 16, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 211, "col_offset": 16, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 217, "col_offset": 16, "nodeName": "self", "type": "TestEncoderBase"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "self", "type": "TestEncoderBase"}]