[{"lineNumber": 86, "col_offset": 0, "nodeName": "words_from_entity_string", "type": "Callable[[str], str]"}, {"lineNumber": 92, "col_offset": 0, "nodeName": "split_question", "type": "Callable[[str], List[str]]"}, {"lineNumber": 96, "col_offset": 0, "nodeName": "nl_triple", "type": "Callable[[List[str], Dict[str, Any]], str]"}, {"lineNumber": 100, "col_offset": 0, "nodeName": "nl_arg", "type": "Callable[[Any, Dict[str, Any]], Any]"}, {"lineNumber": 107, "col_offset": 0, "nodeName": "nl_attr", "type": "Callable[[str], str]"}, {"lineNumber": 111, "col_offset": 0, "nodeName": "nl_dir", "type": "Callable[[int], str]"}, {"lineNumber": 118, "col_offset": 0, "nodeName": "nl_world_string", "type": "Callable[[List[str]], str]"}, {"lineNumber": 122, "col_offset": 0, "nodeName": "strip_entity_type", "type": "Callable[[str], str]"}, {"lineNumber": 205, "col_offset": 0, "nodeName": "to_camel", "type": "Callable[[str], str]"}, {"lineNumber": 209, "col_offset": 0, "nodeName": "from_qr_spec_string", "type": "Callable[[str], List[Dict[str, int]]]"}, {"lineNumber": 228, "col_offset": 0, "nodeName": "to_qr_spec_string", "type": "Callable[[List[Dict[str, int]]], str]"}, {"lineNumber": 245, "col_offset": 0, "nodeName": "from_entity_cues_string", "type": "Callable[[str], Dict[str, List[str]]]"}, {"lineNumber": 258, "col_offset": 0, "nodeName": "from_bio", "type": "Callable[[List[str], str], List[Tuple[int, int]]]"}, {"lineNumber": 278, "col_offset": 0, "nodeName": "delete_duplicates", "type": "Callable[[List[Any]], List[Any]]"}, {"lineNumber": 288, "col_offset": 0, "nodeName": "group_worlds", "type": "Callable[[List[str], List[str]], Dict[str, List[str]]]"}, {"lineNumber": 365, "col_offset": 0, "nodeName": "get_words", "type": "Callable[[str], List[str]]"}, {"lineNumber": 369, "col_offset": 0, "nodeName": "get_stem_overlaps", "type": "Callable[[str, List[str], Any], List[int]]"}, {"lineNumber": 21, "col_offset": 0, "nodeName": "LEXICAL_CUES", "type": "Dict[str, Union[Dict[str, List[str]], Dict[str, Union[List[str], List[nothing]]]]]"}, {"lineNumber": 83, "col_offset": 0, "nodeName": "RE_DECAMEL", "type": "Pattern[str]"}, {"lineNumber": 86, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 96, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 100, "col_offset": 44, "nodeName": "Any", "type": "Any"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 111, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 118, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 128, "col_offset": 5, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 200, "col_offset": 0, "nodeName": "RE_GROUP", "type": "Pattern[str]"}, {"lineNumber": 201, "col_offset": 0, "nodeName": "RE_SEP", "type": "Pattern[str]"}, {"lineNumber": 202, "col_offset": 0, "nodeName": "RE_INITLETTER", "type": "Pattern[str]"}, {"lineNumber": 205, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 228, "col_offset": 62, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 278, "col_offset": 37, "nodeName": "List", "type": "Any"}, {"lineNumber": 21, "col_offset": 14, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "res", "type": "str"}, {"lineNumber": 88, "col_offset": 4, "nodeName": "res", "type": "str"}, {"lineNumber": 89, "col_offset": 11, "nodeName": "res", "type": "str"}, {"lineNumber": 92, "col_offset": 37, "nodeName": "List", "type": "Any"}, {"lineNumber": 129, "col_offset": 4, "nodeName": "res", "type": "Union[str, List[str]]"}, {"lineNumber": 129, "col_offset": 10, "nodeName": "string_or_list", "type": "Union[str, List[str]]"}, {"lineNumber": 132, "col_offset": 4, "nodeName": "res", "type": "Any"}, {"lineNumber": 142, "col_offset": 4, "nodeName": "output", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[str, Any]]]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "nl_world", "type": "Dict[str, str]"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "parse", "type": "List[Any]"}, {"lineNumber": 162, "col_offset": 4, "nodeName": "setup", "type": "Any"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "answers", "type": "List[Any]"}, {"lineNumber": 174, "col_offset": 4, "nodeName": "setup_core", "type": "Any"}, {"lineNumber": 174, "col_offset": 17, "nodeName": "setup", "type": "Any"}, {"lineNumber": 177, "col_offset": 4, "nodeName": "s_attr", "type": "Any"}, {"lineNumber": 178, "col_offset": 4, "nodeName": "s_dir", "type": "int"}, {"lineNumber": 179, "col_offset": 4, "nodeName": "s_world", "type": "str"}, {"lineNumber": 180, "col_offset": 4, "nodeName": "a_attr", "type": "Any"}, {"lineNumber": 181, "col_offset": 4, "nodeName": "qr_dir", "type": "int"}, {"lineNumber": 182, "col_offset": 4, "nodeName": "a_dir", "type": "int"}, {"lineNumber": 183, "col_offset": 4, "nodeName": "a_world", "type": "str"}, {"lineNumber": 195, "col_offset": 11, "nodeName": "output", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[str, Any]]]"}, {"lineNumber": 138, "col_offset": 5, "nodeName": "List", "type": "Any"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 201, "col_offset": 9, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "compile", "type": "Callable"}, {"lineNumber": 210, "col_offset": 4, "nodeName": "res", "type": "List[Dict[str, int]]"}, {"lineNumber": 211, "col_offset": 4, "nodeName": "groups", "type": "List[Any]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "group", "type": "Any"}, {"lineNumber": 212, "col_offset": 17, "nodeName": "groups", "type": "List[Any]"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "res", "type": "List[Dict[str, int]]"}, {"lineNumber": 209, "col_offset": 41, "nodeName": "List", "type": "Any"}, {"lineNumber": 229, "col_offset": 4, "nodeName": "res", "type": "List[str]"}, {"lineNumber": 230, "col_offset": 4, "nodeName": "signs", "type": "Dict[int, str]"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "qr_set", "type": "Dict[str, int]"}, {"lineNumber": 231, "col_offset": 18, "nodeName": "qr_coeff_sets", "type": "List[Dict[str, int]]"}, {"lineNumber": 246, "col_offset": 4, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 247, "col_offset": 4, "nodeName": "res", "type": "Dict[str, List[str]]"}, {"lineNumber": 248, "col_offset": 8, "nodeName": "line", "type": "str"}, {"lineNumber": 248, "col_offset": 16, "nodeName": "lines", "type": "List[str]"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "res", "type": "Dict[str, List[str]]"}, {"lineNumber": 245, "col_offset": 49, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "res", "type": "List[Union[Tuple[int, int], Tuple[Optional[int], int]]]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "current", "type": "None"}, {"lineNumber": 275, "col_offset": 11, "nodeName": "res", "type": "List[Union[Tuple[int, int], Tuple[Optional[int], int]]]"}, {"lineNumber": 258, "col_offset": 46, "nodeName": "List", "type": "Any"}, {"lineNumber": 279, "col_offset": 4, "nodeName": "seen", "type": "Set[Any]"}, {"lineNumber": 280, "col_offset": 4, "nodeName": "res", "type": "List[Any]"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "expr1", "type": "Any"}, {"lineNumber": 281, "col_offset": 17, "nodeName": "expr", "type": "List[Any]"}, {"lineNumber": 285, "col_offset": 11, "nodeName": "res", "type": "List[Any]"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 290, "col_offset": 4, "nodeName": "with_strings", "type": "List[Tuple[str, int, int]]"}, {"lineNumber": 292, "col_offset": 4, "nodeName": "substring_groups", "type": "List[Any]"}, {"lineNumber": 293, "col_offset": 4, "nodeName": "ambiguous", "type": "List[Tuple[str, int, int]]"}, {"lineNumber": 294, "col_offset": 24, "nodeName": "with_strings", "type": "List[Tuple[str, int, int]]"}, {"lineNumber": 309, "col_offset": 4, "nodeName": "nofit", "type": "List[List[Tuple[str, int, int]]]"}, {"lineNumber": 329, "col_offset": 4, "nodeName": "substring_groups", "type": "Union[List[List[Tuple[str, int, int]]], List[Any]]"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "world_dict", "type": "Dict[str, List[Any]]"}, {"lineNumber": 337, "col_offset": 11, "nodeName": "world_dict", "type": "Dict[str, List[Any]]"}, {"lineNumber": 288, "col_offset": 56, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 365, "col_offset": 30, "nodeName": "List", "type": "Any"}, {"lineNumber": 370, "col_offset": 4, "nodeName": "query_stems", "type": "Any"}, {"lineNumber": 371, "col_offset": 4, "nodeName": "references_stems", "type": "Any"}, {"lineNumber": 369, "col_offset": 88, "nodeName": "List", "type": "Any"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "literal_keys", "type": "List[str]"}, {"lineNumber": 383, "col_offset": 4, "nodeName": "literal_values", "type": "List[Any]"}, {"lineNumber": 384, "col_offset": 4, "nodeName": "overlaps", "type": "List[List[int]]"}, {"lineNumber": 385, "col_offset": 4, "nodeName": "worlds", "type": "List[Optional[str]]"}, {"lineNumber": 386, "col_offset": 8, "nodeName": "overlap", "type": "List[int]"}, {"lineNumber": 386, "col_offset": 19, "nodeName": "overlaps", "type": "List[List[int]]"}, {"lineNumber": 393, "col_offset": 11, "nodeName": "worlds", "type": "List[Optional[str]]"}, {"lineNumber": 377, "col_offset": 5, "nodeName": "List", "type": "Any"}, {"lineNumber": 83, "col_offset": 13, "nodeName": "re", "type": "module"}, {"lineNumber": 86, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 88, "col_offset": 10, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "res", "type": "str"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "split", "type": "Callable"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "question", "type": "str"}, {"lineNumber": 92, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 96, "col_offset": 43, "nodeName": "JsonDict", "type": "Type[Dict[str, Any]]"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "Any", "type": "Any"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "JsonDict", "type": "Type[Dict[str, Any]]"}, {"lineNumber": 107, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 112, "col_offset": 7, "nodeName": "sign", "type": "int"}, {"lineNumber": 122, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "entity", "type": "str"}, {"lineNumber": 127, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 127, "col_offset": 66, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 127, "col_offset": 87, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "res", "type": "List[Union[List[str], str]]"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 133, "col_offset": 23, "nodeName": "res", "type": "Any"}, {"lineNumber": 137, "col_offset": 18, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 137, "col_offset": 42, "nodeName": "JsonDict", "type": "Type[Dict[str, Any]]"}, {"lineNumber": 137, "col_offset": 66, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 137, "col_offset": 78, "nodeName": "QuarelWorld", "type": "Type[allennlp.semparse.worlds.quarel_world.QuarelWorld]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "lisp_to_nested_expression", "type": "Callable[[str], List[Any]]"}, {"lineNumber": 159, "col_offset": 52, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "parse", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "parse", "type": "List[Any]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "setup_core", "type": "Any"}, {"lineNumber": 177, "col_offset": 13, "nodeName": "setup_core", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "qr_size", "type": "Dict[str, int]"}, {"lineNumber": 179, "col_offset": 14, "nodeName": "nl_world", "type": "Dict[str, str]"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "_get_qr_coeff", "type": "Callable[[Any, Any], int]"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "s_dir", "type": "int"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "qr_dir", "type": "int"}, {"lineNumber": 183, "col_offset": 14, "nodeName": "nl_world", "type": "Dict[str, str]"}, {"lineNumber": 189, "col_offset": 7, "nodeName": "a_world", "type": "str"}, {"lineNumber": 189, "col_offset": 18, "nodeName": "s_world", "type": "str"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "append", "type": "Callable"}, {"lineNumber": 138, "col_offset": 10, "nodeName": "JsonDict", "type": "Type[Dict[str, Any]]"}, {"lineNumber": 200, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 201, "col_offset": 9, "nodeName": "re", "type": "module"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "re", "type": "module"}, {"lineNumber": 205, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 206, "col_offset": 59, "nodeName": "string", "type": "str"}, {"lineNumber": 209, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "findall", "type": "Callable[..., List[Any]]"}, {"lineNumber": 211, "col_offset": 30, "nodeName": "qr_spec", "type": "str"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "group_split", "type": "List[str]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "group_dict", "type": "Dict[str, int]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "attribute", "type": "str"}, {"lineNumber": 215, "col_offset": 25, "nodeName": "group_split", "type": "List[str]"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "first", "type": "bool"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "group_list", "type": "List[str]"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "join", "type": "Callable"}, {"lineNumber": 242, "col_offset": 21, "nodeName": "res", "type": "List[str]"}, {"lineNumber": 245, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 249, "col_offset": 8, "nodeName": "line_split", "type": "List[str]"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "head", "type": "str"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "cues", "type": "List[str]"}, {"lineNumber": 254, "col_offset": 20, "nodeName": "cues", "type": "List[str]"}, {"lineNumber": 258, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "index", "type": "int"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "tag", "type": "str"}, {"lineNumber": 261, "col_offset": 22, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 261, "col_offset": 32, "nodeName": "tags", "type": "List[str]"}, {"lineNumber": 273, "col_offset": 7, "nodeName": "current", "type": "Optional[int]"}, {"lineNumber": 278, "col_offset": 28, "nodeName": "List", "type": "Any"}, {"lineNumber": 279, "col_offset": 16, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "from_bio", "type": "Callable[[List[str], str], List[Tuple[int, int]]]"}, {"lineNumber": 289, "col_offset": 21, "nodeName": "tags", "type": "List[str]"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "string", "type": "str"}, {"lineNumber": 294, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 294, "col_offset": 19, "nodeName": "j", "type": "int"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "found", "type": "None"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "extra", "type": "List[Tuple[str, int, int]]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "substring_groups", "type": "List[List[Tuple[str, int, int]]]"}, {"lineNumber": 329, "col_offset": 23, "nodeName": "substring_groups", "type": "Union[List[List[Tuple[str, int, int]]], List[Any]]"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 333, "col_offset": 8, "nodeName": "index", "type": "int"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "group", "type": "Any"}, {"lineNumber": 333, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 333, "col_offset": 34, "nodeName": "substring_groups", "type": "Union[List[List[Tuple[str, int, int]]], List[Any]]"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "world_strings", "type": "List[Any]"}, {"lineNumber": 335, "col_offset": 47, "nodeName": "world_strings", "type": "List[Any]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "_tagger_archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "_tagger", "type": "allennlp.predictors.predictor.Predictor"}, {"lineNumber": 359, "col_offset": 8, "nodeName": "output", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 360, "col_offset": 8, "nodeName": "tokens_text", "type": "List[Any]"}, {"lineNumber": 361, "col_offset": 8, "nodeName": "res", "type": "Any"}, {"lineNumber": 362, "col_offset": 15, "nodeName": "res", "type": "Any"}, {"lineNumber": 350, "col_offset": 9, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 365, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 366, "col_offset": 11, "nodeName": "findall", "type": "Callable"}, {"lineNumber": 366, "col_offset": 36, "nodeName": "string", "type": "str"}, {"lineNumber": 365, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 369, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 369, "col_offset": 66, "nodeName": "NltkPorterStemmer", "type": "Any"}, {"lineNumber": 369, "col_offset": 93, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 376, "col_offset": 36, "nodeName": "JsonDict", "type": "Type[Dict[str, Any]]"}, {"lineNumber": 376, "col_offset": 55, "nodeName": "NltkPorterStemmer", "type": "Any"}, {"lineNumber": 382, "col_offset": 19, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 383, "col_offset": 21, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 377, "col_offset": 10, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 88, "col_offset": 10, "nodeName": "RE_DECAMEL", "type": "Pattern[str]"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 96, "col_offset": 22, "nodeName": "List", "type": "Any"}, {"lineNumber": 101, "col_offset": 7, "nodeName": "arg", "type": "Any"}, {"lineNumber": 118, "col_offset": 27, "nodeName": "List", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "Union", "type": "Any"}, {"lineNumber": 130, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "res", "type": "Union[List[str], str]"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "res", "type": "Union[List[str], str]"}, {"lineNumber": 132, "col_offset": 43, "nodeName": "x", "type": "Union[str, List[str]]"}, {"lineNumber": 132, "col_offset": 48, "nodeName": "res", "type": "Union[List[str], List[Union[List[str], str]], str]"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "joiner", "type": "str"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "nl_world", "type": "Dict[str, str]"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "nl_world_string", "type": "Callable[[List[str]], str]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "nl_world", "type": "Dict[str, str]"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "nl_world_string", "type": "Callable[[List[str]], str]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "nl_world", "type": "Dict[str, str]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "nl_world", "type": "Dict[str, str]"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "semparse_util", "type": "module"}, {"lineNumber": 160, "col_offset": 7, "nodeName": "parse", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 4, "nodeName": "output", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[str, Any]]]"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "output", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[str, Any]]]"}, {"lineNumber": 175, "col_offset": 7, "nodeName": "setup", "type": "Any"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "setup", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "world", "type": "allennlp.semparse.worlds.quarel_world.QuarelWorld"}, {"lineNumber": 180, "col_offset": 13, "nodeName": "answers", "type": "List[Any]"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "world", "type": "allennlp.semparse.worlds.quarel_world.QuarelWorld"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "strip_entity_type", "type": "Callable[[str], str]"}, {"lineNumber": 181, "col_offset": 51, "nodeName": "s_attr", "type": "Any"}, {"lineNumber": 181, "col_offset": 60, "nodeName": "strip_entity_type", "type": "Callable[[str], str]"}, {"lineNumber": 181, "col_offset": 78, "nodeName": "a_attr", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 191, "col_offset": 4, "nodeName": "content", "type": "List[str]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "output", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[str, Any]]]"}, {"lineNumber": 193, "col_offset": 55, "nodeName": "content", "type": "List[str]"}, {"lineNumber": 206, "col_offset": 11, "nodeName": "RE_INITLETTER", "type": "Pattern[str]"}, {"lineNumber": 211, "col_offset": 13, "nodeName": "RE_GROUP", "type": "Pattern[str]"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "split", "type": "Callable"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "group", "type": "Any"}, {"lineNumber": 216, "col_offset": 12, "nodeName": "sign", "type": "int"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "attribute", "type": "str"}, {"lineNumber": 223, "col_offset": 36, "nodeName": "sign", "type": "int"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 224, "col_offset": 19, "nodeName": "group_dict", "type": "Dict[str, int]"}, {"lineNumber": 209, "col_offset": 46, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 228, "col_offset": 37, "nodeName": "List", "type": "Any"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "attr", "type": "str"}, {"lineNumber": 234, "col_offset": 18, "nodeName": "sign", "type": "int"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "items", "type": "Callable"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "signed_attr", "type": "str"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "first", "type": "bool"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "cues_string", "type": "str"}, {"lineNumber": 249, "col_offset": 21, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 253, "col_offset": 12, "nodeName": "cues", "type": "List[str]"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "res", "type": "Dict[str, List[str]]"}, {"lineNumber": 245, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 258, "col_offset": 19, "nodeName": "List", "type": "Any"}, {"lineNumber": 262, "col_offset": 11, "nodeName": "tag", "type": "str"}, {"lineNumber": 265, "col_offset": 12, "nodeName": "current", "type": "int"}, {"lineNumber": 265, "col_offset": 22, "nodeName": "index", "type": "int"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 258, "col_offset": 51, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 282, "col_offset": 11, "nodeName": "expr1", "type": "Any"}, {"lineNumber": 282, "col_offset": 24, "nodeName": "seen", "type": "Set[Any]"}, {"lineNumber": 288, "col_offset": 23, "nodeName": "List", "type": "Any"}, {"lineNumber": 288, "col_offset": 42, "nodeName": "List", "type": "Any"}, {"lineNumber": 290, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 290, "col_offset": 47, "nodeName": "j", "type": "int"}, {"lineNumber": 290, "col_offset": 62, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 291, "col_offset": 4, "nodeName": "with_strings", "type": "List[Tuple[str, int, int]]"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "group_index", "type": "int"}, {"lineNumber": 296, "col_offset": 25, "nodeName": "group", "type": "List[Tuple[str, int, int]]"}, {"lineNumber": 296, "col_offset": 34, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 296, "col_offset": 44, "nodeName": "substring_groups", "type": "List[Any]"}, {"lineNumber": 297, "col_offset": 34, "nodeName": "group", "type": "List[Tuple[str, int, int]]"}, {"lineNumber": 303, "col_offset": 11, "nodeName": "found", "type": "Optional[int]"}, {"lineNumber": 310, "col_offset": 7, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 310, "col_offset": 11, "nodeName": "substring_groups", "type": "List[Any]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 312, "col_offset": 21, "nodeName": "substring_groups", "type": "List[Any]"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "best_distance", "type": "int"}, {"lineNumber": 314, "col_offset": 12, "nodeName": "best_index", "type": "None"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "string", "type": "str"}, {"lineNumber": 331, "col_offset": 4, "nodeName": "substring_groups", "type": "Union[List[List[Tuple[str, int, int]]], List[Any]]"}, {"lineNumber": 334, "col_offset": 24, "nodeName": "delete_duplicates", "type": "Callable[[List[Any]], List[Any]]"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "world_dict", "type": "Dict[str, List[Any]]"}, {"lineNumber": 288, "col_offset": 61, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "self", "type": "WorldTaggerExtractor"}, {"lineNumber": 345, "col_offset": 31, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 345, "col_offset": 44, "nodeName": "tagger_archive", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "self", "type": "WorldTaggerExtractor"}, {"lineNumber": 346, "col_offset": 23, "nodeName": "from_archive", "type": "Callable[..., allennlp.predictors.predictor.Predictor]"}, {"lineNumber": 346, "col_offset": 46, "nodeName": "_tagger_archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 349, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 353, "col_offset": 29, "nodeName": "tokenized_question", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 356, "col_offset": 19, "nodeName": "text_to_instance", "type": "Callable[..., allennlp.data.instance.Instance]"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "question", "type": "str"}, {"lineNumber": 359, "col_offset": 17, "nodeName": "forward_on_instance", "type": "Callable[[allennlp.data.instance.Instance], Dict[str, numpy.ndarray]]"}, {"lineNumber": 359, "col_offset": 57, "nodeName": "instance", "type": "Any"}, {"lineNumber": 360, "col_offset": 23, "nodeName": "text", "type": "Any"}, {"lineNumber": 361, "col_offset": 14, "nodeName": "group_worlds", "type": "Callable[[List[str], List[str]], Dict[str, List[str]]]"}, {"lineNumber": 361, "col_offset": 43, "nodeName": "tokens_text", "type": "List[Any]"}, {"lineNumber": 366, "col_offset": 11, "nodeName": "re", "type": "module"}, {"lineNumber": 369, "col_offset": 46, "nodeName": "List", "type": "Any"}, {"lineNumber": 370, "col_offset": 19, "nodeName": "stem", "type": "Any"}, {"lineNumber": 370, "col_offset": 32, "nodeName": "x", "type": "str"}, {"lineNumber": 370, "col_offset": 39, "nodeName": "x", "type": "str"}, {"lineNumber": 371, "col_offset": 76, "nodeName": "reference", "type": "str"}, {"lineNumber": 371, "col_offset": 89, "nodeName": "references", "type": "List[str]"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 372, "col_offset": 63, "nodeName": "reference_stems", "type": "Set[Any]"}, {"lineNumber": 372, "col_offset": 82, "nodeName": "references_stems", "type": "Any"}, {"lineNumber": 376, "col_offset": 15, "nodeName": "List", "type": "Any"}, {"lineNumber": 382, "col_offset": 24, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 383, "col_offset": 26, "nodeName": "values", "type": "Callable"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "get_stem_overlaps", "type": "Callable[[str, List[str], Any], List[int]]"}, {"lineNumber": 384, "col_offset": 34, "nodeName": "extract", "type": "str"}, {"lineNumber": 384, "col_offset": 43, "nodeName": "literal_values", "type": "List[Any]"}, {"lineNumber": 384, "col_offset": 59, "nodeName": "stemmer", "type": "Any"}, {"lineNumber": 384, "col_offset": 72, "nodeName": "extract", "type": "str"}, {"lineNumber": 384, "col_offset": 83, "nodeName": "extracted", "type": "List[str]"}, {"lineNumber": 21, "col_offset": 24, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "capitalize", "type": "Any"}, {"lineNumber": 97, "col_offset": 51, "nodeName": "triple", "type": "List[str]"}, {"lineNumber": 97, "col_offset": 67, "nodeName": "nl_world", "type": "Dict[str, Any]"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "nl_arg", "type": "Callable[[Any, Dict[str, Any]], Any]"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "x", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "nl_world", "type": "Dict[str, Any]"}, {"lineNumber": 102, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "nl_triple", "type": "Callable[[List[str], Dict[str, Any]], str]"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "arg", "type": "Any"}, {"lineNumber": 104, "col_offset": 31, "nodeName": "nl_world", "type": "Dict[str, Any]"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "words_from_entity_string", "type": "Callable[[str], str]"}, {"lineNumber": 118, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "str_join", "type": "Callable[..., str]"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "world", "type": "List[str]"}, {"lineNumber": 132, "col_offset": 14, "nodeName": "prefixes", "type": "str"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "x", "type": "Union[str, List[str]]"}, {"lineNumber": 132, "col_offset": 27, "nodeName": "postfixes", "type": "str"}, {"lineNumber": 144, "col_offset": 7, "nodeName": "world_extractions", "type": "Dict[str, Any]"}, {"lineNumber": 144, "col_offset": 48, "nodeName": "world_extractions", "type": "Dict[str, Any]"}, {"lineNumber": 145, "col_offset": 45, "nodeName": "world_extractions", "type": "Dict[str, Any]"}, {"lineNumber": 146, "col_offset": 45, "nodeName": "world_extractions", "type": "Dict[str, Any]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "output", "type": "List[Union[Dict[str, Union[List[str], str]], Dict[str, Any]]]"}, {"lineNumber": 163, "col_offset": 67, "nodeName": "nl_arg", "type": "Callable[[Any, Dict[str, Any]], Any]"}, {"lineNumber": 163, "col_offset": 74, "nodeName": "setup", "type": "Any"}, {"lineNumber": 163, "col_offset": 81, "nodeName": "nl_world", "type": "Dict[str, str]"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "setup_core", "type": "Any"}, {"lineNumber": 179, "col_offset": 23, "nodeName": "setup_core", "type": "Any"}, {"lineNumber": 180, "col_offset": 21, "nodeName": "answer_index", "type": "int"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "content", "type": "List[str]"}, {"lineNumber": 206, "col_offset": 39, "nodeName": "upper", "type": "Any"}, {"lineNumber": 213, "col_offset": 22, "nodeName": "RE_SEP", "type": "Pattern[str]"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "sign", "type": "int"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "attribute", "type": "str"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "to_camel", "type": "Callable[[str], str]"}, {"lineNumber": 222, "col_offset": 33, "nodeName": "attribute", "type": "str"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "group_dict", "type": "Dict[str, int]"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "res", "type": "List[Dict[str, int]]"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "qr_set", "type": "Dict[str, int]"}, {"lineNumber": 235, "col_offset": 40, "nodeName": "attr", "type": "str"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "first", "type": "bool"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 240, "col_offset": 30, "nodeName": "signed_attr", "type": "str"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "res", "type": "List[str]"}, {"lineNumber": 249, "col_offset": 21, "nodeName": "line", "type": "str"}, {"lineNumber": 252, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 252, "col_offset": 15, "nodeName": "line_split", "type": "List[str]"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "split", "type": "Callable"}, {"lineNumber": 254, "col_offset": 12, "nodeName": "head", "type": "str"}, {"lineNumber": 245, "col_offset": 59, "nodeName": "List", "type": "Any"}, {"lineNumber": 258, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 262, "col_offset": 25, "nodeName": "target", "type": "str"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "current", "type": "None"}, {"lineNumber": 266, "col_offset": 13, "nodeName": "tag", "type": "str"}, {"lineNumber": 272, "col_offset": 12, "nodeName": "current", "type": "None"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "res", "type": "List[Union[Tuple[int, int], Tuple[Optional[int], int]]]"}, {"lineNumber": 274, "col_offset": 20, "nodeName": "current", "type": "Optional[int]"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 283, "col_offset": 21, "nodeName": "expr1", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 284, "col_offset": 23, "nodeName": "expr1", "type": "Any"}, {"lineNumber": 288, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 288, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 290, "col_offset": 21, "nodeName": "join", "type": "Callable"}, {"lineNumber": 290, "col_offset": 54, "nodeName": "i", "type": "int"}, {"lineNumber": 290, "col_offset": 57, "nodeName": "j", "type": "int"}, {"lineNumber": 297, "col_offset": 16, "nodeName": "string_g", "type": "str"}, {"lineNumber": 297, "col_offset": 26, "nodeName": "_", "type": "int"}, {"lineNumber": 297, "col_offset": 29, "nodeName": "_", "type": "int"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 305, "col_offset": 13, "nodeName": "found", "type": "Optional[int]"}, {"lineNumber": 311, "col_offset": 8, "nodeName": "substring_groups", "type": "List[Any]"}, {"lineNumber": 311, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 316, "col_offset": 16, "nodeName": "index", "type": "int"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "group", "type": "List[Tuple[str, int, int]]"}, {"lineNumber": 316, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 317, "col_offset": 38, "nodeName": "group", "type": "List[Tuple[str, int, int]]"}, {"lineNumber": 324, "col_offset": 48, "nodeName": "extra", "type": "List[Tuple[str, int, int]]"}, {"lineNumber": 288, "col_offset": 66, "nodeName": "List", "type": "Any"}, {"lineNumber": 346, "col_offset": 23, "nodeName": "Predictor", "type": "Type[allennlp.predictors.predictor.Predictor]"}, {"lineNumber": 346, "col_offset": 46, "nodeName": "self", "type": "WorldTaggerExtractor"}, {"lineNumber": 349, "col_offset": 49, "nodeName": "List", "type": "Any"}, {"lineNumber": 353, "col_offset": 51, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 356, "col_offset": 19, "nodeName": "_dataset_reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 357, "col_offset": 41, "nodeName": "tokenized_question", "type": "Any"}, {"lineNumber": 359, "col_offset": 17, "nodeName": "_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 360, "col_offset": 23, "nodeName": "t", "type": "Any"}, {"lineNumber": 360, "col_offset": 34, "nodeName": "t", "type": "Any"}, {"lineNumber": 360, "col_offset": 39, "nodeName": "tokenized_question", "type": "Any"}, {"lineNumber": 361, "col_offset": 27, "nodeName": "output", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 350, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 369, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 370, "col_offset": 19, "nodeName": "stemmer", "type": "Any"}, {"lineNumber": 370, "col_offset": 44, "nodeName": "get_words", "type": "Callable[[str], List[str]]"}, {"lineNumber": 370, "col_offset": 54, "nodeName": "query", "type": "str"}, {"lineNumber": 371, "col_offset": 25, "nodeName": "stem", "type": "Any"}, {"lineNumber": 371, "col_offset": 38, "nodeName": "x", "type": "str"}, {"lineNumber": 371, "col_offset": 45, "nodeName": "x", "type": "str"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "intersection", "type": "Callable[..., Set[Any]]"}, {"lineNumber": 372, "col_offset": 41, "nodeName": "reference_stems", "type": "Set[Any]"}, {"lineNumber": 376, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 382, "col_offset": 24, "nodeName": "literals", "type": "Dict[str, Any]"}, {"lineNumber": 383, "col_offset": 26, "nodeName": "literals", "type": "Dict[str, Any]"}, {"lineNumber": 387, "col_offset": 11, "nodeName": "overlap", "type": "List[int]"}, {"lineNumber": 387, "col_offset": 24, "nodeName": "overlap", "type": "List[int]"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 87, "col_offset": 10, "nodeName": "entity", "type": "str"}, {"lineNumber": 102, "col_offset": 45, "nodeName": "arg", "type": "Any"}, {"lineNumber": 108, "col_offset": 36, "nodeName": "strip_entity_type", "type": "Callable[[str], str]"}, {"lineNumber": 108, "col_offset": 54, "nodeName": "attr", "type": "str"}, {"lineNumber": 127, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "answers", "type": "List[Any]"}, {"lineNumber": 187, "col_offset": 60, "nodeName": "s_world", "type": "str"}, {"lineNumber": 190, "col_offset": 80, "nodeName": "a_world", "type": "str"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "chr", "type": "Callable[[int], str]"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "attribute", "type": "str"}, {"lineNumber": 219, "col_offset": 28, "nodeName": "attribute", "type": "str"}, {"lineNumber": 221, "col_offset": 16, "nodeName": "attribute", "type": "str"}, {"lineNumber": 223, "col_offset": 23, "nodeName": "attribute", "type": "str"}, {"lineNumber": 209, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 209, "col_offset": 56, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 228, "col_offset": 42, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 235, "col_offset": 26, "nodeName": "signs", "type": "Dict[int, str]"}, {"lineNumber": 238, "col_offset": 19, "nodeName": "sign", "type": "int"}, {"lineNumber": 239, "col_offset": 20, "nodeName": "signed_attr", "type": "str"}, {"lineNumber": 239, "col_offset": 34, "nodeName": "attr", "type": "str"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "group_list", "type": "List[str]"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "line_split", "type": "List[str]"}, {"lineNumber": 253, "col_offset": 19, "nodeName": "RE_SEP", "type": "Pattern[str]"}, {"lineNumber": 253, "col_offset": 32, "nodeName": "line_split", "type": "List[str]"}, {"lineNumber": 245, "col_offset": 64, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 266, "col_offset": 27, "nodeName": "target", "type": "str"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "current", "type": "Optional[int]"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "current", "type": "int"}, {"lineNumber": 268, "col_offset": 26, "nodeName": "index", "type": "int"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "current", "type": "Optional[int]"}, {"lineNumber": 274, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 274, "col_offset": 33, "nodeName": "tags", "type": "List[str]"}, {"lineNumber": 258, "col_offset": 57, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 258, "col_offset": 62, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "seen", "type": "Set[Any]"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "res", "type": "List[Any]"}, {"lineNumber": 290, "col_offset": 30, "nodeName": "tokens", "type": "List[str]"}, {"lineNumber": 291, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "string", "type": "str"}, {"lineNumber": 298, "col_offset": 29, "nodeName": "string_g", "type": "str"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "substring_groups", "type": "List[Any]"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 315, "col_offset": 21, "nodeName": "extra", "type": "List[Tuple[str, int, int]]"}, {"lineNumber": 316, "col_offset": 42, "nodeName": "substring_groups", "type": "List[Any]"}, {"lineNumber": 317, "col_offset": 20, "nodeName": "string_g", "type": "str"}, {"lineNumber": 317, "col_offset": 30, "nodeName": "_", "type": "int"}, {"lineNumber": 317, "col_offset": 33, "nodeName": "_", "type": "int"}, {"lineNumber": 318, "col_offset": 20, "nodeName": "distance", "type": "Any"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "best_index", "type": "Optional[int]"}, {"lineNumber": 323, "col_offset": 42, "nodeName": "best_distance", "type": "Any"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "substring_groups", "type": "List[Any]"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 326, "col_offset": 29, "nodeName": "extra", "type": "List[Tuple[str, int, int]]"}, {"lineNumber": 331, "col_offset": 40, "nodeName": "min", "type": "Callable"}, {"lineNumber": 334, "col_offset": 43, "nodeName": "x", "type": "Any"}, {"lineNumber": 334, "col_offset": 52, "nodeName": "x", "type": "Any"}, {"lineNumber": 334, "col_offset": 57, "nodeName": "group", "type": "Any"}, {"lineNumber": 288, "col_offset": 71, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 349, "col_offset": 54, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 353, "col_offset": 51, "nodeName": "_tokenizer", "type": "Any"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 356, "col_offset": 19, "nodeName": "_tagger", "type": "allennlp.predictors.predictor.Predictor"}, {"lineNumber": 359, "col_offset": 17, "nodeName": "_tagger", "type": "allennlp.predictors.predictor.Predictor"}, {"lineNumber": 350, "col_offset": 19, "nodeName": "List", "type": "Any"}, {"lineNumber": 371, "col_offset": 25, "nodeName": "stemmer", "type": "Any"}, {"lineNumber": 371, "col_offset": 50, "nodeName": "get_words", "type": "Callable[[str], List[str]]"}, {"lineNumber": 371, "col_offset": 60, "nodeName": "reference", "type": "str"}, {"lineNumber": 372, "col_offset": 16, "nodeName": "query_stems", "type": "Set[Any]"}, {"lineNumber": 388, "col_offset": 12, "nodeName": "worlds", "type": "List[Optional[str]]"}, {"lineNumber": 388, "col_offset": 26, "nodeName": "literal_keys", "type": "List[str]"}, {"lineNumber": 389, "col_offset": 13, "nodeName": "overlap", "type": "List[int]"}, {"lineNumber": 389, "col_offset": 26, "nodeName": "overlap", "type": "List[int]"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 97, "col_offset": 14, "nodeName": "nl_attr", "type": "Callable[[str], str]"}, {"lineNumber": 97, "col_offset": 76, "nodeName": "triple", "type": "List[str]"}, {"lineNumber": 127, "col_offset": 31, "nodeName": "List", "type": "Any"}, {"lineNumber": 169, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 170, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 183, "col_offset": 31, "nodeName": "answer_index", "type": "int"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "nl_attr", "type": "Callable[[str], str]"}, {"lineNumber": 186, "col_offset": 24, "nodeName": "s_attr", "type": "Any"}, {"lineNumber": 186, "col_offset": 37, "nodeName": "nl_dir", "type": "Callable[[int], str]"}, {"lineNumber": 186, "col_offset": 44, "nodeName": "s_dir", "type": "int"}, {"lineNumber": 187, "col_offset": 18, "nodeName": "nl_attr", "type": "Callable[[str], str]"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "a_attr", "type": "Any"}, {"lineNumber": 187, "col_offset": 39, "nodeName": "nl_dir", "type": "Callable[[int], str]"}, {"lineNumber": 187, "col_offset": 46, "nodeName": "a_dir", "type": "int"}, {"lineNumber": 190, "col_offset": 38, "nodeName": "nl_attr", "type": "Callable[[str], str]"}, {"lineNumber": 190, "col_offset": 46, "nodeName": "a_attr", "type": "Any"}, {"lineNumber": 190, "col_offset": 59, "nodeName": "nl_dir", "type": "Callable[[int], str]"}, {"lineNumber": 191, "col_offset": 39, "nodeName": "answer_index", "type": "int"}, {"lineNumber": 206, "col_offset": 39, "nodeName": "group", "type": "Any"}, {"lineNumber": 220, "col_offset": 17, "nodeName": "attribute", "type": "str"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "attribute", "type": "str"}, {"lineNumber": 235, "col_offset": 32, "nodeName": "sign", "type": "int"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 241, "col_offset": 33, "nodeName": "group_list", "type": "List[str]"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 290, "col_offset": 37, "nodeName": "i", "type": "int"}, {"lineNumber": 290, "col_offset": 39, "nodeName": "j", "type": "int"}, {"lineNumber": 291, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 299, "col_offset": 23, "nodeName": "found", "type": "None"}, {"lineNumber": 300, "col_offset": 24, "nodeName": "found", "type": "int"}, {"lineNumber": 300, "col_offset": 32, "nodeName": "group_index", "type": "int"}, {"lineNumber": 304, "col_offset": 38, "nodeName": "string", "type": "str"}, {"lineNumber": 304, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 304, "col_offset": 49, "nodeName": "j", "type": "int"}, {"lineNumber": 306, "col_offset": 44, "nodeName": "string", "type": "str"}, {"lineNumber": 306, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 306, "col_offset": 55, "nodeName": "j", "type": "int"}, {"lineNumber": 308, "col_offset": 12, "nodeName": "ambiguous", "type": "List[Tuple[str, int, int]]"}, {"lineNumber": 308, "col_offset": 30, "nodeName": "string", "type": "str"}, {"lineNumber": 308, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 308, "col_offset": 41, "nodeName": "j", "type": "int"}, {"lineNumber": 318, "col_offset": 31, "nodeName": "edit_distance", "type": "Any"}, {"lineNumber": 318, "col_offset": 45, "nodeName": "string_g", "type": "str"}, {"lineNumber": 318, "col_offset": 55, "nodeName": "string", "type": "str"}, {"lineNumber": 319, "col_offset": 23, "nodeName": "distance", "type": "Any"}, {"lineNumber": 319, "col_offset": 34, "nodeName": "best_distance", "type": "int"}, {"lineNumber": 320, "col_offset": 24, "nodeName": "best_distance", "type": "Any"}, {"lineNumber": 320, "col_offset": 40, "nodeName": "distance", "type": "Any"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "best_index", "type": "int"}, {"lineNumber": 321, "col_offset": 37, "nodeName": "index", "type": "int"}, {"lineNumber": 324, "col_offset": 33, "nodeName": "best_index", "type": "Optional[int]"}, {"lineNumber": 326, "col_offset": 16, "nodeName": "nofit", "type": "List[List[Tuple[str, int, int]]]"}, {"lineNumber": 335, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 353, "col_offset": 51, "nodeName": "_dataset_reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "question", "type": "str"}, {"lineNumber": 356, "col_offset": 19, "nodeName": "self", "type": "WorldTaggerExtractor"}, {"lineNumber": 359, "col_offset": 17, "nodeName": "self", "type": "WorldTaggerExtractor"}, {"lineNumber": 350, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "worlds", "type": "List[Optional[str]]"}, {"lineNumber": 390, "col_offset": 26, "nodeName": "literal_keys", "type": "List[str]"}, {"lineNumber": 392, "col_offset": 12, "nodeName": "worlds", "type": "List[Optional[str]]"}, {"lineNumber": 21, "col_offset": 34, "nodeName": "List", "type": "Any"}, {"lineNumber": 97, "col_offset": 22, "nodeName": "triple", "type": "List[str]"}, {"lineNumber": 127, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 169, "col_offset": 37, "nodeName": "nl_arg", "type": "Callable[[Any, Dict[str, Any]], Any]"}, {"lineNumber": 169, "col_offset": 56, "nodeName": "nl_world", "type": "Dict[str, str]"}, {"lineNumber": 170, "col_offset": 37, "nodeName": "nl_arg", "type": "Callable[[Any, Dict[str, Any]], Any]"}, {"lineNumber": 170, "col_offset": 56, "nodeName": "nl_world", "type": "Dict[str, str]"}, {"lineNumber": 190, "col_offset": 67, "nodeName": "a_dir", "type": "int"}, {"lineNumber": 206, "col_offset": 39, "nodeName": "x", "type": "Any"}, {"lineNumber": 228, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 228, "col_offset": 52, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 271, "col_offset": 16, "nodeName": "res", "type": "List[Union[Tuple[int, int], Tuple[Optional[int], int]]]"}, {"lineNumber": 271, "col_offset": 28, "nodeName": "current", "type": "Optional[int]"}, {"lineNumber": 271, "col_offset": 37, "nodeName": "index", "type": "int"}, {"lineNumber": 306, "col_offset": 12, "nodeName": "substring_groups", "type": "List[Any]"}, {"lineNumber": 323, "col_offset": 58, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 323, "col_offset": 62, "nodeName": "string", "type": "str"}, {"lineNumber": 331, "col_offset": 45, "nodeName": "y", "type": "Any"}, {"lineNumber": 331, "col_offset": 54, "nodeName": "y", "type": "Any"}, {"lineNumber": 331, "col_offset": 59, "nodeName": "x", "type": "Any"}, {"lineNumber": 335, "col_offset": 33, "nodeName": "index", "type": "int"}, {"lineNumber": 353, "col_offset": 51, "nodeName": "_tagger", "type": "allennlp.predictors.predictor.Predictor"}, {"lineNumber": 21, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 151, "col_offset": 34, "nodeName": "nl_world", "type": "Dict[str, str]"}, {"lineNumber": 152, "col_offset": 34, "nodeName": "nl_world", "type": "Dict[str, str]"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "answers", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 44, "nodeName": "answers", "type": "List[Any]"}, {"lineNumber": 306, "col_offset": 29, "nodeName": "found", "type": "Optional[int]"}, {"lineNumber": 353, "col_offset": 51, "nodeName": "self", "type": "WorldTaggerExtractor"}]