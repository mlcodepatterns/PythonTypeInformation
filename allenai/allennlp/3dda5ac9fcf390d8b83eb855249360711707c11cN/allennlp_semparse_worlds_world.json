[{"lineNumber": 14, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 14, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 14, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 219, "col_offset": 89, "nodeName": "Expression", "type": "Any"}, {"lineNumber": 255, "col_offset": 93, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 368, "col_offset": 58, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 398, "col_offset": 63, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 426, "col_offset": 66, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 14, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "local_name_mapping", "type": "Dict[str, str]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "local_type_signatures", "type": "Dict[str, Any]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "global_name_mapping", "type": "Union[Dict[str, str], Dict[nothing, nothing]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "global_type_signatures", "type": "Union[Dict[str, Any], Dict[nothing, nothing]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "type_prefixes", "type": "Union[Dict[str, Any], Dict[nothing, nothing]]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "_num_nested_lambdas", "type": "int"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "num_nested_lambdas", "type": "int"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "_lambda_variables", "type": "Set[str]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "_right_side_indexed_actions", "type": "None"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "_valid_actions", "type": "None"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "_multi_match_mapping", "type": "None"}, {"lineNumber": 76, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "_valid_actions", "type": "Any"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "right_side_indexed_actions", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "lists_to_expand", "type": "List[Tuple[str, List[str]]]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "completed_paths", "type": "List[List[str]]"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "lists_to_expand", "type": "List[Tuple[str, List[str]]]"}, {"lineNumber": 112, "col_offset": 9, "nodeName": "List", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "all_actions", "type": "Set[Any]"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "action_set", "type": "List[str]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 152, "col_offset": 38, "nodeName": "List", "type": "Any"}, {"lineNumber": 163, "col_offset": 40, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "_right_side_indexed_actions", "type": "Any"}, {"lineNumber": 188, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 184, "col_offset": 33, "nodeName": "Set", "type": "Any"}, {"lineNumber": 195, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 190, "col_offset": 42, "nodeName": "Set", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "_multi_match_mapping", "type": "Any"}, {"lineNumber": 197, "col_offset": 41, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 237, "col_offset": 11, "nodeName": "remove_var_function", "type": "bool"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "parsed_lisp", "type": "List[Any]"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "translated_string", "type": "str"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "type_signature", "type": "Dict[str, Any]"}, {"lineNumber": 248, "col_offset": 61, "nodeName": "List", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "remaining_actions", "type": "List[List[str]]"}, {"lineNumber": 279, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 289, "col_offset": 11, "nodeName": "remaining_actions", "type": "List[List[str]]"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "remaining_actions", "type": "Any"}, {"lineNumber": 297, "col_offset": 9, "nodeName": "List", "type": "Any"}, {"lineNumber": 383, "col_offset": 8, "nodeName": "type_signature", "type": "str"}, {"lineNumber": 384, "col_offset": 8, "nodeName": "num_brackets", "type": "int"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "char_index", "type": "int"}, {"lineNumber": 386, "col_offset": 12, "nodeName": "char", "type": "str"}, {"lineNumber": 386, "col_offset": 20, "nodeName": "type_signature", "type": "str"}, {"lineNumber": 395, "col_offset": 8, "nodeName": "return_type", "type": "str"}, {"lineNumber": 404, "col_offset": 8, "nodeName": "expression_is_list", "type": "bool"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "expression_size", "type": "int"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "elements_are_leaves", "type": "List[bool]"}, {"lineNumber": 448, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 456, "col_offset": 40, "nodeName": "translated_name", "type": "str"}, {"lineNumber": 457, "col_offset": 53, "nodeName": "name", "type": "str"}, {"lineNumber": 458, "col_offset": 11, "nodeName": "name_type", "type": "Any"}, {"lineNumber": 476, "col_offset": 8, "nodeName": "curried_functions", "type": "Dict[str, int]"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "expression_type", "type": "Any"}, {"lineNumber": 477, "col_offset": 26, "nodeName": "type", "type": "Any"}, {"lineNumber": 522, "col_offset": 15, "nodeName": "current_transitions", "type": "List[str]"}, {"lineNumber": 461, "col_offset": 90, "nodeName": "List", "type": "Any"}, {"lineNumber": 527, "col_offset": 15, "nodeName": "NotImplemented", "type": "NotImplementedType"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "World"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "World"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "World"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "global_name_mapping", "type": "Dict[str, str]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "World"}, {"lineNumber": 54, "col_offset": 38, "nodeName": "global_type_signatures", "type": "Dict[str, Any]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "mapped_name", "type": "str"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "name", "type": "str"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "constant_type_prefixes", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "World"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "num_nested_lambdas", "type": "int"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "World"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "DynamicTypeLogicParser", "type": "Type[allennlp.semparse.type_declarations.type_declaration.DynamicTypeLogicParser]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "World"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "World"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "World"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "global_name_mapping", "type": "Union[Dict[str, str], Dict[nothing, nothing]]"}, {"lineNumber": 78, "col_offset": 46, "nodeName": "local_name_mapping", "type": "Dict[str, str]"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "global_type_signatures", "type": "Union[Dict[str, Any], Dict[nothing, nothing]]"}, {"lineNumber": 82, "col_offset": 49, "nodeName": "local_type_signatures", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "_valid_actions", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "multi_match_mapping", "type": "Any"}, {"lineNumber": 108, "col_offset": 15, "nodeName": "self", "type": "World"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 111, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 111, "col_offset": 65, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 111, "col_offset": 90, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "action_left_side", "type": "str"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "_", "type": "str"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "_get_right_side_indexed_actions", "type": "Callable[[], Any]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "need_to_expand", "type": "bool"}, {"lineNumber": 123, "col_offset": 35, "nodeName": "lists_to_expand", "type": "List[Tuple[str, List[str]]]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "finished_new_lists", "type": "List[Tuple[Any, List[Any]]]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "unfinished_new_lists", "type": "List[Tuple[Any, List[Any]]]"}, {"lineNumber": 134, "col_offset": 38, "nodeName": "lists_to_expand", "type": "List[Tuple[str, List[str]]]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "new_lists", "type": "List[Tuple[Any, List[Any]]]"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "lists_to_expand", "type": "List[Tuple[Any, List[Any]]]"}, {"lineNumber": 150, "col_offset": 15, "nodeName": "completed_paths", "type": "List[List[str]]"}, {"lineNumber": 153, "col_offset": 22, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "values", "type": "Callable"}, {"lineNumber": 156, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "_num_nested_lambdas", "type": "int"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "lambda_var", "type": "str"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "basic_type", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 161, "col_offset": 22, "nodeName": "all_actions", "type": "Set[Any]"}, {"lineNumber": 152, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 164, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "_right_side_indexed_actions", "type": "Any"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "_right_side_indexed_actions", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "all_actions", "type": "List[str]"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "possible_action", "type": "str"}, {"lineNumber": 170, "col_offset": 35, "nodeName": "all_actions", "type": "List[str]"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "self", "type": "World"}, {"lineNumber": 184, "col_offset": 37, "nodeName": "Type", "type": "Any"}, {"lineNumber": 190, "col_offset": 46, "nodeName": "Type", "type": "Any"}, {"lineNumber": 202, "col_offset": 11, "nodeName": "_multi_match_mapping", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "_multi_match_mapping", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "basic_types", "type": "Set[Any]"}, {"lineNumber": 205, "col_offset": 16, "nodeName": "basic_type", "type": "Any"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "basic_types", "type": "Set[Any]"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "self", "type": "World"}, {"lineNumber": 219, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 219, "col_offset": 73, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 242, "col_offset": 22, "nodeName": "lisp_to_nested_expression", "type": "Callable[[str], List[Any]]"}, {"lineNumber": 242, "col_offset": 62, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "_process_nested_expression", "type": "Callable[[Any], str]"}, {"lineNumber": 243, "col_offset": 60, "nodeName": "parsed_lisp", "type": "List[Any]"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "copy", "type": "Callable"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "update", "type": "Callable"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "global_type_signatures", "type": "Union[Dict[str, Any], Dict[nothing, nothing]]"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "parse", "type": "Any"}, {"lineNumber": 246, "col_offset": 40, "nodeName": "translated_string", "type": "str"}, {"lineNumber": 248, "col_offset": 46, "nodeName": "Expression", "type": "Any"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "_get_transitions", "type": "Callable[[Any, List[str]], List[str]]"}, {"lineNumber": 253, "col_offset": 37, "nodeName": "expression", "type": "Any"}, {"lineNumber": 248, "col_offset": 66, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 255, "col_offset": 77, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 279, "col_offset": 15, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 285, "col_offset": 15, "nodeName": "ParsingError", "type": "Type[allennlp.semparse.common.errors.ParsingError]"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "nltk_tree_to_logical_form", "type": "Callable[[Any], str]"}, {"lineNumber": 293, "col_offset": 41, "nodeName": "tree", "type": "Any"}, {"lineNumber": 296, "col_offset": 28, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 296, "col_offset": 88, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 312, "col_offset": 15, "nodeName": "remaining_actions", "type": "List[List[str]]"}, {"lineNumber": 315, "col_offset": 8, "nodeName": "left_side", "type": "str"}, {"lineNumber": 315, "col_offset": 19, "nodeName": "right_side", "type": "str"}, {"lineNumber": 315, "col_offset": 32, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 316, "col_offset": 11, "nodeName": "left_side", "type": "str"}, {"lineNumber": 317, "col_offset": 12, "nodeName": "mismatch", "type": "bool"}, {"lineNumber": 322, "col_offset": 12, "nodeName": "current_label", "type": "Any"}, {"lineNumber": 328, "col_offset": 15, "nodeName": "mismatch", "type": "bool"}, {"lineNumber": 335, "col_offset": 16, "nodeName": "child_type", "type": "str"}, {"lineNumber": 368, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 377, "col_offset": 22, "nodeName": "type_signature", "type": "str"}, {"lineNumber": 383, "col_offset": 25, "nodeName": "type_signature", "type": "str"}, {"lineNumber": 394, "col_offset": 12, "nodeName": "char_index", "type": "int"}, {"lineNumber": 395, "col_offset": 22, "nodeName": "type_signature", "type": "str"}, {"lineNumber": 404, "col_offset": 29, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 404, "col_offset": 40, "nodeName": "nested_expression", "type": "Any"}, {"lineNumber": 404, "col_offset": 59, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 405, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 405, "col_offset": 30, "nodeName": "nested_expression", "type": "Any"}, {"lineNumber": 406, "col_offset": 11, "nodeName": "expression_is_list", "type": "bool"}, {"lineNumber": 409, "col_offset": 11, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 409, "col_offset": 15, "nodeName": "elements_are_leaves", "type": "List[bool]"}, {"lineNumber": 410, "col_offset": 12, "nodeName": "mapped_names", "type": "List[str]"}, {"lineNumber": 412, "col_offset": 12, "nodeName": "mapped_names", "type": "List[Any]"}, {"lineNumber": 421, "col_offset": 12, "nodeName": "arguments", "type": "Union[List[str], List[Any]]"}, {"lineNumber": 423, "col_offset": 12, "nodeName": "arguments", "type": "List[str]"}, {"lineNumber": 426, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 426, "col_offset": 49, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 450, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 450, "col_offset": 60, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 450, "col_offset": 76, "nodeName": "Type", "type": "Any"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "local_name_mapping", "type": "Dict[str, str]"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "reverse_name_mapping", "type": "Dict[str, str]"}, {"lineNumber": 459, "col_offset": 58, "nodeName": "name_type", "type": "Any"}, {"lineNumber": 461, "col_offset": 43, "nodeName": "Expression", "type": "Any"}, {"lineNumber": 476, "col_offset": 28, "nodeName": "_get_curried_functions", "type": "Callable[[], Dict[str, int]]"}, {"lineNumber": 477, "col_offset": 26, "nodeName": "expression", "type": "Any"}, {"lineNumber": 483, "col_offset": 12, "nodeName": "sub_expressions", "type": "Any"}, {"lineNumber": 484, "col_offset": 12, "nodeName": "transformed_types", "type": "List[Any]"}, {"lineNumber": 510, "col_offset": 15, "nodeName": "transformed_types", "type": "Optional[List[Any]]"}, {"lineNumber": 513, "col_offset": 16, "nodeName": "sub_expression", "type": "Any"}, {"lineNumber": 513, "col_offset": 34, "nodeName": "sub_expressions", "type": "Any"}, {"lineNumber": 515, "col_offset": 15, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 461, "col_offset": 95, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 525, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 525, "col_offset": 22, "nodeName": "self", "type": "World"}, {"lineNumber": 525, "col_offset": 28, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 62, "col_offset": 18, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 67, "col_offset": 29, "nodeName": "types", "type": "module"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "type_prefixes", "type": "Union[Dict[str, Any], Dict[nothing, nothing]]"}, {"lineNumber": 68, "col_offset": 66, "nodeName": "global_type_signatures", "type": "Union[Dict[str, Any], Dict[nothing, nothing]]"}, {"lineNumber": 78, "col_offset": 18, "nodeName": "self", "type": "World"}, {"lineNumber": 78, "col_offset": 46, "nodeName": "self", "type": "World"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "self", "type": "World"}, {"lineNumber": 82, "col_offset": 49, "nodeName": "self", "type": "World"}, {"lineNumber": 80, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 80, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "symbol", "type": "str"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "global_name_mapping", "type": "Union[Dict[str, str], Dict[nothing, nothing]]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "symbol", "type": "str"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "local_name_mapping", "type": "Dict[str, str]"}, {"lineNumber": 94, "col_offset": 27, "nodeName": "symbol", "type": "str"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "self", "type": "World"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "get_multi_match_mapping", "type": "Callable[[], Dict[Any, List[Any]]]"}, {"lineNumber": 100, "col_offset": 34, "nodeName": "get_valid_actions", "type": "Callable[..., Dict[str, List[str]]]"}, {"lineNumber": 97, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "action", "type": "str"}, {"lineNumber": 118, "col_offset": 37, "nodeName": "self", "type": "World"}, {"lineNumber": 119, "col_offset": 57, "nodeName": "action_left_side", "type": "str"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "left_side", "type": "str"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "left_side", "type": "str"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 148, "col_offset": 24, "nodeName": "finished_new_lists", "type": "List[Tuple[Any, List[Any]]]"}, {"lineNumber": 148, "col_offset": 45, "nodeName": "unfinished_new_lists", "type": "List[Tuple[Any, List[Any]]]"}, {"lineNumber": 149, "col_offset": 30, "nodeName": "new_lists", "type": "List[Tuple[Any, List[Any]]]"}, {"lineNumber": 150, "col_offset": 32, "nodeName": "max_num_paths", "type": "int"}, {"lineNumber": 112, "col_offset": 14, "nodeName": "List", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 31, "nodeName": "action_set", "type": "List[str]"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "self", "type": "World"}, {"lineNumber": 157, "col_offset": 25, "nodeName": "chr", "type": "Callable[[int], str]"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "get_basic_types", "type": "Callable[[], Set[Any]]"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "production", "type": "str"}, {"lineNumber": 163, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 163, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "self", "type": "World"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "self", "type": "World"}, {"lineNumber": 168, "col_offset": 47, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 168, "col_offset": 59, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "all_possible_actions", "type": "Callable[[], List[str]]"}, {"lineNumber": 202, "col_offset": 11, "nodeName": "self", "type": "World"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "self", "type": "World"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "get_basic_types", "type": "Callable[[], Set[Any]]"}, {"lineNumber": 197, "col_offset": 46, "nodeName": "Type", "type": "Any"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 239, "col_offset": 57, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 241, "col_offset": 27, "nodeName": "sub", "type": "Callable"}, {"lineNumber": 241, "col_offset": 63, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 242, "col_offset": 22, "nodeName": "semparse_util", "type": "module"}, {"lineNumber": 243, "col_offset": 28, "nodeName": "self", "type": "World"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "local_type_signatures", "type": "Dict[str, Any]"}, {"lineNumber": 245, "col_offset": 8, "nodeName": "type_signature", "type": "Dict[str, Any]"}, {"lineNumber": 245, "col_offset": 30, "nodeName": "self", "type": "World"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "_logic_parser", "type": "allennlp.semparse.type_declarations.type_declaration.DynamicTypeLogicParser"}, {"lineNumber": 246, "col_offset": 69, "nodeName": "type_signature", "type": "Dict[str, Any]"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "self", "type": "World"}, {"lineNumber": 255, "col_offset": 48, "nodeName": "List", "type": "Any"}, {"lineNumber": 278, "col_offset": 29, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 278, "col_offset": 54, "nodeName": "action", "type": "str"}, {"lineNumber": 278, "col_offset": 64, "nodeName": "action_sequence", "type": "List[str]"}, {"lineNumber": 282, "col_offset": 32, "nodeName": "_construct_node_from_actions", "type": "Callable[[Any, List[List[str]], bool], List[List[str]]]"}, {"lineNumber": 283, "col_offset": 16, "nodeName": "tree", "type": "Any"}, {"lineNumber": 283, "col_offset": 45, "nodeName": "add_var_function", "type": "bool"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 290, "col_offset": 62, "nodeName": "action_sequence", "type": "List[str]"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 291, "col_offset": 55, "nodeName": "remaining_actions", "type": "List[List[str]]"}, {"lineNumber": 292, "col_offset": 18, "nodeName": "ParsingError", "type": "Type[allennlp.semparse.common.errors.ParsingError]"}, {"lineNumber": 296, "col_offset": 53, "nodeName": "List", "type": "Any"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 313, "col_offset": 74, "nodeName": "current_node", "type": "Any"}, {"lineNumber": 314, "col_offset": 18, "nodeName": "ParsingError", "type": "Type[allennlp.semparse.common.errors.ParsingError]"}, {"lineNumber": 315, "col_offset": 32, "nodeName": "remaining_actions", "type": "List[List[str]]"}, {"lineNumber": 316, "col_offset": 24, "nodeName": "label", "type": "Any"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "label", "type": "Any"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "mismatch", "type": "bool"}, {"lineNumber": 333, "col_offset": 11, "nodeName": "right_side", "type": "str"}, {"lineNumber": 335, "col_offset": 30, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "child_node", "type": "Any"}, {"lineNumber": 347, "col_offset": 13, "nodeName": "is_terminal", "type": "Callable[[str], bool]"}, {"lineNumber": 347, "col_offset": 30, "nodeName": "right_side", "type": "str"}, {"lineNumber": 297, "col_offset": 14, "nodeName": "List", "type": "Any"}, {"lineNumber": 387, "col_offset": 15, "nodeName": "char", "type": "str"}, {"lineNumber": 388, "col_offset": 16, "nodeName": "num_brackets", "type": "int"}, {"lineNumber": 396, "col_offset": 19, "nodeName": "_infer_num_arguments", "type": "Callable[[str], int]"}, {"lineNumber": 396, "col_offset": 44, "nodeName": "return_type", "type": "str"}, {"lineNumber": 406, "col_offset": 34, "nodeName": "expression_size", "type": "int"}, {"lineNumber": 406, "col_offset": 59, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 406, "col_offset": 92, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 407, "col_offset": 19, "nodeName": "_process_nested_expression", "type": "Callable[[Any], str]"}, {"lineNumber": 408, "col_offset": 31, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 408, "col_offset": 42, "nodeName": "element", "type": "Any"}, {"lineNumber": 408, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 408, "col_offset": 60, "nodeName": "element", "type": "Any"}, {"lineNumber": 408, "col_offset": 71, "nodeName": "nested_expression", "type": "Any"}, {"lineNumber": 413, "col_offset": 16, "nodeName": "element", "type": "Any"}, {"lineNumber": 413, "col_offset": 25, "nodeName": "is_leaf", "type": "Any"}, {"lineNumber": 413, "col_offset": 36, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 413, "col_offset": 40, "nodeName": "nested_expression", "type": "Any"}, {"lineNumber": 413, "col_offset": 59, "nodeName": "elements_are_leaves", "type": "List[bool]"}, {"lineNumber": 414, "col_offset": 19, "nodeName": "is_leaf", "type": "Any"}, {"lineNumber": 418, "col_offset": 11, "nodeName": "mapped_names", "type": "Union[List[Any], List[str]]"}, {"lineNumber": 456, "col_offset": 8, "nodeName": "self", "type": "World"}, {"lineNumber": 456, "col_offset": 32, "nodeName": "name", "type": "str"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "self", "type": "World"}, {"lineNumber": 457, "col_offset": 34, "nodeName": "translated_name", "type": "str"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "local_type_signatures", "type": "Dict[str, Any]"}, {"lineNumber": 461, "col_offset": 76, "nodeName": "List", "type": "Any"}, {"lineNumber": 476, "col_offset": 28, "nodeName": "self", "type": "World"}, {"lineNumber": 483, "col_offset": 30, "nodeName": "visit", "type": "Any"}, {"lineNumber": 484, "col_offset": 33, "nodeName": "type", "type": "Any"}, {"lineNumber": 486, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 486, "col_offset": 26, "nodeName": "expression", "type": "Any"}, {"lineNumber": 486, "col_offset": 38, "nodeName": "LambdaExpression", "type": "Any"}, {"lineNumber": 492, "col_offset": 16, "nodeName": "transformed_types", "type": "List[Any]"}, {"lineNumber": 511, "col_offset": 16, "nodeName": "transition", "type": "str"}, {"lineNumber": 517, "col_offset": 12, "nodeName": "original_name", "type": "str"}, {"lineNumber": 520, "col_offset": 12, "nodeName": "transition", "type": "str"}, {"lineNumber": 525, "col_offset": 28, "nodeName": "other", "type": "Any"}, {"lineNumber": 526, "col_offset": 19, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 526, "col_offset": 36, "nodeName": "__dict__", "type": "Any"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "name", "type": "str"}, {"lineNumber": 57, "col_offset": 40, "nodeName": "mapped_name", "type": "str"}, {"lineNumber": 57, "col_offset": 55, "nodeName": "items", "type": "Callable"}, {"lineNumber": 66, "col_offset": 54, "nodeName": "num_nested_lambdas", "type": "int"}, {"lineNumber": 68, "col_offset": 66, "nodeName": "self", "type": "World"}, {"lineNumber": 92, "col_offset": 22, "nodeName": "self", "type": "World"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "self", "type": "World"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "self", "type": "World"}, {"lineNumber": 100, "col_offset": 34, "nodeName": "types", "type": "module"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "get_name_mapping", "type": "Callable[[], Dict[str, str]]"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "get_type_signatures", "type": "Callable[[], Dict[str, str]]"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "get_basic_types", "type": "Callable[[], Set[Any]]"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "_num_nested_lambdas", "type": "int"}, {"lineNumber": 106, "col_offset": 36, "nodeName": "multi_match_mapping", "type": "Any"}, {"lineNumber": 97, "col_offset": 45, "nodeName": "List", "type": "Any"}, {"lineNumber": 119, "col_offset": 76, "nodeName": "action", "type": "str"}, {"lineNumber": 124, "col_offset": 19, "nodeName": "left_side", "type": "str"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "START_SYMBOL", "type": "str"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "need_to_expand", "type": "bool"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "need_to_expand", "type": "bool"}, {"lineNumber": 128, "col_offset": 61, "nodeName": "max_num_paths", "type": "int"}, {"lineNumber": 135, "col_offset": 20, "nodeName": "next_left_side", "type": "Any"}, {"lineNumber": 135, "col_offset": 36, "nodeName": "next_action", "type": "Any"}, {"lineNumber": 135, "col_offset": 51, "nodeName": "right_side_indexed_actions", "type": "Any"}, {"lineNumber": 139, "col_offset": 20, "nodeName": "new_actions", "type": "List[Any]"}, {"lineNumber": 142, "col_offset": 20, "nodeName": "path_length", "type": "int"}, {"lineNumber": 149, "col_offset": 41, "nodeName": "beam_size", "type": "int"}, {"lineNumber": 112, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "get_valid_actions", "type": "Callable[[], Dict[str, List[str]]]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "all_actions", "type": "Set[Any]"}, {"lineNumber": 157, "col_offset": 40, "nodeName": "i", "type": "int"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "self", "type": "World"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "production", "type": "str"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "self", "type": "World"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "left_side", "type": "str"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "right_side", "type": "str"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "right_side", "type": "str"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "right_side_parts", "type": "List[str]"}, {"lineNumber": 178, "col_offset": 24, "nodeName": "right_side_part", "type": "str"}, {"lineNumber": 178, "col_offset": 43, "nodeName": "right_side_parts", "type": "List[str]"}, {"lineNumber": 204, "col_offset": 26, "nodeName": "self", "type": "World"}, {"lineNumber": 206, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 206, "col_offset": 30, "nodeName": "basic_type", "type": "Any"}, {"lineNumber": 206, "col_offset": 42, "nodeName": "MultiMatchNamedBasicType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.MultiMatchNamedBasicType]"}, {"lineNumber": 207, "col_offset": 20, "nodeName": "matched_types", "type": "List[Any]"}, {"lineNumber": 213, "col_offset": 24, "nodeName": "type_", "type": "Any"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "types_to_match", "type": "Any"}, {"lineNumber": 216, "col_offset": 60, "nodeName": "matched_types", "type": "List[Any]"}, {"lineNumber": 197, "col_offset": 52, "nodeName": "List", "type": "Any"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 236, "col_offset": 31, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 239, "col_offset": 27, "nodeName": "re", "type": "module"}, {"lineNumber": 241, "col_offset": 27, "nodeName": "re", "type": "module"}, {"lineNumber": 244, "col_offset": 25, "nodeName": "self", "type": "World"}, {"lineNumber": 246, "col_offset": 15, "nodeName": "self", "type": "World"}, {"lineNumber": 255, "col_offset": 53, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 278, "col_offset": 29, "nodeName": "action", "type": "str"}, {"lineNumber": 279, "col_offset": 20, "nodeName": "remaining_actions", "type": "List[List[str]]"}, {"lineNumber": 282, "col_offset": 32, "nodeName": "self", "type": "World"}, {"lineNumber": 283, "col_offset": 22, "nodeName": "remaining_actions", "type": "List[List[str]]"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 286, "col_offset": 62, "nodeName": "action_sequence", "type": "List[str]"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 316, "col_offset": 24, "nodeName": "current_node", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 322, "col_offset": 28, "nodeName": "current_node", "type": "Any"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "current_label", "type": "Any"}, {"lineNumber": 324, "col_offset": 33, "nodeName": "multi_match_mapping", "type": "Dict[str, List[str]]"}, {"lineNumber": 325, "col_offset": 20, "nodeName": "left_side", "type": "str"}, {"lineNumber": 329, "col_offset": 16, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 329, "col_offset": 49, "nodeName": "current_node", "type": "Any"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 330, "col_offset": 54, "nodeName": "left_side", "type": "str"}, {"lineNumber": 330, "col_offset": 65, "nodeName": "right_side", "type": "str"}, {"lineNumber": 331, "col_offset": 16, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 331, "col_offset": 59, "nodeName": "remaining_actions", "type": "List[List[str]]"}, {"lineNumber": 332, "col_offset": 22, "nodeName": "ParsingError", "type": "Type[allennlp.semparse.common.errors.ParsingError]"}, {"lineNumber": 336, "col_offset": 19, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 340, "col_offset": 20, "nodeName": "child_type", "type": "str"}, {"lineNumber": 341, "col_offset": 29, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 341, "col_offset": 34, "nodeName": "child_type", "type": "str"}, {"lineNumber": 342, "col_offset": 16, "nodeName": "append", "type": "Any"}, {"lineNumber": 342, "col_offset": 36, "nodeName": "child_node", "type": "Any"}, {"lineNumber": 347, "col_offset": 13, "nodeName": "self", "type": "World"}, {"lineNumber": 350, "col_offset": 15, "nodeName": "add_var_function", "type": "bool"}, {"lineNumber": 351, "col_offset": 16, "nodeName": "right_side", "type": "str"}, {"lineNumber": 352, "col_offset": 15, "nodeName": "add_var_function", "type": "bool"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "append", "type": "Any"}, {"lineNumber": 361, "col_offset": 18, "nodeName": "ParsingError", "type": "Type[allennlp.semparse.common.errors.ParsingError]"}, {"lineNumber": 297, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 389, "col_offset": 17, "nodeName": "char", "type": "str"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "num_brackets", "type": "int"}, {"lineNumber": 395, "col_offset": 37, "nodeName": "char_index", "type": "int"}, {"lineNumber": 396, "col_offset": 19, "nodeName": "cls", "type": "Type[World]"}, {"lineNumber": 406, "col_offset": 70, "nodeName": "nested_expression", "type": "Any"}, {"lineNumber": 407, "col_offset": 19, "nodeName": "self", "type": "World"}, {"lineNumber": 407, "col_offset": 51, "nodeName": "nested_expression", "type": "Any"}, {"lineNumber": 410, "col_offset": 28, "nodeName": "_map_name", "type": "Callable[..., str]"}, {"lineNumber": 410, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 410, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 410, "col_offset": 61, "nodeName": "nested_expression", "type": "Any"}, {"lineNumber": 423, "col_offset": 41, "nodeName": "name", "type": "Any"}, {"lineNumber": 424, "col_offset": 19, "nodeName": "mapped_names", "type": "Union[List[Any], List[str]]"}, {"lineNumber": 424, "col_offset": 37, "nodeName": "join", "type": "Callable"}, {"lineNumber": 424, "col_offset": 46, "nodeName": "arguments", "type": "Union[List[str], List[Any]]"}, {"lineNumber": 459, "col_offset": 12, "nodeName": "self", "type": "World"}, {"lineNumber": 459, "col_offset": 39, "nodeName": "translated_name", "type": "str"}, {"lineNumber": 461, "col_offset": 81, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 483, "col_offset": 30, "nodeName": "expression", "type": "Any"}, {"lineNumber": 483, "col_offset": 57, "nodeName": "x", "type": "Any"}, {"lineNumber": 484, "col_offset": 33, "nodeName": "sub_exp", "type": "Any"}, {"lineNumber": 484, "col_offset": 50, "nodeName": "sub_exp", "type": "Any"}, {"lineNumber": 484, "col_offset": 61, "nodeName": "sub_expressions", "type": "Any"}, {"lineNumber": 492, "col_offset": 51, "nodeName": "transformed_types", "type": "List[Any]"}, {"lineNumber": 493, "col_offset": 17, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 493, "col_offset": 28, "nodeName": "expression", "type": "Any"}, {"lineNumber": 493, "col_offset": 40, "nodeName": "ApplicationExpression", "type": "Any"}, {"lineNumber": 495, "col_offset": 16, "nodeName": "function_type", "type": "Any"}, {"lineNumber": 495, "col_offset": 32, "nodeName": "type", "type": "Any"}, {"lineNumber": 512, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 512, "col_offset": 43, "nodeName": "transition", "type": "str"}, {"lineNumber": 514, "col_offset": 16, "nodeName": "_get_transitions", "type": "Callable[[Any, List[str]], List[str]]"}, {"lineNumber": 514, "col_offset": 38, "nodeName": "sub_expression", "type": "Any"}, {"lineNumber": 514, "col_offset": 54, "nodeName": "current_transitions", "type": "List[str]"}, {"lineNumber": 517, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 517, "col_offset": 32, "nodeName": "expression", "type": "Any"}, {"lineNumber": 518, "col_offset": 15, "nodeName": "original_name", "type": "str"}, {"lineNumber": 518, "col_offset": 32, "nodeName": "reverse_name_mapping", "type": "Dict[str, str]"}, {"lineNumber": 519, "col_offset": 16, "nodeName": "original_name", "type": "str"}, {"lineNumber": 521, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 521, "col_offset": 39, "nodeName": "transition", "type": "str"}, {"lineNumber": 526, "col_offset": 19, "nodeName": "self", "type": "World"}, {"lineNumber": 526, "col_offset": 36, "nodeName": "other", "type": "Any"}, {"lineNumber": 57, "col_offset": 55, "nodeName": "global_name_mapping", "type": "Union[Dict[str, str], Dict[nothing, nothing]]"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "self", "type": "World"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "self", "type": "World"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "self", "type": "World"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "get_valid_starting_types", "type": "Callable[[], Set[Any]]"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "self", "type": "World"}, {"lineNumber": 97, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "types", "type": "module"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 125, "col_offset": 43, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 128, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 128, "col_offset": 41, "nodeName": "completed_paths", "type": "List[List[str]]"}, {"lineNumber": 135, "col_offset": 78, "nodeName": "left_side", "type": "str"}, {"lineNumber": 136, "col_offset": 23, "nodeName": "next_action", "type": "Any"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 139, "col_offset": 39, "nodeName": "actions", "type": "List[str]"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "next_action", "type": "Any"}, {"lineNumber": 142, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 142, "col_offset": 38, "nodeName": "new_actions", "type": "List[Any]"}, {"lineNumber": 154, "col_offset": 26, "nodeName": "self", "type": "World"}, {"lineNumber": 157, "col_offset": 29, "nodeName": "ord", "type": "Callable[[Union[bytes, str]], int]"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "basic_type", "type": "Any"}, {"lineNumber": 159, "col_offset": 48, "nodeName": "lambda_var", "type": "str"}, {"lineNumber": 160, "col_offset": 16, "nodeName": "all_actions", "type": "Set[Any]"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "possible_action", "type": "str"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "append", "type": "Any"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 206, "col_offset": 42, "nodeName": "types", "type": "module"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "basic_type", "type": "Any"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "_multi_match_mapping", "type": "Dict[Any, List[Any]]"}, {"lineNumber": 197, "col_offset": 57, "nodeName": "Type", "type": "Any"}, {"lineNumber": 253, "col_offset": 53, "nodeName": "START_TYPE", "type": "allennlp.semparse.type_declarations.type_declaration.NamedBasicType"}, {"lineNumber": 253, "col_offset": 75, "nodeName": "type", "type": "Any"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 296, "col_offset": 58, "nodeName": "List", "type": "Any"}, {"lineNumber": 319, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 319, "col_offset": 31, "nodeName": "value", "type": "Any"}, {"lineNumber": 319, "col_offset": 42, "nodeName": "value", "type": "Any"}, {"lineNumber": 320, "col_offset": 20, "nodeName": "key", "type": "Any"}, {"lineNumber": 320, "col_offset": 25, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 320, "col_offset": 35, "nodeName": "items", "type": "Callable"}, {"lineNumber": 325, "col_offset": 33, "nodeName": "multi_match_mapping", "type": "Dict[str, List[str]]"}, {"lineNumber": 329, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 330, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 331, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 335, "col_offset": 30, "nodeName": "right_side", "type": "str"}, {"lineNumber": 336, "col_offset": 19, "nodeName": "child_type", "type": "str"}, {"lineNumber": 340, "col_offset": 33, "nodeName": "child_type", "type": "str"}, {"lineNumber": 342, "col_offset": 16, "nodeName": "current_node", "type": "Any"}, {"lineNumber": 343, "col_offset": 23, "nodeName": "is_terminal", "type": "Callable[[str], bool]"}, {"lineNumber": 343, "col_offset": 40, "nodeName": "child_type", "type": "str"}, {"lineNumber": 344, "col_offset": 40, "nodeName": "_construct_node_from_actions", "type": "Callable[[Any, List[List[str]], bool], List[List[str]]]"}, {"lineNumber": 345, "col_offset": 24, "nodeName": "child_node", "type": "Any"}, {"lineNumber": 345, "col_offset": 36, "nodeName": "remaining_actions", "type": "List[List[str]]"}, {"lineNumber": 345, "col_offset": 55, "nodeName": "add_var_function", "type": "bool"}, {"lineNumber": 350, "col_offset": 36, "nodeName": "right_side", "type": "str"}, {"lineNumber": 350, "col_offset": 50, "nodeName": "_lambda_variables", "type": "Set[str]"}, {"lineNumber": 352, "col_offset": 36, "nodeName": "right_side", "type": "str"}, {"lineNumber": 353, "col_offset": 22, "nodeName": "ParsingError", "type": "Type[allennlp.semparse.common.errors.ParsingError]"}, {"lineNumber": 354, "col_offset": 12, "nodeName": "current_node", "type": "Any"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 355, "col_offset": 21, "nodeName": "right_side", "type": "str"}, {"lineNumber": 391, "col_offset": 17, "nodeName": "char", "type": "str"}, {"lineNumber": 410, "col_offset": 28, "nodeName": "self", "type": "World"}, {"lineNumber": 415, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 417, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 421, "col_offset": 25, "nodeName": "mapped_names", "type": "Union[List[Any], List[str]]"}, {"lineNumber": 421, "col_offset": 61, "nodeName": "name", "type": "Any"}, {"lineNumber": 423, "col_offset": 29, "nodeName": "name", "type": "Any"}, {"lineNumber": 423, "col_offset": 49, "nodeName": "mapped_names", "type": "Union[List[Any], List[str]]"}, {"lineNumber": 494, "col_offset": 16, "nodeName": "function", "type": "Any"}, {"lineNumber": 494, "col_offset": 26, "nodeName": "arguments", "type": "Any"}, {"lineNumber": 494, "col_offset": 38, "nodeName": "uncurry", "type": "Any"}, {"lineNumber": 495, "col_offset": 32, "nodeName": "function", "type": "Any"}, {"lineNumber": 496, "col_offset": 19, "nodeName": "function_type", "type": "Any"}, {"lineNumber": 496, "col_offset": 36, "nodeName": "curried_functions", "type": "Dict[str, int]"}, {"lineNumber": 497, "col_offset": 20, "nodeName": "expected_num_arguments", "type": "int"}, {"lineNumber": 511, "col_offset": 32, "nodeName": "expression_type", "type": "Any"}, {"lineNumber": 511, "col_offset": 53, "nodeName": "transformed_types", "type": "Optional[List[Any]]"}, {"lineNumber": 512, "col_offset": 16, "nodeName": "current_transitions", "type": "List[str]"}, {"lineNumber": 514, "col_offset": 16, "nodeName": "self", "type": "World"}, {"lineNumber": 518, "col_offset": 32, "nodeName": "self", "type": "World"}, {"lineNumber": 519, "col_offset": 32, "nodeName": "reverse_name_mapping", "type": "Dict[str, str]"}, {"lineNumber": 520, "col_offset": 28, "nodeName": "expression_type", "type": "Any"}, {"lineNumber": 520, "col_offset": 49, "nodeName": "original_name", "type": "str"}, {"lineNumber": 521, "col_offset": 12, "nodeName": "current_transitions", "type": "List[str]"}, {"lineNumber": 57, "col_offset": 55, "nodeName": "self", "type": "World"}, {"lineNumber": 104, "col_offset": 37, "nodeName": "self", "type": "World"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "completed_paths", "type": "List[List[str]]"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "new_actions", "type": "List[Any]"}, {"lineNumber": 143, "col_offset": 23, "nodeName": "path_length", "type": "int"}, {"lineNumber": 143, "col_offset": 38, "nodeName": "max_path_length", "type": "int"}, {"lineNumber": 143, "col_offset": 57, "nodeName": "next_left_side", "type": "Any"}, {"lineNumber": 143, "col_offset": 75, "nodeName": "START_SYMBOL", "type": "str"}, {"lineNumber": 144, "col_offset": 27, "nodeName": "next_left_side", "type": "Any"}, {"lineNumber": 144, "col_offset": 45, "nodeName": "START_SYMBOL", "type": "str"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "left_side", "type": "str"}, {"lineNumber": 174, "col_offset": 36, "nodeName": "possible_action", "type": "str"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "append", "type": "Any"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "type_", "type": "Any"}, {"lineNumber": 214, "col_offset": 36, "nodeName": "basic_types", "type": "Set[Any]"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "self", "type": "World"}, {"lineNumber": 216, "col_offset": 46, "nodeName": "basic_type", "type": "Any"}, {"lineNumber": 253, "col_offset": 53, "nodeName": "types", "type": "module"}, {"lineNumber": 253, "col_offset": 75, "nodeName": "expression", "type": "Any"}, {"lineNumber": 296, "col_offset": 63, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 325, "col_offset": 53, "nodeName": "current_label", "type": "Any"}, {"lineNumber": 343, "col_offset": 23, "nodeName": "self", "type": "World"}, {"lineNumber": 344, "col_offset": 40, "nodeName": "self", "type": "World"}, {"lineNumber": 350, "col_offset": 50, "nodeName": "self", "type": "World"}, {"lineNumber": 351, "col_offset": 37, "nodeName": "right_side", "type": "str"}, {"lineNumber": 362, "col_offset": 50, "nodeName": "left_side", "type": "str"}, {"lineNumber": 362, "col_offset": 65, "nodeName": "right_side", "type": "str"}, {"lineNumber": 392, "col_offset": 19, "nodeName": "num_brackets", "type": "int"}, {"lineNumber": 415, "col_offset": 20, "nodeName": "mapped_names", "type": "List[Any]"}, {"lineNumber": 415, "col_offset": 40, "nodeName": "_map_name", "type": "Callable[..., str]"}, {"lineNumber": 415, "col_offset": 55, "nodeName": "element", "type": "Any"}, {"lineNumber": 417, "col_offset": 20, "nodeName": "mapped_names", "type": "List[Any]"}, {"lineNumber": 417, "col_offset": 40, "nodeName": "_process_nested_expression", "type": "Callable[[Any], str]"}, {"lineNumber": 417, "col_offset": 72, "nodeName": "element", "type": "Any"}, {"lineNumber": 421, "col_offset": 49, "nodeName": "name", "type": "Any"}, {"lineNumber": 421, "col_offset": 69, "nodeName": "mapped_names", "type": "Union[List[Any], List[str]]"}, {"lineNumber": 494, "col_offset": 38, "nodeName": "expression", "type": "Any"}, {"lineNumber": 497, "col_offset": 45, "nodeName": "curried_functions", "type": "Dict[str, int]"}, {"lineNumber": 498, "col_offset": 41, "nodeName": "expected_num_arguments", "type": "int"}, {"lineNumber": 508, "col_offset": 24, "nodeName": "transformed_types", "type": "None"}, {"lineNumber": 519, "col_offset": 32, "nodeName": "self", "type": "World"}, {"lineNumber": 519, "col_offset": 58, "nodeName": "original_name", "type": "str"}, {"lineNumber": 143, "col_offset": 75, "nodeName": "types", "type": "module"}, {"lineNumber": 144, "col_offset": 45, "nodeName": "types", "type": "module"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "append", "type": "Callable"}, {"lineNumber": 147, "col_offset": 28, "nodeName": "append", "type": "Callable"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "_right_side_indexed_actions", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 177, "col_offset": 39, "nodeName": "right_side", "type": "str"}, {"lineNumber": 180, "col_offset": 29, "nodeName": "left_side", "type": "str"}, {"lineNumber": 180, "col_offset": 40, "nodeName": "possible_action", "type": "str"}, {"lineNumber": 215, "col_offset": 28, "nodeName": "append", "type": "Callable"}, {"lineNumber": 215, "col_offset": 49, "nodeName": "type_", "type": "Any"}, {"lineNumber": 320, "col_offset": 35, "nodeName": "get_multi_match_mapping", "type": "Callable[[], Dict[Any, List[Any]]]"}, {"lineNumber": 415, "col_offset": 40, "nodeName": "self", "type": "World"}, {"lineNumber": 417, "col_offset": 40, "nodeName": "self", "type": "World"}, {"lineNumber": 497, "col_offset": 63, "nodeName": "function_type", "type": "Any"}, {"lineNumber": 498, "col_offset": 23, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 498, "col_offset": 27, "nodeName": "arguments", "type": "Any"}, {"lineNumber": 145, "col_offset": 28, "nodeName": "finished_new_lists", "type": "List[Tuple[Any, List[Any]]]"}, {"lineNumber": 145, "col_offset": 55, "nodeName": "next_left_side", "type": "Any"}, {"lineNumber": 145, "col_offset": 71, "nodeName": "new_actions", "type": "List[Any]"}, {"lineNumber": 147, "col_offset": 28, "nodeName": "unfinished_new_lists", "type": "List[Tuple[Any, List[Any]]]"}, {"lineNumber": 147, "col_offset": 57, "nodeName": "next_left_side", "type": "Any"}, {"lineNumber": 147, "col_offset": 73, "nodeName": "new_actions", "type": "List[Any]"}, {"lineNumber": 173, "col_offset": 20, "nodeName": "self", "type": "World"}, {"lineNumber": 173, "col_offset": 53, "nodeName": "right_side", "type": "str"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "_right_side_indexed_actions", "type": "collections.defaultdict[str, Any]"}, {"lineNumber": 215, "col_offset": 28, "nodeName": "matched_types", "type": "List[Any]"}, {"lineNumber": 320, "col_offset": 35, "nodeName": "self", "type": "World"}, {"lineNumber": 502, "col_offset": 45, "nodeName": "type", "type": "Any"}, {"lineNumber": 503, "col_offset": 28, "nodeName": "type", "type": "Any"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "self", "type": "World"}, {"lineNumber": 179, "col_offset": 57, "nodeName": "right_side_part", "type": "str"}, {"lineNumber": 502, "col_offset": 45, "nodeName": "function", "type": "Any"}, {"lineNumber": 503, "col_offset": 28, "nodeName": "argument", "type": "Any"}, {"lineNumber": 503, "col_offset": 46, "nodeName": "argument", "type": "Any"}, {"lineNumber": 503, "col_offset": 58, "nodeName": "arguments", "type": "Any"}]