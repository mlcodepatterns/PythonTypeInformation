[{"lineNumber": 11, "col_offset": 15, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 12, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "test_get_valid_tokens_mask", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "test_ngrams", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "test_bleu_computed_correctly", "type": "Callable[[Any], Any]"}, {"lineNumber": 84, "col_offset": 4, "nodeName": "test_bleu_computed_with_zero_counts", "type": "Callable[[Any], Any]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "check", "type": "numpy.ndarray"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "unigram_check", "type": "Dict[Tuple[int], int]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "bigram_check", "type": "Dict[Tuple[int, int], int]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "trigram_check", "type": "Dict[Tuple[int, int, int], int]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "gold_targets", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "bleu", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "check", "type": "float"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "BleuTest"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "BLEU", "type": "Any"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "_get_valid_tokens_mask", "type": "Any"}, {"lineNumber": 18, "col_offset": 52, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 21, "col_offset": 38, "nodeName": "result", "type": "Any"}, {"lineNumber": 21, "col_offset": 46, "nodeName": "check", "type": "numpy.ndarray"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 27, "col_offset": 17, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "unigram_check", "type": "Dict[Tuple[int], int]"}, {"lineNumber": 32, "col_offset": 17, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "bigram_check", "type": "Dict[Tuple[int, int], int]"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 39, "col_offset": 25, "nodeName": "trigram_check", "type": "Dict[Tuple[int, int, int], int]"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "Counter", "type": "Type[Counter[Any]]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "counts", "type": "Counter[nothing]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "gold_targets", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "_prediction_lengths", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "_reference_lengths", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "assert_approx_equal", "type": "Any"}, {"lineNumber": 82, "col_offset": 39, "nodeName": "bleu", "type": "Any"}, {"lineNumber": 82, "col_offset": 45, "nodeName": "check", "type": "float"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "metric", "type": "Any"}, {"lineNumber": 20, "col_offset": 16, "nodeName": "np", "type": "module"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "_ngrams", "type": "Any"}, {"lineNumber": 27, "col_offset": 45, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "_ngrams", "type": "Any"}, {"lineNumber": 32, "col_offset": 45, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "_ngrams", "type": "Any"}, {"lineNumber": 37, "col_offset": 45, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "_ngrams", "type": "Any"}, {"lineNumber": 42, "col_offset": 45, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 49, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "BleuTest"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "_precision_matches", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "_precision_totals", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "_precision_matches", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "_precision_totals", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "_get_brevity_penalty", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "math", "type": "module"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "metric", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 18, "col_offset": 17, "nodeName": "self", "type": "BleuTest"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "long", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "BleuTest"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "self", "type": "BleuTest"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "self", "type": "BleuTest"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "BleuTest"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "result", "type": "Any"}, {"lineNumber": 27, "col_offset": 25, "nodeName": "self", "type": "BleuTest"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "self", "type": "BleuTest"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "self", "type": "BleuTest"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "self", "type": "BleuTest"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "self", "type": "BleuTest"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "self", "type": "BleuTest"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "self", "type": "BleuTest"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "self", "type": "BleuTest"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "self", "type": "BleuTest"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "self", "type": "BleuTest"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "metric", "type": "Any"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 81, "col_offset": 68, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 81, "col_offset": 82, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "self", "type": "BleuTest"}, {"lineNumber": 81, "col_offset": 32, "nodeName": "math", "type": "module"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "math", "type": "module"}, {"lineNumber": 81, "col_offset": 68, "nodeName": "math", "type": "module"}, {"lineNumber": 81, "col_offset": 82, "nodeName": "math", "type": "module"}]