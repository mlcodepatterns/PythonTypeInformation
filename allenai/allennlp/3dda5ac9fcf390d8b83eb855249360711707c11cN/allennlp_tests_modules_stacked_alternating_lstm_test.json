[{"lineNumber": 9, "col_offset": 33, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 10, "col_offset": 4, "nodeName": "test_stacked_alternating_lstm_completes_forward_pass", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "test_lstms_are_interleaved", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 11, "col_offset": 23, "nodeName": "rand", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 15, "col_offset": 23, "nodeName": "pack_padded_sequence", "type": "Any"}, {"lineNumber": 15, "col_offset": 44, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "StackedAlternatingLstm", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "output", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 17, "col_offset": 20, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 18, "col_offset": 25, "nodeName": "_", "type": "Any"}, {"lineNumber": 18, "col_offset": 29, "nodeName": "pad_packed_sequence", "type": "Any"}, {"lineNumber": 18, "col_offset": 49, "nodeName": "output", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "StackedAlternatingLstm", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "layer", "type": "Any"}, {"lineNumber": 25, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 25, "col_offset": 34, "nodeName": "lstm_layers", "type": "Any"}, {"lineNumber": 11, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 19, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 20, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 21, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 25, "col_offset": 34, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "go_forward", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "layer", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "go_forward", "type": "Any"}, {"lineNumber": 19, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 20, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 21, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "layer", "type": "Any"}, {"lineNumber": 19, "col_offset": 41, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 20, "col_offset": 41, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 21, "col_offset": 41, "nodeName": "output_sequence", "type": "Any"}]