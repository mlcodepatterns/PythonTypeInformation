[{"lineNumber": 8, "col_offset": 45, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 9, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "test_read_from_file", "type": "Callable[[Any], Any]"}, {"lineNumber": 193, "col_offset": 4, "nodeName": "test_strip_functional_tags", "type": "Callable[[Any], Any]"}, {"lineNumber": 204, "col_offset": 4, "nodeName": "test_get_gold_spans_correctly_extracts_spans", "type": "Callable[[Any], Any]"}, {"lineNumber": 213, "col_offset": 4, "nodeName": "test_get_gold_spans_correctly_extracts_spans_with_nested_labels", "type": "Callable[[Any], Any]"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "span_width", "type": "int"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "ptb_reader", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "instances", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "fields", "type": "Any"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "fields", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "pos_tags", "type": "Any"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "labels", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "span_labels", "type": "Any"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "labels", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "correct_spans_and_labels", "type": "Dict[nothing, nothing]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "fields", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "fields", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "pos_tags", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "labels", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "span_labels", "type": "Any"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "labels", "type": "Any"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "correct_spans_and_labels", "type": "Dict[nothing, nothing]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "ptb_reader", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "ptb_reader", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "span_dict", "type": "Dict[nothing, nothing]"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[nothing, nothing]]"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "ptb_reader", "type": "Any"}, {"lineNumber": 258, "col_offset": 8, "nodeName": "span_dict", "type": "Dict[nothing, nothing]"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "self", "type": "TestPennTreeBankConstituencySpanReader"}, {"lineNumber": 15, "col_offset": 21, "nodeName": "PennTreeBankConstituencySpanDatasetReader", "type": "Any"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "read", "type": "Any"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "text", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "pos_tags", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "spans", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "fromstring", "type": "Any"}, {"lineNumber": 120, "col_offset": 59, "nodeName": "gold_tree", "type": "Any"}, {"lineNumber": 121, "col_offset": 56, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "_get_gold_spans", "type": "Any"}, {"lineNumber": 124, "col_offset": 35, "nodeName": "gold_tree", "type": "Any"}, {"lineNumber": 124, "col_offset": 49, "nodeName": "correct_spans_and_labels", "type": "Dict[nothing, nothing]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "span", "type": "Any"}, {"lineNumber": 125, "col_offset": 18, "nodeName": "label", "type": "Any"}, {"lineNumber": 125, "col_offset": 27, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "spans", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "span_labels", "type": "Any"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "text", "type": "Any"}, {"lineNumber": 135, "col_offset": 15, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "pos_tags", "type": "Any"}, {"lineNumber": 175, "col_offset": 15, "nodeName": "spans", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "fromstring", "type": "Any"}, {"lineNumber": 184, "col_offset": 59, "nodeName": "gold_tree", "type": "Any"}, {"lineNumber": 185, "col_offset": 56, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "_get_gold_spans", "type": "Any"}, {"lineNumber": 188, "col_offset": 35, "nodeName": "gold_tree", "type": "Any"}, {"lineNumber": 188, "col_offset": 49, "nodeName": "correct_spans_and_labels", "type": "Dict[nothing, nothing]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "span", "type": "Any"}, {"lineNumber": 189, "col_offset": 18, "nodeName": "label", "type": "Any"}, {"lineNumber": 189, "col_offset": 27, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 189, "col_offset": 31, "nodeName": "spans", "type": "List[Tuple[Any, Any]]"}, {"lineNumber": 189, "col_offset": 38, "nodeName": "span_labels", "type": "Any"}, {"lineNumber": 194, "col_offset": 21, "nodeName": "PennTreeBankConstituencySpanDatasetReader", "type": "Any"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "fromstring", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "_strip_functional_tags", "type": "Any"}, {"lineNumber": 199, "col_offset": 42, "nodeName": "tree", "type": "Any"}, {"lineNumber": 200, "col_offset": 15, "nodeName": "tree", "type": "Any"}, {"lineNumber": 205, "col_offset": 21, "nodeName": "PennTreeBankConstituencySpanDatasetReader", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "fromstring", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "_get_gold_spans", "type": "Any"}, {"lineNumber": 209, "col_offset": 35, "nodeName": "tree", "type": "Any"}, {"lineNumber": 209, "col_offset": 44, "nodeName": "span_dict", "type": "Dict[nothing, nothing]"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "spans", "type": "List[Tuple[nothing, nothing]]"}, {"lineNumber": 214, "col_offset": 21, "nodeName": "PennTreeBankConstituencySpanDatasetReader", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "fromstring", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "_strip_functional_tags", "type": "Any"}, {"lineNumber": 259, "col_offset": 42, "nodeName": "tree", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "_get_gold_spans", "type": "Any"}, {"lineNumber": 260, "col_offset": 35, "nodeName": "tree", "type": "Any"}, {"lineNumber": 260, "col_offset": 44, "nodeName": "span_dict", "type": "Dict[nothing, nothing]"}, {"lineNumber": 261, "col_offset": 15, "nodeName": "span_dict", "type": "Dict[nothing, nothing]"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "ptb_reader", "type": "Any"}, {"lineNumber": 16, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "instances", "type": "Any"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "instances", "type": "Any"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 21, "col_offset": 34, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "fields", "type": "Any"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 23, "col_offset": 32, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 23, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 23, "col_offset": 53, "nodeName": "field_list", "type": "Any"}, {"lineNumber": 24, "col_offset": 22, "nodeName": "fields", "type": "Any"}, {"lineNumber": 107, "col_offset": 24, "nodeName": "enumerate_spans", "type": "Any"}, {"lineNumber": 107, "col_offset": 40, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "ptb_reader", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "label", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "instances", "type": "Any"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 130, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 131, "col_offset": 19, "nodeName": "fields", "type": "Any"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 132, "col_offset": 32, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 132, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 132, "col_offset": 53, "nodeName": "field_list", "type": "Any"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "fields", "type": "Any"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "enumerate_spans", "type": "Any"}, {"lineNumber": 175, "col_offset": 40, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "ptb_reader", "type": "Any"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "label", "type": "Any"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "ptb_reader", "type": "Any"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "fromstring", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "ptb_reader", "type": "Any"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "items", "type": "Callable"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "ptb_reader", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "ptb_reader", "type": "Any"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 23, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 127, "col_offset": 57, "nodeName": "label", "type": "Any"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "x", "type": "Any"}, {"lineNumber": 132, "col_offset": 32, "nodeName": "x", "type": "Any"}, {"lineNumber": 191, "col_offset": 57, "nodeName": "label", "type": "Any"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "span_dict", "type": "Dict[nothing, nothing]"}, {"lineNumber": 16, "col_offset": 40, "nodeName": "FIXTURES_ROOT", "type": "Any"}, {"lineNumber": 21, "col_offset": 34, "nodeName": "fields", "type": "Any"}, {"lineNumber": 23, "col_offset": 53, "nodeName": "fields", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "fields", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "fields", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "correct_spans_and_labels", "type": "Dict[nothing, nothing]"}, {"lineNumber": 130, "col_offset": 34, "nodeName": "fields", "type": "Any"}, {"lineNumber": 132, "col_offset": 53, "nodeName": "fields", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "fields", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "fields", "type": "Any"}, {"lineNumber": 191, "col_offset": 23, "nodeName": "correct_spans_and_labels", "type": "Dict[nothing, nothing]"}, {"lineNumber": 16, "col_offset": 40, "nodeName": "self", "type": "TestPennTreeBankConstituencySpanReader"}, {"lineNumber": 127, "col_offset": 48, "nodeName": "span", "type": "Any"}, {"lineNumber": 191, "col_offset": 48, "nodeName": "span", "type": "Any"}]