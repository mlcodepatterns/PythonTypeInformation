[{"lineNumber": 9, "col_offset": 0, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "input_lines", "type": "List[nothing]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "training", "type": "bool"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "_max_num_decoded_sequences", "type": "int"}, {"lineNumber": 62, "col_offset": 3, "nodeName": "__name__", "type": "str"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "argparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 77, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "path", "type": "List[str]"}, {"lineNumber": 10, "col_offset": 7, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 19, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 23, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "WikiTablesDatasetReader", "type": "Any"}, {"lineNumber": 28, "col_offset": 14, "nodeName": "read", "type": "Any"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "input_examples_file", "type": "str"}, {"lineNumber": 30, "col_offset": 38, "nodeName": "input_file", "type": "TextIO"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "input_lines", "type": "List[str]"}, {"lineNumber": 32, "col_offset": 14, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "archived_model_file", "type": "str"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "archive", "type": "allennlp.models.archival.Archive"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "_decoder_trainer", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "instance", "type": "Any"}, {"lineNumber": 36, "col_offset": 18, "nodeName": "example_line", "type": "Any"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 36, "col_offset": 38, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 36, "col_offset": 47, "nodeName": "input_lines", "type": "List[str]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "outputs", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "world", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "metadata", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "parsed_info", "type": "Dict[Any, Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "example_id", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "target_list", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "logical_forms", "type": "numpy.ndarray"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "correct_logical_forms", "type": "List[Any]"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "logical_form", "type": "Any"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "logical_forms", "type": "numpy.ndarray"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "num_found", "type": "int"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "output_file", "type": "IO[Any]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "logical_form", "type": "Any"}, {"lineNumber": 56, "col_offset": 28, "nodeName": "correct_logical_forms", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 78, "col_offset": 4, "nodeName": "make_data", "type": "Callable[[str, str, str, str, int], None]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "input", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "tables_directory", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "archived_model", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "output_dir", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "num_logical_forms", "type": "Any"}, {"lineNumber": 9, "col_offset": 0, "nodeName": "sys", "type": "module"}, {"lineNumber": 10, "col_offset": 7, "nodeName": "path", "type": "module"}, {"lineNumber": 10, "col_offset": 23, "nodeName": "dirname", "type": "Callable"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "tables_directory", "type": "str"}, {"lineNumber": 28, "col_offset": 14, "nodeName": "reader", "type": "Any"}, {"lineNumber": 30, "col_offset": 9, "nodeName": "open", "type": "Callable"}, {"lineNumber": 30, "col_offset": 14, "nodeName": "input_examples_file", "type": "str"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "readlines", "type": "Callable"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "forward_on_instance", "type": "Callable[[allennlp.data.instance.Instance], Dict[str, numpy.ndarray]]"}, {"lineNumber": 37, "col_offset": 44, "nodeName": "instance", "type": "Any"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "parse_example_line", "type": "Callable[[str], Dict[Any, Any]]"}, {"lineNumber": 39, "col_offset": 46, "nodeName": "example_line", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "parsed_info", "type": "Dict[Any, Any]"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "parsed_info", "type": "Dict[Any, Any]"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "outputs", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "correct_logical_forms", "type": "List[Any]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 11, "nodeName": "num_found", "type": "int"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "open", "type": "Callable[..., IO[Any]]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "logical_form_line", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "close", "type": "Callable[[], None]"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "argparse", "type": "module"}, {"lineNumber": 64, "col_offset": 4, "nodeName": "argparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 65, "col_offset": 4, "nodeName": "argparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 65, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "argparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 66, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 67, "col_offset": 4, "nodeName": "argparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 70, "col_offset": 4, "nodeName": "argparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "argparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 10, "col_offset": 7, "nodeName": "os", "type": "module"}, {"lineNumber": 10, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 10, "col_offset": 39, "nodeName": "abspath", "type": "Callable"}, {"lineNumber": 31, "col_offset": 22, "nodeName": "input_file", "type": "TextIO"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "fields", "type": "Any"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "util", "type": "module"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "evaluate_logical_form", "type": "Any"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "logical_form", "type": "Any"}, {"lineNumber": 45, "col_offset": 57, "nodeName": "target_list", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 55, "col_offset": 22, "nodeName": "gzip", "type": "module"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "join", "type": "Callable"}, {"lineNumber": 55, "col_offset": 45, "nodeName": "output_dir", "type": "str"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "encode", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "write", "type": "Callable"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "logical_form_line", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "output_file", "type": "IO[Any]"}, {"lineNumber": 10, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 10, "col_offset": 39, "nodeName": "path", "type": "module"}, {"lineNumber": 10, "col_offset": 55, "nodeName": "join", "type": "Callable"}, {"lineNumber": 10, "col_offset": 68, "nodeName": "__file__", "type": "str"}, {"lineNumber": 10, "col_offset": 78, "nodeName": "pardir", "type": "str"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "instance", "type": "Any"}, {"lineNumber": 45, "col_offset": 15, "nodeName": "world", "type": "Any"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 46, "col_offset": 45, "nodeName": "logical_form", "type": "Any"}, {"lineNumber": 47, "col_offset": 49, "nodeName": "num_logical_forms", "type": "int"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "num_found", "type": "int"}, {"lineNumber": 50, "col_offset": 39, "nodeName": "example_id", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "os", "type": "module"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "path", "type": "module"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "output_file", "type": "IO[Any]"}, {"lineNumber": 10, "col_offset": 39, "nodeName": "os", "type": "module"}, {"lineNumber": 10, "col_offset": 55, "nodeName": "path", "type": "module"}, {"lineNumber": 10, "col_offset": 78, "nodeName": "os", "type": "module"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "correct_logical_forms", "type": "List[Any]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "correct_logical_forms", "type": "List[Any]"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "os", "type": "module"}, {"lineNumber": 55, "col_offset": 60, "nodeName": "example_id", "type": "Any"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "logical_form", "type": "Any"}, {"lineNumber": 10, "col_offset": 55, "nodeName": "os", "type": "module"}]