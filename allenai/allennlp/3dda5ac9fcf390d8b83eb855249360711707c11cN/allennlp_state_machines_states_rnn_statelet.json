[{"lineNumber": 58, "col_offset": 8, "nodeName": "hidden_state", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "hidden_state", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "memory_cell", "type": "Any"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "memory_cell", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "previous_action_embedding", "type": "Any"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "previous_action_embedding", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "attended_input", "type": "Any"}, {"lineNumber": 61, "col_offset": 30, "nodeName": "attended_input", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "encoder_outputs", "type": "List[Any]"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "encoder_outputs", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "encoder_output_mask", "type": "List[Any]"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "encoder_output_mask", "type": "List[Any]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "NotImplemented", "type": "NotImplementedType"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "RnnStatelet"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "RnnStatelet"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "RnnStatelet"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "RnnStatelet"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "RnnStatelet"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "RnnStatelet"}, {"lineNumber": 66, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "self", "type": "RnnStatelet"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 53, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "List", "type": "Any"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "List", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "other", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "tensors_equal", "type": "Callable[..., bool]"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "hidden_state", "type": "Any"}, {"lineNumber": 69, "col_offset": 58, "nodeName": "hidden_state", "type": "Any"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "tensors_equal", "type": "Callable[..., bool]"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "memory_cell", "type": "Any"}, {"lineNumber": 70, "col_offset": 57, "nodeName": "memory_cell", "type": "Any"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "tensors_equal", "type": "Callable[..., bool]"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "previous_action_embedding", "type": "Any"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "previous_action_embedding", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "tensors_equal", "type": "Callable[..., bool]"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "attended_input", "type": "Any"}, {"lineNumber": 76, "col_offset": 60, "nodeName": "attended_input", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "tensors_equal", "type": "Callable[..., bool]"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "encoder_outputs", "type": "List[Any]"}, {"lineNumber": 77, "col_offset": 61, "nodeName": "encoder_outputs", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "tensors_equal", "type": "Callable[..., bool]"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "encoder_output_mask", "type": "List[Any]"}, {"lineNumber": 79, "col_offset": 50, "nodeName": "encoder_output_mask", "type": "Any"}, {"lineNumber": 69, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 69, "col_offset": 39, "nodeName": "self", "type": "RnnStatelet"}, {"lineNumber": 69, "col_offset": 58, "nodeName": "other", "type": "Any"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 70, "col_offset": 39, "nodeName": "self", "type": "RnnStatelet"}, {"lineNumber": 70, "col_offset": 57, "nodeName": "other", "type": "Any"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "self", "type": "RnnStatelet"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "other", "type": "Any"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "self", "type": "RnnStatelet"}, {"lineNumber": 76, "col_offset": 60, "nodeName": "other", "type": "Any"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "self", "type": "RnnStatelet"}, {"lineNumber": 77, "col_offset": 61, "nodeName": "other", "type": "Any"}, {"lineNumber": 78, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "self", "type": "RnnStatelet"}, {"lineNumber": 79, "col_offset": 50, "nodeName": "other", "type": "Any"}]