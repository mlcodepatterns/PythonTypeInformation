[{"lineNumber": 18, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 22, "col_offset": 32, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 18, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "text_embed_dim", "type": "int"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "encoding_in_dim", "type": "int"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "encoding_out_dim", "type": "int"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "modeling_in_dim", "type": "int"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "modeling_out_dim", "type": "int"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "_text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "_embedding_proj_layer", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "_highway_layer", "type": "allennlp.modules.highway.Highway"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "_encoding_proj_layer", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "_phrase_layer", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "phrase_layer", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "_matrix_attention", "type": "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "matrix_attention_layer", "type": "allennlp.modules.matrix_attention.matrix_attention.MatrixAttention"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "_modeling_proj_layer", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "_modeling_layer", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "modeling_layer", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "_passage_weights_predictor", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "_question_weights_predictor", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "_drop_metrics", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "question_mask", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "passage_mask", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "embedded_question", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "embedded_passage", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "embedded_question", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "embedded_passage", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "projected_embedded_question", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "projected_embedded_passage", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "passage_question_similarity", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "passage_question_vectors", "type": "Any"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "modeled_passage_list", "type": "List[Any]"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "_", "type": "int"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "passage_weights", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "passage_weights", "type": "Any"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "passage_vector", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "question_weights", "type": "Any"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "question_weights", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "question_vector", "type": "Any"}, {"lineNumber": 405, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 636, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 160, "col_offset": 9, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 638, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "regularizer", "type": "Optional[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "answering_abilities", "type": "List[str]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "answering_abilities", "type": "List[str]"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "answering_abilities", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 68, "col_offset": 53, "nodeName": "text_embed_dim", "type": "int"}, {"lineNumber": 68, "col_offset": 69, "nodeName": "encoding_in_dim", "type": "int"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 30, "nodeName": "Highway", "type": "Type[allennlp.modules.highway.Highway]"}, {"lineNumber": 69, "col_offset": 38, "nodeName": "encoding_in_dim", "type": "int"}, {"lineNumber": 69, "col_offset": 55, "nodeName": "num_highway_layers", "type": "int"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 71, "col_offset": 52, "nodeName": "encoding_in_dim", "type": "int"}, {"lineNumber": 71, "col_offset": 69, "nodeName": "encoding_in_dim", "type": "int"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 76, "col_offset": 74, "nodeName": "modeling_in_dim", "type": "int"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 79, "col_offset": 58, "nodeName": "modeling_out_dim", "type": "int"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 80, "col_offset": 59, "nodeName": "encoding_out_dim", "type": "int"}, {"lineNumber": 91, "col_offset": 40, "nodeName": "answering_abilities", "type": "List[str]"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "answering_abilities", "type": "List[str]"}, {"lineNumber": 125, "col_offset": 37, "nodeName": "answering_abilities", "type": "List[str]"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "answering_abilities", "type": "List[str]"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "_counting_index", "type": "int"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "DropEmAndF1", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "float", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "float", "type": "Any"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "_highway_layer", "type": "Any"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "_highway_layer", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 171, "col_offset": 38, "nodeName": "_encoding_proj_layer", "type": "Any"}, {"lineNumber": 171, "col_offset": 64, "nodeName": "embedded_question", "type": "Any"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "_encoding_proj_layer", "type": "Any"}, {"lineNumber": 172, "col_offset": 63, "nodeName": "embedded_passage", "type": "Any"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 182, "col_offset": 38, "nodeName": "_matrix_attention", "type": "Any"}, {"lineNumber": 182, "col_offset": 61, "nodeName": "encoded_passage", "type": "Any"}, {"lineNumber": 182, "col_offset": 78, "nodeName": "encoded_question", "type": "Any"}, {"lineNumber": 184, "col_offset": 37, "nodeName": "masked_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "passage_question_similarity", "type": "Any"}, {"lineNumber": 185, "col_offset": 41, "nodeName": "question_mask", "type": "Any"}, {"lineNumber": 188, "col_offset": 35, "nodeName": "weighted_sum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 188, "col_offset": 53, "nodeName": "encoded_question", "type": "Any"}, {"lineNumber": 188, "col_offset": 71, "nodeName": "passage_question_attention", "type": "Any"}, {"lineNumber": 191, "col_offset": 37, "nodeName": "masked_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 192, "col_offset": 57, "nodeName": "passage_mask", "type": "Any"}, {"lineNumber": 196, "col_offset": 44, "nodeName": "bmm", "type": "Any"}, {"lineNumber": 197, "col_offset": 12, "nodeName": "passage_question_attention", "type": "Any"}, {"lineNumber": 197, "col_offset": 40, "nodeName": "question_passage_attention", "type": "Any"}, {"lineNumber": 200, "col_offset": 34, "nodeName": "weighted_sum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "encoded_passage", "type": "Any"}, {"lineNumber": 201, "col_offset": 29, "nodeName": "passsage_attention_over_attention", "type": "Any"}, {"lineNumber": 205, "col_offset": 43, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 220, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "pop", "type": "Callable"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 230, "col_offset": 26, "nodeName": "masked_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 230, "col_offset": 41, "nodeName": "passage_weights", "type": "Any"}, {"lineNumber": 230, "col_offset": 58, "nodeName": "passage_mask", "type": "Any"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "weighted_sum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 231, "col_offset": 68, "nodeName": "passage_weights", "type": "Any"}, {"lineNumber": 234, "col_offset": 27, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 235, "col_offset": 27, "nodeName": "masked_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 235, "col_offset": 42, "nodeName": "question_weights", "type": "Any"}, {"lineNumber": 235, "col_offset": 60, "nodeName": "question_mask", "type": "Any"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "weighted_sum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 236, "col_offset": 44, "nodeName": "encoded_question", "type": "Any"}, {"lineNumber": 236, "col_offset": 62, "nodeName": "question_weights", "type": "Any"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "answer_ability_log_probs", "type": "Any"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "best_answer_ability", "type": "Any"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "answering_abilities", "type": "Any"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "count_number_logits", "type": "Any"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "count_number_log_probs", "type": "Any"}, {"lineNumber": 252, "col_offset": 12, "nodeName": "best_count_number", "type": "Any"}, {"lineNumber": 259, "col_offset": 40, "nodeName": "answering_abilities", "type": "Any"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "best_passage_span", "type": "Any"}, {"lineNumber": 301, "col_offset": 12, "nodeName": "best_passage_span_log_prob", "type": "Any"}, {"lineNumber": 307, "col_offset": 41, "nodeName": "answering_abilities", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "best_question_span", "type": "Any"}, {"lineNumber": 355, "col_offset": 37, "nodeName": "answering_abilities", "type": "Any"}, {"lineNumber": 357, "col_offset": 12, "nodeName": "number_indices", "type": "Any"}, {"lineNumber": 358, "col_offset": 12, "nodeName": "number_mask", "type": "Any"}, {"lineNumber": 359, "col_offset": 12, "nodeName": "clamped_number_indices", "type": "Any"}, {"lineNumber": 381, "col_offset": 12, "nodeName": "number_sign_logits", "type": "Any"}, {"lineNumber": 382, "col_offset": 12, "nodeName": "number_sign_log_probs", "type": "Any"}, {"lineNumber": 385, "col_offset": 12, "nodeName": "best_signs_for_numbers", "type": "Any"}, {"lineNumber": 397, "col_offset": 12, "nodeName": "best_signs_log_probs", "type": "Any"}, {"lineNumber": 399, "col_offset": 12, "nodeName": "best_combination_log_prob", "type": "Any"}, {"lineNumber": 415, "col_offset": 12, "nodeName": "log_marginal_likelihood_list", "type": "List[Any]"}, {"lineNumber": 417, "col_offset": 16, "nodeName": "answering_ability", "type": "Any"}, {"lineNumber": 417, "col_offset": 37, "nodeName": "answering_abilities", "type": "Any"}, {"lineNumber": 552, "col_offset": 11, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 555, "col_offset": 12, "nodeName": "question_tokens", "type": "List[Any]"}, {"lineNumber": 556, "col_offset": 12, "nodeName": "passage_tokens", "type": "List[Any]"}, {"lineNumber": 557, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 633, "col_offset": 56, "nodeName": "passage_question_attention", "type": "Any"}, {"lineNumber": 634, "col_offset": 45, "nodeName": "question_tokens", "type": "List[Any]"}, {"lineNumber": 635, "col_offset": 44, "nodeName": "passage_tokens", "type": "List[Any]"}, {"lineNumber": 638, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 639, "col_offset": 8, "nodeName": "exact_match", "type": "Any"}, {"lineNumber": 639, "col_offset": 21, "nodeName": "f1_score", "type": "Any"}, {"lineNumber": 639, "col_offset": 32, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 639, "col_offset": 62, "nodeName": "reset", "type": "bool"}, {"lineNumber": 640, "col_offset": 22, "nodeName": "exact_match", "type": "Any"}, {"lineNumber": 640, "col_offset": 41, "nodeName": "f1_score", "type": "Any"}, {"lineNumber": 46, "col_offset": 29, "nodeName": "List", "type": "Any"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 25, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "phrase_layer", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 62, "col_offset": 27, "nodeName": "phrase_layer", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "modeling_layer", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "modeling_layer", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 76, "col_offset": 52, "nodeName": "encoding_out_dim", "type": "int"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "nn", "type": "Any"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "nn", "type": "Any"}, {"lineNumber": 82, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "answering_abilities", "type": "List[str]"}, {"lineNumber": 83, "col_offset": 45, "nodeName": "FeedForward", "type": "Type[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 91, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 50, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 95, "col_offset": 49, "nodeName": "FeedForward", "type": "Type[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "FeedForward", "type": "Type[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 108, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 112, "col_offset": 50, "nodeName": "FeedForward", "type": "Type[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 118, "col_offset": 48, "nodeName": "FeedForward", "type": "Type[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 125, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 129, "col_offset": 42, "nodeName": "FeedForward", "type": "Type[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 136, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 137, "col_offset": 35, "nodeName": "index", "type": "Callable[..., int]"}, {"lineNumber": 138, "col_offset": 43, "nodeName": "FeedForward", "type": "Type[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "modeling_out_dim", "type": "int"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 146, "col_offset": 43, "nodeName": "dropout_prob", "type": "float"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "List", "type": "Any"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 164, "col_offset": 68, "nodeName": "question", "type": "Dict[str, Any]"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 41, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 165, "col_offset": 67, "nodeName": "passage", "type": "Dict[str, Any]"}, {"lineNumber": 166, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 166, "col_offset": 48, "nodeName": "_embedding_proj_layer", "type": "Any"}, {"lineNumber": 166, "col_offset": 75, "nodeName": "embedded_question", "type": "Any"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 47, "nodeName": "_embedding_proj_layer", "type": "Any"}, {"lineNumber": 167, "col_offset": 74, "nodeName": "embedded_passage", "type": "Any"}, {"lineNumber": 169, "col_offset": 21, "nodeName": "embedded_question", "type": "Any"}, {"lineNumber": 171, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "_phrase_layer", "type": "Any"}, {"lineNumber": 175, "col_offset": 31, "nodeName": "projected_embedded_question", "type": "Any"}, {"lineNumber": 175, "col_offset": 60, "nodeName": "question_mask", "type": "Any"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "_phrase_layer", "type": "Any"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "projected_embedded_passage", "type": "Any"}, {"lineNumber": 178, "col_offset": 59, "nodeName": "passage_mask", "type": "Any"}, {"lineNumber": 182, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 188, "col_offset": 35, "nodeName": "util", "type": "module"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 196, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 200, "col_offset": 34, "nodeName": "util", "type": "module"}, {"lineNumber": 205, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "cat", "type": "Any"}, {"lineNumber": 219, "col_offset": 32, "nodeName": "_modeling_proj_layer", "type": "Any"}, {"lineNumber": 219, "col_offset": 58, "nodeName": "merged_passage_attention_vectors", "type": "Any"}, {"lineNumber": 221, "col_offset": 30, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 224, "col_offset": 40, "nodeName": "modeled_passage", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "modeled_passage_list", "type": "List[Any]"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 231, "col_offset": 43, "nodeName": "modeled_passage_list", "type": "List[Any]"}, {"lineNumber": 236, "col_offset": 26, "nodeName": "util", "type": "module"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "answering_abilities", "type": "Any"}, {"lineNumber": 240, "col_offset": 36, "nodeName": "_answer_ability_predictor", "type": "Any"}, {"lineNumber": 243, "col_offset": 39, "nodeName": "log_softmax", "type": "Any"}, {"lineNumber": 243, "col_offset": 71, "nodeName": "answer_ability_logits", "type": "Any"}, {"lineNumber": 244, "col_offset": 34, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 244, "col_offset": 47, "nodeName": "answer_ability_log_probs", "type": "Any"}, {"lineNumber": 246, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 248, "col_offset": 34, "nodeName": "_count_number_predictor", "type": "Any"}, {"lineNumber": 248, "col_offset": 63, "nodeName": "passage_vector", "type": "Any"}, {"lineNumber": 249, "col_offset": 37, "nodeName": "log_softmax", "type": "Any"}, {"lineNumber": 249, "col_offset": 69, "nodeName": "count_number_logits", "type": "Any"}, {"lineNumber": 252, "col_offset": 32, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 252, "col_offset": 45, "nodeName": "count_number_log_probs", "type": "Any"}, {"lineNumber": 257, "col_offset": 16, "nodeName": "best_count_log_prob", "type": "Any"}, {"lineNumber": 259, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 261, "col_offset": 37, "nodeName": "cat", "type": "Any"}, {"lineNumber": 269, "col_offset": 35, "nodeName": "cat", "type": "Any"}, {"lineNumber": 277, "col_offset": 43, "nodeName": "masked_log_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "passage_span_start_logits", "type": "Any"}, {"lineNumber": 278, "col_offset": 43, "nodeName": "passage_mask", "type": "Any"}, {"lineNumber": 280, "col_offset": 41, "nodeName": "masked_log_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "passage_span_end_logits", "type": "Any"}, {"lineNumber": 281, "col_offset": 41, "nodeName": "passage_mask", "type": "Any"}, {"lineNumber": 285, "col_offset": 40, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "passage_span_start_logits", "type": "Any"}, {"lineNumber": 286, "col_offset": 43, "nodeName": "passage_mask", "type": "Any"}, {"lineNumber": 288, "col_offset": 38, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 289, "col_offset": 16, "nodeName": "passage_span_end_logits", "type": "Any"}, {"lineNumber": 289, "col_offset": 41, "nodeName": "passage_mask", "type": "Any"}, {"lineNumber": 292, "col_offset": 32, "nodeName": "get_best_span", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 292, "col_offset": 46, "nodeName": "passage_span_start_logits", "type": "Any"}, {"lineNumber": 292, "col_offset": 73, "nodeName": "passage_span_end_logits", "type": "Any"}, {"lineNumber": 301, "col_offset": 41, "nodeName": "best_passage_start_log_probs", "type": "Any"}, {"lineNumber": 301, "col_offset": 72, "nodeName": "best_passage_end_log_probs", "type": "Any"}, {"lineNumber": 307, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 309, "col_offset": 51, "nodeName": "cat", "type": "Any"}, {"lineNumber": 323, "col_offset": 44, "nodeName": "masked_log_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 324, "col_offset": 16, "nodeName": "question_span_start_logits", "type": "Any"}, {"lineNumber": 324, "col_offset": 44, "nodeName": "question_mask", "type": "Any"}, {"lineNumber": 326, "col_offset": 42, "nodeName": "masked_log_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "question_span_end_logits", "type": "Any"}, {"lineNumber": 327, "col_offset": 42, "nodeName": "question_mask", "type": "Any"}, {"lineNumber": 331, "col_offset": 41, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 332, "col_offset": 16, "nodeName": "question_span_start_logits", "type": "Any"}, {"lineNumber": 332, "col_offset": 44, "nodeName": "question_mask", "type": "Any"}, {"lineNumber": 334, "col_offset": 39, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 335, "col_offset": 16, "nodeName": "question_span_end_logits", "type": "Any"}, {"lineNumber": 335, "col_offset": 42, "nodeName": "question_mask", "type": "Any"}, {"lineNumber": 338, "col_offset": 33, "nodeName": "get_best_span", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 338, "col_offset": 47, "nodeName": "question_span_start_logits", "type": "Any"}, {"lineNumber": 338, "col_offset": 75, "nodeName": "question_span_end_logits", "type": "Any"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "best_question_start_log_probs", "type": "Any"}, {"lineNumber": 348, "col_offset": 48, "nodeName": "best_question_end_log_probs", "type": "Any"}, {"lineNumber": 355, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 357, "col_offset": 29, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 358, "col_offset": 27, "nodeName": "long", "type": "Any"}, {"lineNumber": 359, "col_offset": 37, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 359, "col_offset": 64, "nodeName": "number_indices", "type": "Any"}, {"lineNumber": 359, "col_offset": 80, "nodeName": "number_mask", "type": "Any"}, {"lineNumber": 360, "col_offset": 42, "nodeName": "cat", "type": "Any"}, {"lineNumber": 364, "col_offset": 30, "nodeName": "gather", "type": "Any"}, {"lineNumber": 365, "col_offset": 16, "nodeName": "encoded_passage_for_numbers", "type": "Any"}, {"lineNumber": 372, "col_offset": 30, "nodeName": "cat", "type": "Any"}, {"lineNumber": 381, "col_offset": 33, "nodeName": "_number_sign_predictor", "type": "Any"}, {"lineNumber": 381, "col_offset": 61, "nodeName": "encoded_numbers", "type": "Any"}, {"lineNumber": 382, "col_offset": 36, "nodeName": "log_softmax", "type": "Any"}, {"lineNumber": 382, "col_offset": 68, "nodeName": "number_sign_logits", "type": "Any"}, {"lineNumber": 385, "col_offset": 37, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 385, "col_offset": 50, "nodeName": "number_sign_log_probs", "type": "Any"}, {"lineNumber": 387, "col_offset": 37, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 388, "col_offset": 16, "nodeName": "best_signs_for_numbers", "type": "Any"}, {"lineNumber": 388, "col_offset": 40, "nodeName": "number_mask", "type": "Any"}, {"lineNumber": 397, "col_offset": 35, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 397, "col_offset": 62, "nodeName": "best_signs_log_probs", "type": "Any"}, {"lineNumber": 397, "col_offset": 84, "nodeName": "number_mask", "type": "Any"}, {"lineNumber": 399, "col_offset": 40, "nodeName": "sum", "type": "Any"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "answer_as_passage_spans", "type": "Any"}, {"lineNumber": 410, "col_offset": 15, "nodeName": "answer_as_question_spans", "type": "Any"}, {"lineNumber": 411, "col_offset": 15, "nodeName": "answer_as_add_sub_expressions", "type": "Any"}, {"lineNumber": 412, "col_offset": 15, "nodeName": "answer_as_counts", "type": "Any"}, {"lineNumber": 417, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 541, "col_offset": 16, "nodeName": "all_log_marginal_likelihoods", "type": "Any"}, {"lineNumber": 545, "col_offset": 16, "nodeName": "marginal_log_likelihood", "type": "Any"}, {"lineNumber": 547, "col_offset": 16, "nodeName": "marginal_log_likelihood", "type": "Any"}, {"lineNumber": 549, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 553, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 554, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 557, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 557, "col_offset": 27, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 568, "col_offset": 16, "nodeName": "answer_json", "type": "Dict[str, Any]"}, {"lineNumber": 629, "col_offset": 16, "nodeName": "answer_annotations", "type": "Any"}, {"lineNumber": 630, "col_offset": 19, "nodeName": "answer_annotations", "type": "Any"}, {"lineNumber": 633, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 634, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 635, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 160, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 639, "col_offset": 32, "nodeName": "_drop_metrics", "type": "Any"}, {"lineNumber": 638, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 638, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 76, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 79, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "modeling_out_dim", "type": "int"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "encoding_out_dim", "type": "int"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "dropout_prob", "type": "float"}, {"lineNumber": 92, "col_offset": 50, "nodeName": "answering_abilities", "type": "List[str]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "modeling_out_dim", "type": "int"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "modeling_out_dim", "type": "int"}, {"lineNumber": 109, "col_offset": 51, "nodeName": "answering_abilities", "type": "List[str]"}, {"lineNumber": 113, "col_offset": 16, "nodeName": "modeling_out_dim", "type": "int"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "modeling_out_dim", "type": "int"}, {"lineNumber": 126, "col_offset": 47, "nodeName": "answering_abilities", "type": "List[str]"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "modeling_out_dim", "type": "int"}, {"lineNumber": 137, "col_offset": 35, "nodeName": "answering_abilities", "type": "List[str]"}, {"lineNumber": 146, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "get_text_field_mask", "type": "Callable[..., Any]"}, {"lineNumber": 162, "col_offset": 49, "nodeName": "question", "type": "Dict[str, Any]"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "get_text_field_mask", "type": "Callable[..., Any]"}, {"lineNumber": 163, "col_offset": 48, "nodeName": "passage", "type": "Dict[str, Any]"}, {"lineNumber": 164, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 166, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "passage_question_similarity", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 208, "col_offset": 20, "nodeName": "encoded_passage", "type": "Any"}, {"lineNumber": 209, "col_offset": 20, "nodeName": "passage_question_vectors", "type": "Any"}, {"lineNumber": 219, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 221, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "_modeling_layer", "type": "Any"}, {"lineNumber": 222, "col_offset": 63, "nodeName": "passage_mask", "type": "Any"}, {"lineNumber": 224, "col_offset": 12, "nodeName": "modeled_passage_list", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "_passage_weights_predictor", "type": "Any"}, {"lineNumber": 234, "col_offset": 27, "nodeName": "_question_weights_predictor", "type": "Any"}, {"lineNumber": 234, "col_offset": 60, "nodeName": "encoded_question", "type": "Any"}, {"lineNumber": 238, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "cat", "type": "Any"}, {"lineNumber": 243, "col_offset": 39, "nodeName": "functional", "type": "Any"}, {"lineNumber": 244, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 248, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 37, "nodeName": "functional", "type": "Any"}, {"lineNumber": 252, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 256, "col_offset": 19, "nodeName": "answering_abilities", "type": "Any"}, {"lineNumber": 257, "col_offset": 39, "nodeName": "answer_ability_log_probs", "type": "Any"}, {"lineNumber": 261, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 269, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 277, "col_offset": 43, "nodeName": "util", "type": "module"}, {"lineNumber": 280, "col_offset": 41, "nodeName": "util", "type": "module"}, {"lineNumber": 285, "col_offset": 40, "nodeName": "util", "type": "module"}, {"lineNumber": 288, "col_offset": 38, "nodeName": "util", "type": "module"}, {"lineNumber": 302, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 302, "col_offset": 19, "nodeName": "answering_abilities", "type": "Any"}, {"lineNumber": 303, "col_offset": 46, "nodeName": "answer_ability_log_probs", "type": "Any"}, {"lineNumber": 309, "col_offset": 51, "nodeName": "torch", "type": "Any"}, {"lineNumber": 311, "col_offset": 20, "nodeName": "encoded_question", "type": "Any"}, {"lineNumber": 323, "col_offset": 44, "nodeName": "util", "type": "module"}, {"lineNumber": 326, "col_offset": 42, "nodeName": "util", "type": "module"}, {"lineNumber": 331, "col_offset": 41, "nodeName": "util", "type": "module"}, {"lineNumber": 334, "col_offset": 39, "nodeName": "util", "type": "module"}, {"lineNumber": 350, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 350, "col_offset": 19, "nodeName": "answering_abilities", "type": "Any"}, {"lineNumber": 351, "col_offset": 47, "nodeName": "answer_ability_log_probs", "type": "Any"}, {"lineNumber": 357, "col_offset": 29, "nodeName": "number_indices", "type": "Any"}, {"lineNumber": 359, "col_offset": 37, "nodeName": "util", "type": "module"}, {"lineNumber": 360, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 364, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 367, "col_offset": 16, "nodeName": "expand", "type": "Any"}, {"lineNumber": 372, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 374, "col_offset": 20, "nodeName": "encoded_numbers", "type": "Any"}, {"lineNumber": 381, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 382, "col_offset": 36, "nodeName": "functional", "type": "Any"}, {"lineNumber": 385, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 387, "col_offset": 37, "nodeName": "util", "type": "module"}, {"lineNumber": 397, "col_offset": 35, "nodeName": "util", "type": "module"}, {"lineNumber": 399, "col_offset": 40, "nodeName": "best_signs_log_probs", "type": "Any"}, {"lineNumber": 400, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 400, "col_offset": 19, "nodeName": "answering_abilities", "type": "Any"}, {"lineNumber": 401, "col_offset": 45, "nodeName": "answer_ability_log_probs", "type": "Any"}, {"lineNumber": 418, "col_offset": 19, "nodeName": "answering_ability", "type": "Any"}, {"lineNumber": 420, "col_offset": 20, "nodeName": "gold_passage_span_starts", "type": "Any"}, {"lineNumber": 421, "col_offset": 20, "nodeName": "gold_passage_span_ends", "type": "Any"}, {"lineNumber": 424, "col_offset": 20, "nodeName": "gold_passage_span_mask", "type": "Any"}, {"lineNumber": 539, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 539, "col_offset": 19, "nodeName": "answering_abilities", "type": "Any"}, {"lineNumber": 541, "col_offset": 47, "nodeName": "stack", "type": "Any"}, {"lineNumber": 541, "col_offset": 59, "nodeName": "log_marginal_likelihood_list", "type": "List[Any]"}, {"lineNumber": 543, "col_offset": 20, "nodeName": "all_log_marginal_likelihoods", "type": "Any"}, {"lineNumber": 543, "col_offset": 51, "nodeName": "answer_ability_log_probs", "type": "Any"}, {"lineNumber": 545, "col_offset": 42, "nodeName": "logsumexp", "type": "Callable[..., Any]"}, {"lineNumber": 545, "col_offset": 57, "nodeName": "all_log_marginal_likelihoods", "type": "Any"}, {"lineNumber": 547, "col_offset": 42, "nodeName": "log_marginal_likelihood_list", "type": "List[Any]"}, {"lineNumber": 549, "col_offset": 35, "nodeName": "mean", "type": "Any"}, {"lineNumber": 558, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 559, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 566, "col_offset": 20, "nodeName": "predicted_ability_str", "type": "Any"}, {"lineNumber": 571, "col_offset": 19, "nodeName": "predicted_ability_str", "type": "Any"}, {"lineNumber": 573, "col_offset": 20, "nodeName": "passage_str", "type": "Any"}, {"lineNumber": 574, "col_offset": 20, "nodeName": "offsets", "type": "Any"}, {"lineNumber": 575, "col_offset": 20, "nodeName": "predicted_span", "type": "Tuple[Any, ...]"}, {"lineNumber": 576, "col_offset": 20, "nodeName": "start_offset", "type": "Any"}, {"lineNumber": 577, "col_offset": 20, "nodeName": "end_offset", "type": "Any"}, {"lineNumber": 578, "col_offset": 20, "nodeName": "predicted_answer", "type": "Any"}, {"lineNumber": 579, "col_offset": 43, "nodeName": "predicted_answer", "type": "Any"}, {"lineNumber": 627, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 628, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 628, "col_offset": 45, "nodeName": "answer_json", "type": "Dict[str, Any]"}, {"lineNumber": 629, "col_offset": 37, "nodeName": "get", "type": "Callable"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 639, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "modeling_out_dim", "type": "int"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "modeling_out_dim", "type": "int"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "modeling_out_dim", "type": "int"}, {"lineNumber": 115, "col_offset": 29, "nodeName": "modeling_out_dim", "type": "int"}, {"lineNumber": 121, "col_offset": 29, "nodeName": "modeling_out_dim", "type": "int"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "modeling_out_dim", "type": "int"}, {"lineNumber": 137, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "modeling_out_dim", "type": "int"}, {"lineNumber": 159, "col_offset": 23, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 162, "col_offset": 24, "nodeName": "util", "type": "module"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "util", "type": "module"}, {"lineNumber": 210, "col_offset": 20, "nodeName": "encoded_passage", "type": "Any"}, {"lineNumber": 210, "col_offset": 38, "nodeName": "passage_question_vectors", "type": "Any"}, {"lineNumber": 211, "col_offset": 20, "nodeName": "encoded_passage", "type": "Any"}, {"lineNumber": 211, "col_offset": 38, "nodeName": "passage_passage_vectors", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 222, "col_offset": 37, "nodeName": "modeled_passage_list", "type": "List[Any]"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 229, "col_offset": 58, "nodeName": "modeled_passage_list", "type": "List[Any]"}, {"lineNumber": 234, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 241, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 241, "col_offset": 27, "nodeName": "passage_vector", "type": "Any"}, {"lineNumber": 241, "col_offset": 43, "nodeName": "question_vector", "type": "Any"}, {"lineNumber": 243, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 249, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 253, "col_offset": 34, "nodeName": "gather", "type": "Any"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "count_number_log_probs", "type": "Any"}, {"lineNumber": 256, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 262, "col_offset": 17, "nodeName": "modeled_passage_list", "type": "List[Any]"}, {"lineNumber": 262, "col_offset": 42, "nodeName": "modeled_passage_list", "type": "List[Any]"}, {"lineNumber": 265, "col_offset": 40, "nodeName": "_passage_span_start_predictor", "type": "Any"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "passage_for_span_start", "type": "Any"}, {"lineNumber": 270, "col_offset": 17, "nodeName": "modeled_passage_list", "type": "List[Any]"}, {"lineNumber": 270, "col_offset": 42, "nodeName": "modeled_passage_list", "type": "List[Any]"}, {"lineNumber": 273, "col_offset": 38, "nodeName": "_passage_span_end_predictor", "type": "Any"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "passage_for_span_end", "type": "Any"}, {"lineNumber": 294, "col_offset": 43, "nodeName": "gather", "type": "Any"}, {"lineNumber": 295, "col_offset": 16, "nodeName": "passage_span_start_log_probs", "type": "Any"}, {"lineNumber": 297, "col_offset": 41, "nodeName": "gather", "type": "Any"}, {"lineNumber": 298, "col_offset": 16, "nodeName": "passage_span_end_log_probs", "type": "Any"}, {"lineNumber": 302, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 312, "col_offset": 20, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 316, "col_offset": 41, "nodeName": "_question_span_start_predictor", "type": "Any"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "encoded_question_for_span_prediction", "type": "Any"}, {"lineNumber": 320, "col_offset": 39, "nodeName": "_question_span_end_predictor", "type": "Any"}, {"lineNumber": 321, "col_offset": 16, "nodeName": "encoded_question_for_span_prediction", "type": "Any"}, {"lineNumber": 340, "col_offset": 44, "nodeName": "gather", "type": "Any"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "question_span_start_log_probs", "type": "Any"}, {"lineNumber": 343, "col_offset": 42, "nodeName": "gather", "type": "Any"}, {"lineNumber": 344, "col_offset": 16, "nodeName": "question_span_end_log_probs", "type": "Any"}, {"lineNumber": 350, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 358, "col_offset": 27, "nodeName": "number_indices", "type": "Any"}, {"lineNumber": 361, "col_offset": 17, "nodeName": "modeled_passage_list", "type": "List[Any]"}, {"lineNumber": 361, "col_offset": 42, "nodeName": "modeled_passage_list", "type": "List[Any]"}, {"lineNumber": 368, "col_offset": 28, "nodeName": "size", "type": "Any"}, {"lineNumber": 375, "col_offset": 20, "nodeName": "repeat", "type": "Any"}, {"lineNumber": 382, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 391, "col_offset": 35, "nodeName": "gather", "type": "Any"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "number_sign_log_probs", "type": "Any"}, {"lineNumber": 400, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 420, "col_offset": 47, "nodeName": "answer_as_passage_spans", "type": "Any"}, {"lineNumber": 421, "col_offset": 45, "nodeName": "answer_as_passage_spans", "type": "Any"}, {"lineNumber": 424, "col_offset": 46, "nodeName": "long", "type": "Any"}, {"lineNumber": 425, "col_offset": 55, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 426, "col_offset": 24, "nodeName": "gold_passage_span_starts", "type": "Any"}, {"lineNumber": 426, "col_offset": 50, "nodeName": "gold_passage_span_mask", "type": "Any"}, {"lineNumber": 428, "col_offset": 53, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 429, "col_offset": 24, "nodeName": "gold_passage_span_ends", "type": "Any"}, {"lineNumber": 429, "col_offset": 48, "nodeName": "gold_passage_span_mask", "type": "Any"}, {"lineNumber": 432, "col_offset": 61, "nodeName": "gather", "type": "Any"}, {"lineNumber": 433, "col_offset": 24, "nodeName": "passage_span_start_log_probs", "type": "Any"}, {"lineNumber": 433, "col_offset": 57, "nodeName": "clamped_gold_passage_span_starts", "type": "Any"}, {"lineNumber": 435, "col_offset": 59, "nodeName": "gather", "type": "Any"}, {"lineNumber": 436, "col_offset": 24, "nodeName": "passage_span_end_log_probs", "type": "Any"}, {"lineNumber": 436, "col_offset": 55, "nodeName": "clamped_gold_passage_span_ends", "type": "Any"}, {"lineNumber": 440, "col_offset": 24, "nodeName": "log_likelihood_for_passage_span_starts", "type": "Any"}, {"lineNumber": 441, "col_offset": 26, "nodeName": "log_likelihood_for_passage_span_ends", "type": "Any"}, {"lineNumber": 444, "col_offset": 55, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 445, "col_offset": 24, "nodeName": "log_likelihood_for_passage_spans", "type": "Any"}, {"lineNumber": 445, "col_offset": 58, "nodeName": "gold_passage_span_mask", "type": "Any"}, {"lineNumber": 448, "col_offset": 63, "nodeName": "logsumexp", "type": "Callable[..., Any]"}, {"lineNumber": 449, "col_offset": 24, "nodeName": "log_likelihood_for_passage_spans", "type": "Any"}, {"lineNumber": 451, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 451, "col_offset": 56, "nodeName": "log_marginal_likelihood_for_passage_span", "type": "Any"}, {"lineNumber": 453, "col_offset": 21, "nodeName": "answering_ability", "type": "Any"}, {"lineNumber": 455, "col_offset": 20, "nodeName": "gold_question_span_starts", "type": "Any"}, {"lineNumber": 456, "col_offset": 20, "nodeName": "gold_question_span_ends", "type": "Any"}, {"lineNumber": 459, "col_offset": 20, "nodeName": "gold_question_span_mask", "type": "Any"}, {"lineNumber": 539, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 541, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 545, "col_offset": 42, "nodeName": "util", "type": "module"}, {"lineNumber": 549, "col_offset": 35, "nodeName": "marginal_log_likelihood", "type": "Any"}, {"lineNumber": 558, "col_offset": 16, "nodeName": "question_tokens", "type": "List[Any]"}, {"lineNumber": 559, "col_offset": 16, "nodeName": "passage_tokens", "type": "List[Any]"}, {"lineNumber": 561, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 561, "col_offset": 23, "nodeName": "answering_abilities", "type": "Any"}, {"lineNumber": 562, "col_offset": 44, "nodeName": "answering_abilities", "type": "Any"}, {"lineNumber": 566, "col_offset": 44, "nodeName": "answering_abilities", "type": "Any"}, {"lineNumber": 572, "col_offset": 20, "nodeName": "answer_json", "type": "Dict[str, Any]"}, {"lineNumber": 575, "col_offset": 37, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 578, "col_offset": 39, "nodeName": "passage_str", "type": "Any"}, {"lineNumber": 579, "col_offset": 20, "nodeName": "answer_json", "type": "Dict[str, Any]"}, {"lineNumber": 580, "col_offset": 20, "nodeName": "answer_json", "type": "Dict[str, Any]"}, {"lineNumber": 581, "col_offset": 21, "nodeName": "predicted_ability_str", "type": "Any"}, {"lineNumber": 583, "col_offset": 20, "nodeName": "question_str", "type": "Any"}, {"lineNumber": 584, "col_offset": 20, "nodeName": "offsets", "type": "Any"}, {"lineNumber": 585, "col_offset": 20, "nodeName": "predicted_span", "type": "Tuple[Any, ...]"}, {"lineNumber": 586, "col_offset": 20, "nodeName": "start_offset", "type": "Any"}, {"lineNumber": 587, "col_offset": 20, "nodeName": "end_offset", "type": "Any"}, {"lineNumber": 588, "col_offset": 20, "nodeName": "predicted_answer", "type": "Any"}, {"lineNumber": 589, "col_offset": 43, "nodeName": "predicted_answer", "type": "Any"}, {"lineNumber": 631, "col_offset": 20, "nodeName": "_drop_metrics", "type": "Any"}, {"lineNumber": 631, "col_offset": 39, "nodeName": "predicted_answer", "type": "Any"}, {"lineNumber": 631, "col_offset": 57, "nodeName": "answer_annotations", "type": "Any"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 86, "col_offset": 51, "nodeName": "answering_abilities", "type": "List[str]"}, {"lineNumber": 243, "col_offset": 39, "nodeName": "torch", "type": "Any"}, {"lineNumber": 249, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 253, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 254, "col_offset": 43, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 257, "col_offset": 67, "nodeName": "_counting_index", "type": "Any"}, {"lineNumber": 265, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 273, "col_offset": 38, "nodeName": "self", "type": "Any"}, {"lineNumber": 294, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 295, "col_offset": 49, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 297, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 298, "col_offset": 47, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "_passage_span_extraction_index", "type": "Any"}, {"lineNumber": 312, "col_offset": 58, "nodeName": "size", "type": "Any"}, {"lineNumber": 316, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 320, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 340, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 341, "col_offset": 50, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 343, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 344, "col_offset": 48, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 352, "col_offset": 23, "nodeName": "_question_span_extraction_index", "type": "Any"}, {"lineNumber": 367, "col_offset": 16, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 368, "col_offset": 28, "nodeName": "encoded_passage_for_numbers", "type": "Any"}, {"lineNumber": 375, "col_offset": 58, "nodeName": "size", "type": "Any"}, {"lineNumber": 382, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 391, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 392, "col_offset": 42, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 402, "col_offset": 23, "nodeName": "_addition_subtraction_index", "type": "Any"}, {"lineNumber": 425, "col_offset": 55, "nodeName": "util", "type": "module"}, {"lineNumber": 428, "col_offset": 53, "nodeName": "util", "type": "module"}, {"lineNumber": 432, "col_offset": 61, "nodeName": "torch", "type": "Any"}, {"lineNumber": 435, "col_offset": 59, "nodeName": "torch", "type": "Any"}, {"lineNumber": 444, "col_offset": 55, "nodeName": "util", "type": "module"}, {"lineNumber": 448, "col_offset": 63, "nodeName": "util", "type": "module"}, {"lineNumber": 451, "col_offset": 20, "nodeName": "log_marginal_likelihood_list", "type": "List[Any]"}, {"lineNumber": 455, "col_offset": 48, "nodeName": "answer_as_question_spans", "type": "Any"}, {"lineNumber": 456, "col_offset": 46, "nodeName": "answer_as_question_spans", "type": "Any"}, {"lineNumber": 459, "col_offset": 47, "nodeName": "long", "type": "Any"}, {"lineNumber": 460, "col_offset": 56, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 461, "col_offset": 24, "nodeName": "gold_question_span_starts", "type": "Any"}, {"lineNumber": 461, "col_offset": 51, "nodeName": "gold_question_span_mask", "type": "Any"}, {"lineNumber": 463, "col_offset": 54, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 464, "col_offset": 24, "nodeName": "gold_question_span_ends", "type": "Any"}, {"lineNumber": 464, "col_offset": 49, "nodeName": "gold_question_span_mask", "type": "Any"}, {"lineNumber": 467, "col_offset": 62, "nodeName": "gather", "type": "Any"}, {"lineNumber": 468, "col_offset": 24, "nodeName": "question_span_start_log_probs", "type": "Any"}, {"lineNumber": 468, "col_offset": 58, "nodeName": "clamped_gold_question_span_starts", "type": "Any"}, {"lineNumber": 470, "col_offset": 60, "nodeName": "gather", "type": "Any"}, {"lineNumber": 471, "col_offset": 24, "nodeName": "question_span_end_log_probs", "type": "Any"}, {"lineNumber": 471, "col_offset": 56, "nodeName": "clamped_gold_question_span_ends", "type": "Any"}, {"lineNumber": 475, "col_offset": 24, "nodeName": "log_likelihood_for_question_span_starts", "type": "Any"}, {"lineNumber": 476, "col_offset": 26, "nodeName": "log_likelihood_for_question_span_ends", "type": "Any"}, {"lineNumber": 479, "col_offset": 56, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 480, "col_offset": 24, "nodeName": "log_likelihood_for_question_spans", "type": "Any"}, {"lineNumber": 480, "col_offset": 59, "nodeName": "gold_question_span_mask", "type": "Any"}, {"lineNumber": 484, "col_offset": 64, "nodeName": "logsumexp", "type": "Callable[..., Any]"}, {"lineNumber": 485, "col_offset": 24, "nodeName": "log_likelihood_for_question_spans", "type": "Any"}, {"lineNumber": 487, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 487, "col_offset": 56, "nodeName": "log_marginal_likelihood_for_question_span", "type": "Any"}, {"lineNumber": 489, "col_offset": 21, "nodeName": "answering_ability", "type": "Any"}, {"lineNumber": 492, "col_offset": 20, "nodeName": "gold_add_sub_mask", "type": "Any"}, {"lineNumber": 494, "col_offset": 20, "nodeName": "gold_add_sub_signs", "type": "Any"}, {"lineNumber": 505, "col_offset": 20, "nodeName": "log_likelihood_for_add_subs", "type": "Any"}, {"lineNumber": 558, "col_offset": 39, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 559, "col_offset": 38, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 561, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 562, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 566, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 573, "col_offset": 34, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 574, "col_offset": 30, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 575, "col_offset": 43, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 576, "col_offset": 35, "nodeName": "offsets", "type": "Any"}, {"lineNumber": 577, "col_offset": 33, "nodeName": "offsets", "type": "Any"}, {"lineNumber": 578, "col_offset": 51, "nodeName": "start_offset", "type": "Any"}, {"lineNumber": 578, "col_offset": 64, "nodeName": "end_offset", "type": "Any"}, {"lineNumber": 580, "col_offset": 45, "nodeName": "start_offset", "type": "Any"}, {"lineNumber": 580, "col_offset": 59, "nodeName": "end_offset", "type": "Any"}, {"lineNumber": 582, "col_offset": 20, "nodeName": "answer_json", "type": "Dict[str, Any]"}, {"lineNumber": 585, "col_offset": 37, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 588, "col_offset": 39, "nodeName": "question_str", "type": "Any"}, {"lineNumber": 589, "col_offset": 20, "nodeName": "answer_json", "type": "Dict[str, Any]"}, {"lineNumber": 590, "col_offset": 20, "nodeName": "answer_json", "type": "Dict[str, Any]"}, {"lineNumber": 592, "col_offset": 20, "nodeName": "predicted_ability_str", "type": "Any"}, {"lineNumber": 595, "col_offset": 20, "nodeName": "original_numbers", "type": "Any"}, {"lineNumber": 596, "col_offset": 20, "nodeName": "sign_remap", "type": "Dict[int, int]"}, {"lineNumber": 603, "col_offset": 20, "nodeName": "predicted_answer", "type": "str"}, {"lineNumber": 604, "col_offset": 20, "nodeName": "offsets", "type": "Any"}, {"lineNumber": 605, "col_offset": 20, "nodeName": "number_indices", "type": "Any"}, {"lineNumber": 606, "col_offset": 20, "nodeName": "number_positions", "type": "List[Any]"}, {"lineNumber": 618, "col_offset": 43, "nodeName": "result", "type": "Any"}, {"lineNumber": 627, "col_offset": 16, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 627, "col_offset": 50, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 628, "col_offset": 16, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 629, "col_offset": 37, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 631, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 85, "col_offset": 59, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 86, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 97, "col_offset": 59, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 103, "col_offset": 59, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 114, "col_offset": 59, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 120, "col_offset": 59, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 131, "col_offset": 59, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 140, "col_offset": 59, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 159, "col_offset": 33, "nodeName": "Any", "type": "Any"}, {"lineNumber": 254, "col_offset": 43, "nodeName": "best_count_number", "type": "Any"}, {"lineNumber": 257, "col_offset": 67, "nodeName": "self", "type": "Any"}, {"lineNumber": 304, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 312, "col_offset": 20, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 312, "col_offset": 58, "nodeName": "encoded_question", "type": "Any"}, {"lineNumber": 352, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 367, "col_offset": 16, "nodeName": "clamped_number_indices", "type": "Any"}, {"lineNumber": 375, "col_offset": 20, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 375, "col_offset": 58, "nodeName": "encoded_numbers", "type": "Any"}, {"lineNumber": 392, "col_offset": 42, "nodeName": "best_signs_for_numbers", "type": "Any"}, {"lineNumber": 402, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 424, "col_offset": 46, "nodeName": "gold_passage_span_starts", "type": "Any"}, {"lineNumber": 460, "col_offset": 56, "nodeName": "util", "type": "module"}, {"lineNumber": 463, "col_offset": 54, "nodeName": "util", "type": "module"}, {"lineNumber": 467, "col_offset": 62, "nodeName": "torch", "type": "Any"}, {"lineNumber": 470, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 479, "col_offset": 56, "nodeName": "util", "type": "module"}, {"lineNumber": 484, "col_offset": 64, "nodeName": "util", "type": "module"}, {"lineNumber": 487, "col_offset": 20, "nodeName": "log_marginal_likelihood_list", "type": "List[Any]"}, {"lineNumber": 492, "col_offset": 41, "nodeName": "float", "type": "Any"}, {"lineNumber": 494, "col_offset": 41, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 496, "col_offset": 54, "nodeName": "gather", "type": "Any"}, {"lineNumber": 497, "col_offset": 24, "nodeName": "number_sign_log_probs", "type": "Any"}, {"lineNumber": 497, "col_offset": 50, "nodeName": "gold_add_sub_signs", "type": "Any"}, {"lineNumber": 501, "col_offset": 54, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 502, "col_offset": 24, "nodeName": "log_likelihood_for_number_signs", "type": "Any"}, {"lineNumber": 505, "col_offset": 50, "nodeName": "sum", "type": "Any"}, {"lineNumber": 507, "col_offset": 50, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 508, "col_offset": 24, "nodeName": "log_likelihood_for_add_subs", "type": "Any"}, {"lineNumber": 508, "col_offset": 53, "nodeName": "gold_add_sub_mask", "type": "Any"}, {"lineNumber": 511, "col_offset": 58, "nodeName": "logsumexp", "type": "Callable[..., Any]"}, {"lineNumber": 512, "col_offset": 24, "nodeName": "log_likelihood_for_add_subs", "type": "Any"}, {"lineNumber": 514, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 514, "col_offset": 56, "nodeName": "log_marginal_likelihood_for_add_sub", "type": "Any"}, {"lineNumber": 516, "col_offset": 21, "nodeName": "answering_ability", "type": "Any"}, {"lineNumber": 520, "col_offset": 20, "nodeName": "gold_count_mask", "type": "Any"}, {"lineNumber": 533, "col_offset": 20, "nodeName": "log_marginal_likelihood_for_count", "type": "Any"}, {"lineNumber": 558, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 559, "col_offset": 47, "nodeName": "i", "type": "int"}, {"lineNumber": 563, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 573, "col_offset": 43, "nodeName": "i", "type": "int"}, {"lineNumber": 574, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 583, "col_offset": 35, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 584, "col_offset": 30, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 585, "col_offset": 43, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 586, "col_offset": 35, "nodeName": "offsets", "type": "Any"}, {"lineNumber": 587, "col_offset": 33, "nodeName": "offsets", "type": "Any"}, {"lineNumber": 588, "col_offset": 52, "nodeName": "start_offset", "type": "Any"}, {"lineNumber": 588, "col_offset": 65, "nodeName": "end_offset", "type": "Any"}, {"lineNumber": 590, "col_offset": 45, "nodeName": "start_offset", "type": "Any"}, {"lineNumber": 590, "col_offset": 59, "nodeName": "end_offset", "type": "Any"}, {"lineNumber": 594, "col_offset": 20, "nodeName": "answer_json", "type": "Dict[str, Any]"}, {"lineNumber": 600, "col_offset": 29, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 603, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 603, "col_offset": 43, "nodeName": "result", "type": "Any"}, {"lineNumber": 607, "col_offset": 20, "nodeName": "answer_json", "type": "Dict[str, Any]"}, {"lineNumber": 608, "col_offset": 47, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 609, "col_offset": 24, "nodeName": "number_positions", "type": "List[Any]"}, {"lineNumber": 609, "col_offset": 42, "nodeName": "original_numbers", "type": "Any"}, {"lineNumber": 609, "col_offset": 60, "nodeName": "predicted_signs", "type": "List[int]"}, {"lineNumber": 618, "col_offset": 20, "nodeName": "answer_json", "type": "Dict[str, Any]"}, {"lineNumber": 619, "col_offset": 21, "nodeName": "predicted_ability_str", "type": "Any"}, {"lineNumber": 621, "col_offset": 20, "nodeName": "predicted_count", "type": "Any"}, {"lineNumber": 622, "col_offset": 20, "nodeName": "predicted_answer", "type": "str"}, {"lineNumber": 623, "col_offset": 43, "nodeName": "predicted_count", "type": "Any"}, {"lineNumber": 627, "col_offset": 59, "nodeName": "i", "type": "int"}, {"lineNumber": 629, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 85, "col_offset": 29, "nodeName": "Activation", "type": "Type[allennlp.nn.activations.Activation]"}, {"lineNumber": 85, "col_offset": 59, "nodeName": "Activation", "type": "Type[allennlp.nn.activations.Activation]"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "Activation", "type": "Type[allennlp.nn.activations.Activation]"}, {"lineNumber": 97, "col_offset": 59, "nodeName": "Activation", "type": "Type[allennlp.nn.activations.Activation]"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "Activation", "type": "Type[allennlp.nn.activations.Activation]"}, {"lineNumber": 103, "col_offset": 59, "nodeName": "Activation", "type": "Type[allennlp.nn.activations.Activation]"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "Activation", "type": "Type[allennlp.nn.activations.Activation]"}, {"lineNumber": 114, "col_offset": 59, "nodeName": "Activation", "type": "Type[allennlp.nn.activations.Activation]"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "Activation", "type": "Type[allennlp.nn.activations.Activation]"}, {"lineNumber": 120, "col_offset": 59, "nodeName": "Activation", "type": "Type[allennlp.nn.activations.Activation]"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "Activation", "type": "Type[allennlp.nn.activations.Activation]"}, {"lineNumber": 131, "col_offset": 59, "nodeName": "Activation", "type": "Type[allennlp.nn.activations.Activation]"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "Activation", "type": "Type[allennlp.nn.activations.Activation]"}, {"lineNumber": 140, "col_offset": 59, "nodeName": "Activation", "type": "Type[allennlp.nn.activations.Activation]"}, {"lineNumber": 295, "col_offset": 49, "nodeName": "best_passage_span", "type": "Any"}, {"lineNumber": 298, "col_offset": 47, "nodeName": "best_passage_span", "type": "Any"}, {"lineNumber": 312, "col_offset": 20, "nodeName": "passage_vector", "type": "Any"}, {"lineNumber": 341, "col_offset": 50, "nodeName": "best_question_span", "type": "Any"}, {"lineNumber": 344, "col_offset": 48, "nodeName": "best_question_span", "type": "Any"}, {"lineNumber": 375, "col_offset": 20, "nodeName": "passage_vector", "type": "Any"}, {"lineNumber": 459, "col_offset": 47, "nodeName": "gold_question_span_starts", "type": "Any"}, {"lineNumber": 494, "col_offset": 41, "nodeName": "answer_as_add_sub_expressions", "type": "Any"}, {"lineNumber": 496, "col_offset": 54, "nodeName": "torch", "type": "Any"}, {"lineNumber": 501, "col_offset": 54, "nodeName": "util", "type": "module"}, {"lineNumber": 502, "col_offset": 57, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 505, "col_offset": 50, "nodeName": "log_likelihood_for_number_signs", "type": "Any"}, {"lineNumber": 507, "col_offset": 50, "nodeName": "util", "type": "module"}, {"lineNumber": 511, "col_offset": 58, "nodeName": "util", "type": "module"}, {"lineNumber": 514, "col_offset": 20, "nodeName": "log_marginal_likelihood_list", "type": "List[Any]"}, {"lineNumber": 520, "col_offset": 39, "nodeName": "long", "type": "Any"}, {"lineNumber": 522, "col_offset": 42, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 523, "col_offset": 24, "nodeName": "answer_as_counts", "type": "Any"}, {"lineNumber": 523, "col_offset": 42, "nodeName": "gold_count_mask", "type": "Any"}, {"lineNumber": 525, "col_offset": 48, "nodeName": "gather", "type": "Any"}, {"lineNumber": 526, "col_offset": 24, "nodeName": "count_number_log_probs", "type": "Any"}, {"lineNumber": 526, "col_offset": 51, "nodeName": "clamped_gold_counts", "type": "Any"}, {"lineNumber": 529, "col_offset": 48, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 530, "col_offset": 24, "nodeName": "log_likelihood_for_counts", "type": "Any"}, {"lineNumber": 530, "col_offset": 51, "nodeName": "gold_count_mask", "type": "Any"}, {"lineNumber": 533, "col_offset": 56, "nodeName": "logsumexp", "type": "Callable[..., Any]"}, {"lineNumber": 533, "col_offset": 71, "nodeName": "log_likelihood_for_counts", "type": "Any"}, {"lineNumber": 534, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 534, "col_offset": 56, "nodeName": "log_marginal_likelihood_for_count", "type": "Any"}, {"lineNumber": 537, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 575, "col_offset": 43, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 576, "col_offset": 43, "nodeName": "predicted_span", "type": "Tuple[Any, ...]"}, {"lineNumber": 577, "col_offset": 41, "nodeName": "predicted_span", "type": "Tuple[Any, ...]"}, {"lineNumber": 583, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 584, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 595, "col_offset": 39, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 598, "col_offset": 24, "nodeName": "sign_remap", "type": "Dict[int, int]"}, {"lineNumber": 598, "col_offset": 43, "nodeName": "it", "type": "Any"}, {"lineNumber": 604, "col_offset": 30, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 605, "col_offset": 37, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 606, "col_offset": 40, "nodeName": "offsets", "type": "Any"}, {"lineNumber": 606, "col_offset": 59, "nodeName": "index", "type": "Any"}, {"lineNumber": 606, "col_offset": 68, "nodeName": "number_indices", "type": "Any"}, {"lineNumber": 611, "col_offset": 24, "nodeName": "append", "type": "Any"}, {"lineNumber": 614, "col_offset": 23, "nodeName": "number_indices", "type": "Any"}, {"lineNumber": 617, "col_offset": 24, "nodeName": "pop", "type": "Any"}, {"lineNumber": 620, "col_offset": 20, "nodeName": "answer_json", "type": "Dict[str, Any]"}, {"lineNumber": 621, "col_offset": 38, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 622, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 622, "col_offset": 43, "nodeName": "predicted_count", "type": "Any"}, {"lineNumber": 623, "col_offset": 20, "nodeName": "answer_json", "type": "Dict[str, Any]"}, {"lineNumber": 625, "col_offset": 26, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 502, "col_offset": 57, "nodeName": "number_mask", "type": "Any"}, {"lineNumber": 522, "col_offset": 42, "nodeName": "util", "type": "module"}, {"lineNumber": 525, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 529, "col_offset": 48, "nodeName": "util", "type": "module"}, {"lineNumber": 533, "col_offset": 56, "nodeName": "util", "type": "module"}, {"lineNumber": 534, "col_offset": 20, "nodeName": "log_marginal_likelihood_list", "type": "List[Any]"}, {"lineNumber": 563, "col_offset": 24, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 585, "col_offset": 43, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 586, "col_offset": 43, "nodeName": "predicted_span", "type": "Tuple[Any, ...]"}, {"lineNumber": 587, "col_offset": 41, "nodeName": "predicted_span", "type": "Tuple[Any, ...]"}, {"lineNumber": 595, "col_offset": 48, "nodeName": "i", "type": "int"}, {"lineNumber": 598, "col_offset": 35, "nodeName": "it", "type": "Any"}, {"lineNumber": 598, "col_offset": 49, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 601, "col_offset": 25, "nodeName": "sign", "type": "Any"}, {"lineNumber": 601, "col_offset": 32, "nodeName": "number", "type": "Any"}, {"lineNumber": 604, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 605, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 606, "col_offset": 48, "nodeName": "index", "type": "Any"}, {"lineNumber": 612, "col_offset": 37, "nodeName": "offset", "type": "Any"}, {"lineNumber": 612, "col_offset": 54, "nodeName": "value", "type": "Any"}, {"lineNumber": 612, "col_offset": 69, "nodeName": "sign", "type": "Any"}, {"lineNumber": 492, "col_offset": 41, "nodeName": "sum", "type": "Any"}, {"lineNumber": 520, "col_offset": 39, "nodeName": "answer_as_counts", "type": "Any"}, {"lineNumber": 537, "col_offset": 71, "nodeName": "answering_ability", "type": "Any"}, {"lineNumber": 575, "col_offset": 43, "nodeName": "detach", "type": "Any"}, {"lineNumber": 601, "col_offset": 43, "nodeName": "sign", "type": "Any"}, {"lineNumber": 601, "col_offset": 49, "nodeName": "number", "type": "Any"}, {"lineNumber": 601, "col_offset": 59, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 601, "col_offset": 63, "nodeName": "predicted_signs", "type": "List[int]"}, {"lineNumber": 601, "col_offset": 80, "nodeName": "original_numbers", "type": "Any"}, {"lineNumber": 611, "col_offset": 24, "nodeName": "answer_json", "type": "Dict[str, Any]"}, {"lineNumber": 617, "col_offset": 24, "nodeName": "answer_json", "type": "Dict[str, Any]"}, {"lineNumber": 621, "col_offset": 38, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 625, "col_offset": 68, "nodeName": "predicted_ability_str", "type": "Any"}, {"lineNumber": 492, "col_offset": 41, "nodeName": "answer_as_add_sub_expressions", "type": "Any"}, {"lineNumber": 563, "col_offset": 24, "nodeName": "detach", "type": "Any"}, {"lineNumber": 585, "col_offset": 43, "nodeName": "detach", "type": "Any"}, {"lineNumber": 598, "col_offset": 49, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 575, "col_offset": 43, "nodeName": "best_passage_span", "type": "Any"}, {"lineNumber": 621, "col_offset": 38, "nodeName": "detach", "type": "Any"}, {"lineNumber": 563, "col_offset": 24, "nodeName": "best_answer_ability", "type": "Any"}, {"lineNumber": 575, "col_offset": 61, "nodeName": "i", "type": "int"}, {"lineNumber": 585, "col_offset": 43, "nodeName": "best_question_span", "type": "Any"}, {"lineNumber": 598, "col_offset": 49, "nodeName": "detach", "type": "Any"}, {"lineNumber": 563, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 585, "col_offset": 62, "nodeName": "i", "type": "int"}, {"lineNumber": 621, "col_offset": 38, "nodeName": "best_count_number", "type": "Any"}, {"lineNumber": 598, "col_offset": 49, "nodeName": "best_signs_for_numbers", "type": "Any"}, {"lineNumber": 621, "col_offset": 56, "nodeName": "i", "type": "int"}, {"lineNumber": 598, "col_offset": 72, "nodeName": "i", "type": "int"}]