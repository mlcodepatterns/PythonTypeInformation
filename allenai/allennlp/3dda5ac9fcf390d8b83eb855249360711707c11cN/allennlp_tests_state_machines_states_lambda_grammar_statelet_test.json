[{"lineNumber": 9, "col_offset": 0, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 9, "col_offset": 35, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 9, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 10, "col_offset": 7, "nodeName": "symbol", "type": "str"}, {"lineNumber": 12, "col_offset": 20, "nodeName": "symbol", "type": "str"}, {"lineNumber": 14, "col_offset": 7, "nodeName": "symbol", "type": "str"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "s_actions", "type": "object"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "t_actions", "type": "object"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "e_actions", "type": "object"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "valid_actions", "type": "object"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "context_actions", "type": "object"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "valid_actions", "type": "object"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "context_actions", "type": "object"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "expected_next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 135, "col_offset": 16, "nodeName": "expected_next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "expected_next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "expected_next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "LambdaGrammarStatelet", "type": "Type[allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet]"}, {"lineNumber": 21, "col_offset": 57, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "LambdaGrammarStatelet", "type": "Type[allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet]"}, {"lineNumber": 23, "col_offset": 54, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "is_finished", "type": "Callable[[], bool]"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 28, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 29, "col_offset": 20, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "LambdaGrammarStatelet", "type": "Type[allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet]"}, {"lineNumber": 31, "col_offset": 61, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 33, "col_offset": 44, "nodeName": "s_actions", "type": "object"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "LambdaGrammarStatelet", "type": "Type[allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet]"}, {"lineNumber": 35, "col_offset": 61, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 37, "col_offset": 44, "nodeName": "t_actions", "type": "object"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "LambdaGrammarStatelet", "type": "Type[allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet]"}, {"lineNumber": 39, "col_offset": 77, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 41, "col_offset": 44, "nodeName": "e_actions", "type": "object"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "LambdaGrammarStatelet", "type": "Type[allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet]"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "get_valid_actions", "type": "Callable[[], Dict[str, Tuple[Any, Any, List[int]]]]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "get_valid_actions", "type": "Callable[[], Dict[str, Tuple[Any, Any, List[int]]]]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 62, "col_offset": 16, "nodeName": "LambdaGrammarStatelet", "type": "Type[allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "get_valid_actions", "type": "Callable[[], Dict[str, Tuple[Any, Any, List[int]]]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "get_valid_actions", "type": "Callable[[], Dict[str, Tuple[Any, Any, List[int]]]]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 85, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 86, "col_offset": 26, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "LambdaGrammarStatelet", "type": "Type[allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet]"}, {"lineNumber": 88, "col_offset": 49, "nodeName": "valid_actions", "type": "object"}, {"lineNumber": 88, "col_offset": 64, "nodeName": "context_actions", "type": "object"}, {"lineNumber": 88, "col_offset": 81, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "take_action", "type": "Callable"}, {"lineNumber": 90, "col_offset": 30, "nodeName": "LambdaGrammarStatelet", "type": "Type[allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet]"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "valid_actions", "type": "object"}, {"lineNumber": 91, "col_offset": 43, "nodeName": "context_actions", "type": "object"}, {"lineNumber": 91, "col_offset": 60, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "LambdaGrammarStatelet", "type": "Type[allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet]"}, {"lineNumber": 96, "col_offset": 28, "nodeName": "valid_actions", "type": "object"}, {"lineNumber": 96, "col_offset": 43, "nodeName": "context_actions", "type": "object"}, {"lineNumber": 96, "col_offset": 60, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "take_action", "type": "Callable"}, {"lineNumber": 99, "col_offset": 30, "nodeName": "LambdaGrammarStatelet", "type": "Type[allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet]"}, {"lineNumber": 100, "col_offset": 23, "nodeName": "valid_actions", "type": "object"}, {"lineNumber": 100, "col_offset": 38, "nodeName": "context_actions", "type": "object"}, {"lineNumber": 100, "col_offset": 55, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 112, "col_offset": 24, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "LambdaGrammarStatelet", "type": "Type[allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet]"}, {"lineNumber": 116, "col_offset": 32, "nodeName": "valid_actions", "type": "object"}, {"lineNumber": 116, "col_offset": 47, "nodeName": "context_actions", "type": "object"}, {"lineNumber": 116, "col_offset": 64, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "take_action", "type": "Callable"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "LambdaGrammarStatelet", "type": "Type[allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet]"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "valid_actions", "type": "object"}, {"lineNumber": 120, "col_offset": 60, "nodeName": "context_actions", "type": "object"}, {"lineNumber": 120, "col_offset": 77, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "take_action", "type": "Callable"}, {"lineNumber": 126, "col_offset": 30, "nodeName": "LambdaGrammarStatelet", "type": "Type[allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "valid_actions", "type": "object"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "context_actions", "type": "object"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 38, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "take_action", "type": "Callable"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "LambdaGrammarStatelet", "type": "Type[allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet]"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "valid_actions", "type": "object"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "context_actions", "type": "object"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "take_action", "type": "Callable"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "LambdaGrammarStatelet", "type": "Type[allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet]"}, {"lineNumber": 149, "col_offset": 45, "nodeName": "valid_actions", "type": "object"}, {"lineNumber": 149, "col_offset": 60, "nodeName": "context_actions", "type": "object"}, {"lineNumber": 149, "col_offset": 77, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 151, "col_offset": 38, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "take_action", "type": "Callable"}, {"lineNumber": 155, "col_offset": 30, "nodeName": "LambdaGrammarStatelet", "type": "Type[allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet]"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "valid_actions", "type": "object"}, {"lineNumber": 156, "col_offset": 38, "nodeName": "context_actions", "type": "object"}, {"lineNumber": 156, "col_offset": 55, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 158, "col_offset": 38, "nodeName": "__dict__", "type": "Dict[str, Any]"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "is_finished", "type": "Callable[[], bool]"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "s_actions", "type": "object"}, {"lineNumber": 31, "col_offset": 45, "nodeName": "t_actions", "type": "object"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "get_valid_actions", "type": "Callable[[], Dict[str, Tuple[Any, Any, List[int]]]]"}, {"lineNumber": 35, "col_offset": 29, "nodeName": "s_actions", "type": "object"}, {"lineNumber": 35, "col_offset": 45, "nodeName": "t_actions", "type": "object"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "get_valid_actions", "type": "Callable[[], Dict[str, Tuple[Any, Any, List[int]]]]"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "s_actions", "type": "object"}, {"lineNumber": 39, "col_offset": 45, "nodeName": "t_actions", "type": "object"}, {"lineNumber": 39, "col_offset": 61, "nodeName": "e_actions", "type": "object"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "get_valid_actions", "type": "Callable[[], Dict[str, Tuple[Any, Any, List[int]]]]"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 56, "col_offset": 18, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 77, "col_offset": 18, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 89, "col_offset": 21, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "expected_next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "expected_next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 105, "col_offset": 27, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "LambdaGrammarStatelet", "type": "Type[allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet]"}, {"lineNumber": 106, "col_offset": 61, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "take_action", "type": "Callable"}, {"lineNumber": 118, "col_offset": 21, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 122, "col_offset": 38, "nodeName": "expected_next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 125, "col_offset": 21, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 133, "col_offset": 38, "nodeName": "expected_next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 136, "col_offset": 21, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "expected_next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 147, "col_offset": 21, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 151, "col_offset": 38, "nodeName": "expected_next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 154, "col_offset": 21, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 158, "col_offset": 38, "nodeName": "expected_next_state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 75, "col_offset": 15, "nodeName": "actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 105, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "state", "type": "allennlp.state_machines.states.lambda_grammar_statelet.LambdaGrammarStatelet"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 48, "col_offset": 43, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 69, "col_offset": 43, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 47, "col_offset": 52, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 48, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 66, "col_offset": 55, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 67, "col_offset": 55, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 69, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 69, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 47, "col_offset": 52, "nodeName": "torch", "type": "Any"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 66, "col_offset": 55, "nodeName": "torch", "type": "Any"}, {"lineNumber": 67, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 67, "col_offset": 55, "nodeName": "torch", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}]