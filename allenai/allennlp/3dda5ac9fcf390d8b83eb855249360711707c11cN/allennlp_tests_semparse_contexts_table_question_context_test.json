[{"lineNumber": 8, "col_offset": 31, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "question", "type": "str"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "test_file", "type": "str"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "question", "type": "str"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "test_file", "type": "str"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "table_lines", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "test_file", "type": "str"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "question", "type": "str"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "test_file", "type": "str"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "test_file", "type": "str"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "question", "type": "str"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "test_file", "type": "str"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "question", "type": "str"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "test_file", "type": "str"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "question", "type": "str"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "test_file", "type": "str"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "test_file", "type": "str"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "column_names", "type": "Set[str]"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "column_names", "type": "Set[str]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "question", "type": "str"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "test_file", "type": "str"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "column_names", "type": "Set[str]"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "column_names", "type": "Set[str]"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "question", "type": "str"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "test_file", "type": "str"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "column_names", "type": "Set[str]"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "column_names", "type": "Set[str]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "question", "type": "str"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "test_file", "type": "str"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "column_names", "type": "Set[str]"}, {"lineNumber": 191, "col_offset": 23, "nodeName": "column_names", "type": "Set[str]"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "question", "type": "str"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 200, "col_offset": 8, "nodeName": "test_file", "type": "str"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "question", "type": "str"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "test_file", "type": "str"}, {"lineNumber": 213, "col_offset": 8, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "knowledge_graph", "type": "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "entities", "type": "List[str]"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "entities", "type": "List[str]"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "neighbors", "type": "Dict[str, List[str]]"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "neighbors", "type": "Dict[str, List[str]]"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "neighbors_with_sets", "type": "Dict[str, Set[str]]"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "entity_text", "type": "Dict[str, str]"}, {"lineNumber": 246, "col_offset": 22, "nodeName": "entity_text", "type": "Dict[str, str]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "question", "type": "str"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "test_file", "type": "str"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "knowledge_graph", "type": "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph"}, {"lineNumber": 266, "col_offset": 8, "nodeName": "neighbors", "type": "Dict[str, List[str]]"}, {"lineNumber": 266, "col_offset": 20, "nodeName": "neighbors", "type": "Dict[str, List[str]]"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 11, "col_offset": 25, "nodeName": "WordTokenizer", "type": "Any"}, {"lineNumber": 15, "col_offset": 26, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 15, "col_offset": 50, "nodeName": "question", "type": "str"}, {"lineNumber": 17, "col_offset": 33, "nodeName": "read_from_file", "type": "Callable[[Any, str, List[allennlp.data.tokenizers.token.Token]], allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 17, "col_offset": 69, "nodeName": "test_file", "type": "str"}, {"lineNumber": 17, "col_offset": 80, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "table_data", "type": "List[Dict[str, Union[float, str, allennlp.semparse.common.date.Date]]]"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 53, "col_offset": 50, "nodeName": "question", "type": "str"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "read_from_lines", "type": "Callable[[Any, List[Any], List[allennlp.data.tokenizers.token.Token]], allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 56, "col_offset": 70, "nodeName": "table_lines", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 83, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "table_data", "type": "List[Dict[str, Union[float, str, allennlp.semparse.common.date.Date]]]"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 105, "col_offset": 50, "nodeName": "question", "type": "str"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "read_from_file", "type": "Callable[[Any, str, List[allennlp.data.tokenizers.token.Token]], allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 107, "col_offset": 69, "nodeName": "test_file", "type": "str"}, {"lineNumber": 107, "col_offset": 80, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "_", "type": "List[Tuple[str, str]]"}, {"lineNumber": 108, "col_offset": 11, "nodeName": "number_entities", "type": "List[Tuple[str, int]]"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "get_entities_from_question", "type": "Callable[[], Tuple[List[Tuple[str, str]], List[Tuple[str, int]]]]"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "number_entities", "type": "List[Tuple[str, int]]"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 113, "col_offset": 50, "nodeName": "question", "type": "str"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "read_from_file", "type": "Callable[[Any, str, List[allennlp.data.tokenizers.token.Token]], allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 115, "col_offset": 69, "nodeName": "test_file", "type": "str"}, {"lineNumber": 115, "col_offset": 80, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "_", "type": "List[Tuple[str, str]]"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "number_entities", "type": "List[Tuple[str, int]]"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "get_entities_from_question", "type": "Callable[[], Tuple[List[Tuple[str, str]], List[Tuple[str, int]]]]"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "number_entities", "type": "List[Tuple[str, int]]"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 122, "col_offset": 50, "nodeName": "question", "type": "str"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "read_from_file", "type": "Callable[[Any, str, List[allennlp.data.tokenizers.token.Token]], allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 124, "col_offset": 69, "nodeName": "test_file", "type": "str"}, {"lineNumber": 124, "col_offset": 80, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "_", "type": "List[Tuple[str, str]]"}, {"lineNumber": 125, "col_offset": 11, "nodeName": "number_entities", "type": "List[Tuple[str, int]]"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "get_entities_from_question", "type": "Callable[[], Tuple[List[Tuple[str, str]], List[Tuple[str, int]]]]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "number_entities", "type": "List[Tuple[str, int]]"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 130, "col_offset": 50, "nodeName": "question", "type": "str"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "read_from_file", "type": "Callable[[Any, str, List[allennlp.data.tokenizers.token.Token]], allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 132, "col_offset": 69, "nodeName": "test_file", "type": "str"}, {"lineNumber": 132, "col_offset": 80, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "entities", "type": "List[Tuple[str, str]]"}, {"lineNumber": 133, "col_offset": 18, "nodeName": "_", "type": "List[Tuple[str, int]]"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "get_entities_from_question", "type": "Callable[[], Tuple[List[Tuple[str, str]], List[Tuple[str, int]]]]"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "entities", "type": "List[Tuple[str, str]]"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 141, "col_offset": 50, "nodeName": "question", "type": "str"}, {"lineNumber": 143, "col_offset": 33, "nodeName": "read_from_file", "type": "Callable[[Any, str, List[allennlp.data.tokenizers.token.Token]], allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 143, "col_offset": 69, "nodeName": "test_file", "type": "str"}, {"lineNumber": 143, "col_offset": 80, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 144, "col_offset": 8, "nodeName": "_", "type": "List[Tuple[str, str]]"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "numbers", "type": "List[Tuple[str, int]]"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "get_entities_from_question", "type": "Callable[[], Tuple[List[Tuple[str, str]], List[Tuple[str, int]]]]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "numbers", "type": "List[Tuple[str, int]]"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 149, "col_offset": 50, "nodeName": "question", "type": "str"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "read_from_file", "type": "Callable[[Any, str, List[allennlp.data.tokenizers.token.Token]], allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 151, "col_offset": 69, "nodeName": "test_file", "type": "str"}, {"lineNumber": 151, "col_offset": 80, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "entities", "type": "List[Tuple[str, str]]"}, {"lineNumber": 152, "col_offset": 18, "nodeName": "numbers", "type": "List[Tuple[str, int]]"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "get_entities_from_question", "type": "Callable[[], Tuple[List[Tuple[str, str]], List[Tuple[str, int]]]]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "entities", "type": "List[Tuple[str, str]]"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "numbers", "type": "List[Tuple[str, int]]"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 160, "col_offset": 50, "nodeName": "question", "type": "str"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "read_from_file", "type": "Callable[[Any, str, List[allennlp.data.tokenizers.token.Token]], allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 162, "col_offset": 69, "nodeName": "test_file", "type": "str"}, {"lineNumber": 162, "col_offset": 80, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 164, "col_offset": 47, "nodeName": "column_names", "type": "Set[str]"}, {"lineNumber": 165, "col_offset": 46, "nodeName": "column_names", "type": "Set[str]"}, {"lineNumber": 166, "col_offset": 46, "nodeName": "column_names", "type": "Set[str]"}, {"lineNumber": 167, "col_offset": 41, "nodeName": "column_names", "type": "Set[str]"}, {"lineNumber": 171, "col_offset": 26, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 171, "col_offset": 50, "nodeName": "question", "type": "str"}, {"lineNumber": 173, "col_offset": 33, "nodeName": "read_from_file", "type": "Callable[[Any, str, List[allennlp.data.tokenizers.token.Token]], allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 173, "col_offset": 69, "nodeName": "test_file", "type": "str"}, {"lineNumber": 173, "col_offset": 80, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 174, "col_offset": 23, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 175, "col_offset": 46, "nodeName": "column_names", "type": "Set[str]"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 179, "col_offset": 50, "nodeName": "question", "type": "str"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "read_from_file", "type": "Callable[[Any, str, List[allennlp.data.tokenizers.token.Token]], allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 181, "col_offset": 69, "nodeName": "test_file", "type": "str"}, {"lineNumber": 181, "col_offset": 80, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 183, "col_offset": 52, "nodeName": "column_names", "type": "Set[str]"}, {"lineNumber": 184, "col_offset": 49, "nodeName": "column_names", "type": "Set[str]"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 188, "col_offset": 50, "nodeName": "question", "type": "str"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "read_from_file", "type": "Callable[[Any, str, List[allennlp.data.tokenizers.token.Token]], allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 190, "col_offset": 69, "nodeName": "test_file", "type": "str"}, {"lineNumber": 190, "col_offset": 80, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 191, "col_offset": 23, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 192, "col_offset": 45, "nodeName": "column_names", "type": "Set[str]"}, {"lineNumber": 193, "col_offset": 43, "nodeName": "column_names", "type": "Set[str]"}, {"lineNumber": 194, "col_offset": 45, "nodeName": "column_names", "type": "Set[str]"}, {"lineNumber": 195, "col_offset": 39, "nodeName": "column_names", "type": "Set[str]"}, {"lineNumber": 199, "col_offset": 26, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 199, "col_offset": 50, "nodeName": "question", "type": "str"}, {"lineNumber": 201, "col_offset": 33, "nodeName": "read_from_file", "type": "Callable[[Any, str, List[allennlp.data.tokenizers.token.Token]], allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 201, "col_offset": 69, "nodeName": "test_file", "type": "str"}, {"lineNumber": 201, "col_offset": 80, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "string_entities", "type": "List[Tuple[str, str]]"}, {"lineNumber": 202, "col_offset": 25, "nodeName": "number_entities", "type": "List[Tuple[str, int]]"}, {"lineNumber": 202, "col_offset": 43, "nodeName": "get_entities_from_question", "type": "Callable[[], Tuple[List[Tuple[str, str]], List[Tuple[str, int]]]]"}, {"lineNumber": 203, "col_offset": 15, "nodeName": "string_entities", "type": "List[Tuple[str, str]]"}, {"lineNumber": 207, "col_offset": 15, "nodeName": "number_entities", "type": "List[Tuple[str, int]]"}, {"lineNumber": 211, "col_offset": 26, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 211, "col_offset": 50, "nodeName": "question", "type": "str"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "read_from_file", "type": "Callable[[Any, str, List[allennlp.data.tokenizers.token.Token]], allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 213, "col_offset": 69, "nodeName": "test_file", "type": "str"}, {"lineNumber": 213, "col_offset": 80, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 214, "col_offset": 26, "nodeName": "get_table_knowledge_graph", "type": "Callable[[], allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph]"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "knowledge_graph", "type": "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "knowledge_graph", "type": "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph"}, {"lineNumber": 233, "col_offset": 31, "nodeName": "key", "type": "str"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "neighbors_with_sets", "type": "Dict[str, Set[str]]"}, {"lineNumber": 246, "col_offset": 22, "nodeName": "knowledge_graph", "type": "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "entity_text", "type": "Dict[str, str]"}, {"lineNumber": 262, "col_offset": 26, "nodeName": "tokenize", "type": "Any"}, {"lineNumber": 262, "col_offset": 50, "nodeName": "question", "type": "str"}, {"lineNumber": 264, "col_offset": 33, "nodeName": "read_from_file", "type": "Callable[[Any, str, List[allennlp.data.tokenizers.token.Token]], allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 264, "col_offset": 69, "nodeName": "test_file", "type": "str"}, {"lineNumber": 264, "col_offset": 80, "nodeName": "question_tokens", "type": "Any"}, {"lineNumber": 265, "col_offset": 26, "nodeName": "get_table_knowledge_graph", "type": "Callable[[], allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph]"}, {"lineNumber": 266, "col_offset": 20, "nodeName": "knowledge_graph", "type": "allennlp.semparse.contexts.knowledge_graph.KnowledgeGraph"}, {"lineNumber": 11, "col_offset": 39, "nodeName": "SpacyWordSplitter", "type": "Any"}, {"lineNumber": 15, "col_offset": 26, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 17, "col_offset": 33, "nodeName": "TableQuestionContext", "type": "Type[allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "strip", "type": "Callable[..., str]"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "line", "type": "str"}, {"lineNumber": 56, "col_offset": 33, "nodeName": "TableQuestionContext", "type": "Type[allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 107, "col_offset": 33, "nodeName": "TableQuestionContext", "type": "Type[allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 108, "col_offset": 29, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "TableQuestionContext", "type": "Type[allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "TableQuestionContext", "type": "Type[allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 125, "col_offset": 29, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "TableQuestionContext", "type": "Type[allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 143, "col_offset": 33, "nodeName": "TableQuestionContext", "type": "Type[allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 151, "col_offset": 33, "nodeName": "TableQuestionContext", "type": "Type[allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 152, "col_offset": 28, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 162, "col_offset": 33, "nodeName": "TableQuestionContext", "type": "Type[allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 171, "col_offset": 26, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 173, "col_offset": 33, "nodeName": "TableQuestionContext", "type": "Type[allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 181, "col_offset": 33, "nodeName": "TableQuestionContext", "type": "Type[allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 190, "col_offset": 33, "nodeName": "TableQuestionContext", "type": "Type[allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 199, "col_offset": 26, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 201, "col_offset": 33, "nodeName": "TableQuestionContext", "type": "Type[allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 202, "col_offset": 43, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 211, "col_offset": 26, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 213, "col_offset": 33, "nodeName": "TableQuestionContext", "type": "Type[allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 214, "col_offset": 26, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 217, "col_offset": 22, "nodeName": "entities", "type": "List[str]"}, {"lineNumber": 233, "col_offset": 36, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 233, "col_offset": 40, "nodeName": "value", "type": "List[str]"}, {"lineNumber": 262, "col_offset": 26, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 264, "col_offset": 33, "nodeName": "TableQuestionContext", "type": "Type[allennlp.semparse.contexts.table_question_context.TableQuestionContext]"}, {"lineNumber": 265, "col_offset": 26, "nodeName": "table_question_context", "type": "allennlp.semparse.contexts.table_question_context.TableQuestionContext"}, {"lineNumber": 269, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 287, "col_offset": 15, "nodeName": "neighbors", "type": "Dict[str, List[str]]"}, {"lineNumber": 288, "col_offset": 15, "nodeName": "neighbors", "type": "Dict[str, List[str]]"}, {"lineNumber": 289, "col_offset": 15, "nodeName": "neighbors", "type": "Dict[str, List[str]]"}, {"lineNumber": 290, "col_offset": 15, "nodeName": "neighbors", "type": "Dict[str, List[str]]"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "neighbors", "type": "Dict[str, List[str]]"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "neighbors", "type": "Dict[str, List[str]]"}, {"lineNumber": 293, "col_offset": 15, "nodeName": "neighbors", "type": "Dict[str, List[str]]"}, {"lineNumber": 294, "col_offset": 15, "nodeName": "neighbors", "type": "Dict[str, List[str]]"}, {"lineNumber": 295, "col_offset": 15, "nodeName": "neighbors", "type": "Dict[str, List[str]]"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "neighbors", "type": "Dict[str, List[str]]"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "neighbors", "type": "Dict[str, List[str]]"}, {"lineNumber": 298, "col_offset": 15, "nodeName": "neighbors", "type": "Dict[str, List[str]]"}, {"lineNumber": 299, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 307, "col_offset": 15, "nodeName": "neighbors", "type": "Dict[str, List[str]]"}, {"lineNumber": 10, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 15, "col_offset": 26, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 16, "col_offset": 23, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "line", "type": "str"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "readlines", "type": "Callable"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 113, "col_offset": 26, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 122, "col_offset": 26, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 142, "col_offset": 23, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 150, "col_offset": 23, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 161, "col_offset": 23, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 171, "col_offset": 26, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 180, "col_offset": 23, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 199, "col_offset": 26, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 200, "col_offset": 23, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 211, "col_offset": 26, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 212, "col_offset": 23, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 233, "col_offset": 51, "nodeName": "key", "type": "str"}, {"lineNumber": 233, "col_offset": 56, "nodeName": "value", "type": "List[str]"}, {"lineNumber": 233, "col_offset": 65, "nodeName": "items", "type": "Callable"}, {"lineNumber": 236, "col_offset": 38, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 237, "col_offset": 40, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 238, "col_offset": 35, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 262, "col_offset": 26, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 263, "col_offset": 23, "nodeName": "self", "type": "TestTableQuestionContext"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 286, "col_offset": 19, "nodeName": "neighbors", "type": "Dict[str, List[str]]"}, {"lineNumber": 299, "col_offset": 19, "nodeName": "neighbors", "type": "Dict[str, List[str]]"}, {"lineNumber": 20, "col_offset": 36, "nodeName": "Date", "type": "Type[allennlp.semparse.common.date.Date]"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "Date", "type": "Type[allennlp.semparse.common.date.Date]"}, {"lineNumber": 233, "col_offset": 65, "nodeName": "neighbors", "type": "Dict[str, List[str]]"}, {"lineNumber": 269, "col_offset": 19, "nodeName": "neighbors", "type": "Dict[str, List[str]]"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "open", "type": "Callable"}, {"lineNumber": 55, "col_offset": 53, "nodeName": "test_file", "type": "str"}]