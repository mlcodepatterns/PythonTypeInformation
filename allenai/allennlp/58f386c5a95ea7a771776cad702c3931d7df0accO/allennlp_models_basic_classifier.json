[{"lineNumber": 13, "col_offset": 22, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "_text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 53, "col_offset": 36, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 55, "col_offset": 11, "nodeName": "seq2seq_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "_seq2vec_encoder", "type": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "seq2vec_encoder", "type": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "_classifier_input_dim", "type": "int"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "dropout", "type": "float"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "num_labels", "type": "int"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "_classification_layer", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "_accuracy", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "_loss", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "embedded_text", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "_seq2seq_encoder", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "embedded_text", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "probs", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 125, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 50, "col_offset": 54, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "_seq2seq_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "seq2seq_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "_dropout", "type": "None"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "_num_labels", "type": "int"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "num_labels", "type": "int"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "_num_labels", "type": "int"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 72, "col_offset": 53, "nodeName": "_classifier_input_dim", "type": "int"}, {"lineNumber": 72, "col_offset": 81, "nodeName": "_num_labels", "type": "int"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "CrossEntropyLoss", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 75, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "IntTensor", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 102, "col_offset": 50, "nodeName": "tokens", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "float", "type": "Any"}, {"lineNumber": 105, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "embedded_text", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "_seq2vec_encoder", "type": "Any"}, {"lineNumber": 108, "col_offset": 46, "nodeName": "embedded_text", "type": "Any"}, {"lineNumber": 110, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "embedded_text", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "_classification_layer", "type": "Any"}, {"lineNumber": 113, "col_offset": 44, "nodeName": "embedded_text", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 114, "col_offset": 44, "nodeName": "logits", "type": "Any"}, {"lineNumber": 116, "col_offset": 33, "nodeName": "logits", "type": "Any"}, {"lineNumber": 116, "col_offset": 50, "nodeName": "probs", "type": "Any"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "label", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 120, "col_offset": 34, "nodeName": "loss", "type": "Any"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "_seq2vec_encoder", "type": "allennlp.modules.seq2vec_encoders.seq2vec_encoder.Seq2VecEncoder"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 64, "col_offset": 45, "nodeName": "dropout", "type": "float"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "get_vocab_size", "type": "Callable[..., int]"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "nn", "type": "Any"}, {"lineNumber": 72, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 81, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 102, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "_seq2seq_encoder", "type": "Any"}, {"lineNumber": 106, "col_offset": 50, "nodeName": "embedded_text", "type": "Any"}, {"lineNumber": 108, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 66, "nodeName": "mask", "type": "Any"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 111, "col_offset": 42, "nodeName": "embedded_text", "type": "Any"}, {"lineNumber": 113, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "functional", "type": "Any"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "_loss", "type": "Any"}, {"lineNumber": 119, "col_offset": 30, "nodeName": "logits", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "_accuracy", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "logits", "type": "Any"}, {"lineNumber": 121, "col_offset": 35, "nodeName": "label", "type": "Any"}, {"lineNumber": 79, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 79, "col_offset": 60, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 126, "col_offset": 57, "nodeName": "reset", "type": "bool"}, {"lineNumber": 125, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 125, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "nn", "type": "Any"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 71, "col_offset": 62, "nodeName": "label_namespace", "type": "str"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 74, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "get_text_field_mask", "type": "Callable[..., Any]"}, {"lineNumber": 103, "col_offset": 35, "nodeName": "tokens", "type": "Dict[str, Any]"}, {"lineNumber": 106, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 70, "nodeName": "mask", "type": "Any"}, {"lineNumber": 111, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "view", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "_accuracy", "type": "Any"}, {"lineNumber": 64, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 114, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 126, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "long", "type": "Any"}, {"lineNumber": 119, "col_offset": 38, "nodeName": "label", "type": "Any"}]