[{"lineNumber": 11, "col_offset": 29, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "softmax", "type": "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "sampled_softmax", "type": "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "unsampled_softmax", "type": "allennlp.modules.softmax_loss.SoftmaxLoss"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "softmax_b", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "full_loss", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "sampled_loss", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "sampled_softmax", "type": "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "train_loss", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "eval_loss", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "sampled_softmax", "type": "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "unsampled_softmax", "type": "allennlp.modules.softmax_loss.SoftmaxLoss"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "FAKE_SAMPLES", "type": "List[int]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "choice_func", "type": "Callable[[int, int], Tuple[numpy.ndarray, int]]"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "fake_choice", "type": "Callable[[int, int], Tuple[numpy.ndarray, int]]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "data", "type": "Any"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "softmax_b", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "targets", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "full_loss", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "sampled_loss", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "pct_error", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "sample", "type": "numpy.ndarray"}, {"lineNumber": 13, "col_offset": 16, "nodeName": "num_tries", "type": "int"}, {"lineNumber": 13, "col_offset": 28, "nodeName": "_choice", "type": "Callable[[int, int], Tuple[numpy.ndarray, int]]"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "num_tries", "type": "int"}, {"lineNumber": 19, "col_offset": 18, "nodeName": "SampledSoftmaxLoss", "type": "Type[allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss]"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "long", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "softmax", "type": "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss"}, {"lineNumber": 25, "col_offset": 20, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "targets", "type": "Any"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "SampledSoftmaxLoss", "type": "Type[allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss]"}, {"lineNumber": 29, "col_offset": 28, "nodeName": "SoftmaxLoss", "type": "Type[allennlp.modules.softmax_loss.SoftmaxLoss]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "softmax_w", "type": "Any"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "t", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "softmax_b", "type": "Any"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "unsampled_softmax", "type": "allennlp.modules.softmax_loss.SoftmaxLoss"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "long", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "item", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "item", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "sampled_loss", "type": "Any"}, {"lineNumber": 46, "col_offset": 53, "nodeName": "full_loss", "type": "Any"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "SampledSoftmaxLoss", "type": "Type[allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss]"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "long", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "item", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "item", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "eval_loss", "type": "Any"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "train_loss", "type": "Any"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "SampledSoftmaxLoss", "type": "Type[allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss]"}, {"lineNumber": 65, "col_offset": 28, "nodeName": "SoftmaxLoss", "type": "Type[allennlp.modules.softmax_loss.SoftmaxLoss]"}, {"lineNumber": 70, "col_offset": 61, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "sampled_softmax", "type": "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "softmax_w", "type": "Any"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "t", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "softmax_b", "type": "Any"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "unsampled_softmax", "type": "allennlp.modules.softmax_loss.SoftmaxLoss"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "rand", "type": "Any"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "long", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "item", "type": "Any"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "item", "type": "Any"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "full_loss", "type": "Any"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 22, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "sampled_softmax", "type": "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "unsampled_softmax", "type": "allennlp.modules.softmax_loss.SoftmaxLoss"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "sampled_softmax", "type": "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "softmax_w", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "sampled_softmax", "type": "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss"}, {"lineNumber": 39, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 52, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "sampled_softmax", "type": "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "sampled_softmax", "type": "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss"}, {"lineNumber": 70, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 70, "col_offset": 53, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "FAKE_SAMPLES", "type": "List[int]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "sampled_softmax", "type": "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "softmax_w", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "sampled_softmax", "type": "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "sampled_softmax", "type": "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "unsampled_softmax", "type": "allennlp.modules.softmax_loss.SoftmaxLoss"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "sampled_loss", "type": "Any"}, {"lineNumber": 97, "col_offset": 36, "nodeName": "full_loss", "type": "Any"}, {"lineNumber": 98, "col_offset": 15, "nodeName": "abs", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 19, "nodeName": "pct_error", "type": "Any"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 14, "col_offset": 23, "nodeName": "sample", "type": "numpy.ndarray"}, {"lineNumber": 15, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 15, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 15, "col_offset": 42, "nodeName": "sample", "type": "numpy.ndarray"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "randint", "type": "Any"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "unsampled_softmax", "type": "allennlp.modules.softmax_loss.SoftmaxLoss"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "randint", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "unsampled_softmax", "type": "allennlp.modules.softmax_loss.SoftmaxLoss"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 42, "col_offset": 49, "nodeName": "targets", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "sampled_softmax", "type": "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss"}, {"lineNumber": 43, "col_offset": 39, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 43, "col_offset": 50, "nodeName": "targets", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "randint", "type": "Any"}, {"lineNumber": 56, "col_offset": 21, "nodeName": "sampled_softmax", "type": "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 56, "col_offset": 48, "nodeName": "targets", "type": "Any"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "sampled_softmax", "type": "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 59, "col_offset": 47, "nodeName": "targets", "type": "Any"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "num_words", "type": "int"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "FAKE_SAMPLES", "type": "List[int]"}, {"lineNumber": 70, "col_offset": 67, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 70, "col_offset": 79, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "softmax_b", "type": "Any"}, {"lineNumber": 82, "col_offset": 41, "nodeName": "unsampled_softmax", "type": "allennlp.modules.softmax_loss.SoftmaxLoss"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "randint", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "unsampled_softmax", "type": "allennlp.modules.softmax_loss.SoftmaxLoss"}, {"lineNumber": 92, "col_offset": 38, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 92, "col_offset": 49, "nodeName": "targets", "type": "Any"}, {"lineNumber": 93, "col_offset": 23, "nodeName": "sampled_softmax", "type": "allennlp.modules.sampled_softmax_loss.SampledSoftmaxLoss"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 93, "col_offset": 50, "nodeName": "targets", "type": "Any"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 53, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 72, "col_offset": 19, "nodeName": "np", "type": "module"}, {"lineNumber": 70, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "unsampled_softmax", "type": "allennlp.modules.softmax_loss.SoftmaxLoss"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "i", "type": "int"}, {"lineNumber": 90, "col_offset": 18, "nodeName": "torch", "type": "Any"}]