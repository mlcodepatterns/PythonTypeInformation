[{"lineNumber": 21, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 25, "col_offset": 48, "nodeName": "DatasetReader", "type": "Type[allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 21, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 67, "col_offset": 52, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 135, "col_offset": 68, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 21, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "_token_indexers", "type": "Union[Dict[str, allennlp.data.token_indexers.token_indexer.TokenIndexer[Union[int, List[int]]]], Dict[str, Any]]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "_use_pos_tags", "type": "bool"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "use_pos_tags", "type": "bool"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "file_path", "type": "str"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "parse", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "text_field", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "fields", "type": "Dict[str, Union[allennlp.data.fields.field.Field[Any], allennlp.data.fields.sequence_label_field.SequenceLabelField, allennlp.data.fields.list_field.ListField[Any]]]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "spans", "type": "List[Union[allennlp.data.fields.field.Field[Any], allennlp.data.fields.span_field.SpanField]]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "gold_labels", "type": "List[str]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "span_list_field", "type": "allennlp.data.fields.list_field.ListField[Any]"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "ListField", "type": "Type[allennlp.data.fields.list_field.ListField[Any]]"}, {"lineNumber": 126, "col_offset": 26, "nodeName": "span_list_field", "type": "allennlp.data.fields.list_field.ListField[Any]"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "end", "type": "Union[Any, int]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "token_indexers", "type": "Dict[str, allennlp.data.token_indexers.token_indexer.TokenIndexer[Union[int, List[int]]]]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "use_pos_tags", "type": "Any"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "lazy", "type": "Any"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "token_indexers", "type": "Dict[str, allennlp.data.token_indexers.token_indexer.TokenIndexer[Union[int, List[int]]]]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "cached_path", "type": "Callable[..., str]"}, {"lineNumber": 55, "col_offset": 32, "nodeName": "file_path", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "directory", "type": "str"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "filename", "type": "str"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "split", "type": "Callable"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "file_path", "type": "str"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 57, "col_offset": 67, "nodeName": "file_path", "type": "str"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "parsed_sents", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "pos_tags", "type": "Optional[List[Any]]"}, {"lineNumber": 67, "col_offset": 36, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "text_field", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "_use_pos_tags", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "pos_tag_field", "type": "allennlp.data.fields.sequence_label_field.SequenceLabelField"}, {"lineNumber": 102, "col_offset": 33, "nodeName": "pos_tag_field", "type": "allennlp.data.fields.sequence_label_field.SequenceLabelField"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "_use_pos_tags", "type": "Any"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "gold_tree", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "gold_spans_with_pos_tags", "type": "Dict[Tuple[int, int], str]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "gold_spans", "type": "None"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "start", "type": "int"}, {"lineNumber": 116, "col_offset": 19, "nodeName": "end", "type": "int"}, {"lineNumber": 116, "col_offset": 26, "nodeName": "enumerate_spans", "type": "Callable[..., List[Tuple[int, int]]]"}, {"lineNumber": 116, "col_offset": 42, "nodeName": "tokens", "type": "List[str]"}, {"lineNumber": 125, "col_offset": 47, "nodeName": "spans", "type": "List[Union[allennlp.data.fields.field.Field[Any], allennlp.data.fields.span_field.SpanField]]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "fields", "type": "Dict[str, Union[allennlp.data.fields.field.Field[Any], allennlp.data.fields.sequence_label_field.SequenceLabelField, allennlp.data.fields.list_field.ListField[Any]]]"}, {"lineNumber": 127, "col_offset": 11, "nodeName": "gold_tree", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "fields", "type": "Dict[str, Union[allennlp.data.fields.field.Field[Any], allennlp.data.fields.sequence_label_field.SequenceLabelField, allennlp.data.fields.list_field.ListField[Any]]]"}, {"lineNumber": 133, "col_offset": 30, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 157, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "end", "type": "int"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "child_start", "type": "int"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "index", "type": "int"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "child", "type": "Any"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "tree", "type": "Any"}, {"lineNumber": 180, "col_offset": 33, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "dict_from_params", "type": "Callable[[Any, allennlp.common.params.Params], Dict[str, allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]]"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "pop", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "pop", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "assert_empty", "type": "Callable[[str], None]"}, {"lineNumber": 184, "col_offset": 28, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 185, "col_offset": 15, "nodeName": "PennTreeBankConstituencySpanDatasetReader", "type": "Any"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "lazy", "type": "bool"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "path", "type": "module"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 60, "col_offset": 54, "nodeName": "_use_pos_tags", "type": "Any"}, {"lineNumber": 97, "col_offset": 74, "nodeName": "_token_indexers", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 34, "nodeName": "pos_tags", "type": "List[str]"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "SequenceLabelField", "type": "Type[allennlp.data.fields.sequence_label_field.SequenceLabelField]"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "pos_tags", "type": "List[str]"}, {"lineNumber": 101, "col_offset": 57, "nodeName": "text_field", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "fields", "type": "Dict[str, Union[allennlp.data.fields.field.Field[Any], allennlp.data.fields.sequence_label_field.SequenceLabelField, allennlp.data.fields.list_field.ListField[Any]]]"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "_get_gold_spans", "type": "Any"}, {"lineNumber": 111, "col_offset": 33, "nodeName": "gold_tree", "type": "Any"}, {"lineNumber": 111, "col_offset": 47, "nodeName": "gold_spans_with_pos_tags", "type": "Dict[Tuple[int, int], str]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "gold_spans", "type": "Optional[Dict[Tuple[int, int], str]]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "fields", "type": "Dict[str, Union[allennlp.data.fields.field.Field[Any], allennlp.data.fields.sequence_label_field.SequenceLabelField, allennlp.data.fields.list_field.ListField[Any]]]"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "SequenceLabelField", "type": "Type[allennlp.data.fields.sequence_label_field.SequenceLabelField]"}, {"lineNumber": 128, "col_offset": 55, "nodeName": "gold_labels", "type": "List[str]"}, {"lineNumber": 128, "col_offset": 68, "nodeName": "span_list_field", "type": "allennlp.data.fields.list_field.ListField[Any]"}, {"lineNumber": 135, "col_offset": 37, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "tree", "type": "Any"}, {"lineNumber": 165, "col_offset": 18, "nodeName": "index", "type": "int"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "typed_spans", "type": "Dict[Tuple[int, int], Any]"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "end", "type": "Any"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "child_start", "type": "Any"}, {"lineNumber": 173, "col_offset": 30, "nodeName": "end", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "typed_spans", "type": "Dict[Tuple[int, int], Any]"}, {"lineNumber": 176, "col_offset": 44, "nodeName": "label", "type": "Any"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "TokenIndexer", "type": "Type[allennlp.data.token_indexers.token_indexer.TokenIndexer[Any]]"}, {"lineNumber": 181, "col_offset": 55, "nodeName": "pop", "type": "Any"}, {"lineNumber": 182, "col_offset": 23, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 184, "col_offset": 28, "nodeName": "cls", "type": "Any"}, {"lineNumber": 185, "col_offset": 72, "nodeName": "token_indexers", "type": "Dict[str, allennlp.data.token_indexers.token_indexer.TokenIndexer[Union[int, List[int]]]]"}, {"lineNumber": 186, "col_offset": 70, "nodeName": "use_pos_tags", "type": "Any"}, {"lineNumber": 187, "col_offset": 62, "nodeName": "lazy", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 49, "col_offset": 60, "nodeName": "SingleIdTokenIndexer", "type": "Any"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "os", "type": "module"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "BracketParseCorpusReader", "type": "Any"}, {"lineNumber": 60, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "text_to_instance", "type": "Any"}, {"lineNumber": 61, "col_offset": 56, "nodeName": "pos_tags", "type": "Optional[List[Any]]"}, {"lineNumber": 61, "col_offset": 66, "nodeName": "parse", "type": "Any"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 97, "col_offset": 38, "nodeName": "x", "type": "str"}, {"lineNumber": 97, "col_offset": 45, "nodeName": "x", "type": "str"}, {"lineNumber": 97, "col_offset": 50, "nodeName": "tokens", "type": "List[str]"}, {"lineNumber": 97, "col_offset": 74, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "spans", "type": "List[Union[allennlp.data.fields.field.Field[Any], allennlp.data.fields.span_field.SpanField]]"}, {"lineNumber": 117, "col_offset": 25, "nodeName": "SpanField", "type": "Type[allennlp.data.fields.span_field.SpanField]"}, {"lineNumber": 117, "col_offset": 35, "nodeName": "start", "type": "int"}, {"lineNumber": 117, "col_offset": 42, "nodeName": "end", "type": "int"}, {"lineNumber": 117, "col_offset": 47, "nodeName": "text_field", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 165, "col_offset": 26, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 165, "col_offset": 30, "nodeName": "tree", "type": "Any"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "label", "type": "Any"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "_get_gold_spans", "type": "Any"}, {"lineNumber": 172, "col_offset": 43, "nodeName": "child", "type": "Any"}, {"lineNumber": 172, "col_offset": 50, "nodeName": "child_start", "type": "int"}, {"lineNumber": 172, "col_offset": 63, "nodeName": "typed_spans", "type": "Dict[Tuple[int, int], Any]"}, {"lineNumber": 176, "col_offset": 44, "nodeName": "tree", "type": "Any"}, {"lineNumber": 181, "col_offset": 55, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 59, "col_offset": 51, "nodeName": "directory", "type": "str"}, {"lineNumber": 60, "col_offset": 24, "nodeName": "x", "type": "Any"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 61, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 40, "nodeName": "leaves", "type": "Any"}, {"lineNumber": 112, "col_offset": 43, "nodeName": "span", "type": "Tuple[int, int]"}, {"lineNumber": 112, "col_offset": 49, "nodeName": "label", "type": "str"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "items", "type": "Callable"}, {"lineNumber": 113, "col_offset": 79, "nodeName": "label", "type": "str"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "start", "type": "int"}, {"lineNumber": 120, "col_offset": 27, "nodeName": "end", "type": "int"}, {"lineNumber": 120, "col_offset": 35, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 135, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "index", "type": "int"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "tree", "type": "Any"}, {"lineNumber": 172, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 176, "col_offset": 25, "nodeName": "index", "type": "int"}, {"lineNumber": 59, "col_offset": 71, "nodeName": "filename", "type": "str"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "pos", "type": "Any"}, {"lineNumber": 61, "col_offset": 40, "nodeName": "parse", "type": "Any"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "gold_spans_with_pos_tags", "type": "Dict[Tuple[int, int], str]"}, {"lineNumber": 120, "col_offset": 35, "nodeName": "gold_spans", "type": "Optional[Dict[Tuple[int, int], str]]"}, {"lineNumber": 121, "col_offset": 20, "nodeName": "gold_labels", "type": "List[str]"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "gold_spans", "type": "Optional[Dict[Tuple[int, int], str]]"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "gold_labels", "type": "List[str]"}, {"lineNumber": 135, "col_offset": 42, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 166, "col_offset": 32, "nodeName": "end", "type": "int"}, {"lineNumber": 176, "col_offset": 32, "nodeName": "end", "type": "Any"}, {"lineNumber": 60, "col_offset": 38, "nodeName": "parse", "type": "Any"}, {"lineNumber": 121, "col_offset": 51, "nodeName": "start", "type": "int"}, {"lineNumber": 121, "col_offset": 58, "nodeName": "end", "type": "int"}, {"lineNumber": 135, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 135, "col_offset": 53, "nodeName": "int", "type": "Type[int]"}]