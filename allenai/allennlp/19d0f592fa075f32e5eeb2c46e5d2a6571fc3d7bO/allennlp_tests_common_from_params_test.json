[{"lineNumber": 9, "col_offset": 14, "nodeName": "FromParams", "type": "Type[allennlp.common.from_params.FromParams]"}, {"lineNumber": 15, "col_offset": 21, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "my_int", "type": "int"}, {"lineNumber": 11, "col_offset": 22, "nodeName": "my_int", "type": "int"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "my_bool", "type": "bool"}, {"lineNumber": 12, "col_offset": 23, "nodeName": "my_bool", "type": "bool"}, {"lineNumber": 17, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "optional_type", "type": "Union[Type[None], Type[Dict[str, str]]]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "bare_type", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "bare_bare_type", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "my_class", "type": "MyClass"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "my_bool", "type": "bool"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 138, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 142, "col_offset": 16, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 198, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 206, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 214, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "E", "type": "Type[Any]"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 236, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 247, "col_offset": 16, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 250, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 254, "col_offset": 16, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 10, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 10, "col_offset": 45, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "self", "type": "MyClass"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "MyClass"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 20, "col_offset": 25, "nodeName": "bare_function", "type": "Callable[[int], int]"}, {"lineNumber": 24, "col_offset": 12, "nodeName": "total", "type": "int"}, {"lineNumber": 29, "col_offset": 49, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "SomeClass", "type": "Type[Any]"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "SomeClass", "type": "Type[Any]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "check_param", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "set_total", "type": "Callable[[int], None]"}, {"lineNumber": 47, "col_offset": 24, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "remove_optional", "type": "Callable[[Type[Any]], Any]"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "optional_type", "type": "Union[Type[None], Type[Dict[str, str]]]"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "remove_optional", "type": "Callable[[Type[Any]], Any]"}, {"lineNumber": 49, "col_offset": 41, "nodeName": "bare_type", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "bare_type", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "bare_bare_type", "type": "Any"}, {"lineNumber": 54, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 55, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "my_class", "type": "MyClass"}, {"lineNumber": 60, "col_offset": 36, "nodeName": "MyClass", "type": "Type[MyClass]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "my_int", "type": "int"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "my_class", "type": "MyClass"}, {"lineNumber": 65, "col_offset": 17, "nodeName": "create_kwargs", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "MyClass", "type": "Type[MyClass]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 110, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 117, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 130, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 132, "col_offset": 33, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 154, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 156, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 158, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 160, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 185, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 186, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 188, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 190, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 222, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 225, "col_offset": 35, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 227, "col_offset": 38, "nodeName": "B", "type": "Any"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 228, "col_offset": 38, "nodeName": "D", "type": "Any"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 258, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 261, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 263, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 263, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 263, "col_offset": 35, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 265, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 267, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 17, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "some_input", "type": "int"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "bare_function", "type": "Callable[[int], int]"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "constructor_param", "type": "str"}, {"lineNumber": 27, "col_offset": 41, "nodeName": "constructor_param", "type": "str"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "total", "type": "int"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "new_total", "type": "int"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "SomeClass", "type": "Type[Any]"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "SomeClass", "type": "Type[Any]"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "check_param", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "SomeClass", "type": "Type[Any]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "set_total", "type": "Callable[[int], None]"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 52, "col_offset": 33, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "remove_optional", "type": "Callable[[Type[Any]], Any]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "remove_optional", "type": "Callable[[Type[Any]], Any]"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "MyClass", "type": "Type[MyClass]"}, {"lineNumber": 58, "col_offset": 39, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "my_class", "type": "MyClass"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "size", "type": "int"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "size", "type": "int"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "name", "type": "str"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "size", "type": "int"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "size", "type": "int"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "name", "type": "str"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "WordSplitter", "type": "Type[allennlp.data.tokenizers.word_splitter.WordSplitter]"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "size", "type": "int"}, {"lineNumber": 144, "col_offset": 28, "nodeName": "size", "type": "int"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "items", "type": "Dict[str, Any]"}, {"lineNumber": 152, "col_offset": 29, "nodeName": "items", "type": "Dict[str, Any]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 158, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "items", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "size", "type": "int"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "size", "type": "int"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "items", "type": "List[Any]"}, {"lineNumber": 183, "col_offset": 29, "nodeName": "items", "type": "List[Any]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 188, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 189, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "items", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "size", "type": "int"}, {"lineNumber": 204, "col_offset": 28, "nodeName": "size", "type": "int"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 212, "col_offset": 28, "nodeName": "name", "type": "str"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "items", "type": "Tuple[Any, Any]"}, {"lineNumber": 220, "col_offset": 29, "nodeName": "items", "type": "Tuple[Any, Any]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "E", "type": "Type[Any]"}, {"lineNumber": 225, "col_offset": 26, "nodeName": "f", "type": "Any"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 226, "col_offset": 19, "nodeName": "items", "type": "Any"}, {"lineNumber": 227, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 238, "col_offset": 28, "nodeName": "name", "type": "str"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "items", "type": "Set[Any]"}, {"lineNumber": 256, "col_offset": 29, "nodeName": "items", "type": "Set[Any]"}, {"lineNumber": 261, "col_offset": 12, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 263, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 264, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 264, "col_offset": 19, "nodeName": "items", "type": "Any"}, {"lineNumber": 26, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 29, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "constructor_param", "type": "Any"}, {"lineNumber": 30, "col_offset": 49, "nodeName": "check", "type": "str"}, {"lineNumber": 33, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "cls", "type": "Any"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "SomeClass", "type": "Type[Any]"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "SomeClass", "type": "Type[Any]"}, {"lineNumber": 47, "col_offset": 33, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 91, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 41, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 97, "col_offset": 55, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "pop", "type": "Any"}, {"lineNumber": 99, "col_offset": 23, "nodeName": "cls", "type": "Any"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 160, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 160, "col_offset": 30, "nodeName": "key", "type": "Any"}, {"lineNumber": 160, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 160, "col_offset": 44, "nodeName": "key", "type": "Any"}, {"lineNumber": 161, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 161, "col_offset": 30, "nodeName": "value", "type": "Any"}, {"lineNumber": 161, "col_offset": 37, "nodeName": "B", "type": "Any"}, {"lineNumber": 161, "col_offset": 44, "nodeName": "value", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 174, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 189, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 190, "col_offset": 30, "nodeName": "item", "type": "Any"}, {"lineNumber": 190, "col_offset": 36, "nodeName": "B", "type": "Any"}, {"lineNumber": 190, "col_offset": 43, "nodeName": "item", "type": "Any"}, {"lineNumber": 190, "col_offset": 51, "nodeName": "items", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 203, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 19, "nodeName": "f", "type": "Any"}, {"lineNumber": 227, "col_offset": 26, "nodeName": "f", "type": "Any"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "f", "type": "Any"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 237, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 241, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 244, "col_offset": 23, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 264, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 265, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 265, "col_offset": 30, "nodeName": "item", "type": "Any"}, {"lineNumber": 265, "col_offset": 36, "nodeName": "B", "type": "Any"}, {"lineNumber": 265, "col_offset": 43, "nodeName": "item", "type": "Any"}, {"lineNumber": 265, "col_offset": 51, "nodeName": "items", "type": "Any"}, {"lineNumber": 266, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 266, "col_offset": 44, "nodeName": "item", "type": "Any"}, {"lineNumber": 266, "col_offset": 52, "nodeName": "items", "type": "Any"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 267, "col_offset": 44, "nodeName": "item", "type": "Any"}, {"lineNumber": 267, "col_offset": 52, "nodeName": "items", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 51, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 52, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 98, "col_offset": 23, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "size", "type": "int"}, {"lineNumber": 99, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 151, "col_offset": 38, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 160, "col_offset": 51, "nodeName": "keys", "type": "Any"}, {"lineNumber": 161, "col_offset": 53, "nodeName": "values", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 182, "col_offset": 38, "nodeName": "List", "type": "Any"}, {"lineNumber": 190, "col_offset": 51, "nodeName": "d", "type": "Any"}, {"lineNumber": 191, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 219, "col_offset": 38, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "f", "type": "Any"}, {"lineNumber": 230, "col_offset": 15, "nodeName": "f", "type": "Any"}, {"lineNumber": 241, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 241, "col_offset": 36, "nodeName": "other", "type": "Any"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 255, "col_offset": 38, "nodeName": "Set", "type": "Any"}, {"lineNumber": 265, "col_offset": 51, "nodeName": "d", "type": "Any"}, {"lineNumber": 266, "col_offset": 19, "nodeName": "item", "type": "Any"}, {"lineNumber": 266, "col_offset": 52, "nodeName": "d", "type": "Any"}, {"lineNumber": 267, "col_offset": 19, "nodeName": "item", "type": "Any"}, {"lineNumber": 267, "col_offset": 52, "nodeName": "d", "type": "Any"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 47, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 160, "col_offset": 51, "nodeName": "items", "type": "Any"}, {"lineNumber": 161, "col_offset": 53, "nodeName": "items", "type": "Any"}, {"lineNumber": 151, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 160, "col_offset": 51, "nodeName": "d", "type": "Any"}, {"lineNumber": 161, "col_offset": 53, "nodeName": "d", "type": "Any"}]