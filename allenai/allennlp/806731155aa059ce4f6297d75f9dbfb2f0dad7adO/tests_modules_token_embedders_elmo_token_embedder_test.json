[{"lineNumber": 5, "col_offset": 28, "nodeName": "ModelTestCase", "type": "Type[allennlp.common.testing.model_test_case.ModelTestCase]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "training_arrays", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "tags", "type": "Any"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "example_tags", "type": "Any"}, {"lineNumber": 21, "col_offset": 28, "nodeName": "tags", "type": "Any"}, {"lineNumber": 7, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[..., Tuple[allennlp.models.model.Model, allennlp.models.model.Model]]"}, {"lineNumber": 12, "col_offset": 50, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 15, "col_offset": 26, "nodeName": "as_array_dict", "type": "Callable[..., Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]]"}, {"lineNumber": 16, "col_offset": 22, "nodeName": "forward", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 22, "col_offset": 16, "nodeName": "tag_id", "type": "Any"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "example_tags", "type": "Any"}, {"lineNumber": 8, "col_offset": 8, "nodeName": "self", "type": "TestElmoTokenEmbedder"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "TestElmoTokenEmbedder"}, {"lineNumber": 12, "col_offset": 50, "nodeName": "self", "type": "TestElmoTokenEmbedder"}, {"lineNumber": 15, "col_offset": 26, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 16, "col_offset": 22, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 18, "col_offset": 19, "nodeName": "tags", "type": "Any"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "tag", "type": "str"}, {"lineNumber": 7, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 15, "col_offset": 26, "nodeName": "self", "type": "TestElmoTokenEmbedder"}, {"lineNumber": 16, "col_offset": 22, "nodeName": "self", "type": "TestElmoTokenEmbedder"}, {"lineNumber": 16, "col_offset": 43, "nodeName": "arrays_to_variables", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 16, "col_offset": 63, "nodeName": "training_arrays", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 19, "col_offset": 19, "nodeName": "tags", "type": "Any"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "tags", "type": "Any"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "get_token_from_index", "type": "Callable[..., str]"}, {"lineNumber": 23, "col_offset": 60, "nodeName": "tag_id", "type": "Any"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "tag", "type": "str"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 23, "col_offset": 22, "nodeName": "self", "type": "TestElmoTokenEmbedder"}]