[{"lineNumber": 256, "col_offset": 0, "nodeName": "_remove_pretrained_embedding_params", "type": "Callable[[allennlp.common.params.Params], Any]"}, {"lineNumber": 19, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 23, "col_offset": 0, "nodeName": "_DEFAULT_WEIGHTS", "type": "str"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "Module", "type": "Any"}, {"lineNumber": 26, "col_offset": 29, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "nn", "type": "Any"}, {"lineNumber": 257, "col_offset": 4, "nodeName": "keys", "type": "List[nothing]"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "value", "type": "nothing"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "torch", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 50, "col_offset": 21, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "_regularizer", "type": "allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator"}, {"lineNumber": 51, "col_offset": 28, "nodeName": "regularizer", "type": "allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator"}, {"lineNumber": 53, "col_offset": 44, "nodeName": "Union", "type": "Any"}, {"lineNumber": 102, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "outputs", "type": "Dict[str, Any]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "outputs", "type": "Dict[str, Any]"}, {"lineNumber": 104, "col_offset": 75, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "outputs", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "instance_separated_output", "type": "List[Dict[str, numpy.ndarray]]"}, {"lineNumber": 156, "col_offset": 15, "nodeName": "instance_separated_output", "type": "List[Dict[str, numpy.ndarray]]"}, {"lineNumber": 130, "col_offset": 50, "nodeName": "List", "type": "Any"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 158, "col_offset": 62, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 175, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "choice", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "weights_file", "type": "str"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "vocab_dir", "type": "str"}, {"lineNumber": 233, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "model", "type": "Model"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "model_state", "type": "Any"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "model", "type": "Model"}, {"lineNumber": 256, "col_offset": 48, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 257, "col_offset": 11, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 258, "col_offset": 28, "nodeName": "keys", "type": "List[nothing]"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "values", "type": "Callable"}, {"lineNumber": 48, "col_offset": 30, "nodeName": "RegularizerApplicator", "type": "Type[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "Model"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "_regularizer", "type": "allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator"}, {"lineNumber": 104, "col_offset": 44, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 104, "col_offset": 67, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "index_fields", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "arrays_to_variables", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "decode", "type": "Callable[[Dict[str, Any]], Dict[str, Any]]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "output", "type": "Any"}, {"lineNumber": 119, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "output", "type": "Any"}, {"lineNumber": 125, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 130, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 142, "col_offset": 18, "nodeName": "Dataset", "type": "Type[allennlp.data.dataset.Dataset]"}, {"lineNumber": 142, "col_offset": 26, "nodeName": "instances", "type": "List[allennlp.data.instance.Instance]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "index_instances", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 143, "col_offset": 32, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 144, "col_offset": 22, "nodeName": "arrays_to_variables", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "decode", "type": "Callable[[Dict[str, Any]], Dict[str, Any]]"}, {"lineNumber": 150, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 150, "col_offset": 18, "nodeName": "output", "type": "Any"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 153, "col_offset": 28, "nodeName": "output", "type": "Any"}, {"lineNumber": 175, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 191, "col_offset": 32, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 191, "col_offset": 52, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 192, "col_offset": 17, "nodeName": "pop_choice", "type": "Callable[..., Any]"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 193, "col_offset": 48, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 193, "col_offset": 55, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 201, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "weights_file", "type": "str"}, {"lineNumber": 232, "col_offset": 20, "nodeName": "join", "type": "Callable"}, {"lineNumber": 232, "col_offset": 33, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "from_files", "type": "Callable[[Any, str], allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 233, "col_offset": 38, "nodeName": "vocab_dir", "type": "str"}, {"lineNumber": 235, "col_offset": 23, "nodeName": "get", "type": "Any"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "_remove_pretrained_embedding_params", "type": "Callable[[allennlp.common.params.Params], Any]"}, {"lineNumber": 241, "col_offset": 44, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "from_params", "type": "Callable[[allennlp.data.vocabulary.Vocabulary, allennlp.common.params.Params], Model]"}, {"lineNumber": 242, "col_offset": 34, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 242, "col_offset": 41, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 243, "col_offset": 22, "nodeName": "load", "type": "Any"}, {"lineNumber": 243, "col_offset": 33, "nodeName": "weights_file", "type": "str"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 244, "col_offset": 30, "nodeName": "model_state", "type": "Any"}, {"lineNumber": 248, "col_offset": 11, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 257, "col_offset": 11, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 259, "col_offset": 12, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 260, "col_offset": 17, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 261, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 261, "col_offset": 22, "nodeName": "value", "type": "nothing"}, {"lineNumber": 261, "col_offset": 29, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 58, "col_offset": 11, "nodeName": "self", "type": "Model"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "_regularizer", "type": "allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "self", "type": "Model"}, {"lineNumber": 53, "col_offset": 50, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 53, "col_offset": 57, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 63, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 112, "col_offset": 30, "nodeName": "self", "type": "Model"}, {"lineNumber": 113, "col_offset": 42, "nodeName": "as_array_dict", "type": "Callable"}, {"lineNumber": 115, "col_offset": 54, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 117, "col_offset": 18, "nodeName": "self", "type": "Model"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "forward", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "items", "type": "Callable"}, {"lineNumber": 122, "col_offset": 21, "nodeName": "output", "type": "Any"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "output", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "outputs", "type": "Dict[str, Any]"}, {"lineNumber": 104, "col_offset": 80, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 104, "col_offset": 85, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 129, "col_offset": 40, "nodeName": "List", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 143, "col_offset": 32, "nodeName": "self", "type": "Model"}, {"lineNumber": 144, "col_offset": 42, "nodeName": "as_array_dict", "type": "Callable[..., Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]]"}, {"lineNumber": 145, "col_offset": 54, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 147, "col_offset": 18, "nodeName": "self", "type": "Model"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "forward", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 149, "col_offset": 76, "nodeName": "_", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 149, "col_offset": 81, "nodeName": "instances", "type": "List[allennlp.data.instance.Instance]"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "items", "type": "Callable"}, {"lineNumber": 151, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 151, "col_offset": 26, "nodeName": "output", "type": "Any"}, {"lineNumber": 151, "col_offset": 34, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "output", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "outputs", "type": "Dict[str, Any]"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "instance_output", "type": "Any"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "batch_element", "type": "Any"}, {"lineNumber": 154, "col_offset": 50, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 154, "col_offset": 54, "nodeName": "instance_separated_output", "type": "List[Dict[str, numpy.ndarray]]"}, {"lineNumber": 154, "col_offset": 81, "nodeName": "output", "type": "Any"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "batch_element", "type": "Any"}, {"lineNumber": 130, "col_offset": 55, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 158, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 158, "col_offset": 67, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 158, "col_offset": 72, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 175, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 175, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 192, "col_offset": 17, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 192, "col_offset": 43, "nodeName": "list_available", "type": "Any"}, {"lineNumber": 229, "col_offset": 39, "nodeName": "join", "type": "Callable"}, {"lineNumber": 229, "col_offset": 52, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 229, "col_offset": 71, "nodeName": "_DEFAULT_WEIGHTS", "type": "str"}, {"lineNumber": 232, "col_offset": 20, "nodeName": "path", "type": "module"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 235, "col_offset": 23, "nodeName": "config", "type": "allennlp.common.params.Params"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "Model", "type": "Type[Model]"}, {"lineNumber": 243, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "model", "type": "Model"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 249, "col_offset": 23, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 262, "col_offset": 12, "nodeName": "_remove_pretrained_embedding_params", "type": "Callable[[allennlp.common.params.Params], Any]"}, {"lineNumber": 262, "col_offset": 48, "nodeName": "value", "type": "nothing"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "self", "type": "Model"}, {"lineNumber": 53, "col_offset": 57, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 113, "col_offset": 42, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "self", "type": "Model"}, {"lineNumber": 117, "col_offset": 45, "nodeName": "model_input", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "outputs", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 125, "col_offset": 20, "nodeName": "name", "type": "str"}, {"lineNumber": 104, "col_offset": 85, "nodeName": "numpy", "type": "module"}, {"lineNumber": 129, "col_offset": 45, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 144, "col_offset": 42, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 147, "col_offset": 30, "nodeName": "self", "type": "Model"}, {"lineNumber": 147, "col_offset": 45, "nodeName": "model_input", "type": "Dict[str, Any]"}, {"lineNumber": 149, "col_offset": 81, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "outputs", "type": "Dict[str, Any]"}, {"lineNumber": 151, "col_offset": 34, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "name", "type": "str"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "instance_output", "type": "Any"}, {"lineNumber": 158, "col_offset": 72, "nodeName": "torch", "type": "Any"}, {"lineNumber": 192, "col_offset": 43, "nodeName": "cls", "type": "Type[Model]"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "by_name", "type": "Any"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "choice", "type": "Any"}, {"lineNumber": 229, "col_offset": 39, "nodeName": "path", "type": "module"}, {"lineNumber": 232, "col_offset": 20, "nodeName": "os", "type": "module"}, {"lineNumber": 243, "col_offset": 60, "nodeName": "device_mapping", "type": "Callable[[int], Callable[[Any, Any], Any]]"}, {"lineNumber": 243, "col_offset": 75, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 249, "col_offset": 12, "nodeName": "model", "type": "Model"}, {"lineNumber": 251, "col_offset": 12, "nodeName": "model", "type": "Model"}, {"lineNumber": 53, "col_offset": 57, "nodeName": "torch", "type": "Any"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 151, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "name", "type": "str"}, {"lineNumber": 130, "col_offset": 60, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 130, "col_offset": 65, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 158, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 158, "col_offset": 44, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 193, "col_offset": 16, "nodeName": "cls", "type": "Type[Model]"}, {"lineNumber": 229, "col_offset": 39, "nodeName": "os", "type": "module"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 130, "col_offset": 65, "nodeName": "numpy", "type": "module"}, {"lineNumber": 158, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "data", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "output", "type": "Any"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "output", "type": "Any"}]