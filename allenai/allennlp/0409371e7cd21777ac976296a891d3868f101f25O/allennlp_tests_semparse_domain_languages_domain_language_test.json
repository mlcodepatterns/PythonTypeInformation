[{"lineNumber": 88, "col_offset": 0, "nodeName": "check_productions_match", "type": "Callable[[List[str], List[str]], Any]"}, {"lineNumber": 9, "col_offset": 17, "nodeName": "DomainLanguage", "type": "Type[allennlp.semparse.domain_languages.domain_language.DomainLanguage]"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 34, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 38, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 61, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 65, "col_offset": 45, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 69, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 73, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 81, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 89, "col_offset": 4, "nodeName": "actual_right_sides", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "List", "type": "Any"}, {"lineNumber": 49, "col_offset": 45, "nodeName": "List", "type": "Any"}, {"lineNumber": 53, "col_offset": 56, "nodeName": "List", "type": "Any"}, {"lineNumber": 57, "col_offset": 67, "nodeName": "List", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "valid_actions", "type": "Dict[str, List[str]]"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "action_sequence", "type": "List[str]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "action_sequence", "type": "List[str]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "action_sequence", "type": "List[str]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "action_sequence", "type": "List[str]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "recovered_logical_form", "type": "str"}, {"lineNumber": 214, "col_offset": 8, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 215, "col_offset": 8, "nodeName": "action_sequence", "type": "List[str]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "recovered_logical_form", "type": "str"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 34, "col_offset": 24, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 34, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "num1", "type": "int"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "num2", "type": "int"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "numbers", "type": "List[int]"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 46, "col_offset": 16, "nodeName": "num1", "type": "int"}, {"lineNumber": 45, "col_offset": 39, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 49, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "num1", "type": "int"}, {"lineNumber": 50, "col_offset": 22, "nodeName": "num2", "type": "int"}, {"lineNumber": 49, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 53, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 54, "col_offset": 16, "nodeName": "num1", "type": "int"}, {"lineNumber": 54, "col_offset": 22, "nodeName": "num2", "type": "int"}, {"lineNumber": 54, "col_offset": 28, "nodeName": "num3", "type": "int"}, {"lineNumber": 53, "col_offset": 61, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 57, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 57, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 57, "col_offset": 59, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "num1", "type": "int"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "num2", "type": "int"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "num3", "type": "int"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "num4", "type": "int"}, {"lineNumber": 57, "col_offset": 72, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 61, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "num1", "type": "int"}, {"lineNumber": 62, "col_offset": 22, "nodeName": "num2", "type": "int"}, {"lineNumber": 65, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 65, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "num1", "type": "int"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "num2", "type": "int"}, {"lineNumber": 69, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 69, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "num1", "type": "int"}, {"lineNumber": 70, "col_offset": 22, "nodeName": "num2", "type": "int"}, {"lineNumber": 73, "col_offset": 27, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 73, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "num1", "type": "int"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "num2", "type": "int"}, {"lineNumber": 77, "col_offset": 26, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "num1", "type": "int"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "List", "type": "Any"}, {"lineNumber": 88, "col_offset": 75, "nodeName": "List", "type": "Any"}, {"lineNumber": 89, "col_offset": 52, "nodeName": "rule", "type": "str"}, {"lineNumber": 89, "col_offset": 60, "nodeName": "actual_rules", "type": "List[str]"}, {"lineNumber": 90, "col_offset": 11, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "actual_right_sides", "type": "List[str]"}, {"lineNumber": 90, "col_offset": 38, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 90, "col_offset": 42, "nodeName": "expected_right_sides", "type": "List[str]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 96, "col_offset": 24, "nodeName": "Arithmetic", "type": "Type[Arithmetic]"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "get_valid_actions", "type": "Callable[[], Dict[str, List[str]]]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "check_productions_match", "type": "Callable[[List[str], List[str]], Any]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "check_productions_match", "type": "Callable[[List[str], List[str]], Any]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "check_productions_match", "type": "Callable[[List[str], List[str]], Any]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "check_productions_match", "type": "Callable[[List[str], List[str]], Any]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "check_productions_match", "type": "Callable[[List[str], List[str]], Any]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "check_productions_match", "type": "Callable[[List[str], List[str]], Any]"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "check_productions_match", "type": "Callable[[List[str], List[str]], Any]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "check_productions_match", "type": "Callable[[List[str], List[str]], Any]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "check_productions_match", "type": "Callable[[List[str], List[str]], Any]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "check_productions_match", "type": "Callable[[List[str], List[str]], Any]"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "logical_form_to_action_sequence", "type": "Callable[[str], List[str]]"}, {"lineNumber": 177, "col_offset": 15, "nodeName": "action_sequence", "type": "List[str]"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "logical_form_to_action_sequence", "type": "Callable[[str], List[str]]"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "action_sequence", "type": "List[str]"}, {"lineNumber": 193, "col_offset": 26, "nodeName": "logical_form_to_action_sequence", "type": "Callable[[str], List[str]]"}, {"lineNumber": 193, "col_offset": 72, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "action_sequence", "type": "List[str]"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "logical_form_to_action_sequence", "type": "Callable[[str], List[str]]"}, {"lineNumber": 210, "col_offset": 72, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "action_sequence_to_logical_form", "type": "Callable[[List[str]], str]"}, {"lineNumber": 211, "col_offset": 79, "nodeName": "action_sequence", "type": "List[str]"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "recovered_logical_form", "type": "str"}, {"lineNumber": 212, "col_offset": 41, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "logical_form_to_action_sequence", "type": "Callable[[str], List[str]]"}, {"lineNumber": 215, "col_offset": 72, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 216, "col_offset": 33, "nodeName": "action_sequence_to_logical_form", "type": "Callable[[List[str]], str]"}, {"lineNumber": 216, "col_offset": 79, "nodeName": "action_sequence", "type": "List[str]"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "recovered_logical_form", "type": "str"}, {"lineNumber": 217, "col_offset": 41, "nodeName": "logical_form", "type": "str"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "List", "type": "Any"}, {"lineNumber": 88, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 88, "col_offset": 80, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], Any]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], Any]"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], Any]"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], Any]"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "ExecutionError", "type": "Type[allennlp.semparse.domain_languages.domain_language.ExecutionError]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "execute", "type": "Callable[[str], Any]"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "ExecutionError", "type": "Type[allennlp.semparse.domain_languages.domain_language.ExecutionError]"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "execute", "type": "Callable[[str], Any]"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "ExecutionError", "type": "Type[allennlp.semparse.domain_languages.domain_language.ExecutionError]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "execute", "type": "Callable[[str], Any]"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 111, "col_offset": 27, "nodeName": "ExecutionError", "type": "Type[allennlp.semparse.domain_languages.domain_language.ExecutionError]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "execute", "type": "Callable[[str], Any]"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 116, "col_offset": 27, "nodeName": "ExecutionError", "type": "Type[allennlp.semparse.domain_languages.domain_language.ExecutionError]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "execute", "type": "Callable[[str], Any]"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], Any]"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], Any]"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], Any]"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], Any]"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], Any]"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], Any]"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], Any]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], Any]"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], Any]"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "execute", "type": "Callable[[str], Any]"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 149, "col_offset": 32, "nodeName": "valid_actions", "type": "Dict[str, List[str]]"}, {"lineNumber": 151, "col_offset": 32, "nodeName": "valid_actions", "type": "Dict[str, List[str]]"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "valid_actions", "type": "Dict[str, List[str]]"}, {"lineNumber": 160, "col_offset": 32, "nodeName": "valid_actions", "type": "Dict[str, List[str]]"}, {"lineNumber": 162, "col_offset": 32, "nodeName": "valid_actions", "type": "Dict[str, List[str]]"}, {"lineNumber": 164, "col_offset": 32, "nodeName": "valid_actions", "type": "Dict[str, List[str]]"}, {"lineNumber": 166, "col_offset": 32, "nodeName": "valid_actions", "type": "Dict[str, List[str]]"}, {"lineNumber": 168, "col_offset": 32, "nodeName": "valid_actions", "type": "Dict[str, List[str]]"}, {"lineNumber": 170, "col_offset": 32, "nodeName": "valid_actions", "type": "Dict[str, List[str]]"}, {"lineNumber": 172, "col_offset": 32, "nodeName": "valid_actions", "type": "Dict[str, List[str]]"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 193, "col_offset": 26, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 216, "col_offset": 33, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "ParsingError", "type": "Type[allennlp.semparse.domain_languages.domain_language.ParsingError]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "logical_form_to_action_sequence", "type": "Callable[[str], List[str]]"}, {"lineNumber": 224, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 224, "col_offset": 27, "nodeName": "ParsingError", "type": "Type[allennlp.semparse.domain_languages.domain_language.ParsingError]"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "logical_form_to_action_sequence", "type": "Callable[[str], List[str]]"}, {"lineNumber": 226, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 226, "col_offset": 27, "nodeName": "ParsingError", "type": "Type[allennlp.semparse.domain_languages.domain_language.ParsingError]"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "logical_form_to_action_sequence", "type": "Callable[[str], List[str]]"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 228, "col_offset": 27, "nodeName": "ParsingError", "type": "Type[allennlp.semparse.domain_languages.domain_language.ParsingError]"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "logical_form_to_action_sequence", "type": "Callable[[str], List[str]]"}, {"lineNumber": 230, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 230, "col_offset": 27, "nodeName": "ParsingError", "type": "Type[allennlp.semparse.domain_languages.domain_language.ParsingError]"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "logical_form_to_action_sequence", "type": "Callable[[str], List[str]]"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 11, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "rule", "type": "str"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 107, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 109, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 136, "col_offset": 24, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 176, "col_offset": 26, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 183, "col_offset": 26, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 193, "col_offset": 26, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 210, "col_offset": 26, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 215, "col_offset": 26, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 216, "col_offset": 33, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 222, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 224, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 226, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 228, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 230, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "language", "type": "Arithmetic"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 122, "col_offset": 15, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 137, "col_offset": 19, "nodeName": "valid_actions", "type": "Dict[str, List[str]]"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "self", "type": "DomainLanguageTest"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "self", "type": "DomainLanguageTest"}]