[{"lineNumber": 13, "col_offset": 37, "nodeName": "ModelTestCase", "type": "Type[allennlp.common.testing.model_test_case.ModelTestCase]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "test_agenda", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "checklist_info", "type": "Any"}, {"lineNumber": 44, "col_offset": 61, "nodeName": "checklist_info", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "cost_weights", "type": "List[Any]"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "epoch_data", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "original_model_parameters", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "archive", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "archived_model_parameters", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "changed_model_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 75, "col_offset": 40, "nodeName": "archived_model_parameters", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "archive", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "expected_mapping", "type": "List[Tuple[int, int]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "new_vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 21, "col_offset": 50, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "_get_checklist_info", "type": "Any"}, {"lineNumber": 43, "col_offset": 56, "nodeName": "test_agenda", "type": "Any"}, {"lineNumber": 43, "col_offset": 69, "nodeName": "all_actions", "type": "List[Tuple[str, bool, None]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "target_checklist", "type": "Any"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "terminal_actions", "type": "Any"}, {"lineNumber": 44, "col_offset": 44, "nodeName": "checklist_mask", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "_checklist_cost_weight", "type": "Any"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "BucketIterator", "type": "Any"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "dataset", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 62, "col_offset": 28, "nodeName": "cost_weights", "type": "List[Any]"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 71, "col_offset": 18, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "mml_model_archive_file", "type": "pathlib.Path"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "_initialize_weights_from_archive", "type": "Any"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "archive", "type": "Any"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "archived_parameter", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "archived_weight", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "original_weight", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "changed_weight", "type": "Any"}, {"lineNumber": 91, "col_offset": 18, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "mml_model_archive_file", "type": "pathlib.Path"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "_get_vocab_index_mapping", "type": "Any"}, {"lineNumber": 92, "col_offset": 54, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 94, "col_offset": 26, "nodeName": "expected_mapping", "type": "List[Tuple[int, int]]"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "token", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "copy_token_at_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "copy_token_at_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "copy_token_at_index", "type": "Callable[[Any], Any]"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "_get_vocab_index_mapping", "type": "Any"}, {"lineNumber": 103, "col_offset": 54, "nodeName": "new_vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "mapping", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "NlvrCoverageSemanticParserTest"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "NlvrCoverageSemanticParserTest"}, {"lineNumber": 21, "col_offset": 50, "nodeName": "self", "type": "NlvrCoverageSemanticParserTest"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "NlvrCoverageSemanticParserTest"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "NlvrCoverageSemanticParserTest"}, {"lineNumber": 42, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 51, "col_offset": 34, "nodeName": "self", "type": "NlvrCoverageSemanticParserTest"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "model", "type": "Any"}, {"lineNumber": 57, "col_offset": 35, "nodeName": "self", "type": "NlvrCoverageSemanticParserTest"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "forward", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "_checklist_cost_weight", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 67, "col_offset": 57, "nodeName": "original_model_parameters", "type": "Any"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "model", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 77, "col_offset": 30, "nodeName": "original_model_weights", "type": "Dict[Any, Any]"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "archived_weight", "type": "Any"}, {"lineNumber": 85, "col_offset": 49, "nodeName": "changed_weight", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 92, "col_offset": 54, "nodeName": "model", "type": "Any"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "i", "type": "int"}, {"lineNumber": 93, "col_offset": 32, "nodeName": "i", "type": "int"}, {"lineNumber": 93, "col_offset": 39, "nodeName": "i", "type": "int"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "get_token_from_index", "type": "Any"}, {"lineNumber": 98, "col_offset": 52, "nodeName": "i", "type": "int"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 99, "col_offset": 45, "nodeName": "token", "type": "Any"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "self", "type": "NlvrCoverageSemanticParserTest"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 52, "col_offset": 40, "nodeName": "self", "type": "NlvrCoverageSemanticParserTest"}, {"lineNumber": 52, "col_offset": 59, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "model", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "epoch_data", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "cost_weights", "type": "List[Any]"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "model", "type": "Any"}, {"lineNumber": 65, "col_offset": 36, "nodeName": "self", "type": "NlvrCoverageSemanticParserTest"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "name", "type": "Any"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "archive", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "NlvrCoverageSemanticParserTest"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "model", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "data", "type": "Any"}, {"lineNumber": 77, "col_offset": 53, "nodeName": "name", "type": "Any"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 82, "col_offset": 16, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 82, "col_offset": 36, "nodeName": "original_weight", "type": "Any"}, {"lineNumber": 82, "col_offset": 53, "nodeName": "changed_weight", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "self", "type": "NlvrCoverageSemanticParserTest"}, {"lineNumber": 92, "col_offset": 54, "nodeName": "archive", "type": "Any"}, {"lineNumber": 93, "col_offset": 44, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "new_vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "self", "type": "NlvrCoverageSemanticParserTest"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "target_checklist", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "terminal_actions", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "checklist_mask", "type": "Any"}, {"lineNumber": 74, "col_offset": 40, "nodeName": "self", "type": "NlvrCoverageSemanticParserTest"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "archived_parameter", "type": "Any"}, {"lineNumber": 81, "col_offset": 17, "nodeName": "self", "type": "NlvrCoverageSemanticParserTest"}, {"lineNumber": 98, "col_offset": 20, "nodeName": "self", "type": "NlvrCoverageSemanticParserTest"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "self", "type": "NlvrCoverageSemanticParserTest"}, {"lineNumber": 78, "col_offset": 29, "nodeName": "changed_model_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 78, "col_offset": 54, "nodeName": "name", "type": "Any"}, {"lineNumber": 81, "col_offset": 58, "nodeName": "name", "type": "Any"}]