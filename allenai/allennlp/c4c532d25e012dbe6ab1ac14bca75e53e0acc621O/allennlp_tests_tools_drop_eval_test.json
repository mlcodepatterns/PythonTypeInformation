[{"lineNumber": 9, "col_offset": 4, "nodeName": "test_number_parse", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "test_punctations", "type": "Callable[[Any], Any]"}, {"lineNumber": 21, "col_offset": 4, "nodeName": "test_float_numbers", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "test_metric_is_length_aware", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "test_articles_are_ignored", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "test_f1_ignores_word_order", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "test_periods_commas_and_spaces_are_ignored", "type": "Callable[[Any], Any]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "test_splitting_on_hyphens", "type": "Callable[[Any], Any]"}, {"lineNumber": 60, "col_offset": 4, "nodeName": "test_casing_is_ignored", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "test_overlap_in_correct_cases", "type": "Callable[[Any], Any]"}, {"lineNumber": 68, "col_offset": 4, "nodeName": "test_simple_overlap_in_incorrect_cases", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "test_multi_span_overlap_in_incorrect_cases", "type": "Callable[[Any], Any]"}, {"lineNumber": 98, "col_offset": 4, "nodeName": "test_order_invariance", "type": "Callable[[Any], Any]"}, {"lineNumber": 105, "col_offset": 4, "nodeName": "test_json_loader", "type": "Callable[[Any], Any]"}, {"lineNumber": 146, "col_offset": 4, "nodeName": "test_type_partition_output", "type": "Callable[[Any], Any]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "prediction", "type": "Dict[str, str]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "prediction", "type": "Dict[str, str]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "prediction", "type": "Dict[str, str]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "prediction", "type": "Dict[str, str]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "prediction", "type": "Dict[str, str]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "prediction", "type": "Dict[str, str]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "prediction", "type": "Dict[str, str]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "prediction", "type": "Dict[str, str]"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "prediction", "type": "Dict[str, str]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "lines", "type": "List[unicode]"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "prediction", "type": "Dict[str, str]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "lines", "type": "List[unicode]"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "buf", "type": "_io.StringIO"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "output", "type": "unicode"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "split", "type": "Callable[..., List[unicode]]"}, {"lineNumber": 159, "col_offset": 30, "nodeName": "buf", "type": "_io.StringIO"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "output", "type": "unicode"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "split", "type": "Callable[..., List[unicode]]"}, {"lineNumber": 10, "col_offset": 15, "nodeName": "_normalize_answer", "type": "Any"}, {"lineNumber": 10, "col_offset": 44, "nodeName": "_normalize_answer", "type": "Any"}, {"lineNumber": 11, "col_offset": 15, "nodeName": "_normalize_answer", "type": "Any"}, {"lineNumber": 11, "col_offset": 44, "nodeName": "_normalize_answer", "type": "Any"}, {"lineNumber": 12, "col_offset": 15, "nodeName": "_normalize_answer", "type": "Any"}, {"lineNumber": 12, "col_offset": 44, "nodeName": "_normalize_answer", "type": "Any"}, {"lineNumber": 13, "col_offset": 15, "nodeName": "_normalize_answer", "type": "Any"}, {"lineNumber": 13, "col_offset": 44, "nodeName": "_normalize_answer", "type": "Any"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "_normalize_answer", "type": "Any"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "_normalize_answer", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 27, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 74, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 109, "col_offset": 15, "nodeName": "evaluate_json", "type": "Any"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "annotation", "type": "Dict[str, Dict[str, List[Dict[str, Union[Dict[str, str], List[Dict[str, str]], str]]]]]"}, {"lineNumber": 109, "col_offset": 41, "nodeName": "prediction", "type": "Dict[str, str]"}, {"lineNumber": 114, "col_offset": 15, "nodeName": "evaluate_json", "type": "Any"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "annotation", "type": "Dict[str, Dict[str, List[Dict[str, Union[Dict[str, List[str]], List[Dict[str, str]], str]]]]]"}, {"lineNumber": 114, "col_offset": 41, "nodeName": "prediction", "type": "Dict[str, str]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "evaluate_json", "type": "Any"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "annotation", "type": "Dict[str, Dict[str, List[Dict[str, Union[Dict[str, List[str]], List[Dict[str, str]], str]]]]]"}, {"lineNumber": 119, "col_offset": 41, "nodeName": "prediction", "type": "Dict[str, str]"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "evaluate_json", "type": "Any"}, {"lineNumber": 124, "col_offset": 29, "nodeName": "annotation", "type": "Dict[str, Dict[str, List[Dict[str, Union[Dict[str, Dict[str, str]], List[Union[Dict[str, List[str]], Dict[str, str]]], str]]]]]"}, {"lineNumber": 124, "col_offset": 41, "nodeName": "prediction", "type": "Dict[str, str]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "evaluate_json", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "annotation", "type": "Dict[str, Dict[str, List[Dict[str, Union[Dict[str, List[str]], List[Dict[str, List[str]]], str]]]]]"}, {"lineNumber": 129, "col_offset": 41, "nodeName": "prediction", "type": "Dict[str, str]"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "evaluate_json", "type": "Any"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "annotation", "type": "Dict[str, Dict[str, List[Dict[str, Union[Dict[str, List[str]], List[Dict[str, str]], str]]]]]"}, {"lineNumber": 134, "col_offset": 41, "nodeName": "prediction", "type": "Dict[str, str]"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "evaluate_json", "type": "Any"}, {"lineNumber": 139, "col_offset": 29, "nodeName": "annotation", "type": "Dict[str, Dict[str, List[Dict[str, Union[Dict[str, List[str]], List[Dict[str, List[str]]], str]]]]]"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "prediction", "type": "Dict[str, str]"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "evaluate_json", "type": "Any"}, {"lineNumber": 144, "col_offset": 29, "nodeName": "annotation", "type": "Dict[str, Dict[str, List[Dict[str, Union[Dict[str, List[str]], str]]]]]"}, {"lineNumber": 144, "col_offset": 41, "nodeName": "prediction", "type": "Dict[str, str]"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 150, "col_offset": 35, "nodeName": "redirect_stdout", "type": "Any"}, {"lineNumber": 150, "col_offset": 51, "nodeName": "buf", "type": "_io.StringIO"}, {"lineNumber": 151, "col_offset": 12, "nodeName": "evaluate_json", "type": "Any"}, {"lineNumber": 151, "col_offset": 26, "nodeName": "annotation", "type": "Dict[str, Dict[str, List[Dict[str, Union[Dict[str, str], List[Dict[str, List[str]]], str]]]]]"}, {"lineNumber": 151, "col_offset": 38, "nodeName": "prediction", "type": "Dict[str, str]"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "getvalue", "type": "Callable[[], unicode]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "lines", "type": "List[unicode]"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "StringIO", "type": "Type[_io.StringIO]"}, {"lineNumber": 159, "col_offset": 35, "nodeName": "redirect_stdout", "type": "Any"}, {"lineNumber": 159, "col_offset": 51, "nodeName": "buf", "type": "_io.StringIO"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "evaluate_json", "type": "Any"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "annotation", "type": "Dict[str, Dict[str, List[Dict[str, Union[Dict[str, List[str]], List[Dict[str, str]], str]]]]]"}, {"lineNumber": 160, "col_offset": 38, "nodeName": "prediction", "type": "Dict[str, str]"}, {"lineNumber": 161, "col_offset": 21, "nodeName": "getvalue", "type": "Callable[[], unicode]"}, {"lineNumber": 163, "col_offset": 15, "nodeName": "lines", "type": "List[unicode]"}, {"lineNumber": 150, "col_offset": 13, "nodeName": "io", "type": "module"}, {"lineNumber": 152, "col_offset": 21, "nodeName": "buf", "type": "_io.StringIO"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "strip", "type": "Callable[..., unicode]"}, {"lineNumber": 159, "col_offset": 13, "nodeName": "io", "type": "module"}, {"lineNumber": 161, "col_offset": 21, "nodeName": "buf", "type": "_io.StringIO"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "strip", "type": "Callable[..., unicode]"}, {"lineNumber": 153, "col_offset": 16, "nodeName": "output", "type": "unicode"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "output", "type": "unicode"}]