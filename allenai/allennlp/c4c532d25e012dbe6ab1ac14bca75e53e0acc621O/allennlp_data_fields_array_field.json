[{"lineNumber": 10, "col_offset": 17, "nodeName": "Field", "type": "Type[allennlp.data.fields.field.Field[Any]]"}, {"lineNumber": 30, "col_offset": 60, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 10, "col_offset": 23, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 19, "col_offset": 38, "nodeName": "float32", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 20, "col_offset": 21, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "padding_value", "type": "int"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "padding_value", "type": "int"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 25, "col_offset": 37, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "slicing_shape", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "slices", "type": "Tuple[slice, ...]"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "array", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 30, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 10, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 19, "col_offset": 38, "nodeName": "numpy", "type": "module"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "ArrayField"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "ArrayField"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "ArrayField"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "asarray", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 42, "col_offset": 24, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "shape", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "slicing_shape", "type": "List[Any]"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "return_array", "type": "numpy.ndarray"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "return_array", "type": "numpy.ndarray"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "ArrayField", "type": "Type[ArrayField]"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "numpy", "type": "module"}, {"lineNumber": 25, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 25, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 32, "col_offset": 25, "nodeName": "i", "type": "int"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "numpy", "type": "module"}, {"lineNumber": 37, "col_offset": 79, "nodeName": "padding_value", "type": "Any"}, {"lineNumber": 38, "col_offset": 43, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "array", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 39, "nodeName": "max_shape", "type": "List[int]"}, {"lineNumber": 44, "col_offset": 28, "nodeName": "slicing_shape", "type": "List[Any]"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "slices", "type": "Tuple[slice, ...]"}, {"lineNumber": 47, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "padding_value", "type": "Any"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "shape", "type": "Tuple[int, ...]"}, {"lineNumber": 59, "col_offset": 71, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "i", "type": "int"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "shape", "type": "Any"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "shape", "type": "Any"}, {"lineNumber": 32, "col_offset": 30, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "ones", "type": "Any"}, {"lineNumber": 37, "col_offset": 48, "nodeName": "max_shape", "type": "List[int]"}, {"lineNumber": 37, "col_offset": 79, "nodeName": "self", "type": "Any"}, {"lineNumber": 38, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "array", "type": "Any"}, {"lineNumber": 45, "col_offset": 24, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 45, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "slicing_shape", "type": "List[Any]"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "numpy", "type": "module"}, {"lineNumber": 54, "col_offset": 48, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 55, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 59, "col_offset": 71, "nodeName": "self", "type": "ArrayField"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "array", "type": "Any"}, {"lineNumber": 30, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 30, "col_offset": 51, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 32, "col_offset": 36, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 32, "col_offset": 40, "nodeName": "padding_lengths", "type": "Dict[str, int]"}, {"lineNumber": 37, "col_offset": 37, "nodeName": "numpy", "type": "module"}, {"lineNumber": 37, "col_offset": 65, "nodeName": "dtype", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 51, "nodeName": "_", "type": "int"}, {"lineNumber": 54, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "self", "type": "ArrayField"}, {"lineNumber": 27, "col_offset": 42, "nodeName": "self", "type": "Any"}, {"lineNumber": 37, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 56, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 44, "col_offset": 62, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 66, "nodeName": "max_shape", "type": "List[int]"}, {"lineNumber": 44, "col_offset": 79, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 83, "nodeName": "shape", "type": "Any"}, {"lineNumber": 44, "col_offset": 83, "nodeName": "array", "type": "Any"}, {"lineNumber": 44, "col_offset": 83, "nodeName": "self", "type": "Any"}]