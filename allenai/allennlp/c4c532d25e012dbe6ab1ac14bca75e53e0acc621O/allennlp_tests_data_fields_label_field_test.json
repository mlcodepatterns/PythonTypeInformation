[{"lineNumber": 10, "col_offset": 21, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "test_as_tensor_returns_integer_tensor", "type": "Callable[[Any], Any]"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "test_label_field_can_index_with_vocab", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 4, "nodeName": "test_label_field_raises_with_non_integer_labels_and_no_indexing", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "test_label_field_raises_with_incorrect_label_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 36, "col_offset": 4, "nodeName": "test_label_field_empty_field_works", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "test_class_variables_for_namespace_warnings_work_correctly", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "test_printing_doesnt_crash", "type": "Callable[[Any], Any]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "label", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "label", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "label", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "empty_label", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "label", "type": "Any"}, {"lineNumber": 12, "col_offset": 16, "nodeName": "LabelField", "type": "Any"}, {"lineNumber": 14, "col_offset": 17, "nodeName": "as_tensor", "type": "Any"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "Vocabulary", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Any"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "LabelField", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "as_tensor", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "LabelField", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "empty_field", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "label", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "_already_warned_namespaces", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "_already_warned_namespaces", "type": "Any"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "_already_warned_namespaces", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "LabelField", "type": "Any"}, {"lineNumber": 60, "col_offset": 14, "nodeName": "label", "type": "Any"}, {"lineNumber": 14, "col_offset": 17, "nodeName": "label", "type": "Any"}, {"lineNumber": 14, "col_offset": 33, "nodeName": "get_padding_lengths", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "item", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "label", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "label", "type": "Any"}, {"lineNumber": 25, "col_offset": 33, "nodeName": "get_padding_lengths", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "item", "type": "Any"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Any"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "LabelField", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Any"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "LabelField", "type": "Any"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "label", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "empty_label", "type": "Any"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "LabelField", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "assertLogs", "type": "Any"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "LabelField", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "LabelField", "type": "Any"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "AssertionError", "type": "Type[AssertionError]"}, {"lineNumber": 51, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "LabelField", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "assertLogs", "type": "Any"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "LabelField", "type": "Any"}, {"lineNumber": 14, "col_offset": 33, "nodeName": "label", "type": "Any"}, {"lineNumber": 15, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 25, "col_offset": 33, "nodeName": "label", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 33, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 44, "col_offset": 13, "nodeName": "self", "type": "TestLabelField"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "assertLogs", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "LabelField", "type": "Any"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "self", "type": "TestLabelField"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "self", "type": "TestLabelField"}]