[{"lineNumber": 12, "col_offset": 38, "nodeName": "ModelTestCase", "type": "Any"}, {"lineNumber": 13, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "test_model_can_train_save_and_load", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "test_model_decode", "type": "Callable[[Any], Any]"}, {"lineNumber": 34, "col_offset": 4, "nodeName": "test_get_neighbor_indices", "type": "Callable[[Any], Any]"}, {"lineNumber": 55, "col_offset": 4, "nodeName": "test_get_type_vector", "type": "Callable[[Any], Any]"}, {"lineNumber": 63, "col_offset": 4, "nodeName": "test_get_linking_probabilities", "type": "Callable[[Any], Any]"}, {"lineNumber": 94, "col_offset": 4, "nodeName": "get_fake_worlds", "type": "Callable[[Any], Any]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "config_path", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "data_path", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "iterator_params", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "model_batch", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "training", "type": "bool"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "decode_output", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "neighbor_indices", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "linking_scores", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "question_mask", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "FakeTable", "type": "Type[`namedtuple-FakeTable-entities-neighbors`]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "FakeWorld", "type": "Type[`namedtuple-FakeWorld-table_graph`]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "num_entities", "type": "int"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "set_up_model", "type": "Any"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "config_path", "type": "Any"}, {"lineNumber": 17, "col_offset": 39, "nodeName": "data_path", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Any"}, {"lineNumber": 21, "col_offset": 50, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "from_file", "type": "Any"}, {"lineNumber": 24, "col_offset": 34, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 25, "col_offset": 26, "nodeName": "params", "type": "Any"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 26, "col_offset": 44, "nodeName": "iterator_params", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "index_with", "type": "Any"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "next", "type": "Callable"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "decode", "type": "Any"}, {"lineNumber": 31, "col_offset": 42, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 32, "col_offset": 38, "nodeName": "decode_output", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "worlds", "type": "List[`namedtuple-FakeWorld-table_graph`]"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "num_entities", "type": "int"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "get_fake_worlds", "type": "Callable[[], Any]"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "_get_neighbor_indices", "type": "Any"}, {"lineNumber": 38, "col_offset": 60, "nodeName": "worlds", "type": "List[`namedtuple-FakeWorld-table_graph`]"}, {"lineNumber": 38, "col_offset": 68, "nodeName": "num_entities", "type": "int"}, {"lineNumber": 38, "col_offset": 82, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "worlds", "type": "List[`namedtuple-FakeWorld-table_graph`]"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "num_entities", "type": "int"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "get_fake_worlds", "type": "Callable[[], Any]"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "type_vector", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "_", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "_get_type_vector", "type": "Any"}, {"lineNumber": 58, "col_offset": 53, "nodeName": "worlds", "type": "List[`namedtuple-FakeWorld-table_graph`]"}, {"lineNumber": 58, "col_offset": 61, "nodeName": "num_entities", "type": "int"}, {"lineNumber": 58, "col_offset": 75, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "worlds", "type": "List[`namedtuple-FakeWorld-table_graph`]"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "num_entities", "type": "int"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "get_fake_worlds", "type": "Callable[[], Any]"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 70, "col_offset": 43, "nodeName": "linking_scores", "type": "List[List[List[int]]]"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 72, "col_offset": 11, "nodeName": "entity_type_dict", "type": "Any"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "_get_type_vector", "type": "Any"}, {"lineNumber": 72, "col_offset": 58, "nodeName": "worlds", "type": "List[`namedtuple-FakeWorld-table_graph`]"}, {"lineNumber": 72, "col_offset": 66, "nodeName": "num_entities", "type": "int"}, {"lineNumber": 72, "col_offset": 80, "nodeName": "linking_scores", "type": "Any"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "_get_linking_probabilities", "type": "Any"}, {"lineNumber": 75, "col_offset": 67, "nodeName": "worlds", "type": "List[`namedtuple-FakeWorld-table_graph`]"}, {"lineNumber": 75, "col_offset": 75, "nodeName": "linking_scores", "type": "Any"}, {"lineNumber": 75, "col_offset": 91, "nodeName": "question_mask", "type": "Any"}, {"lineNumber": 76, "col_offset": 67, "nodeName": "entity_type_dict", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 92, "col_offset": 71, "nodeName": "true_probability", "type": "List[List[List[float]]]"}, {"lineNumber": 96, "col_offset": 20, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "namedtuple", "type": "Callable[..., Type[Any]]"}, {"lineNumber": 114, "col_offset": 23, "nodeName": "max", "type": "Callable"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "worlds", "type": "List[`namedtuple-FakeWorld-table_graph`]"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "num_entities", "type": "int"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "WikiTablesMmlSemanticParserTest"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 21, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "Params", "type": "Any"}, {"lineNumber": 24, "col_offset": 34, "nodeName": "self", "type": "WikiTablesMmlSemanticParserTest"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "DataIterator", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "model", "type": "Any"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "WikiTablesMmlSemanticParserTest"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "self", "type": "WikiTablesMmlSemanticParserTest"}, {"lineNumber": 30, "col_offset": 38, "nodeName": "model_batch", "type": "Any"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "model", "type": "Any"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "self", "type": "WikiTablesMmlSemanticParserTest"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "model", "type": "Any"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 56, "col_offset": 31, "nodeName": "self", "type": "WikiTablesMmlSemanticParserTest"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 64, "col_offset": 31, "nodeName": "self", "type": "WikiTablesMmlSemanticParserTest"}, {"lineNumber": 70, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "FIXTURES_ROOT", "type": "Any"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "FIXTURES_ROOT", "type": "Any"}, {"lineNumber": 27, "col_offset": 28, "nodeName": "self", "type": "WikiTablesMmlSemanticParserTest"}, {"lineNumber": 28, "col_offset": 36, "nodeName": "self", "type": "WikiTablesMmlSemanticParserTest"}, {"lineNumber": 31, "col_offset": 24, "nodeName": "self", "type": "WikiTablesMmlSemanticParserTest"}, {"lineNumber": 38, "col_offset": 27, "nodeName": "self", "type": "WikiTablesMmlSemanticParserTest"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "self", "type": "WikiTablesMmlSemanticParserTest"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 72, "col_offset": 30, "nodeName": "self", "type": "WikiTablesMmlSemanticParserTest"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "self", "type": "WikiTablesMmlSemanticParserTest"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "entity_list", "type": "List[str]"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "entity2neighbors", "type": "Dict[str, Union[List[str], List[nothing]]]"}, {"lineNumber": 113, "col_offset": 55, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 113, "col_offset": 59, "nodeName": "entities", "type": "List[List[str]]"}, {"lineNumber": 113, "col_offset": 69, "nodeName": "neighbors", "type": "List[Dict[str, Union[List[str], List[nothing]]]]"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "entity_list", "type": "List[str]"}, {"lineNumber": 114, "col_offset": 49, "nodeName": "entity_list", "type": "List[str]"}, {"lineNumber": 114, "col_offset": 64, "nodeName": "entities", "type": "List[List[str]]"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "self", "type": "WikiTablesMmlSemanticParserTest"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "self", "type": "WikiTablesMmlSemanticParserTest"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "neighbor_indices", "type": "Any"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "type_vector", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "detach", "type": "Any"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "entity_probability", "type": "Any"}]