[{"lineNumber": 11, "col_offset": 16, "nodeName": "Field", "type": "Type[allennlp.data.fields.field.Field[Any]]"}, {"lineNumber": 50, "col_offset": 60, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 62, "col_offset": 31, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 11, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "span_start", "type": "int"}, {"lineNumber": 28, "col_offset": 26, "nodeName": "span_start", "type": "int"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "span_end", "type": "int"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "span_end", "type": "int"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "sequence_field", "type": "allennlp.data.fields.sequence_field.SequenceField[Any]"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "sequence_field", "type": "allennlp.data.fields.sequence_field.SequenceField[Any]"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 50, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 11, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 27, "col_offset": 35, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 27, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 27, "col_offset": 71, "nodeName": "SequenceField", "type": "Type[allennlp.data.fields.sequence_field.SequenceField[Any]]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "SpanField"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "SpanField"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "SpanField"}, {"lineNumber": 36, "col_offset": 11, "nodeName": "span_start", "type": "int"}, {"lineNumber": 36, "col_offset": 24, "nodeName": "span_end", "type": "int"}, {"lineNumber": 40, "col_offset": 11, "nodeName": "span_end", "type": "int"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "SpanField", "type": "Type[SpanField]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "__eq__", "type": "Callable[[Any], bool]"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "other", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 41, "col_offset": 18, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 45, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 45, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 52, "col_offset": 52, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "empty_field", "type": "Any"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "span_start", "type": "int"}, {"lineNumber": 60, "col_offset": 60, "nodeName": "span_end", "type": "int"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "other", "type": "Any"}, {"lineNumber": 63, "col_offset": 29, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "other", "type": "Any"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 32, "col_offset": 26, "nodeName": "span_start", "type": "int"}, {"lineNumber": 32, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 32, "col_offset": 50, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 32, "col_offset": 61, "nodeName": "span_end", "type": "int"}, {"lineNumber": 32, "col_offset": 71, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "sequence_length", "type": "Callable[[], int]"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "sequence_field", "type": "Any"}, {"lineNumber": 60, "col_offset": 41, "nodeName": "self", "type": "SpanField"}, {"lineNumber": 60, "col_offset": 60, "nodeName": "self", "type": "SpanField"}, {"lineNumber": 63, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 63, "col_offset": 44, "nodeName": "other", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "span_start", "type": "int"}, {"lineNumber": 64, "col_offset": 46, "nodeName": "span_end", "type": "int"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "span_start", "type": "int"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "span_end", "type": "int"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "sequence_field", "type": "allennlp.data.fields.sequence_field.SequenceField[Any]"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "span_end", "type": "int"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 50, "col_offset": 51, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 29, "nodeName": "self", "type": "SpanField"}, {"lineNumber": 64, "col_offset": 46, "nodeName": "self", "type": "SpanField"}, {"lineNumber": 40, "col_offset": 22, "nodeName": "self", "type": "SpanField"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "sequence_length", "type": "Callable[[], int]"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "sequence_field", "type": "allennlp.data.fields.sequence_field.SequenceField[Any]"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "self", "type": "SpanField"}]