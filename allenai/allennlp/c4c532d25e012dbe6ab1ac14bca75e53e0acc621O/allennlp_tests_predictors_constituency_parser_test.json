[{"lineNumber": 10, "col_offset": 38, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "test_uses_named_inputs", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "test_batch_prediction", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "test_build_hierplane_tree", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "archive", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "class_distribution", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "archive", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "results", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "class_distribution", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "class_distribution", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "tree", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "archive", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "hierplane_tree", "type": "Any"}, {"lineNumber": 16, "col_offset": 18, "nodeName": "load_archive", "type": "Any"}, {"lineNumber": 17, "col_offset": 20, "nodeName": "from_archive", "type": "Any"}, {"lineNumber": 17, "col_offset": 43, "nodeName": "archive", "type": "Any"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "predict_json", "type": "Any"}, {"lineNumber": 19, "col_offset": 40, "nodeName": "inputs", "type": "Dict[str, str]"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 24, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 26, "col_offset": 34, "nodeName": "result", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "load_archive", "type": "Any"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "from_archive", "type": "Any"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "archive", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "predict_batch_json", "type": "Any"}, {"lineNumber": 37, "col_offset": 47, "nodeName": "inputs", "type": "List[Dict[str, str]]"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "results", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "result", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "results", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "result", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "fromstring", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "load_archive", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "from_archive", "type": "Any"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "archive", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "_build_hierplane_tree", "type": "Any"}, {"lineNumber": 63, "col_offset": 57, "nodeName": "tree", "type": "Any"}, {"lineNumber": 68, "col_offset": 35, "nodeName": "LINK_TO_LABEL", "type": "Any"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "NODE_TYPE_TO_STYLE", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "correct_tree", "type": "Dict[str, Any]"}, {"lineNumber": 129, "col_offset": 31, "nodeName": "hierplane_tree", "type": "Any"}, {"lineNumber": 17, "col_offset": 20, "nodeName": "Predictor", "type": "Any"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "result", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 36, "col_offset": 20, "nodeName": "Predictor", "type": "Any"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "result", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "result", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "assertAlmostEqual", "type": "Callable"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "Tree", "type": "Any"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "Predictor", "type": "Any"}, {"lineNumber": 63, "col_offset": 25, "nodeName": "predictor", "type": "Any"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 22, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "self", "type": "TestConstituencyParserPredictor"}, {"lineNumber": 27, "col_offset": 35, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 27, "col_offset": 39, "nodeName": "class_distribution", "type": "Any"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 41, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "self", "type": "TestConstituencyParserPredictor"}, {"lineNumber": 46, "col_offset": 35, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 46, "col_offset": 39, "nodeName": "class_distribution", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "TestConstituencyParserPredictor"}, {"lineNumber": 56, "col_offset": 35, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "class_distribution", "type": "Any"}, {"lineNumber": 16, "col_offset": 31, "nodeName": "FIXTURES_ROOT", "type": "Any"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "FIXTURES_ROOT", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "FIXTURES_ROOT", "type": "Any"}, {"lineNumber": 16, "col_offset": 31, "nodeName": "self", "type": "TestConstituencyParserPredictor"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "self", "type": "TestConstituencyParserPredictor"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "self", "type": "TestConstituencyParserPredictor"}]