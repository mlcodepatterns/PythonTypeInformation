[{"lineNumber": 12, "col_offset": 28, "nodeName": "Scheduler", "type": "Type[allennlp.training.scheduler.Scheduler]"}, {"lineNumber": 12, "col_offset": 39, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "LearningRateScheduler", "type": "Type[LearningRateScheduler]"}, {"lineNumber": 57, "col_offset": 54, "nodeName": "_PyTorchLearningRateSchedulerWrapper", "type": "Type[_PyTorchLearningRateSchedulerWrapper]"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "StepLR", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "MultiStepLR", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "ExponentialLR", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "ReduceLROnPlateau", "type": "Any"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "scheduler_type", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "scheduler", "type": "LearningRateScheduler"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 49, "col_offset": 28, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 16, "col_offset": 29, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 17, "col_offset": 25, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 17, "col_offset": 42, "nodeName": "last_epoch", "type": "int"}, {"lineNumber": 24, "col_offset": 36, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 24, "col_offset": 67, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "pop_choice", "type": "Callable[..., Any]"}, {"lineNumber": 27, "col_offset": 66, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 28, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 28, "col_offset": 22, "nodeName": "scheduler", "type": "LearningRateScheduler"}, {"lineNumber": 28, "col_offset": 33, "nodeName": "ReduceLROnPlateau", "type": "Any"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "_LRScheduler", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "_PyTorchLearningRateSchedulerWithMetricsWrapper"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "get_lr", "type": "Any"}, {"lineNumber": 45, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 46, "col_offset": 31, "nodeName": "epoch", "type": "int"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 54, "col_offset": 42, "nodeName": "state_dict", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 60, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "metric", "type": "float"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 65, "col_offset": 31, "nodeName": "metric", "type": "float"}, {"lineNumber": 65, "col_offset": 39, "nodeName": "epoch", "type": "int"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "optim", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "optim", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "optim", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "optim", "type": "Any"}, {"lineNumber": 24, "col_offset": 36, "nodeName": "optim", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 26, "col_offset": 51, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 27, "col_offset": 50, "nodeName": "scheduler_type", "type": "Any"}, {"lineNumber": 28, "col_offset": 33, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "_PyTorchLearningRateSchedulerWithMetricsWrapper", "type": "Type[_PyTorchLearningRateSchedulerWithMetricsWrapper]"}, {"lineNumber": 29, "col_offset": 67, "nodeName": "scheduler", "type": "LearningRateScheduler"}, {"lineNumber": 30, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 30, "col_offset": 24, "nodeName": "scheduler", "type": "LearningRateScheduler"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "_LRScheduler", "type": "Any"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "scheduler", "type": "LearningRateScheduler"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "Any", "type": "Any"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 71, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 72, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 73, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 24, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 26, "col_offset": 51, "nodeName": "LearningRateScheduler", "type": "Type[LearningRateScheduler]"}, {"lineNumber": 27, "col_offset": 20, "nodeName": "LearningRateScheduler", "type": "Type[LearningRateScheduler]"}, {"lineNumber": 27, "col_offset": 79, "nodeName": "as_dict", "type": "Callable[..., Any]"}, {"lineNumber": 28, "col_offset": 33, "nodeName": "optim", "type": "Any"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "_PyTorchLearningRateSchedulerWrapper", "type": "Type[_PyTorchLearningRateSchedulerWrapper]"}, {"lineNumber": 31, "col_offset": 56, "nodeName": "scheduler", "type": "LearningRateScheduler"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "optim", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "self", "type": "_PyTorchLearningRateSchedulerWrapper"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 27, "col_offset": 79, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 28, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "optim", "type": "Any"}, {"lineNumber": 38, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 53, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 52, "nodeName": "Any", "type": "Any"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "torch", "type": "Any"}]