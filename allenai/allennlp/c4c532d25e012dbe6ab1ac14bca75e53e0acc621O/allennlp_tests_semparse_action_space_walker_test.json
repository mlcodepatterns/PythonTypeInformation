[{"lineNumber": 12, "col_offset": 33, "nodeName": "DomainLanguage", "type": "Type[allennlp.semparse.domain_languages.domain_language.DomainLanguage]"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 15, "col_offset": 51, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "items", "type": "Set[Object]"}, {"lineNumber": 19, "col_offset": 43, "nodeName": "Set", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "items", "type": "Set[Object]"}, {"lineNumber": 23, "col_offset": 46, "nodeName": "Set", "type": "Any"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "items", "type": "Set[Object]"}, {"lineNumber": 27, "col_offset": 48, "nodeName": "Set", "type": "Any"}, {"lineNumber": 31, "col_offset": 29, "nodeName": "Set", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "world", "type": "FakeLanguageWithAssertions"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "black_logical_forms", "type": "List[str]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "black_triangle_touch_forms", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "black_logical_forms", "type": "List[str]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "agenda", "type": "List[str]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "ten_shortest_logical_forms", "type": "List[str]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "shortest_logical_form", "type": "str"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "length_three_logical_forms", "type": "List[str]"}, {"lineNumber": 19, "col_offset": 47, "nodeName": "Object", "type": "Type[Object]"}, {"lineNumber": 23, "col_offset": 50, "nodeName": "Object", "type": "Type[Object]"}, {"lineNumber": 27, "col_offset": 52, "nodeName": "Object", "type": "Type[Object]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 31, "col_offset": 33, "nodeName": "Object", "type": "Type[Object]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 38, "col_offset": 21, "nodeName": "FakeLanguageWithAssertions", "type": "Type[FakeLanguageWithAssertions]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "ActionSpaceWalker", "type": "Type[allennlp.semparse.action_space_walker.ActionSpaceWalker]"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "world", "type": "FakeLanguageWithAssertions"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "shortest_logical_form", "type": "str"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 52, "col_offset": 79, "nodeName": "agenda", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "shortest_logical_form", "type": "str"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 74, "col_offset": 79, "nodeName": "agenda", "type": "List[str]"}, {"lineNumber": 102, "col_offset": 73, "nodeName": "log", "type": "unittest.case._AssertLogsContext"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "first_four_logical_forms", "type": "List[str]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "output", "type": "List[str]"}, {"lineNumber": 116, "col_offset": 73, "nodeName": "log", "type": "unittest.case._AssertLogsContext"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "first_four_logical_forms", "type": "List[str]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "output", "type": "List[str]"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 127, "col_offset": 62, "nodeName": "agenda", "type": "List[str]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "empty_set", "type": "List[str]"}, {"lineNumber": 132, "col_offset": 73, "nodeName": "log", "type": "unittest.case._AssertLogsContext"}, {"lineNumber": 137, "col_offset": 12, "nodeName": "yellow_black_triangle_touch_forms", "type": "List[str]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "output", "type": "List[str]"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "get_all_logical_forms", "type": "Callable[..., List[str]]"}, {"lineNumber": 154, "col_offset": 32, "nodeName": "ten_shortest_logical_forms", "type": "List[str]"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "shortest_logical_form", "type": "str"}, {"lineNumber": 156, "col_offset": 37, "nodeName": "ten_shortest_logical_forms", "type": "List[str]"}, {"lineNumber": 15, "col_offset": 35, "nodeName": "Set", "type": "Any"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "Set", "type": "Any"}, {"lineNumber": 23, "col_offset": 30, "nodeName": "Set", "type": "Any"}, {"lineNumber": 27, "col_offset": 32, "nodeName": "Set", "type": "Any"}, {"lineNumber": 39, "col_offset": 40, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "black_logical_forms", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 55, "col_offset": 19, "nodeName": "black_triangle_touch_forms", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "black_logical_forms", "type": "List[str]"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "assertLogs", "type": "Callable[..., unittest.case._AssertLogsContext]"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 105, "col_offset": 39, "nodeName": "empty_agenda_logical_forms", "type": "List[str]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "log", "type": "unittest.case._AssertLogsContext"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "assertLogs", "type": "Callable[..., unittest.case._AssertLogsContext]"}, {"lineNumber": 117, "col_offset": 41, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 117, "col_offset": 83, "nodeName": "agenda", "type": "List[str]"}, {"lineNumber": 119, "col_offset": 39, "nodeName": "empty_agenda_logical_forms", "type": "List[str]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "log", "type": "unittest.case._AssertLogsContext"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "assertLogs", "type": "Callable[..., unittest.case._AssertLogsContext]"}, {"lineNumber": 137, "col_offset": 48, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 137, "col_offset": 90, "nodeName": "agenda", "type": "List[str]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 147, "col_offset": 25, "nodeName": "log", "type": "unittest.case._AssertLogsContext"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 157, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 157, "col_offset": 19, "nodeName": "length_three_logical_forms", "type": "List[str]"}, {"lineNumber": 15, "col_offset": 39, "nodeName": "Object", "type": "Type[Object]"}, {"lineNumber": 19, "col_offset": 31, "nodeName": "Object", "type": "Type[Object]"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "Object", "type": "Type[Object]"}, {"lineNumber": 27, "col_offset": 36, "nodeName": "Object", "type": "Type[Object]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 38, "col_offset": 61, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 74, "col_offset": 37, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 77, "col_offset": 19, "nodeName": "black_triangle_touch_forms", "type": "List[str]"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "black_triangle_touch_forms", "type": "List[str]"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "black_triangle_touch_forms", "type": "List[str]"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "first_four_logical_forms", "type": "List[str]"}, {"lineNumber": 116, "col_offset": 13, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 117, "col_offset": 41, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "first_four_logical_forms", "type": "List[str]"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 132, "col_offset": 13, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 137, "col_offset": 48, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 140, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 140, "col_offset": 23, "nodeName": "yellow_black_triangle_touch_forms", "type": "List[str]"}, {"lineNumber": 153, "col_offset": 37, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 117, "col_offset": 41, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 137, "col_offset": 48, "nodeName": "self", "type": "ActionSpaceWalkerTest"}]