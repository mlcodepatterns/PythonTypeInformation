[{"lineNumber": 13, "col_offset": 24, "nodeName": "ModelTestCase", "type": "Any"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "setUp", "type": "Callable[[Any], Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "test_model_can_train_save_and_load", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "test_bidirectional_model_can_train_save_and_load", "type": "Callable[[Any], Any]"}, {"lineNumber": 29, "col_offset": 4, "nodeName": "test_no_attention_model_can_train_save_and_load", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "test_legacy_attention_model_can_train_save_and_load", "type": "Callable[[Any], Any]"}, {"lineNumber": 44, "col_offset": 4, "nodeName": "test_greedy_model_can_train_save_and_load", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 4, "nodeName": "test_loss_is_computed_correctly", "type": "Callable[[Any], Any]"}, {"lineNumber": 66, "col_offset": 4, "nodeName": "test_decode_runs_correctly", "type": "Callable[[Any], Any]"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "test_greedy_decode_matches_beam_search", "type": "Callable[[Any], Any]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "param_overrides", "type": "str"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "param_overrides", "type": "str"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "param_overrides", "type": "str"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "num_decoding_steps", "type": "int"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "sample_logits", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "actual_loss", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "training_tensors", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "decode_output_dict", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "decode_output_dict", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "beam_search", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "training_tensors", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "output_dict_greedy", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "output_dict_greedy", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "state", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "start_predictions", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "output_dict_beam_search", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "set_up_model", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Any"}, {"lineNumber": 21, "col_offset": 50, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Any"}, {"lineNumber": 25, "col_offset": 50, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Any"}, {"lineNumber": 31, "col_offset": 50, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Any"}, {"lineNumber": 40, "col_offset": 50, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "dumps", "type": "Callable[..., str]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Any"}, {"lineNumber": 46, "col_offset": 50, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "randn", "type": "Any"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 55, "col_offset": 70, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 61, "col_offset": 24, "nodeName": "sequence_cross_entropy_with_logits", "type": "Any"}, {"lineNumber": 61, "col_offset": 59, "nodeName": "sample_logits", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "_get_loss", "type": "Any"}, {"lineNumber": 63, "col_offset": 43, "nodeName": "sample_logits", "type": "Any"}, {"lineNumber": 63, "col_offset": 58, "nodeName": "sample_targets", "type": "Any"}, {"lineNumber": 63, "col_offset": 74, "nodeName": "sample_mask", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "equal", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "as_tensor_dict", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "decode", "type": "Any"}, {"lineNumber": 70, "col_offset": 47, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 72, "col_offset": 37, "nodeName": "decode_output_dict", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "training_tensors", "type": "Any"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "decode", "type": "Any"}, {"lineNumber": 79, "col_offset": 47, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 80, "col_offset": 37, "nodeName": "decode_output_dict", "type": "Any"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "BeamSearch", "type": "Any"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "_end_index", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "as_tensor_dict", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "_encode", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "_init_decoder_state", "type": "Any"}, {"lineNumber": 89, "col_offset": 47, "nodeName": "state", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "_forward_loop", "type": "Any"}, {"lineNumber": 90, "col_offset": 54, "nodeName": "state", "type": "Any"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "decode", "type": "Any"}, {"lineNumber": 91, "col_offset": 47, "nodeName": "output_dict_greedy", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "_encode", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "_init_decoder_state", "type": "Any"}, {"lineNumber": 95, "col_offset": 47, "nodeName": "state", "type": "Any"}, {"lineNumber": 97, "col_offset": 28, "nodeName": "new_full", "type": "Any"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "search", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "start_predictions", "type": "Any"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "state", "type": "Any"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "take_step", "type": "Any"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "all_top_k_predictions", "type": "Any"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "decode", "type": "Any"}, {"lineNumber": 103, "col_offset": 52, "nodeName": "output_dict_beam_search", "type": "Dict[str, Any]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 21, "col_offset": 50, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 24, "col_offset": 26, "nodeName": "json", "type": "module"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 25, "col_offset": 50, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 27, "col_offset": 60, "nodeName": "param_overrides", "type": "str"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "json", "type": "module"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 31, "col_offset": 50, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 33, "col_offset": 60, "nodeName": "param_overrides", "type": "str"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "json", "type": "module"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 40, "col_offset": 50, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 42, "col_offset": 60, "nodeName": "param_overrides", "type": "str"}, {"lineNumber": 45, "col_offset": 26, "nodeName": "json", "type": "module"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 46, "col_offset": 50, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 48, "col_offset": 60, "nodeName": "param_overrides", "type": "str"}, {"lineNumber": 55, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 55, "col_offset": 48, "nodeName": "num_decoding_steps", "type": "int"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "randint", "type": "Any"}, {"lineNumber": 56, "col_offset": 66, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 59, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "randint", "type": "Any"}, {"lineNumber": 61, "col_offset": 74, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 64, "col_offset": 55, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 69, "col_offset": 35, "nodeName": "training_tensors", "type": "Any"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "training_tensors", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "model", "type": "Any"}, {"lineNumber": 84, "col_offset": 66, "nodeName": "_max_decoding_steps", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "training_tensors", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "model", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "training_tensors", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "model", "type": "Any"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 97, "col_offset": 59, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 97, "col_offset": 84, "nodeName": "_start_index", "type": "Any"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "beam_search", "type": "Any"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "model", "type": "Any"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "model", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "output_dict_greedy", "type": "Any"}, {"lineNumber": 106, "col_offset": 57, "nodeName": "output_dict_beam_search", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "Any"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "random", "type": "Any"}, {"lineNumber": 57, "col_offset": 64, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 57, "col_offset": 76, "nodeName": "num_decoding_steps", "type": "int"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "random", "type": "Any"}, {"lineNumber": 60, "col_offset": 61, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 60, "col_offset": 73, "nodeName": "num_decoding_steps", "type": "int"}, {"lineNumber": 63, "col_offset": 22, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 64, "col_offset": 55, "nodeName": "data", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 70, "col_offset": 29, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 84, "col_offset": 66, "nodeName": "model", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 90, "col_offset": 29, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 91, "col_offset": 29, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 97, "col_offset": 28, "nodeName": "state", "type": "Any"}, {"lineNumber": 97, "col_offset": 84, "nodeName": "model", "type": "Any"}, {"lineNumber": 99, "col_offset": 42, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 103, "col_offset": 34, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "Any"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 56, "col_offset": 42, "nodeName": "numpy", "type": "module"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "numpy", "type": "module"}, {"lineNumber": 61, "col_offset": 74, "nodeName": "sample_targets", "type": "Any"}, {"lineNumber": 62, "col_offset": 59, "nodeName": "sample_mask", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "expected_loss", "type": "Any"}, {"lineNumber": 64, "col_offset": 55, "nodeName": "actual_loss", "type": "Any"}, {"lineNumber": 84, "col_offset": 66, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 96, "col_offset": 21, "nodeName": "state", "type": "Any"}, {"lineNumber": 97, "col_offset": 84, "nodeName": "self", "type": "SimpleSeq2SeqTest"}, {"lineNumber": 17, "col_offset": 26, "nodeName": "self", "type": "SimpleSeq2SeqTest"}]