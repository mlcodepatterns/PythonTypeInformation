[{"lineNumber": 15, "col_offset": 18, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "_text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "_contextualizer", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "contextualizer", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 61, "col_offset": 11, "nodeName": "contextualizer", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "_language_model_head", "type": "allennlp.modules.language_model_heads.language_model_head.LanguageModelHead"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "language_model_head", "type": "allennlp.modules.language_model_heads.language_model_head.LanguageModelHead"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "_target_namespace", "type": "str"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "target_namespace", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "_perplexity", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "_contextualizer", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "target_logits", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "probs", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "k", "type": "Union[Any, int]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 9, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "top_words", "type": "List[List[List[Any]]]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "instance_indices", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "tokens", "type": "List[List[Any]]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "instance_tokens", "type": "Any"}, {"lineNumber": 143, "col_offset": 32, "nodeName": "tokens", "type": "List[List[Any]]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 118, "col_offset": 9, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "Perplexity", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "dropout", "type": "float"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 77, "col_offset": 22, "nodeName": "TextFieldTensors", "type": "Type[Dict[str, Dict[str, Any]]]"}, {"lineNumber": 77, "col_offset": 52, "nodeName": "TextFieldTensors", "type": "Type[Dict[str, Dict[str, Any]]]"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 81, "col_offset": 47, "nodeName": "tokens", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 85, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "contextual_embeddings", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "final_embeddings", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "final_embeddings", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "_language_model_head", "type": "Any"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "target_logits", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "min", "type": "Callable"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "top_probs", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "top_indices", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "topk", "type": "Any"}, {"lineNumber": 99, "col_offset": 40, "nodeName": "top_probs", "type": "Any"}, {"lineNumber": 99, "col_offset": 66, "nodeName": "top_indices", "type": "Any"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "get_token_ids_from_text_field_tensors", "type": "Callable[[Dict[str, Dict[str, Any]]], Any]"}, {"lineNumber": 101, "col_offset": 78, "nodeName": "tokens", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 103, "col_offset": 11, "nodeName": "target_ids", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "targets", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "target_logits", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "loss", "type": "Any"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 120, "col_offset": 32, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "top_words", "type": "List[List[List[Any]]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "check_dimensions_match", "type": "Callable[[int, int, str, str], None]"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "get_text_field_mask", "type": "Callable[..., Any]"}, {"lineNumber": 86, "col_offset": 44, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "_contextualizer", "type": "Any"}, {"lineNumber": 87, "col_offset": 57, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 87, "col_offset": 69, "nodeName": "mask", "type": "Any"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "get_final_encoder_states", "type": "Callable[..., Any]"}, {"lineNumber": 88, "col_offset": 61, "nodeName": "contextual_embeddings", "type": "Any"}, {"lineNumber": 88, "col_offset": 84, "nodeName": "mask", "type": "Any"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 92, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 50, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 92, "col_offset": 64, "nodeName": "final_embeddings", "type": "Any"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "target_logits", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "functional", "type": "Any"}, {"lineNumber": 97, "col_offset": 33, "nodeName": "probs", "type": "Any"}, {"lineNumber": 97, "col_offset": 46, "nodeName": "k", "type": "Union[Any, int]"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "util", "type": "module"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "view", "type": "Any"}, {"lineNumber": 104, "col_offset": 82, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "view", "type": "Any"}, {"lineNumber": 105, "col_offset": 47, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 105, "col_offset": 59, "nodeName": "vocab_size", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "cross_entropy", "type": "Any"}, {"lineNumber": 106, "col_offset": 53, "nodeName": "target_logits", "type": "Any"}, {"lineNumber": 106, "col_offset": 68, "nodeName": "targets", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "_perplexity", "type": "Any"}, {"lineNumber": 107, "col_offset": 29, "nodeName": "loss", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 117, "col_offset": 27, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 14, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 71, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "util", "type": "module"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "util", "type": "module"}, {"lineNumber": 92, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "target_logits", "type": "Any"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "functional", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "_perplexity", "type": "Any"}, {"lineNumber": 113, "col_offset": 64, "nodeName": "reset", "type": "bool"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "top_words", "type": "List[List[List[Any]]]"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "tokens", "type": "List[List[Any]]"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "contextualizer", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "get_token_ids_from_text_field_tensors", "type": "Callable[[Dict[str, Dict[str, Any]]], Any]"}, {"lineNumber": 104, "col_offset": 65, "nodeName": "target_ids", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "nn", "type": "Any"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "token_id", "type": "Any"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "instance_tokens", "type": "Any"}, {"lineNumber": 104, "col_offset": 22, "nodeName": "util", "type": "module"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "index", "type": "Any"}, {"lineNumber": 127, "col_offset": 37, "nodeName": "instance_indices", "type": "Any"}]