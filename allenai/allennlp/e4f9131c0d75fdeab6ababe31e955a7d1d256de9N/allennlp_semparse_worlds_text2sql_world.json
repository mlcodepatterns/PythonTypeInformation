[{"lineNumber": 120, "col_offset": 54, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "cursor", "type": "sqlite3.dbapi2.Cursor"}, {"lineNumber": 52, "col_offset": 22, "nodeName": "cursor", "type": "sqlite3.dbapi2.Cursor"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "schema", "type": "Dict[str, List[allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "columns", "type": "Dict[str, allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "dataset_name", "type": "str"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "use_prelinked_entities", "type": "bool"}, {"lineNumber": 56, "col_offset": 38, "nodeName": "use_prelinked_entities", "type": "bool"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "variable_free", "type": "bool"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "variable_free", "type": "bool"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "use_untyped_entities", "type": "bool"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "use_untyped_entities", "type": "bool"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "base_grammar_dictionary", "type": "Dict[str, List[str]]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "grammar_with_context", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "prelinked_entities", "type": "Union[Dict[str, Dict[str, str]], Dict[nothing, nothing]]"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "use_untyped_entities", "type": "bool"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "grammar", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "valid_actions", "type": "Dict[str, List[str]]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "all_actions", "type": "Set[Any]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "action_list", "type": "List[str]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "sorted_actions", "type": "List[Any]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "sql_visitor", "type": "allennlp.semparse.contexts.sql_context_utils.SqlVisitor"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "action_sequence", "type": "Any"}, {"lineNumber": 65, "col_offset": 101, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "variable_free", "type": "bool"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "use_untyped_entities", "type": "bool"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "grammar_dictionary", "type": "Dict[str, Union[List[str], List[nothing]]]"}, {"lineNumber": 93, "col_offset": 90, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "use_prelinked_entities", "type": "bool"}, {"lineNumber": 51, "col_offset": 39, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 53, "col_offset": 22, "nodeName": "read_dataset_schema", "type": "Callable[[str], Dict[str, List[allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn]]]"}, {"lineNumber": 53, "col_offset": 42, "nodeName": "schema_path", "type": "str"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "name", "type": "str"}, {"lineNumber": 54, "col_offset": 37, "nodeName": "column", "type": "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "_initialize_grammar_dictionary", "type": "Callable[[Dict[str, List[str]]], Dict[str, List[str]]]"}, {"lineNumber": 66, "col_offset": 31, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 66, "col_offset": 40, "nodeName": "base_grammar_dictionary", "type": "Dict[str, List[str]]"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "prelinked_entities", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 81, "col_offset": 18, "nodeName": "Grammar", "type": "Any"}, {"lineNumber": 83, "col_offset": 24, "nodeName": "initialize_valid_actions", "type": "Callable[..., Dict[str, List[str]]]"}, {"lineNumber": 83, "col_offset": 49, "nodeName": "grammar", "type": "Any"}, {"lineNumber": 84, "col_offset": 22, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "values", "type": "Callable"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 87, "col_offset": 32, "nodeName": "all_actions", "type": "Set[Any]"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "SqlVisitor", "type": "Type[allennlp.semparse.contexts.sql_context_utils.SqlVisitor]"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "grammar", "type": "Any"}, {"lineNumber": 90, "col_offset": 64, "nodeName": "query", "type": "List[str]"}, {"lineNumber": 91, "col_offset": 15, "nodeName": "action_sequence", "type": "Any"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "sorted_actions", "type": "List[Any]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "update_grammar_with_tables", "type": "Callable[[Dict[str, List[str]], Dict[str, List[allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn]]], None]"}, {"lineNumber": 95, "col_offset": 35, "nodeName": "grammar_dictionary", "type": "Dict[str, Union[List[str], List[nothing]]]"}, {"lineNumber": 95, "col_offset": 55, "nodeName": "schema", "type": "Dict[str, List[allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn]]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "update_grammar_with_global_values", "type": "Callable[[Dict[str, List[str]], str], None]"}, {"lineNumber": 110, "col_offset": 42, "nodeName": "grammar_dictionary", "type": "Dict[str, Union[List[str], List[nothing]]]"}, {"lineNumber": 110, "col_offset": 62, "nodeName": "dataset_name", "type": "str"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 115, "col_offset": 11, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 120, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "column", "type": "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn"}, {"lineNumber": 54, "col_offset": 48, "nodeName": "table", "type": "List[allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn]"}, {"lineNumber": 54, "col_offset": 82, "nodeName": "column", "type": "allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn"}, {"lineNumber": 54, "col_offset": 92, "nodeName": "table", "type": "List[allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn]"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 61, "col_offset": 75, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 61, "col_offset": 84, "nodeName": "GRAMMAR_DICTIONARY", "type": "Dict[str, List[str]]"}, {"lineNumber": 65, "col_offset": 64, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 66, "col_offset": 40, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "use_prelinked_entities", "type": "bool"}, {"lineNumber": 68, "col_offset": 47, "nodeName": "prelinked_entities", "type": "Dict[str, Dict[str, str]]"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "update_grammar_values_with_variables", "type": "Callable[[Dict[str, List[str]], Dict[str, Dict[str, str]]], None]"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "grammar_with_context", "type": "Any"}, {"lineNumber": 74, "col_offset": 71, "nodeName": "prelinked_entities", "type": "Union[Dict[str, Dict[str, str]], Dict[nothing, nothing]]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "update_grammar_numbers_and_strings_with_variables", "type": "Callable[[Dict[str, List[str]], Dict[str, Dict[str, str]], Dict[str, allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn]], None]"}, {"lineNumber": 76, "col_offset": 62, "nodeName": "grammar_with_context", "type": "Any"}, {"lineNumber": 77, "col_offset": 62, "nodeName": "prelinked_entities", "type": "Union[Dict[str, Dict[str, str]], Dict[nothing, nothing]]"}, {"lineNumber": 78, "col_offset": 62, "nodeName": "columns", "type": "Dict[str, allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn]"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "format_grammar_string", "type": "Callable[[Dict[str, List[str]]], str]"}, {"lineNumber": 81, "col_offset": 48, "nodeName": "grammar_with_context", "type": "Any"}, {"lineNumber": 85, "col_offset": 27, "nodeName": "valid_actions", "type": "Dict[str, List[str]]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 31, "nodeName": "action_list", "type": "List[str]"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "parse", "type": "Any"}, {"lineNumber": 93, "col_offset": 65, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 95, "col_offset": 55, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "cursor", "type": "sqlite3.dbapi2.Cursor"}, {"lineNumber": 97, "col_offset": 43, "nodeName": "use_prelinked_entities", "type": "bool"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "grammar_dictionary", "type": "Dict[str, Union[List[str], List[nothing]]]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "grammar_dictionary", "type": "Dict[str, Union[List[str], List[nothing]]]"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "update_grammar_with_table_values", "type": "Callable[[Dict[str, List[str]], Dict[str, List[allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn]], sqlite3.dbapi2.Cursor], None]"}, {"lineNumber": 106, "col_offset": 45, "nodeName": "grammar_dictionary", "type": "Dict[str, Union[List[str], List[nothing]]]"}, {"lineNumber": 106, "col_offset": 65, "nodeName": "schema", "type": "Dict[str, List[allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn]]"}, {"lineNumber": 106, "col_offset": 78, "nodeName": "cursor", "type": "sqlite3.dbapi2.Cursor"}, {"lineNumber": 110, "col_offset": 62, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "update_grammar_to_be_variable_free", "type": "Callable[[Dict[str, List[str]]], None]"}, {"lineNumber": 113, "col_offset": 47, "nodeName": "grammar_dictionary", "type": "Dict[str, Union[List[str], List[nothing]]]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "update_grammar_with_untyped_entities", "type": "Callable[[Dict[str, List[str]]], None]"}, {"lineNumber": 116, "col_offset": 49, "nodeName": "grammar_dictionary", "type": "Dict[str, Union[List[str], List[nothing]]]"}, {"lineNumber": 93, "col_offset": 95, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 54, "col_offset": 57, "nodeName": "values", "type": "Callable"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 78, "col_offset": 62, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "all_actions", "type": "Set[Any]"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "sql_visitor", "type": "allennlp.semparse.contexts.sql_context_utils.SqlVisitor"}, {"lineNumber": 90, "col_offset": 44, "nodeName": "join", "type": "Callable"}, {"lineNumber": 90, "col_offset": 53, "nodeName": "query", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 107, "nodeName": "List", "type": "Any"}, {"lineNumber": 65, "col_offset": 118, "nodeName": "List", "type": "Any"}, {"lineNumber": 97, "col_offset": 11, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 97, "col_offset": 43, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 106, "col_offset": 65, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 106, "col_offset": 78, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 93, "col_offset": 100, "nodeName": "List", "type": "Any"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "production_rule", "type": "str"}, {"lineNumber": 124, "col_offset": 46, "nodeName": "isnumeric", "type": "Callable[[], bool]"}, {"lineNumber": 54, "col_offset": 57, "nodeName": "schema", "type": "Dict[str, List[allennlp.data.dataset_readers.dataset_utils.text2sql_utils.TableColumn]]"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "basename", "type": "Callable"}, {"lineNumber": 55, "col_offset": 45, "nodeName": "schema_path", "type": "str"}, {"lineNumber": 65, "col_offset": 69, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 65, "col_offset": 112, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 65, "col_offset": 123, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 93, "col_offset": 70, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 93, "col_offset": 105, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 54, "col_offset": 57, "nodeName": "self", "type": "Text2SqlWorld"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "path", "type": "module"}, {"lineNumber": 65, "col_offset": 74, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 93, "col_offset": 75, "nodeName": "List", "type": "Any"}, {"lineNumber": 124, "col_offset": 46, "nodeName": "production_rule", "type": "str"}, {"lineNumber": 55, "col_offset": 28, "nodeName": "os", "type": "module"}, {"lineNumber": 93, "col_offset": 80, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 65, "col_offset": 79, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 65, "col_offset": 84, "nodeName": "str", "type": "Type[str]"}]