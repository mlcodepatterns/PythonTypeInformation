[{"lineNumber": 21, "col_offset": 0, "nodeName": "multi_device", "type": "Callable[[Any], Any]"}, {"lineNumber": 28, "col_offset": 0, "nodeName": "requires_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 39, "col_offset": 0, "nodeName": "requires_multi_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 50, "col_offset": 0, "nodeName": "cpu_or_gpu", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "_available_devices", "type": "List[str]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "key", "type": "str"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "argname", "type": "str"}, {"lineNumber": 82, "col_offset": 19, "nodeName": "metric_kwargs", "type": "Dict[str, List[Any]]"}, {"lineNumber": 87, "col_offset": 4, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 118, "col_offset": 4, "nodeName": "mapping", "type": "Optional[Union[Dict[Any, Any], Dict[nothing, nothing]]]"}, {"lineNumber": 120, "col_offset": 4, "nodeName": "old_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 121, "col_offset": 4, "nodeName": "present_only_in_old", "type": "Set[Any]"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "present_only_in_old", "type": "Set[Any]"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "test_method", "type": "Any"}, {"lineNumber": 64, "col_offset": 10, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 85, "col_offset": 4, "nodeName": "metric", "type": "allennlp.training.metrics.metric.Metric"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "get_metric", "type": "Callable[[Optional[bool]], Dict[str, Any]]"}, {"lineNumber": 93, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "exact", "type": "Union[bool, Tuple[float, float]]"}, {"lineNumber": 93, "col_offset": 25, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "exact", "type": "Union[bool, Tuple[float, float]]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "rtol", "type": "float"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "atol", "type": "float"}, {"lineNumber": 104, "col_offset": 4, "nodeName": "assert_metrics_values", "type": "Callable[..., Any]"}, {"lineNumber": 104, "col_offset": 26, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "desired_values", "type": "Dict[str, Any]"}, {"lineNumber": 104, "col_offset": 51, "nodeName": "rtol", "type": "float"}, {"lineNumber": 104, "col_offset": 57, "nodeName": "atol", "type": "float"}, {"lineNumber": 118, "col_offset": 14, "nodeName": "mapping", "type": "Optional[Dict[Any, Any]]"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 121, "col_offset": 26, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 123, "col_offset": 14, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 126, "col_offset": 11, "nodeName": "ignore_missing", "type": "bool"}, {"lineNumber": 18, "col_offset": 46, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "parametrize", "type": "Any"}, {"lineNumber": 25, "col_offset": 45, "nodeName": "_available_devices", "type": "List[str]"}, {"lineNumber": 25, "col_offset": 65, "nodeName": "gpu", "type": "Any"}, {"lineNumber": 25, "col_offset": 81, "nodeName": "test_method", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "mark", "type": "Any"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "test_method", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "mark", "type": "Any"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "test_method", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "mark", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 77, "col_offset": 11, "nodeName": "Union", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 13, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 14, "nodeName": "metric", "type": "allennlp.training.metrics.metric.Metric"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "rtol", "type": "float"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "atol", "type": "float"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "rtol", "type": "float"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "atol", "type": "float"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "exact", "type": "Union[bool, Tuple[float, float]]"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "exact", "type": "Union[bool, Tuple[float, float]]"}, {"lineNumber": 111, "col_offset": 13, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "new_module", "type": "allennlp.modules.transformer.transformer_module.TransformerModule"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 124, "col_offset": 17, "nodeName": "val", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "items", "type": "Callable"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "remove", "type": "Callable[[Any], None]"}, {"lineNumber": 129, "col_offset": 35, "nodeName": "name", "type": "Any"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "allclose", "type": "Any"}, {"lineNumber": 130, "col_offset": 52, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 18, "col_offset": 46, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "mark", "type": "Any"}, {"lineNumber": 25, "col_offset": 65, "nodeName": "mark", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "skipif", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "skipif", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 67, "col_offset": 24, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "desired_values", "type": "Dict[str, Any]"}, {"lineNumber": 67, "col_offset": 64, "nodeName": "rtol", "type": "float"}, {"lineNumber": 67, "col_offset": 75, "nodeName": "atol", "type": "float"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "argname", "type": "str"}, {"lineNumber": 83, "col_offset": 26, "nodeName": "metric_kwargs", "type": "Dict[str, List[Any]]"}, {"lineNumber": 83, "col_offset": 49, "nodeName": "global_rank", "type": "int"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 88, "col_offset": 22, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 88, "col_offset": 31, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 120, "col_offset": 26, "nodeName": "old_module", "type": "Any"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "old_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "mapping", "type": "Optional[Union[Dict[Any, Any], Dict[nothing, nothing]]]"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "replace", "type": "Any"}, {"lineNumber": 125, "col_offset": 32, "nodeName": "key", "type": "Any"}, {"lineNumber": 125, "col_offset": 37, "nodeName": "val", "type": "Any"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 127, "col_offset": 27, "nodeName": "old_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "present_only_in_old", "type": "Set[Any]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "old_parameters", "type": "Dict[Any, Any]"}, {"lineNumber": 18, "col_offset": 46, "nodeName": "torch", "type": "Any"}, {"lineNumber": 25, "col_offset": 11, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 25, "col_offset": 65, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "mark", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "mark", "type": "Any"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "key", "type": "str"}, {"lineNumber": 67, "col_offset": 53, "nodeName": "key", "type": "str"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 83, "col_offset": 40, "nodeName": "argname", "type": "str"}, {"lineNumber": 125, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 130, "col_offset": 45, "nodeName": "name", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "is_available", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "device_count", "type": "Any"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "cuda", "type": "Any"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 44, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "float", "type": "Type[float]"}]