[{"lineNumber": 14, "col_offset": 19, "nodeName": "Model", "type": "Type[allennlp.training.model.Model]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 36, "col_offset": 35, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "sequence_loss", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "reshaped_log_probs", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "class_probabilities", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 11, "nodeName": "tags", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 48, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "padding_lengths", "type": "Dict[str, int]"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "array_input", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "array_input", "type": "Dict[str, Any]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "indices", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "tags", "type": "List[str]"}, {"lineNumber": 97, "col_offset": 44, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 31, "col_offset": 38, "nodeName": "TextFieldEmbedder", "type": "Type[allennlp.modules.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 32, "col_offset": 34, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "SimpleTagger"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "SimpleTagger"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "SimpleTagger"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "get_vocab_size", "type": "Callable[..., int]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "SimpleTagger"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "SimpleTagger"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "SimpleTagger"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "CrossEntropyLoss", "type": "Any"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "tokens", "type": "Dict[str, Any]"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 78, "col_offset": 44, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "tag_projection_layer", "type": "allennlp.modules.time_distributed.TimeDistributed"}, {"lineNumber": 80, "col_offset": 43, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "view", "type": "Any"}, {"lineNumber": 81, "col_offset": 45, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "view", "type": "Any"}, {"lineNumber": 84, "col_offset": 33, "nodeName": "logits", "type": "Any"}, {"lineNumber": 84, "col_offset": 64, "nodeName": "class_probabilities", "type": "Any"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 91, "col_offset": 34, "nodeName": "loss", "type": "Any"}, {"lineNumber": 97, "col_offset": 30, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "index", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "get_padding_lengths", "type": "Callable[[], Dict[str, int]]"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "as_array", "type": "Callable[[Dict[str, int]], Dict[str, numpy.ndarray]]"}, {"lineNumber": 120, "col_offset": 42, "nodeName": "padding_lengths", "type": "Dict[str, int]"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "forward", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 129, "col_offset": 11, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "max", "type": "Any"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "tags", "type": "List[str]"}, {"lineNumber": 136, "col_offset": 32, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 136, "col_offset": 52, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "from_params", "type": "Callable[[Any, allennlp.data.vocabulary.Vocabulary, allennlp.common.params.Params], allennlp.modules.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 137, "col_offset": 60, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 138, "col_offset": 26, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.modules.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "cls", "type": "Type[SimpleTagger]"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 39, "col_offset": 52, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 40, "col_offset": 59, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "self", "type": "SimpleTagger"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "self", "type": "SimpleTagger"}, {"lineNumber": 80, "col_offset": 17, "nodeName": "self", "type": "SimpleTagger"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "logits", "type": "Any"}, {"lineNumber": 81, "col_offset": 45, "nodeName": "self", "type": "SimpleTagger"}, {"lineNumber": 82, "col_offset": 66, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 82, "col_offset": 82, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "sequence_loss", "type": "Any"}, {"lineNumber": 90, "col_offset": 38, "nodeName": "reshaped_log_probs", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 48, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 48, "col_offset": 60, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "text_field", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 118, "col_offset": 25, "nodeName": "self", "type": "SimpleTagger"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "text_field", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 120, "col_offset": 22, "nodeName": "text_field", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "self", "type": "SimpleTagger"}, {"lineNumber": 125, "col_offset": 42, "nodeName": "array_input", "type": "Dict[str, Any]"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 129, "col_offset": 20, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "get_token_from_index", "type": "Callable[..., str]"}, {"lineNumber": 131, "col_offset": 48, "nodeName": "x", "type": "Any"}, {"lineNumber": 131, "col_offset": 73, "nodeName": "x", "type": "Any"}, {"lineNumber": 131, "col_offset": 78, "nodeName": "indices", "type": "Any"}, {"lineNumber": 133, "col_offset": 53, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 97, "col_offset": 54, "nodeName": "Any", "type": "Any"}, {"lineNumber": 137, "col_offset": 30, "nodeName": "TextFieldEmbedder", "type": "Type[allennlp.modules.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 137, "col_offset": 67, "nodeName": "pop", "type": "Any"}, {"lineNumber": 138, "col_offset": 26, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 138, "col_offset": 53, "nodeName": "pop", "type": "Any"}, {"lineNumber": 139, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 140, "col_offset": 39, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 33, "col_offset": 14, "nodeName": "SimpleTagger", "type": "Type[SimpleTagger]"}, {"lineNumber": 33, "col_offset": 28, "nodeName": "self", "type": "SimpleTagger"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "self", "type": "SimpleTagger"}, {"lineNumber": 39, "col_offset": 59, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 40, "col_offset": 59, "nodeName": "self", "type": "SimpleTagger"}, {"lineNumber": 43, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 77, "col_offset": 21, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 82, "col_offset": 40, "nodeName": "reshaped_log_probs", "type": "Any"}, {"lineNumber": 82, "col_offset": 82, "nodeName": "self", "type": "SimpleTagger"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "dim", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "tags", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "max", "type": "Any"}, {"lineNumber": 90, "col_offset": 19, "nodeName": "self", "type": "SimpleTagger"}, {"lineNumber": 90, "col_offset": 58, "nodeName": "view", "type": "Any"}, {"lineNumber": 48, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 133, "col_offset": 53, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 137, "col_offset": 67, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 138, "col_offset": 53, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 39, "col_offset": 59, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "F", "type": "Any"}, {"lineNumber": 88, "col_offset": 15, "nodeName": "tags", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "tags", "type": "Any"}, {"lineNumber": 90, "col_offset": 58, "nodeName": "tags", "type": "Any"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 128, "col_offset": 22, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 130, "col_offset": 18, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "self", "type": "SimpleTagger"}, {"lineNumber": 39, "col_offset": 59, "nodeName": "self", "type": "SimpleTagger"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 124, "col_offset": 57, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 124, "col_offset": 57, "nodeName": "torch", "type": "Any"}, {"lineNumber": 124, "col_offset": 74, "nodeName": "array_input", "type": "Dict[str, numpy.ndarray]"}]