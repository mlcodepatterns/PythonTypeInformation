[{"lineNumber": 17, "col_offset": 61, "nodeName": "Optimizer", "type": "Any"}, {"lineNumber": 8, "col_offset": 16, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 9, "col_offset": 19, "nodeName": "Adagrad", "type": "Any"}, {"lineNumber": 10, "col_offset": 20, "nodeName": "Adadelta", "type": "Any"}, {"lineNumber": 11, "col_offset": 15, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 12, "col_offset": 19, "nodeName": "RMSprop", "type": "Any"}, {"lineNumber": 17, "col_offset": 61, "nodeName": "optim", "type": "Any"}, {"lineNumber": 8, "col_offset": 16, "nodeName": "optim", "type": "Any"}, {"lineNumber": 9, "col_offset": 19, "nodeName": "optim", "type": "Any"}, {"lineNumber": 10, "col_offset": 20, "nodeName": "optim", "type": "Any"}, {"lineNumber": 11, "col_offset": 15, "nodeName": "optim", "type": "Any"}, {"lineNumber": 12, "col_offset": 19, "nodeName": "optim", "type": "Any"}, {"lineNumber": 29, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 29, "col_offset": 18, "nodeName": "params", "type": "Union[allennlp.common.params.Params, str]"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "optimizer", "type": "Union[allennlp.common.params.Params, str]"}, {"lineNumber": 30, "col_offset": 20, "nodeName": "params", "type": "Union[allennlp.common.params.Params, str]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 35, "col_offset": 33, "nodeName": "model_parameters", "type": "List[Any]"}, {"lineNumber": 17, "col_offset": 61, "nodeName": "torch", "type": "Any"}, {"lineNumber": 8, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 9, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 10, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 11, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 12, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 16, "col_offset": 48, "nodeName": "List", "type": "Any"}, {"lineNumber": 17, "col_offset": 38, "nodeName": "Union", "type": "Any"}, {"lineNumber": 31, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "pop_choice", "type": "Callable[..., Any]"}, {"lineNumber": 35, "col_offset": 11, "nodeName": "optimizers", "type": "Dict[str, Any]"}, {"lineNumber": 16, "col_offset": 53, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "params", "type": "Union[allennlp.common.params.Params, str]"}, {"lineNumber": 33, "col_offset": 46, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 35, "col_offset": 22, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 35, "col_offset": 53, "nodeName": "as_dict", "type": "Callable[..., Dict[Any, Any]]"}, {"lineNumber": 16, "col_offset": 53, "nodeName": "torch", "type": "Any"}, {"lineNumber": 17, "col_offset": 44, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 17, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 33, "col_offset": 51, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 35, "col_offset": 53, "nodeName": "params", "type": "Union[allennlp.common.params.Params, str]"}, {"lineNumber": 33, "col_offset": 51, "nodeName": "optimizers", "type": "Dict[str, Any]"}]