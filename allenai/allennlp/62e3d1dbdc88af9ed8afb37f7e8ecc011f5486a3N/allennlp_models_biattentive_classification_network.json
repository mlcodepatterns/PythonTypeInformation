[{"lineNumber": 19, "col_offset": 39, "nodeName": "Model", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "text_field_embedder", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "_embedding_dropout", "type": "Any"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "_num_classes", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "_pre_encode_feedforward", "type": "Any"}, {"lineNumber": 102, "col_offset": 39, "nodeName": "pre_encode_feedforward", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "_encoder", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "_integrator", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "integrator", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "_integrator_dropout", "type": "Any"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "_elmo", "type": "Any"}, {"lineNumber": 107, "col_offset": 21, "nodeName": "elmo", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "_use_input_elmo", "type": "bool"}, {"lineNumber": 108, "col_offset": 31, "nodeName": "use_input_elmo", "type": "bool"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "_use_integrator_output_elmo", "type": "bool"}, {"lineNumber": 109, "col_offset": 43, "nodeName": "use_integrator_output_elmo", "type": "bool"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "_num_elmo_layers", "type": "int"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "_use_integrator_output_elmo", "type": "bool"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "_self_attentive_pooling_projection", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 146, "col_offset": 29, "nodeName": "output_layer", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "_use_input_elmo", "type": "bool"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "_use_integrator_output_elmo", "type": "bool"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "text_mask", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "elmo_tokens", "type": "Any"}, {"lineNumber": 230, "col_offset": 11, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "_elmo", "type": "Any"}, {"lineNumber": 256, "col_offset": 11, "nodeName": "_use_input_elmo", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "dropped_embedded_text", "type": "Any"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "pre_encoded_text", "type": "Any"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "encoded_tokens", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "attention_logits", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "attention_weights", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "integrated_encodings", "type": "Any"}, {"lineNumber": 278, "col_offset": 11, "nodeName": "_use_integrator_output_elmo", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "max_pool", "type": "Any"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "min_pool", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "mean_pool", "type": "Any"}, {"lineNumber": 298, "col_offset": 8, "nodeName": "self_weights", "type": "Any"}, {"lineNumber": 299, "col_offset": 8, "nodeName": "self_attentive_pool", "type": "Any"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "pooled_representations", "type": "Any"}, {"lineNumber": 302, "col_offset": 8, "nodeName": "pooled_representations_dropped", "type": "Any"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "class_probabilities", "type": "Any"}, {"lineNumber": 307, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 209, "col_offset": 9, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "argmax_indices", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 325, "col_offset": 31, "nodeName": "labels", "type": "List[Any]"}, {"lineNumber": 326, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 317, "col_offset": 62, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 329, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 86, "col_offset": 21, "nodeName": "InitializerApplicator", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "regularizer", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 99, "col_offset": 45, "nodeName": "embedding_dropout", "type": "float"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "get_vocab_size", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 105, "col_offset": 46, "nodeName": "integrator_dropout", "type": "float"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "_elmo", "type": "Any"}, {"lineNumber": 138, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "_combined_integrator_output_dim", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 50, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 145, "col_offset": 60, "nodeName": "_combined_integrator_output_dim", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 148, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "check_dimensions_match", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "check_dimensions_match", "type": "Any"}, {"lineNumber": 175, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "check_dimensions_match", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "_num_classes", "type": "Any"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "CrossEntropyLoss", "type": "Any"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "initializer", "type": "Any"}, {"lineNumber": 202, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "float", "type": "Any"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "pop", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "embedded_text", "type": "Any"}, {"lineNumber": 234, "col_offset": 12, "nodeName": "embedded_text", "type": "None"}, {"lineNumber": 238, "col_offset": 11, "nodeName": "elmo_tokens", "type": "Any"}, {"lineNumber": 239, "col_offset": 29, "nodeName": "elmo_tokens", "type": "Any"}, {"lineNumber": 242, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 256, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 262, "col_offset": 32, "nodeName": "_embedding_dropout", "type": "Any"}, {"lineNumber": 262, "col_offset": 56, "nodeName": "embedded_text", "type": "Any"}, {"lineNumber": 263, "col_offset": 27, "nodeName": "_pre_encode_feedforward", "type": "Any"}, {"lineNumber": 263, "col_offset": 56, "nodeName": "dropped_embedded_text", "type": "Any"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "_encoder", "type": "Any"}, {"lineNumber": 264, "col_offset": 39, "nodeName": "pre_encoded_text", "type": "Any"}, {"lineNumber": 264, "col_offset": 57, "nodeName": "text_mask", "type": "Any"}, {"lineNumber": 267, "col_offset": 27, "nodeName": "bmm", "type": "Any"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "masked_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 268, "col_offset": 48, "nodeName": "attention_logits", "type": "Any"}, {"lineNumber": 268, "col_offset": 66, "nodeName": "text_mask", "type": "Any"}, {"lineNumber": 269, "col_offset": 23, "nodeName": "weighted_sum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 269, "col_offset": 41, "nodeName": "encoded_tokens", "type": "Any"}, {"lineNumber": 269, "col_offset": 57, "nodeName": "attention_weights", "type": "Any"}, {"lineNumber": 272, "col_offset": 27, "nodeName": "cat", "type": "Any"}, {"lineNumber": 275, "col_offset": 31, "nodeName": "_integrator", "type": "Any"}, {"lineNumber": 275, "col_offset": 48, "nodeName": "integrator_input", "type": "Any"}, {"lineNumber": 275, "col_offset": 66, "nodeName": "text_mask", "type": "Any"}, {"lineNumber": 278, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "integrated_encodings", "type": "Any"}, {"lineNumber": 282, "col_offset": 42, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "integrated_encodings", "type": "Any"}, {"lineNumber": 286, "col_offset": 42, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 287, "col_offset": 12, "nodeName": "integrated_encodings", "type": "Any"}, {"lineNumber": 298, "col_offset": 23, "nodeName": "masked_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 298, "col_offset": 43, "nodeName": "self_attentive_logits", "type": "Any"}, {"lineNumber": 298, "col_offset": 66, "nodeName": "text_mask", "type": "Any"}, {"lineNumber": 299, "col_offset": 30, "nodeName": "weighted_sum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 299, "col_offset": 48, "nodeName": "integrated_encodings", "type": "Any"}, {"lineNumber": 299, "col_offset": 70, "nodeName": "self_weights", "type": "Any"}, {"lineNumber": 301, "col_offset": 33, "nodeName": "cat", "type": "Any"}, {"lineNumber": 302, "col_offset": 41, "nodeName": "_integrator_dropout", "type": "Any"}, {"lineNumber": 302, "col_offset": 66, "nodeName": "pooled_representations", "type": "Any"}, {"lineNumber": 304, "col_offset": 17, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 304, "col_offset": 36, "nodeName": "pooled_representations_dropped", "type": "Any"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 305, "col_offset": 40, "nodeName": "logits", "type": "Any"}, {"lineNumber": 307, "col_offset": 33, "nodeName": "logits", "type": "Any"}, {"lineNumber": 307, "col_offset": 64, "nodeName": "class_probabilities", "type": "Any"}, {"lineNumber": 308, "col_offset": 11, "nodeName": "label", "type": "Any"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 310, "col_offset": 16, "nodeName": "metric", "type": "Any"}, {"lineNumber": 312, "col_offset": 34, "nodeName": "loss", "type": "Any"}, {"lineNumber": 322, "col_offset": 22, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 323, "col_offset": 38, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 329, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "metric_name", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "keys", "type": "Any"}, {"lineNumber": 93, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Any"}, {"lineNumber": 99, "col_offset": 34, "nodeName": "nn", "type": "Any"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 105, "col_offset": 35, "nodeName": "nn", "type": "Any"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "_use_input_elmo", "type": "bool"}, {"lineNumber": 110, "col_offset": 60, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 110, "col_offset": 64, "nodeName": "_use_integrator_output_elmo", "type": "bool"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "_elmo", "type": "Any"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "_num_elmo_layers", "type": "int"}, {"lineNumber": 113, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "_num_elmo_layers", "type": "int"}, {"lineNumber": 129, "col_offset": 48, "nodeName": "_num_elmo_layers", "type": "int"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 51, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 145, "col_offset": 50, "nodeName": "nn", "type": "Any"}, {"lineNumber": 145, "col_offset": 60, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 12, "nodeName": "check_dimensions_match", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "check_dimensions_match", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "get_input_dim", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "get_input_dim", "type": "Any"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "check_dimensions_match", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "check_dimensions_match", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 24, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 199, "col_offset": 25, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 208, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 229, "col_offset": 22, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 231, "col_offset": 28, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 231, "col_offset": 54, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "elmo_tokens", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "elmo_representations", "type": "Any"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "_use_integrator_output_elmo", "type": "Any"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "_use_input_elmo", "type": "Any"}, {"lineNumber": 257, "col_offset": 15, "nodeName": "embedded_text", "type": "Optional[Any]"}, {"lineNumber": 258, "col_offset": 16, "nodeName": "embedded_text", "type": "Any"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "embedded_text", "type": "Any"}, {"lineNumber": 260, "col_offset": 32, "nodeName": "input_elmo", "type": "Any"}, {"lineNumber": 262, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 263, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 267, "col_offset": 27, "nodeName": "encoded_tokens", "type": "Any"}, {"lineNumber": 267, "col_offset": 46, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 268, "col_offset": 28, "nodeName": "util", "type": "module"}, {"lineNumber": 269, "col_offset": 23, "nodeName": "util", "type": "module"}, {"lineNumber": 272, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 273, "col_offset": 13, "nodeName": "encoded_tokens", "type": "Any"}, {"lineNumber": 275, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 279, "col_offset": 35, "nodeName": "cat", "type": "Any"}, {"lineNumber": 282, "col_offset": 42, "nodeName": "util", "type": "module"}, {"lineNumber": 283, "col_offset": 34, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "max", "type": "Any"}, {"lineNumber": 285, "col_offset": 29, "nodeName": "max_masked_integrated_encodings", "type": "Any"}, {"lineNumber": 286, "col_offset": 42, "nodeName": "util", "type": "module"}, {"lineNumber": 287, "col_offset": 34, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 289, "col_offset": 19, "nodeName": "min", "type": "Any"}, {"lineNumber": 289, "col_offset": 29, "nodeName": "min_masked_integrated_encodings", "type": "Any"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "sum", "type": "Any"}, {"lineNumber": 290, "col_offset": 30, "nodeName": "integrated_encodings", "type": "Any"}, {"lineNumber": 290, "col_offset": 57, "nodeName": "sum", "type": "Any"}, {"lineNumber": 290, "col_offset": 67, "nodeName": "text_mask", "type": "Any"}, {"lineNumber": 298, "col_offset": 23, "nodeName": "util", "type": "module"}, {"lineNumber": 299, "col_offset": 30, "nodeName": "util", "type": "module"}, {"lineNumber": 301, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 301, "col_offset": 44, "nodeName": "max_pool", "type": "Any"}, {"lineNumber": 301, "col_offset": 54, "nodeName": "min_pool", "type": "Any"}, {"lineNumber": 301, "col_offset": 64, "nodeName": "mean_pool", "type": "Any"}, {"lineNumber": 301, "col_offset": 75, "nodeName": "self_attentive_pool", "type": "Any"}, {"lineNumber": 302, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 304, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 305, "col_offset": 30, "nodeName": "F", "type": "Any"}, {"lineNumber": 309, "col_offset": 19, "nodeName": "loss", "type": "Any"}, {"lineNumber": 309, "col_offset": 29, "nodeName": "logits", "type": "Any"}, {"lineNumber": 309, "col_offset": 37, "nodeName": "label", "type": "Any"}, {"lineNumber": 310, "col_offset": 26, "nodeName": "values", "type": "Any"}, {"lineNumber": 312, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 209, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 317, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 322, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 323, "col_offset": 25, "nodeName": "numpy", "type": "module"}, {"lineNumber": 324, "col_offset": 18, "nodeName": "get_token_from_index", "type": "Any"}, {"lineNumber": 324, "col_offset": 50, "nodeName": "x", "type": "Any"}, {"lineNumber": 324, "col_offset": 77, "nodeName": "x", "type": "Any"}, {"lineNumber": 324, "col_offset": 82, "nodeName": "argmax_indices", "type": "Any"}, {"lineNumber": 317, "col_offset": 67, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 317, "col_offset": 72, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 331, "col_offset": 25, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 331, "col_offset": 43, "nodeName": "reset", "type": "bool"}, {"lineNumber": 329, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 329, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "RegularizerApplicator", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "_token_embedders", "type": "Any"}, {"lineNumber": 100, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 64, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 22, "nodeName": "ConfigurationError", "type": "Any"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "_scalar_mixes", "type": "Any"}, {"lineNumber": 129, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "ConfigurationError", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 140, "col_offset": 52, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 143, "col_offset": 51, "nodeName": "_integrator", "type": "Any"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "get_input_dim", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "get_input_dim", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "_pre_encode_feedforward", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "_encoder", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "_integrator", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "_combined_integrator_output_dim", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "get_input_dim", "type": "Any"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "get_input_dim", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 201, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "get_text_field_mask", "type": "Callable[..., Any]"}, {"lineNumber": 227, "col_offset": 45, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 231, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 246, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 247, "col_offset": 20, "nodeName": "integrator_output_elmo", "type": "Any"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 249, "col_offset": 20, "nodeName": "input_elmo", "type": "Any"}, {"lineNumber": 250, "col_offset": 27, "nodeName": "elmo_representations", "type": "Any"}, {"lineNumber": 252, "col_offset": 22, "nodeName": "ConfigurationError", "type": "Any"}, {"lineNumber": 258, "col_offset": 32, "nodeName": "cat", "type": "Any"}, {"lineNumber": 273, "col_offset": 29, "nodeName": "encoded_tokens", "type": "Any"}, {"lineNumber": 273, "col_offset": 46, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 273, "col_offset": 60, "nodeName": "encoded_tokens", "type": "Any"}, {"lineNumber": 273, "col_offset": 77, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 279, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 279, "col_offset": 46, "nodeName": "integrated_encodings", "type": "Any"}, {"lineNumber": 279, "col_offset": 68, "nodeName": "integrator_output_elmo", "type": "Any"}, {"lineNumber": 283, "col_offset": 34, "nodeName": "text_mask", "type": "Any"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 287, "col_offset": 34, "nodeName": "text_mask", "type": "Any"}, {"lineNumber": 289, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 290, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 290, "col_offset": 57, "nodeName": "torch", "type": "Any"}, {"lineNumber": 295, "col_offset": 32, "nodeName": "_self_attentive_pooling_projection", "type": "Any"}, {"lineNumber": 296, "col_offset": 12, "nodeName": "integrated_encodings", "type": "Any"}, {"lineNumber": 309, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 310, "col_offset": 26, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "metric", "type": "Any"}, {"lineNumber": 311, "col_offset": 23, "nodeName": "logits", "type": "Any"}, {"lineNumber": 311, "col_offset": 31, "nodeName": "label", "type": "Any"}, {"lineNumber": 209, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 324, "col_offset": 18, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 317, "col_offset": 72, "nodeName": "torch", "type": "Any"}, {"lineNumber": 331, "col_offset": 25, "nodeName": "metric", "type": "Any"}, {"lineNumber": 331, "col_offset": 54, "nodeName": "metric_name", "type": "Any"}, {"lineNumber": 331, "col_offset": 67, "nodeName": "metric", "type": "Any"}, {"lineNumber": 331, "col_offset": 77, "nodeName": "items", "type": "Any"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "_elmo", "type": "Any"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "_integrator", "type": "Any"}, {"lineNumber": 140, "col_offset": 52, "nodeName": "_elmo", "type": "Any"}, {"lineNumber": 143, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 150, "col_offset": 55, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "_pre_encode_feedforward", "type": "Any"}, {"lineNumber": 157, "col_offset": 16, "nodeName": "text_field_embedder", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "_pre_encode_feedforward", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "_encoder", "type": "Any"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "_output_layer", "type": "Any"}, {"lineNumber": 191, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 227, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 244, "col_offset": 39, "nodeName": "_elmo", "type": "Any"}, {"lineNumber": 247, "col_offset": 45, "nodeName": "pop", "type": "Any"}, {"lineNumber": 249, "col_offset": 33, "nodeName": "pop", "type": "Any"}, {"lineNumber": 258, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 258, "col_offset": 43, "nodeName": "embedded_text", "type": "Optional[Any]"}, {"lineNumber": 258, "col_offset": 58, "nodeName": "input_elmo", "type": "Any"}, {"lineNumber": 267, "col_offset": 46, "nodeName": "permute", "type": "Any"}, {"lineNumber": 295, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 310, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 317, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 317, "col_offset": 44, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 322, "col_offset": 22, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 324, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 331, "col_offset": 77, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 92, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "_use_input_elmo", "type": "bool"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "_use_integrator_output_elmo", "type": "bool"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 52, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "text_field_embedder", "type": "Any"}, {"lineNumber": 150, "col_offset": 55, "nodeName": "_elmo", "type": "Any"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 178, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "_integrator", "type": "Any"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 244, "col_offset": 50, "nodeName": "elmo_tokens", "type": "Any"}, {"lineNumber": 247, "col_offset": 45, "nodeName": "elmo_representations", "type": "Any"}, {"lineNumber": 249, "col_offset": 33, "nodeName": "elmo_representations", "type": "Any"}, {"lineNumber": 267, "col_offset": 46, "nodeName": "encoded_tokens", "type": "Any"}, {"lineNumber": 317, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 331, "col_offset": 77, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 66, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 131, "col_offset": 70, "nodeName": "_scalar_mixes", "type": "Any"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 131, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 322, "col_offset": 22, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 131, "col_offset": 70, "nodeName": "_elmo", "type": "Any"}, {"lineNumber": 131, "col_offset": 70, "nodeName": "self", "type": "Any"}]