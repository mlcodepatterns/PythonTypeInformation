[{"lineNumber": 14, "col_offset": 33, "nodeName": "TokenEmbedder", "type": "Type[allennlp.modules.token_embedders.token_embedder.TokenEmbedder]"}, {"lineNumber": 115, "col_offset": 9, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "aligning_files", "type": "Union[Dict[str, str], Dict[nothing, nothing]]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "output_dim", "type": "None"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "lang", "type": "str"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 93, "col_offset": 11, "nodeName": "projection_dim", "type": "int"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "lang", "type": "str"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "elmo", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "elmo_output", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "elmo_representations", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "aligning", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "elmo_representations", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "_projection", "type": "Any"}, {"lineNumber": 142, "col_offset": 15, "nodeName": "elmo_representations", "type": "Any"}, {"lineNumber": 115, "col_offset": 9, "nodeName": "torch", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "options_files", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "weight_files", "type": "Any"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "lang", "type": "Any"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "lang", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "do_layer_norm", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "namespace_to_cache", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "projection_dim", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "scalar_mix_parameters", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "aligning_files", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "aligning_files", "type": "Dict[str, str]"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "output_dim_tmp", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 89, "col_offset": 25, "nodeName": "output_dim_tmp", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "_projection", "type": "Any"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "output_dim", "type": "int"}, {"lineNumber": 95, "col_offset": 30, "nodeName": "projection_dim", "type": "int"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "_projection", "type": "None"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "name", "type": "str"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "aligning_matrix", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "aligning", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 114, "col_offset": 42, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 114, "col_offset": 60, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 132, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 22, "nodeName": "elmo", "type": "Any"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 133, "col_offset": 35, "nodeName": "word_inputs", "type": "Any"}, {"lineNumber": 135, "col_offset": 19, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 136, "col_offset": 31, "nodeName": "aligning", "type": "Any"}, {"lineNumber": 136, "col_offset": 40, "nodeName": "elmo_representations", "type": "Any"}, {"lineNumber": 137, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "projection", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "_projection", "type": "Any"}, {"lineNumber": 139, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "elmo_representations", "type": "Any"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "Vocabulary", "type": "Any"}, {"lineNumber": 147, "col_offset": 40, "nodeName": "Params", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "pop", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "pop", "type": "Any"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "keys", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "keys", "type": "Any"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "pop", "type": "Any"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "pop_bool", "type": "Any"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "pop_float", "type": "Any"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "pop", "type": "Any"}, {"lineNumber": 160, "col_offset": 11, "nodeName": "namespace_to_cache", "type": "Any"}, {"lineNumber": 161, "col_offset": 12, "nodeName": "vocab_to_cache", "type": "List[Any]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "vocab_to_cache", "type": "None"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "pop_int", "type": "Any"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "pop", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "pop", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "assert_empty", "type": "Any"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 64, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "weight_files", "type": "Dict[str, str]"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "lang", "type": "str"}, {"lineNumber": 70, "col_offset": 19, "nodeName": "Elmo", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "add_module", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "name", "type": "str"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "elmo", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "output_dim", "type": "None"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 94, "col_offset": 47, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 94, "col_offset": 59, "nodeName": "projection_dim", "type": "int"}, {"lineNumber": 95, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "weight_files", "type": "Dict[str, str]"}, {"lineNumber": 100, "col_offset": 35, "nodeName": "lang", "type": "str"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "eye", "type": "Any"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "aligninig_path", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "aligning_matrix", "type": "Any"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 106, "col_offset": 39, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 106, "col_offset": 51, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "aligning", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 107, "col_offset": 49, "nodeName": "aligning_matrix", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "add_module", "type": "Any"}, {"lineNumber": 108, "col_offset": 28, "nodeName": "name", "type": "str"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "aligning", "type": "Any"}, {"lineNumber": 114, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 114, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 132, "col_offset": 29, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 132, "col_offset": 46, "nodeName": "lang", "type": "str"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "elmo_output", "type": "Any"}, {"lineNumber": 135, "col_offset": 33, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 135, "col_offset": 54, "nodeName": "lang", "type": "str"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 139, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 140, "col_offset": 16, "nodeName": "projection", "type": "Any"}, {"lineNumber": 141, "col_offset": 35, "nodeName": "projection", "type": "Any"}, {"lineNumber": 141, "col_offset": 46, "nodeName": "elmo_representations", "type": "Any"}, {"lineNumber": 150, "col_offset": 24, "nodeName": "params", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "params", "type": "Any"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "options_files", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "add_file_to_archive", "type": "Any"}, {"lineNumber": 153, "col_offset": 46, "nodeName": "lang", "type": "Any"}, {"lineNumber": 154, "col_offset": 20, "nodeName": "weight_files", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "add_file_to_archive", "type": "Any"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "lang", "type": "Any"}, {"lineNumber": 156, "col_offset": 24, "nodeName": "params", "type": "Any"}, {"lineNumber": 157, "col_offset": 24, "nodeName": "params", "type": "Any"}, {"lineNumber": 158, "col_offset": 18, "nodeName": "params", "type": "Any"}, {"lineNumber": 159, "col_offset": 29, "nodeName": "params", "type": "Any"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 164, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 165, "col_offset": 32, "nodeName": "params", "type": "Any"}, {"lineNumber": 166, "col_offset": 25, "nodeName": "params", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 167, "col_offset": 28, "nodeName": "cls", "type": "Any"}, {"lineNumber": 169, "col_offset": 26, "nodeName": "options_files", "type": "Any"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "weight_files", "type": "Any"}, {"lineNumber": 171, "col_offset": 26, "nodeName": "do_layer_norm", "type": "Any"}, {"lineNumber": 172, "col_offset": 20, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "projection_dim", "type": "Any"}, {"lineNumber": 175, "col_offset": 27, "nodeName": "vocab_to_cache", "type": "Optional[List[Any]]"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "scalar_mix_parameters", "type": "Any"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "aligning_files", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 63, "col_offset": 11, "nodeName": "options_files", "type": "Dict[str, str]"}, {"lineNumber": 63, "col_offset": 35, "nodeName": "weight_files", "type": "Dict[str, str]"}, {"lineNumber": 71, "col_offset": 16, "nodeName": "options_files", "type": "Dict[str, str]"}, {"lineNumber": 72, "col_offset": 16, "nodeName": "weight_files", "type": "Dict[str, str]"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "do_layer_norm", "type": "bool"}, {"lineNumber": 75, "col_offset": 24, "nodeName": "dropout", "type": "float"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 77, "col_offset": 31, "nodeName": "vocab_to_cache", "type": "List[str]"}, {"lineNumber": 78, "col_offset": 38, "nodeName": "scalar_mix_parameters", "type": "List[float]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "elmo", "type": "Any"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 101, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 102, "col_offset": 15, "nodeName": "lang", "type": "str"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "aligning_files", "type": "Union[Dict[nothing, nothing], Dict[str, str]]"}, {"lineNumber": 103, "col_offset": 33, "nodeName": "cached_path", "type": "Any"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "nn", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "nn", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "TimeDistributed", "type": "Any"}, {"lineNumber": 140, "col_offset": 45, "nodeName": "projection", "type": "Any"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "options_files", "type": "Any"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "weight_files", "type": "Any"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "keys", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 59, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "lang", "type": "str"}, {"lineNumber": 72, "col_offset": 29, "nodeName": "lang", "type": "str"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 102, "col_offset": 42, "nodeName": "aligning_files", "type": "Union[Dict[nothing, nothing], Dict[str, str]]"}, {"lineNumber": 103, "col_offset": 45, "nodeName": "aligning_files", "type": "Union[Dict[nothing, nothing], Dict[str, str]]"}, {"lineNumber": 104, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 104, "col_offset": 52, "nodeName": "load", "type": "Any"}, {"lineNumber": 104, "col_offset": 63, "nodeName": "aligninig_path", "type": "Any"}, {"lineNumber": 106, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 107, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 139, "col_offset": 27, "nodeName": "dim", "type": "Any"}, {"lineNumber": 102, "col_offset": 57, "nodeName": "lang", "type": "str"}, {"lineNumber": 103, "col_offset": 60, "nodeName": "lang", "type": "str"}, {"lineNumber": 104, "col_offset": 52, "nodeName": "torch", "type": "Any"}, {"lineNumber": 139, "col_offset": 27, "nodeName": "elmo_representations", "type": "Any"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "get_token_to_index_vocabulary", "type": "Any"}, {"lineNumber": 161, "col_offset": 70, "nodeName": "namespace_to_cache", "type": "Any"}, {"lineNumber": 161, "col_offset": 34, "nodeName": "vocab", "type": "Any"}]