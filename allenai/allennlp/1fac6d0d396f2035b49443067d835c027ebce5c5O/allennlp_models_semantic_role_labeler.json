[{"lineNumber": 276, "col_offset": 0, "nodeName": "convert_bio_tags_to_conll_format", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 259, "col_offset": 4, "nodeName": "verb_only_sentence", "type": "List[str]"}, {"lineNumber": 262, "col_offset": 4, "nodeName": "conll_format_predictions", "type": "List[str]"}, {"lineNumber": 263, "col_offset": 4, "nodeName": "conll_format_gold_labels", "type": "List[str]"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "sentence_length", "type": "int"}, {"lineNumber": 300, "col_offset": 4, "nodeName": "conll_labels", "type": "List[str]"}, {"lineNumber": 315, "col_offset": 11, "nodeName": "conll_labels", "type": "List[str]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "span_metric", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "binary_feature_embedding", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "embedded_verb_indicator", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "embedded_text_with_verb_indicator", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "batch_sequence_lengths", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "reshaped_log_probs", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "class_probabilities", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 137, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "transition_matrix", "type": "Any"}, {"lineNumber": 139, "col_offset": 80, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "training", "type": "Any"}, {"lineNumber": 192, "col_offset": 15, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 207, "col_offset": 8, "nodeName": "all_labels", "type": "Any"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "num_labels", "type": "int"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "transition_matrix", "type": "Any"}, {"lineNumber": 217, "col_offset": 15, "nodeName": "transition_matrix", "type": "Any"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "embedder_params", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "binary_feature_dim", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 233, "col_offset": 46, "nodeName": "TextIO", "type": "Type[TextIO]"}, {"lineNumber": 234, "col_offset": 40, "nodeName": "TextIO", "type": "Type[TextIO]"}, {"lineNumber": 235, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 260, "col_offset": 4, "nodeName": "verb_only_sentence", "type": "List[str]"}, {"lineNumber": 260, "col_offset": 37, "nodeName": "sentence", "type": "List[str]"}, {"lineNumber": 262, "col_offset": 31, "nodeName": "convert_bio_tags_to_conll_format", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 262, "col_offset": 64, "nodeName": "prediction", "type": "List[str]"}, {"lineNumber": 263, "col_offset": 31, "nodeName": "convert_bio_tags_to_conll_format", "type": "Callable[[List[str]], Any]"}, {"lineNumber": 263, "col_offset": 64, "nodeName": "gold_labels", "type": "List[str]"}, {"lineNumber": 265, "col_offset": 33, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 265, "col_offset": 37, "nodeName": "verb_only_sentence", "type": "List[str]"}, {"lineNumber": 266, "col_offset": 37, "nodeName": "conll_format_predictions", "type": "List[str]"}, {"lineNumber": 267, "col_offset": 37, "nodeName": "conll_format_gold_labels", "type": "List[str]"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "write", "type": "Callable"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "write", "type": "Callable"}, {"lineNumber": 299, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 299, "col_offset": 26, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "i", "type": "int"}, {"lineNumber": 301, "col_offset": 11, "nodeName": "label", "type": "str"}, {"lineNumber": 301, "col_offset": 20, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 301, "col_offset": 30, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "new_label", "type": "str"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 48, "col_offset": 38, "nodeName": "TextFieldEmbedder", "type": "Type[allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 51, "col_offset": 30, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 52, "col_offset": 50, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "get_vocab_size", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "SpanBasedF1Measure", "type": "Any"}, {"lineNumber": 59, "col_offset": 46, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 40, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 63, "col_offset": 53, "nodeName": "binary_feature_dim", "type": "int"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 66, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "text_field_embedder", "type": "Any"}, {"lineNumber": 111, "col_offset": 55, "nodeName": "tokens", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "get_text_field_mask", "type": "Callable[[Dict[str, Any]], Any]"}, {"lineNumber": 112, "col_offset": 35, "nodeName": "tokens", "type": "Dict[str, Any]"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "binary_feature_embedding", "type": "Any"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "cat", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 117, "col_offset": 20, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 117, "col_offset": 37, "nodeName": "embedding_dim_with_binary_feature", "type": "Any"}, {"lineNumber": 117, "col_offset": 73, "nodeName": "size", "type": "Any"}, {"lineNumber": 119, "col_offset": 51, "nodeName": "embedding_dim_with_binary_feature", "type": "Any"}, {"lineNumber": 125, "col_offset": 33, "nodeName": "get_lengths_from_binary_sequence_mask", "type": "Callable[[Any], Any]"}, {"lineNumber": 125, "col_offset": 71, "nodeName": "mask", "type": "Any"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "stacked_encoder", "type": "Any"}, {"lineNumber": 126, "col_offset": 44, "nodeName": "embedded_text_with_verb_indicator", "type": "Any"}, {"lineNumber": 126, "col_offset": 79, "nodeName": "batch_sequence_lengths", "type": "Any"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "tag_projection_layer", "type": "Any"}, {"lineNumber": 128, "col_offset": 43, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "view", "type": "Any"}, {"lineNumber": 129, "col_offset": 45, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "view", "type": "Any"}, {"lineNumber": 131, "col_offset": 33, "nodeName": "logits", "type": "Any"}, {"lineNumber": 131, "col_offset": 64, "nodeName": "class_probabilities", "type": "Any"}, {"lineNumber": 132, "col_offset": 11, "nodeName": "tags", "type": "Any"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 135, "col_offset": 34, "nodeName": "loss", "type": "Any"}, {"lineNumber": 139, "col_offset": 30, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 139, "col_offset": 57, "nodeName": "SequenceLabelField", "type": "Type[allennlp.data.fields.sequence_label_field.SequenceLabelField]"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "index_fields", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 168, "col_offset": 22, "nodeName": "arrays_to_variables", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "forward", "type": "Any"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "get_viterbi_pairwise_potentials", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "max_likelihood_sequence", "type": "List[int]"}, {"lineNumber": 177, "col_offset": 33, "nodeName": "_", "type": "Any"}, {"lineNumber": 177, "col_offset": 37, "nodeName": "viterbi_decode", "type": "Callable[[Any, Any], Tuple[List[int], Any]]"}, {"lineNumber": 177, "col_offset": 52, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 177, "col_offset": 65, "nodeName": "transition_matrix", "type": "Any"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "tags", "type": "List[Any]"}, {"lineNumber": 183, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 184, "col_offset": 22, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 185, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "get_index_to_token_vocabulary", "type": "Any"}, {"lineNumber": 208, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 208, "col_offset": 25, "nodeName": "all_labels", "type": "Any"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "i", "type": "Any"}, {"lineNumber": 211, "col_offset": 15, "nodeName": "previous_label", "type": "Any"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "items", "type": "Any"}, {"lineNumber": 220, "col_offset": 32, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 220, "col_offset": 52, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "pop", "type": "Any"}, {"lineNumber": 222, "col_offset": 30, "nodeName": "from_params", "type": "Callable[[Any, allennlp.data.vocabulary.Vocabulary, allennlp.common.params.Params], allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 222, "col_offset": 60, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 222, "col_offset": 67, "nodeName": "embedder_params", "type": "Any"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "pop", "type": "Any"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "from_params", "type": "Callable[[Any, List[Tuple[str, allennlp.common.params.Params]]], allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 236, "col_offset": 39, "nodeName": "List", "type": "Any"}, {"lineNumber": 237, "col_offset": 41, "nodeName": "List", "type": "Any"}, {"lineNumber": 238, "col_offset": 42, "nodeName": "List", "type": "Any"}, {"lineNumber": 259, "col_offset": 33, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 259, "col_offset": 37, "nodeName": "sentence", "type": "List[str]"}, {"lineNumber": 260, "col_offset": 23, "nodeName": "verb_index", "type": "int"}, {"lineNumber": 260, "col_offset": 46, "nodeName": "verb_index", "type": "int"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "write", "type": "Callable"}, {"lineNumber": 272, "col_offset": 4, "nodeName": "prediction_file", "type": "TextIO"}, {"lineNumber": 273, "col_offset": 4, "nodeName": "gold_file", "type": "TextIO"}, {"lineNumber": 276, "col_offset": 45, "nodeName": "List", "type": "Any"}, {"lineNumber": 302, "col_offset": 11, "nodeName": "label", "type": "str"}, {"lineNumber": 309, "col_offset": 12, "nodeName": "new_label", "type": "str"}, {"lineNumber": 313, "col_offset": 12, "nodeName": "new_label", "type": "str"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 314, "col_offset": 28, "nodeName": "new_label", "type": "str"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 64, "col_offset": 52, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 65, "col_offset": 59, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 68, "col_offset": 50, "nodeName": "binary_feature_dim", "type": "int"}, {"lineNumber": 68, "col_offset": 72, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 69, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 76, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 111, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 113, "col_offset": 64, "nodeName": "long", "type": "Any"}, {"lineNumber": 116, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 116, "col_offset": 55, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 116, "col_offset": 76, "nodeName": "embedded_verb_indicator", "type": "Any"}, {"lineNumber": 117, "col_offset": 73, "nodeName": "embedded_text_with_verb_indicator", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "get_input_dim", "type": "Any"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 126, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 129, "col_offset": 29, "nodeName": "logits", "type": "Any"}, {"lineNumber": 129, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 66, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 130, "col_offset": 78, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 130, "col_offset": 95, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 133, "col_offset": 19, "nodeName": "sequence_cross_entropy_with_logits", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 54, "nodeName": "logits", "type": "Any"}, {"lineNumber": 133, "col_offset": 62, "nodeName": "tags", "type": "Any"}, {"lineNumber": 133, "col_offset": 68, "nodeName": "mask", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "span_metric", "type": "Any"}, {"lineNumber": 134, "col_offset": 29, "nodeName": "class_probabilities", "type": "Any"}, {"lineNumber": 134, "col_offset": 50, "nodeName": "tags", "type": "Any"}, {"lineNumber": 134, "col_offset": 56, "nodeName": "mask", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 76, "col_offset": 60, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 166, "col_offset": 39, "nodeName": "text_field", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 166, "col_offset": 69, "nodeName": "verb_indicator", "type": "allennlp.data.fields.sequence_label_field.SequenceLabelField"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 168, "col_offset": 42, "nodeName": "as_array_dict", "type": "Callable"}, {"lineNumber": 171, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 171, "col_offset": 37, "nodeName": "model_input", "type": "Dict[str, Any]"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "x", "type": "int"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "max_likelihood_sequence", "type": "List[int]"}, {"lineNumber": 181, "col_offset": 53, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 139, "col_offset": 85, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 139, "col_offset": 90, "nodeName": "Any", "type": "Any"}, {"lineNumber": 184, "col_offset": 22, "nodeName": "span_metric", "type": "Any"}, {"lineNumber": 184, "col_offset": 56, "nodeName": "reset", "type": "bool"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 190, "col_offset": 23, "nodeName": "y", "type": "Any"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 209, "col_offset": 41, "nodeName": "num_labels", "type": "int"}, {"lineNumber": 209, "col_offset": 53, "nodeName": "num_labels", "type": "int"}, {"lineNumber": 211, "col_offset": 33, "nodeName": "all_labels", "type": "Any"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "j", "type": "Any"}, {"lineNumber": 212, "col_offset": 19, "nodeName": "label", "type": "Any"}, {"lineNumber": 212, "col_offset": 28, "nodeName": "items", "type": "Any"}, {"lineNumber": 221, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 222, "col_offset": 30, "nodeName": "TextFieldEmbedder", "type": "Type[allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 223, "col_offset": 26, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 223, "col_offset": 53, "nodeName": "pop", "type": "Any"}, {"lineNumber": 224, "col_offset": 29, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 225, "col_offset": 22, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 225, "col_offset": 56, "nodeName": "pop", "type": "Any"}, {"lineNumber": 227, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 228, "col_offset": 39, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 229, "col_offset": 35, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 230, "col_offset": 38, "nodeName": "binary_feature_dim", "type": "Any"}, {"lineNumber": 231, "col_offset": 31, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 236, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 237, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 238, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "prediction_file", "type": "TextIO"}, {"lineNumber": 268, "col_offset": 30, "nodeName": "ljust", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "prediction_file", "type": "TextIO"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "gold_file", "type": "TextIO"}, {"lineNumber": 270, "col_offset": 24, "nodeName": "ljust", "type": "Any"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "gold_file", "type": "TextIO"}, {"lineNumber": 276, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 308, "col_offset": 30, "nodeName": "i", "type": "int"}, {"lineNumber": 309, "col_offset": 42, "nodeName": "new_label", "type": "str"}, {"lineNumber": 312, "col_offset": 11, "nodeName": "i", "type": "int"}, {"lineNumber": 313, "col_offset": 24, "nodeName": "new_label", "type": "str"}, {"lineNumber": 314, "col_offset": 8, "nodeName": "conll_labels", "type": "List[str]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 52, "col_offset": 14, "nodeName": "SemanticRoleLabeler", "type": "Any"}, {"lineNumber": 52, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 59, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 65, "col_offset": 59, "nodeName": "self", "type": "Any"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 68, "col_offset": 72, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 113, "col_offset": 64, "nodeName": "verb_indicator", "type": "Any"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "stacked_encoder", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 130, "col_offset": 40, "nodeName": "reshaped_log_probs", "type": "Any"}, {"lineNumber": 130, "col_offset": 95, "nodeName": "self", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 168, "col_offset": 42, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 181, "col_offset": 53, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 184, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 212, "col_offset": 28, "nodeName": "all_labels", "type": "Any"}, {"lineNumber": 223, "col_offset": 53, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 225, "col_offset": 56, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 268, "col_offset": 30, "nodeName": "word", "type": "Any"}, {"lineNumber": 269, "col_offset": 30, "nodeName": "rjust", "type": "Any"}, {"lineNumber": 270, "col_offset": 24, "nodeName": "word", "type": "Any"}, {"lineNumber": 271, "col_offset": 24, "nodeName": "rjust", "type": "Any"}, {"lineNumber": 303, "col_offset": 12, "nodeName": "conll_labels", "type": "List[str]"}, {"lineNumber": 308, "col_offset": 11, "nodeName": "label", "type": "str"}, {"lineNumber": 308, "col_offset": 40, "nodeName": "label", "type": "str"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "sentence_length", "type": "int"}, {"lineNumber": 312, "col_offset": 66, "nodeName": "label", "type": "str"}, {"lineNumber": 64, "col_offset": 59, "nodeName": "stacked_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 68, "col_offset": 11, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 119, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 30, "nodeName": "F", "type": "Any"}, {"lineNumber": 174, "col_offset": 22, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 190, "col_offset": 29, "nodeName": "x", "type": "Any"}, {"lineNumber": 190, "col_offset": 32, "nodeName": "y", "type": "Any"}, {"lineNumber": 190, "col_offset": 37, "nodeName": "items", "type": "Any"}, {"lineNumber": 190, "col_offset": 73, "nodeName": "x", "type": "Any"}, {"lineNumber": 215, "col_offset": 19, "nodeName": "i", "type": "Any"}, {"lineNumber": 215, "col_offset": 24, "nodeName": "j", "type": "Any"}, {"lineNumber": 216, "col_offset": 20, "nodeName": "transition_matrix", "type": "Any"}, {"lineNumber": 216, "col_offset": 46, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 269, "col_offset": 30, "nodeName": "predicted", "type": "Any"}, {"lineNumber": 271, "col_offset": 24, "nodeName": "gold", "type": "Any"}, {"lineNumber": 308, "col_offset": 53, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 309, "col_offset": 30, "nodeName": "label", "type": "str"}, {"lineNumber": 312, "col_offset": 39, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 312, "col_offset": 79, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 190, "col_offset": 37, "nodeName": "metric_dict", "type": "Any"}, {"lineNumber": 215, "col_offset": 30, "nodeName": "label", "type": "Any"}, {"lineNumber": 215, "col_offset": 54, "nodeName": "previous_label", "type": "Any"}, {"lineNumber": 216, "col_offset": 38, "nodeName": "i", "type": "Any"}, {"lineNumber": 216, "col_offset": 41, "nodeName": "j", "type": "Any"}, {"lineNumber": 308, "col_offset": 60, "nodeName": "i", "type": "int"}, {"lineNumber": 312, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 312, "col_offset": 86, "nodeName": "i", "type": "int"}, {"lineNumber": 215, "col_offset": 78, "nodeName": "label", "type": "Any"}]