[{"lineNumber": 18, "col_offset": 0, "nodeName": "create_vocab_and_decoder_net", "type": "Callable[[Any], Any]"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "Metric", "type": "Type[allennlp.training.metrics.metric.Metric]"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 38, "col_offset": 65, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "add_tokens_to_namespace", "type": "Callable[..., List[int]]"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "StackedSelfAttentionDecoderNet", "type": "Any"}, {"lineNumber": 30, "col_offset": 11, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "decoder_net", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "expected", "type": "FrozenSet[Any]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "predicted", "type": "FrozenSet[Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "true_positive_count", "type": "int"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "p", "type": "float"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "r", "type": "float"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "exact_match", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "f1_score", "type": "Any"}, {"lineNumber": 62, "col_offset": 11, "nodeName": "reset", "type": "bool"}, {"lineNumber": 59, "col_offset": 49, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "_total_em", "type": "float"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "_total_f1", "type": "float"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "_count", "type": "int"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "decoder_inout_dim", "type": "int"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "encoded_state", "type": "Any"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "source_mask", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "target_tokens", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "encoder_out", "type": "Dict[str, Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "decoder_inout_dim", "type": "int"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "tokens_ground_truth", "type": "List[List[str]]"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "predicted_tokens", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "decoder_inout_dim", "type": "int"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "tokens_ground_truth", "type": "List[List[str]]"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "predicted_tokens", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "encoded_state", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "source_mask", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "target_tokens", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "encoder_out", "type": "Dict[str, Any]"}, {"lineNumber": 20, "col_offset": 4, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 20, "col_offset": 45, "nodeName": "START_SYMBOL", "type": "str"}, {"lineNumber": 20, "col_offset": 59, "nodeName": "END_SYMBOL", "type": "str"}, {"lineNumber": 23, "col_offset": 21, "nodeName": "decoder_inout_dim", "type": "int"}, {"lineNumber": 24, "col_offset": 29, "nodeName": "decoder_inout_dim", "type": "int"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "reset", "type": "Any"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 39, "col_offset": 29, "nodeName": "expected", "type": "Iterable[Any]"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "frozenset", "type": "Type[FrozenSet[Any]]"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "predicted", "type": "Iterable[Any]"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "true_positive_count", "type": "int"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "true_positive_count", "type": "int"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "best_span_string", "type": "Any"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "answer_string", "type": "Any"}, {"lineNumber": 53, "col_offset": 47, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 53, "col_offset": 51, "nodeName": "best_span_strings", "type": "Any"}, {"lineNumber": 53, "col_offset": 70, "nodeName": "answer_strings", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "_total_em", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "_total_f1", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "_count", "type": "Any"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 64, "col_offset": 22, "nodeName": "exact_match", "type": "Any"}, {"lineNumber": 64, "col_offset": 41, "nodeName": "f1_score", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "decoder_net", "type": "Any"}, {"lineNumber": 79, "col_offset": 29, "nodeName": "create_vocab_and_decoder_net", "type": "Callable[[Any], Any]"}, {"lineNumber": 79, "col_offset": 58, "nodeName": "decoder_inout_dim", "type": "int"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "AutoRegressiveSeqDecoder", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "decoder_net", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 99, "col_offset": 20, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "decoder_inout_dim", "type": "int"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "decoder_net", "type": "Any"}, {"lineNumber": 100, "col_offset": 29, "nodeName": "create_vocab_and_decoder_net", "type": "Callable[[Any], Any]"}, {"lineNumber": 100, "col_offset": 58, "nodeName": "decoder_inout_dim", "type": "int"}, {"lineNumber": 102, "col_offset": 38, "nodeName": "AutoRegressiveSeqDecoder", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "decoder_net", "type": "Any"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "rand", "type": "Any"}, {"lineNumber": 109, "col_offset": 35, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 109, "col_offset": 47, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 109, "col_offset": 59, "nodeName": "decoder_inout_dim", "type": "int"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "long", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "source_mask", "type": "Any"}, {"lineNumber": 113, "col_offset": 38, "nodeName": "source_mask", "type": "Any"}, {"lineNumber": 113, "col_offset": 70, "nodeName": "encoded_state", "type": "Any"}, {"lineNumber": 117, "col_offset": 48, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "decoder_net", "type": "Any"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "create_vocab_and_decoder_net", "type": "Callable[[Any], Any]"}, {"lineNumber": 123, "col_offset": 58, "nodeName": "decoder_inout_dim", "type": "int"}, {"lineNumber": 125, "col_offset": 38, "nodeName": "AutoRegressiveSeqDecoder", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "decoder_net", "type": "Any"}, {"lineNumber": 132, "col_offset": 22, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "indices_to_tokens", "type": "Any"}, {"lineNumber": 136, "col_offset": 15, "nodeName": "predicted_tokens", "type": "Any"}, {"lineNumber": 136, "col_offset": 35, "nodeName": "tokens_ground_truth", "type": "List[List[str]]"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 140, "col_offset": 15, "nodeName": "decoder_net", "type": "Any"}, {"lineNumber": 140, "col_offset": 29, "nodeName": "create_vocab_and_decoder_net", "type": "Callable[[Any], Any]"}, {"lineNumber": 140, "col_offset": 58, "nodeName": "decoder_inout_dim", "type": "int"}, {"lineNumber": 142, "col_offset": 38, "nodeName": "AutoRegressiveSeqDecoder", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "decoder_net", "type": "Any"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 153, "col_offset": 38, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 155, "col_offset": 15, "nodeName": "predicted_tokens", "type": "Any"}, {"lineNumber": 155, "col_offset": 35, "nodeName": "tokens_ground_truth", "type": "List[List[str]]"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "prepare_environment", "type": "Callable[[allennlp.common.params.Params], None]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 163, "col_offset": 20, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "decoder_inout_dim", "type": "int"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "decoder_net", "type": "Any"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "create_vocab_and_decoder_net", "type": "Callable[[Any], Any]"}, {"lineNumber": 164, "col_offset": 58, "nodeName": "decoder_inout_dim", "type": "int"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "randn", "type": "Any"}, {"lineNumber": 175, "col_offset": 36, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 175, "col_offset": 48, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 175, "col_offset": 60, "nodeName": "decoder_inout_dim", "type": "int"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "long", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "source_mask", "type": "Any"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "source_mask", "type": "Any"}, {"lineNumber": 179, "col_offset": 70, "nodeName": "encoded_state", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "forward", "type": "Any"}, {"lineNumber": 181, "col_offset": 44, "nodeName": "encoder_out", "type": "Dict[str, Any]"}, {"lineNumber": 181, "col_offset": 57, "nodeName": "target_tokens", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "DummyMetric"}, {"lineNumber": 38, "col_offset": 22, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 38, "col_offset": 47, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "predicted", "type": "FrozenSet[Any]"}, {"lineNumber": 46, "col_offset": 46, "nodeName": "expected", "type": "FrozenSet[Any]"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "predicted", "type": "FrozenSet[Any]"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 48, "col_offset": 38, "nodeName": "expected", "type": "FrozenSet[Any]"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "r", "type": "float"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "p", "type": "float"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "r", "type": "float"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "best_span_string", "type": "Any"}, {"lineNumber": 54, "col_offset": 50, "nodeName": "answer_string", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "f1", "type": "Any"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "best_span_string", "type": "Any"}, {"lineNumber": 55, "col_offset": 56, "nodeName": "answer_string", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 54, "nodeName": "_count", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "_total_em", "type": "Any"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "_count", "type": "Any"}, {"lineNumber": 61, "col_offset": 51, "nodeName": "_count", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "_total_f1", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "_count", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "reset", "type": "Any"}, {"lineNumber": 59, "col_offset": 54, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 59, "col_offset": 59, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "_total_em", "type": "Any"}, {"lineNumber": 73, "col_offset": 54, "nodeName": "_total_f1", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 88, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "AutoRegressiveSeqDecoder", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "decoder_net", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "forward", "type": "Any"}, {"lineNumber": 115, "col_offset": 51, "nodeName": "encoder_out", "type": "Dict[str, Any]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "forward", "type": "Any"}, {"lineNumber": 116, "col_offset": 51, "nodeName": "encoder_out", "type": "Dict[str, Any]"}, {"lineNumber": 116, "col_offset": 64, "nodeName": "target_tokens", "type": "Dict[str, Dict[str, Any]]"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "shape", "type": "Any"}, {"lineNumber": 117, "col_offset": 48, "nodeName": "loss", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "auto_regressive_seq_decoder", "type": "Any"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "forward", "type": "Any"}, {"lineNumber": 119, "col_offset": 68, "nodeName": "encoder_out", "type": "Dict[str, Any]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 132, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "auto_regressive_seq_decoder", "type": "Any"}, {"lineNumber": 135, "col_offset": 73, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 146, "col_offset": 12, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 149, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "post_process", "type": "Any"}, {"lineNumber": 154, "col_offset": 68, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 161, "col_offset": 28, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "auto_regressive_seq_decoder", "type": "Any"}, {"lineNumber": 38, "col_offset": 31, "nodeName": "Any", "type": "Any"}, {"lineNumber": 38, "col_offset": 56, "nodeName": "Any", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "predicted", "type": "FrozenSet[Any]"}, {"lineNumber": 41, "col_offset": 35, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 41, "col_offset": 39, "nodeName": "expected", "type": "FrozenSet[Any]"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "predicted", "type": "FrozenSet[Any]"}, {"lineNumber": 43, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 43, "col_offset": 38, "nodeName": "expected", "type": "FrozenSet[Any]"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "p", "type": "float"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 33, "nodeName": "self", "type": "DummyMetric"}, {"lineNumber": 73, "col_offset": 54, "nodeName": "self", "type": "DummyMetric"}, {"lineNumber": 85, "col_offset": 75, "nodeName": "decoder_inout_dim", "type": "int"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 106, "col_offset": 75, "nodeName": "decoder_inout_dim", "type": "int"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 110, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 110, "col_offset": 45, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 111, "col_offset": 46, "nodeName": "long", "type": "Any"}, {"lineNumber": 115, "col_offset": 15, "nodeName": "auto_regressive_seq_decoder", "type": "Any"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "auto_regressive_seq_decoder", "type": "Any"}, {"lineNumber": 117, "col_offset": 15, "nodeName": "loss", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "Size", "type": "Any"}, {"lineNumber": 119, "col_offset": 32, "nodeName": "auto_regressive_seq_decoder", "type": "Any"}, {"lineNumber": 129, "col_offset": 75, "nodeName": "decoder_inout_dim", "type": "int"}, {"lineNumber": 135, "col_offset": 73, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 146, "col_offset": 75, "nodeName": "decoder_inout_dim", "type": "int"}, {"lineNumber": 154, "col_offset": 27, "nodeName": "auto_regressive_seq_decoder", "type": "Any"}, {"lineNumber": 166, "col_offset": 38, "nodeName": "AutoRegressiveSeqDecoder", "type": "Any"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "decoder_net", "type": "Any"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "ones", "type": "Any"}, {"lineNumber": 176, "col_offset": 33, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 176, "col_offset": 45, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 177, "col_offset": 46, "nodeName": "long", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "get_vocab_size", "type": "Callable[..., int]"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "get_vocab_size", "type": "Callable[..., int]"}, {"lineNumber": 110, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 117, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 129, "col_offset": 37, "nodeName": "get_vocab_size", "type": "Callable[..., int]"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "get_vocab_size", "type": "Callable[..., int]"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 176, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "auto_regressive_seq_decoder", "type": "Any"}, {"lineNumber": 183, "col_offset": 15, "nodeName": "auto_regressive_seq_decoder", "type": "Any"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "auto_regressive_seq_decoder", "type": "Any"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "get_vocab_size", "type": "Callable[..., int]"}, {"lineNumber": 94, "col_offset": 73, "nodeName": "decoder_inout_dim", "type": "int"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 111, "col_offset": 46, "nodeName": "ones", "type": "Any"}, {"lineNumber": 111, "col_offset": 57, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 111, "col_offset": 69, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 129, "col_offset": 37, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 146, "col_offset": 37, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 170, "col_offset": 75, "nodeName": "decoder_inout_dim", "type": "int"}, {"lineNumber": 171, "col_offset": 32, "nodeName": "BLEU", "type": "Any"}, {"lineNumber": 172, "col_offset": 31, "nodeName": "DummyMetric", "type": "Type[DummyMetric]"}, {"lineNumber": 177, "col_offset": 46, "nodeName": "ones", "type": "Any"}, {"lineNumber": 177, "col_offset": 57, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 177, "col_offset": 69, "nodeName": "time_steps", "type": "int"}, {"lineNumber": 94, "col_offset": 35, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 111, "col_offset": 46, "nodeName": "torch", "type": "Any"}, {"lineNumber": 170, "col_offset": 37, "nodeName": "get_vocab_size", "type": "Callable[..., int]"}, {"lineNumber": 177, "col_offset": 46, "nodeName": "torch", "type": "Any"}, {"lineNumber": 170, "col_offset": 37, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}]