[{"lineNumber": 13, "col_offset": 18, "nodeName": "TestCase", "type": "Type[unittest.TestCase]"}, {"lineNumber": 15, "col_offset": 4, "nodeName": "test_add_predict_subparser", "type": "Callable[[Any], Any]"}, {"lineNumber": 32, "col_offset": 4, "nodeName": "test_works_with_known_model", "type": "Callable[[Any], Any]"}, {"lineNumber": 61, "col_offset": 4, "nodeName": "test_fails_without_required_args", "type": "Callable[[Any], Any]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "subparsers", "type": "argparse._SubParsersAction"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "silent", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "infile", "type": "str"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "outfile", "type": "str"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 58, "col_offset": 22, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "add_subparsers", "type": "Callable[..., argparse._SubParsersAction]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "add_subparser", "type": "Any"}, {"lineNumber": 18, "col_offset": 22, "nodeName": "subparsers", "type": "argparse._SubParsersAction"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 26, "col_offset": 33, "nodeName": "raw_args", "type": "List[str]"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "func", "type": "Any"}, {"lineNumber": 28, "col_offset": 28, "nodeName": "predict", "type": "Any"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "archive_file", "type": "Any"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "mkdtemp", "type": "Callable"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 34, "col_offset": 30, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "join", "type": "Callable"}, {"lineNumber": 35, "col_offset": 31, "nodeName": "tempdir", "type": "str"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "f", "type": "file"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "infile", "type": "str"}, {"lineNumber": 47, "col_offset": 37, "nodeName": "outfile", "type": "str"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "main", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "exists", "type": "Callable[[Union[str, unicode]], bool]"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "outfile", "type": "str"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "f", "type": "file"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 46, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "code", "type": "Any"}, {"lineNumber": 16, "col_offset": 17, "nodeName": "argparse", "type": "module"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 28, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "path", "type": "module"}, {"lineNumber": 37, "col_offset": 13, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 37, "col_offset": 18, "nodeName": "infile", "type": "str"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "write", "type": "Callable[[Union[bytearray, str, unicode]], None]"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "open", "type": "Callable[..., file]"}, {"lineNumber": 54, "col_offset": 18, "nodeName": "outfile", "type": "str"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "results", "type": "List[Any]"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 67, "col_offset": 31, "nodeName": "SystemExit", "type": "Type[SystemExit]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "main", "type": "Any"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "exception", "type": "Any"}, {"lineNumber": 34, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "os", "type": "module"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "f", "type": "file"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "f", "type": "file"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 55, "col_offset": 34, "nodeName": "line", "type": "str"}, {"lineNumber": 55, "col_offset": 44, "nodeName": "line", "type": "str"}, {"lineNumber": 55, "col_offset": 52, "nodeName": "f", "type": "file"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 67, "col_offset": 13, "nodeName": "self", "type": "TestPredict"}, {"lineNumber": 70, "col_offset": 15, "nodeName": "cm", "type": "unittest._AssertRaisesContext"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "json", "type": "module"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "keys", "type": "Any"}, {"lineNumber": 59, "col_offset": 23, "nodeName": "result", "type": "Any"}]