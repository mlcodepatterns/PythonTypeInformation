[{"lineNumber": 15, "col_offset": 14, "nodeName": "FromParams", "type": "Type[allennlp.common.from_params.FromParams]"}, {"lineNumber": 21, "col_offset": 21, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "my_int", "type": "int"}, {"lineNumber": 17, "col_offset": 22, "nodeName": "my_int", "type": "int"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "my_bool", "type": "bool"}, {"lineNumber": 18, "col_offset": 23, "nodeName": "my_bool", "type": "bool"}, {"lineNumber": 23, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "optional_type", "type": "Union[Type[None], Type[Dict[str, str]]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "bare_type", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "bare_bare_type", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "my_class", "type": "MyClass"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "my_bool", "type": "bool"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 142, "col_offset": 25, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "BaseClass", "type": "Type[Any]"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "BaseClass2", "type": "Type[Any]"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "BaseClass", "type": "Type[Any]"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "object", "type": "Type[object]"}, {"lineNumber": 195, "col_offset": 16, "nodeName": "BaseClass", "type": "Type[Any]"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "vals", "type": "List[int]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "extra", "type": "Any"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "tval1", "type": "int"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "tval2", "type": "int"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 264, "col_offset": 16, "nodeName": "FromParams", "type": "Type[allennlp.common.from_params.FromParams]"}, {"lineNumber": 268, "col_offset": 16, "nodeName": "FromParams", "type": "Type[allennlp.common.from_params.FromParams]"}, {"lineNumber": 274, "col_offset": 16, "nodeName": "FromParams", "type": "Type[allennlp.common.from_params.FromParams]"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 284, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 303, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 304, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 313, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 317, "col_offset": 16, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 321, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 325, "col_offset": 16, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 331, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 341, "col_offset": 16, "nodeName": "FromParams", "type": "Type[allennlp.common.from_params.FromParams]"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "a", "type": "Any"}, {"lineNumber": 355, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 363, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 367, "col_offset": 16, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 371, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 372, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 384, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 388, "col_offset": 16, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 392, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 396, "col_offset": 16, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 400, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 404, "col_offset": 16, "nodeName": "E", "type": "Type[Any]"}, {"lineNumber": 408, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 409, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 422, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 433, "col_offset": 16, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 436, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 440, "col_offset": 16, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 447, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 457, "col_offset": 8, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 458, "col_offset": 8, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 458, "col_offset": 24, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 460, "col_offset": 8, "nodeName": "config_file", "type": "str"}, {"lineNumber": 461, "col_offset": 8, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 495, "col_offset": 12, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 499, "col_offset": 12, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 504, "col_offset": 8, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 505, "col_offset": 8, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 505, "col_offset": 24, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 507, "col_offset": 8, "nodeName": "config_file", "type": "str"}, {"lineNumber": 508, "col_offset": 8, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 16, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 16, "col_offset": 45, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "MyClass"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "MyClass"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "bare_function", "type": "Callable[[int], int]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "total", "type": "int"}, {"lineNumber": 35, "col_offset": 49, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "SomeClass", "type": "Type[Any]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "SomeClass", "type": "Type[Any]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "check_param", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "set_total", "type": "Callable[[int], None]"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "remove_optional", "type": "Callable[[Type[Any]], Any]"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "optional_type", "type": "Union[Type[None], Type[Dict[str, str]]]"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "remove_optional", "type": "Callable[[Type[Any]], Any]"}, {"lineNumber": 55, "col_offset": 41, "nodeName": "bare_type", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "bare_type", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "bare_bare_type", "type": "Any"}, {"lineNumber": 60, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "my_class", "type": "MyClass"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "MyClass", "type": "Type[MyClass]"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "my_int", "type": "int"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "my_class", "type": "MyClass"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "create_kwargs", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "MyClass", "type": "Type[MyClass]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 207, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 226, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 226, "col_offset": 26, "nodeName": "arg1", "type": "Any"}, {"lineNumber": 226, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 227, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 227, "col_offset": 37, "nodeName": "A", "type": "Any"}, {"lineNumber": 228, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 229, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "arg2", "type": "Any"}, {"lineNumber": 232, "col_offset": 34, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 233, "col_offset": 37, "nodeName": "A", "type": "Any"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 234, "col_offset": 37, "nodeName": "B", "type": "Any"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 235, "col_offset": 30, "nodeName": "tval1", "type": "int"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 236, "col_offset": 30, "nodeName": "tval2", "type": "int"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 237, "col_offset": 30, "nodeName": "b", "type": "Any"}, {"lineNumber": 240, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 240, "col_offset": 26, "nodeName": "arg3", "type": "Any"}, {"lineNumber": 240, "col_offset": 34, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 241, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 241, "col_offset": 45, "nodeName": "A", "type": "Any"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 242, "col_offset": 38, "nodeName": "a", "type": "Any"}, {"lineNumber": 242, "col_offset": 61, "nodeName": "tval1", "type": "int"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 247, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 247, "col_offset": 26, "nodeName": "arg4", "type": "Any"}, {"lineNumber": 247, "col_offset": 34, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 249, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 250, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 253, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 253, "col_offset": 26, "nodeName": "arg5", "type": "Any"}, {"lineNumber": 253, "col_offset": 34, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 254, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 254, "col_offset": 37, "nodeName": "E", "type": "Any"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "m", "type": "Any"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "n", "type": "Any"}, {"lineNumber": 259, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 261, "col_offset": 33, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 280, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 281, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "a", "type": "Union[int, List[int]]"}, {"lineNumber": 284, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 285, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "a", "type": "Union[List[int], int]"}, {"lineNumber": 288, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 289, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 290, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 290, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 290, "col_offset": 31, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "a", "type": "Union[List[int], int]"}, {"lineNumber": 293, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 294, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 295, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 295, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 295, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "a", "type": "Union[int, List[int]]"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "a", "type": "Union[int, List[int]]"}, {"lineNumber": 303, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 304, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 305, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 305, "col_offset": 26, "nodeName": "c", "type": "Any"}, {"lineNumber": 305, "col_offset": 31, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 307, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 329, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 331, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 333, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 333, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 333, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 335, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 336, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 337, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 345, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 346, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 348, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 348, "col_offset": 26, "nodeName": "counts", "type": "Dict[str, int]"}, {"lineNumber": 348, "col_offset": 36, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 371, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 372, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 374, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 374, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 374, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 376, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 377, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 378, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 408, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 409, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 411, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 411, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 411, "col_offset": 35, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 413, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 413, "col_offset": 38, "nodeName": "B", "type": "Any"}, {"lineNumber": 414, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 414, "col_offset": 38, "nodeName": "D", "type": "Any"}, {"lineNumber": 415, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 416, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 444, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 447, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 449, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 449, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 449, "col_offset": 35, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 451, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 452, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 453, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 457, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 460, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 461, "col_offset": 23, "nodeName": "as_dict", "type": "Any"}, {"lineNumber": 479, "col_offset": 25, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 483, "col_offset": 53, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 486, "col_offset": 53, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 490, "col_offset": 53, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 495, "col_offset": 25, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 499, "col_offset": 25, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 500, "col_offset": 19, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 504, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 507, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 508, "col_offset": 23, "nodeName": "as_dict", "type": "Any"}, {"lineNumber": 23, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "some_input", "type": "int"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "bare_function", "type": "Callable[[int], int]"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "constructor_param", "type": "str"}, {"lineNumber": 33, "col_offset": 41, "nodeName": "constructor_param", "type": "str"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "total", "type": "int"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "new_total", "type": "int"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "SomeClass", "type": "Type[Any]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "SomeClass", "type": "Type[Any]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "check_param", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "SomeClass", "type": "Type[Any]"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "set_total", "type": "Callable[[int], None]"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "remove_optional", "type": "Callable[[Type[Any]], Any]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "remove_optional", "type": "Callable[[Type[Any]], Any]"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "MyClass", "type": "Type[MyClass]"}, {"lineNumber": 64, "col_offset": 39, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "my_class", "type": "MyClass"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "size", "type": "int"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "size", "type": "int"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "name", "type": "str"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "size", "type": "int"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "size", "type": "int"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "name", "type": "str"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "a", "type": "int"}, {"lineNumber": 148, "col_offset": 25, "nodeName": "a", "type": "int"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "b", "type": "int"}, {"lineNumber": 149, "col_offset": 25, "nodeName": "b", "type": "int"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "val", "type": "str"}, {"lineNumber": 150, "col_offset": 27, "nodeName": "val", "type": "str"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 161, "col_offset": 16, "nodeName": "b", "type": "int"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "val", "type": "Any"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "c", "type": "int"}, {"lineNumber": 169, "col_offset": 25, "nodeName": "c", "type": "int"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "b", "type": "int"}, {"lineNumber": 170, "col_offset": 25, "nodeName": "b", "type": "int"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "b", "type": "int"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "m", "type": "int"}, {"lineNumber": 181, "col_offset": 25, "nodeName": "m", "type": "int"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "n", "type": "int"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "n", "type": "int"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "m", "type": "int"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "n", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "arg1", "type": "List[Any]"}, {"lineNumber": 200, "col_offset": 28, "nodeName": "arg1", "type": "List[Any]"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "arg2", "type": "Tuple[Any, Any]"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "arg2", "type": "Tuple[Any, Any]"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "arg3", "type": "Dict[str, Any]"}, {"lineNumber": 202, "col_offset": 28, "nodeName": "arg3", "type": "Dict[str, Any]"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "arg4", "type": "Set[Any]"}, {"lineNumber": 203, "col_offset": 28, "nodeName": "arg4", "type": "Set[Any]"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "arg5", "type": "List[Any]"}, {"lineNumber": 204, "col_offset": 28, "nodeName": "arg5", "type": "List[Any]"}, {"lineNumber": 222, "col_offset": 12, "nodeName": "BaseClass", "type": "Type[Any]"}, {"lineNumber": 222, "col_offset": 41, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 222, "col_offset": 55, "nodeName": "extra", "type": "Any"}, {"lineNumber": 222, "col_offset": 64, "nodeName": "tval1", "type": "int"}, {"lineNumber": 222, "col_offset": 73, "nodeName": "tval2", "type": "int"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "arg1", "type": "Any"}, {"lineNumber": 225, "col_offset": 30, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 225, "col_offset": 34, "nodeName": "vals", "type": "List[int]"}, {"lineNumber": 226, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 227, "col_offset": 26, "nodeName": "arg1", "type": "Any"}, {"lineNumber": 232, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "arg2", "type": "Any"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "arg2", "type": "Any"}, {"lineNumber": 237, "col_offset": 45, "nodeName": "vals", "type": "List[int]"}, {"lineNumber": 240, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 241, "col_offset": 26, "nodeName": "arg3", "type": "Any"}, {"lineNumber": 243, "col_offset": 38, "nodeName": "vals", "type": "List[int]"}, {"lineNumber": 244, "col_offset": 38, "nodeName": "vals", "type": "List[int]"}, {"lineNumber": 247, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 248, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "arg4", "type": "Any"}, {"lineNumber": 253, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 254, "col_offset": 26, "nodeName": "arg5", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "WordSplitter", "type": "Type[allennlp.data.tokenizers.word_splitter.WordSplitter]"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "a", "type": "Union[int, List[int]]"}, {"lineNumber": 266, "col_offset": 25, "nodeName": "a", "type": "Union[int, List[int]]"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "b", "type": "Any"}, {"lineNumber": 272, "col_offset": 25, "nodeName": "b", "type": "Any"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "c", "type": "Any"}, {"lineNumber": 278, "col_offset": 25, "nodeName": "c", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 282, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 285, "col_offset": 12, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 286, "col_offset": 15, "nodeName": "a", "type": "Any"}, {"lineNumber": 289, "col_offset": 12, "nodeName": "B", "type": "Type[Any]"}, {"lineNumber": 290, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 294, "col_offset": 12, "nodeName": "B", "type": "Type[Any]"}, {"lineNumber": 295, "col_offset": 26, "nodeName": "b", "type": "Any"}, {"lineNumber": 304, "col_offset": 12, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 305, "col_offset": 26, "nodeName": "c", "type": "Any"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "size", "type": "int"}, {"lineNumber": 319, "col_offset": 28, "nodeName": "size", "type": "int"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "items", "type": "Dict[str, Any]"}, {"lineNumber": 327, "col_offset": 29, "nodeName": "items", "type": "Dict[str, Any]"}, {"lineNumber": 331, "col_offset": 12, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 333, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 334, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 334, "col_offset": 19, "nodeName": "items", "type": "Any"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "counts", "type": "Dict[str, int]"}, {"lineNumber": 343, "col_offset": 30, "nodeName": "counts", "type": "Dict[str, int]"}, {"lineNumber": 346, "col_offset": 12, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 348, "col_offset": 26, "nodeName": "a", "type": "Any"}, {"lineNumber": 349, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 349, "col_offset": 30, "nodeName": "counts", "type": "Dict[str, int]"}, {"lineNumber": 349, "col_offset": 40, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 361, "col_offset": 16, "nodeName": "size", "type": "int"}, {"lineNumber": 361, "col_offset": 28, "nodeName": "size", "type": "int"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "items", "type": "List[Any]"}, {"lineNumber": 369, "col_offset": 29, "nodeName": "items", "type": "List[Any]"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 374, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 375, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 375, "col_offset": 19, "nodeName": "items", "type": "Any"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "size", "type": "int"}, {"lineNumber": 390, "col_offset": 28, "nodeName": "size", "type": "int"}, {"lineNumber": 398, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 398, "col_offset": 28, "nodeName": "name", "type": "str"}, {"lineNumber": 406, "col_offset": 16, "nodeName": "items", "type": "Tuple[Any, Any]"}, {"lineNumber": 406, "col_offset": 29, "nodeName": "items", "type": "Tuple[Any, Any]"}, {"lineNumber": 409, "col_offset": 12, "nodeName": "E", "type": "Type[Any]"}, {"lineNumber": 411, "col_offset": 26, "nodeName": "f", "type": "Any"}, {"lineNumber": 412, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 412, "col_offset": 19, "nodeName": "items", "type": "Any"}, {"lineNumber": 413, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 414, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 424, "col_offset": 28, "nodeName": "name", "type": "str"}, {"lineNumber": 442, "col_offset": 16, "nodeName": "items", "type": "Set[Any]"}, {"lineNumber": 442, "col_offset": 29, "nodeName": "items", "type": "Set[Any]"}, {"lineNumber": 447, "col_offset": 12, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 449, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 450, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 450, "col_offset": 19, "nodeName": "items", "type": "Any"}, {"lineNumber": 458, "col_offset": 24, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 458, "col_offset": 37, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 466, "col_offset": 40, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 473, "col_offset": 40, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 479, "col_offset": 25, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 479, "col_offset": 49, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 483, "col_offset": 57, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 484, "col_offset": 57, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 485, "col_offset": 19, "nodeName": "all", "type": "Any"}, {"lineNumber": 486, "col_offset": 57, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 487, "col_offset": 57, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 488, "col_offset": 19, "nodeName": "all", "type": "Any"}, {"lineNumber": 490, "col_offset": 57, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 491, "col_offset": 57, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 492, "col_offset": 19, "nodeName": "all", "type": "Any"}, {"lineNumber": 495, "col_offset": 25, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 496, "col_offset": 23, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 499, "col_offset": 25, "nodeName": "_attend_feedforward", "type": "Any"}, {"lineNumber": 500, "col_offset": 19, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 505, "col_offset": 24, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 505, "col_offset": 37, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 513, "col_offset": 40, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 517, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 517, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 32, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "constructor_param", "type": "Any"}, {"lineNumber": 36, "col_offset": 49, "nodeName": "check", "type": "str"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "cls", "type": "Any"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "SomeClass", "type": "Type[Any]"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "SomeClass", "type": "Type[Any]"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 91, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 97, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 103, "col_offset": 55, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "pop", "type": "Any"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "cls", "type": "Any"}, {"lineNumber": 147, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 147, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 147, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 153, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "b", "type": "Any"}, {"lineNumber": 156, "col_offset": 33, "nodeName": "b", "type": "Any"}, {"lineNumber": 159, "col_offset": 41, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 159, "col_offset": 52, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "pop_int", "type": "Callable[..., int]"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "pop", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "assert_empty", "type": "Callable[[str], None]"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 164, "col_offset": 23, "nodeName": "cls", "type": "Any"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 168, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 41, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 173, "col_offset": 52, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "pop_int", "type": "Callable[..., int]"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "assert_empty", "type": "Callable[[str], None]"}, {"lineNumber": 175, "col_offset": 36, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 176, "col_offset": 23, "nodeName": "cls", "type": "Any"}, {"lineNumber": 180, "col_offset": 34, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 180, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 185, "col_offset": 41, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "pop_int", "type": "Callable[..., int]"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "assert_empty", "type": "Callable[[str], None]"}, {"lineNumber": 187, "col_offset": 36, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 188, "col_offset": 20, "nodeName": "extras2", "type": "Dict[str, Any]"}, {"lineNumber": 189, "col_offset": 23, "nodeName": "cls", "type": "Any"}, {"lineNumber": 200, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 201, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 227, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "b", "type": "Any"}, {"lineNumber": 228, "col_offset": 27, "nodeName": "y", "type": "Any"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "a", "type": "Any"}, {"lineNumber": 229, "col_offset": 27, "nodeName": "tval1", "type": "int"}, {"lineNumber": 229, "col_offset": 37, "nodeName": "x", "type": "Any"}, {"lineNumber": 229, "col_offset": 42, "nodeName": "arg1", "type": "Any"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "arg2", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "arg2", "type": "Any"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "arg2", "type": "Any"}, {"lineNumber": 237, "col_offset": 30, "nodeName": "arg2", "type": "Any"}, {"lineNumber": 241, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "arg3", "type": "Any"}, {"lineNumber": 242, "col_offset": 38, "nodeName": "arg3", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "arg3", "type": "Any"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "arg3", "type": "Any"}, {"lineNumber": 248, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 249, "col_offset": 19, "nodeName": "val", "type": "Any"}, {"lineNumber": 249, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 249, "col_offset": 41, "nodeName": "arg4", "type": "Any"}, {"lineNumber": 250, "col_offset": 19, "nodeName": "val", "type": "Any"}, {"lineNumber": 250, "col_offset": 36, "nodeName": "x", "type": "Any"}, {"lineNumber": 250, "col_offset": 41, "nodeName": "arg4", "type": "Any"}, {"lineNumber": 254, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "arg5", "type": "Any"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "arg5", "type": "Any"}, {"lineNumber": 266, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 272, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 278, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 291, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 307, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 318, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 319, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 327, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 334, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 335, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 335, "col_offset": 30, "nodeName": "key", "type": "Any"}, {"lineNumber": 335, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 335, "col_offset": 44, "nodeName": "key", "type": "Any"}, {"lineNumber": 336, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 336, "col_offset": 30, "nodeName": "value", "type": "Any"}, {"lineNumber": 336, "col_offset": 37, "nodeName": "B", "type": "Any"}, {"lineNumber": 336, "col_offset": 44, "nodeName": "value", "type": "Any"}, {"lineNumber": 337, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 349, "col_offset": 30, "nodeName": "a", "type": "Any"}, {"lineNumber": 360, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 361, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 369, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 375, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 376, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 376, "col_offset": 30, "nodeName": "item", "type": "Any"}, {"lineNumber": 376, "col_offset": 36, "nodeName": "B", "type": "Any"}, {"lineNumber": 376, "col_offset": 43, "nodeName": "item", "type": "Any"}, {"lineNumber": 376, "col_offset": 51, "nodeName": "items", "type": "Any"}, {"lineNumber": 377, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 378, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 389, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 390, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 397, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 398, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 406, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 412, "col_offset": 19, "nodeName": "f", "type": "Any"}, {"lineNumber": 413, "col_offset": 26, "nodeName": "f", "type": "Any"}, {"lineNumber": 414, "col_offset": 26, "nodeName": "f", "type": "Any"}, {"lineNumber": 415, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 416, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 423, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 424, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 427, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 430, "col_offset": 23, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 430, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 442, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 450, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 451, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 451, "col_offset": 30, "nodeName": "item", "type": "Any"}, {"lineNumber": 451, "col_offset": 36, "nodeName": "B", "type": "Any"}, {"lineNumber": 451, "col_offset": 43, "nodeName": "item", "type": "Any"}, {"lineNumber": 451, "col_offset": 51, "nodeName": "items", "type": "Any"}, {"lineNumber": 452, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 452, "col_offset": 44, "nodeName": "item", "type": "Any"}, {"lineNumber": 452, "col_offset": 52, "nodeName": "items", "type": "Any"}, {"lineNumber": 453, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 453, "col_offset": 44, "nodeName": "item", "type": "Any"}, {"lineNumber": 453, "col_offset": 52, "nodeName": "items", "type": "Any"}, {"lineNumber": 460, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 461, "col_offset": 23, "nodeName": "pop", "type": "Any"}, {"lineNumber": 479, "col_offset": 49, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 480, "col_offset": 50, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 480, "col_offset": 57, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 483, "col_offset": 57, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 484, "col_offset": 57, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 485, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 485, "col_offset": 29, "nodeName": "trained_parameter", "type": "Any"}, {"lineNumber": 485, "col_offset": 50, "nodeName": "transfer_parameter", "type": "Any"}, {"lineNumber": 486, "col_offset": 57, "nodeName": "_attend_feedforward", "type": "Any"}, {"lineNumber": 487, "col_offset": 57, "nodeName": "_attend_feedforward", "type": "Any"}, {"lineNumber": 488, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 488, "col_offset": 29, "nodeName": "trained_parameter", "type": "Any"}, {"lineNumber": 488, "col_offset": 50, "nodeName": "transfer_parameter", "type": "Any"}, {"lineNumber": 490, "col_offset": 57, "nodeName": "_compare_feedforward", "type": "Any"}, {"lineNumber": 491, "col_offset": 57, "nodeName": "_compare_feedforward", "type": "Any"}, {"lineNumber": 492, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 492, "col_offset": 29, "nodeName": "trained_parameter", "type": "Any"}, {"lineNumber": 492, "col_offset": 50, "nodeName": "transfer_parameter", "type": "Any"}, {"lineNumber": 495, "col_offset": 25, "nodeName": "transfer_model", "type": "Any"}, {"lineNumber": 496, "col_offset": 23, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 499, "col_offset": 25, "nodeName": "transfer_model", "type": "Any"}, {"lineNumber": 507, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 508, "col_offset": 23, "nodeName": "pop", "type": "Any"}, {"lineNumber": 517, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 518, "col_offset": 12, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 518, "col_offset": 36, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 60, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "size", "type": "int"}, {"lineNumber": 105, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 33, "nodeName": "other", "type": "Any"}, {"lineNumber": 161, "col_offset": 20, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 162, "col_offset": 22, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "cls", "type": "Any"}, {"lineNumber": 164, "col_offset": 29, "nodeName": "a", "type": "int"}, {"lineNumber": 164, "col_offset": 34, "nodeName": "b", "type": "int"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "val", "type": "Any"}, {"lineNumber": 174, "col_offset": 20, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 175, "col_offset": 36, "nodeName": "cls", "type": "Any"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "c", "type": "int"}, {"lineNumber": 176, "col_offset": 34, "nodeName": "b", "type": "int"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 187, "col_offset": 36, "nodeName": "cls", "type": "Any"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "m", "type": "int"}, {"lineNumber": 189, "col_offset": 34, "nodeName": "n", "type": "Any"}, {"lineNumber": 196, "col_offset": 37, "nodeName": "List", "type": "Any"}, {"lineNumber": 197, "col_offset": 31, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 198, "col_offset": 31, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 198, "col_offset": 59, "nodeName": "Set", "type": "Any"}, {"lineNumber": 199, "col_offset": 31, "nodeName": "List", "type": "Any"}, {"lineNumber": 228, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 228, "col_offset": 33, "nodeName": "x", "type": "Any"}, {"lineNumber": 228, "col_offset": 36, "nodeName": "y", "type": "Any"}, {"lineNumber": 228, "col_offset": 41, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 228, "col_offset": 45, "nodeName": "arg1", "type": "Any"}, {"lineNumber": 228, "col_offset": 53, "nodeName": "vals", "type": "List[int]"}, {"lineNumber": 229, "col_offset": 20, "nodeName": "x", "type": "Any"}, {"lineNumber": 229, "col_offset": 42, "nodeName": "d", "type": "Any"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 237, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 237, "col_offset": 30, "nodeName": "d", "type": "Any"}, {"lineNumber": 242, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 242, "col_offset": 38, "nodeName": "d", "type": "Any"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 249, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 249, "col_offset": 41, "nodeName": "d", "type": "Any"}, {"lineNumber": 250, "col_offset": 19, "nodeName": "x", "type": "Any"}, {"lineNumber": 250, "col_offset": 41, "nodeName": "d", "type": "Any"}, {"lineNumber": 255, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 256, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 265, "col_offset": 34, "nodeName": "Union", "type": "Any"}, {"lineNumber": 269, "col_offset": 34, "nodeName": "Union", "type": "Any"}, {"lineNumber": 275, "col_offset": 34, "nodeName": "Union", "type": "Any"}, {"lineNumber": 296, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 306, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 307, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 326, "col_offset": 38, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 335, "col_offset": 51, "nodeName": "keys", "type": "Any"}, {"lineNumber": 336, "col_offset": 53, "nodeName": "values", "type": "Any"}, {"lineNumber": 337, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 338, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 342, "col_offset": 39, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 368, "col_offset": 38, "nodeName": "List", "type": "Any"}, {"lineNumber": 376, "col_offset": 51, "nodeName": "d", "type": "Any"}, {"lineNumber": 377, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 378, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 405, "col_offset": 38, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 415, "col_offset": 15, "nodeName": "f", "type": "Any"}, {"lineNumber": 416, "col_offset": 15, "nodeName": "f", "type": "Any"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 427, "col_offset": 36, "nodeName": "other", "type": "Any"}, {"lineNumber": 430, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 441, "col_offset": 38, "nodeName": "Set", "type": "Any"}, {"lineNumber": 451, "col_offset": 51, "nodeName": "d", "type": "Any"}, {"lineNumber": 452, "col_offset": 19, "nodeName": "item", "type": "Any"}, {"lineNumber": 452, "col_offset": 52, "nodeName": "d", "type": "Any"}, {"lineNumber": 453, "col_offset": 19, "nodeName": "item", "type": "Any"}, {"lineNumber": 453, "col_offset": 52, "nodeName": "d", "type": "Any"}, {"lineNumber": 457, "col_offset": 28, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 460, "col_offset": 26, "nodeName": "self", "type": "TestFromParams"}, {"lineNumber": 483, "col_offset": 57, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 484, "col_offset": 57, "nodeName": "transfer_model", "type": "Any"}, {"lineNumber": 486, "col_offset": 57, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 487, "col_offset": 57, "nodeName": "transfer_model", "type": "Any"}, {"lineNumber": 490, "col_offset": 57, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 491, "col_offset": 57, "nodeName": "transfer_model", "type": "Any"}, {"lineNumber": 504, "col_offset": 28, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 507, "col_offset": 26, "nodeName": "self", "type": "TestFromParams"}, {"lineNumber": 518, "col_offset": 36, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 519, "col_offset": 37, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 519, "col_offset": 44, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 208, "col_offset": 53, "nodeName": "vals", "type": "List[int]"}, {"lineNumber": 209, "col_offset": 53, "nodeName": "vals", "type": "List[int]"}, {"lineNumber": 210, "col_offset": 53, "nodeName": "vals", "type": "List[int]"}, {"lineNumber": 211, "col_offset": 53, "nodeName": "vals", "type": "List[int]"}, {"lineNumber": 212, "col_offset": 53, "nodeName": "vals", "type": "List[int]"}, {"lineNumber": 213, "col_offset": 64, "nodeName": "vals", "type": "List[int]"}, {"lineNumber": 214, "col_offset": 64, "nodeName": "vals", "type": "List[int]"}, {"lineNumber": 215, "col_offset": 53, "nodeName": "vals", "type": "List[int]"}, {"lineNumber": 216, "col_offset": 53, "nodeName": "vals", "type": "List[int]"}, {"lineNumber": 217, "col_offset": 53, "nodeName": "vals", "type": "List[int]"}, {"lineNumber": 228, "col_offset": 45, "nodeName": "d", "type": "Any"}, {"lineNumber": 335, "col_offset": 51, "nodeName": "items", "type": "Any"}, {"lineNumber": 336, "col_offset": 53, "nodeName": "items", "type": "Any"}, {"lineNumber": 457, "col_offset": 28, "nodeName": "self", "type": "TestFromParams"}, {"lineNumber": 461, "col_offset": 23, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 461, "col_offset": 40, "nodeName": "config_file", "type": "str"}, {"lineNumber": 504, "col_offset": 28, "nodeName": "self", "type": "TestFromParams"}, {"lineNumber": 508, "col_offset": 23, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 508, "col_offset": 40, "nodeName": "config_file", "type": "str"}, {"lineNumber": 198, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 265, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 326, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 335, "col_offset": 51, "nodeName": "d", "type": "Any"}, {"lineNumber": 336, "col_offset": 53, "nodeName": "d", "type": "Any"}, {"lineNumber": 342, "col_offset": 44, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 342, "col_offset": 49, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 461, "col_offset": 23, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 508, "col_offset": 23, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 265, "col_offset": 45, "nodeName": "List", "type": "Any"}, {"lineNumber": 269, "col_offset": 43, "nodeName": "List", "type": "Any"}, {"lineNumber": 275, "col_offset": 46, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 265, "col_offset": 50, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 275, "col_offset": 51, "nodeName": "str", "type": "Type[str]"}]