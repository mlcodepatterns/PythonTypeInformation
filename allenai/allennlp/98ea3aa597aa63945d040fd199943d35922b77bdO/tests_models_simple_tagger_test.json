[{"lineNumber": 17, "col_offset": 23, "nodeName": "ModelTestCase", "type": "Type[allennlp.common.testing.model_test_case.ModelTestCase]"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "ModelTestCase", "type": "Type[allennlp.common.testing.model_test_case.ModelTestCase]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "training_arrays", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "class_probs", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "training_batch", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "validation_batch", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "training_loss", "type": "Any"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "validation_loss", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "param_file", "type": "str"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "data", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "penalty2", "type": "int"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "training_batch", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "validation_batch", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "training_loss", "type": "Any"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "data", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "validation_loss", "type": "Any"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "penalized", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[[str], Tuple[allennlp.models.model.Model, allennlp.models.model.Model]]"}, {"lineNumber": 24, "col_offset": 50, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "ensure_batch_predictions_are_consistent", "type": "Any"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "as_array_dict", "type": "Callable[..., Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]]"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "forward", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "get_regularization_penalty", "type": "Callable[[], Any]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "BasicIterator", "type": "Any"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "Trainer", "type": "Type[allennlp.training.trainer.Trainer]"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "next", "type": "Callable"}, {"lineNumber": 57, "col_offset": 27, "nodeName": "next", "type": "Callable"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "all", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "param_file", "type": "str"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "param_file", "type": "str"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "SimpleTaggerRegularizationTest"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "SimpleTaggerRegularizationTest"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.data.iterators.data_iterator.DataIterator]"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "from_params", "type": "Callable[[Any, allennlp.models.model.Model, str, allennlp.data.iterators.data_iterator.DataIterator, allennlp.data.dataset.Dataset, Optional[allennlp.data.dataset.Dataset], allennlp.common.params.Params], allennlp.training.trainer.Trainer]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "TEST_DIR", "type": "str"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "all", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "all", "type": "Any"}, {"lineNumber": 108, "col_offset": 25, "nodeName": "next", "type": "Callable"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "next", "type": "Callable"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "all", "type": "Any"}, {"lineNumber": 118, "col_offset": 20, "nodeName": "validation_loss", "type": "Any"}, {"lineNumber": 118, "col_offset": 38, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "all", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "SimpleTaggerTest"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "SimpleTaggerTest"}, {"lineNumber": 24, "col_offset": 50, "nodeName": "self", "type": "SimpleTaggerTest"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 34, "col_offset": 42, "nodeName": "sum", "type": "Any"}, {"lineNumber": 34, "col_offset": 52, "nodeName": "class_probs", "type": "Any"}, {"lineNumber": 34, "col_offset": 70, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "self", "type": "SimpleTaggerTest"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "from_params", "type": "Callable[[Any, allennlp.data.vocabulary.Vocabulary, allennlp.common.params.Params], allennlp.models.model.Model]"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 49, "col_offset": 26, "nodeName": "self", "type": "SimpleTaggerTest"}, {"lineNumber": 52, "col_offset": 26, "nodeName": "self", "type": "SimpleTaggerTest"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "iterator", "type": "Any"}, {"lineNumber": 57, "col_offset": 41, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "_batch_loss", "type": "Callable[[Any, Optional[bool]], Any]"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "training_batch", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "_batch_loss", "type": "Callable[[Any, Optional[bool]], Any]"}, {"lineNumber": 60, "col_offset": 46, "nodeName": "validation_batch", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "SimpleTaggerRegularizationTest"}, {"lineNumber": 72, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 73, "col_offset": 22, "nodeName": "DatasetReader", "type": "Type[allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 73, "col_offset": 48, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "DataIterator", "type": "Type[allennlp.data.iterators.data_iterator.DataIterator]"}, {"lineNumber": 74, "col_offset": 49, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 75, "col_offset": 23, "nodeName": "Trainer", "type": "Type[allennlp.training.trainer.Trainer]"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "self", "type": "SimpleTaggerRegularizationTest"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "self", "type": "SimpleTaggerRegularizationTest"}, {"lineNumber": 78, "col_offset": 16, "nodeName": "self", "type": "SimpleTaggerRegularizationTest"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "self", "type": "SimpleTaggerRegularizationTest"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "get", "type": "Any"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "get_regularization_penalty", "type": "Callable[[], Any]"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "weight_penalty", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "penalty2", "type": "Any"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "weight_penalty", "type": "Any"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 108, "col_offset": 44, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "_batch_loss", "type": "Callable[[Any, Optional[bool]], Any]"}, {"lineNumber": 111, "col_offset": 49, "nodeName": "training_batch", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "_batch_loss", "type": "Callable[[Any, Optional[bool]], Any]"}, {"lineNumber": 112, "col_offset": 51, "nodeName": "validation_batch", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "SimpleTaggerTest", "type": "Type[SimpleTaggerTest]"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "self", "type": "SimpleTaggerTest"}, {"lineNumber": 31, "col_offset": 26, "nodeName": "self", "type": "SimpleTaggerTest"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "self", "type": "SimpleTaggerTest"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "arrays_to_variables", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 32, "col_offset": 63, "nodeName": "training_arrays", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 34, "col_offset": 42, "nodeName": "numpy", "type": "module"}, {"lineNumber": 34, "col_offset": 70, "nodeName": "numpy", "type": "module"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "self", "type": "SimpleTaggerTest"}, {"lineNumber": 42, "col_offset": 42, "nodeName": "pop", "type": "Any"}, {"lineNumber": 45, "col_offset": 18, "nodeName": "self", "type": "SimpleTaggerTest"}, {"lineNumber": 56, "col_offset": 39, "nodeName": "self", "type": "SimpleTaggerTest"}, {"lineNumber": 57, "col_offset": 41, "nodeName": "self", "type": "SimpleTaggerTest"}, {"lineNumber": 59, "col_offset": 24, "nodeName": "trainer", "type": "allennlp.training.trainer.Trainer"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "trainer", "type": "allennlp.training.trainer.Trainer"}, {"lineNumber": 63, "col_offset": 16, "nodeName": "training_loss", "type": "Any"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "validation_loss", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 96, "col_offset": 31, "nodeName": "self", "type": "SimpleTaggerRegularizationTest"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "endswith", "type": "Any"}, {"lineNumber": 101, "col_offset": 16, "nodeName": "bias_penalty", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "penalty2", "type": "Any"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "bias_penalty", "type": "Any"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 108, "col_offset": 30, "nodeName": "self", "type": "SimpleTaggerRegularizationTest"}, {"lineNumber": 108, "col_offset": 44, "nodeName": "self", "type": "SimpleTaggerRegularizationTest"}, {"lineNumber": 109, "col_offset": 32, "nodeName": "self", "type": "SimpleTaggerRegularizationTest"}, {"lineNumber": 109, "col_offset": 46, "nodeName": "self", "type": "SimpleTaggerRegularizationTest"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "trainer", "type": "allennlp.training.trainer.Trainer"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "trainer", "type": "allennlp.training.trainer.Trainer"}, {"lineNumber": 115, "col_offset": 16, "nodeName": "training_loss", "type": "Any"}, {"lineNumber": 115, "col_offset": 33, "nodeName": "validation_loss", "type": "Any"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "training_loss", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "penalized", "type": "Any"}, {"lineNumber": 42, "col_offset": 42, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "self", "type": "SimpleTaggerRegularizationTest"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "sum", "type": "Any"}, {"lineNumber": 100, "col_offset": 17, "nodeName": "name", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "penalty2", "type": "Union[Any, int]"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "self", "type": "SimpleTaggerRegularizationTest"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "self", "type": "SimpleTaggerRegularizationTest"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "pow", "type": "Any"}, {"lineNumber": 98, "col_offset": 58, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "sum", "type": "Any"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 101, "col_offset": 45, "nodeName": "abs", "type": "Any"}, {"lineNumber": 101, "col_offset": 55, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 101, "col_offset": 45, "nodeName": "torch", "type": "Any"}]