[{"lineNumber": 15, "col_offset": 14, "nodeName": "FromParams", "type": "Type[allennlp.common.from_params.FromParams]"}, {"lineNumber": 21, "col_offset": 21, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "my_int", "type": "int"}, {"lineNumber": 17, "col_offset": 22, "nodeName": "my_int", "type": "int"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "my_bool", "type": "bool"}, {"lineNumber": 18, "col_offset": 23, "nodeName": "my_bool", "type": "bool"}, {"lineNumber": 23, "col_offset": 46, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "optional_type", "type": "Union[Type[None], Type[Dict[str, str]]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "bare_type", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "bare_bare_type", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "my_class", "type": "MyClass"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "my_bool", "type": "bool"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 96, "col_offset": 16, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "b", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "c", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 144, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 148, "col_offset": 16, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 152, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 204, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 208, "col_offset": 16, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 216, "col_offset": 16, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 220, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "E", "type": "Type[Any]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "f", "type": "Any"}, {"lineNumber": 242, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 253, "col_offset": 16, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 256, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 260, "col_offset": 16, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "d", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 278, "col_offset": 24, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 280, "col_offset": 8, "nodeName": "config_file", "type": "str"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 315, "col_offset": 12, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 319, "col_offset": 12, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 324, "col_offset": 8, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 325, "col_offset": 8, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 325, "col_offset": 24, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "config_file", "type": "str"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 16, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 16, "col_offset": 45, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "MyClass"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "MyClass"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "bare_function", "type": "Callable[[int], int]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "total", "type": "int"}, {"lineNumber": 35, "col_offset": 49, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "SomeClass", "type": "Type[Any]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 43, "col_offset": 25, "nodeName": "SomeClass", "type": "Type[Any]"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "check_param", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 49, "col_offset": 15, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "set_total", "type": "Callable[[int], None]"}, {"lineNumber": 53, "col_offset": 24, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 54, "col_offset": 20, "nodeName": "remove_optional", "type": "Callable[[Type[Any]], Any]"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "optional_type", "type": "Union[Type[None], Type[Dict[str, str]]]"}, {"lineNumber": 55, "col_offset": 25, "nodeName": "remove_optional", "type": "Callable[[Type[Any]], Any]"}, {"lineNumber": 55, "col_offset": 41, "nodeName": "bare_type", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "bare_type", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "bare_bare_type", "type": "Any"}, {"lineNumber": 60, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 61, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 66, "col_offset": 26, "nodeName": "my_class", "type": "MyClass"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "MyClass", "type": "Type[MyClass]"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "my_int", "type": "int"}, {"lineNumber": 68, "col_offset": 15, "nodeName": "my_class", "type": "MyClass"}, {"lineNumber": 71, "col_offset": 17, "nodeName": "create_kwargs", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "MyClass", "type": "Type[MyClass]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 109, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 116, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 123, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 129, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 130, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 136, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 138, "col_offset": 33, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 160, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 162, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 164, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 164, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 194, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 194, "col_offset": 35, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 196, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 228, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 231, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 231, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 231, "col_offset": 35, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 233, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 233, "col_offset": 38, "nodeName": "B", "type": "Any"}, {"lineNumber": 234, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 234, "col_offset": 38, "nodeName": "D", "type": "Any"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "name", "type": "Any"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 267, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 269, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 269, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 269, "col_offset": 35, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 272, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 273, "col_offset": 15, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 277, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 280, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 281, "col_offset": 23, "nodeName": "as_dict", "type": "Any"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 303, "col_offset": 53, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 306, "col_offset": 53, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 310, "col_offset": 53, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 315, "col_offset": 25, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 320, "col_offset": 19, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 327, "col_offset": 22, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 328, "col_offset": 23, "nodeName": "as_dict", "type": "Any"}, {"lineNumber": 23, "col_offset": 38, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "some_input", "type": "int"}, {"lineNumber": 27, "col_offset": 19, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 27, "col_offset": 29, "nodeName": "bare_function", "type": "Callable[[int], int]"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "constructor_param", "type": "str"}, {"lineNumber": 33, "col_offset": 41, "nodeName": "constructor_param", "type": "str"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "total", "type": "int"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "new_total", "type": "int"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "SomeClass", "type": "Type[Any]"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "SomeClass", "type": "Type[Any]"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "check_param", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "SomeClass", "type": "Type[Any]"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "takes_arg", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "set_total", "type": "Callable[[int], None]"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "remove_optional", "type": "Callable[[Type[Any]], Any]"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "remove_optional", "type": "Callable[[Type[Any]], Any]"}, {"lineNumber": 61, "col_offset": 31, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "MyClass", "type": "Type[MyClass]"}, {"lineNumber": 64, "col_offset": 39, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "my_class", "type": "MyClass"}, {"lineNumber": 72, "col_offset": 31, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "size", "type": "int"}, {"lineNumber": 92, "col_offset": 28, "nodeName": "size", "type": "int"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "name", "type": "str"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "size", "type": "int"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "size", "type": "int"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "name", "type": "str"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "b", "type": "Any"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 125, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "A", "type": "Type[Any]"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "c", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "WordSplitter", "type": "Type[allennlp.data.tokenizers.word_splitter.WordSplitter]"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "size", "type": "int"}, {"lineNumber": 150, "col_offset": 28, "nodeName": "size", "type": "int"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "items", "type": "Dict[str, Any]"}, {"lineNumber": 158, "col_offset": 29, "nodeName": "items", "type": "Dict[str, Any]"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 164, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "items", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "size", "type": "int"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "size", "type": "int"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "items", "type": "List[Any]"}, {"lineNumber": 189, "col_offset": 29, "nodeName": "items", "type": "List[Any]"}, {"lineNumber": 192, "col_offset": 12, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 194, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 195, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "items", "type": "Any"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "size", "type": "int"}, {"lineNumber": 210, "col_offset": 28, "nodeName": "size", "type": "int"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 218, "col_offset": 28, "nodeName": "name", "type": "str"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "items", "type": "Tuple[Any, Any]"}, {"lineNumber": 226, "col_offset": 29, "nodeName": "items", "type": "Tuple[Any, Any]"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "E", "type": "Type[Any]"}, {"lineNumber": 231, "col_offset": 26, "nodeName": "f", "type": "Any"}, {"lineNumber": 232, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "items", "type": "Any"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "items", "type": "Any"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "name", "type": "str"}, {"lineNumber": 244, "col_offset": 28, "nodeName": "name", "type": "str"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "items", "type": "Set[Any]"}, {"lineNumber": 262, "col_offset": 29, "nodeName": "items", "type": "Set[Any]"}, {"lineNumber": 267, "col_offset": 12, "nodeName": "C", "type": "Type[Any]"}, {"lineNumber": 269, "col_offset": 26, "nodeName": "d", "type": "Any"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "items", "type": "Any"}, {"lineNumber": 278, "col_offset": 24, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 278, "col_offset": 37, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 286, "col_offset": 40, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 293, "col_offset": 40, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 299, "col_offset": 25, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 299, "col_offset": 49, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 303, "col_offset": 57, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 304, "col_offset": 57, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 305, "col_offset": 19, "nodeName": "all", "type": "Any"}, {"lineNumber": 306, "col_offset": 57, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 307, "col_offset": 57, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 308, "col_offset": 19, "nodeName": "all", "type": "Any"}, {"lineNumber": 310, "col_offset": 57, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 311, "col_offset": 57, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 312, "col_offset": 19, "nodeName": "all", "type": "Any"}, {"lineNumber": 315, "col_offset": 25, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "_attend_feedforward", "type": "Any"}, {"lineNumber": 320, "col_offset": 19, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 325, "col_offset": 24, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 325, "col_offset": 37, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 333, "col_offset": 40, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 337, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 337, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 32, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 35, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "constructor_param", "type": "Any"}, {"lineNumber": 36, "col_offset": 49, "nodeName": "check", "type": "str"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "cls", "type": "Any"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "SomeClass", "type": "Type[Any]"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "SomeClass", "type": "Type[Any]"}, {"lineNumber": 53, "col_offset": 33, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 60, "col_offset": 31, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 91, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 97, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 103, "col_offset": 55, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "pop", "type": "Any"}, {"lineNumber": 105, "col_offset": 23, "nodeName": "cls", "type": "Any"}, {"lineNumber": 149, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 150, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 166, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 166, "col_offset": 30, "nodeName": "key", "type": "Any"}, {"lineNumber": 166, "col_offset": 35, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "key", "type": "Any"}, {"lineNumber": 167, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 167, "col_offset": 30, "nodeName": "value", "type": "Any"}, {"lineNumber": 167, "col_offset": 37, "nodeName": "B", "type": "Any"}, {"lineNumber": 167, "col_offset": 44, "nodeName": "value", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 180, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 196, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 196, "col_offset": 30, "nodeName": "item", "type": "Any"}, {"lineNumber": 196, "col_offset": 36, "nodeName": "B", "type": "Any"}, {"lineNumber": 196, "col_offset": 43, "nodeName": "item", "type": "Any"}, {"lineNumber": 196, "col_offset": 51, "nodeName": "items", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 209, "col_offset": 37, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 210, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 217, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 232, "col_offset": 19, "nodeName": "f", "type": "Any"}, {"lineNumber": 233, "col_offset": 26, "nodeName": "f", "type": "Any"}, {"lineNumber": 234, "col_offset": 26, "nodeName": "f", "type": "Any"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "items", "type": "Any"}, {"lineNumber": 243, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 244, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "name", "type": "Any"}, {"lineNumber": 247, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 250, "col_offset": 23, "nodeName": "hash", "type": "Callable[[Any], int]"}, {"lineNumber": 250, "col_offset": 28, "nodeName": "name", "type": "Any"}, {"lineNumber": 262, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 270, "col_offset": 19, "nodeName": "d", "type": "Any"}, {"lineNumber": 271, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 271, "col_offset": 30, "nodeName": "item", "type": "Any"}, {"lineNumber": 271, "col_offset": 36, "nodeName": "B", "type": "Any"}, {"lineNumber": 271, "col_offset": 43, "nodeName": "item", "type": "Any"}, {"lineNumber": 271, "col_offset": 51, "nodeName": "items", "type": "Any"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 272, "col_offset": 44, "nodeName": "item", "type": "Any"}, {"lineNumber": 272, "col_offset": 52, "nodeName": "items", "type": "Any"}, {"lineNumber": 273, "col_offset": 19, "nodeName": "name", "type": "Any"}, {"lineNumber": 273, "col_offset": 44, "nodeName": "item", "type": "Any"}, {"lineNumber": 273, "col_offset": 52, "nodeName": "items", "type": "Any"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 281, "col_offset": 23, "nodeName": "pop", "type": "Any"}, {"lineNumber": 299, "col_offset": 49, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 300, "col_offset": 50, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 300, "col_offset": 57, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 303, "col_offset": 57, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 304, "col_offset": 57, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 305, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 305, "col_offset": 29, "nodeName": "trained_parameter", "type": "Any"}, {"lineNumber": 305, "col_offset": 50, "nodeName": "transfer_parameter", "type": "Any"}, {"lineNumber": 306, "col_offset": 57, "nodeName": "_attend_feedforward", "type": "Any"}, {"lineNumber": 307, "col_offset": 57, "nodeName": "_attend_feedforward", "type": "Any"}, {"lineNumber": 308, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 308, "col_offset": 29, "nodeName": "trained_parameter", "type": "Any"}, {"lineNumber": 308, "col_offset": 50, "nodeName": "transfer_parameter", "type": "Any"}, {"lineNumber": 310, "col_offset": 57, "nodeName": "_compare_feedforward", "type": "Any"}, {"lineNumber": 311, "col_offset": 57, "nodeName": "_compare_feedforward", "type": "Any"}, {"lineNumber": 312, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 312, "col_offset": 29, "nodeName": "trained_parameter", "type": "Any"}, {"lineNumber": 312, "col_offset": 50, "nodeName": "transfer_parameter", "type": "Any"}, {"lineNumber": 315, "col_offset": 25, "nodeName": "transfer_model", "type": "Any"}, {"lineNumber": 316, "col_offset": 23, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 319, "col_offset": 25, "nodeName": "transfer_model", "type": "Any"}, {"lineNumber": 327, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 328, "col_offset": 23, "nodeName": "pop", "type": "Any"}, {"lineNumber": 337, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 338, "col_offset": 12, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 338, "col_offset": 36, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 57, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 58, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 58, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 60, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 105, "col_offset": 32, "nodeName": "size", "type": "int"}, {"lineNumber": 105, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 157, "col_offset": 38, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 166, "col_offset": 51, "nodeName": "keys", "type": "Any"}, {"lineNumber": 167, "col_offset": 53, "nodeName": "values", "type": "Any"}, {"lineNumber": 168, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 169, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 188, "col_offset": 38, "nodeName": "List", "type": "Any"}, {"lineNumber": 196, "col_offset": 51, "nodeName": "d", "type": "Any"}, {"lineNumber": 197, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 198, "col_offset": 15, "nodeName": "d", "type": "Any"}, {"lineNumber": 225, "col_offset": 38, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 235, "col_offset": 15, "nodeName": "f", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "f", "type": "Any"}, {"lineNumber": 247, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 247, "col_offset": 36, "nodeName": "other", "type": "Any"}, {"lineNumber": 250, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 261, "col_offset": 38, "nodeName": "Set", "type": "Any"}, {"lineNumber": 271, "col_offset": 51, "nodeName": "d", "type": "Any"}, {"lineNumber": 272, "col_offset": 19, "nodeName": "item", "type": "Any"}, {"lineNumber": 272, "col_offset": 52, "nodeName": "d", "type": "Any"}, {"lineNumber": 273, "col_offset": 19, "nodeName": "item", "type": "Any"}, {"lineNumber": 273, "col_offset": 52, "nodeName": "d", "type": "Any"}, {"lineNumber": 277, "col_offset": 28, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 280, "col_offset": 26, "nodeName": "self", "type": "TestFromParams"}, {"lineNumber": 303, "col_offset": 57, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 304, "col_offset": 57, "nodeName": "transfer_model", "type": "Any"}, {"lineNumber": 306, "col_offset": 57, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 307, "col_offset": 57, "nodeName": "transfer_model", "type": "Any"}, {"lineNumber": 310, "col_offset": 57, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 311, "col_offset": 57, "nodeName": "transfer_model", "type": "Any"}, {"lineNumber": 324, "col_offset": 28, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 327, "col_offset": 26, "nodeName": "self", "type": "TestFromParams"}, {"lineNumber": 338, "col_offset": 36, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 339, "col_offset": 37, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 339, "col_offset": 44, "nodeName": "model_params", "type": "Any"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 53, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 166, "col_offset": 51, "nodeName": "items", "type": "Any"}, {"lineNumber": 167, "col_offset": 53, "nodeName": "items", "type": "Any"}, {"lineNumber": 277, "col_offset": 28, "nodeName": "self", "type": "TestFromParams"}, {"lineNumber": 281, "col_offset": 23, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 281, "col_offset": 40, "nodeName": "config_file", "type": "str"}, {"lineNumber": 324, "col_offset": 28, "nodeName": "self", "type": "TestFromParams"}, {"lineNumber": 328, "col_offset": 23, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 328, "col_offset": 40, "nodeName": "config_file", "type": "str"}, {"lineNumber": 157, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 166, "col_offset": 51, "nodeName": "d", "type": "Any"}, {"lineNumber": 167, "col_offset": 53, "nodeName": "d", "type": "Any"}, {"lineNumber": 281, "col_offset": 23, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 328, "col_offset": 23, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}]