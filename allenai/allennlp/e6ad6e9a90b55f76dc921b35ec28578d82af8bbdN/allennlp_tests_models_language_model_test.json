[{"lineNumber": 11, "col_offset": 38, "nodeName": "ModelTestCase", "type": "Type[allennlp.common.testing.model_test_case.ModelTestCase]"}, {"lineNumber": 57, "col_offset": 47, "nodeName": "TestUnidirectionalLanguageModel", "type": "Type[TestUnidirectionalLanguageModel]"}, {"lineNumber": 64, "col_offset": 49, "nodeName": "TestUnidirectionalLanguageModel", "type": "Type[TestUnidirectionalLanguageModel]"}, {"lineNumber": 83, "col_offset": 37, "nodeName": "TestUnidirectionalLanguageModel", "type": "Type[TestUnidirectionalLanguageModel]"}, {"lineNumber": 93, "col_offset": 46, "nodeName": "TestBidirectionalLanguageModel", "type": "Type[TestBidirectionalLanguageModel]"}, {"lineNumber": 99, "col_offset": 48, "nodeName": "TestBidirectionalLanguageModel", "type": "Type[TestBidirectionalLanguageModel]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "expected_embedding_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "bidirectional", "type": "bool"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "training_tensors", "type": "Dict[str, Any]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "forward_loss", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "bidirectional", "type": "bool"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "expected_embedding_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "expected_embedding_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "bidirectional", "type": "bool"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "expected_embedding_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "TestBidirectionalLanguageModel"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "TestBidirectionalLanguageModel"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 23, "col_offset": 50, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "ensure_batch_predictions_are_consistent", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "as_tensor_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "result", "type": "Any"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "expected_embedding_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "item", "type": "Any"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "item", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 53, "col_offset": 66, "nodeName": "bidirectional", "type": "bool"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "TestUnidirectionalLanguageModelTransformer"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestBidirectionalLanguageModel"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "self", "type": "TestBidirectionalLanguageModel"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "self", "type": "TestBidirectionalLanguageModelTransformer"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestBidirectionalLanguageModel"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 23, "col_offset": 50, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "dataset", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 30, "col_offset": 17, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 30, "col_offset": 30, "nodeName": "training_tensors", "type": "Dict[str, Any]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 32, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 37, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 46, "col_offset": 43, "nodeName": "loss", "type": "Any"}, {"lineNumber": 46, "col_offset": 49, "nodeName": "forward_loss", "type": "Any"}, {"lineNumber": 50, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 53, "col_offset": 66, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "TestUnidirectionalLanguageModelUnsampled"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "TestUnidirectionalLanguageModelTransformer"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "TestUnidirectionalLanguageModelTransformer"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "self", "type": "TestUnidirectionalLanguageModelTransformer"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "TestBidirectionalLanguageModel"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "TestBidirectionalLanguageModelUnsampled"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "self", "type": "TestBidirectionalLanguageModelTransformer"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 40, "col_offset": 23, "nodeName": "result", "type": "Any"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 47, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 54, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 101, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 18, "col_offset": 26, "nodeName": "self", "type": "TestBidirectionalLanguageModel"}, {"lineNumber": 19, "col_offset": 26, "nodeName": "self", "type": "TestBidirectionalLanguageModel"}, {"lineNumber": 46, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 55, "col_offset": 36, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 55, "col_offset": 55, "nodeName": "get", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "self", "type": "TestUnidirectionalLanguageModelUnsampled"}, {"lineNumber": 62, "col_offset": 26, "nodeName": "self", "type": "TestUnidirectionalLanguageModelUnsampled"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "self", "type": "TestUnidirectionalLanguageModelTransformer"}, {"lineNumber": 72, "col_offset": 26, "nodeName": "self", "type": "TestUnidirectionalLanguageModelTransformer"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "self", "type": "TestBidirectionalLanguageModel"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "self", "type": "TestBidirectionalLanguageModel"}, {"lineNumber": 96, "col_offset": 26, "nodeName": "self", "type": "TestBidirectionalLanguageModelUnsampled"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "self", "type": "TestBidirectionalLanguageModelUnsampled"}, {"lineNumber": 105, "col_offset": 26, "nodeName": "self", "type": "TestBidirectionalLanguageModelTransformer"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "self", "type": "TestBidirectionalLanguageModelTransformer"}, {"lineNumber": 55, "col_offset": 55, "nodeName": "params", "type": "allennlp.common.params.Params"}]