[{"lineNumber": 17, "col_offset": 23, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "disabled", "type": "bool"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "disabled", "type": "bool"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "Module", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "initializers", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "bias", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "Module", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "initializers", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "module", "type": "Any"}, {"lineNumber": 119, "col_offset": 22, "nodeName": "transfered_modules", "type": "List[Any]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "tearDown", "type": "Callable[[], None]"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "from_params", "type": "Callable[[Any, List[Tuple[str, allennlp.common.params.Params]]], allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "Net", "type": "Type[Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "initializers", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "linear_1_with_funky_name", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "equal", "type": "Any"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "block_orthogonal", "type": "Callable[..., None]"}, {"lineNumber": 56, "col_offset": 25, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 60, "col_offset": 12, "nodeName": "matrix_product", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "test_block_is_orthogonal", "type": "Callable[[Any], None]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "test_block_is_orthogonal", "type": "Callable[[Any], None]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "test_block_is_orthogonal", "type": "Callable[[Any], None]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "test_block_is_orthogonal", "type": "Callable[[Any], None]"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "uniform_unit_scaling", "type": "Callable[..., Any]"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "uniform_unit_scaling", "type": "Callable[..., Any]"}, {"lineNumber": 81, "col_offset": 29, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "nn", "type": "Any"}, {"lineNumber": 106, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "from_params", "type": "Callable[[Any, List[Tuple[str, allennlp.common.params.Params]]], allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "Net", "type": "Type[Any]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "initializers", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 109, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "linear_2", "type": "Any"}, {"lineNumber": 112, "col_offset": 16, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "linear_3_transfer", "type": "Any"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "linear_4_transfer", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "pretrained_conv", "type": "Any"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "linear_1_with_funky_name", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "linear_2", "type": "Any"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "conv", "type": "Any"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 44, "col_offset": 57, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "conv", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "equal", "type": "Any"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "data", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "model", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 55, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "data", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "T", "type": "Any"}, {"lineNumber": 60, "col_offset": 39, "nodeName": "block", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "assert_array_almost_equal", "type": "Any"}, {"lineNumber": 61, "col_offset": 52, "nodeName": "matrix_product", "type": "Any"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 64, "col_offset": 33, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 66, "col_offset": 33, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 69, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "block_orthogonal", "type": "Callable[..., None]"}, {"lineNumber": 71, "col_offset": 29, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 74, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "max", "type": "Any"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "min", "type": "Any"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "max", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "min", "type": "Any"}, {"lineNumber": 87, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "linear_1", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "linear_2", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "linear_3_transfer", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "linear_4_transfer", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "pretrained_conv", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "loads", "type": "Callable[..., Any]"}, {"lineNumber": 107, "col_offset": 23, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 107, "col_offset": 57, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "model", "type": "Any"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "model", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 115, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 117, "col_offset": 30, "nodeName": "model", "type": "Any"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "parameters", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 19, "col_offset": 14, "nodeName": "TestInitializers", "type": "Type[TestInitializers]"}, {"lineNumber": 19, "col_offset": 32, "nodeName": "self", "type": "TestInitializers"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 23, "col_offset": 14, "nodeName": "TestInitializers", "type": "Type[TestInitializers]"}, {"lineNumber": 23, "col_offset": 32, "nodeName": "self", "type": "TestInitializers"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "logging", "type": "module"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 30, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 30, "col_offset": 48, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 31, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 32, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "Conv1d", "type": "Any"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "json", "type": "module"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "evaluate_snippet", "type": "Any"}, {"lineNumber": 43, "col_offset": 65, "nodeName": "json_params", "type": "str"}, {"lineNumber": 48, "col_offset": 25, "nodeName": "model", "type": "Any"}, {"lineNumber": 49, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 49, "col_offset": 31, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "ones", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "block", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 62, "col_offset": 52, "nodeName": "eye", "type": "Any"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "math", "type": "module"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "data", "type": "Any"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 90, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 91, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 93, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "Conv1d", "type": "Any"}, {"lineNumber": 106, "col_offset": 24, "nodeName": "json", "type": "module"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "evaluate_snippet", "type": "Any"}, {"lineNumber": 106, "col_offset": 65, "nodeName": "json_params", "type": "str"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "equal", "type": "Any"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "data", "type": "Any"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "module", "type": "Any"}, {"lineNumber": 30, "col_offset": 48, "nodeName": "nn", "type": "Any"}, {"lineNumber": 31, "col_offset": 32, "nodeName": "nn", "type": "Any"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "nn", "type": "Any"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "_jsonnet", "type": "Any"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "ones", "type": "Any"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 52, "col_offset": 54, "nodeName": "size", "type": "Any"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 62, "col_offset": 52, "nodeName": "numpy", "type": "module"}, {"lineNumber": 62, "col_offset": 62, "nodeName": "shape", "type": "Any"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 78, "col_offset": 36, "nodeName": "math", "type": "module"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 82, "col_offset": 35, "nodeName": "math", "type": "module"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "sqrt", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "nn", "type": "Any"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "nn", "type": "Any"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "nn", "type": "Any"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "nn", "type": "Any"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "nn", "type": "Any"}, {"lineNumber": 106, "col_offset": 35, "nodeName": "_jsonnet", "type": "Any"}, {"lineNumber": 113, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 113, "col_offset": 35, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "equal", "type": "Any"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "data", "type": "Any"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "Net", "type": "Type[Any]"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 30, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 31, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 49, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 49, "col_offset": 58, "nodeName": "size", "type": "Any"}, {"lineNumber": 52, "col_offset": 54, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 62, "col_offset": 62, "nodeName": "matrix_product", "type": "Any"}, {"lineNumber": 83, "col_offset": 36, "nodeName": "math", "type": "module"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 89, "col_offset": 22, "nodeName": "Net", "type": "Type[Any]"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 91, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 93, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 94, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 95, "col_offset": 39, "nodeName": "torch", "type": "Any"}, {"lineNumber": 113, "col_offset": 51, "nodeName": "ones", "type": "Any"}, {"lineNumber": 121, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 121, "col_offset": 39, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 49, "col_offset": 58, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 113, "col_offset": 51, "nodeName": "torch", "type": "Any"}, {"lineNumber": 113, "col_offset": 62, "nodeName": "size", "type": "Any"}, {"lineNumber": 121, "col_offset": 55, "nodeName": "ones", "type": "Any"}, {"lineNumber": 113, "col_offset": 62, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 121, "col_offset": 55, "nodeName": "torch", "type": "Any"}, {"lineNumber": 121, "col_offset": 66, "nodeName": "size", "type": "Any"}, {"lineNumber": 121, "col_offset": 66, "nodeName": "parameter", "type": "Any"}]