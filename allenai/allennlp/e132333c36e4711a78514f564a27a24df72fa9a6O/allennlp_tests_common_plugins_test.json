[{"lineNumber": 18, "col_offset": 18, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "plugins_root", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "project_a_fixtures_root", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "project_b_fixtures_root", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "project_c_fixtures_root", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "project_d_fixtures_root", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "available_plugins", "type": "Set[pkgutil.ModuleInfo]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 201, "col_offset": 8, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "FIXTURES_ROOT", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 24, "col_offset": 39, "nodeName": "plugins_root", "type": "Any"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 26, "col_offset": 39, "nodeName": "plugins_root", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 39, "nodeName": "plugins_root", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "plugins_root", "type": "Any"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 35, "col_offset": 35, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 38, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "available_plugins", "type": "Set[pkgutil.ModuleInfo]"}, {"lineNumber": 42, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 35, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 59, "col_offset": 35, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 74, "col_offset": 35, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 97, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 98, "col_offset": 35, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 100, "col_offset": 46, "nodeName": "temp_dir_b", "type": "nothing"}, {"lineNumber": 114, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 35, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 131, "col_offset": 12, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 138, "col_offset": 35, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 147, "col_offset": 12, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 153, "col_offset": 12, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 159, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 35, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 163, "col_offset": 12, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 181, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Any"}, {"lineNumber": 182, "col_offset": 35, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 189, "col_offset": 12, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 192, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Any"}, {"lineNumber": 193, "col_offset": 35, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 195, "col_offset": 8, "nodeName": "import_plugins", "type": "Callable[[], None]"}, {"lineNumber": 196, "col_offset": 32, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 197, "col_offset": 30, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 201, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "assertSetEqual", "type": "Any"}, {"lineNumber": 202, "col_offset": 35, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 205, "col_offset": 12, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 24, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 26, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 28, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 31, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 34, "col_offset": 32, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 38, "col_offset": 32, "nodeName": "discover_namespace_plugins", "type": "Callable[..., Iterable[pkgutil.ModuleInfo]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 42, "col_offset": 32, "nodeName": "discover_file_plugins", "type": "Callable[..., Iterable[str]]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 46, "col_offset": 32, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "pip_install", "type": "Callable[..., contextlib._GeneratorContextManager[nothing]]"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "project_a_fixtures_root", "type": "Any"}, {"lineNumber": 50, "col_offset": 32, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 51, "col_offset": 56, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 53, "col_offset": 12, "nodeName": "import_plugins", "type": "Callable[[], None]"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 58, "col_offset": 32, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "pip_install", "type": "Callable[..., contextlib._GeneratorContextManager[nothing]]"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "project_a_fixtures_root", "type": "Any"}, {"lineNumber": 61, "col_offset": 61, "nodeName": "pip_install", "type": "Callable[..., contextlib._GeneratorContextManager[nothing]]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "project_c_fixtures_root", "type": "Any"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 65, "col_offset": 78, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "import_plugins", "type": "Callable[[], None]"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 70, "col_offset": 31, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 73, "col_offset": 32, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 76, "col_offset": 13, "nodeName": "push_python_project", "type": "Callable[..., contextlib._GeneratorContextManager[nothing]]"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "project_b_fixtures_root", "type": "Any"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 56, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "import_plugins", "type": "Callable[[], None]"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 85, "col_offset": 32, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 88, "col_offset": 13, "nodeName": "push_python_project", "type": "Callable[..., contextlib._GeneratorContextManager[nothing]]"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "project_d_fixtures_root", "type": "Any"}, {"lineNumber": 89, "col_offset": 32, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 90, "col_offset": 39, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "import_plugins", "type": "Callable[[], None]"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 97, "col_offset": 32, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "TemporaryDirectory", "type": "Type[tempfile.TemporaryDirectory[Any]]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "copy_tree", "type": "Callable[..., List[str]]"}, {"lineNumber": 101, "col_offset": 41, "nodeName": "project_b_fixtures_root", "type": "Any"}, {"lineNumber": 101, "col_offset": 71, "nodeName": "temp_dir_b", "type": "nothing"}, {"lineNumber": 106, "col_offset": 16, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 114, "col_offset": 32, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "pip_install", "type": "Callable[..., contextlib._GeneratorContextManager[nothing]]"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "project_a_fixtures_root", "type": "Any"}, {"lineNumber": 121, "col_offset": 61, "nodeName": "pip_install", "type": "Callable[..., contextlib._GeneratorContextManager[nothing]]"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "project_c_fixtures_root", "type": "Any"}, {"lineNumber": 123, "col_offset": 11, "nodeName": "push_python_project", "type": "Callable[..., contextlib._GeneratorContextManager[nothing]]"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "project_b_fixtures_root", "type": "Any"}, {"lineNumber": 124, "col_offset": 32, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "import_plugins", "type": "Callable[[], None]"}, {"lineNumber": 131, "col_offset": 36, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 132, "col_offset": 31, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 133, "col_offset": 31, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 134, "col_offset": 31, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 137, "col_offset": 32, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 138, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 144, "col_offset": 13, "nodeName": "pip_install", "type": "Callable[..., contextlib._GeneratorContextManager[nothing]]"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "project_a_fixtures_root", "type": "Any"}, {"lineNumber": 144, "col_offset": 61, "nodeName": "pip_install", "type": "Callable[..., contextlib._GeneratorContextManager[nothing]]"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "project_c_fixtures_root", "type": "Any"}, {"lineNumber": 146, "col_offset": 11, "nodeName": "push_python_project", "type": "Callable[..., contextlib._GeneratorContextManager[nothing]]"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "project_d_fixtures_root", "type": "Any"}, {"lineNumber": 147, "col_offset": 32, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 149, "col_offset": 67, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 152, "col_offset": 12, "nodeName": "import_plugins", "type": "Callable[[], None]"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 31, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 155, "col_offset": 31, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 159, "col_offset": 32, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 160, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 162, "col_offset": 13, "nodeName": "pip_install", "type": "Callable[..., contextlib._GeneratorContextManager[nothing]]"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "project_a_fixtures_root", "type": "Any"}, {"lineNumber": 163, "col_offset": 32, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 164, "col_offset": 56, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "import_plugins", "type": "Callable[[], None]"}, {"lineNumber": 167, "col_offset": 36, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 168, "col_offset": 31, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 181, "col_offset": 32, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "pip_install", "type": "Callable[..., contextlib._GeneratorContextManager[nothing]]"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "project_a_fixtures_root", "type": "Any"}, {"lineNumber": 185, "col_offset": 32, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "assertSetEqual", "type": "Any"}, {"lineNumber": 186, "col_offset": 56, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 188, "col_offset": 12, "nodeName": "import_plugins", "type": "Callable[[], None]"}, {"lineNumber": 189, "col_offset": 36, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 190, "col_offset": 31, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 192, "col_offset": 32, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 196, "col_offset": 32, "nodeName": "Subcommand", "type": "Type[allennlp.commands.subcommand.Subcommand]"}, {"lineNumber": 197, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 201, "col_offset": 32, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 202, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 204, "col_offset": 13, "nodeName": "pip_install", "type": "Callable[..., contextlib._GeneratorContextManager[nothing]]"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "project_a_fixtures_root", "type": "Any"}, {"lineNumber": 205, "col_offset": 32, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "assertSetEqual", "type": "Any"}, {"lineNumber": 206, "col_offset": 56, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "import_plugins", "type": "Callable[[], None]"}, {"lineNumber": 209, "col_offset": 36, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 210, "col_offset": 31, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 211, "col_offset": 34, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 213, "col_offset": 13, "nodeName": "pip_install", "type": "Callable[..., contextlib._GeneratorContextManager[nothing]]"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "project_c_fixtures_root", "type": "Any"}, {"lineNumber": 214, "col_offset": 32, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "assertSetEqual", "type": "Any"}, {"lineNumber": 215, "col_offset": 56, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "import_plugins", "type": "Callable[[], None]"}, {"lineNumber": 218, "col_offset": 36, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "assertNotIn", "type": "Any"}, {"lineNumber": 219, "col_offset": 34, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "assertIn", "type": "Any"}, {"lineNumber": 220, "col_offset": 31, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 51, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "Subcommand", "type": "Type[allennlp.commands.subcommand.Subcommand]"}, {"lineNumber": 55, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 61, "col_offset": 25, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 68, "col_offset": 36, "nodeName": "Subcommand", "type": "Type[allennlp.commands.subcommand.Subcommand]"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 77, "col_offset": 36, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 81, "col_offset": 36, "nodeName": "Subcommand", "type": "Type[allennlp.commands.subcommand.Subcommand]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 93, "col_offset": 36, "nodeName": "Subcommand", "type": "Type[allennlp.commands.subcommand.Subcommand]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 100, "col_offset": 13, "nodeName": "tempfile", "type": "module"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "dir_util", "type": "module"}, {"lineNumber": 101, "col_offset": 41, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 105, "col_offset": 17, "nodeName": "push_python_project", "type": "Callable[..., contextlib._GeneratorContextManager[nothing]]"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "temp_dir_b", "type": "nothing"}, {"lineNumber": 106, "col_offset": 36, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 60, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "import_plugins", "type": "Callable[[], None]"}, {"lineNumber": 110, "col_offset": 40, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 111, "col_offset": 35, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 121, "col_offset": 25, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 124, "col_offset": 36, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 131, "col_offset": 36, "nodeName": "Subcommand", "type": "Type[allennlp.commands.subcommand.Subcommand]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 144, "col_offset": 25, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 146, "col_offset": 31, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 147, "col_offset": 36, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 153, "col_offset": 36, "nodeName": "Subcommand", "type": "Type[allennlp.commands.subcommand.Subcommand]"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 155, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 162, "col_offset": 25, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 167, "col_offset": 36, "nodeName": "Subcommand", "type": "Type[allennlp.commands.subcommand.Subcommand]"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 170, "col_offset": 17, "nodeName": "pip_install", "type": "Callable[..., contextlib._GeneratorContextManager[nothing]]"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "project_c_fixtures_root", "type": "Any"}, {"lineNumber": 171, "col_offset": 36, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "assertSetEqual", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 82, "nodeName": "available_plugins", "type": "Set[str]"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "import_plugins", "type": "Callable[[], None]"}, {"lineNumber": 175, "col_offset": 40, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 176, "col_offset": 35, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "assertIn", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 35, "nodeName": "subcommands_available", "type": "List[str]"}, {"lineNumber": 184, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 185, "col_offset": 36, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 189, "col_offset": 36, "nodeName": "Subcommand", "type": "Type[allennlp.commands.subcommand.Subcommand]"}, {"lineNumber": 190, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 204, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 205, "col_offset": 36, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 36, "nodeName": "Subcommand", "type": "Type[allennlp.commands.subcommand.Subcommand]"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 214, "col_offset": 36, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 218, "col_offset": 36, "nodeName": "Subcommand", "type": "Type[allennlp.commands.subcommand.Subcommand]"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 220, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "distutils", "type": "module"}, {"lineNumber": 106, "col_offset": 40, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 107, "col_offset": 16, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 110, "col_offset": 40, "nodeName": "Subcommand", "type": "Type[allennlp.commands.subcommand.Subcommand]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 171, "col_offset": 40, "nodeName": "discover_plugins", "type": "Callable[[], Iterable[str]]"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 175, "col_offset": 40, "nodeName": "Subcommand", "type": "Type[allennlp.commands.subcommand.Subcommand]"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "self", "type": "TestPlugins"}, {"lineNumber": 177, "col_offset": 16, "nodeName": "self", "type": "TestPlugins"}]