[{"lineNumber": 9, "col_offset": 20, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "bioul_sequence", "type": "List[str]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "bioul_sequence", "type": "List[str]"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "bioul_sequence", "type": "List[str]"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 147, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 168, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 183, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 13, "col_offset": 16, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 13, "col_offset": 45, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 23, "col_offset": 45, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 29, "col_offset": 45, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 39, "col_offset": 45, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "iob1_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 50, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "iob1_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 60, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "iob1_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 65, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "iob1_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 77, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "SpacyWordSplitter", "type": "Any"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "split_words", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "enumerate_spans", "type": "Callable[..., List[Tuple[int, int]]]"}, {"lineNumber": 85, "col_offset": 43, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "enumerate_spans", "type": "Callable[..., List[Tuple[int, int]]]"}, {"lineNumber": 89, "col_offset": 43, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "enumerate_spans", "type": "Callable[..., List[Tuple[int, int]]]"}, {"lineNumber": 92, "col_offset": 43, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "enumerate_spans", "type": "Callable[..., List[Tuple[int, int]]]"}, {"lineNumber": 99, "col_offset": 43, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "bioul_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 110, "col_offset": 47, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "bioul_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 119, "col_offset": 47, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "to_bioul", "type": "Callable[..., List[str]]"}, {"lineNumber": 128, "col_offset": 45, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "bioul_sequence", "type": "List[str]"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "to_bioul", "type": "Callable[..., List[str]]"}, {"lineNumber": 132, "col_offset": 45, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 133, "col_offset": 15, "nodeName": "bioul_sequence", "type": "List[str]"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "to_bioul", "type": "Callable[..., List[str]]"}, {"lineNumber": 137, "col_offset": 45, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "bioul_sequence", "type": "List[str]"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "bioul_sequence", "type": "List[str]"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 147, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 151, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 162, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 169, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 173, "col_offset": 46, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 185, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 13, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 19, "col_offset": 49, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 35, "col_offset": 49, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 51, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "iob1_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 56, "col_offset": 50, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 66, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 66, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "iob1_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 72, "col_offset": 50, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 89, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 92, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 102, "col_offset": 59, "nodeName": "no_prefixed_punctuation", "type": "Callable[[List[allennlp.data.tokenizers.token.Token]], Any]"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "bioul_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 115, "col_offset": 51, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 119, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "bioul_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 124, "col_offset": 51, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 128, "col_offset": 25, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 132, "col_offset": 25, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 137, "col_offset": 25, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "to_bioul", "type": "Callable[..., List[str]]"}, {"lineNumber": 143, "col_offset": 49, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 147, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 151, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 152, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 157, "col_offset": 50, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 161, "col_offset": 31, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 162, "col_offset": 50, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 165, "col_offset": 50, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 169, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 170, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 173, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 174, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 174, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 179, "col_offset": 50, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 182, "col_offset": 50, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 185, "col_offset": 50, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "self", "type": "SpanUtilsTest"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "self", "type": "SpanUtilsTest"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 55, "col_offset": 13, "nodeName": "self", "type": "SpanUtilsTest"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 56, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 71, "col_offset": 13, "nodeName": "self", "type": "SpanUtilsTest"}, {"lineNumber": 71, "col_offset": 31, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 72, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 95, "col_offset": 44, "nodeName": "List", "type": "Any"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "pos_", "type": "str"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "pos_", "type": "str"}, {"lineNumber": 114, "col_offset": 13, "nodeName": "self", "type": "SpanUtilsTest"}, {"lineNumber": 114, "col_offset": 31, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 115, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 123, "col_offset": 13, "nodeName": "self", "type": "SpanUtilsTest"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 141, "col_offset": 13, "nodeName": "self", "type": "SpanUtilsTest"}, {"lineNumber": 141, "col_offset": 31, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 143, "col_offset": 29, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 156, "col_offset": 13, "nodeName": "self", "type": "SpanUtilsTest"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 157, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 161, "col_offset": 13, "nodeName": "self", "type": "SpanUtilsTest"}, {"lineNumber": 161, "col_offset": 31, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 162, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "self", "type": "SpanUtilsTest"}, {"lineNumber": 164, "col_offset": 31, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 165, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 178, "col_offset": 13, "nodeName": "self", "type": "SpanUtilsTest"}, {"lineNumber": 178, "col_offset": 31, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 181, "col_offset": 13, "nodeName": "self", "type": "SpanUtilsTest"}, {"lineNumber": 181, "col_offset": 31, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 184, "col_offset": 13, "nodeName": "self", "type": "SpanUtilsTest"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 185, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 95, "col_offset": 49, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 97, "col_offset": 19, "nodeName": "tokens", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 97, "col_offset": 49, "nodeName": "tokens", "type": "List[allennlp.data.tokenizers.token.Token]"}]