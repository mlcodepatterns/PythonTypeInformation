[{"lineNumber": 26, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 26, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 26, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 33, "col_offset": 4, "nodeName": "default_implementation", "type": "str"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "Adam", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "SparseAdam", "type": "Any"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "Adagrad", "type": "Any"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "Adadelta", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "SGD", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "RMSprop", "type": "Any"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "Adamax", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "ASGD", "type": "Any"}, {"lineNumber": 26, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "groups", "type": "Any"}, {"lineNumber": 45, "col_offset": 11, "nodeName": "groups", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "optim", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "optim", "type": "Any"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "optim", "type": "Any"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "optim", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "optim", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "optim", "type": "Any"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "optim", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "optim", "type": "Any"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "List", "type": "Any"}, {"lineNumber": 36, "col_offset": 57, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 37, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 41, "col_offset": 12, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "pop", "type": "Any"}, {"lineNumber": 67, "col_offset": 12, "nodeName": "parameter_groups", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "k", "type": "int"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "regex_use_counts", "type": "Dict[Any, int]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "parameter_group_names", "type": "List[Set[Any]]"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "model_parameters", "type": "List[Any]"}, {"lineNumber": 97, "col_offset": 16, "nodeName": "k", "type": "int"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "parameter_groups", "type": "List[Any]"}, {"lineNumber": 112, "col_offset": 44, "nodeName": "parameter_groups", "type": "Any"}, {"lineNumber": 117, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 118, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 120, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 121, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 123, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 124, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "pop_choice", "type": "Callable[..., Any]"}, {"lineNumber": 44, "col_offset": 17, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "param", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "group_index", "type": "None"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "group_options", "type": "Dict[Any, Any]"}, {"lineNumber": 104, "col_offset": 16, "nodeName": "regex", "type": "Any"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "count", "type": "int"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "items", "type": "Callable"}, {"lineNumber": 110, "col_offset": 32, "nodeName": "param", "type": "Any"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 112, "col_offset": 33, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 41, "col_offset": 24, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 41, "col_offset": 50, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 67, "col_offset": 56, "nodeName": "_", "type": "int"}, {"lineNumber": 69, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 69, "col_offset": 31, "nodeName": "groups", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "update", "type": "Any"}, {"lineNumber": 73, "col_offset": 40, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 73, "col_offset": 48, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 73, "col_offset": 58, "nodeName": "_", "type": "int"}, {"lineNumber": 77, "col_offset": 20, "nodeName": "k", "type": "int"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "group_regexes", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 77, "col_offset": 50, "nodeName": "groups", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "regex", "type": "Any"}, {"lineNumber": 87, "col_offset": 19, "nodeName": "group_index", "type": "Optional[int]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 100, "col_offset": 48, "nodeName": "k", "type": "int"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "group_options", "type": "Dict[Any, Any]"}, {"lineNumber": 104, "col_offset": 32, "nodeName": "regex_use_counts", "type": "Dict[Any, int]"}, {"lineNumber": 105, "col_offset": 19, "nodeName": "count", "type": "int"}, {"lineNumber": 110, "col_offset": 57, "nodeName": "model_parameters", "type": "List[Any]"}, {"lineNumber": 112, "col_offset": 15, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 112, "col_offset": 64, "nodeName": "as_dict", "type": "Callable[..., Any]"}, {"lineNumber": 41, "col_offset": 50, "nodeName": "Optimizer", "type": "Type[Optimizer]"}, {"lineNumber": 67, "col_offset": 61, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 70, "col_offset": 43, "nodeName": "as_dict", "type": "Any"}, {"lineNumber": 73, "col_offset": 63, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 78, "col_offset": 33, "nodeName": "group_regexes", "type": "Any"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "append", "type": "Any"}, {"lineNumber": 88, "col_offset": 67, "nodeName": "param", "type": "Any"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "add", "type": "Any"}, {"lineNumber": 89, "col_offset": 59, "nodeName": "name", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "append", "type": "Any"}, {"lineNumber": 92, "col_offset": 58, "nodeName": "param", "type": "Any"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "add", "type": "Callable"}, {"lineNumber": 93, "col_offset": 50, "nodeName": "name", "type": "Any"}, {"lineNumber": 97, "col_offset": 27, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 97, "col_offset": 31, "nodeName": "groups", "type": "Any"}, {"lineNumber": 100, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 101, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "warning", "type": "Callable[..., None]"}, {"lineNumber": 107, "col_offset": 71, "nodeName": "regex", "type": "Any"}, {"lineNumber": 110, "col_offset": 42, "nodeName": "name", "type": "Any"}, {"lineNumber": 110, "col_offset": 48, "nodeName": "param", "type": "Any"}, {"lineNumber": 112, "col_offset": 64, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "parameter_groups", "type": "Any"}, {"lineNumber": 79, "col_offset": 27, "nodeName": "regex", "type": "Any"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "regex_use_counts", "type": "Dict[Any, int]"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "search", "type": "Callable"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "regex", "type": "Any"}, {"lineNumber": 81, "col_offset": 44, "nodeName": "name", "type": "Any"}, {"lineNumber": 84, "col_offset": 28, "nodeName": "group_index", "type": "int"}, {"lineNumber": 84, "col_offset": 42, "nodeName": "k", "type": "int"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "key", "type": "Any"}, {"lineNumber": 98, "col_offset": 51, "nodeName": "val", "type": "Any"}, {"lineNumber": 98, "col_offset": 58, "nodeName": "items", "type": "Any"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "key", "type": "Any"}, {"lineNumber": 101, "col_offset": 33, "nodeName": "parameter_group_names", "type": "List[Set[Any]]"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 67, "col_offset": 67, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 67, "col_offset": 71, "nodeName": "groups", "type": "Any"}, {"lineNumber": 70, "col_offset": 33, "nodeName": "k", "type": "int"}, {"lineNumber": 73, "col_offset": 69, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 73, "col_offset": 73, "nodeName": "groups", "type": "Any"}, {"lineNumber": 80, "col_offset": 28, "nodeName": "regex_use_counts", "type": "Dict[Any, int]"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "re", "type": "module"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "regex_use_counts", "type": "Dict[Any, int]"}, {"lineNumber": 89, "col_offset": 20, "nodeName": "parameter_group_names", "type": "List[Set[Any]]"}, {"lineNumber": 93, "col_offset": 20, "nodeName": "parameter_group_names", "type": "List[Set[Any]]"}, {"lineNumber": 101, "col_offset": 55, "nodeName": "k", "type": "int"}, {"lineNumber": 70, "col_offset": 43, "nodeName": "groups", "type": "Any"}, {"lineNumber": 80, "col_offset": 45, "nodeName": "regex", "type": "Any"}, {"lineNumber": 82, "col_offset": 31, "nodeName": "group_index", "type": "None"}, {"lineNumber": 85, "col_offset": 45, "nodeName": "regex", "type": "Any"}, {"lineNumber": 88, "col_offset": 20, "nodeName": "parameter_groups", "type": "Any"}, {"lineNumber": 89, "col_offset": 42, "nodeName": "group_index", "type": "Optional[int]"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "parameter_groups", "type": "Any"}, {"lineNumber": 98, "col_offset": 58, "nodeName": "parameter_groups", "type": "Any"}, {"lineNumber": 70, "col_offset": 50, "nodeName": "k", "type": "int"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "group_index", "type": "Optional[int]"}, {"lineNumber": 98, "col_offset": 75, "nodeName": "k", "type": "int"}]