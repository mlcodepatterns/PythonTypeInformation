[{"lineNumber": 13, "col_offset": 22, "nodeName": "Module", "type": "Any"}, {"lineNumber": 13, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 13, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "_module", "type": "Any"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "module", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "pass_through", "type": "Union[List[str], List[nothing]]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "reshaped_inputs", "type": "List[Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "some_input", "type": "None"}, {"lineNumber": 39, "col_offset": 11, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "reshaped_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "reshaped_outputs", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "new_size", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "squashed_shape", "type": "List[Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "TimeDistributed"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "pass_through", "type": "List[str]"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "some_input", "type": "Any"}, {"lineNumber": 43, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "value", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "items", "type": "Callable"}, {"lineNumber": 50, "col_offset": 35, "nodeName": "value", "type": "Any"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "_module", "type": "Any"}, {"lineNumber": 54, "col_offset": 11, "nodeName": "some_input", "type": "Optional[Any]"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "view", "type": "Any"}, {"lineNumber": 60, "col_offset": 53, "nodeName": "new_size", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "view", "type": "Any"}, {"lineNumber": 31, "col_offset": 45, "nodeName": "List", "type": "Any"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "_reshape_tensor", "type": "Any"}, {"lineNumber": 35, "col_offset": 48, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 35, "col_offset": 66, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 35, "col_offset": 82, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 40, "col_offset": 25, "nodeName": "inputs", "type": "Tuple[Any, ...]"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "value", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "reshaped_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 41, "nodeName": "reshaped_inputs", "type": "List[Any]"}, {"lineNumber": 52, "col_offset": 60, "nodeName": "reshaped_kwargs", "type": "Dict[str, Any]"}, {"lineNumber": 55, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 67, "col_offset": 11, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 68, "col_offset": 18, "nodeName": "RuntimeError", "type": "Type[RuntimeError]"}, {"lineNumber": 71, "col_offset": 32, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 72, "col_offset": 47, "nodeName": "squashed_shape", "type": "List[Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 31, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "value", "type": "Any"}, {"lineNumber": 44, "col_offset": 33, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 44, "col_offset": 51, "nodeName": "key", "type": "str"}, {"lineNumber": 44, "col_offset": 62, "nodeName": "pass_through", "type": "Union[List[nothing], List[str]]"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "some_input", "type": "Optional[Any]"}, {"lineNumber": 46, "col_offset": 20, "nodeName": "some_input", "type": "Any"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "value", "type": "Any"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "_reshape_tensor", "type": "Any"}, {"lineNumber": 48, "col_offset": 45, "nodeName": "value", "type": "Any"}, {"lineNumber": 50, "col_offset": 28, "nodeName": "key", "type": "str"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "size", "type": "Any"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "size", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 71, "col_offset": 37, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 44, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "some_input", "type": "Optional[Any]"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "reshaped_outputs", "type": "Any"}, {"lineNumber": 60, "col_offset": 18, "nodeName": "reshaped_outputs", "type": "Any"}, {"lineNumber": 68, "col_offset": 62, "nodeName": "input_size", "type": "Any"}, {"lineNumber": 72, "col_offset": 15, "nodeName": "input_tensor", "type": "Any"}]