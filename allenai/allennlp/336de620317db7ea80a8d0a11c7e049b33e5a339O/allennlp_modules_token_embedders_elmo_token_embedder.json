[{"lineNumber": 12, "col_offset": 24, "nodeName": "TokenEmbedder", "type": "Type[allennlp.modules.token_embedders.token_embedder.TokenEmbedder]"}, {"lineNumber": 80, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 83, "col_offset": 81, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 73, "col_offset": 11, "nodeName": "projection_dim", "type": "int"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "elmo_output", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "elmo_representations", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "_projection", "type": "Any"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "elmo_representations", "type": "Any"}, {"lineNumber": 83, "col_offset": 81, "nodeName": "torch", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "options_file", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "weight_file", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "do_layer_norm", "type": "bool"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "dropout", "type": "float"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "namespace_to_cache", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "projection_dim", "type": "int"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "scalar_mix_parameters", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 63, "col_offset": 21, "nodeName": "Elmo", "type": "Type[allennlp.modules.elmo.Elmo]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "options_file", "type": "str"}, {"lineNumber": 65, "col_offset": 12, "nodeName": "weight_file", "type": "str"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "_projection", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "output_dim", "type": "int"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "projection_dim", "type": "int"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "_projection", "type": "None"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "output_dim", "type": "Any"}, {"lineNumber": 81, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 83, "col_offset": 57, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "_elmo", "type": "Any"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "word_inputs", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "projection", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "_projection", "type": "Any"}, {"lineNumber": 102, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "elmo_representations", "type": "Any"}, {"lineNumber": 110, "col_offset": 20, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 110, "col_offset": 40, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "add_file_to_archive", "type": "Callable[[str], None]"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "add_file_to_archive", "type": "Callable[[str], None]"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "pop", "type": "Any"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "pop", "type": "Any"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "pop", "type": "Any"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "pop_bool", "type": "Callable[..., bool]"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "pop_float", "type": "Callable[..., float]"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "pop", "type": "Any"}, {"lineNumber": 121, "col_offset": 11, "nodeName": "namespace_to_cache", "type": "Any"}, {"lineNumber": 122, "col_offset": 12, "nodeName": "vocab_to_cache", "type": "List[str]"}, {"lineNumber": 124, "col_offset": 12, "nodeName": "vocab_to_cache", "type": "None"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "pop_int", "type": "Callable[..., int]"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "pop", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "assert_empty", "type": "Callable[[str], None]"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 128, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 59, "col_offset": 31, "nodeName": "List", "type": "Any"}, {"lineNumber": 67, "col_offset": 26, "nodeName": "do_layer_norm", "type": "bool"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "dropout", "type": "float"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "requires_grad", "type": "bool"}, {"lineNumber": 70, "col_offset": 27, "nodeName": "vocab_to_cache", "type": "List[str]"}, {"lineNumber": 71, "col_offset": 34, "nodeName": "scalar_mix_parameters", "type": "List[float]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 74, "col_offset": 76, "nodeName": "projection_dim", "type": "int"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "get_output_dim", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 83, "col_offset": 57, "nodeName": "torch", "type": "Any"}, {"lineNumber": 98, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 31, "nodeName": "elmo_output", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "projection", "type": "allennlp.modules.time_distributed.TimeDistributed"}, {"lineNumber": 104, "col_offset": 35, "nodeName": "projection", "type": "Union[allennlp.modules.time_distributed.TimeDistributed, Any]"}, {"lineNumber": 104, "col_offset": 46, "nodeName": "elmo_representations", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 115, "col_offset": 23, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 118, "col_offset": 24, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 119, "col_offset": 18, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 120, "col_offset": 29, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 122, "col_offset": 29, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 126, "col_offset": 32, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "cls", "type": "Any"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "options_file", "type": "Any"}, {"lineNumber": 130, "col_offset": 24, "nodeName": "weight_file", "type": "Any"}, {"lineNumber": 131, "col_offset": 26, "nodeName": "do_layer_norm", "type": "bool"}, {"lineNumber": 132, "col_offset": 20, "nodeName": "dropout", "type": "float"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "projection_dim", "type": "int"}, {"lineNumber": 135, "col_offset": 27, "nodeName": "vocab_to_cache", "type": "Optional[List[str]]"}, {"lineNumber": 136, "col_offset": 34, "nodeName": "scalar_mix_parameters", "type": "Any"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 74, "col_offset": 47, "nodeName": "get_output_dim", "type": "Callable[[], Any]"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "_elmo", "type": "allennlp.modules.elmo.Elmo"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 103, "col_offset": 45, "nodeName": "projection", "type": "Any"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 74, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 74, "col_offset": 47, "nodeName": "_elmo", "type": "allennlp.modules.elmo.Elmo"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "dim", "type": "Any"}, {"lineNumber": 74, "col_offset": 47, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "elmo_representations", "type": "Any"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "get_token_to_index_vocabulary", "type": "Callable[..., Dict[str, int]]"}, {"lineNumber": 122, "col_offset": 70, "nodeName": "namespace_to_cache", "type": "Any"}, {"lineNumber": 122, "col_offset": 34, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}]