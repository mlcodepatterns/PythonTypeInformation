[{"lineNumber": 22, "col_offset": 11, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "_text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "_matrix_attention", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "_projection_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "projection_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "_inference_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 77, "col_offset": 34, "nodeName": "inference_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "dropout", "type": "float"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "_output_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 86, "col_offset": 35, "nodeName": "output_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "_output_logit", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 87, "col_offset": 29, "nodeName": "output_logit", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "_num_labels", "type": "int"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "_accuracy", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "_loss", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "embedded_premise", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "embedded_hypothesis", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "premise_mask", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "hypothesis_mask", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "rnn_input_dropout", "type": "Any"}, {"lineNumber": 160, "col_offset": 8, "nodeName": "encoded_premise", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "encoded_hypothesis", "type": "Any"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "similarity_matrix", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "p2h_attention", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "attended_hypothesis", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "h2p_attention", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "attended_premise", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "projected_enhanced_premise", "type": "Any"}, {"lineNumber": 199, "col_offset": 8, "nodeName": "projected_enhanced_hypothesis", "type": "Any"}, {"lineNumber": 202, "col_offset": 11, "nodeName": "rnn_input_dropout", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "v_ai", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "v_bi", "type": "Any"}, {"lineNumber": 222, "col_offset": 8, "nodeName": "v_all", "type": "Any"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "output_hidden", "type": "Any"}, {"lineNumber": 229, "col_offset": 8, "nodeName": "label_logits", "type": "Any"}, {"lineNumber": 230, "col_offset": 8, "nodeName": "label_probs", "type": "Any"}, {"lineNumber": 232, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 239, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 121, "col_offset": 9, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 241, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 69, "col_offset": 32, "nodeName": "regularizer", "type": "Optional[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 33, "nodeName": "LegacyMatrixAttention", "type": "Any"}, {"lineNumber": 74, "col_offset": 55, "nodeName": "similarity_function", "type": "allennlp.modules.similarity_functions.similarity_function.SimilarityFunction"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "rnn_input_dropout", "type": "allennlp.modules.input_variational_dropout.InputVariationalDropout"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "dropout", "type": "None"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "rnn_input_dropout", "type": "None"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "get_vocab_size", "type": "Callable[..., int]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "check_dimensions_match", "type": "Callable[[int, int, str, str], None]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "check_dimensions_match", "type": "Callable[[int, int, str, str], None]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "check_dimensions_match", "type": "Callable[[int, int, str, str], None]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "CategoricalAccuracy", "type": "Any"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "CrossEntropyLoss", "type": "Any"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 113, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 149, "col_offset": 53, "nodeName": "premise", "type": "Dict[str, Any]"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 150, "col_offset": 56, "nodeName": "hypothesis", "type": "Dict[str, Any]"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "float", "type": "Any"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "float", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "embedded_premise", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "embedded_hypothesis", "type": "Any"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "_encoder", "type": "Any"}, {"lineNumber": 160, "col_offset": 40, "nodeName": "embedded_premise", "type": "Any"}, {"lineNumber": 160, "col_offset": 58, "nodeName": "premise_mask", "type": "Any"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "_encoder", "type": "Any"}, {"lineNumber": 161, "col_offset": 43, "nodeName": "embedded_hypothesis", "type": "Any"}, {"lineNumber": 161, "col_offset": 64, "nodeName": "hypothesis_mask", "type": "Any"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "_matrix_attention", "type": "Any"}, {"lineNumber": 164, "col_offset": 51, "nodeName": "encoded_premise", "type": "Any"}, {"lineNumber": 164, "col_offset": 68, "nodeName": "encoded_hypothesis", "type": "Any"}, {"lineNumber": 167, "col_offset": 24, "nodeName": "masked_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 39, "nodeName": "similarity_matrix", "type": "Any"}, {"lineNumber": 167, "col_offset": 58, "nodeName": "hypothesis_mask", "type": "Any"}, {"lineNumber": 169, "col_offset": 30, "nodeName": "weighted_sum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 169, "col_offset": 43, "nodeName": "encoded_hypothesis", "type": "Any"}, {"lineNumber": 169, "col_offset": 63, "nodeName": "p2h_attention", "type": "Any"}, {"lineNumber": 172, "col_offset": 24, "nodeName": "masked_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 172, "col_offset": 87, "nodeName": "premise_mask", "type": "Any"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "weighted_sum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 174, "col_offset": 40, "nodeName": "encoded_premise", "type": "Any"}, {"lineNumber": 174, "col_offset": 57, "nodeName": "h2p_attention", "type": "Any"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "cat", "type": "Any"}, {"lineNumber": 186, "col_offset": 30, "nodeName": "cat", "type": "Any"}, {"lineNumber": 198, "col_offset": 37, "nodeName": "_projection_feedforward", "type": "Any"}, {"lineNumber": 198, "col_offset": 66, "nodeName": "premise_enhanced", "type": "Any"}, {"lineNumber": 199, "col_offset": 40, "nodeName": "_projection_feedforward", "type": "Any"}, {"lineNumber": 199, "col_offset": 69, "nodeName": "hypothesis_enhanced", "type": "Any"}, {"lineNumber": 202, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "projected_enhanced_premise", "type": "Any"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "projected_enhanced_hypothesis", "type": "Any"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "_inference_encoder", "type": "Any"}, {"lineNumber": 205, "col_offset": 39, "nodeName": "projected_enhanced_premise", "type": "Any"}, {"lineNumber": 205, "col_offset": 67, "nodeName": "premise_mask", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "_inference_encoder", "type": "Any"}, {"lineNumber": 206, "col_offset": 39, "nodeName": "projected_enhanced_hypothesis", "type": "Any"}, {"lineNumber": 206, "col_offset": 70, "nodeName": "hypothesis_mask", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "v_a_max", "type": "Any"}, {"lineNumber": 210, "col_offset": 17, "nodeName": "_", "type": "Any"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "max", "type": "Any"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "v_b_max", "type": "Any"}, {"lineNumber": 211, "col_offset": 17, "nodeName": "_", "type": "Any"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "max", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "cat", "type": "Any"}, {"lineNumber": 225, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "v_all", "type": "Any"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "_output_feedforward", "type": "Any"}, {"lineNumber": 228, "col_offset": 49, "nodeName": "v_all", "type": "Any"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "_output_logit", "type": "Any"}, {"lineNumber": 229, "col_offset": 42, "nodeName": "output_hidden", "type": "Any"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 230, "col_offset": 50, "nodeName": "label_logits", "type": "Any"}, {"lineNumber": 232, "col_offset": 39, "nodeName": "label_logits", "type": "Any"}, {"lineNumber": 232, "col_offset": 68, "nodeName": "label_probs", "type": "Any"}, {"lineNumber": 234, "col_offset": 11, "nodeName": "label", "type": "Any"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 237, "col_offset": 34, "nodeName": "loss", "type": "Any"}, {"lineNumber": 241, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 67, "col_offset": 21, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 80, "col_offset": 44, "nodeName": "dropout", "type": "float"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 37, "nodeName": "InputVariationalDropout", "type": "Type[allennlp.modules.input_variational_dropout.InputVariationalDropout]"}, {"lineNumber": 81, "col_offset": 61, "nodeName": "dropout", "type": "float"}, {"lineNumber": 83, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 89, "col_offset": 27, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 120, "col_offset": 18, "nodeName": "List", "type": "Any"}, {"lineNumber": 149, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "rnn_input_dropout", "type": "Any"}, {"lineNumber": 156, "col_offset": 54, "nodeName": "embedded_premise", "type": "Any"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "rnn_input_dropout", "type": "Any"}, {"lineNumber": 157, "col_offset": 57, "nodeName": "embedded_hypothesis", "type": "Any"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 39, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 179, "col_offset": 16, "nodeName": "encoded_premise", "type": "Any"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "attended_hypothesis", "type": "Any"}, {"lineNumber": 186, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 188, "col_offset": 16, "nodeName": "encoded_hypothesis", "type": "Any"}, {"lineNumber": 189, "col_offset": 16, "nodeName": "attended_premise", "type": "Any"}, {"lineNumber": 198, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 199, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 203, "col_offset": 41, "nodeName": "rnn_input_dropout", "type": "Any"}, {"lineNumber": 203, "col_offset": 64, "nodeName": "projected_enhanced_premise", "type": "Any"}, {"lineNumber": 204, "col_offset": 44, "nodeName": "rnn_input_dropout", "type": "Any"}, {"lineNumber": 204, "col_offset": 67, "nodeName": "projected_enhanced_hypothesis", "type": "Any"}, {"lineNumber": 205, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 206, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "sum", "type": "Any"}, {"lineNumber": 213, "col_offset": 72, "nodeName": "sum", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "premise_mask", "type": "Any"}, {"lineNumber": 216, "col_offset": 18, "nodeName": "sum", "type": "Any"}, {"lineNumber": 216, "col_offset": 75, "nodeName": "sum", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "hypothesis_mask", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 222, "col_offset": 27, "nodeName": "v_a_avg", "type": "Any"}, {"lineNumber": 222, "col_offset": 36, "nodeName": "v_a_max", "type": "Any"}, {"lineNumber": 222, "col_offset": 45, "nodeName": "v_b_avg", "type": "Any"}, {"lineNumber": 222, "col_offset": 54, "nodeName": "v_b_max", "type": "Any"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "dropout", "type": "Any"}, {"lineNumber": 226, "col_offset": 33, "nodeName": "v_all", "type": "Any"}, {"lineNumber": 228, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 229, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "functional", "type": "Any"}, {"lineNumber": 235, "col_offset": 19, "nodeName": "_loss", "type": "Any"}, {"lineNumber": 235, "col_offset": 30, "nodeName": "label_logits", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "_accuracy", "type": "Any"}, {"lineNumber": 236, "col_offset": 27, "nodeName": "label_logits", "type": "Any"}, {"lineNumber": 236, "col_offset": 41, "nodeName": "label", "type": "Any"}, {"lineNumber": 237, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 121, "col_offset": 14, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 242, "col_offset": 54, "nodeName": "reset", "type": "bool"}, {"lineNumber": 241, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 241, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "RegularizerApplicator", "type": "Type[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "nn", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "projection_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "projection_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "inference_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 111, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 151, "col_offset": 23, "nodeName": "get_text_field_mask", "type": "Callable[..., Any]"}, {"lineNumber": 151, "col_offset": 43, "nodeName": "premise", "type": "Dict[str, Any]"}, {"lineNumber": 152, "col_offset": 26, "nodeName": "get_text_field_mask", "type": "Callable[..., Any]"}, {"lineNumber": 152, "col_offset": 46, "nodeName": "hypothesis", "type": "Dict[str, Any]"}, {"lineNumber": 156, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "encoded_premise", "type": "Any"}, {"lineNumber": 181, "col_offset": 34, "nodeName": "attended_hypothesis", "type": "Any"}, {"lineNumber": 182, "col_offset": 16, "nodeName": "encoded_premise", "type": "Any"}, {"lineNumber": 182, "col_offset": 34, "nodeName": "attended_hypothesis", "type": "Any"}, {"lineNumber": 190, "col_offset": 16, "nodeName": "encoded_hypothesis", "type": "Any"}, {"lineNumber": 190, "col_offset": 37, "nodeName": "attended_premise", "type": "Any"}, {"lineNumber": 191, "col_offset": 16, "nodeName": "encoded_hypothesis", "type": "Any"}, {"lineNumber": 191, "col_offset": 37, "nodeName": "attended_premise", "type": "Any"}, {"lineNumber": 203, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 204, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 210, "col_offset": 43, "nodeName": "v_ai", "type": "Any"}, {"lineNumber": 211, "col_offset": 21, "nodeName": "replace_masked_values", "type": "Callable[[Any, Any, Union[float, int]], Any]"}, {"lineNumber": 211, "col_offset": 43, "nodeName": "v_bi", "type": "Any"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "v_ai", "type": "Any"}, {"lineNumber": 213, "col_offset": 72, "nodeName": "torch", "type": "Any"}, {"lineNumber": 216, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 216, "col_offset": 28, "nodeName": "v_bi", "type": "Any"}, {"lineNumber": 216, "col_offset": 75, "nodeName": "torch", "type": "Any"}, {"lineNumber": 226, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 235, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 235, "col_offset": 44, "nodeName": "view", "type": "Any"}, {"lineNumber": 236, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 121, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "_accuracy", "type": "Any"}, {"lineNumber": 80, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 120, "col_offset": 23, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 172, "col_offset": 39, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 210, "col_offset": 49, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 211, "col_offset": 49, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 216, "col_offset": 35, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 230, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 242, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 172, "col_offset": 39, "nodeName": "similarity_matrix", "type": "Any"}, {"lineNumber": 210, "col_offset": 49, "nodeName": "premise_mask", "type": "Any"}, {"lineNumber": 211, "col_offset": 49, "nodeName": "hypothesis_mask", "type": "Any"}, {"lineNumber": 213, "col_offset": 35, "nodeName": "premise_mask", "type": "Any"}, {"lineNumber": 216, "col_offset": 35, "nodeName": "hypothesis_mask", "type": "Any"}, {"lineNumber": 235, "col_offset": 44, "nodeName": "long", "type": "Any"}, {"lineNumber": 120, "col_offset": 28, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 120, "col_offset": 33, "nodeName": "Any", "type": "Any"}, {"lineNumber": 235, "col_offset": 44, "nodeName": "label", "type": "Any"}]