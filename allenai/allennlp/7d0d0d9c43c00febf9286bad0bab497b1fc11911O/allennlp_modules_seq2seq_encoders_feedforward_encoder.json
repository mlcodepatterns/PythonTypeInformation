[{"lineNumber": 9, "col_offset": 25, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 19, "col_offset": 31, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 23, "col_offset": 32, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 31, "col_offset": 78, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 16, "col_offset": 28, "nodeName": "feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 31, "col_offset": 78, "nodeName": "torch", "type": "Any"}, {"lineNumber": 14, "col_offset": 36, "nodeName": "FeedForward", "type": "Type[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "get_input_dim", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 31, "col_offset": 50, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 44, "col_offset": 11, "nodeName": "mask", "type": "Any"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "_feedforward", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "_feedforward", "type": "Any"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 31, "col_offset": 50, "nodeName": "torch", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "_feedforward", "type": "Any"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "_feedforward", "type": "Any"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "outputs", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 45, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "float", "type": "Any"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "mask", "type": "Any"}]