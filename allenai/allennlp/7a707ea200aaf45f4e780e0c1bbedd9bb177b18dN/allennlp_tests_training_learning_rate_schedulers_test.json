[{"lineNumber": 228, "col_offset": 0, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 15, "col_offset": 33, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 258, "col_offset": 28, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 237, "col_offset": 4, "nodeName": "has_increasing_segment", "type": "bool"}, {"lineNumber": 238, "col_offset": 4, "nodeName": "has_decreasing_segment", "type": "bool"}, {"lineNumber": 239, "col_offset": 8, "nodeName": "k", "type": "int"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "optim", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "sched", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "cosine_schedule_cases", "type": "List[Union[Tuple[int, Dict[str, Union[float, int, str]], List[Tuple[int, float]], List[int]], Tuple[int, Dict[str, Union[float, int, str]], List[Tuple[int, float]], List[nothing]], Tuple[int, Dict[str, Union[int, str]], List[Tuple[int, float]], List[nothing]]]]"}, {"lineNumber": 206, "col_offset": 54, "nodeName": "cosine_schedule_cases", "type": "List[Union[Tuple[int, Dict[str, Union[float, int, str]], List[Tuple[int, float]], List[int]], Tuple[int, Dict[str, Union[float, int, str]], List[Tuple[int, float]], List[nothing]], Tuple[int, Dict[str, Union[int, str]], List[Tuple[int, float]], List[nothing]]]]"}, {"lineNumber": 239, "col_offset": 13, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "delta", "type": "float"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "has_increasing_segment", "type": "bool"}, {"lineNumber": 255, "col_offset": 38, "nodeName": "has_decreasing_segment", "type": "bool"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "optimizer_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 273, "col_offset": 8, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 275, "col_offset": 8, "nodeName": "scheduler", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]"}, {"lineNumber": 276, "col_offset": 8, "nodeName": "lrs", "type": "List[List[Any]]"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "batch_num_total", "type": "int"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "epoch", "type": "int"}, {"lineNumber": 292, "col_offset": 15, "nodeName": "lrs", "type": "List[List[Any]]"}, {"lineNumber": 305, "col_offset": 8, "nodeName": "optim", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 383, "col_offset": 33, "nodeName": "slanted_triangular_cases", "type": "List[Tuple[Dict[str, Any], List[Tuple[int, float]]]]"}, {"lineNumber": 395, "col_offset": 12, "nodeName": "gradual_unfreezing", "type": "bool"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 19, "col_offset": 54, "nodeName": "context", "type": "unittest.case._AssertRaisesContext[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "assertTrue", "type": "Callable[..., None]"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "step", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "step_batch", "type": "Callable[[Optional[int]], None]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 158, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "_get_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "t_initial", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "_initialized", "type": "Any"}, {"lineNumber": 178, "col_offset": 12, "nodeName": "epochs", "type": "int"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "params", "type": "Union[Dict[str, Union[float, int, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 178, "col_offset": 28, "nodeName": "lr_checks", "type": "List[Tuple[int, float]]"}, {"lineNumber": 178, "col_offset": 39, "nodeName": "_", "type": "Union[List[int], List[nothing]]"}, {"lineNumber": 178, "col_offset": 44, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 182, "col_offset": 12, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "epoch", "type": "int"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "lr_checks", "type": "List[Tuple[int, float]]"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "scheduler", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]"}, {"lineNumber": 204, "col_offset": 19, "nodeName": "scheduler", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 206, "col_offset": 20, "nodeName": "params", "type": "Any"}, {"lineNumber": 206, "col_offset": 28, "nodeName": "lr_checks", "type": "Any"}, {"lineNumber": 206, "col_offset": 39, "nodeName": "checkpoints", "type": "Any"}, {"lineNumber": 206, "col_offset": 54, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "scheduler", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]"}, {"lineNumber": 209, "col_offset": 12, "nodeName": "state", "type": "Any"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 212, "col_offset": 16, "nodeName": "epoch", "type": "int"}, {"lineNumber": 224, "col_offset": 26, "nodeName": "lr_checks", "type": "Any"}, {"lineNumber": 228, "col_offset": 34, "nodeName": "List", "type": "Any"}, {"lineNumber": 239, "col_offset": 22, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 239, "col_offset": 26, "nodeName": "learning_rates", "type": "List[float]"}, {"lineNumber": 241, "col_offset": 11, "nodeName": "delta", "type": "float"}, {"lineNumber": 242, "col_offset": 12, "nodeName": "has_increasing_segment", "type": "bool"}, {"lineNumber": 243, "col_offset": 15, "nodeName": "has_decreasing_segment", "type": "bool"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 262, "col_offset": 21, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 267, "col_offset": 33, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 268, "col_offset": 27, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "optimizer_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 270, "col_offset": 68, "nodeName": "optimizer_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 273, "col_offset": 20, "nodeName": "_get_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 274, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 275, "col_offset": 20, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 275, "col_offset": 54, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 279, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 280, "col_offset": 16, "nodeName": "_", "type": "int"}, {"lineNumber": 298, "col_offset": 15, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "_get_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "num_epochs", "type": "Any"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "num_steps_per_epoch", "type": "Any"}, {"lineNumber": 316, "col_offset": 15, "nodeName": "gradual_unfreezing", "type": "Any"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "freezing_current", "type": "Any"}, {"lineNumber": 383, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 383, "col_offset": 20, "nodeName": "lr_checks", "type": "List[Tuple[int, float]]"}, {"lineNumber": 384, "col_offset": 12, "nodeName": "lrs", "type": "List[List[Any]]"}, {"lineNumber": 386, "col_offset": 33, "nodeName": "lr_checks", "type": "List[Tuple[int, float]]"}, {"lineNumber": 396, "col_offset": 16, "nodeName": "discriminative_fine_tuning", "type": "bool"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 18, "col_offset": 36, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 19, "col_offset": 31, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "LearningRateSchedulersTest"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 29, "col_offset": 36, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 36, "col_offset": 14, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 38, "col_offset": 48, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "lrs", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "nn", "type": "Any"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 43, "col_offset": 48, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "lrs", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "lrs", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 54, "col_offset": 41, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 159, "col_offset": 15, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 159, "col_offset": 68, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 164, "col_offset": 50, "nodeName": "optim", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 166, "col_offset": 15, "nodeName": "sched", "type": "Any"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "sched", "type": "Any"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 172, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 174, "col_offset": 46, "nodeName": "optim", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "_get_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "params", "type": "Union[Dict[str, Union[float, int, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 183, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 183, "col_offset": 31, "nodeName": "epochs", "type": "int"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "it", "type": "int"}, {"lineNumber": 187, "col_offset": 20, "nodeName": "lr", "type": "float"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 201, "col_offset": 58, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 202, "col_offset": 15, "nodeName": "state_dict", "type": "Dict[str, Any]"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "_get_optimizer", "type": "Callable[..., Any]"}, {"lineNumber": 208, "col_offset": 24, "nodeName": "init_and_restore_scheduler", "type": "Callable[..., Any]"}, {"lineNumber": 208, "col_offset": 51, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 208, "col_offset": 62, "nodeName": "params", "type": "Any"}, {"lineNumber": 209, "col_offset": 20, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 212, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 212, "col_offset": 31, "nodeName": "epochs", "type": "Any"}, {"lineNumber": 222, "col_offset": 16, "nodeName": "state", "type": "Any"}, {"lineNumber": 224, "col_offset": 16, "nodeName": "it", "type": "Any"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "lr", "type": "Any"}, {"lineNumber": 228, "col_offset": 39, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 240, "col_offset": 16, "nodeName": "learning_rates", "type": "List[float]"}, {"lineNumber": 240, "col_offset": 36, "nodeName": "learning_rates", "type": "List[float]"}, {"lineNumber": 246, "col_offset": 13, "nodeName": "delta", "type": "float"}, {"lineNumber": 262, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 262, "col_offset": 41, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 268, "col_offset": 56, "nodeName": "lr", "type": "float"}, {"lineNumber": 269, "col_offset": 68, "nodeName": "m", "type": "Any"}, {"lineNumber": 269, "col_offset": 73, "nodeName": "_modules", "type": "Any"}, {"lineNumber": 270, "col_offset": 15, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 270, "col_offset": 37, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 273, "col_offset": 20, "nodeName": "self", "type": "SlantedTriangularTest"}, {"lineNumber": 275, "col_offset": 20, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 275, "col_offset": 65, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 275, "col_offset": 72, "nodeName": "params", "type": "Any"}, {"lineNumber": 279, "col_offset": 27, "nodeName": "params", "type": "Any"}, {"lineNumber": 280, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 280, "col_offset": 27, "nodeName": "num_steps_per_epoch", "type": "Any"}, {"lineNumber": 281, "col_offset": 16, "nodeName": "batch_num_total", "type": "int"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "step", "type": "Any"}, {"lineNumber": 290, "col_offset": 33, "nodeName": "epoch", "type": "int"}, {"lineNumber": 295, "col_offset": 19, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 296, "col_offset": 19, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 297, "col_offset": 19, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 300, "col_offset": 19, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 305, "col_offset": 16, "nodeName": "self", "type": "SlantedTriangularTest"}, {"lineNumber": 306, "col_offset": 16, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 307, "col_offset": 16, "nodeName": "optim", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 314, "col_offset": 15, "nodeName": "sched", "type": "Any"}, {"lineNumber": 315, "col_offset": 15, "nodeName": "sched", "type": "Any"}, {"lineNumber": 316, "col_offset": 15, "nodeName": "sched", "type": "Any"}, {"lineNumber": 317, "col_offset": 15, "nodeName": "sched", "type": "Any"}, {"lineNumber": 319, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 319, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 322, "col_offset": 53, "nodeName": "ratio", "type": "Any"}, {"lineNumber": 323, "col_offset": 53, "nodeName": "ratio", "type": "Any"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 325, "col_offset": 31, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 327, "col_offset": 46, "nodeName": "optim", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 329, "col_offset": 20, "nodeName": "optim", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 384, "col_offset": 18, "nodeName": "_run_scheduler_get_lrs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 384, "col_offset": 46, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 386, "col_offset": 16, "nodeName": "it", "type": "Union[int, float]"}, {"lineNumber": 386, "col_offset": 20, "nodeName": "layer", "type": "Union[int, float]"}, {"lineNumber": 386, "col_offset": 27, "nodeName": "lr", "type": "Union[int, float]"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "lr_check", "type": "float"}, {"lineNumber": 388, "col_offset": 16, "nodeName": "lr", "type": "float"}, {"lineNumber": 397, "col_offset": 20, "nodeName": "num_actual_steps_per_epoch", "type": "int"}, {"lineNumber": 18, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 18, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 19, "col_offset": 13, "nodeName": "self", "type": "LearningRateSchedulersTest"}, {"lineNumber": 26, "col_offset": 19, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "exception", "type": "allennlp.common.checks.ConfigurationError"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 29, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 35, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 36, "col_offset": 48, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 36, "col_offset": 70, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 37, "col_offset": 70, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 42, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 43, "col_offset": 48, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 43, "col_offset": 70, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 44, "col_offset": 70, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 53, "col_offset": 14, "nodeName": "CosineWithRestartsTest", "type": "Type[CosineWithRestartsTest]"}, {"lineNumber": 53, "col_offset": 38, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 54, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 54, "col_offset": 41, "nodeName": "nn", "type": "Any"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "model", "type": "Any"}, {"lineNumber": 159, "col_offset": 97, "nodeName": "lr", "type": "float"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 164, "col_offset": 57, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 172, "col_offset": 13, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 174, "col_offset": 53, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 181, "col_offset": 58, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 184, "col_offset": 31, "nodeName": "epoch", "type": "int"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 188, "col_offset": 34, "nodeName": "lr", "type": "float"}, {"lineNumber": 195, "col_offset": 51, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 201, "col_offset": 24, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 201, "col_offset": 69, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 201, "col_offset": 76, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 203, "col_offset": 55, "nodeName": "state_dict", "type": "Dict[str, Any]"}, {"lineNumber": 207, "col_offset": 24, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 209, "col_offset": 20, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 213, "col_offset": 19, "nodeName": "epoch", "type": "int"}, {"lineNumber": 213, "col_offset": 28, "nodeName": "checkpoints", "type": "Any"}, {"lineNumber": 215, "col_offset": 20, "nodeName": "scheduler", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "step", "type": "Any"}, {"lineNumber": 218, "col_offset": 34, "nodeName": "epoch", "type": "int"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 225, "col_offset": 34, "nodeName": "lr", "type": "Any"}, {"lineNumber": 240, "col_offset": 31, "nodeName": "k", "type": "int"}, {"lineNumber": 247, "col_offset": 19, "nodeName": "has_increasing_segment", "type": "bool"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 261, "col_offset": 14, "nodeName": "SlantedTriangularTest", "type": "Type[SlantedTriangularTest]"}, {"lineNumber": 261, "col_offset": 37, "nodeName": "self", "type": "SlantedTriangularTest"}, {"lineNumber": 262, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 269, "col_offset": 73, "nodeName": "model", "type": "Any"}, {"lineNumber": 270, "col_offset": 37, "nodeName": "model", "type": "Any"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "step_batch", "type": "Callable[[Optional[int]], None]"}, {"lineNumber": 286, "col_offset": 37, "nodeName": "batch_num_total", "type": "int"}, {"lineNumber": 288, "col_offset": 27, "nodeName": "freezing_current", "type": "Any"}, {"lineNumber": 290, "col_offset": 12, "nodeName": "scheduler", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]"}, {"lineNumber": 306, "col_offset": 16, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 307, "col_offset": 23, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 319, "col_offset": 19, "nodeName": "optim", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 321, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 322, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 322, "col_offset": 53, "nodeName": "sched", "type": "Any"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 323, "col_offset": 53, "nodeName": "sched", "type": "Any"}, {"lineNumber": 325, "col_offset": 13, "nodeName": "self", "type": "SlantedTriangularTest"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 327, "col_offset": 53, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 330, "col_offset": 20, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 384, "col_offset": 18, "nodeName": "self", "type": "SlantedTriangularTest"}, {"lineNumber": 384, "col_offset": 54, "nodeName": "params", "type": "Dict[str, Any]"}, {"lineNumber": 387, "col_offset": 27, "nodeName": "round", "type": "Callable"}, {"lineNumber": 387, "col_offset": 33, "nodeName": "lr", "type": "Union[int, float]"}, {"lineNumber": 388, "col_offset": 21, "nodeName": "round", "type": "Callable"}, {"lineNumber": 389, "col_offset": 23, "nodeName": "lr", "type": "float"}, {"lineNumber": 389, "col_offset": 29, "nodeName": "lr_check", "type": "float"}, {"lineNumber": 402, "col_offset": 20, "nodeName": "lrs", "type": "List[List[Any]]"}, {"lineNumber": 403, "col_offset": 20, "nodeName": "first_layer_lrs", "type": "List[Any]"}, {"lineNumber": 404, "col_offset": 20, "nodeName": "second_layer_lrs", "type": "List[Any]"}, {"lineNumber": 406, "col_offset": 23, "nodeName": "gradual_unfreezing", "type": "bool"}, {"lineNumber": 18, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "from_params", "type": "Callable[[Any, Any, allennlp.common.params.Params], Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]]"}, {"lineNumber": 26, "col_offset": 23, "nodeName": "context", "type": "unittest.case._AssertRaisesContext[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 29, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 30, "col_offset": 42, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 32, "col_offset": 42, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 35, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 36, "col_offset": 70, "nodeName": "model", "type": "Any"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 43, "col_offset": 70, "nodeName": "model", "type": "Any"}, {"lineNumber": 54, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 159, "col_offset": 37, "nodeName": "self", "type": "CosineWithRestartsTest"}, {"lineNumber": 170, "col_offset": 15, "nodeName": "optim", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 181, "col_offset": 69, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 181, "col_offset": 76, "nodeName": "params", "type": "Union[Dict[str, Union[float, int, str]], Dict[str, Union[int, str]]]"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "scheduler", "type": "Any"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 188, "col_offset": 23, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 209, "col_offset": 20, "nodeName": "scheduler", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper]"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 215, "col_offset": 32, "nodeName": "init_and_restore_scheduler", "type": "Callable[..., Any]"}, {"lineNumber": 215, "col_offset": 59, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 215, "col_offset": 70, "nodeName": "params", "type": "Any"}, {"lineNumber": 218, "col_offset": 16, "nodeName": "scheduler", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper]"}, {"lineNumber": 219, "col_offset": 16, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 225, "col_offset": 23, "nodeName": "lrs", "type": "List[Any]"}, {"lineNumber": 240, "col_offset": 51, "nodeName": "k", "type": "int"}, {"lineNumber": 269, "col_offset": 73, "nodeName": "self", "type": "SlantedTriangularTest"}, {"lineNumber": 270, "col_offset": 37, "nodeName": "self", "type": "SlantedTriangularTest"}, {"lineNumber": 284, "col_offset": 16, "nodeName": "lrs", "type": "List[List[Any]]"}, {"lineNumber": 286, "col_offset": 16, "nodeName": "scheduler", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]"}, {"lineNumber": 287, "col_offset": 19, "nodeName": "get", "type": "Any"}, {"lineNumber": 287, "col_offset": 56, "nodeName": "epoch", "type": "int"}, {"lineNumber": 288, "col_offset": 27, "nodeName": "lr_scheduler", "type": "Any"}, {"lineNumber": 296, "col_offset": 34, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 296, "col_offset": 40, "nodeName": "k", "type": "int"}, {"lineNumber": 296, "col_offset": 47, "nodeName": "k", "type": "int"}, {"lineNumber": 297, "col_offset": 34, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 297, "col_offset": 52, "nodeName": "k", "type": "int"}, {"lineNumber": 298, "col_offset": 30, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 298, "col_offset": 36, "nodeName": "k", "type": "int"}, {"lineNumber": 298, "col_offset": 43, "nodeName": "k", "type": "int"}, {"lineNumber": 299, "col_offset": 30, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 299, "col_offset": 48, "nodeName": "k", "type": "int"}, {"lineNumber": 321, "col_offset": 19, "nodeName": "optim", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 322, "col_offset": 15, "nodeName": "optim", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "optim", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 389, "col_offset": 56, "nodeName": "lr", "type": "float"}, {"lineNumber": 389, "col_offset": 74, "nodeName": "it", "type": "Union[int, float]"}, {"lineNumber": 389, "col_offset": 88, "nodeName": "layer", "type": "Union[float, int]"}, {"lineNumber": 389, "col_offset": 99, "nodeName": "lr_check", "type": "float"}, {"lineNumber": 400, "col_offset": 52, "nodeName": "gradual_unfreezing", "type": "bool"}, {"lineNumber": 401, "col_offset": 60, "nodeName": "discriminative_fine_tuning", "type": "bool"}, {"lineNumber": 402, "col_offset": 26, "nodeName": "_run_scheduler_get_lrs", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 402, "col_offset": 54, "nodeName": "params", "type": "Dict[str, Union[bool, int, str]]"}, {"lineNumber": 402, "col_offset": 62, "nodeName": "num_actual_steps_per_epoch", "type": "int"}, {"lineNumber": 20, "col_offset": 12, "nodeName": "LearningRateScheduler", "type": "Type[allennlp.training.learning_rate_schedulers.LearningRateScheduler]"}, {"lineNumber": 20, "col_offset": 46, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 22, "col_offset": 46, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 30, "col_offset": 42, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 30, "col_offset": 64, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 31, "col_offset": 64, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 188, "col_offset": 27, "nodeName": "it", "type": "int"}, {"lineNumber": 195, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 195, "col_offset": 61, "nodeName": "Any", "type": "Any"}, {"lineNumber": 203, "col_offset": 16, "nodeName": "scheduler", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]"}, {"lineNumber": 211, "col_offset": 19, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 215, "col_offset": 89, "nodeName": "state", "type": "Any"}, {"lineNumber": 219, "col_offset": 27, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 222, "col_offset": 24, "nodeName": "scheduler", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper]"}, {"lineNumber": 225, "col_offset": 27, "nodeName": "it", "type": "Any"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 269, "col_offset": 54, "nodeName": "m", "type": "Any"}, {"lineNumber": 285, "col_offset": 32, "nodeName": "param_group", "type": "Any"}, {"lineNumber": 287, "col_offset": 19, "nodeName": "params", "type": "Any"}, {"lineNumber": 288, "col_offset": 27, "nodeName": "scheduler", "type": "Union[allennlp.training.learning_rate_schedulers.LearningRateWithMetricsWrapper, allennlp.training.learning_rate_schedulers.LearningRateWithoutMetricsWrapper]"}, {"lineNumber": 296, "col_offset": 52, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 297, "col_offset": 45, "nodeName": "k", "type": "int"}, {"lineNumber": 297, "col_offset": 57, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 298, "col_offset": 48, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 299, "col_offset": 41, "nodeName": "k", "type": "int"}, {"lineNumber": 299, "col_offset": 53, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 302, "col_offset": 34, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 302, "col_offset": 40, "nodeName": "k", "type": "int"}, {"lineNumber": 302, "col_offset": 47, "nodeName": "k", "type": "int"}, {"lineNumber": 388, "col_offset": 27, "nodeName": "lrs", "type": "List[List[Any]]"}, {"lineNumber": 388, "col_offset": 35, "nodeName": "layer", "type": "Union[float, int]"}, {"lineNumber": 402, "col_offset": 26, "nodeName": "self", "type": "SlantedTriangularTest"}, {"lineNumber": 403, "col_offset": 39, "nodeName": "rates", "type": "List[Any]"}, {"lineNumber": 403, "col_offset": 52, "nodeName": "rates", "type": "List[Any]"}, {"lineNumber": 403, "col_offset": 61, "nodeName": "lrs", "type": "List[List[Any]]"}, {"lineNumber": 404, "col_offset": 40, "nodeName": "rates", "type": "List[Any]"}, {"lineNumber": 404, "col_offset": 53, "nodeName": "rates", "type": "List[Any]"}, {"lineNumber": 404, "col_offset": 62, "nodeName": "lrs", "type": "List[List[Any]]"}, {"lineNumber": 409, "col_offset": 31, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 410, "col_offset": 31, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 411, "col_offset": 31, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 413, "col_offset": 31, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 413, "col_offset": 45, "nodeName": "first_layer_lrs", "type": "List[Any]"}, {"lineNumber": 414, "col_offset": 31, "nodeName": "is_hat_shaped", "type": "Callable[[List[float]], Any]"}, {"lineNumber": 414, "col_offset": 45, "nodeName": "second_layer_lrs", "type": "List[Any]"}, {"lineNumber": 20, "col_offset": 46, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 20, "col_offset": 68, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 21, "col_offset": 68, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 30, "col_offset": 64, "nodeName": "model", "type": "Any"}, {"lineNumber": 185, "col_offset": 27, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 219, "col_offset": 27, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 285, "col_offset": 47, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 300, "col_offset": 34, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 300, "col_offset": 40, "nodeName": "k", "type": "int"}, {"lineNumber": 300, "col_offset": 47, "nodeName": "k", "type": "int"}, {"lineNumber": 301, "col_offset": 34, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 301, "col_offset": 52, "nodeName": "k", "type": "int"}, {"lineNumber": 302, "col_offset": 52, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 388, "col_offset": 31, "nodeName": "it", "type": "Union[int, float]"}, {"lineNumber": 407, "col_offset": 31, "nodeName": "max", "type": "Callable"}, {"lineNumber": 408, "col_offset": 31, "nodeName": "min", "type": "Callable"}, {"lineNumber": 409, "col_offset": 45, "nodeName": "first_layer_lrs", "type": "List[Any]"}, {"lineNumber": 410, "col_offset": 45, "nodeName": "second_layer_lrs", "type": "List[Any]"}, {"lineNumber": 411, "col_offset": 45, "nodeName": "second_layer_lrs", "type": "List[Any]"}, {"lineNumber": 20, "col_offset": 68, "nodeName": "model", "type": "Any"}, {"lineNumber": 263, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 264, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 285, "col_offset": 47, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 301, "col_offset": 45, "nodeName": "k", "type": "int"}, {"lineNumber": 301, "col_offset": 57, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 407, "col_offset": 35, "nodeName": "first_layer_lrs", "type": "List[Any]"}, {"lineNumber": 408, "col_offset": 35, "nodeName": "first_layer_lrs", "type": "List[Any]"}, {"lineNumber": 409, "col_offset": 61, "nodeName": "num_actual_steps_per_epoch", "type": "int"}, {"lineNumber": 410, "col_offset": 63, "nodeName": "num_actual_steps_per_epoch", "type": "int"}, {"lineNumber": 411, "col_offset": 62, "nodeName": "num_actual_steps_per_epoch", "type": "int"}, {"lineNumber": 407, "col_offset": 52, "nodeName": "num_actual_steps_per_epoch", "type": "int"}, {"lineNumber": 408, "col_offset": 52, "nodeName": "num_actual_steps_per_epoch", "type": "int"}]