[{"lineNumber": 8, "col_offset": 25, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "prefix_tree", "type": "List[Dict[Tuple[int, ...], Set[int]]]"}, {"lineNumber": 10, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 12, "col_offset": 22, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "construct_prefix_tree", "type": "Callable[..., List[Dict[Tuple[int, ...], Set[int]]]]"}, {"lineNumber": 14, "col_offset": 49, "nodeName": "targets", "type": "Any"}, {"lineNumber": 14, "col_offset": 58, "nodeName": "target_mask", "type": "Any"}, {"lineNumber": 10, "col_offset": 18, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 10, "col_offset": 42, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 12, "col_offset": 22, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 12, "col_offset": 46, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 14, "col_offset": 22, "nodeName": "util", "type": "module"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 17, "col_offset": 19, "nodeName": "prefix_tree", "type": "List[Dict[Tuple[int, ...], Set[int]]]"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 29, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 10, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 10, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 12, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 12, "col_offset": 46, "nodeName": "torch", "type": "Any"}, {"lineNumber": 20, "col_offset": 19, "nodeName": "prefix_tree", "type": "List[Dict[Tuple[int, ...], Set[int]]]"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "prefix_tree", "type": "List[Dict[Tuple[int, ...], Set[int]]]"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "prefix_tree", "type": "List[Dict[Tuple[int, ...], Set[int]]]"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "prefix_tree", "type": "List[Dict[Tuple[int, ...], Set[int]]]"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "prefix_tree", "type": "List[Dict[Tuple[int, ...], Set[int]]]"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "prefix_tree", "type": "List[Dict[Tuple[int, ...], Set[int]]]"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "prefix_tree", "type": "List[Dict[Tuple[int, ...], Set[int]]]"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "prefix_tree", "type": "List[Dict[Tuple[int, ...], Set[int]]]"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "prefix_tree", "type": "List[Dict[Tuple[int, ...], Set[int]]]"}, {"lineNumber": 31, "col_offset": 15, "nodeName": "prefix_tree", "type": "List[Dict[Tuple[int, ...], Set[int]]]"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "prefix_tree", "type": "List[Dict[Tuple[int, ...], Set[int]]]"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "prefix_tree", "type": "List[Dict[Tuple[int, ...], Set[int]]]"}]