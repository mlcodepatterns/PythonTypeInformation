[{"lineNumber": 20, "col_offset": 8, "nodeName": "extractor", "type": "allennlp.modules.span_extractors.span_extractor.SpanExtractor"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "sequence_tensor", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "span_representations", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "correct_forward_end_indices", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "correct_backward_start_indices", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "correct_backward_end_indices", "type": "Any"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "data", "type": "Any"}, {"lineNumber": 95, "col_offset": 50, "nodeName": "data", "type": "Any"}, {"lineNumber": 96, "col_offset": 50, "nodeName": "data", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "sequence_tensor", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "span_representations", "type": "Any"}, {"lineNumber": 136, "col_offset": 8, "nodeName": "correct_forward_end_indices", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "correct_backward_start_indices", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "correct_backward_end_indices", "type": "Any"}, {"lineNumber": 151, "col_offset": 49, "nodeName": "data", "type": "Any"}, {"lineNumber": 152, "col_offset": 49, "nodeName": "data", "type": "Any"}, {"lineNumber": 170, "col_offset": 50, "nodeName": "data", "type": "Any"}, {"lineNumber": 173, "col_offset": 50, "nodeName": "data", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "sequence_tensor", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 14, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.modules.span_extractors.span_extractor.SpanExtractor]"}, {"lineNumber": 20, "col_offset": 46, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 21, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 21, "col_offset": 26, "nodeName": "extractor", "type": "allennlp.modules.span_extractors.span_extractor.SpanExtractor"}, {"lineNumber": 21, "col_offset": 37, "nodeName": "BidirectionalEndpointSpanExtractor", "type": "Any"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 29, "col_offset": 26, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 32, "col_offset": 20, "nodeName": "BidirectionalEndpointSpanExtractor", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 40, "col_offset": 31, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 40, "col_offset": 41, "nodeName": "sequence_tensor", "type": "Any"}, {"lineNumber": 40, "col_offset": 58, "nodeName": "indices", "type": "Any"}, {"lineNumber": 49, "col_offset": 9, "nodeName": "backward_start_embeddings", "type": "Any"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "backward_end_embeddings", "type": "Any"}, {"lineNumber": 49, "col_offset": 63, "nodeName": "split", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "forward_sequence_tensor", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "backward_sequence_tensor", "type": "Any"}, {"lineNumber": 51, "col_offset": 60, "nodeName": "split", "type": "Any"}, {"lineNumber": 54, "col_offset": 40, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "correct_forward_start_indices", "type": "Any"}, {"lineNumber": 62, "col_offset": 38, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 65, "col_offset": 41, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "correct_backward_start_indices", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "correct_backward_start_indices", "type": "Any"}, {"lineNumber": 72, "col_offset": 39, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 74, "col_offset": 43, "nodeName": "batched_index_select", "type": "Callable[..., Any]"}, {"lineNumber": 75, "col_offset": 64, "nodeName": "correct_forward_start_indices", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "correct_forward_start_embeddings", "type": "Any"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "_start_sentinel", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 81, "col_offset": 41, "nodeName": "batched_index_select", "type": "Callable[..., Any]"}, {"lineNumber": 82, "col_offset": 62, "nodeName": "correct_forward_end_indices", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 86, "col_offset": 42, "nodeName": "batched_index_select", "type": "Callable[..., Any]"}, {"lineNumber": 87, "col_offset": 63, "nodeName": "correct_backward_end_indices", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 91, "col_offset": 44, "nodeName": "batched_index_select", "type": "Callable[..., Any]"}, {"lineNumber": 92, "col_offset": 65, "nodeName": "correct_backward_start_indices", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "correct_backward_start_embeddings", "type": "Any"}, {"lineNumber": 95, "col_offset": 50, "nodeName": "_end_sentinel", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "correct_backward_start_embeddings", "type": "Any"}, {"lineNumber": 96, "col_offset": 50, "nodeName": "_end_sentinel", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 102, "col_offset": 26, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "BidirectionalEndpointSpanExtractor", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 117, "col_offset": 31, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 117, "col_offset": 41, "nodeName": "sequence_tensor", "type": "Any"}, {"lineNumber": 117, "col_offset": 58, "nodeName": "indices", "type": "Any"}, {"lineNumber": 122, "col_offset": 9, "nodeName": "backward_start_embeddings", "type": "Any"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "backward_end_embeddings", "type": "Any"}, {"lineNumber": 122, "col_offset": 63, "nodeName": "split", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "forward_sequence_tensor", "type": "Any"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "backward_sequence_tensor", "type": "Any"}, {"lineNumber": 124, "col_offset": 60, "nodeName": "split", "type": "Any"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "correct_forward_start_indices", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "correct_forward_start_indices", "type": "Any"}, {"lineNumber": 136, "col_offset": 38, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 139, "col_offset": 41, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "correct_backward_start_indices", "type": "Any"}, {"lineNumber": 146, "col_offset": 39, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 148, "col_offset": 43, "nodeName": "batched_index_select", "type": "Callable[..., Any]"}, {"lineNumber": 149, "col_offset": 64, "nodeName": "correct_forward_start_indices", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "correct_forward_start_embeddings", "type": "Any"}, {"lineNumber": 151, "col_offset": 49, "nodeName": "_start_sentinel", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "correct_forward_start_embeddings", "type": "Any"}, {"lineNumber": 152, "col_offset": 49, "nodeName": "_start_sentinel", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 156, "col_offset": 41, "nodeName": "batched_index_select", "type": "Callable[..., Any]"}, {"lineNumber": 157, "col_offset": 62, "nodeName": "correct_forward_end_indices", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 161, "col_offset": 42, "nodeName": "batched_index_select", "type": "Callable[..., Any]"}, {"lineNumber": 162, "col_offset": 63, "nodeName": "correct_backward_end_indices", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 166, "col_offset": 44, "nodeName": "batched_index_select", "type": "Callable[..., Any]"}, {"lineNumber": 167, "col_offset": 65, "nodeName": "correct_backward_start_indices", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "correct_backward_start_embeddings", "type": "Any"}, {"lineNumber": 170, "col_offset": 50, "nodeName": "_end_sentinel", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "correct_backward_start_embeddings", "type": "Any"}, {"lineNumber": 173, "col_offset": 50, "nodeName": "_end_sentinel", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "BidirectionalEndpointSpanExtractor", "type": "Any"}, {"lineNumber": 181, "col_offset": 18, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 187, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "SpanExtractor", "type": "Type[allennlp.modules.span_extractors.span_extractor.SpanExtractor]"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 25, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 26, "col_offset": 16, "nodeName": "BidirectionalEndpointSpanExtractor", "type": "Any"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "randn", "type": "Any"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "get_input_dim", "type": "Any"}, {"lineNumber": 49, "col_offset": 63, "nodeName": "span_representations", "type": "Any"}, {"lineNumber": 51, "col_offset": 60, "nodeName": "sequence_tensor", "type": "Any"}, {"lineNumber": 54, "col_offset": 49, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 72, "col_offset": 48, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 74, "col_offset": 64, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 77, "col_offset": 49, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 81, "col_offset": 62, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 86, "col_offset": 63, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 88, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 91, "col_offset": 65, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 95, "col_offset": 50, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 96, "col_offset": 50, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 97, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "randn", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 117, "col_offset": 81, "nodeName": "sequence_mask", "type": "Any"}, {"lineNumber": 122, "col_offset": 63, "nodeName": "span_representations", "type": "Any"}, {"lineNumber": 124, "col_offset": 60, "nodeName": "sequence_tensor", "type": "Any"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 136, "col_offset": 47, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 139, "col_offset": 50, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 146, "col_offset": 48, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 148, "col_offset": 64, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 151, "col_offset": 49, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 152, "col_offset": 49, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 153, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 154, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 156, "col_offset": 62, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 159, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 161, "col_offset": 63, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 163, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 166, "col_offset": 65, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 170, "col_offset": 50, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 173, "col_offset": 50, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 175, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 176, "col_offset": 41, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "randn", "type": "Any"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 187, "col_offset": 16, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 187, "col_offset": 26, "nodeName": "sequence_tensor", "type": "Any"}, {"lineNumber": 187, "col_offset": 43, "nodeName": "indices", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "extractor", "type": "allennlp.modules.span_extractors.span_extractor.SpanExtractor"}, {"lineNumber": 25, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 29, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "size", "type": "Any"}, {"lineNumber": 43, "col_offset": 15, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "extractor", "type": "Any"}, {"lineNumber": 54, "col_offset": 49, "nodeName": "torch", "type": "Any"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 65, "col_offset": 50, "nodeName": "torch", "type": "Any"}, {"lineNumber": 72, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 74, "col_offset": 64, "nodeName": "forward_sequence_tensor", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 81, "col_offset": 62, "nodeName": "forward_sequence_tensor", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 86, "col_offset": 63, "nodeName": "backward_sequence_tensor", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 88, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 91, "col_offset": 65, "nodeName": "backward_sequence_tensor", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 97, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 114, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 127, "col_offset": 49, "nodeName": "torch", "type": "Any"}, {"lineNumber": 136, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 139, "col_offset": 50, "nodeName": "torch", "type": "Any"}, {"lineNumber": 146, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 148, "col_offset": 64, "nodeName": "forward_sequence_tensor", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 153, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 154, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 156, "col_offset": 62, "nodeName": "forward_sequence_tensor", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 159, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 161, "col_offset": 63, "nodeName": "backward_sequence_tensor", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 163, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 166, "col_offset": 65, "nodeName": "backward_sequence_tensor", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 175, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 176, "col_offset": 41, "nodeName": "data", "type": "Any"}, {"lineNumber": 179, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 181, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 186, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "span_representations", "type": "Any"}, {"lineNumber": 78, "col_offset": 41, "nodeName": "forward_start_embeddings", "type": "Any"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "correct_forward_start_embeddings", "type": "Any"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "forward_end_embeddings", "type": "Any"}, {"lineNumber": 84, "col_offset": 41, "nodeName": "correct_forward_end_embeddings", "type": "Any"}, {"lineNumber": 88, "col_offset": 41, "nodeName": "backward_end_embeddings", "type": "Any"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "correct_backward_end_embeddings", "type": "Any"}, {"lineNumber": 97, "col_offset": 41, "nodeName": "backward_start_embeddings", "type": "Any"}, {"lineNumber": 98, "col_offset": 41, "nodeName": "correct_backward_start_embeddings", "type": "Any"}, {"lineNumber": 153, "col_offset": 41, "nodeName": "forward_start_embeddings", "type": "Any"}, {"lineNumber": 154, "col_offset": 41, "nodeName": "correct_forward_start_embeddings", "type": "Any"}, {"lineNumber": 158, "col_offset": 41, "nodeName": "forward_end_embeddings", "type": "Any"}, {"lineNumber": 159, "col_offset": 41, "nodeName": "correct_forward_end_embeddings", "type": "Any"}, {"lineNumber": 163, "col_offset": 41, "nodeName": "backward_end_embeddings", "type": "Any"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "correct_backward_end_embeddings", "type": "Any"}, {"lineNumber": 175, "col_offset": 41, "nodeName": "backward_start_embeddings", "type": "Any"}, {"lineNumber": 176, "col_offset": 41, "nodeName": "correct_backward_start_embeddings", "type": "Any"}]