[{"lineNumber": 10, "col_offset": 41, "nodeName": "ModelTestCase", "type": "Type[allennlp.common.testing.model_test_case.ModelTestCase]"}, {"lineNumber": 42, "col_offset": 38, "nodeName": "ModelTestCase", "type": "Type[allennlp.common.testing.model_test_case.ModelTestCase]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "num_decoding_steps", "type": "int"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "sample_logits", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "actual_loss", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "training_arrays", "type": "Dict[str, Any]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "decode_output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[[str], Tuple[allennlp.models.model.Model, allennlp.models.model.Model]]"}, {"lineNumber": 17, "col_offset": 50, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 23, "col_offset": 24, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 24, "col_offset": 25, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 27, "col_offset": 22, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 29, "col_offset": 24, "nodeName": "sequence_cross_entropy_with_logits", "type": "Callable[..., Any]"}, {"lineNumber": 29, "col_offset": 59, "nodeName": "sample_logits", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "_get_loss", "type": "Any"}, {"lineNumber": 32, "col_offset": 43, "nodeName": "sample_logits", "type": "Any"}, {"lineNumber": 32, "col_offset": 58, "nodeName": "sample_targets", "type": "Any"}, {"lineNumber": 32, "col_offset": 74, "nodeName": "sample_mask", "type": "Any"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "equal", "type": "Any"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "arrays_to_variables", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "forward", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "decode", "type": "Callable[[Dict[str, Any]], Dict[str, Any]]"}, {"lineNumber": 38, "col_offset": 47, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 40, "col_offset": 37, "nodeName": "decode_output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[[str], Tuple[allennlp.models.model.Model, allennlp.models.model.Model]]"}, {"lineNumber": 49, "col_offset": 50, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "EncoderDecoderWithoutAttentionTest"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "EncoderDecoderWithoutAttentionTest"}, {"lineNumber": 17, "col_offset": 50, "nodeName": "self", "type": "EncoderDecoderWithoutAttentionTest"}, {"lineNumber": 23, "col_offset": 33, "nodeName": "randn", "type": "Any"}, {"lineNumber": 23, "col_offset": 45, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 23, "col_offset": 79, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 24, "col_offset": 34, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 29, "col_offset": 74, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 30, "col_offset": 59, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "numpy", "type": "module"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 33, "col_offset": 55, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 36, "col_offset": 46, "nodeName": "as_array_dict", "type": "Callable[..., Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]]"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 37, "col_offset": 43, "nodeName": "training_arrays", "type": "Dict[str, Any]"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "self", "type": "EncoderDecoderWithAttentionTest"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "EncoderDecoderWithAttentionTest"}, {"lineNumber": 49, "col_offset": 50, "nodeName": "self", "type": "EncoderDecoderWithAttentionTest"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 12, "col_offset": 14, "nodeName": "EncoderDecoderWithoutAttentionTest", "type": "Type[EncoderDecoderWithoutAttentionTest]"}, {"lineNumber": 12, "col_offset": 50, "nodeName": "self", "type": "EncoderDecoderWithoutAttentionTest"}, {"lineNumber": 23, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 23, "col_offset": 57, "nodeName": "num_decoding_steps", "type": "int"}, {"lineNumber": 24, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 24, "col_offset": 51, "nodeName": "randint", "type": "Any"}, {"lineNumber": 24, "col_offset": 75, "nodeName": "num_classes", "type": "int"}, {"lineNumber": 27, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 27, "col_offset": 48, "nodeName": "randint", "type": "Any"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "self", "type": "EncoderDecoderWithoutAttentionTest"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "data", "type": "Any"}, {"lineNumber": 33, "col_offset": 55, "nodeName": "data", "type": "Any"}, {"lineNumber": 36, "col_offset": 46, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 37, "col_offset": 22, "nodeName": "self", "type": "EncoderDecoderWithoutAttentionTest"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "self", "type": "EncoderDecoderWithoutAttentionTest"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 44, "col_offset": 14, "nodeName": "EncoderDecoderWithAttentionTest", "type": "Type[EncoderDecoderWithAttentionTest]"}, {"lineNumber": 44, "col_offset": 47, "nodeName": "self", "type": "EncoderDecoderWithAttentionTest"}, {"lineNumber": 24, "col_offset": 51, "nodeName": "random", "type": "Any"}, {"lineNumber": 25, "col_offset": 73, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 25, "col_offset": 85, "nodeName": "num_decoding_steps", "type": "int"}, {"lineNumber": 27, "col_offset": 48, "nodeName": "random", "type": "Any"}, {"lineNumber": 28, "col_offset": 70, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 28, "col_offset": 82, "nodeName": "num_decoding_steps", "type": "int"}, {"lineNumber": 29, "col_offset": 74, "nodeName": "sample_targets", "type": "Any"}, {"lineNumber": 30, "col_offset": 59, "nodeName": "sample_mask", "type": "Any"}, {"lineNumber": 33, "col_offset": 27, "nodeName": "expected_loss", "type": "Any"}, {"lineNumber": 33, "col_offset": 55, "nodeName": "actual_loss", "type": "Any"}, {"lineNumber": 36, "col_offset": 46, "nodeName": "self", "type": "EncoderDecoderWithoutAttentionTest"}, {"lineNumber": 24, "col_offset": 51, "nodeName": "numpy", "type": "module"}, {"lineNumber": 27, "col_offset": 48, "nodeName": "numpy", "type": "module"}]