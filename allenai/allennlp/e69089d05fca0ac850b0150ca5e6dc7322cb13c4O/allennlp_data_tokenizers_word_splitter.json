[{"lineNumber": 9, "col_offset": 0, "nodeName": "word_splitters", "type": "Dict[str, Any]"}, {"lineNumber": 29, "col_offset": 25, "nodeName": "WordSplitter", "type": "Type[WordSplitter]"}, {"lineNumber": 90, "col_offset": 24, "nodeName": "WordSplitter", "type": "Type[WordSplitter]"}, {"lineNumber": 104, "col_offset": 23, "nodeName": "WordSplitter", "type": "Type[WordSplitter]"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "WordSplitter", "type": "Type[WordSplitter]"}, {"lineNumber": 133, "col_offset": 27, "nodeName": "SimpleWordSplitter", "type": "Type[SimpleWordSplitter]"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "SpaceWordSplitter", "type": "Type[SpaceWordSplitter]"}, {"lineNumber": 135, "col_offset": 25, "nodeName": "NltkWordSplitter", "type": "Type[NltkWordSplitter]"}, {"lineNumber": 136, "col_offset": 26, "nodeName": "SpacyWordSplitter", "type": "Type[SpacyWordSplitter]"}, {"lineNumber": 9, "col_offset": 17, "nodeName": "OrderedDict", "type": "Type[collections.OrderedDict[Any, Any]]"}, {"lineNumber": 133, "col_offset": 0, "nodeName": "word_splitters", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 0, "nodeName": "word_splitters", "type": "Dict[str, Any]"}, {"lineNumber": 135, "col_offset": 0, "nodeName": "word_splitters", "type": "Dict[str, Any]"}, {"lineNumber": 136, "col_offset": 0, "nodeName": "word_splitters", "type": "Dict[str, Any]"}, {"lineNumber": 20, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 19, "col_offset": 44, "nodeName": "List", "type": "Any"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "choice", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "special_cases", "type": "Set[str]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "contractions", "type": "Set[str]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "contractions", "type": "Set[str]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "ending_punctuation", "type": "Set[str]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "beginning_punctuation", "type": "Set[str]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "tokens", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 12, "nodeName": "field", "type": "str"}, {"lineNumber": 61, "col_offset": 21, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "tokens", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 44, "nodeName": "List", "type": "Any"}, {"lineNumber": 100, "col_offset": 44, "nodeName": "List", "type": "Any"}, {"lineNumber": 113, "col_offset": 44, "nodeName": "List", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "en_nlp", "type": "Any"}, {"lineNumber": 129, "col_offset": 44, "nodeName": "List", "type": "Any"}, {"lineNumber": 19, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 19, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "pop_choice", "type": "Callable[..., Any]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "assert_empty", "type": "Callable[[str], None]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "self", "type": "SimpleWordSplitter"}, {"lineNumber": 38, "col_offset": 29, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "self", "type": "SimpleWordSplitter"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "self", "type": "SimpleWordSplitter"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "SimpleWordSplitter"}, {"lineNumber": 41, "col_offset": 34, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "SimpleWordSplitter"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 45, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "add_at_end", "type": "List[str]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "remove_contractions", "type": "bool"}, {"lineNumber": 74, "col_offset": 18, "nodeName": "remove_contractions", "type": "bool"}, {"lineNumber": 45, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 86, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "token", "type": "str"}, {"lineNumber": 100, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 100, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 116, "col_offset": 15, "nodeName": "word_tokenize", "type": "Any"}, {"lineNumber": 113, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "self", "type": "SpacyWordSplitter"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "load", "type": "Any"}, {"lineNumber": 129, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 129, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 24, "col_offset": 17, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 24, "col_offset": 43, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "word_splitters", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "sentence", "type": "str"}, {"lineNumber": 65, "col_offset": 16, "nodeName": "field", "type": "str"}, {"lineNumber": 68, "col_offset": 16, "nodeName": "field", "type": "str"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "remove_contractions", "type": "bool"}, {"lineNumber": 76, "col_offset": 20, "nodeName": "contraction", "type": "Any"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "contractions", "type": "Any"}, {"lineNumber": 87, "col_offset": 46, "nodeName": "special_cases", "type": "Set[str]"}, {"lineNumber": 101, "col_offset": 15, "nodeName": "sentence", "type": "str"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "spacy", "type": "Any"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "token", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "token", "type": "Any"}, {"lineNumber": 24, "col_offset": 48, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "choice", "type": "Any"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 40, "col_offset": 60, "nodeName": "x", "type": "str"}, {"lineNumber": 40, "col_offset": 65, "nodeName": "contractions", "type": "Set[str]"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "_can_split", "type": "Any"}, {"lineNumber": 63, "col_offset": 34, "nodeName": "field", "type": "str"}, {"lineNumber": 63, "col_offset": 57, "nodeName": "beginning_punctuation", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 65, "col_offset": 24, "nodeName": "field", "type": "str"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "_can_split", "type": "Any"}, {"lineNumber": 66, "col_offset": 34, "nodeName": "field", "type": "str"}, {"lineNumber": 66, "col_offset": 58, "nodeName": "ending_punctuation", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 68, "col_offset": 24, "nodeName": "field", "type": "str"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 87, "col_offset": 46, "nodeName": "self", "type": "SimpleWordSplitter"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "sentence", "type": "str"}, {"lineNumber": 130, "col_offset": 40, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 130, "col_offset": 62, "nodeName": "sentence", "type": "str"}, {"lineNumber": 24, "col_offset": 48, "nodeName": "word_splitters", "type": "Dict[str, Any]"}, {"lineNumber": 40, "col_offset": 34, "nodeName": "x", "type": "str"}, {"lineNumber": 40, "col_offset": 65, "nodeName": "self", "type": "SimpleWordSplitter"}, {"lineNumber": 63, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 45, "nodeName": "field", "type": "str"}, {"lineNumber": 63, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 16, "nodeName": "tokens", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "field", "type": "str"}, {"lineNumber": 66, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 66, "col_offset": 45, "nodeName": "field", "type": "str"}, {"lineNumber": 66, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "add_at_end", "type": "List[str]"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "field", "type": "str"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "field", "type": "str"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "remove_contractions", "type": "bool"}, {"lineNumber": 87, "col_offset": 25, "nodeName": "token", "type": "str"}, {"lineNumber": 130, "col_offset": 40, "nodeName": "en_nlp", "type": "Any"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "_can_split", "type": "Any"}, {"lineNumber": 77, "col_offset": 39, "nodeName": "field", "type": "str"}, {"lineNumber": 77, "col_offset": 50, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 77, "col_offset": 73, "nodeName": "contraction", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 79, "col_offset": 32, "nodeName": "field", "type": "str"}, {"lineNumber": 130, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 77, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "add_at_end", "type": "List[str]"}, {"lineNumber": 78, "col_offset": 45, "nodeName": "field", "type": "str"}, {"lineNumber": 77, "col_offset": 50, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 77, "col_offset": 50, "nodeName": "field", "type": "str"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 79, "col_offset": 44, "nodeName": "contraction", "type": "Any"}, {"lineNumber": 78, "col_offset": 52, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 78, "col_offset": 56, "nodeName": "contraction", "type": "Any"}]