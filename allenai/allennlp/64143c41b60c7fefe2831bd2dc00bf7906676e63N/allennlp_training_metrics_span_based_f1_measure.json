[{"lineNumber": 19, "col_offset": 0, "nodeName": "TAGS_TO_SPANS_FUNCTION_TYPE", "type": "Type[Callable[[List[str], Optional[List[str]]], List[Tuple[str, Tuple[int, int]]]]]"}, {"lineNumber": 23, "col_offset": 25, "nodeName": "Metric", "type": "Type[allennlp.training.metrics.metric.Metric]"}, {"lineNumber": 19, "col_offset": 30, "nodeName": "Callable", "type": "Any"}, {"lineNumber": 76, "col_offset": 11, "nodeName": "label_encoding", "type": "Optional[str]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "_label_encoding", "type": "Optional[str]"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "label_encoding", "type": "Optional[str]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "_tags_to_spans_function", "type": "Optional[Callable[[List[str], Optional[List[str]]], List[Tuple[str, Tuple[int, int]]]]]"}, {"lineNumber": 85, "col_offset": 39, "nodeName": "tags_to_spans_function", "type": "Optional[Callable[[List[str], Optional[List[str]]], List[Tuple[str, Tuple[int, int]]]]]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "_label_vocabulary", "type": "Dict[int, str]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "_ignore_classes", "type": "Union[List[str], List[nothing]]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "_true_positives", "type": "collections.defaultdict[nothing, int]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "_false_positives", "type": "collections.defaultdict[nothing, int]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "_false_negatives", "type": "collections.defaultdict[nothing, int]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "argmax_predictions", "type": "Any"}, {"lineNumber": 137, "col_offset": 8, "nodeName": "argmax_predictions", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 208, "col_offset": 8, "nodeName": "span_set", "type": "Set[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "continued_labels", "type": "List[str]"}, {"lineNumber": 210, "col_offset": 12, "nodeName": "label", "type": "str"}, {"lineNumber": 210, "col_offset": 21, "nodeName": "continued_labels", "type": "List[str]"}, {"lineNumber": 187, "col_offset": 65, "nodeName": "List", "type": "Any"}, {"lineNumber": 234, "col_offset": 8, "nodeName": "all_tags", "type": "Set[Any]"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "all_metrics", "type": "Dict[str, Any]"}, {"lineNumber": 239, "col_offset": 12, "nodeName": "tag", "type": "Any"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "all_tags", "type": "Set[Any]"}, {"lineNumber": 254, "col_offset": 43, "nodeName": "precision", "type": "Any"}, {"lineNumber": 255, "col_offset": 40, "nodeName": "recall", "type": "Any"}, {"lineNumber": 256, "col_offset": 44, "nodeName": "f1_measure", "type": "Any"}, {"lineNumber": 257, "col_offset": 11, "nodeName": "reset", "type": "bool"}, {"lineNumber": 259, "col_offset": 15, "nodeName": "all_metrics", "type": "Dict[str, Any]"}, {"lineNumber": 263, "col_offset": 8, "nodeName": "precision", "type": "float"}, {"lineNumber": 264, "col_offset": 8, "nodeName": "recall", "type": "float"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "f1_measure", "type": "float"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "_true_positives", "type": "collections.defaultdict[nothing, int]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "_false_positives", "type": "collections.defaultdict[nothing, int]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "_false_negatives", "type": "collections.defaultdict[nothing, int]"}, {"lineNumber": 71, "col_offset": 11, "nodeName": "label_encoding", "type": "Optional[str]"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "tags_to_spans_function", "type": "Optional[Callable[[List[str], Optional[List[str]]], List[Tuple[str, Tuple[int, int]]]]]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "get_index_to_token_vocabulary", "type": "Callable[..., Dict[int, str]]"}, {"lineNumber": 86, "col_offset": 74, "nodeName": "tag_namespace", "type": "str"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "ignore_classes", "type": "List[str]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 90, "col_offset": 47, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 48, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 48, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "mask", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 121, "col_offset": 57, "nodeName": "unwrap_to_tensors", "type": "Any"}, {"lineNumber": 121, "col_offset": 80, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 122, "col_offset": 80, "nodeName": "gold_labels", "type": "Any"}, {"lineNumber": 123, "col_offset": 80, "nodeName": "mask", "type": "Any"}, {"lineNumber": 123, "col_offset": 86, "nodeName": "prediction_map", "type": "Any"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "size", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "any", "type": "Any"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "get_lengths_from_binary_sequence_mask", "type": "Callable[[Any], Any]"}, {"lineNumber": 130, "col_offset": 65, "nodeName": "mask", "type": "Any"}, {"lineNumber": 133, "col_offset": 11, "nodeName": "prediction_map", "type": "Any"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "argmax_predictions", "type": "Any"}, {"lineNumber": 135, "col_offset": 12, "nodeName": "gold_labels", "type": "Any"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "float", "type": "Any"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 141, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "sequence_prediction", "type": "Any"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "sequence_gold_label", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "tags_to_spans_function", "type": "None"}, {"lineNumber": 170, "col_offset": 12, "nodeName": "predicted_spans", "type": "Union[Any, List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 171, "col_offset": 12, "nodeName": "gold_spans", "type": "Union[Any, List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "predicted_spans", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "gold_spans", "type": "Any"}, {"lineNumber": 176, "col_offset": 16, "nodeName": "span", "type": "Any"}, {"lineNumber": 176, "col_offset": 24, "nodeName": "predicted_spans", "type": "Any"}, {"lineNumber": 183, "col_offset": 16, "nodeName": "span", "type": "Any"}, {"lineNumber": 183, "col_offset": 24, "nodeName": "gold_spans", "type": "Any"}, {"lineNumber": 208, "col_offset": 41, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 208, "col_offset": 45, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 211, "col_offset": 12, "nodeName": "continued_spans", "type": "Set[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "span_start", "type": "int"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "span_end", "type": "int"}, {"lineNumber": 215, "col_offset": 12, "nodeName": "replacement_span", "type": "Tuple[str, Tuple[int, int]]"}, {"lineNumber": 220, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 220, "col_offset": 20, "nodeName": "span_set", "type": "Set[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 187, "col_offset": 70, "nodeName": "TypedStringSpan", "type": "Type[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 222, "col_offset": 32, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 234, "col_offset": 29, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 243, "col_offset": 12, "nodeName": "precision_key", "type": "str"}, {"lineNumber": 244, "col_offset": 12, "nodeName": "recall_key", "type": "str"}, {"lineNumber": 245, "col_offset": 12, "nodeName": "f1_key", "type": "str"}, {"lineNumber": 246, "col_offset": 41, "nodeName": "precision", "type": "Any"}, {"lineNumber": 247, "col_offset": 38, "nodeName": "recall", "type": "Any"}, {"lineNumber": 248, "col_offset": 34, "nodeName": "f1_measure", "type": "Any"}, {"lineNumber": 251, "col_offset": 40, "nodeName": "_compute_metrics", "type": "Any"}, {"lineNumber": 254, "col_offset": 8, "nodeName": "all_metrics", "type": "Dict[str, Any]"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "all_metrics", "type": "Dict[str, Any]"}, {"lineNumber": 256, "col_offset": 8, "nodeName": "all_metrics", "type": "Dict[str, Any]"}, {"lineNumber": 262, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 262, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 262, "col_offset": 85, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 266, "col_offset": 15, "nodeName": "precision", "type": "float"}, {"lineNumber": 266, "col_offset": 26, "nodeName": "recall", "type": "float"}, {"lineNumber": 266, "col_offset": 34, "nodeName": "f1_measure", "type": "float"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 269, "col_offset": 31, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 269, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 270, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 270, "col_offset": 32, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 270, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 271, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 271, "col_offset": 32, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 271, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 19, "col_offset": 73, "nodeName": "List", "type": "Any"}, {"lineNumber": 42, "col_offset": 41, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 77, "col_offset": 15, "nodeName": "label_encoding", "type": "Optional[str]"}, {"lineNumber": 79, "col_offset": 13, "nodeName": "tags_to_spans_function", "type": "Optional[Callable[[List[str], Optional[List[str]]], List[Tuple[str, Tuple[int, int]]]]]"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "vocabulary", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 98, "col_offset": 33, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "ones_like", "type": "Any"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "gold_labels", "type": "Any"}, {"lineNumber": 121, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 127, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "max", "type": "Any"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "gather", "type": "Any"}, {"lineNumber": 134, "col_offset": 46, "nodeName": "prediction_map", "type": "Any"}, {"lineNumber": 134, "col_offset": 65, "nodeName": "argmax_predictions", "type": "Any"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "gather", "type": "Any"}, {"lineNumber": 135, "col_offset": 39, "nodeName": "prediction_map", "type": "Any"}, {"lineNumber": 137, "col_offset": 29, "nodeName": "argmax_predictions", "type": "Any"}, {"lineNumber": 140, "col_offset": 21, "nodeName": "gold_labels", "type": "Any"}, {"lineNumber": 142, "col_offset": 34, "nodeName": "argmax_predictions", "type": "Any"}, {"lineNumber": 143, "col_offset": 34, "nodeName": "gold_labels", "type": "Any"}, {"lineNumber": 144, "col_offset": 21, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "length", "type": "Any"}, {"lineNumber": 158, "col_offset": 48, "nodeName": "_tags_to_spans_function", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "tags_to_spans_function", "type": "Any"}, {"lineNumber": 159, "col_offset": 41, "nodeName": "_tags_to_spans_function", "type": "Any"}, {"lineNumber": 170, "col_offset": 30, "nodeName": "tags_to_spans_function", "type": "Optional[Union[Any, Callable[..., List[Tuple[str, Tuple[int, int]]]]]]"}, {"lineNumber": 170, "col_offset": 53, "nodeName": "predicted_string_labels", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 78, "nodeName": "_ignore_classes", "type": "Any"}, {"lineNumber": 171, "col_offset": 25, "nodeName": "tags_to_spans_function", "type": "Optional[Union[Any, Callable[..., List[Tuple[str, Tuple[int, int]]]]]]"}, {"lineNumber": 171, "col_offset": 48, "nodeName": "gold_string_labels", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 68, "nodeName": "_ignore_classes", "type": "Any"}, {"lineNumber": 173, "col_offset": 30, "nodeName": "_handle_continued_spans", "type": "Any"}, {"lineNumber": 173, "col_offset": 59, "nodeName": "predicted_spans", "type": "Union[List[Tuple[str, Tuple[int, int]]], Any]"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "_handle_continued_spans", "type": "Any"}, {"lineNumber": 174, "col_offset": 54, "nodeName": "gold_spans", "type": "Union[List[Tuple[str, Tuple[int, int]]], Any]"}, {"lineNumber": 187, "col_offset": 39, "nodeName": "List", "type": "Any"}, {"lineNumber": 209, "col_offset": 39, "nodeName": "label", "type": "str"}, {"lineNumber": 209, "col_offset": 70, "nodeName": "span_set", "type": "Set[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 211, "col_offset": 31, "nodeName": "span", "type": "Tuple[str, Tuple[int, int]]"}, {"lineNumber": 213, "col_offset": 25, "nodeName": "min", "type": "Callable"}, {"lineNumber": 214, "col_offset": 23, "nodeName": "max", "type": "Callable"}, {"lineNumber": 215, "col_offset": 49, "nodeName": "label", "type": "str"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "difference_update", "type": "Callable[..., None]"}, {"lineNumber": 217, "col_offset": 39, "nodeName": "continued_spans", "type": "Set[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 218, "col_offset": 25, "nodeName": "replacement_span", "type": "Tuple[str, Tuple[int, int]]"}, {"lineNumber": 235, "col_offset": 8, "nodeName": "all_tags", "type": "Set[Any]"}, {"lineNumber": 235, "col_offset": 24, "nodeName": "keys", "type": "Any"}, {"lineNumber": 236, "col_offset": 8, "nodeName": "all_tags", "type": "Set[Any]"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "keys", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "all_tags", "type": "Set[Any]"}, {"lineNumber": 237, "col_offset": 24, "nodeName": "keys", "type": "Any"}, {"lineNumber": 240, "col_offset": 44, "nodeName": "_compute_metrics", "type": "Any"}, {"lineNumber": 243, "col_offset": 48, "nodeName": "tag", "type": "Any"}, {"lineNumber": 244, "col_offset": 42, "nodeName": "tag", "type": "Any"}, {"lineNumber": 245, "col_offset": 42, "nodeName": "tag", "type": "Any"}, {"lineNumber": 246, "col_offset": 12, "nodeName": "all_metrics", "type": "Dict[str, Any]"}, {"lineNumber": 247, "col_offset": 12, "nodeName": "all_metrics", "type": "Dict[str, Any]"}, {"lineNumber": 248, "col_offset": 12, "nodeName": "all_metrics", "type": "Dict[str, Any]"}, {"lineNumber": 251, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 251, "col_offset": 62, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 252, "col_offset": 62, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 253, "col_offset": 62, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "reset", "type": "Any"}, {"lineNumber": 263, "col_offset": 20, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 263, "col_offset": 26, "nodeName": "true_positives", "type": "int"}, {"lineNumber": 263, "col_offset": 44, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 264, "col_offset": 17, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 264, "col_offset": 23, "nodeName": "true_positives", "type": "int"}, {"lineNumber": 264, "col_offset": 41, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 19, "col_offset": 40, "nodeName": "List", "type": "Any"}, {"lineNumber": 19, "col_offset": 51, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 19, "col_offset": 78, "nodeName": "TypedStringSpan", "type": "Type[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 42, "col_offset": 50, "nodeName": "TAGS_TO_SPANS_FUNCTION_TYPE", "type": "Type[Callable[[List[str], Optional[List[str]]], List[Tuple[str, Tuple[int, int]]]]]"}, {"lineNumber": 78, "col_offset": 22, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 90, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 92, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 98, "col_offset": 42, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 119, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "gold_labels", "type": "Any"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 127, "col_offset": 37, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 128, "col_offset": 79, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 131, "col_offset": 29, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 134, "col_offset": 33, "nodeName": "torch", "type": "Any"}, {"lineNumber": 135, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 135, "col_offset": 58, "nodeName": "long", "type": "Any"}, {"lineNumber": 144, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 152, "col_offset": 43, "nodeName": "label_id", "type": "Any"}, {"lineNumber": 154, "col_offset": 38, "nodeName": "label_id", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "_label_encoding", "type": "Any"}, {"lineNumber": 158, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "_label_encoding", "type": "Any"}, {"lineNumber": 162, "col_offset": 16, "nodeName": "tags_to_spans_function", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 162, "col_offset": 41, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 170, "col_offset": 78, "nodeName": "self", "type": "Any"}, {"lineNumber": 171, "col_offset": 68, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 174, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 177, "col_offset": 19, "nodeName": "span", "type": "Any"}, {"lineNumber": 177, "col_offset": 27, "nodeName": "gold_spans", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 187, "col_offset": 44, "nodeName": "TypedStringSpan", "type": "Type[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 209, "col_offset": 54, "nodeName": "label", "type": "str"}, {"lineNumber": 209, "col_offset": 61, "nodeName": "span", "type": "Tuple[int, int]"}, {"lineNumber": 209, "col_offset": 82, "nodeName": "startswith", "type": "Callable[..., bool]"}, {"lineNumber": 211, "col_offset": 40, "nodeName": "span", "type": "Tuple[str, Tuple[int, int]]"}, {"lineNumber": 211, "col_offset": 48, "nodeName": "span_set", "type": "Set[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 215, "col_offset": 57, "nodeName": "span_start", "type": "int"}, {"lineNumber": 215, "col_offset": 69, "nodeName": "span_end", "type": "int"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "span_set", "type": "Set[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 218, "col_offset": 12, "nodeName": "span_set", "type": "Set[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 235, "col_offset": 24, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 237, "col_offset": 24, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 240, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 66, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 241, "col_offset": 66, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 242, "col_offset": 66, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 246, "col_offset": 24, "nodeName": "precision_key", "type": "str"}, {"lineNumber": 247, "col_offset": 24, "nodeName": "recall_key", "type": "str"}, {"lineNumber": 248, "col_offset": 24, "nodeName": "f1_key", "type": "str"}, {"lineNumber": 251, "col_offset": 66, "nodeName": "values", "type": "Any"}, {"lineNumber": 252, "col_offset": 66, "nodeName": "values", "type": "Any"}, {"lineNumber": 253, "col_offset": 66, "nodeName": "values", "type": "Any"}, {"lineNumber": 258, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 265, "col_offset": 28, "nodeName": "precision", "type": "float"}, {"lineNumber": 265, "col_offset": 40, "nodeName": "recall", "type": "float"}, {"lineNumber": 19, "col_offset": 45, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 98, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 135, "col_offset": 58, "nodeName": "gold_labels", "type": "Any"}, {"lineNumber": 142, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 143, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 152, "col_offset": 55, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 154, "col_offset": 50, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 158, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 161, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "_label_encoding", "type": "Any"}, {"lineNumber": 164, "col_offset": 16, "nodeName": "tags_to_spans_function", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 164, "col_offset": 41, "nodeName": "iob1_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "remove", "type": "Any"}, {"lineNumber": 179, "col_offset": 38, "nodeName": "span", "type": "Any"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 184, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 82, "nodeName": "label", "type": "str"}, {"lineNumber": 211, "col_offset": 60, "nodeName": "label", "type": "str"}, {"lineNumber": 213, "col_offset": 44, "nodeName": "span", "type": "Tuple[str, Tuple[int, int]]"}, {"lineNumber": 213, "col_offset": 52, "nodeName": "continued_spans", "type": "Set[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 214, "col_offset": 42, "nodeName": "span", "type": "Tuple[str, Tuple[int, int]]"}, {"lineNumber": 214, "col_offset": 50, "nodeName": "continued_spans", "type": "Set[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 235, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 236, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 237, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 87, "nodeName": "tag", "type": "Any"}, {"lineNumber": 241, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 241, "col_offset": 88, "nodeName": "tag", "type": "Any"}, {"lineNumber": 242, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 242, "col_offset": 88, "nodeName": "tag", "type": "Any"}, {"lineNumber": 251, "col_offset": 66, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 252, "col_offset": 66, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 253, "col_offset": 66, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 263, "col_offset": 50, "nodeName": "true_positives", "type": "int"}, {"lineNumber": 263, "col_offset": 67, "nodeName": "false_positives", "type": "int"}, {"lineNumber": 264, "col_offset": 47, "nodeName": "true_positives", "type": "int"}, {"lineNumber": 264, "col_offset": 64, "nodeName": "false_negatives", "type": "int"}, {"lineNumber": 265, "col_offset": 51, "nodeName": "precision", "type": "float"}, {"lineNumber": 265, "col_offset": 63, "nodeName": "recall", "type": "float"}, {"lineNumber": 19, "col_offset": 60, "nodeName": "List", "type": "Any"}, {"lineNumber": 163, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "_label_encoding", "type": "Any"}, {"lineNumber": 166, "col_offset": 16, "nodeName": "tags_to_spans_function", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 166, "col_offset": 41, "nodeName": "bioul_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "gold_spans", "type": "Any"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 184, "col_offset": 38, "nodeName": "span", "type": "Any"}, {"lineNumber": 211, "col_offset": 69, "nodeName": "span", "type": "Tuple[str, Tuple[int, int]]"}, {"lineNumber": 213, "col_offset": 29, "nodeName": "span", "type": "Tuple[str, Tuple[int, int]]"}, {"lineNumber": 214, "col_offset": 27, "nodeName": "span", "type": "Tuple[str, Tuple[int, int]]"}, {"lineNumber": 251, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 252, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 253, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 19, "col_offset": 65, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 152, "col_offset": 55, "nodeName": "sequence_prediction", "type": "Any"}, {"lineNumber": 154, "col_offset": 50, "nodeName": "sequence_gold_label", "type": "Any"}, {"lineNumber": 165, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "_label_encoding", "type": "Any"}, {"lineNumber": 168, "col_offset": 16, "nodeName": "tags_to_spans_function", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 168, "col_offset": 41, "nodeName": "bmes_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 178, "col_offset": 41, "nodeName": "span", "type": "Any"}, {"lineNumber": 181, "col_offset": 42, "nodeName": "span", "type": "Any"}, {"lineNumber": 152, "col_offset": 76, "nodeName": "length", "type": "Any"}, {"lineNumber": 154, "col_offset": 71, "nodeName": "length", "type": "Any"}, {"lineNumber": 167, "col_offset": 17, "nodeName": "self", "type": "Any"}]