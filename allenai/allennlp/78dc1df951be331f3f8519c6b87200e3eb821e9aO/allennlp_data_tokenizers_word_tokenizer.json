[{"lineNumber": 14, "col_offset": 20, "nodeName": "Tokenizer", "type": "Type[allennlp.data.tokenizers.tokenizer.Tokenizer]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "_word_splitter", "type": "allennlp.data.tokenizers.word_splitter.WordSplitter"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "_word_filter", "type": "allennlp.data.tokenizers.word_filter.WordFilter"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "word_filter", "type": "allennlp.data.tokenizers.word_filter.WordFilter"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "_word_stemmer", "type": "allennlp.data.tokenizers.word_stemmer.WordStemmer"}, {"lineNumber": 60, "col_offset": 29, "nodeName": "word_stemmer", "type": "allennlp.data.tokenizers.word_stemmer.WordStemmer"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "_start_tokens", "type": "Union[List[str], List[nothing]]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "_end_tokens", "type": "Union[List[str], List[nothing]]"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "words", "type": "Any"}, {"lineNumber": 68, "col_offset": 37, "nodeName": "List", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "batched_words", "type": "Any"}, {"lineNumber": 79, "col_offset": 50, "nodeName": "List", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "filtered_words", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "stemmed_words", "type": "List[Union[Any, allennlp.data.tokenizers.token.Token]]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "start_token", "type": "Any"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "_start_tokens", "type": "Any"}, {"lineNumber": 88, "col_offset": 12, "nodeName": "end_token", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "_end_tokens", "type": "Any"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "stemmed_words", "type": "List[Union[Any, allennlp.data.tokenizers.token.Token]]"}, {"lineNumber": 83, "col_offset": 54, "nodeName": "List", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "word_splitter", "type": "allennlp.data.tokenizers.word_splitter.WordSplitter"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "word_filter", "type": "allennlp.data.tokenizers.word_filter.WordFilter"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "word_stemmer", "type": "allennlp.data.tokenizers.word_stemmer.WordStemmer"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "start_tokens", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "end_tokens", "type": "Any"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "PassThroughWordFilter", "type": "Any"}, {"lineNumber": 55, "col_offset": 45, "nodeName": "PassThroughWordStemmer", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 58, "col_offset": 30, "nodeName": "word_splitter", "type": "allennlp.data.tokenizers.word_splitter.WordSplitter"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 61, "col_offset": 29, "nodeName": "start_tokens", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "reverse", "type": "Callable[[], None]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "end_tokens", "type": "List[str]"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "split_words", "type": "Any"}, {"lineNumber": 75, "col_offset": 48, "nodeName": "text", "type": "str"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "_filter_and_stem", "type": "Any"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "words", "type": "Any"}, {"lineNumber": 68, "col_offset": 42, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "batch_split_words", "type": "Any"}, {"lineNumber": 80, "col_offset": 62, "nodeName": "texts", "type": "List[str]"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "filter_words", "type": "Any"}, {"lineNumber": 84, "col_offset": 56, "nodeName": "words", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 86, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 88, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 59, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 93, "col_offset": 33, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.data.tokenizers.word_splitter.WordSplitter]"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.data.tokenizers.word_filter.WordFilter]"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.data.tokenizers.word_stemmer.WordStemmer]"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "pop", "type": "Any"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "pop", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "assert_empty", "type": "Callable[[str], None]"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 57, "col_offset": 29, "nodeName": "List", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "_start_tokens", "type": "Union[List[str], List[nothing]]"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "_word_splitter", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "List", "type": "Any"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "_word_splitter", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "_filter_and_stem", "type": "Any"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "words", "type": "Any"}, {"lineNumber": 81, "col_offset": 49, "nodeName": "words", "type": "Any"}, {"lineNumber": 81, "col_offset": 58, "nodeName": "batched_words", "type": "Any"}, {"lineNumber": 79, "col_offset": 55, "nodeName": "List", "type": "Any"}, {"lineNumber": 83, "col_offset": 38, "nodeName": "List", "type": "Any"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "_word_filter", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "stem_word", "type": "Any"}, {"lineNumber": 85, "col_offset": 54, "nodeName": "word", "type": "Any"}, {"lineNumber": 85, "col_offset": 64, "nodeName": "word", "type": "Any"}, {"lineNumber": 85, "col_offset": 72, "nodeName": "filtered_words", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 94, "col_offset": 24, "nodeName": "WordSplitter", "type": "Type[allennlp.data.tokenizers.word_splitter.WordSplitter]"}, {"lineNumber": 94, "col_offset": 49, "nodeName": "pop", "type": "Any"}, {"lineNumber": 95, "col_offset": 22, "nodeName": "WordFilter", "type": "Type[allennlp.data.tokenizers.word_filter.WordFilter]"}, {"lineNumber": 95, "col_offset": 45, "nodeName": "pop", "type": "Any"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "WordStemmer", "type": "Type[allennlp.data.tokenizers.word_stemmer.WordStemmer]"}, {"lineNumber": 96, "col_offset": 47, "nodeName": "pop", "type": "Any"}, {"lineNumber": 97, "col_offset": 23, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 98, "col_offset": 21, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 99, "col_offset": 28, "nodeName": "cls", "type": "Any"}, {"lineNumber": 100, "col_offset": 33, "nodeName": "word_splitter", "type": "allennlp.data.tokenizers.word_splitter.WordSplitter"}, {"lineNumber": 101, "col_offset": 31, "nodeName": "word_filter", "type": "allennlp.data.tokenizers.word_filter.WordFilter"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "word_stemmer", "type": "allennlp.data.tokenizers.word_stemmer.WordStemmer"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "start_tokens", "type": "Any"}, {"lineNumber": 104, "col_offset": 30, "nodeName": "end_tokens", "type": "Any"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 80, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 60, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 83, "col_offset": 43, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "_word_stemmer", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "stemmed_words", "type": "List[Union[Any, allennlp.data.tokenizers.token.Token]]"}, {"lineNumber": 87, "col_offset": 36, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "start_token", "type": "Any"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "stemmed_words", "type": "List[Union[Any, allennlp.data.tokenizers.token.Token]]"}, {"lineNumber": 89, "col_offset": 33, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 89, "col_offset": 39, "nodeName": "end_token", "type": "Any"}, {"lineNumber": 94, "col_offset": 49, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 95, "col_offset": 45, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 96, "col_offset": 47, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 85, "col_offset": 25, "nodeName": "self", "type": "Any"}]