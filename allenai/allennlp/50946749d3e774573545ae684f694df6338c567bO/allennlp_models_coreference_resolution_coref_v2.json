[{"lineNumber": 19, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 23, "col_offset": 28, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 19, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 381, "col_offset": 79, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 452, "col_offset": 69, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 666, "col_offset": 79, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 19, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "_text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 79, "col_offset": 36, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "_context_layer", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "context_layer", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "_antecedent_feedforward", "type": "allennlp.modules.time_distributed.TimeDistributed"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "_mention_pruner", "type": "allennlp.modules.span_pruner.SpanPruner"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "_antecedent_scorer", "type": "allennlp.modules.time_distributed.TimeDistributed"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "_head_scorer", "type": "allennlp.modules.time_distributed.TimeDistributed"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "_num_distance_buckets", "type": "int"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "_distance_embedding", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "_span_width_embedding", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "_max_span_width", "type": "int"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "max_span_width", "type": "int"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "_spans_per_word", "type": "float"}, {"lineNumber": 95, "col_offset": 31, "nodeName": "spans_per_word", "type": "float"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "_max_antecedents", "type": "int"}, {"lineNumber": 96, "col_offset": 32, "nodeName": "max_antecedents", "type": "int"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "_mention_recall", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "_conll_coref_scores", "type": "Any"}, {"lineNumber": 149, "col_offset": 8, "nodeName": "text_embeddings", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "document_length", "type": "Any"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "num_spans", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "text_mask", "type": "Any"}, {"lineNumber": 158, "col_offset": 8, "nodeName": "span_mask", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "span_starts", "type": "Any"}, {"lineNumber": 167, "col_offset": 8, "nodeName": "span_ends", "type": "Any"}, {"lineNumber": 175, "col_offset": 8, "nodeName": "num_spans_to_keep", "type": "int"}, {"lineNumber": 181, "col_offset": 8, "nodeName": "top_span_mask", "type": "Any"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "flat_top_span_indices", "type": "Any"}, {"lineNumber": 198, "col_offset": 8, "nodeName": "max_antecedents", "type": "Union[Any, int]"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "top_spans", "type": "Any"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "predicted_antecedents", "type": "Any"}, {"lineNumber": 287, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 58, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 312, "col_offset": 8, "nodeName": "batch_top_spans", "type": "Any"}, {"lineNumber": 317, "col_offset": 8, "nodeName": "batch_predicted_antecedents", "type": "Any"}, {"lineNumber": 322, "col_offset": 8, "nodeName": "antecedent_indices", "type": "Any"}, {"lineNumber": 323, "col_offset": 8, "nodeName": "batch_clusters", "type": "List[Union[List[List[Tuple[int, int]]], List[Union[List[Union[Tuple[int, int], Tuple[Any, Any]]], List[Tuple[Any, Any]]]]]]"}, {"lineNumber": 364, "col_offset": 34, "nodeName": "batch_clusters", "type": "List[Union[List[List[Tuple[int, int]]], List[Union[List[Union[Tuple[int, int], Tuple[Any, Any]]], List[Tuple[Any, Any]]]]]]"}, {"lineNumber": 365, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 369, "col_offset": 8, "nodeName": "mention_recall", "type": "Any"}, {"lineNumber": 368, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 420, "col_offset": 8, "nodeName": "span_mask", "type": "Any"}, {"lineNumber": 421, "col_offset": 8, "nodeName": "raw_span_indices", "type": "Any"}, {"lineNumber": 425, "col_offset": 8, "nodeName": "span_mask", "type": "Any"}, {"lineNumber": 427, "col_offset": 8, "nodeName": "span_indices", "type": "Any"}, {"lineNumber": 430, "col_offset": 8, "nodeName": "flat_span_indices", "type": "Any"}, {"lineNumber": 433, "col_offset": 8, "nodeName": "span_text_embeddings", "type": "Any"}, {"lineNumber": 436, "col_offset": 8, "nodeName": "span_head_scores", "type": "Any"}, {"lineNumber": 439, "col_offset": 8, "nodeName": "span_head_weights", "type": "Any"}, {"lineNumber": 444, "col_offset": 8, "nodeName": "attended_text_embeddings", "type": "Any"}, {"lineNumber": 446, "col_offset": 15, "nodeName": "attended_text_embeddings", "type": "Any"}, {"lineNumber": 381, "col_offset": 79, "nodeName": "torch", "type": "Any"}, {"lineNumber": 477, "col_offset": 8, "nodeName": "contextualized_embeddings", "type": "Any"}, {"lineNumber": 480, "col_offset": 8, "nodeName": "start_embeddings", "type": "Any"}, {"lineNumber": 481, "col_offset": 8, "nodeName": "end_embeddings", "type": "Any"}, {"lineNumber": 485, "col_offset": 8, "nodeName": "span_widths", "type": "Any"}, {"lineNumber": 487, "col_offset": 8, "nodeName": "span_width_embeddings", "type": "Any"}, {"lineNumber": 490, "col_offset": 8, "nodeName": "head_scores", "type": "Any"}, {"lineNumber": 503, "col_offset": 15, "nodeName": "span_embeddings", "type": "Any"}, {"lineNumber": 452, "col_offset": 69, "nodeName": "torch", "type": "Any"}, {"lineNumber": 546, "col_offset": 8, "nodeName": "target_indices", "type": "Any"}, {"lineNumber": 549, "col_offset": 8, "nodeName": "valid_antecedent_offsets", "type": "Any"}, {"lineNumber": 553, "col_offset": 8, "nodeName": "raw_antecedent_indices", "type": "Any"}, {"lineNumber": 562, "col_offset": 8, "nodeName": "valid_antecedent_log_mask", "type": "Any"}, {"lineNumber": 565, "col_offset": 8, "nodeName": "valid_antecedent_indices", "type": "Any"}, {"lineNumber": 508, "col_offset": 54, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 598, "col_offset": 8, "nodeName": "target_embeddings", "type": "Any"}, {"lineNumber": 606, "col_offset": 8, "nodeName": "antecedent_distance_embeddings", "type": "Any"}, {"lineNumber": 613, "col_offset": 8, "nodeName": "antecedent_distance_embeddings", "type": "Any"}, {"lineNumber": 620, "col_offset": 15, "nodeName": "span_pair_embeddings", "type": "Any"}, {"lineNumber": 650, "col_offset": 8, "nodeName": "target_labels", "type": "Any"}, {"lineNumber": 651, "col_offset": 8, "nodeName": "same_cluster_indicator", "type": "Any"}, {"lineNumber": 652, "col_offset": 8, "nodeName": "non_dummy_indicator", "type": "Any"}, {"lineNumber": 653, "col_offset": 8, "nodeName": "pairwise_labels", "type": "Any"}, {"lineNumber": 656, "col_offset": 8, "nodeName": "dummy_labels", "type": "Any"}, {"lineNumber": 659, "col_offset": 8, "nodeName": "pairwise_labels_with_dummy_label", "type": "Any"}, {"lineNumber": 660, "col_offset": 15, "nodeName": "pairwise_labels_with_dummy_label", "type": "Any"}, {"lineNumber": 700, "col_offset": 8, "nodeName": "antecedent_scores", "type": "Any"}, {"lineNumber": 701, "col_offset": 8, "nodeName": "antecedent_scores", "type": "Any"}, {"lineNumber": 701, "col_offset": 29, "nodeName": "antecedent_log_mask", "type": "Any"}, {"lineNumber": 704, "col_offset": 8, "nodeName": "shape", "type": "List[Union[Any, int]]"}, {"lineNumber": 705, "col_offset": 8, "nodeName": "dummy_scores", "type": "Any"}, {"lineNumber": 708, "col_offset": 8, "nodeName": "coreference_scores", "type": "Any"}, {"lineNumber": 709, "col_offset": 15, "nodeName": "coreference_scores", "type": "Any"}, {"lineNumber": 666, "col_offset": 79, "nodeName": "torch", "type": "Any"}, {"lineNumber": 713, "col_offset": 8, "nodeName": "embedder_params", "type": "Any"}, {"lineNumber": 714, "col_offset": 8, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 715, "col_offset": 8, "nodeName": "context_layer", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 716, "col_offset": 8, "nodeName": "mention_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 717, "col_offset": 8, "nodeName": "antecedent_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 719, "col_offset": 8, "nodeName": "feature_size", "type": "int"}, {"lineNumber": 720, "col_offset": 8, "nodeName": "max_span_width", "type": "int"}, {"lineNumber": 721, "col_offset": 8, "nodeName": "spans_per_word", "type": "float"}, {"lineNumber": 722, "col_offset": 8, "nodeName": "max_antecedents", "type": "int"}, {"lineNumber": 723, "col_offset": 8, "nodeName": "lexical_dropout", "type": "float"}, {"lineNumber": 725, "col_offset": 8, "nodeName": "init_params", "type": "Any"}, {"lineNumber": 726, "col_offset": 8, "nodeName": "reg_params", "type": "Any"}, {"lineNumber": 730, "col_offset": 8, "nodeName": "regularizer", "type": "Optional[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 77, "col_offset": 52, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 77, "col_offset": 59, "nodeName": "regularizer", "type": "Optional[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 39, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 81, "col_offset": 55, "nodeName": "antecedent_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "Sequential", "type": "Any"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 31, "nodeName": "SpanPruner", "type": "Type[allennlp.modules.span_pruner.SpanPruner]"}, {"lineNumber": 85, "col_offset": 42, "nodeName": "feedforward_scorer", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 34, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 35, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 91, "col_offset": 45, "nodeName": "_num_distance_buckets", "type": "int"}, {"lineNumber": 91, "col_offset": 73, "nodeName": "feature_size", "type": "int"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 37, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 92, "col_offset": 47, "nodeName": "max_span_width", "type": "int"}, {"lineNumber": 92, "col_offset": 63, "nodeName": "feature_size", "type": "int"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 31, "nodeName": "MentionRecall", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "ConllCorefScores", "type": "Any"}, {"lineNumber": 100, "col_offset": 11, "nodeName": "lexical_dropout", "type": "float"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "_lexical_dropout", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "_lexical_dropout", "type": "Callable[[Any], Any]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 104, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "_lexical_dropout", "type": "Any"}, {"lineNumber": 151, "col_offset": 26, "nodeName": "size", "type": "Any"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "size", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "float", "type": "Any"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "float", "type": "Any"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "long", "type": "Any"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "long", "type": "Any"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "_compute_span_representations", "type": "Any"}, {"lineNumber": 170, "col_offset": 61, "nodeName": "text_embeddings", "type": "Any"}, {"lineNumber": 171, "col_offset": 61, "nodeName": "text_mask", "type": "Any"}, {"lineNumber": 172, "col_offset": 61, "nodeName": "span_starts", "type": "Any"}, {"lineNumber": 173, "col_offset": 61, "nodeName": "span_ends", "type": "Any"}, {"lineNumber": 175, "col_offset": 28, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 178, "col_offset": 54, "nodeName": "_mention_pruner", "type": "Any"}, {"lineNumber": 178, "col_offset": 75, "nodeName": "span_embeddings", "type": "Any"}, {"lineNumber": 180, "col_offset": 75, "nodeName": "num_spans_to_keep", "type": "int"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 188, "col_offset": 32, "nodeName": "flatten_and_batch_shift_indices", "type": "Callable[[Any, int], Any]"}, {"lineNumber": 188, "col_offset": 69, "nodeName": "top_span_indices", "type": "Any"}, {"lineNumber": 188, "col_offset": 87, "nodeName": "num_spans", "type": "Any"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "batched_index_select", "type": "Callable[..., Any]"}, {"lineNumber": 190, "col_offset": 52, "nodeName": "span_starts", "type": "Any"}, {"lineNumber": 191, "col_offset": 52, "nodeName": "top_span_indices", "type": "Any"}, {"lineNumber": 192, "col_offset": 52, "nodeName": "flat_top_span_indices", "type": "Any"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "batched_index_select", "type": "Callable[..., Any]"}, {"lineNumber": 193, "col_offset": 50, "nodeName": "span_ends", "type": "Any"}, {"lineNumber": 194, "col_offset": 50, "nodeName": "top_span_indices", "type": "Any"}, {"lineNumber": 195, "col_offset": 50, "nodeName": "flat_top_span_indices", "type": "Any"}, {"lineNumber": 198, "col_offset": 26, "nodeName": "min", "type": "Callable"}, {"lineNumber": 198, "col_offset": 30, "nodeName": "_max_antecedents", "type": "Any"}, {"lineNumber": 198, "col_offset": 53, "nodeName": "num_spans_to_keep", "type": "int"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "_generate_valid_antecedents", "type": "Any"}, {"lineNumber": 219, "col_offset": 45, "nodeName": "num_spans_to_keep", "type": "int"}, {"lineNumber": 219, "col_offset": 64, "nodeName": "max_antecedents", "type": "Union[int, Any]"}, {"lineNumber": 219, "col_offset": 81, "nodeName": "is_cuda", "type": "Any"}, {"lineNumber": 222, "col_offset": 42, "nodeName": "flattened_index_select", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 222, "col_offset": 70, "nodeName": "top_span_embeddings", "type": "Any"}, {"lineNumber": 223, "col_offset": 70, "nodeName": "valid_antecedent_indices", "type": "Any"}, {"lineNumber": 230, "col_offset": 31, "nodeName": "_compute_span_pair_embeddings", "type": "Any"}, {"lineNumber": 230, "col_offset": 66, "nodeName": "top_span_embeddings", "type": "Any"}, {"lineNumber": 231, "col_offset": 66, "nodeName": "candidate_antecedent_embeddings", "type": "Any"}, {"lineNumber": 232, "col_offset": 66, "nodeName": "valid_antecedent_offsets", "type": "Any"}, {"lineNumber": 234, "col_offset": 29, "nodeName": "_compute_coreference_scores", "type": "Any"}, {"lineNumber": 234, "col_offset": 62, "nodeName": "span_pair_embeddings", "type": "Any"}, {"lineNumber": 235, "col_offset": 62, "nodeName": "top_span_mention_scores", "type": "Any"}, {"lineNumber": 236, "col_offset": 62, "nodeName": "candidate_antecedent_mention_scores", "type": "Any"}, {"lineNumber": 237, "col_offset": 62, "nodeName": "valid_antecedent_log_mask", "type": "Any"}, {"lineNumber": 240, "col_offset": 20, "nodeName": "cat", "type": "Any"}, {"lineNumber": 246, "col_offset": 8, "nodeName": "_", "type": "Any"}, {"lineNumber": 246, "col_offset": 11, "nodeName": "predicted_antecedents", "type": "Any"}, {"lineNumber": 246, "col_offset": 35, "nodeName": "max", "type": "Any"}, {"lineNumber": 252, "col_offset": 36, "nodeName": "top_spans", "type": "Any"}, {"lineNumber": 253, "col_offset": 45, "nodeName": "valid_antecedent_indices", "type": "Any"}, {"lineNumber": 254, "col_offset": 48, "nodeName": "predicted_antecedents", "type": "Any"}, {"lineNumber": 255, "col_offset": 11, "nodeName": "span_labels", "type": "Any"}, {"lineNumber": 263, "col_offset": 12, "nodeName": "antecedent_labels", "type": "Any"}, {"lineNumber": 279, "col_offset": 12, "nodeName": "coreference_log_probs", "type": "Any"}, {"lineNumber": 280, "col_offset": 12, "nodeName": "correct_antecedent_log_probs", "type": "Any"}, {"lineNumber": 281, "col_offset": 12, "nodeName": "negative_marginal_log_likelihood", "type": "Any"}, {"lineNumber": 286, "col_offset": 34, "nodeName": "negative_marginal_log_likelihood", "type": "Any"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 317, "col_offset": 38, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 322, "col_offset": 29, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 327, "col_offset": 12, "nodeName": "top_spans", "type": "Any"}, {"lineNumber": 327, "col_offset": 23, "nodeName": "predicted_antecedents", "type": "Any"}, {"lineNumber": 327, "col_offset": 48, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 327, "col_offset": 52, "nodeName": "batch_top_spans", "type": "Any"}, {"lineNumber": 327, "col_offset": 69, "nodeName": "batch_predicted_antecedents", "type": "Any"}, {"lineNumber": 328, "col_offset": 12, "nodeName": "spans_to_cluster_ids", "type": "Dict[Union[Tuple[int, int], Tuple[Any, Any]], int]"}, {"lineNumber": 329, "col_offset": 12, "nodeName": "clusters", "type": "List[Union[List[Union[Tuple[int, int], Tuple[Any, Any]]], List[Tuple[Any, Any]]]]"}, {"lineNumber": 364, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 368, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 369, "col_offset": 25, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 369, "col_offset": 57, "nodeName": "reset", "type": "bool"}, {"lineNumber": 370, "col_offset": 8, "nodeName": "coref_precision", "type": "Any"}, {"lineNumber": 370, "col_offset": 25, "nodeName": "coref_recall", "type": "Any"}, {"lineNumber": 370, "col_offset": 39, "nodeName": "coref_f1", "type": "Any"}, {"lineNumber": 370, "col_offset": 50, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 370, "col_offset": 86, "nodeName": "reset", "type": "bool"}, {"lineNumber": 372, "col_offset": 35, "nodeName": "coref_precision", "type": "Any"}, {"lineNumber": 373, "col_offset": 32, "nodeName": "coref_recall", "type": "Any"}, {"lineNumber": 374, "col_offset": 28, "nodeName": "coref_f1", "type": "Any"}, {"lineNumber": 375, "col_offset": 34, "nodeName": "mention_recall", "type": "Any"}, {"lineNumber": 378, "col_offset": 59, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 379, "col_offset": 63, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 380, "col_offset": 57, "nodeName": "IntTensor", "type": "Any"}, {"lineNumber": 381, "col_offset": 59, "nodeName": "IntTensor", "type": "Any"}, {"lineNumber": 420, "col_offset": 21, "nodeName": "float", "type": "Any"}, {"lineNumber": 421, "col_offset": 27, "nodeName": "span_ends", "type": "Any"}, {"lineNumber": 421, "col_offset": 39, "nodeName": "max_span_range_indices", "type": "Any"}, {"lineNumber": 425, "col_offset": 20, "nodeName": "span_mask", "type": "Any"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "long", "type": "Any"}, {"lineNumber": 430, "col_offset": 28, "nodeName": "flatten_and_batch_shift_indices", "type": "Callable[[Any, int], Any]"}, {"lineNumber": 430, "col_offset": 65, "nodeName": "span_indices", "type": "Any"}, {"lineNumber": 433, "col_offset": 31, "nodeName": "batched_index_select", "type": "Callable[..., Any]"}, {"lineNumber": 433, "col_offset": 57, "nodeName": "text_embeddings", "type": "Any"}, {"lineNumber": 433, "col_offset": 74, "nodeName": "span_indices", "type": "Any"}, {"lineNumber": 433, "col_offset": 88, "nodeName": "flat_span_indices", "type": "Any"}, {"lineNumber": 436, "col_offset": 27, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 439, "col_offset": 28, "nodeName": "last_dim_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 439, "col_offset": 50, "nodeName": "span_head_scores", "type": "Any"}, {"lineNumber": 439, "col_offset": 68, "nodeName": "span_mask", "type": "Any"}, {"lineNumber": 444, "col_offset": 35, "nodeName": "weighted_sum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 444, "col_offset": 53, "nodeName": "span_text_embeddings", "type": "Any"}, {"lineNumber": 444, "col_offset": 75, "nodeName": "span_head_weights", "type": "Any"}, {"lineNumber": 449, "col_offset": 55, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 450, "col_offset": 49, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 451, "col_offset": 51, "nodeName": "IntTensor", "type": "Any"}, {"lineNumber": 452, "col_offset": 49, "nodeName": "IntTensor", "type": "Any"}, {"lineNumber": 477, "col_offset": 36, "nodeName": "_context_layer", "type": "Any"}, {"lineNumber": 477, "col_offset": 56, "nodeName": "text_embeddings", "type": "Any"}, {"lineNumber": 477, "col_offset": 73, "nodeName": "text_mask", "type": "Any"}, {"lineNumber": 480, "col_offset": 27, "nodeName": "batched_index_select", "type": "Callable[..., Any]"}, {"lineNumber": 480, "col_offset": 53, "nodeName": "contextualized_embeddings", "type": "Any"}, {"lineNumber": 481, "col_offset": 25, "nodeName": "batched_index_select", "type": "Callable[..., Any]"}, {"lineNumber": 481, "col_offset": 51, "nodeName": "contextualized_embeddings", "type": "Any"}, {"lineNumber": 485, "col_offset": 22, "nodeName": "span_ends", "type": "Any"}, {"lineNumber": 485, "col_offset": 34, "nodeName": "span_starts", "type": "Any"}, {"lineNumber": 487, "col_offset": 32, "nodeName": "_span_width_embedding", "type": "Any"}, {"lineNumber": 490, "col_offset": 22, "nodeName": "_head_scorer", "type": "Any"}, {"lineNumber": 490, "col_offset": 40, "nodeName": "contextualized_embeddings", "type": "Any"}, {"lineNumber": 494, "col_offset": 35, "nodeName": "_create_attended_span_representations", "type": "Any"}, {"lineNumber": 494, "col_offset": 78, "nodeName": "head_scores", "type": "Any"}, {"lineNumber": 495, "col_offset": 78, "nodeName": "text_embeddings", "type": "Any"}, {"lineNumber": 496, "col_offset": 78, "nodeName": "span_ends", "type": "Any"}, {"lineNumber": 497, "col_offset": 78, "nodeName": "span_widths", "type": "Any"}, {"lineNumber": 499, "col_offset": 26, "nodeName": "cat", "type": "Any"}, {"lineNumber": 506, "col_offset": 55, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 507, "col_offset": 53, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 508, "col_offset": 45, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 546, "col_offset": 25, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 549, "col_offset": 36, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 553, "col_offset": 33, "nodeName": "target_indices", "type": "Any"}, {"lineNumber": 553, "col_offset": 50, "nodeName": "valid_antecedent_offsets", "type": "Any"}, {"lineNumber": 562, "col_offset": 37, "nodeName": "log", "type": "Any"}, {"lineNumber": 565, "col_offset": 35, "nodeName": "long", "type": "Any"}, {"lineNumber": 566, "col_offset": 15, "nodeName": "valid_antecedent_indices", "type": "Any"}, {"lineNumber": 566, "col_offset": 41, "nodeName": "valid_antecedent_offsets", "type": "Any"}, {"lineNumber": 566, "col_offset": 67, "nodeName": "valid_antecedent_log_mask", "type": "Any"}, {"lineNumber": 569, "col_offset": 59, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 570, "col_offset": 61, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 571, "col_offset": 58, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 598, "col_offset": 28, "nodeName": "expand_as", "type": "Any"}, {"lineNumber": 598, "col_offset": 71, "nodeName": "antecedent_embeddings", "type": "Any"}, {"lineNumber": 601, "col_offset": 41, "nodeName": "_distance_embedding", "type": "Any"}, {"lineNumber": 606, "col_offset": 41, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 613, "col_offset": 41, "nodeName": "expand", "type": "Any"}, {"lineNumber": 616, "col_offset": 31, "nodeName": "cat", "type": "Any"}, {"lineNumber": 623, "col_offset": 57, "nodeName": "IntTensor", "type": "Any"}, {"lineNumber": 624, "col_offset": 59, "nodeName": "IntTensor", "type": "Any"}, {"lineNumber": 650, "col_offset": 24, "nodeName": "expand_as", "type": "Any"}, {"lineNumber": 650, "col_offset": 50, "nodeName": "antecedent_labels", "type": "Any"}, {"lineNumber": 651, "col_offset": 34, "nodeName": "float", "type": "Any"}, {"lineNumber": 652, "col_offset": 31, "nodeName": "float", "type": "Any"}, {"lineNumber": 653, "col_offset": 26, "nodeName": "same_cluster_indicator", "type": "Any"}, {"lineNumber": 653, "col_offset": 51, "nodeName": "non_dummy_indicator", "type": "Any"}, {"lineNumber": 656, "col_offset": 24, "nodeName": "prod", "type": "Any"}, {"lineNumber": 659, "col_offset": 43, "nodeName": "cat", "type": "Any"}, {"lineNumber": 663, "col_offset": 57, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 664, "col_offset": 61, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 665, "col_offset": 63, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 666, "col_offset": 57, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 700, "col_offset": 29, "nodeName": "top_span_mention_scores", "type": "Any"}, {"lineNumber": 700, "col_offset": 55, "nodeName": "antecedent_mention_scores", "type": "Any"}, {"lineNumber": 705, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 708, "col_offset": 29, "nodeName": "cat", "type": "Any"}, {"lineNumber": 712, "col_offset": 32, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 712, "col_offset": 52, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 713, "col_offset": 26, "nodeName": "pop", "type": "Any"}, {"lineNumber": 714, "col_offset": 30, "nodeName": "from_params", "type": "Callable[[Any, allennlp.data.vocabulary.Vocabulary, allennlp.common.params.Params], allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 714, "col_offset": 60, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 714, "col_offset": 67, "nodeName": "embedder_params", "type": "Any"}, {"lineNumber": 715, "col_offset": 24, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 716, "col_offset": 30, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 717, "col_offset": 33, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 719, "col_offset": 23, "nodeName": "pop_int", "type": "Callable[..., int]"}, {"lineNumber": 720, "col_offset": 25, "nodeName": "pop_int", "type": "Callable[..., int]"}, {"lineNumber": 721, "col_offset": 25, "nodeName": "pop_float", "type": "Callable[..., float]"}, {"lineNumber": 722, "col_offset": 26, "nodeName": "pop_int", "type": "Callable[..., int]"}, {"lineNumber": 723, "col_offset": 26, "nodeName": "pop_float", "type": "Callable[..., float]"}, {"lineNumber": 725, "col_offset": 22, "nodeName": "pop", "type": "Any"}, {"lineNumber": 726, "col_offset": 21, "nodeName": "pop", "type": "Any"}, {"lineNumber": 732, "col_offset": 8, "nodeName": "assert_empty", "type": "Callable[[str], None]"}, {"lineNumber": 732, "col_offset": 28, "nodeName": "__name__", "type": "Any"}, {"lineNumber": 733, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 76, "col_offset": 30, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 83, "col_offset": 32, "nodeName": "mention_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 86, "col_offset": 50, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 87, "col_offset": 44, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 91, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 46, "nodeName": "x", "type": "Any"}, {"lineNumber": 112, "col_offset": 26, "nodeName": "List", "type": "Any"}, {"lineNumber": 149, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 149, "col_offset": 48, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 149, "col_offset": 74, "nodeName": "text", "type": "Dict[str, Any]"}, {"lineNumber": 151, "col_offset": 26, "nodeName": "text_embeddings", "type": "Any"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "span_starts", "type": "Any"}, {"lineNumber": 170, "col_offset": 26, "nodeName": "self", "type": "Any"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "floor", "type": "Callable[[SupportsFloat], int]"}, {"lineNumber": 178, "col_offset": 54, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 75, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 181, "col_offset": 24, "nodeName": "top_span_mask", "type": "Any"}, {"lineNumber": 188, "col_offset": 32, "nodeName": "util", "type": "module"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "util", "type": "module"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "util", "type": "module"}, {"lineNumber": 198, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 219, "col_offset": 81, "nodeName": "text_mask", "type": "Any"}, {"lineNumber": 222, "col_offset": 42, "nodeName": "util", "type": "module"}, {"lineNumber": 230, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 234, "col_offset": 29, "nodeName": "self", "type": "Any"}, {"lineNumber": 240, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 240, "col_offset": 31, "nodeName": "top_span_starts", "type": "Any"}, {"lineNumber": 240, "col_offset": 48, "nodeName": "top_span_ends", "type": "Any"}, {"lineNumber": 246, "col_offset": 35, "nodeName": "coreference_scores", "type": "Any"}, {"lineNumber": 257, "col_offset": 33, "nodeName": "batched_index_select", "type": "Callable[..., Any]"}, {"lineNumber": 258, "col_offset": 59, "nodeName": "top_span_indices", "type": "Any"}, {"lineNumber": 259, "col_offset": 59, "nodeName": "flat_top_span_indices", "type": "Any"}, {"lineNumber": 263, "col_offset": 33, "nodeName": "long", "type": "Any"}, {"lineNumber": 267, "col_offset": 37, "nodeName": "_compute_antecedent_gold_labels", "type": "Any"}, {"lineNumber": 267, "col_offset": 74, "nodeName": "pruned_gold_labels", "type": "Any"}, {"lineNumber": 268, "col_offset": 74, "nodeName": "antecedent_labels", "type": "Any"}, {"lineNumber": 279, "col_offset": 36, "nodeName": "last_dim_log_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 279, "col_offset": 62, "nodeName": "coreference_scores", "type": "Any"}, {"lineNumber": 279, "col_offset": 82, "nodeName": "top_span_mask", "type": "Any"}, {"lineNumber": 280, "col_offset": 43, "nodeName": "coreference_log_probs", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "_mention_recall", "type": "Any"}, {"lineNumber": 283, "col_offset": 33, "nodeName": "top_spans", "type": "Any"}, {"lineNumber": 283, "col_offset": 44, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "_conll_coref_scores", "type": "Any"}, {"lineNumber": 284, "col_offset": 37, "nodeName": "top_spans", "type": "Any"}, {"lineNumber": 284, "col_offset": 48, "nodeName": "valid_antecedent_indices", "type": "Any"}, {"lineNumber": 284, "col_offset": 74, "nodeName": "predicted_antecedents", "type": "Any"}, {"lineNumber": 284, "col_offset": 97, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 286, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 63, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 112, "col_offset": 68, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 290, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 317, "col_offset": 38, "nodeName": "data", "type": "Any"}, {"lineNumber": 322, "col_offset": 29, "nodeName": "data", "type": "Any"}, {"lineNumber": 331, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 331, "col_offset": 51, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 343, "col_offset": 16, "nodeName": "predicted_index", "type": "Any"}, {"lineNumber": 359, "col_offset": 39, "nodeName": "span", "type": "Any"}, {"lineNumber": 361, "col_offset": 63, "nodeName": "predicted_cluster_id", "type": "int"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 362, "col_offset": 34, "nodeName": "clusters", "type": "List[Union[List[Union[Tuple[int, int], Tuple[Any, Any]]], List[Tuple[Any, Any]]]]"}, {"lineNumber": 369, "col_offset": 25, "nodeName": "_mention_recall", "type": "Any"}, {"lineNumber": 370, "col_offset": 50, "nodeName": "_conll_coref_scores", "type": "Any"}, {"lineNumber": 368, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 368, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 378, "col_offset": 59, "nodeName": "torch", "type": "Any"}, {"lineNumber": 379, "col_offset": 63, "nodeName": "torch", "type": "Any"}, {"lineNumber": 380, "col_offset": 57, "nodeName": "torch", "type": "Any"}, {"lineNumber": 381, "col_offset": 59, "nodeName": "torch", "type": "Any"}, {"lineNumber": 425, "col_offset": 33, "nodeName": "float", "type": "Any"}, {"lineNumber": 430, "col_offset": 28, "nodeName": "util", "type": "module"}, {"lineNumber": 430, "col_offset": 79, "nodeName": "size", "type": "Any"}, {"lineNumber": 433, "col_offset": 31, "nodeName": "util", "type": "module"}, {"lineNumber": 439, "col_offset": 28, "nodeName": "util", "type": "module"}, {"lineNumber": 444, "col_offset": 35, "nodeName": "util", "type": "module"}, {"lineNumber": 449, "col_offset": 55, "nodeName": "torch", "type": "Any"}, {"lineNumber": 450, "col_offset": 49, "nodeName": "torch", "type": "Any"}, {"lineNumber": 451, "col_offset": 51, "nodeName": "torch", "type": "Any"}, {"lineNumber": 452, "col_offset": 49, "nodeName": "torch", "type": "Any"}, {"lineNumber": 477, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 480, "col_offset": 27, "nodeName": "util", "type": "module"}, {"lineNumber": 480, "col_offset": 80, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 481, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 481, "col_offset": 78, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 487, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 487, "col_offset": 59, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 490, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 494, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 499, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 499, "col_offset": 37, "nodeName": "start_embeddings", "type": "Any"}, {"lineNumber": 500, "col_offset": 37, "nodeName": "end_embeddings", "type": "Any"}, {"lineNumber": 501, "col_offset": 37, "nodeName": "span_width_embeddings", "type": "Any"}, {"lineNumber": 502, "col_offset": 37, "nodeName": "attended_text_embeddings", "type": "Any"}, {"lineNumber": 508, "col_offset": 60, "nodeName": "IntTensor", "type": "Any"}, {"lineNumber": 509, "col_offset": 60, "nodeName": "IntTensor", "type": "Any"}, {"lineNumber": 510, "col_offset": 60, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 569, "col_offset": 59, "nodeName": "torch", "type": "Any"}, {"lineNumber": 570, "col_offset": 61, "nodeName": "torch", "type": "Any"}, {"lineNumber": 571, "col_offset": 58, "nodeName": "torch", "type": "Any"}, {"lineNumber": 601, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 602, "col_offset": 16, "nodeName": "bucket_values", "type": "Callable[..., Any]"}, {"lineNumber": 602, "col_offset": 35, "nodeName": "antecedent_offsets", "type": "Any"}, {"lineNumber": 606, "col_offset": 41, "nodeName": "antecedent_distance_embeddings", "type": "Any"}, {"lineNumber": 608, "col_offset": 46, "nodeName": "size", "type": "Any"}, {"lineNumber": 609, "col_offset": 46, "nodeName": "size", "type": "Any"}, {"lineNumber": 610, "col_offset": 46, "nodeName": "size", "type": "Any"}, {"lineNumber": 611, "col_offset": 46, "nodeName": "size", "type": "Any"}, {"lineNumber": 613, "col_offset": 41, "nodeName": "antecedent_distance_embeddings", "type": "Any"}, {"lineNumber": 613, "col_offset": 80, "nodeName": "expanded_distance_embeddings_shape", "type": "Tuple[Any, Any, Any, Any]"}, {"lineNumber": 616, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 616, "col_offset": 42, "nodeName": "target_embeddings", "type": "Any"}, {"lineNumber": 617, "col_offset": 42, "nodeName": "antecedent_embeddings", "type": "Any"}, {"lineNumber": 619, "col_offset": 42, "nodeName": "antecedent_distance_embeddings", "type": "Any"}, {"lineNumber": 623, "col_offset": 57, "nodeName": "torch", "type": "Any"}, {"lineNumber": 624, "col_offset": 59, "nodeName": "torch", "type": "Any"}, {"lineNumber": 650, "col_offset": 24, "nodeName": "top_span_labels", "type": "Any"}, {"lineNumber": 659, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 659, "col_offset": 54, "nodeName": "dummy_labels", "type": "Any"}, {"lineNumber": 659, "col_offset": 68, "nodeName": "pairwise_labels", "type": "Any"}, {"lineNumber": 663, "col_offset": 57, "nodeName": "torch", "type": "Any"}, {"lineNumber": 664, "col_offset": 61, "nodeName": "torch", "type": "Any"}, {"lineNumber": 665, "col_offset": 63, "nodeName": "torch", "type": "Any"}, {"lineNumber": 666, "col_offset": 57, "nodeName": "torch", "type": "Any"}, {"lineNumber": 704, "col_offset": 17, "nodeName": "size", "type": "Any"}, {"lineNumber": 704, "col_offset": 44, "nodeName": "size", "type": "Any"}, {"lineNumber": 705, "col_offset": 32, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 708, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 708, "col_offset": 40, "nodeName": "dummy_scores", "type": "Any"}, {"lineNumber": 708, "col_offset": 54, "nodeName": "antecedent_scores", "type": "Any"}, {"lineNumber": 713, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 714, "col_offset": 30, "nodeName": "TextFieldEmbedder", "type": "Type[allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 715, "col_offset": 24, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 715, "col_offset": 51, "nodeName": "pop", "type": "Any"}, {"lineNumber": 716, "col_offset": 30, "nodeName": "FeedForward", "type": "Type[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 716, "col_offset": 54, "nodeName": "pop", "type": "Any"}, {"lineNumber": 717, "col_offset": 33, "nodeName": "FeedForward", "type": "Type[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 717, "col_offset": 57, "nodeName": "pop", "type": "Any"}, {"lineNumber": 719, "col_offset": 23, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 720, "col_offset": 25, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 721, "col_offset": 25, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 722, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 723, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 725, "col_offset": 22, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 726, "col_offset": 21, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 728, "col_offset": 26, "nodeName": "init_params", "type": "Any"}, {"lineNumber": 729, "col_offset": 28, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 730, "col_offset": 71, "nodeName": "reg_params", "type": "Any"}, {"lineNumber": 730, "col_offset": 22, "nodeName": "from_params", "type": "Callable[[Any, List[Tuple[str, allennlp.common.params.Params]]], Optional[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]]"}, {"lineNumber": 730, "col_offset": 56, "nodeName": "reg_params", "type": "Any"}, {"lineNumber": 732, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 732, "col_offset": 28, "nodeName": "cls", "type": "Any"}, {"lineNumber": 733, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 734, "col_offset": 39, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 735, "col_offset": 33, "nodeName": "context_layer", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 736, "col_offset": 39, "nodeName": "mention_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 737, "col_offset": 42, "nodeName": "antecedent_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 738, "col_offset": 32, "nodeName": "feature_size", "type": "int"}, {"lineNumber": 739, "col_offset": 34, "nodeName": "max_span_width", "type": "int"}, {"lineNumber": 740, "col_offset": 34, "nodeName": "spans_per_word", "type": "float"}, {"lineNumber": 741, "col_offset": 35, "nodeName": "max_antecedents", "type": "int"}, {"lineNumber": 742, "col_offset": 35, "nodeName": "lexical_dropout", "type": "float"}, {"lineNumber": 743, "col_offset": 31, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 744, "col_offset": 31, "nodeName": "regularizer", "type": "Optional[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]"}, {"lineNumber": 76, "col_offset": 39, "nodeName": "RegularizerApplicator", "type": "Type[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 77, "col_offset": 14, "nodeName": "CoreferenceResolverV2", "type": "Any"}, {"lineNumber": 77, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "Linear", "type": "Any"}, {"lineNumber": 86, "col_offset": 50, "nodeName": "nn", "type": "Any"}, {"lineNumber": 86, "col_offset": 66, "nodeName": "get_output_dim", "type": "Callable[[], Union[int, Sequence[int]]]"}, {"lineNumber": 87, "col_offset": 44, "nodeName": "nn", "type": "Any"}, {"lineNumber": 87, "col_offset": 60, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 101, "col_offset": 55, "nodeName": "lexical_dropout", "type": "float"}, {"lineNumber": 149, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "get_text_field_mask", "type": "Callable[..., Any]"}, {"lineNumber": 155, "col_offset": 45, "nodeName": "text", "type": "Dict[str, Any]"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "span_starts", "type": "Any"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "relu", "type": "Any"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "relu", "type": "Any"}, {"lineNumber": 175, "col_offset": 32, "nodeName": "math", "type": "module"}, {"lineNumber": 175, "col_offset": 43, "nodeName": "_spans_per_word", "type": "Any"}, {"lineNumber": 175, "col_offset": 66, "nodeName": "document_length", "type": "Any"}, {"lineNumber": 179, "col_offset": 75, "nodeName": "span_mask", "type": "Any"}, {"lineNumber": 226, "col_offset": 46, "nodeName": "flattened_index_select", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 226, "col_offset": 74, "nodeName": "top_span_mention_scores", "type": "Any"}, {"lineNumber": 227, "col_offset": 74, "nodeName": "valid_antecedent_indices", "type": "Any"}, {"lineNumber": 257, "col_offset": 33, "nodeName": "util", "type": "module"}, {"lineNumber": 257, "col_offset": 59, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 263, "col_offset": 33, "nodeName": "valid_antecedent_log_mask", "type": "Any"}, {"lineNumber": 267, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 279, "col_offset": 36, "nodeName": "util", "type": "module"}, {"lineNumber": 280, "col_offset": 67, "nodeName": "log", "type": "Any"}, {"lineNumber": 281, "col_offset": 48, "nodeName": "sum", "type": "Any"}, {"lineNumber": 283, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 284, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 112, "col_offset": 68, "nodeName": "torch", "type": "Any"}, {"lineNumber": 331, "col_offset": 20, "nodeName": "span", "type": "Any"}, {"lineNumber": 331, "col_offset": 26, "nodeName": "predicted_antecedent", "type": "Any"}, {"lineNumber": 331, "col_offset": 61, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 331, "col_offset": 65, "nodeName": "top_spans", "type": "Any"}, {"lineNumber": 331, "col_offset": 76, "nodeName": "predicted_antecedents", "type": "Any"}, {"lineNumber": 332, "col_offset": 19, "nodeName": "predicted_antecedent", "type": "Any"}, {"lineNumber": 343, "col_offset": 34, "nodeName": "antecedent_indices", "type": "Any"}, {"lineNumber": 348, "col_offset": 19, "nodeName": "antecedent_span", "type": "Tuple[Any, Any]"}, {"lineNumber": 349, "col_offset": 20, "nodeName": "predicted_cluster_id", "type": "int"}, {"lineNumber": 352, "col_offset": 20, "nodeName": "predicted_cluster_id", "type": "int"}, {"lineNumber": 356, "col_offset": 60, "nodeName": "predicted_cluster_id", "type": "int"}, {"lineNumber": 359, "col_offset": 16, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 359, "col_offset": 28, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 361, "col_offset": 16, "nodeName": "spans_to_cluster_ids", "type": "Dict[Union[Tuple[int, int], Tuple[Any, Any]], int]"}, {"lineNumber": 362, "col_offset": 12, "nodeName": "batch_clusters", "type": "List[Union[List[List[Tuple[int, int]]], List[Union[List[Union[Tuple[int, int], Tuple[Any, Any]]], List[Tuple[Any, Any]]]]]]"}, {"lineNumber": 369, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 370, "col_offset": 50, "nodeName": "self", "type": "Any"}, {"lineNumber": 413, "col_offset": 33, "nodeName": "get_range_vector", "type": "Callable[[int, Optional[bool]], Any]"}, {"lineNumber": 413, "col_offset": 55, "nodeName": "_max_span_width", "type": "Any"}, {"lineNumber": 414, "col_offset": 55, "nodeName": "is_cuda", "type": "Any"}, {"lineNumber": 420, "col_offset": 21, "nodeName": "max_span_range_indices", "type": "Any"}, {"lineNumber": 420, "col_offset": 47, "nodeName": "span_widths", "type": "Any"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "relu", "type": "Any"}, {"lineNumber": 430, "col_offset": 79, "nodeName": "text_embeddings", "type": "Any"}, {"lineNumber": 436, "col_offset": 27, "nodeName": "batched_index_select", "type": "Callable[..., Any]"}, {"lineNumber": 436, "col_offset": 53, "nodeName": "head_scores", "type": "Any"}, {"lineNumber": 436, "col_offset": 66, "nodeName": "span_indices", "type": "Any"}, {"lineNumber": 436, "col_offset": 80, "nodeName": "flat_span_indices", "type": "Any"}, {"lineNumber": 480, "col_offset": 80, "nodeName": "span_starts", "type": "Any"}, {"lineNumber": 481, "col_offset": 78, "nodeName": "span_ends", "type": "Any"}, {"lineNumber": 487, "col_offset": 59, "nodeName": "span_widths", "type": "Any"}, {"lineNumber": 546, "col_offset": 25, "nodeName": "get_range_vector", "type": "Callable[[int, Optional[bool]], Any]"}, {"lineNumber": 546, "col_offset": 47, "nodeName": "num_spans_to_keep", "type": "int"}, {"lineNumber": 546, "col_offset": 66, "nodeName": "is_cuda", "type": "bool"}, {"lineNumber": 562, "col_offset": 37, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 565, "col_offset": 35, "nodeName": "relu", "type": "Any"}, {"lineNumber": 508, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 509, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 510, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 598, "col_offset": 28, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 602, "col_offset": 16, "nodeName": "util", "type": "module"}, {"lineNumber": 603, "col_offset": 53, "nodeName": "_num_distance_buckets", "type": "Any"}, {"lineNumber": 608, "col_offset": 46, "nodeName": "antecedent_embeddings", "type": "Any"}, {"lineNumber": 609, "col_offset": 46, "nodeName": "antecedent_embeddings", "type": "Any"}, {"lineNumber": 610, "col_offset": 46, "nodeName": "antecedent_embeddings", "type": "Any"}, {"lineNumber": 611, "col_offset": 46, "nodeName": "antecedent_distance_embeddings", "type": "Any"}, {"lineNumber": 618, "col_offset": 42, "nodeName": "antecedent_embeddings", "type": "Any"}, {"lineNumber": 618, "col_offset": 66, "nodeName": "target_embeddings", "type": "Any"}, {"lineNumber": 651, "col_offset": 34, "nodeName": "target_labels", "type": "Any"}, {"lineNumber": 651, "col_offset": 51, "nodeName": "antecedent_labels", "type": "Any"}, {"lineNumber": 652, "col_offset": 31, "nodeName": "target_labels", "type": "Any"}, {"lineNumber": 656, "col_offset": 28, "nodeName": "pairwise_labels", "type": "Any"}, {"lineNumber": 698, "col_offset": 28, "nodeName": "_antecedent_scorer", "type": "Any"}, {"lineNumber": 704, "col_offset": 17, "nodeName": "antecedent_scores", "type": "Any"}, {"lineNumber": 704, "col_offset": 44, "nodeName": "antecedent_scores", "type": "Any"}, {"lineNumber": 715, "col_offset": 51, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 716, "col_offset": 54, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 717, "col_offset": 57, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 730, "col_offset": 22, "nodeName": "RegularizerApplicator", "type": "Type[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "nn", "type": "Any"}, {"lineNumber": 84, "col_offset": 48, "nodeName": "get_output_dim", "type": "Callable[[], Union[int, Sequence[int]]]"}, {"lineNumber": 86, "col_offset": 50, "nodeName": "torch", "type": "Any"}, {"lineNumber": 86, "col_offset": 66, "nodeName": "antecedent_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 87, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 87, "col_offset": 60, "nodeName": "context_layer", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 101, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 112, "col_offset": 31, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 155, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "F", "type": "Any"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "float", "type": "Any"}, {"lineNumber": 167, "col_offset": 20, "nodeName": "F", "type": "Any"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "float", "type": "Any"}, {"lineNumber": 175, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 46, "nodeName": "util", "type": "module"}, {"lineNumber": 257, "col_offset": 59, "nodeName": "span_labels", "type": "Any"}, {"lineNumber": 261, "col_offset": 32, "nodeName": "flattened_index_select", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 261, "col_offset": 60, "nodeName": "pruned_gold_labels", "type": "Any"}, {"lineNumber": 262, "col_offset": 60, "nodeName": "valid_antecedent_indices", "type": "Any"}, {"lineNumber": 280, "col_offset": 67, "nodeName": "gold_antecedent_labels", "type": "Any"}, {"lineNumber": 290, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 290, "col_offset": 44, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 312, "col_offset": 26, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 317, "col_offset": 38, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 322, "col_offset": 29, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 345, "col_offset": 35, "nodeName": "top_spans", "type": "Any"}, {"lineNumber": 346, "col_offset": 35, "nodeName": "top_spans", "type": "Any"}, {"lineNumber": 348, "col_offset": 38, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 349, "col_offset": 48, "nodeName": "spans_to_cluster_ids", "type": "Dict[Union[Tuple[int, int], Tuple[Any, Any]], int]"}, {"lineNumber": 352, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 352, "col_offset": 47, "nodeName": "clusters", "type": "List[Union[List[Union[Tuple[int, int], Tuple[Any, Any]]], List[Tuple[Any, Any]]]]"}, {"lineNumber": 354, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 356, "col_offset": 20, "nodeName": "spans_to_cluster_ids", "type": "Dict[Union[Tuple[int, int], Tuple[Any, Any]], int]"}, {"lineNumber": 360, "col_offset": 55, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 360, "col_offset": 67, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 413, "col_offset": 33, "nodeName": "util", "type": "module"}, {"lineNumber": 413, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 414, "col_offset": 55, "nodeName": "text_embeddings", "type": "Any"}, {"lineNumber": 425, "col_offset": 33, "nodeName": "raw_span_indices", "type": "Any"}, {"lineNumber": 427, "col_offset": 23, "nodeName": "F", "type": "Any"}, {"lineNumber": 427, "col_offset": 30, "nodeName": "float", "type": "Any"}, {"lineNumber": 436, "col_offset": 27, "nodeName": "util", "type": "module"}, {"lineNumber": 546, "col_offset": 25, "nodeName": "util", "type": "module"}, {"lineNumber": 549, "col_offset": 36, "nodeName": "get_range_vector", "type": "Callable[[int, Optional[bool]], Any]"}, {"lineNumber": 549, "col_offset": 58, "nodeName": "max_antecedents", "type": "int"}, {"lineNumber": 549, "col_offset": 75, "nodeName": "is_cuda", "type": "bool"}, {"lineNumber": 565, "col_offset": 35, "nodeName": "F", "type": "Any"}, {"lineNumber": 565, "col_offset": 42, "nodeName": "float", "type": "Any"}, {"lineNumber": 598, "col_offset": 28, "nodeName": "top_span_embeddings", "type": "Any"}, {"lineNumber": 603, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 698, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 699, "col_offset": 16, "nodeName": "_antecedent_feedforward", "type": "Any"}, {"lineNumber": 699, "col_offset": 45, "nodeName": "pairwise_embeddings", "type": "Any"}, {"lineNumber": 705, "col_offset": 32, "nodeName": "new", "type": "Any"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 84, "col_offset": 48, "nodeName": "mention_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "span_starts", "type": "Any"}, {"lineNumber": 167, "col_offset": 27, "nodeName": "span_ends", "type": "Any"}, {"lineNumber": 261, "col_offset": 32, "nodeName": "util", "type": "module"}, {"lineNumber": 281, "col_offset": 48, "nodeName": "logsumexp", "type": "Callable[..., Any]"}, {"lineNumber": 281, "col_offset": 63, "nodeName": "correct_antecedent_log_probs", "type": "Any"}, {"lineNumber": 290, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 343, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 343, "col_offset": 56, "nodeName": "predicted_antecedent", "type": "Any"}, {"lineNumber": 348, "col_offset": 38, "nodeName": "spans_to_cluster_ids", "type": "Dict[Union[Tuple[int, int], Tuple[Any, Any]], int]"}, {"lineNumber": 349, "col_offset": 69, "nodeName": "antecedent_span", "type": "Tuple[Any, Any]"}, {"lineNumber": 354, "col_offset": 20, "nodeName": "clusters", "type": "List[Union[List[Union[Tuple[int, int], Tuple[Any, Any]]], List[Tuple[Any, Any]]]]"}, {"lineNumber": 354, "col_offset": 37, "nodeName": "antecedent_span", "type": "Tuple[Any, Any]"}, {"lineNumber": 356, "col_offset": 41, "nodeName": "antecedent_span", "type": "Tuple[Any, Any]"}, {"lineNumber": 360, "col_offset": 16, "nodeName": "clusters", "type": "List[Union[List[Union[Tuple[int, int], Tuple[Any, Any]]], List[Tuple[Any, Any]]]]"}, {"lineNumber": 361, "col_offset": 38, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 361, "col_offset": 50, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 427, "col_offset": 30, "nodeName": "raw_span_indices", "type": "Any"}, {"lineNumber": 549, "col_offset": 36, "nodeName": "util", "type": "module"}, {"lineNumber": 562, "col_offset": 37, "nodeName": "float", "type": "Any"}, {"lineNumber": 565, "col_offset": 42, "nodeName": "raw_antecedent_indices", "type": "Any"}, {"lineNumber": 699, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 705, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 705, "col_offset": 60, "nodeName": "shape", "type": "List[Union[Any, int]]"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 112, "col_offset": 41, "nodeName": "Any", "type": "Any"}, {"lineNumber": 281, "col_offset": 48, "nodeName": "util", "type": "module"}, {"lineNumber": 345, "col_offset": 45, "nodeName": "predicted_index", "type": "Any"}, {"lineNumber": 346, "col_offset": 45, "nodeName": "predicted_index", "type": "Any"}, {"lineNumber": 360, "col_offset": 25, "nodeName": "predicted_cluster_id", "type": "int"}, {"lineNumber": 705, "col_offset": 32, "nodeName": "antecedent_scores", "type": "Any"}, {"lineNumber": 562, "col_offset": 37, "nodeName": "raw_antecedent_indices", "type": "Any"}]