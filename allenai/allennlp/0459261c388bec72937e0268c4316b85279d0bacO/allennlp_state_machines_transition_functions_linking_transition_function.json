[{"lineNumber": 15, "col_offset": 32, "nodeName": "BasicTransitionFunction", "type": "Type[allennlp.state_machines.transition_functions.basic_transition_function.BasicTransitionFunction]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "_mixture_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "mixture_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "group_size", "type": "int"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "actions", "type": "List[Dict[str, Tuple[Any, Any, List[int]]]]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "batch_results", "type": "Dict[int, List[Tuple[int, Any, Any, List[int]]]]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "group_index", "type": "int"}, {"lineNumber": 144, "col_offset": 15, "nodeName": "batch_results", "type": "Dict[int, List[Tuple[int, Any, Any, List[int]]]]"}, {"lineNumber": 87, "col_offset": 42, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "Activation", "type": "Type[allennlp.nn.activations.Activation]"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "LinkingTransitionFunction"}, {"lineNumber": 75, "col_offset": 11, "nodeName": "mixture_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 83, "col_offset": 45, "nodeName": "GrammarBasedState", "type": "Type[allennlp.state_machines.states.grammar_based_state.GrammarBasedState]"}, {"lineNumber": 84, "col_offset": 52, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 85, "col_offset": 57, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 86, "col_offset": 67, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "batch_indices", "type": "List[int]"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "get_valid_actions", "type": "Callable[[], List[Dict[str, Tuple[Any, Any, List[int]]]]]"}, {"lineNumber": 98, "col_offset": 92, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 98, "col_offset": 104, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 99, "col_offset": 27, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 99, "col_offset": 33, "nodeName": "group_size", "type": "int"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "instance_actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "predicted_action_embedding", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "embedded_action_logits", "type": "Any"}, {"lineNumber": 106, "col_offset": 12, "nodeName": "action_ids", "type": "List[int]"}, {"lineNumber": 106, "col_offset": 25, "nodeName": "embedded_actions", "type": "List[int]"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 59, "col_offset": 42, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "encoder_output_dim", "type": "int"}, {"lineNumber": 66, "col_offset": 46, "nodeName": "action_embedding_dim", "type": "int"}, {"lineNumber": 67, "col_offset": 41, "nodeName": "input_attention", "type": "allennlp.modules.attention.attention.Attention"}, {"lineNumber": 68, "col_offset": 41, "nodeName": "num_start_types", "type": "int"}, {"lineNumber": 69, "col_offset": 36, "nodeName": "activation", "type": "allennlp.nn.activations.Activation"}, {"lineNumber": 70, "col_offset": 55, "nodeName": "predict_start_type_separately", "type": "bool"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "add_action_bias", "type": "bool"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "dropout", "type": "float"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "check_dimensions_match", "type": "Callable[[int, int, str, str], None]"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "encoder_output_dim", "type": "int"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "check_dimensions_match", "type": "Callable[[int, int, str, str], None]"}, {"lineNumber": 84, "col_offset": 52, "nodeName": "torch", "type": "Any"}, {"lineNumber": 85, "col_offset": 57, "nodeName": "torch", "type": "Any"}, {"lineNumber": 86, "col_offset": 67, "nodeName": "torch", "type": "Any"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "state", "type": "allennlp.state_machines.states.grammar_based_state.GrammarBasedState"}, {"lineNumber": 96, "col_offset": 18, "nodeName": "state", "type": "allennlp.state_machines.states.grammar_based_state.GrammarBasedState"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "actions", "type": "List[Dict[str, Tuple[Any, Any, List[int]]]]"}, {"lineNumber": 101, "col_offset": 41, "nodeName": "predicted_action_embeddings", "type": "Any"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "action_embeddings", "type": "Any"}, {"lineNumber": 102, "col_offset": 31, "nodeName": "output_action_embeddings", "type": "Any"}, {"lineNumber": 102, "col_offset": 57, "nodeName": "embedded_actions", "type": "List[int]"}, {"lineNumber": 102, "col_offset": 76, "nodeName": "instance_actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 107, "col_offset": 27, "nodeName": "instance_actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 109, "col_offset": 16, "nodeName": "action_ids", "type": "List[int]"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "linked_action_logits", "type": "Any"}, {"lineNumber": 116, "col_offset": 16, "nodeName": "output_action_embeddings", "type": "Any"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "action_logits", "type": "Any"}, {"lineNumber": 133, "col_offset": 32, "nodeName": "embedded_action_logits", "type": "Any"}, {"lineNumber": 134, "col_offset": 16, "nodeName": "current_log_probs", "type": "Any"}, {"lineNumber": 139, "col_offset": 51, "nodeName": "current_log_probs", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 87, "col_offset": 47, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "get_output_dim", "type": "Callable[[], Union[int, Sequence[int]]]"}, {"lineNumber": 100, "col_offset": 39, "nodeName": "group_index", "type": "int"}, {"lineNumber": 101, "col_offset": 69, "nodeName": "group_index", "type": "int"}, {"lineNumber": 108, "col_offset": 16, "nodeName": "linking_scores", "type": "Any"}, {"lineNumber": 108, "col_offset": 32, "nodeName": "type_embeddings", "type": "Any"}, {"lineNumber": 108, "col_offset": 49, "nodeName": "linked_actions", "type": "List[int]"}, {"lineNumber": 108, "col_offset": 66, "nodeName": "instance_actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 109, "col_offset": 29, "nodeName": "embedded_actions", "type": "List[int]"}, {"lineNumber": 109, "col_offset": 48, "nodeName": "linked_actions", "type": "List[int]"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 116, "col_offset": 43, "nodeName": "cat", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "_mixture_feedforward", "type": "Any"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "mixture_weight", "type": "Any"}, {"lineNumber": 123, "col_offset": 20, "nodeName": "mix1", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "mix2", "type": "Any"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "entity_action_probs", "type": "Any"}, {"lineNumber": 127, "col_offset": 20, "nodeName": "embedded_action_probs", "type": "Any"}, {"lineNumber": 128, "col_offset": 20, "nodeName": "current_log_probs", "type": "Any"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "action_logits", "type": "Any"}, {"lineNumber": 131, "col_offset": 20, "nodeName": "current_log_probs", "type": "Any"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "log_softmax", "type": "Any"}, {"lineNumber": 134, "col_offset": 68, "nodeName": "action_logits", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "score", "type": "List[Any]"}, {"lineNumber": 140, "col_offset": 68, "nodeName": "group_index", "type": "int"}, {"lineNumber": 141, "col_offset": 68, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 142, "col_offset": 68, "nodeName": "output_action_embeddings", "type": "Any"}, {"lineNumber": 143, "col_offset": 68, "nodeName": "action_ids", "type": "List[int]"}, {"lineNumber": 87, "col_offset": 52, "nodeName": "List", "type": "Any"}, {"lineNumber": 76, "col_offset": 55, "nodeName": "mixture_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "mixture_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "mm", "type": "Any"}, {"lineNumber": 116, "col_offset": 43, "nodeName": "torch", "type": "Any"}, {"lineNumber": 116, "col_offset": 54, "nodeName": "output_action_embeddings", "type": "Any"}, {"lineNumber": 116, "col_offset": 80, "nodeName": "type_embeddings", "type": "Any"}, {"lineNumber": 118, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 37, "nodeName": "_mixture_feedforward", "type": "Any"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "log", "type": "Any"}, {"lineNumber": 123, "col_offset": 37, "nodeName": "mixture_weight", "type": "Any"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "log", "type": "Any"}, {"lineNumber": 126, "col_offset": 106, "nodeName": "mix1", "type": "Any"}, {"lineNumber": 127, "col_offset": 110, "nodeName": "mix2", "type": "Any"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "cat", "type": "Any"}, {"lineNumber": 130, "col_offset": 36, "nodeName": "cat", "type": "Any"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "log_softmax", "type": "Any"}, {"lineNumber": 131, "col_offset": 72, "nodeName": "action_logits", "type": "Any"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "functional", "type": "Any"}, {"lineNumber": 139, "col_offset": 24, "nodeName": "state", "type": "allennlp.state_machines.states.grammar_based_state.GrammarBasedState"}, {"lineNumber": 139, "col_offset": 36, "nodeName": "group_index", "type": "int"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "batch_results", "type": "Dict[int, List[Tuple[int, Any, Any, List[int]]]]"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "action_embeddings", "type": "Any"}, {"lineNumber": 105, "col_offset": 58, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "mm", "type": "Any"}, {"lineNumber": 122, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 122, "col_offset": 63, "nodeName": "hidden_state", "type": "Any"}, {"lineNumber": 123, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 124, "col_offset": 41, "nodeName": "mixture_weight", "type": "Any"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "log_softmax", "type": "Any"}, {"lineNumber": 126, "col_offset": 74, "nodeName": "linked_action_logits", "type": "Any"}, {"lineNumber": 127, "col_offset": 44, "nodeName": "log_softmax", "type": "Any"}, {"lineNumber": 127, "col_offset": 76, "nodeName": "embedded_action_logits", "type": "Any"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 128, "col_offset": 51, "nodeName": "embedded_action_probs", "type": "Any"}, {"lineNumber": 128, "col_offset": 74, "nodeName": "entity_action_probs", "type": "Any"}, {"lineNumber": 130, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 130, "col_offset": 47, "nodeName": "embedded_action_logits", "type": "Any"}, {"lineNumber": 130, "col_offset": 71, "nodeName": "linked_action_logits", "type": "Any"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "functional", "type": "Any"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "nn", "type": "Any"}, {"lineNumber": 87, "col_offset": 57, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 105, "col_offset": 58, "nodeName": "predicted_action_embedding", "type": "Any"}, {"lineNumber": 111, "col_offset": 39, "nodeName": "linking_scores", "type": "Any"}, {"lineNumber": 111, "col_offset": 57, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 122, "col_offset": 76, "nodeName": "group_index", "type": "int"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "functional", "type": "Any"}, {"lineNumber": 127, "col_offset": 44, "nodeName": "functional", "type": "Any"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "nn", "type": "Any"}, {"lineNumber": 134, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "batch_indices", "type": "List[int]"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "nn", "type": "Any"}, {"lineNumber": 127, "col_offset": 44, "nodeName": "nn", "type": "Any"}, {"lineNumber": 131, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 140, "col_offset": 26, "nodeName": "state", "type": "allennlp.state_machines.states.grammar_based_state.GrammarBasedState"}, {"lineNumber": 140, "col_offset": 46, "nodeName": "group_index", "type": "int"}, {"lineNumber": 87, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 87, "col_offset": 68, "nodeName": "Any", "type": "Any"}, {"lineNumber": 87, "col_offset": 73, "nodeName": "Any", "type": "Any"}, {"lineNumber": 111, "col_offset": 57, "nodeName": "attention_weights", "type": "Any"}, {"lineNumber": 126, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 127, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 87, "col_offset": 78, "nodeName": "List", "type": "Any"}, {"lineNumber": 111, "col_offset": 75, "nodeName": "group_index", "type": "int"}, {"lineNumber": 87, "col_offset": 83, "nodeName": "int", "type": "Type[int]"}]