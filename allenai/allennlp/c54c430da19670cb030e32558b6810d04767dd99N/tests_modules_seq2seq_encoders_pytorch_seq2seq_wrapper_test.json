[{"lineNumber": 14, "col_offset": 32, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "lstm_output", "type": "Any"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "packed_sequence", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 17, "col_offset": 18, "nodeName": "PytorchSeq2SeqWrapper", "type": "Type[allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper]"}, {"lineNumber": 17, "col_offset": 40, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "PytorchSeq2SeqWrapper", "type": "Type[allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper]"}, {"lineNumber": 21, "col_offset": 40, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 26, "col_offset": 15, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 27, "col_offset": 18, "nodeName": "PytorchSeq2SeqWrapper", "type": "Type[allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper]"}, {"lineNumber": 27, "col_offset": 40, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 29, "col_offset": 22, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 30, "col_offset": 25, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 35, "col_offset": 18, "nodeName": "PytorchSeq2SeqWrapper", "type": "Type[allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper]"}, {"lineNumber": 35, "col_offset": 40, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 41, "col_offset": 32, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 42, "col_offset": 27, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 43, "col_offset": 26, "nodeName": "pack_padded_sequence", "type": "Any"}, {"lineNumber": 43, "col_offset": 47, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "lstm_output", "type": "Any"}, {"lineNumber": 44, "col_offset": 21, "nodeName": "_", "type": "Any"}, {"lineNumber": 44, "col_offset": 25, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 44, "col_offset": 30, "nodeName": "packed_sequence", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper"}, {"lineNumber": 45, "col_offset": 33, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 45, "col_offset": 47, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "lstm_tensor", "type": "Any"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "_", "type": "Any"}, {"lineNumber": 46, "col_offset": 25, "nodeName": "pad_packed_sequence", "type": "Any"}, {"lineNumber": 46, "col_offset": 45, "nodeName": "lstm_output", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 50, "col_offset": 15, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 51, "col_offset": 18, "nodeName": "PytorchSeq2SeqWrapper", "type": "Type[allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper]"}, {"lineNumber": 51, "col_offset": 40, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 57, "col_offset": 23, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 59, "col_offset": 70, "nodeName": "sort_batch_by_length", "type": "Callable[[Any, Any], Tuple[Any, Any, Any]]"}, {"lineNumber": 59, "col_offset": 91, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 60, "col_offset": 91, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 61, "col_offset": 26, "nodeName": "pack_padded_sequence", "type": "Any"}, {"lineNumber": 61, "col_offset": 47, "nodeName": "sorted_inputs", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "lstm_output", "type": "Any"}, {"lineNumber": 64, "col_offset": 21, "nodeName": "_", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 64, "col_offset": 30, "nodeName": "packed_sequence", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper"}, {"lineNumber": 65, "col_offset": 33, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 65, "col_offset": 47, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "lstm_tensor", "type": "Any"}, {"lineNumber": 66, "col_offset": 21, "nodeName": "_", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "pad_packed_sequence", "type": "Any"}, {"lineNumber": 66, "col_offset": 45, "nodeName": "lstm_output", "type": "Any"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "_", "type": "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 28, "col_offset": 32, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 31, "col_offset": 57, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 43, "col_offset": 61, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 47, "col_offset": 57, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 52, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "LSTM", "type": "Any"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "PytorchSeq2SeqWrapper", "type": "Type[allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper]"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "lstm", "type": "Any"}, {"lineNumber": 18, "col_offset": 15, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper"}, {"lineNumber": 19, "col_offset": 15, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.pytorch_seq2seq_wrapper.PytorchSeq2SeqWrapper"}, {"lineNumber": 28, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 31, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 43, "col_offset": 61, "nodeName": "data", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 47, "col_offset": 57, "nodeName": "data", "type": "Any"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "data", "type": "Any"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 31, "col_offset": 28, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 43, "col_offset": 61, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 47, "col_offset": 28, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 47, "col_offset": 57, "nodeName": "lstm_tensor", "type": "Any"}, {"lineNumber": 62, "col_offset": 47, "nodeName": "sorted_sequence_lengths", "type": "Any"}, {"lineNumber": 67, "col_offset": 28, "nodeName": "encoder_output", "type": "Any"}, {"lineNumber": 31, "col_offset": 57, "nodeName": "lstm_output", "type": "Any"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "index_select", "type": "Any"}, {"lineNumber": 68, "col_offset": 56, "nodeName": "restoration_indices", "type": "Any"}, {"lineNumber": 68, "col_offset": 28, "nodeName": "lstm_tensor", "type": "Any"}]