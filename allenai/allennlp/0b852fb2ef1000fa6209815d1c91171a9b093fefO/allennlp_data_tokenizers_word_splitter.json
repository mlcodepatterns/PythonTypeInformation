[{"lineNumber": 129, "col_offset": 0, "nodeName": "_remove_spaces", "type": "Callable[[List[Any]], List[Any]]"}, {"lineNumber": 12, "col_offset": 19, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 38, "col_offset": 25, "nodeName": "WordSplitter", "type": "Type[WordSplitter]"}, {"lineNumber": 100, "col_offset": 32, "nodeName": "WordSplitter", "type": "Type[WordSplitter]"}, {"lineNumber": 114, "col_offset": 29, "nodeName": "WordSplitter", "type": "Type[WordSplitter]"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "WordSplitter", "type": "Type[WordSplitter]"}, {"lineNumber": 19, "col_offset": 4, "nodeName": "default_implementation", "type": "str"}, {"lineNumber": 129, "col_offset": 56, "nodeName": "List", "type": "Any"}, {"lineNumber": 21, "col_offset": 57, "nodeName": "List", "type": "Any"}, {"lineNumber": 34, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 30, "col_offset": 44, "nodeName": "List", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "special_cases", "type": "Set[str]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "contractions", "type": "Set[str]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "contractions", "type": "Set[str]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "ending_punctuation", "type": "Set[str]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "beginning_punctuation", "type": "Set[str]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "tokens", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "field", "type": "str"}, {"lineNumber": 70, "col_offset": 21, "nodeName": "fields", "type": "List[str]"}, {"lineNumber": 93, "col_offset": 15, "nodeName": "tokens", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 54, "col_offset": 44, "nodeName": "List", "type": "Any"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "tokens", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 106, "col_offset": 44, "nodeName": "List", "type": "Any"}, {"lineNumber": 125, "col_offset": 44, "nodeName": "List", "type": "Any"}, {"lineNumber": 130, "col_offset": 12, "nodeName": "token", "type": "Any"}, {"lineNumber": 129, "col_offset": 61, "nodeName": "Token", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "spacy", "type": "Any"}, {"lineNumber": 146, "col_offset": 57, "nodeName": "List", "type": "Any"}, {"lineNumber": 151, "col_offset": 44, "nodeName": "List", "type": "Any"}, {"lineNumber": 30, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 30, "col_offset": 49, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 47, "col_offset": 29, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 48, "col_offset": 28, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 37, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "add_at_end", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "remove_contractions", "type": "bool"}, {"lineNumber": 83, "col_offset": 18, "nodeName": "remove_contractions", "type": "bool"}, {"lineNumber": 54, "col_offset": 49, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 95, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "token", "type": "str"}, {"lineNumber": 106, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 106, "col_offset": 49, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 125, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 125, "col_offset": 49, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 129, "col_offset": 27, "nodeName": "List", "type": "Any"}, {"lineNumber": 130, "col_offset": 22, "nodeName": "token", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "tokens", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 61, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 142, "col_offset": 22, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 143, "col_offset": 21, "nodeName": "get_spacy_model", "type": "Callable[[str, Optional[bool], Optional[bool], Optional[bool]], Any]"}, {"lineNumber": 143, "col_offset": 37, "nodeName": "language", "type": "str"}, {"lineNumber": 143, "col_offset": 47, "nodeName": "pos_tags", "type": "bool"}, {"lineNumber": 143, "col_offset": 57, "nodeName": "parse", "type": "bool"}, {"lineNumber": 143, "col_offset": 64, "nodeName": "ner", "type": "bool"}, {"lineNumber": 151, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 153, "col_offset": 15, "nodeName": "_remove_spaces", "type": "Callable[[List[Any]], List[Any]]"}, {"lineNumber": 151, "col_offset": 49, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 21, "col_offset": 43, "nodeName": "List", "type": "Any"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "split_words", "type": "Callable[[str], List[allennlp.data.tokenizers.token.Token]]"}, {"lineNumber": 28, "col_offset": 33, "nodeName": "sentence", "type": "str"}, {"lineNumber": 28, "col_offset": 47, "nodeName": "sentence", "type": "str"}, {"lineNumber": 28, "col_offset": 59, "nodeName": "sentences", "type": "List[str]"}, {"lineNumber": 21, "col_offset": 62, "nodeName": "List", "type": "Any"}, {"lineNumber": 68, "col_offset": 17, "nodeName": "sentence", "type": "str"}, {"lineNumber": 74, "col_offset": 16, "nodeName": "field", "type": "str"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "field", "type": "str"}, {"lineNumber": 84, "col_offset": 16, "nodeName": "remove_contractions", "type": "bool"}, {"lineNumber": 85, "col_offset": 20, "nodeName": "contraction", "type": "Any"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "contractions", "type": "Any"}, {"lineNumber": 96, "col_offset": 46, "nodeName": "special_cases", "type": "Any"}, {"lineNumber": 109, "col_offset": 22, "nodeName": "m", "type": "Match[str]"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "t", "type": "str"}, {"lineNumber": 126, "col_offset": 29, "nodeName": "t", "type": "str"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "Token", "type": "Any"}, {"lineNumber": 130, "col_offset": 45, "nodeName": "is_space", "type": "Any"}, {"lineNumber": 129, "col_offset": 61, "nodeName": "spacy", "type": "Any"}, {"lineNumber": 146, "col_offset": 43, "nodeName": "List", "type": "Any"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 146, "col_offset": 62, "nodeName": "List", "type": "Any"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "spacy", "type": "Any"}, {"lineNumber": 153, "col_offset": 41, "nodeName": "sentence", "type": "str"}, {"lineNumber": 21, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "self", "type": "WordSplitter"}, {"lineNumber": 21, "col_offset": 67, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "replace", "type": "Callable[..., str]"}, {"lineNumber": 49, "col_offset": 60, "nodeName": "x", "type": "str"}, {"lineNumber": 49, "col_offset": 65, "nodeName": "contractions", "type": "Set[str]"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "_can_split", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "field", "type": "str"}, {"lineNumber": 72, "col_offset": 57, "nodeName": "beginning_punctuation", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 74, "col_offset": 24, "nodeName": "field", "type": "str"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "_can_split", "type": "Any"}, {"lineNumber": 75, "col_offset": 34, "nodeName": "field", "type": "str"}, {"lineNumber": 75, "col_offset": 58, "nodeName": "ending_punctuation", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 77, "col_offset": 24, "nodeName": "field", "type": "str"}, {"lineNumber": 85, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 96, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "finditer", "type": "Callable"}, {"lineNumber": 109, "col_offset": 60, "nodeName": "sentence", "type": "str"}, {"lineNumber": 126, "col_offset": 34, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "tokens", "type": "Any"}, {"lineNumber": 130, "col_offset": 45, "nodeName": "token", "type": "Any"}, {"lineNumber": 146, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "pipe", "type": "Any"}, {"lineNumber": 148, "col_offset": 46, "nodeName": "sentences", "type": "List[str]"}, {"lineNumber": 146, "col_offset": 67, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 49, "col_offset": 34, "nodeName": "x", "type": "str"}, {"lineNumber": 49, "col_offset": 65, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 45, "nodeName": "field", "type": "str"}, {"lineNumber": 72, "col_offset": 57, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 16, "nodeName": "tokens", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 73, "col_offset": 30, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 75, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 45, "nodeName": "field", "type": "str"}, {"lineNumber": 75, "col_offset": 58, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "add_at_end", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 88, "col_offset": 24, "nodeName": "field", "type": "str"}, {"lineNumber": 89, "col_offset": 24, "nodeName": "remove_contractions", "type": "bool"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "token", "type": "str"}, {"lineNumber": 109, "col_offset": 27, "nodeName": "re", "type": "module"}, {"lineNumber": 126, "col_offset": 34, "nodeName": "sentence", "type": "str"}, {"lineNumber": 129, "col_offset": 32, "nodeName": "spacy", "type": "Any"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "spacy", "type": "Any"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "field", "type": "str"}, {"lineNumber": 76, "col_offset": 43, "nodeName": "field", "type": "str"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "_can_split", "type": "Any"}, {"lineNumber": 86, "col_offset": 39, "nodeName": "field", "type": "str"}, {"lineNumber": 86, "col_offset": 50, "nodeName": "endswith", "type": "Callable[..., bool]"}, {"lineNumber": 86, "col_offset": 73, "nodeName": "contraction", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "insert", "type": "Callable"}, {"lineNumber": 88, "col_offset": 32, "nodeName": "field", "type": "str"}, {"lineNumber": 148, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 87, "col_offset": 24, "nodeName": "add_at_end", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 87, "col_offset": 45, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 86, "col_offset": 50, "nodeName": "lower", "type": "Callable[[], str]"}, {"lineNumber": 87, "col_offset": 51, "nodeName": "field", "type": "str"}, {"lineNumber": 86, "col_offset": 50, "nodeName": "field", "type": "str"}, {"lineNumber": 88, "col_offset": 40, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 88, "col_offset": 44, "nodeName": "contraction", "type": "Any"}, {"lineNumber": 87, "col_offset": 58, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 87, "col_offset": 62, "nodeName": "contraction", "type": "Any"}]