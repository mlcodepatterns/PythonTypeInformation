[{"lineNumber": 102, "col_offset": 0, "nodeName": "train_model_from_args", "type": "Callable[[argparse.Namespace], Any]"}, {"lineNumber": 147, "col_offset": 0, "nodeName": "datasets_from_params", "type": "Callable[[allennlp.common.params.Params], Dict[str, Iterable[allennlp.data.instance.Instance]]]"}, {"lineNumber": 60, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "Subcommand", "type": "Type[allennlp.commands.subcommand.Subcommand]"}, {"lineNumber": 119, "col_offset": 50, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 258, "col_offset": 40, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 60, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 64, "col_offset": 78, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 143, "col_offset": 4, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "data_name", "type": "str"}, {"lineNumber": 156, "col_offset": 4, "nodeName": "dataset_reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 157, "col_offset": 4, "nodeName": "validation_dataset_reader_params", "type": "Any"}, {"lineNumber": 159, "col_offset": 4, "nodeName": "validation_and_test_dataset_reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 159, "col_offset": 56, "nodeName": "dataset_reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 164, "col_offset": 4, "nodeName": "train_data_path", "type": "Any"}, {"lineNumber": 166, "col_offset": 4, "nodeName": "train_data", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 168, "col_offset": 4, "nodeName": "datasets", "type": "Dict[str, Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 170, "col_offset": 4, "nodeName": "validation_data_path", "type": "Any"}, {"lineNumber": 176, "col_offset": 4, "nodeName": "test_data_path", "type": "Any"}, {"lineNumber": 182, "col_offset": 11, "nodeName": "datasets", "type": "Dict[str, Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 147, "col_offset": 44, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 289, "col_offset": 4, "nodeName": "cuda_device", "type": "Any"}, {"lineNumber": 298, "col_offset": 4, "nodeName": "all_datasets", "type": "Dict[str, Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 299, "col_offset": 4, "nodeName": "datasets_for_vocab_creation", "type": "Set[Any]"}, {"lineNumber": 301, "col_offset": 8, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 301, "col_offset": 19, "nodeName": "datasets_for_vocab_creation", "type": "Set[Any]"}, {"lineNumber": 318, "col_offset": 4, "nodeName": "model", "type": "Any"}, {"lineNumber": 323, "col_offset": 4, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 325, "col_offset": 4, "nodeName": "validation_iterator_params", "type": "Any"}, {"lineNumber": 326, "col_offset": 7, "nodeName": "validation_iterator_params", "type": "Any"}, {"lineNumber": 332, "col_offset": 4, "nodeName": "train_data", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 333, "col_offset": 4, "nodeName": "validation_data", "type": "Optional[Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 334, "col_offset": 4, "nodeName": "test_data", "type": "Optional[Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 336, "col_offset": 4, "nodeName": "trainer_params", "type": "Any"}, {"lineNumber": 337, "col_offset": 4, "nodeName": "no_grad_regexes", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 345, "col_offset": 16, "nodeName": "frozen_parameter_names", "type": "Any"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 348, "col_offset": 16, "nodeName": "tunable_parameter_names", "type": "Any"}, {"lineNumber": 362, "col_offset": 4, "nodeName": "evaluate_on_test", "type": "bool"}, {"lineNumber": 379, "col_offset": 4, "nodeName": "best_model_state_path", "type": "str"}, {"lineNumber": 380, "col_offset": 4, "nodeName": "best_model_state", "type": "Any"}, {"lineNumber": 381, "col_offset": 4, "nodeName": "best_model", "type": "Any"}, {"lineNumber": 381, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 399, "col_offset": 11, "nodeName": "best_model", "type": "Any"}, {"lineNumber": 60, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "description", "type": "str"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 64, "col_offset": 78, "nodeName": "argparse", "type": "module"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "Namespace", "type": "Type[argparse.Namespace]"}, {"lineNumber": 106, "col_offset": 4, "nodeName": "train_model_from_file", "type": "Callable[..., allennlp.models.model.Model]"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "param_path", "type": "Any"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "serialization_dir", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "overrides", "type": "Any"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "file_friendly_logging", "type": "Any"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "recover", "type": "Any"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "force", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 143, "col_offset": 30, "nodeName": "parameter_filename", "type": "str"}, {"lineNumber": 143, "col_offset": 50, "nodeName": "overrides", "type": "str"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "train_model", "type": "Callable[..., allennlp.models.model.Model]"}, {"lineNumber": 144, "col_offset": 23, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 144, "col_offset": 50, "nodeName": "file_friendly_logging", "type": "bool"}, {"lineNumber": 144, "col_offset": 73, "nodeName": "recover", "type": "bool"}, {"lineNumber": 144, "col_offset": 82, "nodeName": "force", "type": "bool"}, {"lineNumber": 147, "col_offset": 33, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "data_path", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "pop", "type": "Any"}, {"lineNumber": 160, "col_offset": 7, "nodeName": "validation_dataset_reader_params", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "validation_and_test_dataset_reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "pop", "type": "Any"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 165, "col_offset": 49, "nodeName": "train_data_path", "type": "Any"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "read", "type": "Callable[[str], Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 166, "col_offset": 37, "nodeName": "train_data_path", "type": "Any"}, {"lineNumber": 168, "col_offset": 56, "nodeName": "train_data", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "pop", "type": "Any"}, {"lineNumber": 171, "col_offset": 7, "nodeName": "validation_data_path", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "validation_data", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 174, "col_offset": 33, "nodeName": "validation_data", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "pop", "type": "Any"}, {"lineNumber": 177, "col_offset": 7, "nodeName": "test_data_path", "type": "Any"}, {"lineNumber": 179, "col_offset": 8, "nodeName": "test_data", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 180, "col_offset": 27, "nodeName": "test_data", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 186, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 187, "col_offset": 17, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 188, "col_offset": 15, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 205, "col_offset": 7, "nodeName": "recover", "type": "bool"}, {"lineNumber": 205, "col_offset": 19, "nodeName": "force", "type": "bool"}, {"lineNumber": 208, "col_offset": 45, "nodeName": "force", "type": "bool"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "recovered_config_file", "type": "str"}, {"lineNumber": 248, "col_offset": 11, "nodeName": "recover", "type": "bool"}, {"lineNumber": 258, "col_offset": 23, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 284, "col_offset": 4, "nodeName": "prepare_environment", "type": "Callable[[allennlp.common.params.Params], None]"}, {"lineNumber": 284, "col_offset": 24, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 286, "col_offset": 4, "nodeName": "create_serialization_dir", "type": "Callable[[allennlp.common.params.Params, str, bool, bool], None]"}, {"lineNumber": 286, "col_offset": 29, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 286, "col_offset": 37, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 286, "col_offset": 56, "nodeName": "recover", "type": "bool"}, {"lineNumber": 286, "col_offset": 65, "nodeName": "force", "type": "bool"}, {"lineNumber": 287, "col_offset": 4, "nodeName": "prepare_global_logging", "type": "Callable[[str, Optional[bool]], None]"}, {"lineNumber": 287, "col_offset": 27, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 287, "col_offset": 46, "nodeName": "file_friendly_logging", "type": "bool"}, {"lineNumber": 289, "col_offset": 18, "nodeName": "get", "type": "Any"}, {"lineNumber": 290, "col_offset": 7, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 290, "col_offset": 18, "nodeName": "cuda_device", "type": "Any"}, {"lineNumber": 290, "col_offset": 31, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 291, "col_offset": 12, "nodeName": "device", "type": "Any"}, {"lineNumber": 291, "col_offset": 22, "nodeName": "cuda_device", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "to_file", "type": "Callable[..., None]"}, {"lineNumber": 298, "col_offset": 19, "nodeName": "datasets_from_params", "type": "Callable[[allennlp.common.params.Params], Dict[str, Iterable[allennlp.data.instance.Instance]]]"}, {"lineNumber": 298, "col_offset": 40, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 299, "col_offset": 34, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 308, "col_offset": 7, "nodeName": "recover", "type": "bool"}, {"lineNumber": 309, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "save_to_files", "type": "Any"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "index_with", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 324, "col_offset": 24, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 325, "col_offset": 33, "nodeName": "pop", "type": "Any"}, {"lineNumber": 327, "col_offset": 8, "nodeName": "validation_iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "validation_iterator", "type": "None"}, {"lineNumber": 332, "col_offset": 17, "nodeName": "all_datasets", "type": "Dict[str, Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 333, "col_offset": 22, "nodeName": "get", "type": "Callable"}, {"lineNumber": 334, "col_offset": 16, "nodeName": "get", "type": "Callable"}, {"lineNumber": 336, "col_offset": 21, "nodeName": "pop", "type": "Any"}, {"lineNumber": 337, "col_offset": 22, "nodeName": "pop", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "name", "type": "Any"}, {"lineNumber": 338, "col_offset": 14, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 338, "col_offset": 27, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 343, "col_offset": 19, "nodeName": "get_frozen_and_tunable_parameter_names", "type": "Callable[[Any], List[Any]]"}, {"lineNumber": 343, "col_offset": 58, "nodeName": "model", "type": "Any"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 351, "col_offset": 21, "nodeName": "pop_choice", "type": "Any"}, {"lineNumber": 354, "col_offset": 14, "nodeName": "from_params", "type": "Callable[..., allennlp.training.trainer.Trainer]"}, {"lineNumber": 362, "col_offset": 23, "nodeName": "pop_bool", "type": "Callable[..., bool]"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "assert_empty", "type": "Callable[[str], None]"}, {"lineNumber": 366, "col_offset": 8, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 367, "col_offset": 11, "nodeName": "KeyboardInterrupt", "type": "Type[KeyboardInterrupt]"}, {"lineNumber": 376, "col_offset": 4, "nodeName": "archive_model", "type": "Callable[..., None]"}, {"lineNumber": 376, "col_offset": 18, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 379, "col_offset": 28, "nodeName": "join", "type": "Callable"}, {"lineNumber": 379, "col_offset": 41, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "load", "type": "Any"}, {"lineNumber": 380, "col_offset": 34, "nodeName": "best_model_state_path", "type": "str"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "load_state_dict", "type": "Any"}, {"lineNumber": 382, "col_offset": 31, "nodeName": "best_model_state", "type": "Any"}, {"lineNumber": 384, "col_offset": 7, "nodeName": "test_data", "type": "Optional[Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 384, "col_offset": 21, "nodeName": "evaluate_on_test", "type": "bool"}, {"lineNumber": 393, "col_offset": 9, "nodeName": "test_data", "type": "Optional[Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 397, "col_offset": 4, "nodeName": "dump_metrics", "type": "Callable[..., None]"}, {"lineNumber": 397, "col_offset": 66, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "_SubParsersAction", "type": "Type[argparse._SubParsersAction]"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "add_parser", "type": "Callable[..., argparse.ArgumentParser]"}, {"lineNumber": 67, "col_offset": 38, "nodeName": "name", "type": "str"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "set_defaults", "type": "Callable[..., None]"}, {"lineNumber": 102, "col_offset": 32, "nodeName": "argparse", "type": "module"}, {"lineNumber": 106, "col_offset": 26, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 107, "col_offset": 26, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 109, "col_offset": 26, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 110, "col_offset": 26, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 111, "col_offset": 26, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 143, "col_offset": 13, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "get", "type": "Any"}, {"lineNumber": 152, "col_offset": 31, "nodeName": "data_name", "type": "str"}, {"lineNumber": 153, "col_offset": 11, "nodeName": "data_path", "type": "Any"}, {"lineNumber": 156, "col_offset": 21, "nodeName": "DatasetReader", "type": "Type[allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 156, "col_offset": 47, "nodeName": "pop", "type": "Any"}, {"lineNumber": 157, "col_offset": 39, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 162, "col_offset": 45, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 162, "col_offset": 71, "nodeName": "validation_dataset_reader_params", "type": "Any"}, {"lineNumber": 164, "col_offset": 22, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 165, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 166, "col_offset": 17, "nodeName": "dataset_reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 170, "col_offset": 27, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 55, "nodeName": "validation_data_path", "type": "Any"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "read", "type": "Callable[[str], Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 173, "col_offset": 66, "nodeName": "validation_data_path", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "datasets", "type": "Dict[str, Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 178, "col_offset": 49, "nodeName": "test_data_path", "type": "Any"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "read", "type": "Callable[[str], Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 179, "col_offset": 60, "nodeName": "test_data_path", "type": "Any"}, {"lineNumber": 180, "col_offset": 8, "nodeName": "datasets", "type": "Dict[str, Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 147, "col_offset": 49, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 206, "col_offset": 14, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 208, "col_offset": 7, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 208, "col_offset": 22, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 209, "col_offset": 22, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 211, "col_offset": 7, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 211, "col_offset": 22, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 211, "col_offset": 45, "nodeName": "listdir", "type": "Callable"}, {"lineNumber": 211, "col_offset": 56, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 212, "col_offset": 15, "nodeName": "recover", "type": "bool"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "join", "type": "Callable"}, {"lineNumber": 218, "col_offset": 45, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 218, "col_offset": 64, "nodeName": "CONFIG_NAME", "type": "str"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "loaded_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "fail", "type": "bool"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "flat_params", "type": "Dict[str, Any]"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "flat_loaded", "type": "Dict[str, Any]"}, {"lineNumber": 230, "col_offset": 16, "nodeName": "key", "type": "str"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "key", "type": "str"}, {"lineNumber": 238, "col_offset": 16, "nodeName": "key", "type": "str"}, {"lineNumber": 244, "col_offset": 15, "nodeName": "fail", "type": "bool"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "makedirs", "type": "Callable[..., None]"}, {"lineNumber": 251, "col_offset": 20, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 294, "col_offset": 8, "nodeName": "check_for_gpu", "type": "Callable[[int], None]"}, {"lineNumber": 294, "col_offset": 22, "nodeName": "cuda_device", "type": "Any"}, {"lineNumber": 296, "col_offset": 4, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 296, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 296, "col_offset": 32, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 296, "col_offset": 51, "nodeName": "CONFIG_NAME", "type": "str"}, {"lineNumber": 299, "col_offset": 38, "nodeName": "pop", "type": "Any"}, {"lineNumber": 299, "col_offset": 80, "nodeName": "all_datasets", "type": "Dict[str, Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 302, "col_offset": 11, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 302, "col_offset": 26, "nodeName": "all_datasets", "type": "Dict[str, Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 305, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 306, "col_offset": 16, "nodeName": "join", "type": "Callable"}, {"lineNumber": 306, "col_offset": 26, "nodeName": "datasets_for_vocab_creation", "type": "Set[Any]"}, {"lineNumber": 308, "col_offset": 19, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 309, "col_offset": 16, "nodeName": "from_files", "type": "Callable[[Any, str], allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "from_params", "type": "Callable[..., Any]"}, {"lineNumber": 318, "col_offset": 12, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 318, "col_offset": 36, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 321, "col_offset": 4, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "join", "type": "Callable"}, {"lineNumber": 321, "col_offset": 37, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 323, "col_offset": 15, "nodeName": "DataIterator", "type": "Type[allennlp.data.iterators.data_iterator.DataIterator]"}, {"lineNumber": 323, "col_offset": 40, "nodeName": "pop", "type": "Any"}, {"lineNumber": 324, "col_offset": 4, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 325, "col_offset": 33, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 327, "col_offset": 30, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 327, "col_offset": 55, "nodeName": "validation_iterator_params", "type": "Any"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "index_with", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 328, "col_offset": 39, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 333, "col_offset": 22, "nodeName": "all_datasets", "type": "Dict[str, Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 334, "col_offset": 16, "nodeName": "all_datasets", "type": "Dict[str, Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 336, "col_offset": 21, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 337, "col_offset": 22, "nodeName": "trainer_params", "type": "Any"}, {"lineNumber": 338, "col_offset": 27, "nodeName": "model", "type": "Any"}, {"lineNumber": 339, "col_offset": 11, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 344, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 346, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 347, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 349, "col_offset": 20, "nodeName": "name", "type": "Any"}, {"lineNumber": 351, "col_offset": 21, "nodeName": "trainer_params", "type": "Any"}, {"lineNumber": 352, "col_offset": 47, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 354, "col_offset": 64, "nodeName": "model", "type": "Any"}, {"lineNumber": 355, "col_offset": 76, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 356, "col_offset": 67, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 357, "col_offset": 69, "nodeName": "train_data", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 358, "col_offset": 74, "nodeName": "validation_data", "type": "Optional[Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 359, "col_offset": 65, "nodeName": "trainer_params", "type": "Any"}, {"lineNumber": 360, "col_offset": 78, "nodeName": "validation_iterator", "type": "Optional[allennlp.data.iterators.data_iterator.DataIterator]"}, {"lineNumber": 362, "col_offset": 23, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 363, "col_offset": 4, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 366, "col_offset": 18, "nodeName": "train", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 376, "col_offset": 54, "nodeName": "files_to_archive", "type": "Dict[str, str]"}, {"lineNumber": 378, "col_offset": 4, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 379, "col_offset": 28, "nodeName": "path", "type": "module"}, {"lineNumber": 380, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 382, "col_offset": 4, "nodeName": "best_model", "type": "Any"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 386, "col_offset": 23, "nodeName": "evaluate", "type": "Callable[[allennlp.models.model.Model, Iterable[allennlp.data.instance.Instance], allennlp.data.iterators.data_iterator.DataIterator, int], Dict[str, Any]]"}, {"lineNumber": 387, "col_offset": 16, "nodeName": "best_model", "type": "Any"}, {"lineNumber": 387, "col_offset": 28, "nodeName": "test_data", "type": "Optional[Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 390, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 390, "col_offset": 17, "nodeName": "value", "type": "Any"}, {"lineNumber": 390, "col_offset": 26, "nodeName": "items", "type": "Callable"}, {"lineNumber": 391, "col_offset": 37, "nodeName": "value", "type": "Any"}, {"lineNumber": 397, "col_offset": 17, "nodeName": "join", "type": "Callable"}, {"lineNumber": 397, "col_offset": 30, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 64, "col_offset": 47, "nodeName": "argparse", "type": "module"}, {"lineNumber": 67, "col_offset": 20, "nodeName": "parser", "type": "argparse._SubParsersAction"}, {"lineNumber": 67, "col_offset": 56, "nodeName": "description", "type": "str"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 89, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "train_model_from_args", "type": "Callable[[argparse.Namespace], Any]"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 154, "col_offset": 12, "nodeName": "check_for_data_path", "type": "Callable[[str, str], None]"}, {"lineNumber": 154, "col_offset": 32, "nodeName": "data_path", "type": "Any"}, {"lineNumber": 154, "col_offset": 43, "nodeName": "data_name", "type": "str"}, {"lineNumber": 156, "col_offset": 47, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 162, "col_offset": 45, "nodeName": "DatasetReader", "type": "Type[allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "validation_and_test_dataset_reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "validation_and_test_dataset_reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 147, "col_offset": 54, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 208, "col_offset": 7, "nodeName": "path", "type": "module"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "shutil", "type": "module"}, {"lineNumber": 211, "col_offset": 7, "nodeName": "path", "type": "module"}, {"lineNumber": 211, "col_offset": 45, "nodeName": "os", "type": "module"}, {"lineNumber": 213, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "path", "type": "module"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 219, "col_offset": 30, "nodeName": "recovered_config_file", "type": "str"}, {"lineNumber": 220, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 223, "col_offset": 45, "nodeName": "recovered_config_file", "type": "str"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "as_flat_dict", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "as_flat_dict", "type": "Callable[[], Dict[str, Any]]"}, {"lineNumber": 233, "col_offset": 16, "nodeName": "fail", "type": "bool"}, {"lineNumber": 237, "col_offset": 16, "nodeName": "fail", "type": "bool"}, {"lineNumber": 238, "col_offset": 23, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 249, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "os", "type": "module"}, {"lineNumber": 289, "col_offset": 18, "nodeName": "get", "type": "Any"}, {"lineNumber": 292, "col_offset": 12, "nodeName": "check_for_gpu", "type": "Callable[[int], None]"}, {"lineNumber": 292, "col_offset": 26, "nodeName": "device", "type": "Any"}, {"lineNumber": 296, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 299, "col_offset": 38, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 303, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 308, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 308, "col_offset": 34, "nodeName": "join", "type": "Callable"}, {"lineNumber": 308, "col_offset": 47, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 309, "col_offset": 16, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 309, "col_offset": 38, "nodeName": "join", "type": "Callable"}, {"lineNumber": 309, "col_offset": 51, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 311, "col_offset": 16, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "pop", "type": "Any"}, {"lineNumber": 318, "col_offset": 50, "nodeName": "pop", "type": "Any"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "path", "type": "module"}, {"lineNumber": 323, "col_offset": 40, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 327, "col_offset": 30, "nodeName": "DataIterator", "type": "Type[allennlp.data.iterators.data_iterator.DataIterator]"}, {"lineNumber": 328, "col_offset": 8, "nodeName": "validation_iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 352, "col_offset": 47, "nodeName": "Trainer", "type": "Type[allennlp.training.trainer.Trainer]"}, {"lineNumber": 354, "col_offset": 14, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 354, "col_offset": 30, "nodeName": "trainer_choice", "type": "Any"}, {"lineNumber": 366, "col_offset": 18, "nodeName": "trainer", "type": "allennlp.training.trainer.Trainer"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "exists", "type": "Callable"}, {"lineNumber": 376, "col_offset": 54, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 379, "col_offset": 28, "nodeName": "os", "type": "module"}, {"lineNumber": 385, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 387, "col_offset": 39, "nodeName": "validation_iterator", "type": "Optional[allennlp.data.iterators.data_iterator.DataIterator]"}, {"lineNumber": 387, "col_offset": 62, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 390, "col_offset": 26, "nodeName": "test_metrics", "type": "Dict[str, Any]"}, {"lineNumber": 391, "col_offset": 12, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 397, "col_offset": 17, "nodeName": "path", "type": "module"}, {"lineNumber": 147, "col_offset": 63, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 208, "col_offset": 7, "nodeName": "os", "type": "module"}, {"lineNumber": 211, "col_offset": 7, "nodeName": "os", "type": "module"}, {"lineNumber": 216, "col_offset": 57, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 218, "col_offset": 32, "nodeName": "os", "type": "module"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "path", "type": "module"}, {"lineNumber": 223, "col_offset": 28, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 228, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 229, "col_offset": 26, "nodeName": "loaded_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 230, "col_offset": 23, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 230, "col_offset": 44, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 234, "col_offset": 23, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 234, "col_offset": 44, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 238, "col_offset": 23, "nodeName": "flat_params", "type": "Dict[str, Any]"}, {"lineNumber": 243, "col_offset": 20, "nodeName": "fail", "type": "bool"}, {"lineNumber": 245, "col_offset": 22, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 289, "col_offset": 18, "nodeName": "params", "type": "Any"}, {"lineNumber": 296, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 308, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 308, "col_offset": 34, "nodeName": "path", "type": "module"}, {"lineNumber": 309, "col_offset": 38, "nodeName": "path", "type": "module"}, {"lineNumber": 312, "col_offset": 16, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 314, "col_offset": 21, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 314, "col_offset": 33, "nodeName": "dataset", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 318, "col_offset": 50, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 321, "col_offset": 24, "nodeName": "os", "type": "module"}, {"lineNumber": 339, "col_offset": 15, "nodeName": "search", "type": "Callable"}, {"lineNumber": 339, "col_offset": 25, "nodeName": "regex", "type": "Any"}, {"lineNumber": 339, "col_offset": 32, "nodeName": "name", "type": "Any"}, {"lineNumber": 339, "col_offset": 42, "nodeName": "regex", "type": "Any"}, {"lineNumber": 339, "col_offset": 51, "nodeName": "no_grad_regexes", "type": "Any"}, {"lineNumber": 340, "col_offset": 12, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 354, "col_offset": 14, "nodeName": "Trainer", "type": "Type[allennlp.training.trainer.Trainer]"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "path", "type": "module"}, {"lineNumber": 369, "col_offset": 26, "nodeName": "join", "type": "Callable"}, {"lineNumber": 369, "col_offset": 39, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 369, "col_offset": 58, "nodeName": "_DEFAULT_WEIGHTS", "type": "str"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 372, "col_offset": 12, "nodeName": "archive_model", "type": "Callable[..., None]"}, {"lineNumber": 372, "col_offset": 26, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 388, "col_offset": 28, "nodeName": "_cuda_devices", "type": "List[Any]"}, {"lineNumber": 394, "col_offset": 8, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 397, "col_offset": 17, "nodeName": "os", "type": "module"}, {"lineNumber": 213, "col_offset": 65, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "os", "type": "module"}, {"lineNumber": 230, "col_offset": 23, "nodeName": "flat_params", "type": "Dict[str, Any]"}, {"lineNumber": 230, "col_offset": 44, "nodeName": "flat_loaded", "type": "Dict[str, Any]"}, {"lineNumber": 231, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 234, "col_offset": 23, "nodeName": "flat_loaded", "type": "Dict[str, Any]"}, {"lineNumber": 234, "col_offset": 44, "nodeName": "flat_params", "type": "Dict[str, Any]"}, {"lineNumber": 235, "col_offset": 16, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "get", "type": "Callable"}, {"lineNumber": 239, "col_offset": 35, "nodeName": "key", "type": "str"}, {"lineNumber": 239, "col_offset": 49, "nodeName": "get", "type": "Callable"}, {"lineNumber": 239, "col_offset": 65, "nodeName": "key", "type": "str"}, {"lineNumber": 240, "col_offset": 20, "nodeName": "error", "type": "Callable[..., None]"}, {"lineNumber": 249, "col_offset": 83, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 289, "col_offset": 18, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 303, "col_offset": 77, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 308, "col_offset": 34, "nodeName": "os", "type": "module"}, {"lineNumber": 309, "col_offset": 38, "nodeName": "os", "type": "module"}, {"lineNumber": 313, "col_offset": 30, "nodeName": "key", "type": "str"}, {"lineNumber": 313, "col_offset": 35, "nodeName": "dataset", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 313, "col_offset": 46, "nodeName": "items", "type": "Callable"}, {"lineNumber": 315, "col_offset": 20, "nodeName": "key", "type": "str"}, {"lineNumber": 315, "col_offset": 27, "nodeName": "datasets_for_vocab_creation", "type": "Set[Any]"}, {"lineNumber": 339, "col_offset": 15, "nodeName": "re", "type": "module"}, {"lineNumber": 369, "col_offset": 11, "nodeName": "os", "type": "module"}, {"lineNumber": 369, "col_offset": 26, "nodeName": "path", "type": "module"}, {"lineNumber": 370, "col_offset": 12, "nodeName": "logging", "type": "module"}, {"lineNumber": 372, "col_offset": 62, "nodeName": "files_to_archive", "type": "Dict[str, str]"}, {"lineNumber": 388, "col_offset": 28, "nodeName": "trainer", "type": "allennlp.training.trainer.Trainer"}, {"lineNumber": 391, "col_offset": 30, "nodeName": "key", "type": "str"}, {"lineNumber": 231, "col_offset": 37, "nodeName": "key", "type": "str"}, {"lineNumber": 235, "col_offset": 37, "nodeName": "key", "type": "str"}, {"lineNumber": 239, "col_offset": 19, "nodeName": "flat_params", "type": "Dict[str, Any]"}, {"lineNumber": 239, "col_offset": 49, "nodeName": "flat_loaded", "type": "Dict[str, Any]"}, {"lineNumber": 240, "col_offset": 20, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 313, "col_offset": 46, "nodeName": "all_datasets", "type": "Dict[str, Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 369, "col_offset": 26, "nodeName": "os", "type": "module"}, {"lineNumber": 372, "col_offset": 62, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 240, "col_offset": 47, "nodeName": "key", "type": "str"}, {"lineNumber": 240, "col_offset": 34, "nodeName": "flat_params", "type": "Dict[str, Any]"}, {"lineNumber": 240, "col_offset": 34, "nodeName": "flat_loaded", "type": "Dict[str, Any]"}, {"lineNumber": 240, "col_offset": 46, "nodeName": "key", "type": "str"}, {"lineNumber": 240, "col_offset": 46, "nodeName": "key", "type": "str"}]