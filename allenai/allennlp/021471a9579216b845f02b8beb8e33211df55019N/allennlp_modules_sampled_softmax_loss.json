[{"lineNumber": 11, "col_offset": 0, "nodeName": "_choice", "type": "Callable[[int, int], Tuple[numpy.ndarray, int]]"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "Module", "type": "Any"}, {"lineNumber": 16, "col_offset": 4, "nodeName": "num_tries", "type": "int"}, {"lineNumber": 17, "col_offset": 4, "nodeName": "num_chosen", "type": "int"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 24, "col_offset": 4, "nodeName": "sample_buffer", "type": "Any"}, {"lineNumber": 25, "col_offset": 4, "nodeName": "buffer_index", "type": "int"}, {"lineNumber": 26, "col_offset": 4, "nodeName": "samples", "type": "Set[Any]"}, {"lineNumber": 11, "col_offset": 49, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 134, "col_offset": 64, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 156, "col_offset": 64, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 221, "col_offset": 80, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 11, "col_offset": 23, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 11, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "log_samples", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "samples", "type": "Any"}, {"lineNumber": 19, "col_offset": 24, "nodeName": "np", "type": "module"}, {"lineNumber": 24, "col_offset": 20, "nodeName": "get_buffer", "type": "Callable[[], numpy.ndarray]"}, {"lineNumber": 26, "col_offset": 24, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 28, "col_offset": 10, "nodeName": "num_chosen", "type": "int"}, {"lineNumber": 28, "col_offset": 23, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "num_tries", "type": "int"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "buffer_index", "type": "int"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "num_tries", "type": "int"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "tie_embeddings", "type": "bool"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "use_fast_sampler", "type": "bool"}, {"lineNumber": 94, "col_offset": 11, "nodeName": "sparse", "type": "bool"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "sparse", "type": "bool"}, {"lineNumber": 106, "col_offset": 22, "nodeName": "sparse", "type": "bool"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "use_character_inputs", "type": "bool"}, {"lineNumber": 107, "col_offset": 36, "nodeName": "use_character_inputs", "type": "bool"}, {"lineNumber": 109, "col_offset": 11, "nodeName": "use_character_inputs", "type": "bool"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "_num_samples", "type": "int"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "_embedding_dim", "type": "int"}, {"lineNumber": 113, "col_offset": 30, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "_num_words", "type": "int"}, {"lineNumber": 114, "col_offset": 26, "nodeName": "num_words", "type": "int"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "sparse", "type": "bool"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "_num_words", "type": "Any"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "num_words", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "_log_num_words_p1", "type": "Any"}, {"lineNumber": 134, "col_offset": 64, "nodeName": "torch", "type": "Any"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "long_targets", "type": "Any"}, {"lineNumber": 176, "col_offset": 8, "nodeName": "all_ids", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "sparse", "type": "bool"}, {"lineNumber": 188, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 189, "col_offset": 8, "nodeName": "true_w", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "sampled_w", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "true_b", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "sampled_b", "type": "Any"}, {"lineNumber": 196, "col_offset": 8, "nodeName": "true_logits", "type": "Any"}, {"lineNumber": 205, "col_offset": 8, "nodeName": "true_in_sample_mask", "type": "Any"}, {"lineNumber": 206, "col_offset": 8, "nodeName": "masked_sampled_logits", "type": "Any"}, {"lineNumber": 209, "col_offset": 8, "nodeName": "logits", "type": "Any"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "log_softmax", "type": "Any"}, {"lineNumber": 218, "col_offset": 8, "nodeName": "nll_loss", "type": "Any"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "nll_loss", "type": "Any"}, {"lineNumber": 156, "col_offset": 64, "nodeName": "torch", "type": "Any"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "sparse", "type": "bool"}, {"lineNumber": 231, "col_offset": 8, "nodeName": "log_softmax", "type": "Any"}, {"lineNumber": 221, "col_offset": 80, "nodeName": "torch", "type": "Any"}, {"lineNumber": 239, "col_offset": 65, "nodeName": "_choice", "type": "Callable[[int, int], Tuple[numpy.ndarray, int]]"}, {"lineNumber": 257, "col_offset": 8, "nodeName": "sampled_ids", "type": "Any"}, {"lineNumber": 261, "col_offset": 8, "nodeName": "target_probs", "type": "Any"}, {"lineNumber": 262, "col_offset": 8, "nodeName": "target_expected_count", "type": "Any"}, {"lineNumber": 265, "col_offset": 8, "nodeName": "sampled_expected_count", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "clip", "type": "Any"}, {"lineNumber": 22, "col_offset": 23, "nodeName": "samples", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "sample_buffer", "type": "Any"}, {"lineNumber": 32, "col_offset": 11, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 32, "col_offset": 28, "nodeName": "samples", "type": "Set[Any]"}, {"lineNumber": 34, "col_offset": 12, "nodeName": "num_chosen", "type": "int"}, {"lineNumber": 37, "col_offset": 11, "nodeName": "buffer_index", "type": "int"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "sample_buffer", "type": "Any"}, {"lineNumber": 40, "col_offset": 12, "nodeName": "buffer_index", "type": "int"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 11, "col_offset": 55, "nodeName": "ndarray", "type": "Type[numpy.ndarray]"}, {"lineNumber": 11, "col_offset": 67, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 80, "col_offset": 35, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 86, "col_offset": 15, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 86, "col_offset": 29, "nodeName": "num_words", "type": "int"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "choice_func", "type": "Callable[[int, int], Tuple[numpy.ndarray, int]]"}, {"lineNumber": 91, "col_offset": 31, "nodeName": "_choice", "type": "Callable[[int, int], Tuple[numpy.ndarray, int]]"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "softmax_w", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "softmax_b", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "softmax_w", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "softmax_b", "type": "Any"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "_unk_id", "type": "int"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "unk_id", "type": "int"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "initialize_num_words", "type": "Callable[[], Any]"}, {"lineNumber": 118, "col_offset": 11, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "num_words", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "num_words", "type": "Any"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "log", "type": "Any"}, {"lineNumber": 128, "col_offset": 59, "nodeName": "_log_num_words_p1", "type": "Any"}, {"lineNumber": 134, "col_offset": 40, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "training", "type": "Any"}, {"lineNumber": 154, "col_offset": 35, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 156, "col_offset": 47, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "log_uniform_candidate_sampler", "type": "Callable[..., Any]"}, {"lineNumber": 169, "col_offset": 47, "nodeName": "targets", "type": "Any"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "long", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "cat", "type": "Any"}, {"lineNumber": 178, "col_offset": 11, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 179, "col_offset": 12, "nodeName": "all_ids_1", "type": "Any"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "all_w", "type": "Any"}, {"lineNumber": 181, "col_offset": 12, "nodeName": "all_b", "type": "Any"}, {"lineNumber": 183, "col_offset": 12, "nodeName": "all_w", "type": "Any"}, {"lineNumber": 186, "col_offset": 12, "nodeName": "all_b", "type": "Any"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 189, "col_offset": 17, "nodeName": "all_w", "type": "Any"}, {"lineNumber": 190, "col_offset": 20, "nodeName": "all_w", "type": "Any"}, {"lineNumber": 191, "col_offset": 17, "nodeName": "all_b", "type": "Any"}, {"lineNumber": 192, "col_offset": 20, "nodeName": "all_b", "type": "Any"}, {"lineNumber": 205, "col_offset": 30, "nodeName": "sampled_ids", "type": "Any"}, {"lineNumber": 206, "col_offset": 32, "nodeName": "masked_fill", "type": "Any"}, {"lineNumber": 206, "col_offset": 59, "nodeName": "true_in_sample_mask", "type": "Any"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "cat", "type": "Any"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "log_softmax", "type": "Any"}, {"lineNumber": 212, "col_offset": 54, "nodeName": "logits", "type": "Any"}, {"lineNumber": 221, "col_offset": 40, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 221, "col_offset": 63, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 224, "col_offset": 11, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 225, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "weight", "type": "Any"}, {"lineNumber": 226, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 228, "col_offset": 12, "nodeName": "w", "type": "Any"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "softmax_w", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "b", "type": "Any"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "softmax_b", "type": "Any"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "log_softmax", "type": "Any"}, {"lineNumber": 232, "col_offset": 11, "nodeName": "tie_embeddings", "type": "bool"}, {"lineNumber": 235, "col_offset": 12, "nodeName": "targets_", "type": "Any"}, {"lineNumber": 235, "col_offset": 23, "nodeName": "targets", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "nll_loss", "type": "Any"}, {"lineNumber": 236, "col_offset": 44, "nodeName": "log_softmax", "type": "Any"}, {"lineNumber": 255, "col_offset": 8, "nodeName": "np_sampled_ids", "type": "numpy.ndarray"}, {"lineNumber": 255, "col_offset": 24, "nodeName": "num_tries", "type": "int"}, {"lineNumber": 255, "col_offset": 36, "nodeName": "choice_func", "type": "Callable[[int, int], Tuple[numpy.ndarray, int]]"}, {"lineNumber": 255, "col_offset": 48, "nodeName": "_num_words", "type": "Any"}, {"lineNumber": 255, "col_offset": 65, "nodeName": "_num_samples", "type": "int"}, {"lineNumber": 257, "col_offset": 22, "nodeName": "to", "type": "Any"}, {"lineNumber": 257, "col_offset": 58, "nodeName": "device", "type": "Any"}, {"lineNumber": 261, "col_offset": 86, "nodeName": "_log_num_words_p1", "type": "Any"}, {"lineNumber": 264, "col_offset": 65, "nodeName": "_log_num_words_p1", "type": "Any"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "requires_grad_", "type": "Any"}, {"lineNumber": 271, "col_offset": 15, "nodeName": "sampled_ids", "type": "Any"}, {"lineNumber": 271, "col_offset": 28, "nodeName": "target_expected_count", "type": "Any"}, {"lineNumber": 271, "col_offset": 51, "nodeName": "sampled_expected_count", "type": "Any"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "rand", "type": "Any"}, {"lineNumber": 20, "col_offset": 37, "nodeName": "num_samples", "type": "int"}, {"lineNumber": 20, "col_offset": 52, "nodeName": "log", "type": "Any"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "astype", "type": "Any"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "np", "type": "module"}, {"lineNumber": 31, "col_offset": 34, "nodeName": "buffer_index", "type": "int"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 33, "col_offset": 24, "nodeName": "sample_id", "type": "Any"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "get_buffer", "type": "Callable[[], numpy.ndarray]"}, {"lineNumber": 42, "col_offset": 11, "nodeName": "np", "type": "module"}, {"lineNumber": 42, "col_offset": 20, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 42, "col_offset": 25, "nodeName": "samples", "type": "Set[Any]"}, {"lineNumber": 11, "col_offset": 55, "nodeName": "np", "type": "module"}, {"lineNumber": 89, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 96, "col_offset": 48, "nodeName": "num_words", "type": "int"}, {"lineNumber": 96, "col_offset": 59, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "normal_", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "Embedding", "type": "Any"}, {"lineNumber": 98, "col_offset": 48, "nodeName": "num_words", "type": "int"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "Parameter", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "size", "type": "Any"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "size", "type": "Any"}, {"lineNumber": 124, "col_offset": 33, "nodeName": "np", "type": "module"}, {"lineNumber": 124, "col_offset": 40, "nodeName": "num_words", "type": "Any"}, {"lineNumber": 128, "col_offset": 59, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 134, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "shape", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "to", "type": "Any"}, {"lineNumber": 146, "col_offset": 40, "nodeName": "device", "type": "Any"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "_forward_eval", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 149, "col_offset": 38, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 149, "col_offset": 50, "nodeName": "targets", "type": "Any"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "_forward_train", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 151, "col_offset": 39, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 151, "col_offset": 51, "nodeName": "targets", "type": "Any"}, {"lineNumber": 151, "col_offset": 60, "nodeName": "target_token_embedding", "type": "Any"}, {"lineNumber": 154, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 155, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 156, "col_offset": 47, "nodeName": "torch", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 169, "col_offset": 68, "nodeName": "choice_func", "type": "Callable[[int, int], Tuple[numpy.ndarray, int]]"}, {"lineNumber": 171, "col_offset": 23, "nodeName": "targets", "type": "Any"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "long_targets", "type": "Any"}, {"lineNumber": 176, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 176, "col_offset": 29, "nodeName": "long_targets", "type": "Any"}, {"lineNumber": 176, "col_offset": 43, "nodeName": "sampled_ids", "type": "Any"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 183, "col_offset": 50, "nodeName": "all_ids", "type": "Any"}, {"lineNumber": 183, "col_offset": 59, "nodeName": "softmax_w", "type": "Any"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 188, "col_offset": 21, "nodeName": "long_targets", "type": "Any"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 192, "col_offset": 26, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 196, "col_offset": 57, "nodeName": "true_b", "type": "Any"}, {"lineNumber": 196, "col_offset": 66, "nodeName": "log", "type": "Any"}, {"lineNumber": 199, "col_offset": 26, "nodeName": "sampled_b", "type": "Any"}, {"lineNumber": 199, "col_offset": 38, "nodeName": "log", "type": "Any"}, {"lineNumber": 205, "col_offset": 45, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 206, "col_offset": 32, "nodeName": "sampled_logits", "type": "Any"}, {"lineNumber": 209, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 209, "col_offset": 54, "nodeName": "masked_sampled_logits", "type": "Any"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "functional", "type": "Any"}, {"lineNumber": 218, "col_offset": 26, "nodeName": "sum", "type": "Any"}, {"lineNumber": 221, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 221, "col_offset": 63, "nodeName": "torch", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "softmax_w", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 228, "col_offset": 16, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 229, "col_offset": 16, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "functional", "type": "Any"}, {"lineNumber": 231, "col_offset": 88, "nodeName": "b", "type": "Any"}, {"lineNumber": 232, "col_offset": 11, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "functional", "type": "Any"}, {"lineNumber": 236, "col_offset": 57, "nodeName": "long", "type": "Any"}, {"lineNumber": 255, "col_offset": 48, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 255, "col_offset": 65, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 257, "col_offset": 58, "nodeName": "targets", "type": "Any"}, {"lineNumber": 261, "col_offset": 23, "nodeName": "log", "type": "Any"}, {"lineNumber": 261, "col_offset": 86, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "log", "type": "Any"}, {"lineNumber": 264, "col_offset": 65, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 267, "col_offset": 8, "nodeName": "sampled_ids", "type": "Any"}, {"lineNumber": 268, "col_offset": 8, "nodeName": "target_expected_count", "type": "Any"}, {"lineNumber": 269, "col_offset": 8, "nodeName": "sampled_expected_count", "type": "Any"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "random", "type": "Any"}, {"lineNumber": 20, "col_offset": 52, "nodeName": "np", "type": "module"}, {"lineNumber": 20, "col_offset": 59, "nodeName": "num_words", "type": "int"}, {"lineNumber": 22, "col_offset": 47, "nodeName": "num_words", "type": "int"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "samples", "type": "Set[Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "data", "type": "Any"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "nn", "type": "Any"}, {"lineNumber": 104, "col_offset": 48, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 104, "col_offset": 60, "nodeName": "num_words", "type": "int"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "weight", "type": "Any"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "softmax_w", "type": "Any"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "log", "type": "Any"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "log", "type": "Any"}, {"lineNumber": 144, "col_offset": 11, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 146, "col_offset": 40, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 151, "col_offset": 19, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 169, "col_offset": 68, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 179, "col_offset": 24, "nodeName": "all_ids", "type": "Any"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "functional", "type": "Any"}, {"lineNumber": 183, "col_offset": 59, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 189, "col_offset": 24, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 190, "col_offset": 26, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "sum", "type": "Any"}, {"lineNumber": 196, "col_offset": 66, "nodeName": "torch", "type": "Any"}, {"lineNumber": 196, "col_offset": 76, "nodeName": "target_expected_count", "type": "Any"}, {"lineNumber": 199, "col_offset": 38, "nodeName": "torch", "type": "Any"}, {"lineNumber": 199, "col_offset": 48, "nodeName": "sampled_expected_count", "type": "Any"}, {"lineNumber": 205, "col_offset": 45, "nodeName": "long_targets", "type": "Any"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 225, "col_offset": 16, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "weight", "type": "Any"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 231, "col_offset": 54, "nodeName": "matmul", "type": "Any"}, {"lineNumber": 231, "col_offset": 67, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "nn", "type": "Any"}, {"lineNumber": 236, "col_offset": 57, "nodeName": "targets_", "type": "Any"}, {"lineNumber": 257, "col_offset": 22, "nodeName": "from_numpy", "type": "Any"}, {"lineNumber": 257, "col_offset": 39, "nodeName": "np_sampled_ids", "type": "numpy.ndarray"}, {"lineNumber": 261, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 262, "col_offset": 40, "nodeName": "exp", "type": "Any"}, {"lineNumber": 263, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 265, "col_offset": 41, "nodeName": "exp", "type": "Any"}, {"lineNumber": 20, "col_offset": 22, "nodeName": "np", "type": "module"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "exp", "type": "Any"}, {"lineNumber": 21, "col_offset": 25, "nodeName": "log_samples", "type": "Any"}, {"lineNumber": 96, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 98, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "weight", "type": "Any"}, {"lineNumber": 103, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 103, "col_offset": 48, "nodeName": "randn", "type": "Any"}, {"lineNumber": 103, "col_offset": 60, "nodeName": "num_words", "type": "int"}, {"lineNumber": 103, "col_offset": 71, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 103, "col_offset": 88, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 103, "col_offset": 96, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 104, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 104, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "softmax_w", "type": "Any"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "np", "type": "module"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "softmax_w", "type": "Any"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "all_ids_1", "type": "Any"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "embedding", "type": "Any"}, {"lineNumber": 186, "col_offset": 50, "nodeName": "all_ids", "type": "Any"}, {"lineNumber": 209, "col_offset": 28, "nodeName": "true_logits", "type": "Any"}, {"lineNumber": 212, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 218, "col_offset": 26, "nodeName": "log_softmax", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "softmax_b", "type": "Any"}, {"lineNumber": 231, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 231, "col_offset": 54, "nodeName": "torch", "type": "Any"}, {"lineNumber": 231, "col_offset": 79, "nodeName": "t", "type": "Any"}, {"lineNumber": 236, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 257, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 262, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 262, "col_offset": 50, "nodeName": "num_tries", "type": "int"}, {"lineNumber": 265, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 265, "col_offset": 51, "nodeName": "num_tries", "type": "int"}, {"lineNumber": 21, "col_offset": 18, "nodeName": "np", "type": "module"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "softmax_w", "type": "Any"}, {"lineNumber": 97, "col_offset": 67, "nodeName": "sqrt", "type": "Any"}, {"lineNumber": 97, "col_offset": 75, "nodeName": "embedding_dim", "type": "int"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "softmax_b", "type": "Any"}, {"lineNumber": 103, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 103, "col_offset": 88, "nodeName": "np", "type": "module"}, {"lineNumber": 119, "col_offset": 24, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "arange", "type": "Any"}, {"lineNumber": 127, "col_offset": 40, "nodeName": "num_words", "type": "Any"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "arange", "type": "Any"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "num_words", "type": "Any"}, {"lineNumber": 146, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 183, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "functional", "type": "Any"}, {"lineNumber": 186, "col_offset": 59, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 196, "col_offset": 23, "nodeName": "true_w", "type": "Any"}, {"lineNumber": 196, "col_offset": 32, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 226, "col_offset": 16, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 231, "col_offset": 79, "nodeName": "w", "type": "Any"}, {"lineNumber": 261, "col_offset": 34, "nodeName": "float", "type": "Any"}, {"lineNumber": 261, "col_offset": 60, "nodeName": "float", "type": "Any"}, {"lineNumber": 262, "col_offset": 62, "nodeName": "log1p", "type": "Any"}, {"lineNumber": 263, "col_offset": 35, "nodeName": "float", "type": "Any"}, {"lineNumber": 264, "col_offset": 35, "nodeName": "float", "type": "Any"}, {"lineNumber": 265, "col_offset": 63, "nodeName": "log1p", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 97, "col_offset": 67, "nodeName": "np", "type": "module"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 127, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "softmax_b", "type": "Any"}, {"lineNumber": 181, "col_offset": 35, "nodeName": "all_ids_1", "type": "Any"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "nn", "type": "Any"}, {"lineNumber": 186, "col_offset": 59, "nodeName": "softmax_b", "type": "Any"}, {"lineNumber": 261, "col_offset": 34, "nodeName": "targets", "type": "Any"}, {"lineNumber": 261, "col_offset": 60, "nodeName": "targets", "type": "Any"}, {"lineNumber": 262, "col_offset": 62, "nodeName": "torch", "type": "Any"}, {"lineNumber": 262, "col_offset": 75, "nodeName": "target_probs", "type": "Any"}, {"lineNumber": 263, "col_offset": 35, "nodeName": "sampled_ids", "type": "Any"}, {"lineNumber": 264, "col_offset": 35, "nodeName": "sampled_ids", "type": "Any"}, {"lineNumber": 265, "col_offset": 63, "nodeName": "torch", "type": "Any"}, {"lineNumber": 265, "col_offset": 76, "nodeName": "sampled_probs", "type": "Any"}, {"lineNumber": 181, "col_offset": 20, "nodeName": "self", "type": "SampledSoftmaxLoss"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 186, "col_offset": 59, "nodeName": "self", "type": "SampledSoftmaxLoss"}]