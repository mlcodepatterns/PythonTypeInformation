[{"lineNumber": 9, "col_offset": 31, "nodeName": "Module", "type": "Any"}, {"lineNumber": 9, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 9, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "input_size", "type": "int"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "input_size", "type": "int"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 52, "col_offset": 27, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 53, "col_offset": 26, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "bidirectional", "type": "bool"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "layers", "type": "List[List[allennlp.modules.augmented_lstm.AugmentedLstm]]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "lstm_input_size", "type": "int"}, {"lineNumber": 57, "col_offset": 26, "nodeName": "input_size", "type": "int"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "layer_index", "type": "int"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "lstm_layers", "type": "List[List[allennlp.modules.augmented_lstm.AugmentedLstm]]"}, {"lineNumber": 75, "col_offset": 27, "nodeName": "layers", "type": "List[List[allennlp.modules.augmented_lstm.AugmentedLstm]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "layer_dropout", "type": "allennlp.modules.input_variational_dropout.InputVariationalDropout"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 108, "col_offset": 26, "nodeName": "inputs", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "final_h", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "final_c", "type": "List[Any]"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "final_h", "type": "Any"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "final_c", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "final_state_tuple", "type": "Tuple[Any, Any]"}, {"lineNumber": 81, "col_offset": 20, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 47, "col_offset": 30, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "StackedBidirectionalLstm"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "StackedBidirectionalLstm"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "StackedBidirectionalLstm"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "self", "type": "StackedBidirectionalLstm"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 58, "col_offset": 33, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "lstm_input_size", "type": "int"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "StackedBidirectionalLstm"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "StackedBidirectionalLstm"}, {"lineNumber": 76, "col_offset": 29, "nodeName": "InputVariationalDropout", "type": "Type[allennlp.modules.input_variational_dropout.InputVariationalDropout]"}, {"lineNumber": 76, "col_offset": 53, "nodeName": "layer_dropout_probability", "type": "float"}, {"lineNumber": 99, "col_offset": 15, "nodeName": "initial_state", "type": "Optional[Tuple[Any, Any]]"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "hidden_states", "type": "List[None]"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 111, "col_offset": 15, "nodeName": "state", "type": "Optional[Tuple[Any, Any]]"}, {"lineNumber": 111, "col_offset": 24, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "hidden_states", "type": "Union[List[None], List[Tuple[Any, Any]]]"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "cat", "type": "Any"}, {"lineNumber": 131, "col_offset": 28, "nodeName": "final_h", "type": "List[Any]"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "cat", "type": "Any"}, {"lineNumber": 132, "col_offset": 28, "nodeName": "final_c", "type": "List[Any]"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "final_h", "type": "Any"}, {"lineNumber": 133, "col_offset": 38, "nodeName": "final_c", "type": "Any"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 134, "col_offset": 32, "nodeName": "final_state_tuple", "type": "Tuple[Any, Any]"}, {"lineNumber": 60, "col_offset": 28, "nodeName": "AugmentedLstm", "type": "Type[allennlp.modules.augmented_lstm.AugmentedLstm]"}, {"lineNumber": 60, "col_offset": 42, "nodeName": "lstm_input_size", "type": "int"}, {"lineNumber": 60, "col_offset": 59, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 65, "col_offset": 29, "nodeName": "AugmentedLstm", "type": "Type[allennlp.modules.augmented_lstm.AugmentedLstm]"}, {"lineNumber": 65, "col_offset": 43, "nodeName": "lstm_input_size", "type": "int"}, {"lineNumber": 65, "col_offset": 60, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 71, "col_offset": 30, "nodeName": "hidden_size", "type": "int"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "add_module", "type": "Any"}, {"lineNumber": 72, "col_offset": 68, "nodeName": "forward_layer", "type": "allennlp.modules.augmented_lstm.AugmentedLstm"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "add_module", "type": "Any"}, {"lineNumber": 73, "col_offset": 69, "nodeName": "backward_layer", "type": "allennlp.modules.augmented_lstm.AugmentedLstm"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 80, "col_offset": 31, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 112, "col_offset": 28, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 112, "col_offset": 36, "nodeName": "self", "type": "StackedBidirectionalLstm"}, {"lineNumber": 113, "col_offset": 29, "nodeName": "getattr", "type": "Callable[..., Any]"}, {"lineNumber": 113, "col_offset": 37, "nodeName": "self", "type": "StackedBidirectionalLstm"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 115, "col_offset": 28, "nodeName": "final_forward_state", "type": "Any"}, {"lineNumber": 115, "col_offset": 50, "nodeName": "forward_layer", "type": "Any"}, {"lineNumber": 115, "col_offset": 64, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 115, "col_offset": 81, "nodeName": "state", "type": "Optional[Tuple[Any, Any]]"}, {"lineNumber": 116, "col_offset": 12, "nodeName": "backward_output", "type": "Any"}, {"lineNumber": 116, "col_offset": 29, "nodeName": "final_backward_state", "type": "Any"}, {"lineNumber": 116, "col_offset": 52, "nodeName": "backward_layer", "type": "Any"}, {"lineNumber": 116, "col_offset": 67, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 116, "col_offset": 84, "nodeName": "state", "type": "Optional[Tuple[Any, Any]]"}, {"lineNumber": 118, "col_offset": 12, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 118, "col_offset": 38, "nodeName": "pad_packed_sequence", "type": "Any"}, {"lineNumber": 118, "col_offset": 58, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "backward_output", "type": "Any"}, {"lineNumber": 119, "col_offset": 29, "nodeName": "_", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "pad_packed_sequence", "type": "Any"}, {"lineNumber": 119, "col_offset": 53, "nodeName": "backward_output", "type": "Any"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "cat", "type": "Any"}, {"lineNumber": 124, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 125, "col_offset": 16, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 126, "col_offset": 30, "nodeName": "pack_padded_sequence", "type": "Any"}, {"lineNumber": 126, "col_offset": 51, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 126, "col_offset": 68, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "extend", "type": "Callable"}, {"lineNumber": 131, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 132, "col_offset": 18, "nodeName": "torch", "type": "Any"}, {"lineNumber": 81, "col_offset": 26, "nodeName": "PackedSequence", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 48, "col_offset": 14, "nodeName": "StackedBidirectionalLstm", "type": "Type[StackedBidirectionalLstm]"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "self", "type": "StackedBidirectionalLstm"}, {"lineNumber": 62, "col_offset": 72, "nodeName": "recurrent_dropout_probability", "type": "float"}, {"lineNumber": 63, "col_offset": 54, "nodeName": "use_highway", "type": "bool"}, {"lineNumber": 67, "col_offset": 73, "nodeName": "recurrent_dropout_probability", "type": "float"}, {"lineNumber": 68, "col_offset": 55, "nodeName": "use_highway", "type": "bool"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "self", "type": "StackedBidirectionalLstm"}, {"lineNumber": 72, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 72, "col_offset": 54, "nodeName": "layer_index", "type": "int"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "self", "type": "StackedBidirectionalLstm"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 73, "col_offset": 55, "nodeName": "layer_index", "type": "int"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "layers", "type": "List[List[allennlp.modules.augmented_lstm.AugmentedLstm]]"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "forward_layer", "type": "allennlp.modules.augmented_lstm.AugmentedLstm"}, {"lineNumber": 74, "col_offset": 42, "nodeName": "backward_layer", "type": "allennlp.modules.augmented_lstm.AugmentedLstm"}, {"lineNumber": 100, "col_offset": 37, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "lstm_layers", "type": "List[List[allennlp.modules.augmented_lstm.AugmentedLstm]]"}, {"lineNumber": 101, "col_offset": 43, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "lstm_layers", "type": "List[List[allennlp.modules.augmented_lstm.AugmentedLstm]]"}, {"lineNumber": 102, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 112, "col_offset": 42, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 112, "col_offset": 68, "nodeName": "i", "type": "int"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 113, "col_offset": 70, "nodeName": "i", "type": "int"}, {"lineNumber": 121, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 121, "col_offset": 41, "nodeName": "forward_output", "type": "Any"}, {"lineNumber": 121, "col_offset": 57, "nodeName": "backward_output", "type": "Any"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "num_layers", "type": "int"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "layer_dropout", "type": "allennlp.modules.input_variational_dropout.InputVariationalDropout"}, {"lineNumber": 125, "col_offset": 53, "nodeName": "output_sequence", "type": "Any"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "final_h", "type": "List[Any]"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "final_c", "type": "List[Any]"}, {"lineNumber": 81, "col_offset": 42, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 80, "col_offset": 40, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 100, "col_offset": 41, "nodeName": "self", "type": "StackedBidirectionalLstm"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "size", "type": "Any"}, {"lineNumber": 101, "col_offset": 47, "nodeName": "self", "type": "StackedBidirectionalLstm"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 124, "col_offset": 20, "nodeName": "self", "type": "StackedBidirectionalLstm"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "self", "type": "StackedBidirectionalLstm"}, {"lineNumber": 128, "col_offset": 28, "nodeName": "final_forward_state", "type": "Any"}, {"lineNumber": 128, "col_offset": 52, "nodeName": "final_backward_state", "type": "Any"}, {"lineNumber": 129, "col_offset": 28, "nodeName": "final_forward_state", "type": "Any"}, {"lineNumber": 129, "col_offset": 52, "nodeName": "final_backward_state", "type": "Any"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "split", "type": "Any"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "split", "type": "Any"}, {"lineNumber": 81, "col_offset": 48, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 81, "col_offset": 62, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 80, "col_offset": 46, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 80, "col_offset": 60, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 101, "col_offset": 13, "nodeName": "initial_state", "type": "Optional[Tuple[Any, Any]]"}, {"lineNumber": 81, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 81, "col_offset": 62, "nodeName": "torch", "type": "Any"}, {"lineNumber": 80, "col_offset": 46, "nodeName": "torch", "type": "Any"}, {"lineNumber": 80, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "initial_state", "type": "Optional[Tuple[Any, Any]]"}, {"lineNumber": 106, "col_offset": 37, "nodeName": "initial_state", "type": "Optional[Tuple[Any, Any]]"}]