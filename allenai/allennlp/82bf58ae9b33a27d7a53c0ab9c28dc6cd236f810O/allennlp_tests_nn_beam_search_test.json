[{"lineNumber": 46, "col_offset": 21, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 12, "col_offset": 27, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 38, "col_offset": 4, "nodeName": "log_probs_list", "type": "List[Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "last_token", "type": "Any"}, {"lineNumber": 39, "col_offset": 22, "nodeName": "last_predictions", "type": "Any"}, {"lineNumber": 26, "col_offset": 5, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 12, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 43, "col_offset": 40, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "end_index", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "beam_search", "type": "allennlp.nn.beam_search.BeamSearch"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "expected_top_k", "type": "numpy.ndarray"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "expected_log_probs", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "expected_top_k", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "state", "type": "Union[Dict[str, Any], Dict[nothing, nothing]]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "beam_search", "type": "allennlp.nn.beam_search.BeamSearch"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "beam_size", "type": "int"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "beam_size", "type": "int"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "initial_predictions", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "expected_finished_state", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "beam_search", "type": "allennlp.nn.beam_search.BeamSearch"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "expected_top_k", "type": "numpy.ndarray"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "expected_log_probs", "type": "Any"}, {"lineNumber": 139, "col_offset": 8, "nodeName": "beam_search", "type": "allennlp.nn.beam_search.BeamSearch"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "expected_top_k", "type": "numpy.ndarray"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "expected_log_probs", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "beam_search", "type": "allennlp.nn.beam_search.BeamSearch"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "beam_search", "type": "allennlp.nn.beam_search.BeamSearch"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "beam_search", "type": "allennlp.nn.beam_search.BeamSearch"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "initial_predictions", "type": "Any"}, {"lineNumber": 177, "col_offset": 8, "nodeName": "initial_predictions", "type": "Any"}, {"lineNumber": 178, "col_offset": 8, "nodeName": "beam_search", "type": "allennlp.nn.beam_search.BeamSearch"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 25, "col_offset": 43, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "log", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "append", "type": "Callable"}, {"lineNumber": 41, "col_offset": 30, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "stack", "type": "Any"}, {"lineNumber": 43, "col_offset": 23, "nodeName": "log_probs_list", "type": "List[Any]"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "setUp", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 50, "col_offset": 27, "nodeName": "BeamSearch", "type": "Type[allennlp.nn.beam_search.BeamSearch]"}, {"lineNumber": 50, "col_offset": 38, "nodeName": "end_index", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "log", "type": "Any"}, {"lineNumber": 66, "col_offset": 25, "nodeName": "expected_top_k", "type": "Any"}, {"lineNumber": 66, "col_offset": 75, "nodeName": "expected_top_k", "type": "Any"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "expected_log_probs", "type": "Any"}, {"lineNumber": 68, "col_offset": 70, "nodeName": "expected_log_probs", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 22, "nodeName": "beam_search", "type": "allennlp.nn.beam_search.BeamSearch"}, {"lineNumber": 73, "col_offset": 20, "nodeName": "beam_search", "type": "allennlp.nn.beam_search.BeamSearch"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "top_k", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "search", "type": "Callable[[Any, Dict[str, Any], Callable[[Any, Dict[str, Any]], Tuple[Any, Dict[str, Any]]]], Tuple[Any, Any]]"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "initial_predictions", "type": "Any"}, {"lineNumber": 76, "col_offset": 67, "nodeName": "state", "type": "Union[Dict[nothing, nothing], Dict[str, Any]]"}, {"lineNumber": 76, "col_offset": 74, "nodeName": "take_step", "type": "Callable[[Any, Dict[str, Any]], Tuple[Any, Dict[str, Any]]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 80, "col_offset": 56, "nodeName": "expected_top_k", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 84, "col_offset": 57, "nodeName": "expected_log_probs", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "_check_results", "type": "Callable[..., None]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "_check_results", "type": "Callable[..., None]"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 119, "col_offset": 17, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "items", "type": "Callable"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "_check_results", "type": "Callable[..., None]"}, {"lineNumber": 126, "col_offset": 22, "nodeName": "BeamSearch", "type": "Type[allennlp.nn.beam_search.BeamSearch]"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "end_index", "type": "Any"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "log", "type": "Any"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "_check_results", "type": "Callable[..., None]"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "BeamSearch", "type": "Type[allennlp.nn.beam_search.BeamSearch]"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "end_index", "type": "Any"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "log", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "_check_results", "type": "Callable[..., None]"}, {"lineNumber": 150, "col_offset": 22, "nodeName": "BeamSearch", "type": "Type[allennlp.nn.beam_search.BeamSearch]"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "end_index", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "_check_results", "type": "Callable[..., None]"}, {"lineNumber": 154, "col_offset": 22, "nodeName": "BeamSearch", "type": "Type[allennlp.nn.beam_search.BeamSearch]"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "end_index", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "_check_results", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 22, "nodeName": "BeamSearch", "type": "Type[allennlp.nn.beam_search.BeamSearch]"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "end_index", "type": "Any"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 178, "col_offset": 22, "nodeName": "BeamSearch", "type": "Type[allennlp.nn.beam_search.BeamSearch]"}, {"lineNumber": 178, "col_offset": 33, "nodeName": "end_index", "type": "Any"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "all", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "all", "type": "Any"}, {"lineNumber": 40, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 40, "col_offset": 30, "nodeName": "transition_probabilities", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "log_probs_list", "type": "List[Any]"}, {"lineNumber": 43, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 26, "col_offset": 11, "nodeName": "torch", "type": "Any"}, {"lineNumber": 26, "col_offset": 25, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 50, "col_offset": 38, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "np", "type": "module"}, {"lineNumber": 56, "col_offset": 41, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 64, "col_offset": 15, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 66, "col_offset": 43, "nodeName": "expected_top_k", "type": "Any"}, {"lineNumber": 66, "col_offset": 75, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 68, "col_offset": 34, "nodeName": "expected_log_probs", "type": "Any"}, {"lineNumber": 68, "col_offset": 70, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 75, "col_offset": 49, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 76, "col_offset": 27, "nodeName": "beam_search", "type": "allennlp.nn.beam_search.BeamSearch"}, {"lineNumber": 79, "col_offset": 43, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 79, "col_offset": 55, "nodeName": "beam_size", "type": "int"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 83, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 83, "col_offset": 42, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 83, "col_offset": 54, "nodeName": "beam_size", "type": "int"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 95, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 116, "col_offset": 34, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 119, "col_offset": 26, "nodeName": "expected_finished_state", "type": "Dict[str, numpy.ndarray]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 120, "col_offset": 59, "nodeName": "array", "type": "numpy.ndarray"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 126, "col_offset": 33, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 127, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 130, "col_offset": 27, "nodeName": "expected_top_k", "type": "numpy.ndarray"}, {"lineNumber": 131, "col_offset": 31, "nodeName": "expected_log_probs", "type": "Any"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "beam_search", "type": "allennlp.nn.beam_search.BeamSearch"}, {"lineNumber": 139, "col_offset": 33, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 140, "col_offset": 25, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 29, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 36, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 143, "col_offset": 27, "nodeName": "expected_top_k", "type": "numpy.ndarray"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "expected_log_probs", "type": "Any"}, {"lineNumber": 145, "col_offset": 24, "nodeName": "beam_search", "type": "allennlp.nn.beam_search.BeamSearch"}, {"lineNumber": 150, "col_offset": 33, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 151, "col_offset": 40, "nodeName": "beam_search", "type": "allennlp.nn.beam_search.BeamSearch"}, {"lineNumber": 154, "col_offset": 33, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 155, "col_offset": 40, "nodeName": "beam_search", "type": "allennlp.nn.beam_search.BeamSearch"}, {"lineNumber": 163, "col_offset": 33, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 164, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "_check_results", "type": "Callable[..., None]"}, {"lineNumber": 172, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 173, "col_offset": 26, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "search", "type": "Callable[[Any, Dict[str, Any], Callable[[Any, Dict[str, Any]], Tuple[Any, Dict[str, Any]]]], Tuple[Any, Any]]"}, {"lineNumber": 174, "col_offset": 36, "nodeName": "initial_predictions", "type": "Any"}, {"lineNumber": 174, "col_offset": 61, "nodeName": "take_step", "type": "Callable[[Any, Dict[str, Any]], Tuple[Any, Dict[str, Any]]]"}, {"lineNumber": 177, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 178, "col_offset": 33, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "warns", "type": "Any"}, {"lineNumber": 179, "col_offset": 26, "nodeName": "RuntimeWarning", "type": "Type[RuntimeWarning]"}, {"lineNumber": 180, "col_offset": 12, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 180, "col_offset": 25, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 180, "col_offset": 37, "nodeName": "search", "type": "Callable[[Any, Dict[str, Any], Callable[[Any, Dict[str, Any]], Tuple[Any, Dict[str, Any]]]], Tuple[Any, Any]]"}, {"lineNumber": 180, "col_offset": 56, "nodeName": "initial_predictions", "type": "Any"}, {"lineNumber": 180, "col_offset": 81, "nodeName": "take_step", "type": "Callable[[Any, Dict[str, Any]], Tuple[Any, Dict[str, Any]]]"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 184, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 25, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 25, "col_offset": 53, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "size", "type": "Any"}, {"lineNumber": 56, "col_offset": 41, "nodeName": "np", "type": "module"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "size", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "np", "type": "module"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 120, "col_offset": 39, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 128, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 141, "col_offset": 36, "nodeName": "np", "type": "module"}, {"lineNumber": 164, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 165, "col_offset": 44, "nodeName": "beam_search", "type": "allennlp.nn.beam_search.BeamSearch"}, {"lineNumber": 172, "col_offset": 48, "nodeName": "end_index", "type": "Any"}, {"lineNumber": 172, "col_offset": 68, "nodeName": "end_index", "type": "Any"}, {"lineNumber": 173, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "beam_search", "type": "allennlp.nn.beam_search.BeamSearch"}, {"lineNumber": 177, "col_offset": 48, "nodeName": "end_index", "type": "Any"}, {"lineNumber": 177, "col_offset": 68, "nodeName": "end_index", "type": "Any"}, {"lineNumber": 179, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 180, "col_offset": 37, "nodeName": "beam_search", "type": "allennlp.nn.beam_search.BeamSearch"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "size", "type": "Any"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "size", "type": "Any"}, {"lineNumber": 185, "col_offset": 16, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "end_index", "type": "Any"}, {"lineNumber": 186, "col_offset": 16, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 25, "col_offset": 53, "nodeName": "torch", "type": "Any"}, {"lineNumber": 40, "col_offset": 55, "nodeName": "item", "type": "Any"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 26, "col_offset": 35, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 49, "col_offset": 25, "nodeName": "transition_probabilities", "type": "Any"}, {"lineNumber": 64, "col_offset": 20, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "size", "type": "Any"}, {"lineNumber": 80, "col_offset": 38, "nodeName": "top_k", "type": "Any"}, {"lineNumber": 83, "col_offset": 20, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 84, "col_offset": 35, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 172, "col_offset": 48, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 172, "col_offset": 68, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 174, "col_offset": 12, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 177, "col_offset": 48, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 177, "col_offset": 68, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 182, "col_offset": 20, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 184, "col_offset": 20, "nodeName": "log_probs", "type": "Any"}, {"lineNumber": 185, "col_offset": 31, "nodeName": "self", "type": "BeamSearchTest"}, {"lineNumber": 40, "col_offset": 55, "nodeName": "last_token", "type": "Any"}, {"lineNumber": 26, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "top_k", "type": "Any"}, {"lineNumber": 120, "col_offset": 39, "nodeName": "state", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 45, "nodeName": "key", "type": "str"}]