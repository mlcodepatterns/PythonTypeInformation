[{"lineNumber": 15, "col_offset": 20, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "instances", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 35, "col_offset": 21, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "instances", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 36, "col_offset": 25, "nodeName": "instances", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "dataset", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "save_dir", "type": "str"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "archive_file", "type": "str"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "state_keys", "type": "Any"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "loaded_state_keys", "type": "Any"}, {"lineNumber": 56, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 56, "col_offset": 19, "nodeName": "state_keys", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "iterator_params", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "iterator_params2", "type": "allennlp.common.params.Params"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "iterator2", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "model_dataset", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "model_batch", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "loaded_dataset", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "loaded_batch", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "model_", "type": "allennlp.models.model.Model"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "model_predictions", "type": "Any"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "loaded_model_predictions", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "loaded_model_loss", "type": "Any"}, {"lineNumber": 107, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 141, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "has_zero_or_none_grads", "type": "Dict[Any, str]"}, {"lineNumber": 157, "col_offset": 11, "nodeName": "has_zero_or_none_grads", "type": "Dict[Any, str]"}, {"lineNumber": 164, "col_offset": 8, "nodeName": "single_predictions", "type": "List[Any]"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "full_dataset", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 171, "col_offset": 8, "nodeName": "batch_tensors", "type": "Dict[str, Any]"}, {"lineNumber": 172, "col_offset": 8, "nodeName": "batch_predictions", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "read", "type": "Callable[[str], Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 26, "col_offset": 32, "nodeName": "dataset_file", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "vocab_params", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "from_instances", "type": "Callable[..., allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 34, "col_offset": 42, "nodeName": "instances", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "from_params", "type": "Callable[[Any, allennlp.data.vocabulary.Vocabulary, allennlp.common.params.Params], allennlp.models.model.Model]"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 41, "col_offset": 23, "nodeName": "Batch", "type": "Type[allennlp.data.dataset.Batch]"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "instances", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "index_instances", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 47, "col_offset": 58, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "TEST_DIR", "type": "str"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "save_dir", "type": "str"}, {"lineNumber": 50, "col_offset": 16, "nodeName": "train_model_from_file", "type": "Callable[..., allennlp.models.model.Model]"}, {"lineNumber": 50, "col_offset": 38, "nodeName": "param_file", "type": "str"}, {"lineNumber": 50, "col_offset": 50, "nodeName": "save_dir", "type": "str"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "keys", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "keys", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "state_keys", "type": "Any"}, {"lineNumber": 54, "col_offset": 29, "nodeName": "loaded_state_keys", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 64, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.data.iterators.data_iterator.DataIterator]"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "iterator_params", "type": "Any"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.data.iterators.data_iterator.DataIterator]"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "iterator_params2", "type": "allennlp.common.params.Params"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "read", "type": "Callable[[str], Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "index_with", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 74, "col_offset": 22, "nodeName": "next", "type": "Callable"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "read", "type": "Callable[[str], Iterable[allennlp.data.instance.Instance]]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "index_with", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 78, "col_offset": 23, "nodeName": "next", "type": "Callable"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "check_model_computes_gradients_correctly", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 82, "col_offset": 54, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 82, "col_offset": 61, "nodeName": "model_batch", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 94, "col_offset": 23, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 95, "col_offset": 16, "nodeName": "module", "type": "Any"}, {"lineNumber": 98, "col_offset": 28, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 99, "col_offset": 35, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 102, "col_offset": 28, "nodeName": "loaded_model_predictions", "type": "Any"}, {"lineNumber": 103, "col_offset": 15, "nodeName": "loaded_model_loss", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "keys", "type": "Any"}, {"lineNumber": 113, "col_offset": 15, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 113, "col_offset": 22, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 115, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 115, "col_offset": 72, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 116, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 116, "col_offset": 22, "nodeName": "field1", "type": "Any"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "zero_grad", "type": "Any"}, {"lineNumber": 141, "col_offset": 17, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 144, "col_offset": 18, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 145, "col_offset": 12, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 165, "col_offset": 15, "nodeName": "instance", "type": "Any"}, {"lineNumber": 165, "col_offset": 27, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 165, "col_offset": 37, "nodeName": "instances", "type": "Any"}, {"lineNumber": 166, "col_offset": 12, "nodeName": "dataset", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 167, "col_offset": 12, "nodeName": "tensors", "type": "Dict[str, Any]"}, {"lineNumber": 168, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 170, "col_offset": 23, "nodeName": "Batch", "type": "Type[allennlp.data.dataset.Batch]"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "instances", "type": "Any"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "as_tensor_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "model", "type": "Any"}, {"lineNumber": 173, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 173, "col_offset": 15, "nodeName": "instance_predictions", "type": "Any"}, {"lineNumber": 173, "col_offset": 39, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 173, "col_offset": 49, "nodeName": "single_predictions", "type": "List[Any]"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "DatasetReader", "type": "Type[allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 25, "col_offset": 43, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 26, "col_offset": 20, "nodeName": "reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "from_params", "type": "Callable[..., Any]"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "from_instances", "type": "Callable[..., allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 33, "col_offset": 46, "nodeName": "instances", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 34, "col_offset": 16, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 37, "col_offset": 39, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 37, "col_offset": 51, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 41, "col_offset": 29, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "dataset", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 48, "col_offset": 32, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 51, "col_offset": 23, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "archive_file", "type": "str"}, {"lineNumber": 57, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 60, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 60, "col_offset": 34, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 61, "col_offset": 17, "nodeName": "DatasetReader", "type": "Type[allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "DataIterator", "type": "Type[allennlp.data.iterators.data_iterator.DataIterator]"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "DataIterator", "type": "Type[allennlp.data.iterators.data_iterator.DataIterator]"}, {"lineNumber": 72, "col_offset": 24, "nodeName": "reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 74, "col_offset": 36, "nodeName": "model_dataset", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 76, "col_offset": 37, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "iterator2", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 77, "col_offset": 29, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 78, "col_offset": 28, "nodeName": "iterator2", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 78, "col_offset": 38, "nodeName": "loaded_dataset", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 86, "col_offset": 19, "nodeName": "model_batch", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "assert_fields_equal", "type": "Callable[..., None]"}, {"lineNumber": 87, "col_offset": 74, "nodeName": "key", "type": "str"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "modules", "type": "Any"}, {"lineNumber": 98, "col_offset": 36, "nodeName": "model_batch", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 99, "col_offset": 50, "nodeName": "loaded_batch", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "loaded_model_loss", "type": "Any"}, {"lineNumber": 107, "col_offset": 19, "nodeName": "model_predictions", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "assert_fields_equal", "type": "Callable[..., None]"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 117, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 121, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 121, "col_offset": 24, "nodeName": "field1", "type": "Any"}, {"lineNumber": 121, "col_offset": 32, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 123, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 123, "col_offset": 23, "nodeName": "field1", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 141, "col_offset": 25, "nodeName": "model_batch", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 144, "col_offset": 31, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 146, "col_offset": 15, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 158, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 158, "col_offset": 22, "nodeName": "grad", "type": "str"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "items", "type": "Callable"}, {"lineNumber": 160, "col_offset": 18, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 165, "col_offset": 37, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 166, "col_offset": 22, "nodeName": "Batch", "type": "Type[allennlp.data.dataset.Batch]"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "as_tensor_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 169, "col_offset": 38, "nodeName": "result", "type": "Any"}, {"lineNumber": 170, "col_offset": 29, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 171, "col_offset": 24, "nodeName": "full_dataset", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 171, "col_offset": 52, "nodeName": "get_padding_lengths", "type": "Callable[[], Dict[str, Dict[str, int]]]"}, {"lineNumber": 172, "col_offset": 28, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 172, "col_offset": 41, "nodeName": "batch_tensors", "type": "Dict[str, Any]"}, {"lineNumber": 174, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 174, "col_offset": 21, "nodeName": "single_predicted", "type": "Any"}, {"lineNumber": 174, "col_offset": 41, "nodeName": "items", "type": "Any"}, {"lineNumber": 175, "col_offset": 16, "nodeName": "tolerance", "type": "float"}, {"lineNumber": 180, "col_offset": 16, "nodeName": "single_predicted", "type": "Any"}, {"lineNumber": 181, "col_offset": 16, "nodeName": "batch_predicted", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 31, "col_offset": 50, "nodeName": "vocab_params", "type": "Any"}, {"lineNumber": 31, "col_offset": 74, "nodeName": "instances", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 33, "col_offset": 20, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 51, "col_offset": 62, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "key", "type": "Any"}, {"lineNumber": 65, "col_offset": 34, "nodeName": "copy", "type": "module"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "as_dict", "type": "Any"}, {"lineNumber": 74, "col_offset": 78, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 78, "col_offset": 81, "nodeName": "cuda_device", "type": "int"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "model_batch", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 85, "col_offset": 37, "nodeName": "loaded_batch", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "model_batch", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 87, "col_offset": 55, "nodeName": "loaded_batch", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 95, "col_offset": 26, "nodeName": "model_", "type": "allennlp.models.model.Model"}, {"lineNumber": 96, "col_offset": 51, "nodeName": "stateful", "type": "Any"}, {"lineNumber": 108, "col_offset": 12, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 108, "col_offset": 37, "nodeName": "model_predictions", "type": "Any"}, {"lineNumber": 109, "col_offset": 37, "nodeName": "loaded_model_predictions", "type": "Any"}, {"lineNumber": 110, "col_offset": 42, "nodeName": "key", "type": "Any"}, {"lineNumber": 111, "col_offset": 47, "nodeName": "tolerance", "type": "float"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 119, "col_offset": 33, "nodeName": "tolerance", "type": "float"}, {"lineNumber": 120, "col_offset": 36, "nodeName": "name", "type": "str"}, {"lineNumber": 128, "col_offset": 13, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 128, "col_offset": 24, "nodeName": "field1", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 145, "col_offset": 20, "nodeName": "torch", "type": "Any"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "size", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "grad", "type": "Any"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "all", "type": "Any"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "grad", "type": "Any"}, {"lineNumber": 158, "col_offset": 30, "nodeName": "has_zero_or_none_grads", "type": "Dict[Any, str]"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 166, "col_offset": 29, "nodeName": "instance", "type": "Any"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "dataset", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 167, "col_offset": 45, "nodeName": "get_padding_lengths", "type": "Callable[[], Dict[str, Dict[str, int]]]"}, {"lineNumber": 168, "col_offset": 21, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 168, "col_offset": 34, "nodeName": "tensors", "type": "Dict[str, Any]"}, {"lineNumber": 169, "col_offset": 12, "nodeName": "single_predictions", "type": "List[Any]"}, {"lineNumber": 171, "col_offset": 52, "nodeName": "full_dataset", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 174, "col_offset": 41, "nodeName": "instance_predictions", "type": "Any"}, {"lineNumber": 176, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 180, "col_offset": 35, "nodeName": "single_predicted", "type": "Any"}, {"lineNumber": 182, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 182, "col_offset": 30, "nodeName": "single_predicted", "type": "Any"}, {"lineNumber": 182, "col_offset": 48, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 191, "col_offset": 64, "nodeName": "key", "type": "Any"}, {"lineNumber": 52, "col_offset": 21, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 53, "col_offset": 28, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 65, "col_offset": 48, "nodeName": "iterator_params", "type": "Any"}, {"lineNumber": 87, "col_offset": 49, "nodeName": "key", "type": "str"}, {"lineNumber": 87, "col_offset": 68, "nodeName": "key", "type": "str"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "hasattr", "type": "Callable[[Any, str], bool]"}, {"lineNumber": 96, "col_offset": 27, "nodeName": "module", "type": "Any"}, {"lineNumber": 96, "col_offset": 51, "nodeName": "module", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "reset_states", "type": "Any"}, {"lineNumber": 108, "col_offset": 55, "nodeName": "key", "type": "Any"}, {"lineNumber": 109, "col_offset": 62, "nodeName": "key", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "keys", "type": "Any"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "keys", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "assert_fields_equal", "type": "Callable[..., None]"}, {"lineNumber": 128, "col_offset": 33, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 128, "col_offset": 39, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 130, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 130, "col_offset": 45, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "field1", "type": "Any"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "field2", "type": "Any"}, {"lineNumber": 145, "col_offset": 32, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 149, "col_offset": 20, "nodeName": "has_zero_or_none_grads", "type": "Dict[Any, str]"}, {"lineNumber": 153, "col_offset": 20, "nodeName": "has_zero_or_none_grads", "type": "Dict[Any, str]"}, {"lineNumber": 155, "col_offset": 23, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 167, "col_offset": 45, "nodeName": "dataset", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 181, "col_offset": 34, "nodeName": "batch_predictions", "type": "Any"}, {"lineNumber": 181, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 182, "col_offset": 48, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 184, "col_offset": 24, "nodeName": "slices", "type": "Tuple[slice, ...]"}, {"lineNumber": 185, "col_offset": 24, "nodeName": "batch_predicted", "type": "Any"}, {"lineNumber": 186, "col_offset": 20, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 191, "col_offset": 27, "nodeName": "single_predicted", "type": "Any"}, {"lineNumber": 191, "col_offset": 47, "nodeName": "batch_predicted", "type": "Any"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 97, "col_offset": 20, "nodeName": "module", "type": "Any"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "field1", "type": "Any"}, {"lineNumber": 122, "col_offset": 36, "nodeName": "field2", "type": "Any"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 124, "col_offset": 41, "nodeName": "field1", "type": "Any"}, {"lineNumber": 125, "col_offset": 41, "nodeName": "field2", "type": "Any"}, {"lineNumber": 126, "col_offset": 51, "nodeName": "tolerance", "type": "float"}, {"lineNumber": 129, "col_offset": 19, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "field1", "type": "Any"}, {"lineNumber": 129, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 129, "col_offset": 38, "nodeName": "field2", "type": "Any"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "subfield1", "type": "Any"}, {"lineNumber": 130, "col_offset": 31, "nodeName": "subfield2", "type": "Any"}, {"lineNumber": 130, "col_offset": 55, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 130, "col_offset": 59, "nodeName": "field1", "type": "Any"}, {"lineNumber": 130, "col_offset": 67, "nodeName": "field2", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "assert_fields_equal", "type": "Callable[..., None]"}, {"lineNumber": 131, "col_offset": 41, "nodeName": "subfield1", "type": "Any"}, {"lineNumber": 132, "col_offset": 41, "nodeName": "subfield2", "type": "Any"}, {"lineNumber": 149, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 152, "col_offset": 49, "nodeName": "zeros", "type": "Any"}, {"lineNumber": 153, "col_offset": 43, "nodeName": "name", "type": "Any"}, {"lineNumber": 159, "col_offset": 36, "nodeName": "name", "type": "Any"}, {"lineNumber": 159, "col_offset": 67, "nodeName": "grad", "type": "str"}, {"lineNumber": 181, "col_offset": 52, "nodeName": "key", "type": "Any"}, {"lineNumber": 182, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "size", "type": "Any"}, {"lineNumber": 183, "col_offset": 50, "nodeName": "size", "type": "Any"}, {"lineNumber": 184, "col_offset": 33, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 185, "col_offset": 42, "nodeName": "batch_predicted", "type": "Any"}, {"lineNumber": 186, "col_offset": 36, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 187, "col_offset": 36, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 188, "col_offset": 41, "nodeName": "tolerance", "type": "float"}, {"lineNumber": 189, "col_offset": 44, "nodeName": "key", "type": "Any"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 124, "col_offset": 48, "nodeName": "key", "type": "Any"}, {"lineNumber": 125, "col_offset": 48, "nodeName": "key", "type": "Any"}, {"lineNumber": 127, "col_offset": 59, "nodeName": "key", "type": "Any"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 133, "col_offset": 51, "nodeName": "tolerance", "type": "float"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 153, "col_offset": 72, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 183, "col_offset": 23, "nodeName": "single_predicted", "type": "Any"}, {"lineNumber": 183, "col_offset": 50, "nodeName": "batch_predicted", "type": "Any"}, {"lineNumber": 185, "col_offset": 58, "nodeName": "slices", "type": "Tuple[slice, ...]"}, {"lineNumber": 186, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 187, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 117, "col_offset": 28, "nodeName": "field1", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "field2", "type": "Any"}, {"lineNumber": 127, "col_offset": 46, "nodeName": "name", "type": "str"}, {"lineNumber": 134, "col_offset": 46, "nodeName": "name", "type": "str"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "data", "type": "Any"}, {"lineNumber": 153, "col_offset": 78, "nodeName": "size", "type": "Any"}, {"lineNumber": 184, "col_offset": 39, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 184, "col_offset": 48, "nodeName": "size", "type": "Any"}, {"lineNumber": 184, "col_offset": 58, "nodeName": "size", "type": "Any"}, {"lineNumber": 186, "col_offset": 36, "nodeName": "single_predicted", "type": "Any"}, {"lineNumber": 187, "col_offset": 36, "nodeName": "batch_predicted", "type": "Any"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 57, "col_offset": 47, "nodeName": "key", "type": "Any"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 58, "col_offset": 54, "nodeName": "key", "type": "Any"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "grad", "type": "Any"}, {"lineNumber": 153, "col_offset": 78, "nodeName": "grad", "type": "Any"}, {"lineNumber": 184, "col_offset": 66, "nodeName": "size", "type": "Any"}, {"lineNumber": 57, "col_offset": 28, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 58, "col_offset": 28, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 134, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 152, "col_offset": 20, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 153, "col_offset": 78, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 184, "col_offset": 66, "nodeName": "single_predicted", "type": "Any"}]