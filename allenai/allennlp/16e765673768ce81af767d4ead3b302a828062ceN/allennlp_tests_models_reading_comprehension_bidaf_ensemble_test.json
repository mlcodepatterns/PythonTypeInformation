[{"lineNumber": 9, "col_offset": 24, "nodeName": "ModelTestCase", "type": "Type[allennlp.common.testing.model_test_case.ModelTestCase]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "bidaf_ensemble", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "batch", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "training_tensors", "type": "Dict[str, Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "bidaf_output_dict", "type": "Any"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "ensemble_output_dict", "type": "Any"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "BidafEnsemble", "type": "Any"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "Batch", "type": "Type[allennlp.data.dataset.Batch]"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "instances", "type": "List[allennlp.data.instance.Instance]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "index_instances", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "as_tensor_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "model", "type": "Any"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "bidaf_ensemble", "type": "Any"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "get_metrics", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "equal", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "self", "type": "BidafEnsembleTest"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "model", "type": "Any"}, {"lineNumber": 77, "col_offset": 52, "nodeName": "model", "type": "Any"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "self", "type": "BidafEnsembleTest"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "batch", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "self", "type": "BidafEnsembleTest"}, {"lineNumber": 81, "col_offset": 27, "nodeName": "batch", "type": "allennlp.data.dataset.Batch"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "self", "type": "BidafEnsembleTest"}, {"lineNumber": 83, "col_offset": 41, "nodeName": "training_tensors", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 48, "nodeName": "training_tensors", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "model", "type": "Any"}, {"lineNumber": 94, "col_offset": 15, "nodeName": "metrics", "type": "Any"}, {"lineNumber": 95, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 95, "col_offset": 27, "nodeName": "ensemble_output_dict", "type": "Any"}, {"lineNumber": 95, "col_offset": 62, "nodeName": "bidaf_output_dict", "type": "Any"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "ensemble_output_dict", "type": "Any"}, {"lineNumber": 96, "col_offset": 56, "nodeName": "bidaf_output_dict", "type": "Any"}, {"lineNumber": 11, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 12, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 13, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "BidafEnsembleTest"}, {"lineNumber": 19, "col_offset": 44, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 20, "col_offset": 42, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 21, "col_offset": 37, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 27, "col_offset": 44, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 28, "col_offset": 42, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 43, "col_offset": 44, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 51, "col_offset": 44, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 52, "col_offset": 42, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 60, "col_offset": 42, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "self", "type": "BidafEnsembleTest"}, {"lineNumber": 77, "col_offset": 52, "nodeName": "self", "type": "BidafEnsembleTest"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "self", "type": "BidafEnsembleTest"}, {"lineNumber": 12, "col_offset": 26, "nodeName": "self", "type": "BidafEnsembleTest"}, {"lineNumber": 13, "col_offset": 26, "nodeName": "self", "type": "BidafEnsembleTest"}, {"lineNumber": 19, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 20, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 21, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 27, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 28, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 29, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 43, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 51, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 52, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 53, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 60, "col_offset": 42, "nodeName": "torch", "type": "Any"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "torch", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 70, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "data", "type": "Any"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "torch", "type": "Any"}, {"lineNumber": 37, "col_offset": 16, "nodeName": "ensemble", "type": "Callable[[List[Dict[str, Any]]], Any]"}, {"lineNumber": 37, "col_offset": 25, "nodeName": "subresults", "type": "List[Dict[str, Any]]"}, {"lineNumber": 69, "col_offset": 16, "nodeName": "ensemble", "type": "Callable[[List[Dict[str, Any]]], Any]"}, {"lineNumber": 69, "col_offset": 25, "nodeName": "subresults", "type": "List[Dict[str, Any]]"}]