[{"lineNumber": 14, "col_offset": 25, "nodeName": "Metric", "type": "Type[allennlp.training.metrics.metric.Metric]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "_label_vocabulary", "type": "Dict[int, str]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "_ignore_classes", "type": "Union[List[str], List[nothing]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "_true_positives", "type": "Dict[str, int]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "_false_positives", "type": "Dict[str, int]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "_false_negatives", "type": "Dict[str, int]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "argmax_predictions", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 132, "col_offset": 8, "nodeName": "spans", "type": "Set[Tuple[Tuple[int, int], Optional[Any]]]"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "span_start", "type": "int"}, {"lineNumber": 134, "col_offset": 8, "nodeName": "span_end", "type": "int"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "active_conll_tag", "type": "None"}, {"lineNumber": 174, "col_offset": 11, "nodeName": "active_conll_tag", "type": "Optional[Any]"}, {"lineNumber": 176, "col_offset": 15, "nodeName": "spans", "type": "Set[Tuple[Tuple[int, int], Optional[Any]]]"}, {"lineNumber": 113, "col_offset": 57, "nodeName": "Set", "type": "Any"}, {"lineNumber": 190, "col_offset": 8, "nodeName": "all_tags", "type": "Set[Any]"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "all_metrics", "type": "Dict[str, Any]"}, {"lineNumber": 195, "col_offset": 12, "nodeName": "tag", "type": "Any"}, {"lineNumber": 195, "col_offset": 19, "nodeName": "all_tags", "type": "Set[Any]"}, {"lineNumber": 210, "col_offset": 43, "nodeName": "precision", "type": "Any"}, {"lineNumber": 211, "col_offset": 40, "nodeName": "recall", "type": "Any"}, {"lineNumber": 212, "col_offset": 44, "nodeName": "f1_measure", "type": "Any"}, {"lineNumber": 213, "col_offset": 11, "nodeName": "reset", "type": "bool"}, {"lineNumber": 215, "col_offset": 15, "nodeName": "all_metrics", "type": "Dict[str, Any]"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "precision", "type": "float"}, {"lineNumber": 220, "col_offset": 8, "nodeName": "recall", "type": "float"}, {"lineNumber": 221, "col_offset": 8, "nodeName": "f1_measure", "type": "float"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "_true_positives", "type": "collections.defaultdict[nothing, int]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "_false_positives", "type": "collections.defaultdict[nothing, int]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "_false_negatives", "type": "collections.defaultdict[nothing, int]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "get_index_to_token_vocabulary", "type": "Callable[..., Dict[int, str]]"}, {"lineNumber": 51, "col_offset": 74, "nodeName": "tag_namespace", "type": "str"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 52, "col_offset": 31, "nodeName": "ignore_classes", "type": "List[str]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 55, "col_offset": 31, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 56, "col_offset": 32, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 56, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 57, "col_offset": 32, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 57, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 74, "col_offset": 11, "nodeName": "mask", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 79, "col_offset": 22, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 81, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 81, "col_offset": 22, "nodeName": "gold_labels", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "gold_labels", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 83, "col_offset": 22, "nodeName": "mask", "type": "Any"}, {"lineNumber": 83, "col_offset": 28, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "mask", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "size", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "any", "type": "Any"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "get_lengths_from_binary_sequence_mask", "type": "Callable[[Any], Any]"}, {"lineNumber": 91, "col_offset": 65, "nodeName": "mask", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "float", "type": "Any"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "size", "type": "Any"}, {"lineNumber": 96, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 96, "col_offset": 23, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "sequence_prediction", "type": "Any"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "sequence_gold_label", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "length", "type": "Any"}, {"lineNumber": 100, "col_offset": 12, "nodeName": "prediction_spans", "type": "Any"}, {"lineNumber": 101, "col_offset": 12, "nodeName": "gold_spans", "type": "Any"}, {"lineNumber": 103, "col_offset": 16, "nodeName": "span", "type": "Any"}, {"lineNumber": 103, "col_offset": 24, "nodeName": "prediction_spans", "type": "Any"}, {"lineNumber": 110, "col_offset": 16, "nodeName": "span", "type": "Any"}, {"lineNumber": 110, "col_offset": 24, "nodeName": "gold_spans", "type": "Any"}, {"lineNumber": 132, "col_offset": 16, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 136, "col_offset": 12, "nodeName": "index", "type": "int"}, {"lineNumber": 136, "col_offset": 19, "nodeName": "integer_tag", "type": "int"}, {"lineNumber": 136, "col_offset": 34, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 136, "col_offset": 44, "nodeName": "tag_sequence", "type": "List[int]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "string_tag", "type": "Any"}, {"lineNumber": 139, "col_offset": 12, "nodeName": "bio_tag", "type": "Any"}, {"lineNumber": 140, "col_offset": 12, "nodeName": "conll_tag", "type": "Any"}, {"lineNumber": 178, "col_offset": 32, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 190, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "update", "type": "Callable[..., None]"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "precision_key", "type": "str"}, {"lineNumber": 200, "col_offset": 12, "nodeName": "recall_key", "type": "str"}, {"lineNumber": 201, "col_offset": 12, "nodeName": "f1_key", "type": "str"}, {"lineNumber": 202, "col_offset": 41, "nodeName": "precision", "type": "Any"}, {"lineNumber": 203, "col_offset": 38, "nodeName": "recall", "type": "Any"}, {"lineNumber": 204, "col_offset": 34, "nodeName": "f1_measure", "type": "Any"}, {"lineNumber": 207, "col_offset": 40, "nodeName": "_compute_metrics", "type": "Any"}, {"lineNumber": 210, "col_offset": 8, "nodeName": "all_metrics", "type": "Dict[str, Any]"}, {"lineNumber": 211, "col_offset": 8, "nodeName": "all_metrics", "type": "Dict[str, Any]"}, {"lineNumber": 212, "col_offset": 8, "nodeName": "all_metrics", "type": "Dict[str, Any]"}, {"lineNumber": 218, "col_offset": 41, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 218, "col_offset": 63, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 218, "col_offset": 85, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 222, "col_offset": 15, "nodeName": "precision", "type": "float"}, {"lineNumber": 222, "col_offset": 26, "nodeName": "recall", "type": "float"}, {"lineNumber": 222, "col_offset": 34, "nodeName": "f1_measure", "type": "float"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 225, "col_offset": 31, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 225, "col_offset": 43, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 226, "col_offset": 32, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 226, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 227, "col_offset": 32, "nodeName": "defaultdict", "type": "Type[collections.defaultdict[Any, Any]]"}, {"lineNumber": 227, "col_offset": 44, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 28, "col_offset": 33, "nodeName": "List", "type": "Any"}, {"lineNumber": 51, "col_offset": 33, "nodeName": "vocabulary", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 62, "col_offset": 23, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "ones", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 86, "col_offset": 22, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 88, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 95, "col_offset": 21, "nodeName": "gold_labels", "type": "Any"}, {"lineNumber": 97, "col_offset": 34, "nodeName": "argmax_predictions", "type": "Any"}, {"lineNumber": 98, "col_offset": 34, "nodeName": "gold_labels", "type": "Any"}, {"lineNumber": 99, "col_offset": 21, "nodeName": "sequence_lengths", "type": "Any"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "_extract_spans", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "_extract_spans", "type": "Any"}, {"lineNumber": 113, "col_offset": 43, "nodeName": "List", "type": "Any"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "_label_vocabulary", "type": "Any"}, {"lineNumber": 139, "col_offset": 22, "nodeName": "string_tag", "type": "Any"}, {"lineNumber": 140, "col_offset": 24, "nodeName": "string_tag", "type": "Any"}, {"lineNumber": 143, "col_offset": 19, "nodeName": "active_conll_tag", "type": "None"}, {"lineNumber": 145, "col_offset": 16, "nodeName": "active_conll_tag", "type": "None"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 113, "col_offset": 61, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "all_tags", "type": "Set[Any]"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "keys", "type": "Any"}, {"lineNumber": 192, "col_offset": 8, "nodeName": "all_tags", "type": "Set[Any]"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "keys", "type": "Any"}, {"lineNumber": 193, "col_offset": 8, "nodeName": "all_tags", "type": "Set[Any]"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "keys", "type": "Any"}, {"lineNumber": 196, "col_offset": 44, "nodeName": "_compute_metrics", "type": "Any"}, {"lineNumber": 199, "col_offset": 48, "nodeName": "tag", "type": "Any"}, {"lineNumber": 200, "col_offset": 42, "nodeName": "tag", "type": "Any"}, {"lineNumber": 201, "col_offset": 42, "nodeName": "tag", "type": "Any"}, {"lineNumber": 202, "col_offset": 12, "nodeName": "all_metrics", "type": "Dict[str, Any]"}, {"lineNumber": 203, "col_offset": 12, "nodeName": "all_metrics", "type": "Dict[str, Any]"}, {"lineNumber": 204, "col_offset": 12, "nodeName": "all_metrics", "type": "Dict[str, Any]"}, {"lineNumber": 207, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 207, "col_offset": 62, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 208, "col_offset": 62, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 209, "col_offset": 62, "nodeName": "sum", "type": "Callable"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "reset", "type": "Any"}, {"lineNumber": 219, "col_offset": 20, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 219, "col_offset": 26, "nodeName": "true_positives", "type": "int"}, {"lineNumber": 219, "col_offset": 44, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 220, "col_offset": 17, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 220, "col_offset": 23, "nodeName": "true_positives", "type": "int"}, {"lineNumber": 220, "col_offset": 41, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 28, "col_offset": 38, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "size", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "data", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "data", "type": "Any"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "gold_labels", "type": "Any"}, {"lineNumber": 87, "col_offset": 27, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 88, "col_offset": 37, "nodeName": "format", "type": "Callable[..., str]"}, {"lineNumber": 89, "col_offset": 79, "nodeName": "num_classes", "type": "Any"}, {"lineNumber": 99, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 100, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 51, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 101, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 101, "col_offset": 45, "nodeName": "tolist", "type": "Any"}, {"lineNumber": 104, "col_offset": 19, "nodeName": "span", "type": "Any"}, {"lineNumber": 104, "col_offset": 27, "nodeName": "gold_spans", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 113, "col_offset": 48, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 138, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 48, "nodeName": "integer_tag", "type": "int"}, {"lineNumber": 141, "col_offset": 15, "nodeName": "bio_tag", "type": "Any"}, {"lineNumber": 141, "col_offset": 33, "nodeName": "conll_tag", "type": "Any"}, {"lineNumber": 141, "col_offset": 46, "nodeName": "_ignore_classes", "type": "Any"}, {"lineNumber": 149, "col_offset": 17, "nodeName": "bio_tag", "type": "Any"}, {"lineNumber": 152, "col_offset": 19, "nodeName": "active_conll_tag", "type": "None"}, {"lineNumber": 154, "col_offset": 16, "nodeName": "active_conll_tag", "type": "Any"}, {"lineNumber": 154, "col_offset": 35, "nodeName": "conll_tag", "type": "Any"}, {"lineNumber": 155, "col_offset": 16, "nodeName": "span_start", "type": "int"}, {"lineNumber": 155, "col_offset": 29, "nodeName": "index", "type": "int"}, {"lineNumber": 156, "col_offset": 16, "nodeName": "span_end", "type": "int"}, {"lineNumber": 156, "col_offset": 27, "nodeName": "index", "type": "int"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "spans", "type": "Set[Tuple[Tuple[int, int], Optional[Any]]]"}, {"lineNumber": 175, "col_offset": 47, "nodeName": "active_conll_tag", "type": "Optional[Any]"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 196, "col_offset": 44, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 66, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 197, "col_offset": 66, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 198, "col_offset": 66, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 202, "col_offset": 24, "nodeName": "precision_key", "type": "str"}, {"lineNumber": 203, "col_offset": 24, "nodeName": "recall_key", "type": "str"}, {"lineNumber": 204, "col_offset": 24, "nodeName": "f1_key", "type": "str"}, {"lineNumber": 207, "col_offset": 66, "nodeName": "values", "type": "Any"}, {"lineNumber": 208, "col_offset": 66, "nodeName": "values", "type": "Any"}, {"lineNumber": 209, "col_offset": 66, "nodeName": "values", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 221, "col_offset": 28, "nodeName": "precision", "type": "float"}, {"lineNumber": 221, "col_offset": 40, "nodeName": "recall", "type": "float"}, {"lineNumber": 62, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "gold_labels", "type": "Any"}, {"lineNumber": 80, "col_offset": 26, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 82, "col_offset": 26, "nodeName": "gold_labels", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "mask", "type": "Any"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "max", "type": "Any"}, {"lineNumber": 97, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 98, "col_offset": 46, "nodeName": "i", "type": "int"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "remove", "type": "Any"}, {"lineNumber": 106, "col_offset": 38, "nodeName": "span", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 111, "col_offset": 16, "nodeName": "self", "type": "Any"}, {"lineNumber": 141, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 16, "nodeName": "span_end", "type": "int"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "active_conll_tag", "type": "Optional[Any]"}, {"lineNumber": 170, "col_offset": 16, "nodeName": "active_conll_tag", "type": "Any"}, {"lineNumber": 170, "col_offset": 35, "nodeName": "conll_tag", "type": "Any"}, {"lineNumber": 171, "col_offset": 16, "nodeName": "span_start", "type": "int"}, {"lineNumber": 171, "col_offset": 29, "nodeName": "index", "type": "int"}, {"lineNumber": 172, "col_offset": 16, "nodeName": "span_end", "type": "int"}, {"lineNumber": 172, "col_offset": 27, "nodeName": "index", "type": "int"}, {"lineNumber": 175, "col_offset": 24, "nodeName": "span_start", "type": "int"}, {"lineNumber": 175, "col_offset": 36, "nodeName": "span_end", "type": "int"}, {"lineNumber": 113, "col_offset": 84, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 191, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 192, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 193, "col_offset": 24, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 196, "col_offset": 87, "nodeName": "tag", "type": "Any"}, {"lineNumber": 197, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 197, "col_offset": 88, "nodeName": "tag", "type": "Any"}, {"lineNumber": 198, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 198, "col_offset": 88, "nodeName": "tag", "type": "Any"}, {"lineNumber": 207, "col_offset": 66, "nodeName": "_true_positives", "type": "Any"}, {"lineNumber": 208, "col_offset": 66, "nodeName": "_false_positives", "type": "Any"}, {"lineNumber": 209, "col_offset": 66, "nodeName": "_false_negatives", "type": "Any"}, {"lineNumber": 219, "col_offset": 50, "nodeName": "true_positives", "type": "int"}, {"lineNumber": 219, "col_offset": 67, "nodeName": "false_positives", "type": "int"}, {"lineNumber": 220, "col_offset": 47, "nodeName": "true_positives", "type": "int"}, {"lineNumber": 220, "col_offset": 64, "nodeName": "false_negatives", "type": "int"}, {"lineNumber": 221, "col_offset": 51, "nodeName": "precision", "type": "float"}, {"lineNumber": 221, "col_offset": 63, "nodeName": "recall", "type": "float"}, {"lineNumber": 92, "col_offset": 29, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 100, "col_offset": 51, "nodeName": "sequence_prediction", "type": "Any"}, {"lineNumber": 101, "col_offset": 45, "nodeName": "sequence_gold_label", "type": "Any"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 20, "nodeName": "gold_spans", "type": "Any"}, {"lineNumber": 108, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 111, "col_offset": 38, "nodeName": "span", "type": "Any"}, {"lineNumber": 157, "col_offset": 17, "nodeName": "bio_tag", "type": "Any"}, {"lineNumber": 157, "col_offset": 36, "nodeName": "conll_tag", "type": "Any"}, {"lineNumber": 157, "col_offset": 49, "nodeName": "active_conll_tag", "type": "Optional[Any]"}, {"lineNumber": 113, "col_offset": 67, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 207, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 208, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 209, "col_offset": 66, "nodeName": "self", "type": "Any"}, {"lineNumber": 100, "col_offset": 72, "nodeName": "length", "type": "Any"}, {"lineNumber": 101, "col_offset": 66, "nodeName": "length", "type": "Any"}, {"lineNumber": 105, "col_offset": 41, "nodeName": "span", "type": "Any"}, {"lineNumber": 108, "col_offset": 42, "nodeName": "span", "type": "Any"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "add", "type": "Callable"}, {"lineNumber": 169, "col_offset": 20, "nodeName": "spans", "type": "Set[Tuple[Tuple[int, int], Optional[Any]]]"}, {"lineNumber": 169, "col_offset": 55, "nodeName": "active_conll_tag", "type": "Optional[Any]"}, {"lineNumber": 113, "col_offset": 73, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 113, "col_offset": 78, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 169, "col_offset": 32, "nodeName": "span_start", "type": "int"}, {"lineNumber": 169, "col_offset": 44, "nodeName": "span_end", "type": "int"}]