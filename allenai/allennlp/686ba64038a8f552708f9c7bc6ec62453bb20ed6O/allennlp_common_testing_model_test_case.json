[{"lineNumber": 15, "col_offset": 20, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 22, "col_offset": 26, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 28, "col_offset": 21, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "token_indexers", "type": "Any"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "_token_indexers", "type": "Any"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "save_dir", "type": "str"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "archive_file", "type": "str"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "state_keys", "type": "Any"}, {"lineNumber": 41, "col_offset": 8, "nodeName": "loaded_state_keys", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "state_keys", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "model_dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "model_batch_arrays", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "model_batch", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "loaded_dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "loaded_batch_arrays", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "loaded_batch", "type": "Dict[str, Any]"}, {"lineNumber": 64, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "model_predictions", "type": "Dict[str, Any]"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "loaded_model_predictions", "type": "Dict[str, Any]"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "loaded_model_loss", "type": "Any"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "single_predictions", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "batch_arrays", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "batch_variables", "type": "Dict[str, Any]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "batch_predictions", "type": "Any"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "from_file", "type": "Callable[[str], allennlp.common.params.Params]"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "read", "type": "Callable[[str], allennlp.data.dataset.Dataset]"}, {"lineNumber": 26, "col_offset": 30, "nodeName": "dataset_file", "type": "Any"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "from_dataset", "type": "Callable[..., allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 27, "col_offset": 40, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "index_instances", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 31, "col_offset": 30, "nodeName": "reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "from_params", "type": "Callable[[Any, allennlp.data.vocabulary.Vocabulary, allennlp.common.params.Params], allennlp.models.model.Model]"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 35, "col_offset": 63, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "TEST_DIR", "type": "str"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 37, "col_offset": 36, "nodeName": "save_dir", "type": "str"}, {"lineNumber": 38, "col_offset": 16, "nodeName": "train_model_from_file", "type": "Callable[[str, str], allennlp.models.model.Model]"}, {"lineNumber": 38, "col_offset": 38, "nodeName": "param_file", "type": "str"}, {"lineNumber": 38, "col_offset": 50, "nodeName": "save_dir", "type": "str"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "keys", "type": "Any"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "keys", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "state_keys", "type": "Any"}, {"lineNumber": 42, "col_offset": 29, "nodeName": "loaded_state_keys", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "from_file", "type": "Callable[[str], allennlp.common.params.Params]"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.data.iterators.data_iterator.DataIterator]"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "read", "type": "Callable[[str], allennlp.data.dataset.Dataset]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "index_instances", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 56, "col_offset": 29, "nodeName": "next", "type": "Callable"}, {"lineNumber": 57, "col_offset": 22, "nodeName": "arrays_to_variables", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 57, "col_offset": 42, "nodeName": "model_batch_arrays", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "read", "type": "Callable[[str], allennlp.data.dataset.Dataset]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "index_instances", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 60, "col_offset": 30, "nodeName": "next", "type": "Callable"}, {"lineNumber": 61, "col_offset": 23, "nodeName": "arrays_to_variables", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 61, "col_offset": 43, "nodeName": "loaded_batch_arrays", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 68, "col_offset": 12, "nodeName": "field", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "forward", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "forward", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 91, "col_offset": 28, "nodeName": "loaded_model_predictions", "type": "Dict[str, Any]"}, {"lineNumber": 92, "col_offset": 15, "nodeName": "loaded_model_loss", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 105, "col_offset": 15, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 105, "col_offset": 22, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 110, "col_offset": 15, "nodeName": "instance", "type": "Any"}, {"lineNumber": 110, "col_offset": 27, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "instances", "type": "Any"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "arrays", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 113, "col_offset": 12, "nodeName": "variables", "type": "Dict[str, Any]"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "result", "type": "Any"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "as_array_dict", "type": "Any"}, {"lineNumber": 117, "col_offset": 26, "nodeName": "arrays_to_variables", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 117, "col_offset": 46, "nodeName": "batch_arrays", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "forward", "type": "Any"}, {"lineNumber": 119, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 119, "col_offset": 15, "nodeName": "instance_predictions", "type": "Any"}, {"lineNumber": 119, "col_offset": 39, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 119, "col_offset": 49, "nodeName": "single_predictions", "type": "List[Any]"}, {"lineNumber": 23, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 23, "col_offset": 34, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 25, "col_offset": 17, "nodeName": "DatasetReader", "type": "Type[allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 25, "col_offset": 43, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 26, "col_offset": 18, "nodeName": "reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 27, "col_offset": 16, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 33, "col_offset": 21, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 33, "col_offset": 39, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 33, "col_offset": 51, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 36, "col_offset": 32, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 39, "col_offset": 23, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 39, "col_offset": 36, "nodeName": "archive_file", "type": "str"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 48, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 48, "col_offset": 34, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 49, "col_offset": 17, "nodeName": "DatasetReader", "type": "Type[allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 49, "col_offset": 43, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "DataIterator", "type": "Type[allennlp.data.iterators.data_iterator.DataIterator]"}, {"lineNumber": 50, "col_offset": 44, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 54, "col_offset": 24, "nodeName": "reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "model_dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 55, "col_offset": 38, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 56, "col_offset": 34, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "model_dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 58, "col_offset": 37, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "loaded_dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 60, "col_offset": 35, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 60, "col_offset": 44, "nodeName": "loaded_dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "model_batch", "type": "Dict[str, Any]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "key", "type": "str"}, {"lineNumber": 68, "col_offset": 20, "nodeName": "model_batch", "type": "Dict[str, Any]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 69, "col_offset": 26, "nodeName": "field", "type": "Any"}, {"lineNumber": 69, "col_offset": 33, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 70, "col_offset": 20, "nodeName": "subfield", "type": "Any"}, {"lineNumber": 70, "col_offset": 32, "nodeName": "field", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 84, "col_offset": 25, "nodeName": "model_batch", "type": "Dict[str, Any]"}, {"lineNumber": 84, "col_offset": 59, "nodeName": "parameters", "type": "Mapping[str, inspect.Parameter]"}, {"lineNumber": 85, "col_offset": 16, "nodeName": "model_batch", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "loaded_batch", "type": "Dict[str, Any]"}, {"lineNumber": 87, "col_offset": 28, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 87, "col_offset": 44, "nodeName": "model_batch", "type": "Dict[str, Any]"}, {"lineNumber": 88, "col_offset": 35, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 88, "col_offset": 58, "nodeName": "loaded_batch", "type": "Dict[str, Any]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "loaded_model_loss", "type": "Any"}, {"lineNumber": 96, "col_offset": 19, "nodeName": "model_predictions", "type": "Dict[str, Any]"}, {"lineNumber": 97, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 97, "col_offset": 50, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 111, "col_offset": 22, "nodeName": "Dataset", "type": "Type[allennlp.data.dataset.Dataset]"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "as_array_dict", "type": "Callable[..., Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]]"}, {"lineNumber": 113, "col_offset": 24, "nodeName": "arrays_to_variables", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 113, "col_offset": 44, "nodeName": "arrays", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "forward", "type": "Any"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 115, "col_offset": 38, "nodeName": "result", "type": "Any"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 116, "col_offset": 50, "nodeName": "get_padding_lengths", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "model", "type": "Any"}, {"lineNumber": 118, "col_offset": 49, "nodeName": "batch_variables", "type": "Dict[str, Any]"}, {"lineNumber": 120, "col_offset": 16, "nodeName": "key", "type": "Any"}, {"lineNumber": 120, "col_offset": 21, "nodeName": "single_predicted", "type": "Any"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "items", "type": "Any"}, {"lineNumber": 121, "col_offset": 16, "nodeName": "tolerance", "type": "float"}, {"lineNumber": 126, "col_offset": 16, "nodeName": "single_predicted", "type": "Any"}, {"lineNumber": 127, "col_offset": 16, "nodeName": "batch_predicted", "type": "Any"}, {"lineNumber": 36, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 37, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 47, "col_offset": 36, "nodeName": "key", "type": "Any"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "key", "type": "str"}, {"lineNumber": 76, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 97, "col_offset": 26, "nodeName": "model_predictions", "type": "Dict[str, Any]"}, {"lineNumber": 97, "col_offset": 50, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 98, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 110, "col_offset": 37, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 111, "col_offset": 31, "nodeName": "instance", "type": "Any"}, {"lineNumber": 112, "col_offset": 21, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 112, "col_offset": 43, "nodeName": "get_padding_lengths", "type": "Callable[[], Dict[str, Dict[str, int]]]"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "model", "type": "Any"}, {"lineNumber": 114, "col_offset": 42, "nodeName": "variables", "type": "Dict[str, Any]"}, {"lineNumber": 115, "col_offset": 12, "nodeName": "single_predictions", "type": "List[Any]"}, {"lineNumber": 116, "col_offset": 23, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 116, "col_offset": 50, "nodeName": "dataset", "type": "Any"}, {"lineNumber": 118, "col_offset": 28, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 120, "col_offset": 41, "nodeName": "instance_predictions", "type": "Any"}, {"lineNumber": 122, "col_offset": 19, "nodeName": "key", "type": "Any"}, {"lineNumber": 126, "col_offset": 35, "nodeName": "single_predicted", "type": "Any"}, {"lineNumber": 128, "col_offset": 19, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "single_predicted", "type": "Any"}, {"lineNumber": 128, "col_offset": 48, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 145, "col_offset": 64, "nodeName": "key", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 41, "col_offset": 28, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 66, "col_offset": 23, "nodeName": "model_batch", "type": "Dict[str, Any]"}, {"lineNumber": 66, "col_offset": 43, "nodeName": "loaded_batch", "type": "Dict[str, Any]"}, {"lineNumber": 71, "col_offset": 20, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 79, "col_offset": 40, "nodeName": "key", "type": "str"}, {"lineNumber": 84, "col_offset": 59, "nodeName": "signature", "type": "Callable[..., inspect.Signature]"}, {"lineNumber": 84, "col_offset": 69, "nodeName": "forward", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 97, "col_offset": 44, "nodeName": "key", "type": "str"}, {"lineNumber": 97, "col_offset": 50, "nodeName": "torch", "type": "Any"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "key", "type": "str"}, {"lineNumber": 103, "col_offset": 23, "nodeName": "model_predictions", "type": "Dict[str, Any]"}, {"lineNumber": 103, "col_offset": 49, "nodeName": "loaded_model_predictions", "type": "Dict[str, Any]"}, {"lineNumber": 112, "col_offset": 43, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 114, "col_offset": 21, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 116, "col_offset": 50, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 127, "col_offset": 34, "nodeName": "batch_predictions", "type": "Any"}, {"lineNumber": 127, "col_offset": 57, "nodeName": "i", "type": "int"}, {"lineNumber": 128, "col_offset": 48, "nodeName": "autograd", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "num_tokens", "type": "Any"}, {"lineNumber": 140, "col_offset": 20, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "single_predicted", "type": "Any"}, {"lineNumber": 145, "col_offset": 47, "nodeName": "batch_predicted", "type": "Any"}, {"lineNumber": 66, "col_offset": 35, "nodeName": "key", "type": "str"}, {"lineNumber": 66, "col_offset": 56, "nodeName": "key", "type": "str"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 84, "col_offset": 69, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 103, "col_offset": 41, "nodeName": "key", "type": "str"}, {"lineNumber": 103, "col_offset": 74, "nodeName": "key", "type": "str"}, {"lineNumber": 127, "col_offset": 52, "nodeName": "key", "type": "Any"}, {"lineNumber": 128, "col_offset": 48, "nodeName": "torch", "type": "Any"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "size", "type": "Any"}, {"lineNumber": 129, "col_offset": 50, "nodeName": "size", "type": "Any"}, {"lineNumber": 133, "col_offset": 37, "nodeName": "size", "type": "Any"}, {"lineNumber": 135, "col_offset": 28, "nodeName": "batch_predicted", "type": "Any"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 141, "col_offset": 36, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 142, "col_offset": 41, "nodeName": "tolerance", "type": "float"}, {"lineNumber": 143, "col_offset": 44, "nodeName": "key", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 45, "col_offset": 47, "nodeName": "key", "type": "Any"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 46, "col_offset": 54, "nodeName": "key", "type": "Any"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 74, "col_offset": 56, "nodeName": "subfield", "type": "Any"}, {"lineNumber": 129, "col_offset": 23, "nodeName": "single_predicted", "type": "Any"}, {"lineNumber": 129, "col_offset": 50, "nodeName": "batch_predicted", "type": "Any"}, {"lineNumber": 133, "col_offset": 37, "nodeName": "single_predicted", "type": "Any"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "dim", "type": "Any"}, {"lineNumber": 135, "col_offset": 46, "nodeName": "batch_predicted", "type": "Any"}, {"lineNumber": 137, "col_offset": 28, "nodeName": "batch_predicted", "type": "Any"}, {"lineNumber": 139, "col_offset": 34, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 141, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 45, "col_offset": 28, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 46, "col_offset": 28, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 74, "col_offset": 44, "nodeName": "key", "type": "str"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "model_batch", "type": "Dict[str, Any]"}, {"lineNumber": 77, "col_offset": 32, "nodeName": "loaded_batch", "type": "Dict[str, Any]"}, {"lineNumber": 98, "col_offset": 32, "nodeName": "model_predictions", "type": "Dict[str, Any]"}, {"lineNumber": 99, "col_offset": 32, "nodeName": "loaded_model_predictions", "type": "Dict[str, Any]"}, {"lineNumber": 134, "col_offset": 27, "nodeName": "batch_predicted", "type": "Any"}, {"lineNumber": 135, "col_offset": 63, "nodeName": "num_tokens", "type": "Any"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "dim", "type": "Any"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "batch_predicted", "type": "Any"}, {"lineNumber": 140, "col_offset": 36, "nodeName": "single_predicted", "type": "Any"}, {"lineNumber": 141, "col_offset": 36, "nodeName": "batch_predicted", "type": "Any"}, {"lineNumber": 76, "col_offset": 44, "nodeName": "key", "type": "str"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "key", "type": "str"}, {"lineNumber": 98, "col_offset": 50, "nodeName": "key", "type": "str"}, {"lineNumber": 99, "col_offset": 57, "nodeName": "key", "type": "str"}, {"lineNumber": 136, "col_offset": 29, "nodeName": "batch_predicted", "type": "Any"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "model_batch", "type": "Dict[str, Any]"}, {"lineNumber": 71, "col_offset": 53, "nodeName": "subfield", "type": "Any"}, {"lineNumber": 72, "col_offset": 36, "nodeName": "loaded_batch", "type": "Dict[str, Any]"}, {"lineNumber": 72, "col_offset": 54, "nodeName": "subfield", "type": "Any"}, {"lineNumber": 137, "col_offset": 63, "nodeName": "num_tokens", "type": "Any"}, {"lineNumber": 71, "col_offset": 48, "nodeName": "key", "type": "str"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "key", "type": "str"}]