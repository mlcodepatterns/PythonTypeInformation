[{"lineNumber": 11, "col_offset": 20, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 70, "col_offset": 26, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "optimizer_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "parameters", "type": "List[List[Any]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "parameters", "type": "List[List[Any]]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 90, "col_offset": 8, "nodeName": "optimizer_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "parameters", "type": "List[List[Any]]"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 14, "col_offset": 25, "nodeName": "read", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "from_instances", "type": "Callable[..., allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 17, "col_offset": 42, "nodeName": "instances", "type": "Any"}, {"lineNumber": 18, "col_offset": 28, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 32, "col_offset": 23, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 59, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "read", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "TestDenseSparseAdam"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "from_instances", "type": "Callable[..., allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 76, "col_offset": 47, "nodeName": "instances", "type": "Any"}, {"lineNumber": 77, "col_offset": 28, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "self", "type": "TestDenseSparseAdam"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "index_with", "type": "Any"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "train", "type": "Any"}, {"lineNumber": 17, "col_offset": 16, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 17, "col_offset": 42, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "SimpleTagger", "type": "Any"}, {"lineNumber": 26, "col_offset": 52, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 26, "col_offset": 66, "nodeName": "model_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 30, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 30, "col_offset": 74, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 31, "col_offset": 20, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 31, "col_offset": 59, "nodeName": "parameters", "type": "List[List[Any]]"}, {"lineNumber": 31, "col_offset": 78, "nodeName": "optimizer_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 33, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 33, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 50, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 50, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 50, "col_offset": 74, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 51, "col_offset": 20, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 51, "col_offset": 59, "nodeName": "parameters", "type": "List[List[Any]]"}, {"lineNumber": 51, "col_offset": 78, "nodeName": "optimizer_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 65, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 76, "col_offset": 21, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 76, "col_offset": 47, "nodeName": "self", "type": "TestDenseSparseAdam"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "SimpleTagger", "type": "Any"}, {"lineNumber": 87, "col_offset": 52, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 87, "col_offset": 71, "nodeName": "model_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 91, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 91, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 91, "col_offset": 74, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 92, "col_offset": 20, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 92, "col_offset": 59, "nodeName": "parameters", "type": "List[List[Any]]"}, {"lineNumber": 92, "col_offset": 78, "nodeName": "optimizer_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "instances", "type": "Any"}, {"lineNumber": 93, "col_offset": 34, "nodeName": "self", "type": "TestDenseSparseAdam"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 14, "col_offset": 25, "nodeName": "SequenceTaggingDatasetReader", "type": "Any"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 26, "col_offset": 66, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 30, "col_offset": 33, "nodeName": "n", "type": "Any"}, {"lineNumber": 30, "col_offset": 36, "nodeName": "p", "type": "Any"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 30, "col_offset": 74, "nodeName": "p", "type": "Any"}, {"lineNumber": 34, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 50, "col_offset": 33, "nodeName": "n", "type": "Any"}, {"lineNumber": 50, "col_offset": 36, "nodeName": "p", "type": "Any"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 50, "col_offset": 74, "nodeName": "p", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "SequenceTaggingDatasetReader", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 87, "col_offset": 52, "nodeName": "self", "type": "TestDenseSparseAdam"}, {"lineNumber": 87, "col_offset": 71, "nodeName": "self", "type": "TestDenseSparseAdam"}, {"lineNumber": 91, "col_offset": 33, "nodeName": "n", "type": "Any"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "p", "type": "Any"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 91, "col_offset": 74, "nodeName": "p", "type": "Any"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestDenseSparseAdam"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "GradientDescentTrainer", "type": "Any"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "model", "type": "Any"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "optimizer", "type": "Any"}, {"lineNumber": 15, "col_offset": 12, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "model", "type": "Any"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "model", "type": "Any"}, {"lineNumber": 60, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 63, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "TestDenseSparseAdam"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "model", "type": "Any"}, {"lineNumber": 94, "col_offset": 31, "nodeName": "self", "type": "TestDenseSparseAdam"}, {"lineNumber": 94, "col_offset": 54, "nodeName": "DataLoader", "type": "Type[allennlp.data.dataloader.DataLoader]"}, {"lineNumber": 94, "col_offset": 65, "nodeName": "instances", "type": "Any"}, {"lineNumber": 30, "col_offset": 41, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 50, "col_offset": 41, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "k", "type": "int"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "self", "type": "TestDenseSparseAdam"}, {"lineNumber": 94, "col_offset": 65, "nodeName": "self", "type": "TestDenseSparseAdam"}]