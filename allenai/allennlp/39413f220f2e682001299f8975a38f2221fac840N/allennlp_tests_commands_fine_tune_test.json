[{"lineNumber": 18, "col_offset": 19, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "config_file", "type": "str"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "subparsers", "type": "argparse._SubParsersAction"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "original_weight", "type": "Any"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "weight", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "fine_tuned_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "extended_weight", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "weight", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "embeddings_filename", "type": "str"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "unavailable_embeddings_filename", "type": "str"}, {"lineNumber": 111, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 114, "col_offset": 8, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 152, "col_offset": 8, "nodeName": "original_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "name_parameters_original", "type": "Dict[Any, Any]"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "regex_list", "type": "Union[List[nothing], List[str]]"}, {"lineNumber": 157, "col_offset": 26, "nodeName": "regex_lists", "type": "List[Union[List[nothing], List[str]]]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 21, "col_offset": 29, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 23, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "add_subparsers", "type": "Callable[..., argparse._SubParsersAction]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "add_subparser", "type": "Callable[[str, argparse._SubParsersAction], argparse.ArgumentParser]"}, {"lineNumber": 27, "col_offset": 46, "nodeName": "subparsers", "type": "argparse._SubParsersAction"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "fine_tune_model_from_file_paths", "type": "Callable[..., allennlp.models.model.Model]"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "config_file", "type": "str"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 38, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "fine_tune_model", "type": "Callable[..., allennlp.models.model.Model]"}, {"lineNumber": 43, "col_offset": 24, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 43, "col_offset": 31, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 43, "col_offset": 39, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "config_file", "type": "str"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "token_embedder_tokens", "type": "Any"}, {"lineNumber": 54, "col_offset": 27, "nodeName": "fine_tune_model", "type": "Callable[..., allennlp.models.model.Model]"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 54, "col_offset": 58, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 54, "col_offset": 66, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "token_embedder_tokens", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "all", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "config_file", "type": "str"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 64, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 67, "col_offset": 30, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "original_weight", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "weight", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "_pretrained_file", "type": "None"}, {"lineNumber": 76, "col_offset": 88, "nodeName": "saved_pretrained_file", "type": "None"}, {"lineNumber": 77, "col_offset": 12, "nodeName": "embedding_sources_mapping", "type": "Dict[str, str]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "extended_weight", "type": "Any"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "weight", "type": "Any"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "use_pretrained", "type": "bool"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "check_embedding_extension", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 92, "col_offset": 34, "nodeName": "embeddings_filename", "type": "str"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "check_embedding_extension", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 96, "col_offset": 34, "nodeName": "embeddings_filename", "type": "str"}, {"lineNumber": 96, "col_offset": 55, "nodeName": "unavailable_embeddings_filename", "type": "str"}, {"lineNumber": 100, "col_offset": 8, "nodeName": "check_embedding_extension", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 100, "col_offset": 40, "nodeName": "embeddings_filename", "type": "str"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "check_embedding_extension", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 108, "col_offset": 40, "nodeName": "unavailable_embeddings_filename", "type": "str"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "config_file", "type": "str"}, {"lineNumber": 113, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 113, "col_offset": 36, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "fine_tune_model", "type": "Callable[..., allennlp.models.model.Model]"}, {"lineNumber": 116, "col_offset": 24, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "config_file", "type": "str"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 127, "col_offset": 38, "nodeName": "raw_args", "type": "List[str]"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "func", "type": "Any"}, {"lineNumber": 129, "col_offset": 28, "nodeName": "fine_tune_model_from_args", "type": "Callable[[argparse.Namespace], None]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "model_archive", "type": "Any"}, {"lineNumber": 130, "col_offset": 37, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "config_file", "type": "Any"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "config_file", "type": "str"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "serialization_dir", "type": "Any"}, {"lineNumber": 132, "col_offset": 41, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "fine_tune_model_from_args", "type": "Callable[[argparse.Namespace], None]"}, {"lineNumber": 133, "col_offset": 34, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 137, "col_offset": 46, "nodeName": "context", "type": "unittest.case._AssertRaisesContext[SystemExit]"}, {"lineNumber": 142, "col_offset": 46, "nodeName": "context", "type": "unittest.case._AssertRaisesContext[SystemExit]"}, {"lineNumber": 147, "col_offset": 46, "nodeName": "context", "type": "unittest.case._AssertRaisesContext[SystemExit]"}, {"lineNumber": 153, "col_offset": 35, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 158, "col_offset": 12, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 159, "col_offset": 43, "nodeName": "regex_list", "type": "Union[List[nothing], List[str]]"}, {"lineNumber": 174, "col_offset": 41, "nodeName": "_", "type": "Any"}, {"lineNumber": 175, "col_offset": 12, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 23, "col_offset": 37, "nodeName": "TEST_DIR", "type": "pathlib.Path"}, {"lineNumber": 25, "col_offset": 22, "nodeName": "argparse", "type": "module"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 31, "col_offset": 59, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 32, "col_offset": 52, "nodeName": "config_file", "type": "str"}, {"lineNumber": 33, "col_offset": 58, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 36, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 40, "col_offset": 16, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 43, "col_offset": 39, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 46, "col_offset": 34, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 50, "col_offset": 24, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 54, "col_offset": 66, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "torch", "type": "Any"}, {"lineNumber": 59, "col_offset": 25, "nodeName": "original_weight", "type": "Any"}, {"lineNumber": 62, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 68, "col_offset": 29, "nodeName": "_read_pretrained_embeddings_file", "type": "Callable[..., Any]"}, {"lineNumber": 68, "col_offset": 62, "nodeName": "embeddings_filename", "type": "str"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "token_embedder_tokens", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "token_embedder_tokens", "type": "Any"}, {"lineNumber": 77, "col_offset": 87, "nodeName": "user_pretrained_file", "type": "str"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 79, "col_offset": 31, "nodeName": "fine_tune_model", "type": "Callable[..., allennlp.models.model.Model]"}, {"lineNumber": 79, "col_offset": 47, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 80, "col_offset": 47, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "token_embedder_tokens", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "all", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 103, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "check_embedding_extension", "type": "Callable[[Any, Any, Any], Any]"}, {"lineNumber": 104, "col_offset": 38, "nodeName": "unavailable_embeddings_filename", "type": "str"}, {"lineNumber": 104, "col_offset": 71, "nodeName": "embeddings_filename", "type": "str"}, {"lineNumber": 111, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 111, "col_offset": 34, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 114, "col_offset": 24, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "shutil", "type": "module"}, {"lineNumber": 115, "col_offset": 22, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 116, "col_offset": 39, "nodeName": "duplicate", "type": "Callable"}, {"lineNumber": 117, "col_offset": 24, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 119, "col_offset": 21, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 123, "col_offset": 26, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 124, "col_offset": 26, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 125, "col_offset": 26, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 129, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 130, "col_offset": 37, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 131, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 131, "col_offset": 35, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 132, "col_offset": 15, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 132, "col_offset": 41, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 137, "col_offset": 31, "nodeName": "SystemExit", "type": "Type[SystemExit]"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "code", "type": "int"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "SystemExit", "type": "Type[SystemExit]"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "code", "type": "int"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 147, "col_offset": 31, "nodeName": "SystemExit", "type": "Type[SystemExit]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "code", "type": "int"}, {"lineNumber": 152, "col_offset": 25, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 152, "col_offset": 38, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 153, "col_offset": 40, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 158, "col_offset": 38, "nodeName": "config_file", "type": "str"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 161, "col_offset": 26, "nodeName": "fine_tune_model", "type": "Callable[..., allennlp.models.model.Model]"}, {"lineNumber": 167, "col_offset": 16, "nodeName": "name", "type": "Any"}, {"lineNumber": 167, "col_offset": 22, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 167, "col_offset": 35, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 174, "col_offset": 27, "nodeName": "Exception", "type": "Type[Exception]"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 175, "col_offset": 38, "nodeName": "config_file", "type": "str"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "rmtree", "type": "Callable[..., None]"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 178, "col_offset": 26, "nodeName": "fine_tune_model", "type": "Callable[..., allennlp.models.model.Model]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 22, "col_offset": 31, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 23, "col_offset": 37, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 26, "col_offset": 21, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "FineTune", "type": "Type[allennlp.commands.fine_tune.FineTune]"}, {"lineNumber": 31, "col_offset": 59, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 32, "col_offset": 52, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 33, "col_offset": 58, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 40, "col_offset": 29, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 50, "col_offset": 37, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 51, "col_offset": 26, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "fine_tuned_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 57, "col_offset": 21, "nodeName": "original_weight", "type": "Any"}, {"lineNumber": 58, "col_offset": 21, "nodeName": "extended_weight", "type": "Any"}, {"lineNumber": 59, "col_offset": 44, "nodeName": "extended_weight", "type": "Any"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 69, "col_offset": 62, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 73, "col_offset": 28, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 73, "col_offset": 41, "nodeName": "model_archive", "type": "str"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "shutil", "type": "module"}, {"lineNumber": 78, "col_offset": 26, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 79, "col_offset": 62, "nodeName": "duplicate", "type": "Callable"}, {"lineNumber": 80, "col_offset": 47, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 81, "col_offset": 73, "nodeName": "embedding_sources_mapping", "type": "Dict[str, str]"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 83, "col_offset": 51, "nodeName": "shape", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "torch", "type": "Any"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "original_weight", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "all", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "all", "type": "Any"}, {"lineNumber": 103, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 113, "col_offset": 40, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 114, "col_offset": 37, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 116, "col_offset": 39, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 127, "col_offset": 15, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 137, "col_offset": 13, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "exception", "type": "SystemExit"}, {"lineNumber": 142, "col_offset": 13, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "exception", "type": "SystemExit"}, {"lineNumber": 147, "col_offset": 13, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "exception", "type": "SystemExit"}, {"lineNumber": 152, "col_offset": 38, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 153, "col_offset": 40, "nodeName": "original_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 158, "col_offset": 21, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 158, "col_offset": 38, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 159, "col_offset": 12, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 160, "col_offset": 12, "nodeName": "shutil", "type": "module"}, {"lineNumber": 160, "col_offset": 26, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 161, "col_offset": 48, "nodeName": "original_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 162, "col_offset": 49, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 163, "col_offset": 60, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 167, "col_offset": 35, "nodeName": "tuned_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "any", "type": "Callable[[Any], bool]"}, {"lineNumber": 174, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 175, "col_offset": 21, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 175, "col_offset": 38, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 176, "col_offset": 12, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 177, "col_offset": 12, "nodeName": "shutil", "type": "module"}, {"lineNumber": 177, "col_offset": 26, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 178, "col_offset": 48, "nodeName": "original_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 179, "col_offset": 49, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 180, "col_offset": 60, "nodeName": "serialization_dir", "type": "str"}, {"lineNumber": 21, "col_offset": 33, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 22, "col_offset": 31, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 48, "col_offset": 40, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 64, "col_offset": 40, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 67, "col_offset": 34, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 73, "col_offset": 41, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "trained_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 79, "col_offset": 62, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "fine_tuned_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "shape", "type": "Any"}, {"lineNumber": 83, "col_offset": 51, "nodeName": "extended_weight", "type": "Any"}, {"lineNumber": 84, "col_offset": 48, "nodeName": "extended_weight", "type": "Any"}, {"lineNumber": 86, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 86, "col_offset": 59, "nodeName": "extra_token_vector", "type": "Any"}, {"lineNumber": 88, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 88, "col_offset": 59, "nodeName": "extra_token_vector", "type": "Any"}, {"lineNumber": 113, "col_offset": 40, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "TEST_DIR", "type": "pathlib.Path"}, {"lineNumber": 138, "col_offset": 12, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "context", "type": "unittest.case._AssertRaisesContext[SystemExit]"}, {"lineNumber": 143, "col_offset": 12, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 144, "col_offset": 19, "nodeName": "context", "type": "unittest.case._AssertRaisesContext[SystemExit]"}, {"lineNumber": 148, "col_offset": 12, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 149, "col_offset": 19, "nodeName": "context", "type": "unittest.case._AssertRaisesContext[SystemExit]"}, {"lineNumber": 163, "col_offset": 60, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 180, "col_offset": 60, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 21, "col_offset": 33, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 83, "col_offset": 19, "nodeName": "original_weight", "type": "Any"}, {"lineNumber": 86, "col_offset": 33, "nodeName": "extended_weight", "type": "Any"}, {"lineNumber": 88, "col_offset": 33, "nodeName": "extended_weight", "type": "Any"}, {"lineNumber": 119, "col_offset": 25, "nodeName": "self", "type": "TestFineTune"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "search", "type": "Callable"}, {"lineNumber": 168, "col_offset": 33, "nodeName": "regex", "type": "str"}, {"lineNumber": 168, "col_offset": 40, "nodeName": "name", "type": "Any"}, {"lineNumber": 168, "col_offset": 50, "nodeName": "regex", "type": "str"}, {"lineNumber": 168, "col_offset": 59, "nodeName": "regex_list", "type": "Union[List[nothing], List[str]]"}, {"lineNumber": 169, "col_offset": 31, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 171, "col_offset": 27, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 168, "col_offset": 23, "nodeName": "re", "type": "module"}, {"lineNumber": 172, "col_offset": 23, "nodeName": "name_parameters_original", "type": "Dict[Any, Any]"}, {"lineNumber": 172, "col_offset": 48, "nodeName": "name", "type": "Any"}]