[{"lineNumber": 12, "col_offset": 30, "nodeName": "World", "type": "Type[allennlp.semparse.worlds.world.World]"}, {"lineNumber": 43, "col_offset": 28, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 39, "col_offset": 42, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "actions", "type": "Dict[str, List[str]]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "world", "type": "FakeWorldWithAssertions"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "black_logical_forms", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "shortest_logical_form", "type": "str"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "ten_shortest_logical_forms", "type": "List[str]"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "shortest_logical_form", "type": "str"}, {"lineNumber": 105, "col_offset": 8, "nodeName": "length_three_logical_forms", "type": "List[str]"}, {"lineNumber": 16, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 20, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "symbol", "type": "str"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "FakeWorldWithAssertions", "type": "Type[FakeWorldWithAssertions]"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "ActionSpaceWalker", "type": "Type[allennlp.semparse.action_space_walker.ActionSpaceWalker]"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "world", "type": "FakeWorldWithAssertions"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "shortest_logical_form", "type": "str"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 70, "col_offset": 73, "nodeName": "log", "type": "unittest.case._AssertLogsContext"}, {"lineNumber": 71, "col_offset": 12, "nodeName": "empty_agenda_logical_forms", "type": "List[str]"}, {"lineNumber": 72, "col_offset": 12, "nodeName": "first_four_logical_forms", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "output", "type": "List[str]"}, {"lineNumber": 82, "col_offset": 73, "nodeName": "log", "type": "unittest.case._AssertLogsContext"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "assertEqual", "type": "Callable[..., None]"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "output", "type": "List[str]"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "get_all_logical_forms", "type": "Callable[..., List[str]]"}, {"lineNumber": 103, "col_offset": 32, "nodeName": "ten_shortest_logical_forms", "type": "List[str]"}, {"lineNumber": 104, "col_offset": 15, "nodeName": "shortest_logical_form", "type": "str"}, {"lineNumber": 105, "col_offset": 37, "nodeName": "ten_shortest_logical_forms", "type": "List[str]"}, {"lineNumber": 16, "col_offset": 20, "nodeName": "TRUTH_TYPE", "type": "Any"}, {"lineNumber": 47, "col_offset": 40, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 52, "col_offset": 19, "nodeName": "black_logical_forms", "type": "List[str]"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 61, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 61, "col_offset": 19, "nodeName": "black_triangle_touch_forms", "type": "List[str]"}, {"lineNumber": 61, "col_offset": 50, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "assertLogs", "type": "Callable[..., unittest.case._AssertLogsContext]"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 72, "col_offset": 39, "nodeName": "empty_agenda_logical_forms", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 77, "col_offset": 25, "nodeName": "log", "type": "unittest.case._AssertLogsContext"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "assertLogs", "type": "Callable[..., unittest.case._AssertLogsContext]"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "get_logical_forms_with_agenda", "type": "Callable[..., List[str]]"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 96, "col_offset": 25, "nodeName": "log", "type": "unittest.case._AssertLogsContext"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 106, "col_offset": 19, "nodeName": "length_three_logical_forms", "type": "List[str]"}, {"lineNumber": 20, "col_offset": 20, "nodeName": "NamedBasicType", "type": "Type[allennlp.semparse.type_declarations.type_declaration.NamedBasicType]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 45, "col_offset": 14, "nodeName": "ActionSpaceWalkerTest", "type": "Type[ActionSpaceWalkerTest]"}, {"lineNumber": 45, "col_offset": 37, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 50, "col_offset": 30, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 56, "col_offset": 37, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 70, "col_offset": 13, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 73, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 73, "col_offset": 23, "nodeName": "first_four_logical_forms", "type": "List[str]"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "walker", "type": "allennlp.semparse.action_space_walker.ActionSpaceWalker"}, {"lineNumber": 89, "col_offset": 19, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 89, "col_offset": 23, "nodeName": "yellow_black_triangle_touch_forms", "type": "List[str]"}, {"lineNumber": 89, "col_offset": 61, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 53, "col_offset": 32, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 71, "col_offset": 41, "nodeName": "self", "type": "ActionSpaceWalkerTest"}, {"lineNumber": 83, "col_offset": 48, "nodeName": "self", "type": "ActionSpaceWalkerTest"}]