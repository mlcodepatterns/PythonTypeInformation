[{"lineNumber": 25, "col_offset": 51, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "_regularizers", "type": "Sequence[Tuple[str, allennlp.nn.regularizers.regularizer.Regularizer]]"}, {"lineNumber": 23, "col_offset": 29, "nodeName": "regularizers", "type": "Sequence[Tuple[str, allennlp.nn.regularizers.regularizer.Regularizer]]"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "accumulator", "type": "float"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "accumulator", "type": "Union[float, Any]"}, {"lineNumber": 25, "col_offset": 51, "nodeName": "torch", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "instantiated_regularizers", "type": "List[Tuple[str, allennlp.nn.regularizers.regularizer.Regularizer]]"}, {"lineNumber": 75, "col_offset": 51, "nodeName": "params", "type": "Iterable[Tuple[str, allennlp.common.params.Params]]"}, {"lineNumber": 46, "col_offset": 71, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "RegularizerApplicator"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "Module", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "name", "type": "Any"}, {"lineNumber": 33, "col_offset": 18, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "params", "type": "Iterable[Tuple[str, allennlp.common.params.Params]]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "parameter_regex", "type": "str"}, {"lineNumber": 75, "col_offset": 29, "nodeName": "regularizer_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "RegularizerApplicator", "type": "Type[RegularizerApplicator]"}, {"lineNumber": 82, "col_offset": 37, "nodeName": "instantiated_regularizers", "type": "List[Tuple[str, allennlp.nn.regularizers.regularizer.Regularizer]]"}, {"lineNumber": 14, "col_offset": 37, "nodeName": "Sequence", "type": "Any"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "nn", "type": "Any"}, {"lineNumber": 33, "col_offset": 31, "nodeName": "module", "type": "Any"}, {"lineNumber": 35, "col_offset": 15, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "_regularizers", "type": "Sequence[Tuple[str, allennlp.nn.regularizers.regularizer.Regularizer]]"}, {"lineNumber": 46, "col_offset": 33, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 76, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 76, "col_offset": 26, "nodeName": "regularizer_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 76, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 79, "col_offset": 16, "nodeName": "regularizer_type", "type": "Type[allennlp.nn.regularizers.regularizer.Regularizer]"}, {"lineNumber": 80, "col_offset": 16, "nodeName": "regularizer", "type": "allennlp.nn.regularizers.regularizer.Regularizer"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 25, "col_offset": 31, "nodeName": "torch", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "regex", "type": "str"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "regularizer", "type": "allennlp.nn.regularizers.regularizer.Regularizer"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "self", "type": "RegularizerApplicator"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 80, "col_offset": 30, "nodeName": "regularizer_type", "type": "Type[allennlp.nn.regularizers.regularizer.Regularizer]"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "instantiated_regularizers", "type": "List[Tuple[str, allennlp.nn.regularizers.regularizer.Regularizer]]"}, {"lineNumber": 81, "col_offset": 46, "nodeName": "parameter_regex", "type": "str"}, {"lineNumber": 81, "col_offset": 63, "nodeName": "regularizer", "type": "allennlp.nn.regularizers.regularizer.Regularizer"}, {"lineNumber": 14, "col_offset": 46, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "search", "type": "Callable"}, {"lineNumber": 38, "col_offset": 33, "nodeName": "regex", "type": "str"}, {"lineNumber": 38, "col_offset": 40, "nodeName": "name", "type": "Any"}, {"lineNumber": 39, "col_offset": 24, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 40, "col_offset": 24, "nodeName": "accumulator", "type": "Any"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 79, "col_offset": 35, "nodeName": "Regularizer", "type": "Type[allennlp.nn.regularizers.regularizer.Regularizer]"}, {"lineNumber": 79, "col_offset": 55, "nodeName": "pop", "type": "Any"}, {"lineNumber": 80, "col_offset": 49, "nodeName": "regularizer_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "re", "type": "module"}, {"lineNumber": 39, "col_offset": 34, "nodeName": "regularizer", "type": "allennlp.nn.regularizers.regularizer.Regularizer"}, {"lineNumber": 39, "col_offset": 46, "nodeName": "parameter", "type": "Any"}, {"lineNumber": 40, "col_offset": 38, "nodeName": "accumulator", "type": "float"}, {"lineNumber": 40, "col_offset": 52, "nodeName": "penalty", "type": "Any"}, {"lineNumber": 79, "col_offset": 55, "nodeName": "regularizer_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 14, "col_offset": 52, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 14, "col_offset": 57, "nodeName": "Regularizer", "type": "Type[allennlp.nn.regularizers.regularizer.Regularizer]"}, {"lineNumber": 46, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 46, "col_offset": 53, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}]