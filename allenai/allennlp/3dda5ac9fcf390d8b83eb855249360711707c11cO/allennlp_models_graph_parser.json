[{"lineNumber": 21, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 25, "col_offset": 18, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 21, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 21, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 78, "col_offset": 35, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 79, "col_offset": 23, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "edge_prediction_threshold", "type": "float"}, {"lineNumber": 80, "col_offset": 41, "nodeName": "edge_prediction_threshold", "type": "float"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "encoder_dim", "type": "int"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "child_arc_feedforward", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "num_labels", "type": "Any"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "child_tag_feedforward", "type": "Any"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "_pos_tag_embedding", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "_dropout", "type": "allennlp.modules.input_variational_dropout.InputVariationalDropout"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "_input_dropout", "type": "Any"}, {"lineNumber": 112, "col_offset": 8, "nodeName": "representation_dim", "type": "int"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "_unlabelled_f1", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "_arc_loss", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "_tag_loss", "type": "Any"}, {"lineNumber": 154, "col_offset": 8, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 161, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 162, "col_offset": 8, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 163, "col_offset": 8, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 165, "col_offset": 8, "nodeName": "float_mask", "type": "Any"}, {"lineNumber": 166, "col_offset": 8, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 169, "col_offset": 8, "nodeName": "head_arc_representation", "type": "Any"}, {"lineNumber": 170, "col_offset": 8, "nodeName": "child_arc_representation", "type": "Any"}, {"lineNumber": 173, "col_offset": 8, "nodeName": "head_tag_representation", "type": "Any"}, {"lineNumber": 174, "col_offset": 8, "nodeName": "child_tag_representation", "type": "Any"}, {"lineNumber": 182, "col_offset": 8, "nodeName": "arc_tag_logits", "type": "Any"}, {"lineNumber": 184, "col_offset": 8, "nodeName": "minus_inf", "type": "float"}, {"lineNumber": 185, "col_offset": 8, "nodeName": "minus_mask", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "arc_scores", "type": "Any"}, {"lineNumber": 198, "col_offset": 11, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 219, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 133, "col_offset": 54, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 223, "col_offset": 8, "nodeName": "arc_tag_probs", "type": "Any"}, {"lineNumber": 224, "col_offset": 8, "nodeName": "arc_probs", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "mask", "type": "Any"}, {"lineNumber": 226, "col_offset": 8, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 227, "col_offset": 8, "nodeName": "arcs", "type": "List[List[Tuple[int, int]]]"}, {"lineNumber": 228, "col_offset": 8, "nodeName": "arc_tags", "type": "List[List[Any]]"}, {"lineNumber": 243, "col_offset": 30, "nodeName": "arcs", "type": "List[List[Tuple[int, int]]]"}, {"lineNumber": 244, "col_offset": 34, "nodeName": "arc_tags", "type": "List[List[Any]]"}, {"lineNumber": 245, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 222, "col_offset": 62, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 277, "col_offset": 8, "nodeName": "float_mask", "type": "Any"}, {"lineNumber": 278, "col_offset": 8, "nodeName": "arc_indices", "type": "Any"}, {"lineNumber": 281, "col_offset": 8, "nodeName": "arc_tags", "type": "Any"}, {"lineNumber": 282, "col_offset": 8, "nodeName": "arc_nll", "type": "Any"}, {"lineNumber": 285, "col_offset": 8, "nodeName": "tag_mask", "type": "Any"}, {"lineNumber": 288, "col_offset": 8, "nodeName": "original_shape", "type": "List[Any]"}, {"lineNumber": 289, "col_offset": 8, "nodeName": "reshaped_logits", "type": "Any"}, {"lineNumber": 290, "col_offset": 8, "nodeName": "reshaped_tags", "type": "Any"}, {"lineNumber": 291, "col_offset": 8, "nodeName": "tag_nll", "type": "Any"}, {"lineNumber": 293, "col_offset": 8, "nodeName": "valid_positions", "type": "Any"}, {"lineNumber": 295, "col_offset": 8, "nodeName": "arc_nll", "type": "Any"}, {"lineNumber": 296, "col_offset": 8, "nodeName": "tag_nll", "type": "Any"}, {"lineNumber": 251, "col_offset": 47, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 329, "col_offset": 8, "nodeName": "inf_diagonal_mask", "type": "Any"}, {"lineNumber": 330, "col_offset": 8, "nodeName": "arc_scores", "type": "Any"}, {"lineNumber": 332, "col_offset": 8, "nodeName": "arc_tag_logits", "type": "Any"}, {"lineNumber": 334, "col_offset": 8, "nodeName": "minus_mask", "type": "Any"}, {"lineNumber": 338, "col_offset": 8, "nodeName": "arc_probs", "type": "Any"}, {"lineNumber": 340, "col_offset": 8, "nodeName": "arc_tag_probs", "type": "Any"}, {"lineNumber": 302, "col_offset": 46, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 345, "col_offset": 8, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 347, "col_offset": 31, "nodeName": "precision", "type": "Any"}, {"lineNumber": 348, "col_offset": 28, "nodeName": "recall", "type": "Any"}, {"lineNumber": 349, "col_offset": 24, "nodeName": "f1_measure", "type": "Any"}, {"lineNumber": 350, "col_offset": 15, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 344, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 74, "col_offset": 30, "nodeName": "InitializerApplicator", "type": "Type[allennlp.nn.initializers.InitializerApplicator]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "__init__", "type": "Callable[..., None]"}, {"lineNumber": 76, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 76, "col_offset": 32, "nodeName": "regularizer", "type": "Optional[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 87, "col_offset": 37, "nodeName": "arc_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 91, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 91, "col_offset": 51, "nodeName": "head_arc_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 93, "col_offset": 29, "nodeName": "BilinearMatrixAttention", "type": "Any"}, {"lineNumber": 93, "col_offset": 53, "nodeName": "arc_representation_dim", "type": "int"}, {"lineNumber": 94, "col_offset": 53, "nodeName": "arc_representation_dim", "type": "int"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "get_vocab_size", "type": "Any"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "tag_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 102, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 102, "col_offset": 51, "nodeName": "head_tag_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 104, "col_offset": 28, "nodeName": "BilinearMatrixAttention", "type": "Any"}, {"lineNumber": 104, "col_offset": 52, "nodeName": "tag_representation_dim", "type": "int"}, {"lineNumber": 105, "col_offset": 52, "nodeName": "tag_representation_dim", "type": "int"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 108, "col_offset": 34, "nodeName": "pos_tag_embedding", "type": "Any"}, {"lineNumber": 109, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 109, "col_offset": 24, "nodeName": "InputVariationalDropout", "type": "Type[allennlp.modules.input_variational_dropout.InputVariationalDropout]"}, {"lineNumber": 109, "col_offset": 48, "nodeName": "dropout", "type": "float"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 110, "col_offset": 30, "nodeName": "Dropout", "type": "Any"}, {"lineNumber": 110, "col_offset": 38, "nodeName": "input_dropout", "type": "float"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 113, "col_offset": 11, "nodeName": "pos_tag_embedding", "type": "Any"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "representation_dim", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "check_dimensions_match", "type": "Callable[[int, int, str, str], None]"}, {"lineNumber": 116, "col_offset": 31, "nodeName": "representation_dim", "type": "Union[Any, int]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "check_dimensions_match", "type": "Callable[[int, int, str, str], None]"}, {"lineNumber": 118, "col_offset": 31, "nodeName": "tag_representation_dim", "type": "int"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "check_dimensions_match", "type": "Callable[[int, int, str, str], None]"}, {"lineNumber": 120, "col_offset": 31, "nodeName": "arc_representation_dim", "type": "int"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 30, "nodeName": "F1Measure", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "BCEWithLogitsLoss", "type": "Any"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "CrossEntropyLoss", "type": "Any"}, {"lineNumber": 126, "col_offset": 8, "nodeName": "initializer", "type": "allennlp.nn.initializers.InitializerApplicator"}, {"lineNumber": 126, "col_offset": 20, "nodeName": "self", "type": "Any"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "text_field_embedder", "type": "Any"}, {"lineNumber": 154, "col_offset": 55, "nodeName": "tokens", "type": "Dict[str, Any]"}, {"lineNumber": 156, "col_offset": 12, "nodeName": "embedded_pos_tags", "type": "Any"}, {"lineNumber": 157, "col_offset": 12, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 161, "col_offset": 15, "nodeName": "get_text_field_mask", "type": "Callable[..., Any]"}, {"lineNumber": 161, "col_offset": 35, "nodeName": "tokens", "type": "Dict[str, Any]"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "_input_dropout", "type": "Any"}, {"lineNumber": 162, "col_offset": 50, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "encoder", "type": "Any"}, {"lineNumber": 163, "col_offset": 36, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 163, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 165, "col_offset": 21, "nodeName": "float", "type": "Any"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 166, "col_offset": 37, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 170, "col_offset": 35, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 173, "col_offset": 34, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "_dropout", "type": "Any"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "arc_attention", "type": "Any"}, {"lineNumber": 176, "col_offset": 40, "nodeName": "head_arc_representation", "type": "Any"}, {"lineNumber": 177, "col_offset": 40, "nodeName": "child_arc_representation", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "tag_bilinear", "type": "Any"}, {"lineNumber": 179, "col_offset": 43, "nodeName": "head_tag_representation", "type": "Any"}, {"lineNumber": 180, "col_offset": 43, "nodeName": "child_tag_representation", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 185, "col_offset": 40, "nodeName": "minus_inf", "type": "float"}, {"lineNumber": 188, "col_offset": 35, "nodeName": "_greedy_decode", "type": "Any"}, {"lineNumber": 188, "col_offset": 55, "nodeName": "arc_scores", "type": "Any"}, {"lineNumber": 189, "col_offset": 55, "nodeName": "arc_tag_logits", "type": "Any"}, {"lineNumber": 190, "col_offset": 55, "nodeName": "mask", "type": "Any"}, {"lineNumber": 193, "col_offset": 29, "nodeName": "arc_probs", "type": "Any"}, {"lineNumber": 194, "col_offset": 33, "nodeName": "arc_tag_probs", "type": "Any"}, {"lineNumber": 195, "col_offset": 24, "nodeName": "mask", "type": "Any"}, {"lineNumber": 201, "col_offset": 11, "nodeName": "arc_tags", "type": "Any"}, {"lineNumber": 207, "col_offset": 38, "nodeName": "arc_nll", "type": "Any"}, {"lineNumber": 208, "col_offset": 38, "nodeName": "tag_nll", "type": "Any"}, {"lineNumber": 212, "col_offset": 12, "nodeName": "arc_indices", "type": "Any"}, {"lineNumber": 213, "col_offset": 12, "nodeName": "tag_mask", "type": "Any"}, {"lineNumber": 214, "col_offset": 12, "nodeName": "one_minus_arc_probs", "type": "Any"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 225, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 226, "col_offset": 18, "nodeName": "get_lengths_from_binary_sequence_mask", "type": "Callable[[Any], Any]"}, {"lineNumber": 226, "col_offset": 56, "nodeName": "mask", "type": "Any"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "instance_arc_probs", "type": "Any"}, {"lineNumber": 229, "col_offset": 32, "nodeName": "instance_arc_tag_probs", "type": "Any"}, {"lineNumber": 229, "col_offset": 56, "nodeName": "length", "type": "Any"}, {"lineNumber": 229, "col_offset": 66, "nodeName": "zip", "type": "Callable"}, {"lineNumber": 229, "col_offset": 70, "nodeName": "arc_probs", "type": "Any"}, {"lineNumber": 229, "col_offset": 81, "nodeName": "arc_tag_probs", "type": "Any"}, {"lineNumber": 229, "col_offset": 96, "nodeName": "lengths", "type": "Any"}, {"lineNumber": 231, "col_offset": 12, "nodeName": "arc_matrix", "type": "Any"}, {"lineNumber": 232, "col_offset": 12, "nodeName": "edges", "type": "List[Tuple[int, int]]"}, {"lineNumber": 233, "col_offset": 12, "nodeName": "edge_tags", "type": "List[Any]"}, {"lineNumber": 234, "col_offset": 16, "nodeName": "i", "type": "int"}, {"lineNumber": 243, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 244, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 248, "col_offset": 36, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 249, "col_offset": 40, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 250, "col_offset": 34, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 251, "col_offset": 30, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 277, "col_offset": 21, "nodeName": "float", "type": "Any"}, {"lineNumber": 278, "col_offset": 23, "nodeName": "float", "type": "Any"}, {"lineNumber": 281, "col_offset": 19, "nodeName": "arc_tags", "type": "Any"}, {"lineNumber": 281, "col_offset": 30, "nodeName": "arc_indices", "type": "Any"}, {"lineNumber": 285, "col_offset": 71, "nodeName": "arc_indices", "type": "Any"}, {"lineNumber": 287, "col_offset": 8, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 287, "col_offset": 20, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 287, "col_offset": 37, "nodeName": "_", "type": "Any"}, {"lineNumber": 287, "col_offset": 40, "nodeName": "num_tags", "type": "Any"}, {"lineNumber": 287, "col_offset": 51, "nodeName": "size", "type": "Any"}, {"lineNumber": 288, "col_offset": 26, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 288, "col_offset": 38, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 288, "col_offset": 55, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 289, "col_offset": 26, "nodeName": "view", "type": "Any"}, {"lineNumber": 289, "col_offset": 50, "nodeName": "num_tags", "type": "Any"}, {"lineNumber": 290, "col_offset": 24, "nodeName": "view", "type": "Any"}, {"lineNumber": 291, "col_offset": 95, "nodeName": "tag_mask", "type": "Any"}, {"lineNumber": 293, "col_offset": 26, "nodeName": "sum", "type": "Any"}, {"lineNumber": 297, "col_offset": 15, "nodeName": "arc_nll", "type": "Any"}, {"lineNumber": 297, "col_offset": 24, "nodeName": "tag_nll", "type": "Any"}, {"lineNumber": 300, "col_offset": 35, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 301, "col_offset": 39, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 302, "col_offset": 29, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 329, "col_offset": 28, "nodeName": "diag", "type": "Any"}, {"lineNumber": 330, "col_offset": 21, "nodeName": "arc_scores", "type": "Any"}, {"lineNumber": 330, "col_offset": 34, "nodeName": "inf_diagonal_mask", "type": "Any"}, {"lineNumber": 332, "col_offset": 25, "nodeName": "arc_tag_logits", "type": "Any"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "masked_fill_", "type": "Any"}, {"lineNumber": 335, "col_offset": 32, "nodeName": "minus_mask", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "masked_fill_", "type": "Any"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "sigmoid", "type": "Any"}, {"lineNumber": 340, "col_offset": 24, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 340, "col_offset": 52, "nodeName": "arc_tag_logits", "type": "Any"}, {"lineNumber": 341, "col_offset": 15, "nodeName": "arc_probs", "type": "Any"}, {"lineNumber": 341, "col_offset": 26, "nodeName": "arc_tag_probs", "type": "Any"}, {"lineNumber": 344, "col_offset": 33, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 346, "col_offset": 8, "nodeName": "precision", "type": "Any"}, {"lineNumber": 346, "col_offset": 19, "nodeName": "recall", "type": "Any"}, {"lineNumber": 346, "col_offset": 27, "nodeName": "f1_measure", "type": "Any"}, {"lineNumber": 346, "col_offset": 40, "nodeName": "get_metric", "type": "Any"}, {"lineNumber": 346, "col_offset": 71, "nodeName": "reset", "type": "bool"}, {"lineNumber": 347, "col_offset": 8, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 348, "col_offset": 8, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 349, "col_offset": 8, "nodeName": "metrics", "type": "Dict[str, Any]"}, {"lineNumber": 75, "col_offset": 30, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 81, "col_offset": 19, "nodeName": "edge_prediction_threshold", "type": "float"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 85, "col_offset": 22, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "copy", "type": "module"}, {"lineNumber": 91, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "copy", "type": "module"}, {"lineNumber": 102, "col_offset": 51, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 62, "nodeName": "num_labels", "type": "Any"}, {"lineNumber": 112, "col_offset": 29, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 116, "col_offset": 51, "nodeName": "get_input_dim", "type": "Callable[[], int]"}, {"lineNumber": 118, "col_offset": 55, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 120, "col_offset": 55, "nodeName": "get_output_dim", "type": "Callable[[], int]"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "nn", "type": "Any"}, {"lineNumber": 133, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 154, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 155, "col_offset": 11, "nodeName": "pos_tags", "type": "Any"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "_pos_tag_embedding", "type": "Any"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "_pos_tag_embedding", "type": "Any"}, {"lineNumber": 156, "col_offset": 56, "nodeName": "pos_tags", "type": "Any"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "cat", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "_pos_tag_embedding", "type": "Any"}, {"lineNumber": 162, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 163, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 165, "col_offset": 21, "nodeName": "mask", "type": "Any"}, {"lineNumber": 166, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 169, "col_offset": 48, "nodeName": "head_arc_feedforward", "type": "Any"}, {"lineNumber": 169, "col_offset": 74, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 170, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 49, "nodeName": "child_arc_feedforward", "type": "Any"}, {"lineNumber": 170, "col_offset": 76, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 173, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 48, "nodeName": "head_tag_feedforward", "type": "Any"}, {"lineNumber": 173, "col_offset": 74, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 174, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 174, "col_offset": 49, "nodeName": "child_tag_feedforward", "type": "Any"}, {"lineNumber": 174, "col_offset": 76, "nodeName": "encoded_text", "type": "Any"}, {"lineNumber": 176, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 179, "col_offset": 25, "nodeName": "self", "type": "Any"}, {"lineNumber": 185, "col_offset": 26, "nodeName": "float_mask", "type": "Any"}, {"lineNumber": 186, "col_offset": 21, "nodeName": "arc_scores", "type": "Any"}, {"lineNumber": 186, "col_offset": 60, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 188, "col_offset": 35, "nodeName": "self", "type": "Any"}, {"lineNumber": 199, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "_construct_loss", "type": "Any"}, {"lineNumber": 206, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 206, "col_offset": 34, "nodeName": "arc_nll", "type": "Any"}, {"lineNumber": 206, "col_offset": 44, "nodeName": "tag_nll", "type": "Any"}, {"lineNumber": 207, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 208, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "float", "type": "Any"}, {"lineNumber": 214, "col_offset": 38, "nodeName": "arc_probs", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "_unlabelled_f1", "type": "Any"}, {"lineNumber": 217, "col_offset": 83, "nodeName": "arc_indices", "type": "Any"}, {"lineNumber": 217, "col_offset": 96, "nodeName": "tag_mask", "type": "Any"}, {"lineNumber": 133, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 133, "col_offset": 64, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 222, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 231, "col_offset": 25, "nodeName": "instance_arc_probs", "type": "Any"}, {"lineNumber": 231, "col_offset": 46, "nodeName": "edge_prediction_threshold", "type": "Any"}, {"lineNumber": 234, "col_offset": 21, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 234, "col_offset": 27, "nodeName": "length", "type": "Any"}, {"lineNumber": 235, "col_offset": 20, "nodeName": "j", "type": "int"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 240, "col_offset": 24, "nodeName": "edges", "type": "List[Tuple[int, int]]"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 241, "col_offset": 28, "nodeName": "edge_tags", "type": "List[Any]"}, {"lineNumber": 222, "col_offset": 67, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 222, "col_offset": 72, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 248, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 249, "col_offset": 40, "nodeName": "torch", "type": "Any"}, {"lineNumber": 250, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 251, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 277, "col_offset": 21, "nodeName": "mask", "type": "Any"}, {"lineNumber": 282, "col_offset": 86, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 287, "col_offset": 51, "nodeName": "arc_tag_logits", "type": "Any"}, {"lineNumber": 289, "col_offset": 26, "nodeName": "arc_tag_logits", "type": "Any"}, {"lineNumber": 290, "col_offset": 24, "nodeName": "arc_tags", "type": "Any"}, {"lineNumber": 291, "col_offset": 18, "nodeName": "view", "type": "Any"}, {"lineNumber": 291, "col_offset": 77, "nodeName": "original_shape", "type": "List[Any]"}, {"lineNumber": 293, "col_offset": 26, "nodeName": "tag_mask", "type": "Any"}, {"lineNumber": 295, "col_offset": 18, "nodeName": "sum", "type": "Any"}, {"lineNumber": 295, "col_offset": 34, "nodeName": "float", "type": "Any"}, {"lineNumber": 296, "col_offset": 18, "nodeName": "sum", "type": "Any"}, {"lineNumber": 296, "col_offset": 34, "nodeName": "float", "type": "Any"}, {"lineNumber": 251, "col_offset": 53, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 251, "col_offset": 67, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 300, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 301, "col_offset": 39, "nodeName": "torch", "type": "Any"}, {"lineNumber": 302, "col_offset": 29, "nodeName": "torch", "type": "Any"}, {"lineNumber": 329, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 329, "col_offset": 39, "nodeName": "fill_", "type": "Any"}, {"lineNumber": 332, "col_offset": 42, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 335, "col_offset": 8, "nodeName": "arc_scores", "type": "Any"}, {"lineNumber": 335, "col_offset": 45, "nodeName": "inf", "type": "Any"}, {"lineNumber": 336, "col_offset": 8, "nodeName": "arc_tag_logits", "type": "Any"}, {"lineNumber": 336, "col_offset": 36, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 336, "col_offset": 63, "nodeName": "inf", "type": "Any"}, {"lineNumber": 338, "col_offset": 20, "nodeName": "arc_scores", "type": "Any"}, {"lineNumber": 340, "col_offset": 24, "nodeName": "functional", "type": "Any"}, {"lineNumber": 302, "col_offset": 52, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 302, "col_offset": 66, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 346, "col_offset": 40, "nodeName": "_unlabelled_f1", "type": "Any"}, {"lineNumber": 344, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 344, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 75, "col_offset": 39, "nodeName": "RegularizerApplicator", "type": "Type[allennlp.nn.regularizers.regularizer_applicator.RegularizerApplicator]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 97, "col_offset": 21, "nodeName": "self", "type": "Any"}, {"lineNumber": 114, "col_offset": 34, "nodeName": "pos_tag_embedding", "type": "Any"}, {"lineNumber": 116, "col_offset": 51, "nodeName": "encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 118, "col_offset": 55, "nodeName": "head_tag_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 120, "col_offset": 55, "nodeName": "head_arc_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 124, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 125, "col_offset": 25, "nodeName": "torch", "type": "Any"}, {"lineNumber": 155, "col_offset": 36, "nodeName": "self", "type": "Any"}, {"lineNumber": 156, "col_offset": 32, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 157, "col_offset": 45, "nodeName": "embedded_text_input", "type": "Any"}, {"lineNumber": 157, "col_offset": 66, "nodeName": "embedded_pos_tags", "type": "Any"}, {"lineNumber": 158, "col_offset": 13, "nodeName": "self", "type": "Any"}, {"lineNumber": 159, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 169, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 170, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 173, "col_offset": 48, "nodeName": "self", "type": "Any"}, {"lineNumber": 174, "col_offset": 49, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "permute", "type": "Any"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 186, "col_offset": 60, "nodeName": "minus_mask", "type": "Any"}, {"lineNumber": 199, "col_offset": 37, "nodeName": "meta", "type": "Dict[str, Any]"}, {"lineNumber": 199, "col_offset": 56, "nodeName": "meta", "type": "Dict[str, Any]"}, {"lineNumber": 199, "col_offset": 64, "nodeName": "metadata", "type": "List[Dict[str, Any]]"}, {"lineNumber": 202, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 202, "col_offset": 63, "nodeName": "arc_scores", "type": "Any"}, {"lineNumber": 203, "col_offset": 67, "nodeName": "arc_tag_logits", "type": "Any"}, {"lineNumber": 204, "col_offset": 61, "nodeName": "arc_tags", "type": "Any"}, {"lineNumber": 205, "col_offset": 57, "nodeName": "mask", "type": "Any"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 213, "col_offset": 49, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 217, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 217, "col_offset": 32, "nodeName": "stack", "type": "Any"}, {"lineNumber": 133, "col_offset": 64, "nodeName": "torch", "type": "Any"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "detach", "type": "Any"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "detach", "type": "Any"}, {"lineNumber": 231, "col_offset": 46, "nodeName": "self", "type": "Any"}, {"lineNumber": 235, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 235, "col_offset": 31, "nodeName": "length", "type": "Any"}, {"lineNumber": 240, "col_offset": 12, "nodeName": "arcs", "type": "List[List[Tuple[int, int]]]"}, {"lineNumber": 241, "col_offset": 12, "nodeName": "arc_tags", "type": "List[List[Any]]"}, {"lineNumber": 222, "col_offset": 72, "nodeName": "torch", "type": "Any"}, {"lineNumber": 278, "col_offset": 23, "nodeName": "arc_tags", "type": "Any"}, {"lineNumber": 282, "col_offset": 18, "nodeName": "_arc_loss", "type": "Any"}, {"lineNumber": 282, "col_offset": 33, "nodeName": "arc_scores", "type": "Any"}, {"lineNumber": 282, "col_offset": 45, "nodeName": "arc_indices", "type": "Any"}, {"lineNumber": 282, "col_offset": 60, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 282, "col_offset": 86, "nodeName": "float_mask", "type": "Any"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 285, "col_offset": 45, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 295, "col_offset": 18, "nodeName": "arc_nll", "type": "Any"}, {"lineNumber": 295, "col_offset": 34, "nodeName": "valid_positions", "type": "Any"}, {"lineNumber": 296, "col_offset": 18, "nodeName": "tag_nll", "type": "Any"}, {"lineNumber": 296, "col_offset": 34, "nodeName": "valid_positions", "type": "Any"}, {"lineNumber": 251, "col_offset": 53, "nodeName": "torch", "type": "Any"}, {"lineNumber": 251, "col_offset": 67, "nodeName": "torch", "type": "Any"}, {"lineNumber": 329, "col_offset": 75, "nodeName": "inf", "type": "Any"}, {"lineNumber": 334, "col_offset": 22, "nodeName": "to", "type": "Any"}, {"lineNumber": 335, "col_offset": 45, "nodeName": "numpy", "type": "module"}, {"lineNumber": 336, "col_offset": 36, "nodeName": "minus_mask", "type": "Any"}, {"lineNumber": 336, "col_offset": 63, "nodeName": "numpy", "type": "module"}, {"lineNumber": 340, "col_offset": 24, "nodeName": "nn", "type": "Any"}, {"lineNumber": 302, "col_offset": 52, "nodeName": "torch", "type": "Any"}, {"lineNumber": 302, "col_offset": 66, "nodeName": "torch", "type": "Any"}, {"lineNumber": 346, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 82, "col_offset": 38, "nodeName": "edge_prediction_threshold", "type": "float"}, {"lineNumber": 118, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 120, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 182, "col_offset": 25, "nodeName": "arc_tag_logits", "type": "Any"}, {"lineNumber": 186, "col_offset": 34, "nodeName": "minus_mask", "type": "Any"}, {"lineNumber": 212, "col_offset": 27, "nodeName": "arc_tags", "type": "Any"}, {"lineNumber": 213, "col_offset": 23, "nodeName": "float_mask", "type": "Any"}, {"lineNumber": 213, "col_offset": 49, "nodeName": "float_mask", "type": "Any"}, {"lineNumber": 217, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 217, "col_offset": 45, "nodeName": "one_minus_arc_probs", "type": "Any"}, {"lineNumber": 217, "col_offset": 66, "nodeName": "arc_probs", "type": "Any"}, {"lineNumber": 222, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 222, "col_offset": 44, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 238, "col_offset": 24, "nodeName": "tag", "type": "Any"}, {"lineNumber": 282, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 282, "col_offset": 60, "nodeName": "float_mask", "type": "Any"}, {"lineNumber": 285, "col_offset": 19, "nodeName": "float_mask", "type": "Any"}, {"lineNumber": 285, "col_offset": 45, "nodeName": "float_mask", "type": "Any"}, {"lineNumber": 291, "col_offset": 18, "nodeName": "_tag_loss", "type": "Any"}, {"lineNumber": 291, "col_offset": 33, "nodeName": "reshaped_logits", "type": "Any"}, {"lineNumber": 329, "col_offset": 39, "nodeName": "new", "type": "Any"}, {"lineNumber": 329, "col_offset": 75, "nodeName": "numpy", "type": "module"}, {"lineNumber": 332, "col_offset": 42, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 334, "col_offset": 41, "nodeName": "bool", "type": "Any"}, {"lineNumber": 340, "col_offset": 24, "nodeName": "torch", "type": "Any"}, {"lineNumber": 222, "col_offset": 44, "nodeName": "torch", "type": "Any"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 236, "col_offset": 23, "nodeName": "arc_matrix", "type": "Any"}, {"lineNumber": 237, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 238, "col_offset": 30, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 239, "col_offset": 24, "nodeName": "append", "type": "Callable"}, {"lineNumber": 291, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 291, "col_offset": 50, "nodeName": "long", "type": "Any"}, {"lineNumber": 329, "col_offset": 39, "nodeName": "arc_scores", "type": "Any"}, {"lineNumber": 329, "col_offset": 54, "nodeName": "size", "type": "Any"}, {"lineNumber": 332, "col_offset": 42, "nodeName": "inf_diagonal_mask", "type": "Any"}, {"lineNumber": 334, "col_offset": 26, "nodeName": "mask", "type": "Any"}, {"lineNumber": 334, "col_offset": 41, "nodeName": "torch", "type": "Any"}, {"lineNumber": 237, "col_offset": 24, "nodeName": "edges", "type": "List[Tuple[int, int]]"}, {"lineNumber": 237, "col_offset": 38, "nodeName": "i", "type": "int"}, {"lineNumber": 237, "col_offset": 41, "nodeName": "j", "type": "int"}, {"lineNumber": 239, "col_offset": 24, "nodeName": "edge_tags", "type": "List[Any]"}, {"lineNumber": 239, "col_offset": 41, "nodeName": "get_token_from_index", "type": "Any"}, {"lineNumber": 239, "col_offset": 73, "nodeName": "tag", "type": "Any"}, {"lineNumber": 291, "col_offset": 50, "nodeName": "reshaped_tags", "type": "Any"}, {"lineNumber": 329, "col_offset": 54, "nodeName": "mask", "type": "Any"}, {"lineNumber": 223, "col_offset": 24, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 224, "col_offset": 20, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 236, "col_offset": 34, "nodeName": "i", "type": "int"}, {"lineNumber": 236, "col_offset": 37, "nodeName": "j", "type": "int"}, {"lineNumber": 238, "col_offset": 30, "nodeName": "instance_arc_tag_probs", "type": "Any"}, {"lineNumber": 239, "col_offset": 41, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 239, "col_offset": 41, "nodeName": "self", "type": "Any"}, {"lineNumber": 238, "col_offset": 53, "nodeName": "i", "type": "int"}, {"lineNumber": 238, "col_offset": 56, "nodeName": "j", "type": "int"}]