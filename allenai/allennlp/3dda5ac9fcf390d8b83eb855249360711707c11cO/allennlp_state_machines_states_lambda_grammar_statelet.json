[{"lineNumber": 70, "col_offset": 29, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "_nonterminal_stack", "type": "List[str]"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "nonterminal_stack", "type": "List[str]"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "_lambda_stacks", "type": "Dict[Tuple[str, str], List[str]]"}, {"lineNumber": 65, "col_offset": 30, "nodeName": "lambda_stacks", "type": "Dict[Tuple[str, str], List[str]]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "_valid_actions", "type": "Dict[str, Dict[str, Tuple[Any, Any, List[int]]]]"}, {"lineNumber": 66, "col_offset": 30, "nodeName": "valid_actions", "type": "Dict[str, Dict[str, Tuple[Any, Any, List[int]]]]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "_context_actions", "type": "Dict[str, Tuple[Any, Any, int]]"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "context_actions", "type": "Dict[str, Tuple[Any, Any, int]]"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "_is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 68, "col_offset": 31, "nodeName": "is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "context_actions", "type": "List[Tuple[Any, Any, int]]"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "_lambda_stacks", "type": "Dict[Tuple[str, str], List[str]]"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "context_actions", "type": "List[Tuple[Any, Any, int]]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 77, "col_offset": 35, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 122, "col_offset": 8, "nodeName": "new_stack", "type": "List[str]"}, {"lineNumber": 123, "col_offset": 8, "nodeName": "new_lambda_stacks", "type": "Dict[Tuple[str, str], List[str]]"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "productions", "type": "List[str]"}, {"lineNumber": 144, "col_offset": 12, "nodeName": "production", "type": "str"}, {"lineNumber": 161, "col_offset": 64, "nodeName": "List", "type": "Any"}, {"lineNumber": 182, "col_offset": 15, "nodeName": "NotImplemented", "type": "NotImplementedType"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 68, "col_offset": 8, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "_nonterminal_stack", "type": "List[str]"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "_valid_actions", "type": "Dict[str, Dict[str, Tuple[Any, Any, List[int]]]]"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "type_", "type": "str"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "variable", "type": "str"}, {"lineNumber": 84, "col_offset": 31, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "new_inputs", "type": "List[Any]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "new_outputs", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 12, "nodeName": "output_tensor", "type": "Any"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "new_action_ids", "type": "List[int]"}, {"lineNumber": 97, "col_offset": 12, "nodeName": "new_actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 99, "col_offset": 22, "nodeName": "new_actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 102, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "left_side", "type": "str"}, {"lineNumber": 117, "col_offset": 19, "nodeName": "right_side", "type": "str"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 118, "col_offset": 46, "nodeName": "left_side", "type": "str"}, {"lineNumber": 120, "col_offset": 15, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "_nonterminal_stack", "type": "List[str]"}, {"lineNumber": 123, "col_offset": 29, "nodeName": "key", "type": "Tuple[str, str]"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "_get_productions_from_string", "type": "Callable[[str], List[str]]"}, {"lineNumber": 125, "col_offset": 56, "nodeName": "right_side", "type": "str"}, {"lineNumber": 129, "col_offset": 12, "nodeName": "production", "type": "str"}, {"lineNumber": 134, "col_offset": 12, "nodeName": "lambda_variable", "type": "str"}, {"lineNumber": 141, "col_offset": 12, "nodeName": "lambda_type", "type": "str"}, {"lineNumber": 144, "col_offset": 26, "nodeName": "reversed", "type": "Type[reversed[Any]]"}, {"lineNumber": 144, "col_offset": 35, "nodeName": "productions", "type": "List[str]"}, {"lineNumber": 154, "col_offset": 15, "nodeName": "LambdaGrammarStatelet", "type": "Type[LambdaGrammarStatelet]"}, {"lineNumber": 161, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 161, "col_offset": 69, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 173, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 173, "col_offset": 22, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 173, "col_offset": 28, "nodeName": "__class__", "type": "Any"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "List", "type": "Any"}, {"lineNumber": 60, "col_offset": 32, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 62, "col_offset": 34, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 63, "col_offset": 33, "nodeName": "Callable", "type": "Any"}, {"lineNumber": 75, "col_offset": 19, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 82, "col_offset": 18, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 85, "col_offset": 46, "nodeName": "type_", "type": "str"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "production_string", "type": "str"}, {"lineNumber": 89, "col_offset": 12, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 89, "col_offset": 26, "nodeName": "output_tensor", "type": "Any"}, {"lineNumber": 89, "col_offset": 41, "nodeName": "action_ids", "type": "List[int]"}, {"lineNumber": 89, "col_offset": 54, "nodeName": "actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "cat", "type": "Any"}, {"lineNumber": 91, "col_offset": 37, "nodeName": "new_inputs", "type": "List[Any]"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "cat", "type": "Any"}, {"lineNumber": 93, "col_offset": 38, "nodeName": "new_outputs", "type": "List[Any]"}, {"lineNumber": 94, "col_offset": 29, "nodeName": "action_ids", "type": "List[int]"}, {"lineNumber": 97, "col_offset": 29, "nodeName": "actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 98, "col_offset": 12, "nodeName": "new_actions", "type": "Dict[str, Tuple[Any, Any, List[int]]]"}, {"lineNumber": 98, "col_offset": 37, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 98, "col_offset": 51, "nodeName": "output_tensor", "type": "Any"}, {"lineNumber": 98, "col_offset": 66, "nodeName": "new_action_ids", "type": "List[int]"}, {"lineNumber": 77, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 117, "col_offset": 32, "nodeName": "production_rule", "type": "str"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "_nonterminal_stack", "type": "List[str]"}, {"lineNumber": 118, "col_offset": 59, "nodeName": "left_side", "type": "str"}, {"lineNumber": 118, "col_offset": 59, "nodeName": "right_side", "type": "str"}, {"lineNumber": 122, "col_offset": 20, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 123, "col_offset": 68, "nodeName": "key", "type": "Tuple[str, str]"}, {"lineNumber": 123, "col_offset": 75, "nodeName": "_lambda_stacks", "type": "Dict[Tuple[str, str], List[str]]"}, {"lineNumber": 125, "col_offset": 22, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 129, "col_offset": 25, "nodeName": "productions", "type": "List[str]"}, {"lineNumber": 133, "col_offset": 16, "nodeName": "production", "type": "str"}, {"lineNumber": 141, "col_offset": 26, "nodeName": "left_side", "type": "str"}, {"lineNumber": 142, "col_offset": 12, "nodeName": "new_lambda_stacks", "type": "Dict[Tuple[str, str], List[str]]"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "_is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 145, "col_offset": 36, "nodeName": "production", "type": "str"}, {"lineNumber": 147, "col_offset": 20, "nodeName": "lambda_stack", "type": "List[str]"}, {"lineNumber": 152, "col_offset": 33, "nodeName": "key", "type": "Tuple[str, str]"}, {"lineNumber": 152, "col_offset": 40, "nodeName": "new_lambda_stacks", "type": "Dict[Tuple[str, str], List[str]]"}, {"lineNumber": 154, "col_offset": 55, "nodeName": "new_stack", "type": "List[str]"}, {"lineNumber": 155, "col_offset": 51, "nodeName": "new_lambda_stacks", "type": "Dict[Tuple[str, str], List[str]]"}, {"lineNumber": 156, "col_offset": 51, "nodeName": "_valid_actions", "type": "Dict[str, Dict[str, Tuple[Any, Any, List[int]]]]"}, {"lineNumber": 157, "col_offset": 53, "nodeName": "_context_actions", "type": "Dict[str, Tuple[Any, Any, int]]"}, {"lineNumber": 158, "col_offset": 52, "nodeName": "_is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 167, "col_offset": 11, "nodeName": "production_string", "type": "str"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 170, "col_offset": 20, "nodeName": "production_string", "type": "str"}, {"lineNumber": 173, "col_offset": 28, "nodeName": "other", "type": "Any"}, {"lineNumber": 175, "col_offset": 19, "nodeName": "all", "type": "Callable[[Any], bool]"}, {"lineNumber": 59, "col_offset": 41, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 82, "col_offset": 38, "nodeName": "_nonterminal_stack", "type": "List[str]"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "_nonterminal_stack", "type": "List[str]"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 90, "col_offset": 26, "nodeName": "input_tensor", "type": "Any"}, {"lineNumber": 91, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 92, "col_offset": 27, "nodeName": "output_tensor", "type": "Any"}, {"lineNumber": 93, "col_offset": 28, "nodeName": "torch", "type": "Any"}, {"lineNumber": 77, "col_offset": 45, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 118, "col_offset": 15, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 118, "col_offset": 77, "nodeName": "_nonterminal_stack", "type": "List[str]"}, {"lineNumber": 120, "col_offset": 51, "nodeName": "left_side", "type": "str"}, {"lineNumber": 120, "col_offset": 65, "nodeName": "key", "type": "Tuple[str, str]"}, {"lineNumber": 120, "col_offset": 72, "nodeName": "_lambda_stacks", "type": "Dict[Tuple[str, str], List[str]]"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "_lambda_stacks", "type": "Dict[Tuple[str, str], List[str]]"}, {"lineNumber": 123, "col_offset": 75, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 128, "col_offset": 23, "nodeName": "productions", "type": "List[str]"}, {"lineNumber": 128, "col_offset": 55, "nodeName": "productions", "type": "List[str]"}, {"lineNumber": 133, "col_offset": 29, "nodeName": "production", "type": "str"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "split", "type": "Callable[..., List[str]]"}, {"lineNumber": 139, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 139, "col_offset": 19, "nodeName": "left_side", "type": "str"}, {"lineNumber": 140, "col_offset": 22, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 140, "col_offset": 73, "nodeName": "left_side", "type": "str"}, {"lineNumber": 145, "col_offset": 15, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 146, "col_offset": 33, "nodeName": "production", "type": "str"}, {"lineNumber": 147, "col_offset": 36, "nodeName": "values", "type": "Callable"}, {"lineNumber": 152, "col_offset": 61, "nodeName": "new_lambda_stacks", "type": "Dict[Tuple[str, str], List[str]]"}, {"lineNumber": 156, "col_offset": 51, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 157, "col_offset": 53, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 158, "col_offset": 52, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 61, "col_offset": 37, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 62, "col_offset": 39, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 63, "col_offset": 49, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 82, "col_offset": 38, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 85, "col_offset": 15, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 86, "col_offset": 39, "nodeName": "type_", "type": "str"}, {"lineNumber": 86, "col_offset": 50, "nodeName": "variable", "type": "str"}, {"lineNumber": 87, "col_offset": 16, "nodeName": "context_actions", "type": "List[Tuple[Any, Any, int]]"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "_context_actions", "type": "Dict[str, Tuple[Any, Any, int]]"}, {"lineNumber": 90, "col_offset": 43, "nodeName": "x", "type": "Tuple[Any, Any, int]"}, {"lineNumber": 90, "col_offset": 52, "nodeName": "x", "type": "Tuple[Any, Any, int]"}, {"lineNumber": 90, "col_offset": 57, "nodeName": "context_actions", "type": "List[Tuple[Any, Any, int]]"}, {"lineNumber": 92, "col_offset": 45, "nodeName": "x", "type": "Tuple[Any, Any, int]"}, {"lineNumber": 92, "col_offset": 54, "nodeName": "x", "type": "Tuple[Any, Any, int]"}, {"lineNumber": 92, "col_offset": 59, "nodeName": "context_actions", "type": "List[Tuple[Any, Any, int]]"}, {"lineNumber": 94, "col_offset": 43, "nodeName": "x", "type": "Tuple[Any, Any, int]"}, {"lineNumber": 94, "col_offset": 52, "nodeName": "x", "type": "Tuple[Any, Any, int]"}, {"lineNumber": 94, "col_offset": 57, "nodeName": "context_actions", "type": "List[Tuple[Any, Any, int]]"}, {"lineNumber": 118, "col_offset": 77, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 120, "col_offset": 72, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 123, "col_offset": 34, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 123, "col_offset": 54, "nodeName": "key", "type": "Tuple[str, str]"}, {"lineNumber": 130, "col_offset": 15, "nodeName": "production", "type": "str"}, {"lineNumber": 130, "col_offset": 40, "nodeName": "production", "type": "str"}, {"lineNumber": 134, "col_offset": 30, "nodeName": "production", "type": "str"}, {"lineNumber": 142, "col_offset": 31, "nodeName": "lambda_type", "type": "str"}, {"lineNumber": 142, "col_offset": 44, "nodeName": "lambda_variable", "type": "str"}, {"lineNumber": 146, "col_offset": 16, "nodeName": "new_stack", "type": "List[str]"}, {"lineNumber": 147, "col_offset": 36, "nodeName": "new_lambda_stacks", "type": "Dict[Tuple[str, str], List[str]]"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "append", "type": "Callable"}, {"lineNumber": 148, "col_offset": 40, "nodeName": "production", "type": "str"}, {"lineNumber": 152, "col_offset": 79, "nodeName": "key", "type": "Tuple[str, str]"}, {"lineNumber": 168, "col_offset": 19, "nodeName": "production_string", "type": "str"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "_nonterminal_stack", "type": "List[str]"}, {"lineNumber": 176, "col_offset": 47, "nodeName": "_nonterminal_stack", "type": "Any"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "_lambda_stacks", "type": "Dict[Tuple[str, str], List[str]]"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "_lambda_stacks", "type": "Any"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "tensors_equal", "type": "Callable[..., bool]"}, {"lineNumber": 178, "col_offset": 39, "nodeName": "_valid_actions", "type": "Dict[str, Dict[str, Tuple[Any, Any, List[int]]]]"}, {"lineNumber": 178, "col_offset": 60, "nodeName": "_valid_actions", "type": "Any"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "tensors_equal", "type": "Callable[..., bool]"}, {"lineNumber": 179, "col_offset": 39, "nodeName": "_context_actions", "type": "Dict[str, Tuple[Any, Any, int]]"}, {"lineNumber": 179, "col_offset": 62, "nodeName": "_context_actions", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "_is_nonterminal", "type": "Callable[[str], bool]"}, {"lineNumber": 180, "col_offset": 44, "nodeName": "_is_nonterminal", "type": "Any"}, {"lineNumber": 60, "col_offset": 37, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 60, "col_offset": 54, "nodeName": "List", "type": "Any"}, {"lineNumber": 61, "col_offset": 42, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 63, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 87, "col_offset": 39, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 87, "col_offset": 61, "nodeName": "production_string", "type": "str"}, {"lineNumber": 77, "col_offset": 51, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 77, "col_offset": 65, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "_lambda_stacks", "type": "Dict[Tuple[str, str], List[str]]"}, {"lineNumber": 148, "col_offset": 20, "nodeName": "lambda_stack", "type": "List[str]"}, {"lineNumber": 176, "col_offset": 20, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 176, "col_offset": 47, "nodeName": "other", "type": "Any"}, {"lineNumber": 177, "col_offset": 20, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 177, "col_offset": 43, "nodeName": "other", "type": "Any"}, {"lineNumber": 178, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 178, "col_offset": 39, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 178, "col_offset": 60, "nodeName": "other", "type": "Any"}, {"lineNumber": 179, "col_offset": 20, "nodeName": "util", "type": "module"}, {"lineNumber": 179, "col_offset": 39, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 179, "col_offset": 62, "nodeName": "other", "type": "Any"}, {"lineNumber": 180, "col_offset": 20, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 180, "col_offset": 44, "nodeName": "other", "type": "Any"}, {"lineNumber": 60, "col_offset": 59, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 77, "col_offset": 51, "nodeName": "torch", "type": "Any"}, {"lineNumber": 77, "col_offset": 65, "nodeName": "torch", "type": "Any"}, {"lineNumber": 77, "col_offset": 79, "nodeName": "List", "type": "Any"}, {"lineNumber": 120, "col_offset": 19, "nodeName": "self", "type": "LambdaGrammarStatelet"}, {"lineNumber": 120, "col_offset": 39, "nodeName": "key", "type": "Tuple[str, str]"}, {"lineNumber": 60, "col_offset": 43, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 60, "col_offset": 48, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 61, "col_offset": 47, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 62, "col_offset": 50, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 62, "col_offset": 64, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 62, "col_offset": 78, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 77, "col_offset": 84, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 61, "col_offset": 52, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 62, "col_offset": 50, "nodeName": "torch", "type": "Any"}, {"lineNumber": 62, "col_offset": 64, "nodeName": "torch", "type": "Any"}, {"lineNumber": 61, "col_offset": 58, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 61, "col_offset": 72, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 61, "col_offset": 58, "nodeName": "torch", "type": "Any"}, {"lineNumber": 61, "col_offset": 72, "nodeName": "torch", "type": "Any"}, {"lineNumber": 61, "col_offset": 86, "nodeName": "List", "type": "Any"}, {"lineNumber": 61, "col_offset": 91, "nodeName": "int", "type": "Type[int]"}]