[{"lineNumber": 9, "col_offset": 13, "nodeName": "Registrable", "type": "Type[allennlp.common.registrable.Registrable]"}, {"lineNumber": 29, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 35, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 31, "col_offset": 41, "nodeName": "Union", "type": "Any"}, {"lineNumber": 41, "col_offset": 14, "nodeName": "NotImplementedError", "type": "Type[NotImplementedError]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "metric_type", "type": "Any"}, {"lineNumber": 46, "col_offset": 11, "nodeName": "vocab", "type": "Optional[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 15, "col_offset": 30, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 16, "col_offset": 30, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 31, "col_offset": 32, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 44, "col_offset": 33, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "pop_choice", "type": "Callable[..., Any]"}, {"lineNumber": 47, "col_offset": 35, "nodeName": "vocab", "type": "Optional[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 15, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 16, "col_offset": 30, "nodeName": "torch", "type": "Any"}, {"lineNumber": 17, "col_offset": 23, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 31, "col_offset": 47, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 44, "col_offset": 48, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 45, "col_offset": 22, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 48, "col_offset": 27, "nodeName": "metric_type", "type": "Any"}, {"lineNumber": 51, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 58, "col_offset": 69, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 75, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 80, "nodeName": "tensors", "type": "Tuple[Any, ...]"}, {"lineNumber": 17, "col_offset": 32, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 31, "col_offset": 54, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 31, "col_offset": 73, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 44, "col_offset": 57, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 45, "col_offset": 48, "nodeName": "cls", "type": "Type[Metric]"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "cls", "type": "Type[Metric]"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "as_dict", "type": "Callable[..., Any]"}, {"lineNumber": 58, "col_offset": 36, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 58, "col_offset": 47, "nodeName": "x", "type": "Any"}, {"lineNumber": 58, "col_offset": 50, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 17, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 48, "col_offset": 42, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 58, "col_offset": 50, "nodeName": "torch", "type": "Any"}, {"lineNumber": 31, "col_offset": 60, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 31, "col_offset": 78, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 31, "col_offset": 83, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "detach", "type": "Any"}, {"lineNumber": 58, "col_offset": 16, "nodeName": "x", "type": "Any"}]