[{"lineNumber": 10, "col_offset": 20, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "instances", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "model", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "parameters", "type": "List[List[Any]]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "parameters", "type": "List[List[Any]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 63, "col_offset": 12, "nodeName": "k", "type": "int"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 13, "col_offset": 25, "nodeName": "read", "type": "Any"}, {"lineNumber": 14, "col_offset": 16, "nodeName": "from_instances", "type": "Callable[..., allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 14, "col_offset": 42, "nodeName": "instances", "type": "Any"}, {"lineNumber": 15, "col_offset": 28, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 29, "col_offset": 46, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 29, "col_offset": 53, "nodeName": "model_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 37, "col_offset": 42, "nodeName": "parameters", "type": "List[List[Any]]"}, {"lineNumber": 37, "col_offset": 54, "nodeName": "optimizer_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 38, "col_offset": 23, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 55, "col_offset": 42, "nodeName": "parameters", "type": "List[List[Any]]"}, {"lineNumber": 55, "col_offset": 54, "nodeName": "optimizer_params", "type": "allennlp.common.params.Params"}, {"lineNumber": 56, "col_offset": 23, "nodeName": "optimizer", "type": "allennlp.training.optimizers.Optimizer"}, {"lineNumber": 63, "col_offset": 17, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 14, "col_offset": 16, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 14, "col_offset": 42, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 29, "col_offset": 21, "nodeName": "SimpleTagger", "type": "Any"}, {"lineNumber": 29, "col_offset": 53, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 36, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 36, "col_offset": 74, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 54, "col_offset": 23, "nodeName": "n", "type": "Any"}, {"lineNumber": 54, "col_offset": 26, "nodeName": "p", "type": "Any"}, {"lineNumber": 54, "col_offset": 74, "nodeName": "requires_grad", "type": "Any"}, {"lineNumber": 55, "col_offset": 20, "nodeName": "Optimizer", "type": "Type[allennlp.training.optimizers.Optimizer]"}, {"lineNumber": 58, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 69, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 71, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 12, "col_offset": 14, "nodeName": "TestOptimizer", "type": "Type[TestOptimizer]"}, {"lineNumber": 12, "col_offset": 29, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 13, "col_offset": 25, "nodeName": "SequenceTaggingDatasetReader", "type": "Any"}, {"lineNumber": 13, "col_offset": 61, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 36, "col_offset": 33, "nodeName": "n", "type": "Any"}, {"lineNumber": 36, "col_offset": 36, "nodeName": "p", "type": "Any"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 36, "col_offset": 74, "nodeName": "p", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 54, "col_offset": 33, "nodeName": "n", "type": "Any"}, {"lineNumber": 54, "col_offset": 36, "nodeName": "p", "type": "Any"}, {"lineNumber": 54, "col_offset": 41, "nodeName": "named_parameters", "type": "Any"}, {"lineNumber": 54, "col_offset": 74, "nodeName": "p", "type": "Any"}, {"lineNumber": 59, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 62, "col_offset": 15, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 13, "col_offset": 61, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "model", "type": "Any"}, {"lineNumber": 54, "col_offset": 41, "nodeName": "model", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 67, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 69, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 71, "col_offset": 19, "nodeName": "param_groups", "type": "Any"}, {"lineNumber": 36, "col_offset": 41, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 54, "col_offset": 41, "nodeName": "self", "type": "TestOptimizer"}, {"lineNumber": 64, "col_offset": 32, "nodeName": "k", "type": "int"}]