[{"lineNumber": 14, "col_offset": 33, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "token_embedder", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "TestBasicTextFieldEmbedder"}, {"lineNumber": 17, "col_offset": 21, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 22, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "self", "type": "TestBasicTextFieldEmbedder"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 36, "col_offset": 65, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 36, "col_offset": 77, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 36, "col_offset": 30, "nodeName": "BasicTextFieldEmbedder", "type": "Any"}, {"lineNumber": 36, "col_offset": 65, "nodeName": "self", "type": "TestBasicTextFieldEmbedder"}, {"lineNumber": 38, "col_offset": 26, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 39, "col_offset": 26, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "get_output_dim", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "self", "type": "TestBasicTextFieldEmbedder"}, {"lineNumber": 47, "col_offset": 32, "nodeName": "self", "type": "TestBasicTextFieldEmbedder"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "self", "type": "TestBasicTextFieldEmbedder"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "token_embedder", "type": "Any"}, {"lineNumber": 50, "col_offset": 32, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "self", "type": "TestBasicTextFieldEmbedder"}, {"lineNumber": 51, "col_offset": 32, "nodeName": "self", "type": "TestBasicTextFieldEmbedder"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "self", "type": "TestBasicTextFieldEmbedder"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "size", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 16, "col_offset": 14, "nodeName": "TestBasicTextFieldEmbedder", "type": "Type[TestBasicTextFieldEmbedder]"}, {"lineNumber": 16, "col_offset": 42, "nodeName": "self", "type": "TestBasicTextFieldEmbedder"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "self", "type": "TestBasicTextFieldEmbedder"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestBasicTextFieldEmbedder"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "self", "type": "TestBasicTextFieldEmbedder"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "self", "type": "TestBasicTextFieldEmbedder"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "LongTensor", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "token_embedder", "type": "Any"}, {"lineNumber": 49, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 50, "col_offset": 12, "nodeName": "self", "type": "TestBasicTextFieldEmbedder"}, {"lineNumber": 50, "col_offset": 32, "nodeName": "self", "type": "TestBasicTextFieldEmbedder"}, {"lineNumber": 38, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 39, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 40, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 44, "col_offset": 15, "nodeName": "self", "type": "TestBasicTextFieldEmbedder"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "token_embedder", "type": "Any"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "inputs", "type": "Dict[str, Any]"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "self", "type": "TestBasicTextFieldEmbedder"}, {"lineNumber": 55, "col_offset": 35, "nodeName": "self", "type": "TestBasicTextFieldEmbedder"}]