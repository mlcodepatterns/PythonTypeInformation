[{"lineNumber": 9, "col_offset": 20, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 80, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "bioul_sequence", "type": "List[str]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 99, "col_offset": 8, "nodeName": "bioul_sequence", "type": "List[str]"}, {"lineNumber": 13, "col_offset": 16, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 13, "col_offset": 45, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 19, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 23, "col_offset": 45, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 29, "col_offset": 45, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 35, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 39, "col_offset": 45, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 45, "col_offset": 45, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 49, "col_offset": 20, "nodeName": "SpacyWordSplitter", "type": "Any"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "split_words", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "enumerate_spans", "type": "Callable[..., List[Tuple[int, int]]]"}, {"lineNumber": 52, "col_offset": 43, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "enumerate_spans", "type": "Callable[..., List[Tuple[int, int]]]"}, {"lineNumber": 56, "col_offset": 43, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "enumerate_spans", "type": "Callable[..., List[Tuple[int, int]]]"}, {"lineNumber": 59, "col_offset": 43, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "enumerate_spans", "type": "Callable[..., List[Tuple[int, int]]]"}, {"lineNumber": 66, "col_offset": 43, "nodeName": "sentence", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "bioul_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 77, "col_offset": 47, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 82, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "bioul_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 86, "col_offset": 47, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 87, "col_offset": 15, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "iob1_to_bioul", "type": "Callable[[List[str]], List[str]]"}, {"lineNumber": 95, "col_offset": 50, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 96, "col_offset": 15, "nodeName": "bioul_sequence", "type": "List[str]"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "iob1_to_bioul", "type": "Callable[[List[str]], List[str]]"}, {"lineNumber": 99, "col_offset": 50, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "bioul_sequence", "type": "List[str]"}, {"lineNumber": 13, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 14, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 19, "col_offset": 49, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 23, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 24, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 24, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 30, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "bio_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 35, "col_offset": 49, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 39, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 40, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 45, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 46, "col_offset": 19, "nodeName": "spans", "type": "List[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 50, "col_offset": 19, "nodeName": "tokenizer", "type": "Any"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 56, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 59, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 66, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 69, "col_offset": 59, "nodeName": "no_prefixed_punctuation", "type": "Callable[[List[allennlp.data.tokenizers.token.Token]], Any]"}, {"lineNumber": 77, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "bioul_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 82, "col_offset": 51, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 86, "col_offset": 16, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "assertRaises", "type": "Callable"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "InvalidTagSequence", "type": "Type[allennlp.data.dataset_readers.dataset_utils.span_utils.InvalidTagSequence]"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "bioul_tags_to_spans", "type": "Callable[..., List[Tuple[str, Tuple[int, int]]]]"}, {"lineNumber": 91, "col_offset": 51, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 95, "col_offset": 25, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 99, "col_offset": 25, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 18, "col_offset": 13, "nodeName": "self", "type": "SpanUtilsTest"}, {"lineNumber": 18, "col_offset": 31, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 19, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 34, "col_offset": 13, "nodeName": "self", "type": "SpanUtilsTest"}, {"lineNumber": 34, "col_offset": 31, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 35, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 62, "col_offset": 44, "nodeName": "List", "type": "Any"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "pos_", "type": "str"}, {"lineNumber": 64, "col_offset": 49, "nodeName": "pos_", "type": "str"}, {"lineNumber": 81, "col_offset": 13, "nodeName": "self", "type": "SpanUtilsTest"}, {"lineNumber": 81, "col_offset": 31, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 82, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "self", "type": "SpanUtilsTest"}, {"lineNumber": 90, "col_offset": 31, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 91, "col_offset": 20, "nodeName": "span_utils", "type": "module"}, {"lineNumber": 62, "col_offset": 49, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 64, "col_offset": 19, "nodeName": "tokens", "type": "List[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 64, "col_offset": 49, "nodeName": "tokens", "type": "List[allennlp.data.tokenizers.token.Token]"}]