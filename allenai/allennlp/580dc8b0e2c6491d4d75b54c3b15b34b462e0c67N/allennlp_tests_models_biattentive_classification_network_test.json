[{"lineNumber": 12, "col_offset": 43, "nodeName": "ModelTestCase", "type": "Type[allennlp.common.testing.model_test_case.ModelTestCase]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 82, "col_offset": 8, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 19, "col_offset": 50, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "ensure_batch_predictions_are_consistent", "type": "Callable[[], None]"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 49, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 49, "col_offset": 30, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 55, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 62, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 62, "col_offset": 30, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 82, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 82, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 87, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 87, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 94, "col_offset": 21, "nodeName": "deepcopy", "type": "Callable"}, {"lineNumber": 94, "col_offset": 30, "nodeName": "params", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 19, "col_offset": 50, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 37, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 37, "col_offset": 34, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 41, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 45, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 45, "col_offset": 34, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 65, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 70, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "params", "type": "Any"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 74, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 79, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 84, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 88, "col_offset": 8, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 89, "col_offset": 8, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 90, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 96, "col_offset": 8, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 98, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 102, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 108, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 14, "col_offset": 14, "nodeName": "BiattentiveClassificationNetworkTest", "type": "Type[BiattentiveClassificationNetworkTest]"}, {"lineNumber": 14, "col_offset": 52, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 15, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 16, "col_offset": 26, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 23, "col_offset": 50, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 27, "col_offset": 50, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 31, "col_offset": 50, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 41, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 42, "col_offset": 12, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 58, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 65, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 66, "col_offset": 12, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 74, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 84, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 90, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 95, "col_offset": 8, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 98, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 99, "col_offset": 12, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 102, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 108, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 15, "col_offset": 26, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 16, "col_offset": 26, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 23, "col_offset": 50, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 27, "col_offset": 50, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 31, "col_offset": 50, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 42, "col_offset": 36, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 42, "col_offset": 55, "nodeName": "get", "type": "Any"}, {"lineNumber": 52, "col_offset": 36, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 52, "col_offset": 55, "nodeName": "get", "type": "Any"}, {"lineNumber": 59, "col_offset": 36, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 59, "col_offset": 55, "nodeName": "get", "type": "Any"}, {"lineNumber": 66, "col_offset": 36, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 66, "col_offset": 55, "nodeName": "get", "type": "Any"}, {"lineNumber": 70, "col_offset": 34, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 75, "col_offset": 36, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 75, "col_offset": 55, "nodeName": "get", "type": "Any"}, {"lineNumber": 79, "col_offset": 34, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 85, "col_offset": 36, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 85, "col_offset": 55, "nodeName": "get", "type": "Any"}, {"lineNumber": 91, "col_offset": 36, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 91, "col_offset": 55, "nodeName": "get", "type": "Any"}, {"lineNumber": 99, "col_offset": 36, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 99, "col_offset": 55, "nodeName": "get", "type": "Any"}, {"lineNumber": 42, "col_offset": 55, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 52, "col_offset": 55, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 59, "col_offset": 55, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 66, "col_offset": 55, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 75, "col_offset": 55, "nodeName": "params", "type": "Any"}, {"lineNumber": 85, "col_offset": 55, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 91, "col_offset": 55, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 99, "col_offset": 55, "nodeName": "tmp_params", "type": "Any"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 105, "col_offset": 20, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}, {"lineNumber": 111, "col_offset": 20, "nodeName": "self", "type": "BiattentiveClassificationNetworkTest"}]