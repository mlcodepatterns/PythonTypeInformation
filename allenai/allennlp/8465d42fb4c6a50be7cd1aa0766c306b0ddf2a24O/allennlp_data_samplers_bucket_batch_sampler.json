[{"lineNumber": 9, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 13, "col_offset": 25, "nodeName": "BatchSampler", "type": "Type[allennlp.data.samplers.samplers.BatchSampler]"}, {"lineNumber": 9, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 9, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 9, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "sorting_keys", "type": "List[Tuple[str, str]]"}, {"lineNumber": 61, "col_offset": 28, "nodeName": "sorting_keys", "type": "List[Tuple[str, str]]"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "padding_noise", "type": "float"}, {"lineNumber": 62, "col_offset": 29, "nodeName": "padding_noise", "type": "float"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 63, "col_offset": 26, "nodeName": "batch_size", "type": "int"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 64, "col_offset": 27, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "drop_last", "type": "bool"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "drop_last", "type": "bool"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "instances_with_lengths", "type": "List[Tuple[List[float], allennlp.data.instance.Instance]]"}, {"lineNumber": 78, "col_offset": 12, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 78, "col_offset": 24, "nodeName": "instances", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 97, "col_offset": 8, "nodeName": "with_indices", "type": "List[Tuple[Tuple[List[float], allennlp.data.instance.Instance], int]]"}, {"lineNumber": 67, "col_offset": 68, "nodeName": "List", "type": "Any"}, {"lineNumber": 103, "col_offset": 8, "nodeName": "indices", "type": "Any"}, {"lineNumber": 104, "col_offset": 12, "nodeName": "group", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 26, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 124, "col_offset": 8, "nodeName": "max_length", "type": "float"}, {"lineNumber": 125, "col_offset": 8, "nodeName": "longest_padding_key", "type": "Tuple[str, str]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "sorting_keys", "type": "List[Tuple[str, str]]"}, {"lineNumber": 57, "col_offset": 19, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "sorting_keys", "type": "Any"}, {"lineNumber": 81, "col_offset": 12, "nodeName": "padding_lengths", "type": "Dict[str, Dict[str, float]]"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "sort", "type": "Callable[..., None]"}, {"lineNumber": 67, "col_offset": 73, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "_argsort_by_padding", "type": "Any"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 104, "col_offset": 21, "nodeName": "lazy_groups_of", "type": "Callable"}, {"lineNumber": 104, "col_offset": 36, "nodeName": "indices", "type": "Any"}, {"lineNumber": 104, "col_offset": 45, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 105, "col_offset": 12, "nodeName": "batch_indices", "type": "List[Any]"}, {"lineNumber": 110, "col_offset": 80, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "i", "type": "int"}, {"lineNumber": 126, "col_offset": 15, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 126, "col_offset": 27, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 126, "col_offset": 37, "nodeName": "instances", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 128, "col_offset": 12, "nodeName": "padding_lengths", "type": "Dict[str, Dict[str, float]]"}, {"lineNumber": 138, "col_offset": 15, "nodeName": "longest_padding_key", "type": "Tuple[str, str]"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 145, "col_offset": 29, "nodeName": "longest_padding_key", "type": "Tuple[str, str]"}, {"lineNumber": 148, "col_offset": 40, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 67, "col_offset": 45, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "_guess_sorting_keys", "type": "Any"}, {"lineNumber": 75, "col_offset": 37, "nodeName": "instances", "type": "Iterable[allennlp.data.instance.Instance]"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "info", "type": "Callable[..., None]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "index_fields", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 81, "col_offset": 30, "nodeName": "cast", "type": "Callable"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "padding_noise", "type": "Any"}, {"lineNumber": 83, "col_offset": 16, "nodeName": "noisy_lengths", "type": "Dict[str, Dict[str, float]]"}, {"lineNumber": 88, "col_offset": 16, "nodeName": "padding_lengths", "type": "Dict[str, Dict[str, float]]"}, {"lineNumber": 88, "col_offset": 34, "nodeName": "noisy_lengths", "type": "Dict[str, Dict[str, float]]"}, {"lineNumber": 94, "col_offset": 16, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "append", "type": "Callable"}, {"lineNumber": 96, "col_offset": 42, "nodeName": "instance_with_lengths", "type": "Tuple[List[float], allennlp.data.instance.Instance]"}, {"lineNumber": 97, "col_offset": 25, "nodeName": "x", "type": "Tuple[List[float], allennlp.data.instance.Instance]"}, {"lineNumber": 97, "col_offset": 28, "nodeName": "i", "type": "int"}, {"lineNumber": 98, "col_offset": 8, "nodeName": "with_indices", "type": "List[Tuple[Tuple[List[float], allennlp.data.instance.Instance], int]]"}, {"lineNumber": 99, "col_offset": 16, "nodeName": "instance_with_index", "type": "Tuple[Tuple[List[float], allennlp.data.instance.Instance], int]"}, {"lineNumber": 99, "col_offset": 44, "nodeName": "instance_with_index", "type": "Tuple[Tuple[List[float], allennlp.data.instance.Instance], int]"}, {"lineNumber": 99, "col_offset": 67, "nodeName": "with_indices", "type": "List[Tuple[Tuple[List[float], allennlp.data.instance.Instance], int]]"}, {"lineNumber": 103, "col_offset": 18, "nodeName": "self", "type": "Any"}, {"lineNumber": 103, "col_offset": 43, "nodeName": "self", "type": "Any"}, {"lineNumber": 104, "col_offset": 45, "nodeName": "self", "type": "Any"}, {"lineNumber": 105, "col_offset": 28, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 105, "col_offset": 33, "nodeName": "group", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "drop_last", "type": "Any"}, {"lineNumber": 108, "col_offset": 18, "nodeName": "batch_indices", "type": "List[Any]"}, {"lineNumber": 101, "col_offset": 35, "nodeName": "List", "type": "Any"}, {"lineNumber": 110, "col_offset": 45, "nodeName": "Iterable", "type": "Any"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "index_fields", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 127, "col_offset": 34, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 128, "col_offset": 30, "nodeName": "cast", "type": "Callable"}, {"lineNumber": 129, "col_offset": 16, "nodeName": "field_name", "type": "str"}, {"lineNumber": 129, "col_offset": 28, "nodeName": "field_padding", "type": "Dict[str, float]"}, {"lineNumber": 129, "col_offset": 45, "nodeName": "items", "type": "Callable"}, {"lineNumber": 134, "col_offset": 15, "nodeName": "i", "type": "int"}, {"lineNumber": 134, "col_offset": 19, "nodeName": "num_instances", "type": "int"}, {"lineNumber": 148, "col_offset": 15, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "data_source", "type": "Any"}, {"lineNumber": 148, "col_offset": 40, "nodeName": "self", "type": "Any"}, {"lineNumber": 67, "col_offset": 54, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 12, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 80, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 35, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 81, "col_offset": 64, "nodeName": "get_padding_lengths", "type": "Callable[[], Dict[str, Dict[str, int]]]"}, {"lineNumber": 82, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 84, "col_offset": 20, "nodeName": "field_name", "type": "str"}, {"lineNumber": 84, "col_offset": 32, "nodeName": "field_lengths", "type": "Dict[str, float]"}, {"lineNumber": 84, "col_offset": 49, "nodeName": "items", "type": "Callable"}, {"lineNumber": 96, "col_offset": 12, "nodeName": "instances_with_lengths", "type": "List[Tuple[List[float], allennlp.data.instance.Instance]]"}, {"lineNumber": 97, "col_offset": 35, "nodeName": "i", "type": "int"}, {"lineNumber": 97, "col_offset": 38, "nodeName": "x", "type": "Tuple[List[float], allennlp.data.instance.Instance]"}, {"lineNumber": 97, "col_offset": 43, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 97, "col_offset": 53, "nodeName": "instances_with_lengths", "type": "List[Tuple[List[float], allennlp.data.instance.Instance]]"}, {"lineNumber": 106, "col_offset": 15, "nodeName": "self", "type": "Any"}, {"lineNumber": 106, "col_offset": 55, "nodeName": "batch_size", "type": "Any"}, {"lineNumber": 101, "col_offset": 40, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 110, "col_offset": 54, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 127, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 35, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 128, "col_offset": 64, "nodeName": "get_padding_lengths", "type": "Callable[[], Dict[str, Dict[str, int]]]"}, {"lineNumber": 129, "col_offset": 45, "nodeName": "padding_lengths", "type": "Dict[str, Dict[str, float]]"}, {"lineNumber": 130, "col_offset": 20, "nodeName": "padding_key", "type": "str"}, {"lineNumber": 130, "col_offset": 33, "nodeName": "length", "type": "float"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "items", "type": "Callable"}, {"lineNumber": 148, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "sorting_keys", "type": "Any"}, {"lineNumber": 81, "col_offset": 64, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 84, "col_offset": 49, "nodeName": "padding_lengths", "type": "Dict[str, Dict[str, float]]"}, {"lineNumber": 85, "col_offset": 48, "nodeName": "add_noise_to_dict_values", "type": "Callable"}, {"lineNumber": 86, "col_offset": 24, "nodeName": "field_lengths", "type": "Dict[str, float]"}, {"lineNumber": 86, "col_offset": 39, "nodeName": "padding_noise", "type": "Any"}, {"lineNumber": 92, "col_offset": 53, "nodeName": "sorting_keys", "type": "Any"}, {"lineNumber": 106, "col_offset": 34, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 106, "col_offset": 38, "nodeName": "batch_indices", "type": "List[Any]"}, {"lineNumber": 106, "col_offset": 55, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 64, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 130, "col_offset": 43, "nodeName": "field_padding", "type": "Dict[str, float]"}, {"lineNumber": 131, "col_offset": 23, "nodeName": "length", "type": "float"}, {"lineNumber": 131, "col_offset": 32, "nodeName": "max_length", "type": "float"}, {"lineNumber": 132, "col_offset": 24, "nodeName": "max_length", "type": "float"}, {"lineNumber": 132, "col_offset": 37, "nodeName": "length", "type": "float"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "longest_padding_key", "type": "Tuple[str, str]"}, {"lineNumber": 76, "col_offset": 33, "nodeName": "self", "type": "Any"}, {"lineNumber": 81, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 86, "col_offset": 39, "nodeName": "self", "type": "Any"}, {"lineNumber": 92, "col_offset": 25, "nodeName": "field_name", "type": "Any"}, {"lineNumber": 92, "col_offset": 37, "nodeName": "padding_key", "type": "Any"}, {"lineNumber": 92, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 98, "col_offset": 40, "nodeName": "x", "type": "Any"}, {"lineNumber": 128, "col_offset": 40, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 133, "col_offset": 47, "nodeName": "field_name", "type": "str"}, {"lineNumber": 133, "col_offset": 59, "nodeName": "padding_key", "type": "str"}, {"lineNumber": 81, "col_offset": 45, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 128, "col_offset": 45, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 81, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 81, "col_offset": 55, "nodeName": "float", "type": "Type[float]"}, {"lineNumber": 128, "col_offset": 50, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 128, "col_offset": 55, "nodeName": "float", "type": "Type[float]"}]