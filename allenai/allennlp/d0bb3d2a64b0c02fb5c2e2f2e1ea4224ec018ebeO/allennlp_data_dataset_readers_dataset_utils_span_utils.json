[{"lineNumber": 6, "col_offset": 0, "nodeName": "T", "type": "Any"}, {"lineNumber": 6, "col_offset": 4, "nodeName": "TypeVar", "type": "type"}, {"lineNumber": 6, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 6, "col_offset": 22, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 40, "col_offset": 4, "nodeName": "max_span_width", "type": "int"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "filter_function", "type": "Union[Callable[[List[Any]], bool], Callable[[Any], Any]]"}, {"lineNumber": 42, "col_offset": 4, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "start_index", "type": "int"}, {"lineNumber": 53, "col_offset": 11, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 11, "col_offset": 74, "nodeName": "List", "type": "Any"}, {"lineNumber": 79, "col_offset": 4, "nodeName": "classes_to_ignore", "type": "Union[List[str], List[nothing]]"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "spans", "type": "Set[Union[Tuple[str, Tuple[int, int]], Tuple[Optional[str], Tuple[int, int]]]]"}, {"lineNumber": 81, "col_offset": 4, "nodeName": "span_start", "type": "int"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "span_end", "type": "int"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "active_conll_tag", "type": "None"}, {"lineNumber": 129, "col_offset": 7, "nodeName": "active_conll_tag", "type": "Optional[str]"}, {"lineNumber": 57, "col_offset": 62, "nodeName": "List", "type": "Any"}, {"lineNumber": 40, "col_offset": 21, "nodeName": "max_span_width", "type": "int"}, {"lineNumber": 41, "col_offset": 22, "nodeName": "filter_function", "type": "Callable[[List[Any]], bool]"}, {"lineNumber": 44, "col_offset": 23, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "last_end_index", "type": "int"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "first_end_index", "type": "int"}, {"lineNumber": 47, "col_offset": 12, "nodeName": "end_index", "type": "int"}, {"lineNumber": 79, "col_offset": 24, "nodeName": "classes_to_ignore", "type": "List[str]"}, {"lineNumber": 80, "col_offset": 12, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 84, "col_offset": 8, "nodeName": "index", "type": "int"}, {"lineNumber": 84, "col_offset": 15, "nodeName": "string_tag", "type": "str"}, {"lineNumber": 84, "col_offset": 29, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 84, "col_offset": 39, "nodeName": "tag_sequence", "type": "List[str]"}, {"lineNumber": 86, "col_offset": 8, "nodeName": "bio_tag", "type": "str"}, {"lineNumber": 87, "col_offset": 8, "nodeName": "conll_tag", "type": "str"}, {"lineNumber": 131, "col_offset": 11, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 131, "col_offset": 16, "nodeName": "spans", "type": "Set[Union[Tuple[str, Tuple[int, int]], Tuple[Optional[str], Tuple[int, int]]]]"}, {"lineNumber": 57, "col_offset": 67, "nodeName": "TypedStringSpan", "type": "Type[Tuple[str, Tuple[int, int]]]"}, {"lineNumber": 11, "col_offset": 37, "nodeName": "Callable", "type": "Any"}, {"lineNumber": 40, "col_offset": 39, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 40, "col_offset": 43, "nodeName": "sentence", "type": "List[nothing]"}, {"lineNumber": 44, "col_offset": 29, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 44, "col_offset": 33, "nodeName": "sentence", "type": "List[nothing]"}, {"lineNumber": 45, "col_offset": 25, "nodeName": "min", "type": "Callable"}, {"lineNumber": 46, "col_offset": 26, "nodeName": "min", "type": "Callable"}, {"lineNumber": 47, "col_offset": 25, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 47, "col_offset": 31, "nodeName": "first_end_index", "type": "int"}, {"lineNumber": 47, "col_offset": 48, "nodeName": "last_end_index", "type": "int"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "start", "type": "int"}, {"lineNumber": 49, "col_offset": 12, "nodeName": "end", "type": "int"}, {"lineNumber": 11, "col_offset": 79, "nodeName": "Tuple", "type": "Any"}, {"lineNumber": 57, "col_offset": 41, "nodeName": "List", "type": "Any"}, {"lineNumber": 86, "col_offset": 18, "nodeName": "string_tag", "type": "str"}, {"lineNumber": 87, "col_offset": 20, "nodeName": "string_tag", "type": "str"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "active_conll_tag", "type": "None"}, {"lineNumber": 92, "col_offset": 12, "nodeName": "active_conll_tag", "type": "None"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "add", "type": "Callable"}, {"lineNumber": 45, "col_offset": 29, "nodeName": "start_index", "type": "int"}, {"lineNumber": 45, "col_offset": 43, "nodeName": "max_span_width", "type": "int"}, {"lineNumber": 45, "col_offset": 59, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 45, "col_offset": 63, "nodeName": "sentence", "type": "List[nothing]"}, {"lineNumber": 46, "col_offset": 64, "nodeName": "len", "type": "Callable[[Sized], int]"}, {"lineNumber": 46, "col_offset": 68, "nodeName": "sentence", "type": "List[nothing]"}, {"lineNumber": 48, "col_offset": 20, "nodeName": "offset", "type": "int"}, {"lineNumber": 48, "col_offset": 29, "nodeName": "start_index", "type": "int"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "offset", "type": "int"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "end_index", "type": "int"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "filter_function", "type": "Union[Callable[[Any], Any], Callable[[List[Any]], bool]]"}, {"lineNumber": 57, "col_offset": 46, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 88, "col_offset": 11, "nodeName": "bio_tag", "type": "str"}, {"lineNumber": 88, "col_offset": 29, "nodeName": "conll_tag", "type": "str"}, {"lineNumber": 88, "col_offset": 42, "nodeName": "classes_to_ignore", "type": "Union[List[str], List[nothing]]"}, {"lineNumber": 96, "col_offset": 13, "nodeName": "bio_tag", "type": "str"}, {"lineNumber": 100, "col_offset": 15, "nodeName": "active_conll_tag", "type": "None"}, {"lineNumber": 103, "col_offset": 12, "nodeName": "active_conll_tag", "type": "None"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "spans", "type": "Set[Union[Tuple[str, Tuple[int, int]], Tuple[Optional[str], Tuple[int, int]]]]"}, {"lineNumber": 130, "col_offset": 19, "nodeName": "active_conll_tag", "type": "Optional[str]"}, {"lineNumber": 11, "col_offset": 57, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "start_index", "type": "int"}, {"lineNumber": 46, "col_offset": 44, "nodeName": "min_span_width", "type": "int"}, {"lineNumber": 51, "col_offset": 31, "nodeName": "sentence", "type": "List[nothing]"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "append", "type": "Callable"}, {"lineNumber": 11, "col_offset": 85, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 11, "col_offset": 90, "nodeName": "int", "type": "Type[int]"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "add", "type": "Callable"}, {"lineNumber": 104, "col_offset": 13, "nodeName": "bio_tag", "type": "str"}, {"lineNumber": 107, "col_offset": 15, "nodeName": "active_conll_tag", "type": "None"}, {"lineNumber": 109, "col_offset": 12, "nodeName": "active_conll_tag", "type": "str"}, {"lineNumber": 109, "col_offset": 31, "nodeName": "conll_tag", "type": "str"}, {"lineNumber": 110, "col_offset": 12, "nodeName": "span_start", "type": "int"}, {"lineNumber": 110, "col_offset": 25, "nodeName": "index", "type": "int"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "span_end", "type": "int"}, {"lineNumber": 111, "col_offset": 23, "nodeName": "index", "type": "int"}, {"lineNumber": 130, "col_offset": 38, "nodeName": "span_start", "type": "int"}, {"lineNumber": 130, "col_offset": 50, "nodeName": "span_end", "type": "int"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "spans", "type": "List[Tuple[int, int]]"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "start", "type": "int"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "end", "type": "int"}, {"lineNumber": 102, "col_offset": 12, "nodeName": "spans", "type": "Set[Union[Tuple[str, Tuple[int, int]], Tuple[Optional[str], Tuple[int, int]]]]"}, {"lineNumber": 102, "col_offset": 23, "nodeName": "conll_tag", "type": "str"}, {"lineNumber": 114, "col_offset": 12, "nodeName": "span_end", "type": "int"}, {"lineNumber": 123, "col_offset": 15, "nodeName": "active_conll_tag", "type": "Optional[str]"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "active_conll_tag", "type": "str"}, {"lineNumber": 125, "col_offset": 31, "nodeName": "conll_tag", "type": "str"}, {"lineNumber": 126, "col_offset": 12, "nodeName": "span_start", "type": "int"}, {"lineNumber": 126, "col_offset": 25, "nodeName": "index", "type": "int"}, {"lineNumber": 127, "col_offset": 12, "nodeName": "span_end", "type": "int"}, {"lineNumber": 127, "col_offset": 23, "nodeName": "index", "type": "int"}, {"lineNumber": 11, "col_offset": 47, "nodeName": "List", "type": "Any"}, {"lineNumber": 51, "col_offset": 40, "nodeName": "slice", "type": "Type[slice]"}, {"lineNumber": 51, "col_offset": 46, "nodeName": "start_index", "type": "int"}, {"lineNumber": 102, "col_offset": 35, "nodeName": "index", "type": "int"}, {"lineNumber": 102, "col_offset": 42, "nodeName": "index", "type": "int"}, {"lineNumber": 112, "col_offset": 13, "nodeName": "bio_tag", "type": "str"}, {"lineNumber": 112, "col_offset": 32, "nodeName": "conll_tag", "type": "str"}, {"lineNumber": 112, "col_offset": 45, "nodeName": "active_conll_tag", "type": "Optional[str]"}, {"lineNumber": 11, "col_offset": 52, "nodeName": "T", "type": "Any"}, {"lineNumber": 51, "col_offset": 59, "nodeName": "end_index", "type": "int"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "add", "type": "Callable"}, {"lineNumber": 124, "col_offset": 16, "nodeName": "spans", "type": "Set[Union[Tuple[str, Tuple[int, int]], Tuple[Optional[str], Tuple[int, int]]]]"}, {"lineNumber": 124, "col_offset": 27, "nodeName": "active_conll_tag", "type": "Optional[str]"}, {"lineNumber": 124, "col_offset": 46, "nodeName": "span_start", "type": "int"}, {"lineNumber": 124, "col_offset": 58, "nodeName": "span_end", "type": "int"}]