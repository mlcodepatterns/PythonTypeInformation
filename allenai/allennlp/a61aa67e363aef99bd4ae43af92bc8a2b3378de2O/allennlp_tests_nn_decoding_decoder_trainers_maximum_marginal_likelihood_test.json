[{"lineNumber": 12, "col_offset": 36, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "decoder_step", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "supervision", "type": "Tuple[Any, Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "trainer", "type": "allennlp.nn.decoding.decoder_trainers.maximum_marginal_likelihood.MaximumMarginalLikelihood"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "decoded_info", "type": "Dict[str, Any]"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "instance0_loss", "type": "float"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "instance1_loss", "type": "float"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "expected_loss", "type": "float"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 15, "col_offset": 29, "nodeName": "SimpleDecoderState", "type": "Any"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "self", "type": "TestMaximumMarginalLikelihood"}, {"lineNumber": 19, "col_offset": 28, "nodeName": "SimpleDecoderStep", "type": "Any"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestMaximumMarginalLikelihood"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "targets", "type": "Any"}, {"lineNumber": 25, "col_offset": 42, "nodeName": "target_mask", "type": "Any"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "TestMaximumMarginalLikelihood"}, {"lineNumber": 27, "col_offset": 23, "nodeName": "MaximumMarginalLikelihood", "type": "Type[allennlp.nn.decoding.decoder_trainers.maximum_marginal_likelihood.MaximumMarginalLikelihood]"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "decode", "type": "Callable[[allennlp.nn.decoding.decoder_state.DecoderState[Any], allennlp.nn.decoding.decoder_step.DecoderStep[Any], Tuple[Any, Any]], Dict[str, Any]]"}, {"lineNumber": 30, "col_offset": 43, "nodeName": "initial_state", "type": "Any"}, {"lineNumber": 30, "col_offset": 63, "nodeName": "decoder_step", "type": "Any"}, {"lineNumber": 30, "col_offset": 82, "nodeName": "supervision", "type": "Tuple[Any, Any]"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "log", "type": "Callable[..., float]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 37, "col_offset": 63, "nodeName": "expected_loss", "type": "float"}, {"lineNumber": 20, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 22, "col_offset": 27, "nodeName": "torch", "type": "Any"}, {"lineNumber": 25, "col_offset": 28, "nodeName": "self", "type": "TestMaximumMarginalLikelihood"}, {"lineNumber": 25, "col_offset": 42, "nodeName": "self", "type": "TestMaximumMarginalLikelihood"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "trainer", "type": "allennlp.nn.decoding.decoder_trainers.maximum_marginal_likelihood.MaximumMarginalLikelihood"}, {"lineNumber": 30, "col_offset": 43, "nodeName": "self", "type": "TestMaximumMarginalLikelihood"}, {"lineNumber": 30, "col_offset": 63, "nodeName": "self", "type": "TestMaximumMarginalLikelihood"}, {"lineNumber": 30, "col_offset": 82, "nodeName": "self", "type": "TestMaximumMarginalLikelihood"}, {"lineNumber": 34, "col_offset": 25, "nodeName": "math", "type": "module"}, {"lineNumber": 35, "col_offset": 25, "nodeName": "math", "type": "module"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 17, "col_offset": 49, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 17, "col_offset": 70, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 30, "col_offset": 23, "nodeName": "self", "type": "TestMaximumMarginalLikelihood"}, {"lineNumber": 34, "col_offset": 34, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 35, "col_offset": 49, "nodeName": "exp", "type": "Callable[[SupportsFloat], float]"}, {"lineNumber": 36, "col_offset": 26, "nodeName": "instance0_loss", "type": "float"}, {"lineNumber": 36, "col_offset": 43, "nodeName": "instance1_loss", "type": "float"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 17, "col_offset": 49, "nodeName": "torch", "type": "Any"}, {"lineNumber": 17, "col_offset": 70, "nodeName": "torch", "type": "Any"}, {"lineNumber": 34, "col_offset": 34, "nodeName": "math", "type": "module"}, {"lineNumber": 35, "col_offset": 34, "nodeName": "math", "type": "module"}, {"lineNumber": 35, "col_offset": 49, "nodeName": "math", "type": "module"}, {"lineNumber": 37, "col_offset": 28, "nodeName": "decoded_info", "type": "Dict[str, Any]"}]