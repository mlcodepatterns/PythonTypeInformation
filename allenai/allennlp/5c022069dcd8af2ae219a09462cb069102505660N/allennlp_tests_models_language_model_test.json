[{"lineNumber": 10, "col_offset": 38, "nodeName": "ModelTestCase", "type": "Type[allennlp.common.testing.model_test_case.ModelTestCase]"}, {"lineNumber": 70, "col_offset": 47, "nodeName": "TestUnidirectionalLanguageModel", "type": "Type[TestUnidirectionalLanguageModel]"}, {"lineNumber": 79, "col_offset": 49, "nodeName": "TestUnidirectionalLanguageModel", "type": "Type[TestUnidirectionalLanguageModel]"}, {"lineNumber": 102, "col_offset": 37, "nodeName": "TestUnidirectionalLanguageModel", "type": "Type[TestUnidirectionalLanguageModel]"}, {"lineNumber": 116, "col_offset": 46, "nodeName": "TestBidirectionalLanguageModel", "type": "Type[TestBidirectionalLanguageModel]"}, {"lineNumber": 125, "col_offset": 48, "nodeName": "TestBidirectionalLanguageModel", "type": "Type[TestBidirectionalLanguageModel]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "expected_embedding_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "bidirectional", "type": "bool"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "training_tensors", "type": "Dict[str, Any]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "result", "type": "Any"}, {"lineNumber": 45, "col_offset": 8, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "loss", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "forward_loss", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "bidirectional", "type": "bool"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "instances", "type": "List[allennlp.data.instance.Instance]"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "instances", "type": "List[allennlp.data.instance.Instance]"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "expected_embedding_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "expected_embedding_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "bidirectional", "type": "bool"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "expected_embedding_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "TestBidirectionalLanguageModel"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "self", "type": "TestBidirectionalLanguageModel"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 31, "col_offset": 50, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "ensure_batch_predictions_are_consistent", "type": "Callable[..., None]"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "as_tensor_dict", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 38, "col_offset": 14, "nodeName": "training_tensors", "type": "Dict[str, Any]"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "model", "type": "Any"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "result_keys", "type": "Set[str]"}, {"lineNumber": 45, "col_offset": 21, "nodeName": "result", "type": "Any"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "expected_embedding_shape", "type": "Tuple[int, int, int]"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "item", "type": "Any"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "item", "type": "Any"}, {"lineNumber": 50, "col_offset": 11, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "from_file", "type": "Callable[..., allennlp.common.params.Params]"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 60, "col_offset": 65, "nodeName": "bidirectional", "type": "bool"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "dataset", "type": "allennlp.data.batch.Batch"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "forward_on_instances", "type": "Any"}, {"lineNumber": 66, "col_offset": 54, "nodeName": "instances", "type": "List[allennlp.data.instance.Instance]"}, {"lineNumber": 67, "col_offset": 15, "nodeName": "predictions", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "TestUnidirectionalLanguageModelTransformer"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[..., Tuple[Any, Any]]"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 106, "col_offset": 8, "nodeName": "self", "type": "TestBidirectionalLanguageModel"}, {"lineNumber": 107, "col_offset": 8, "nodeName": "self", "type": "TestBidirectionalLanguageModel"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "add", "type": "Callable"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], Any]"}, {"lineNumber": 129, "col_offset": 8, "nodeName": "self", "type": "TestBidirectionalLanguageModelTransformer"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "TestBidirectionalLanguageModel"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 31, "col_offset": 50, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "dataset", "type": "allennlp.data.batch.Batch"}, {"lineNumber": 39, "col_offset": 17, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 39, "col_offset": 30, "nodeName": "training_tensors", "type": "Dict[str, Any]"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 42, "col_offset": 19, "nodeName": "result", "type": "Any"}, {"lineNumber": 42, "col_offset": 30, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 46, "col_offset": 15, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "shape", "type": "Any"}, {"lineNumber": 46, "col_offset": 42, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 54, "col_offset": 43, "nodeName": "loss", "type": "Any"}, {"lineNumber": 54, "col_offset": 49, "nodeName": "forward_loss", "type": "Any"}, {"lineNumber": 57, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 60, "col_offset": 65, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 61, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "from_params", "type": "Any"}, {"lineNumber": 65, "col_offset": 20, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "model", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "TestUnidirectionalLanguageModelUnsampled"}, {"lineNumber": 85, "col_offset": 8, "nodeName": "self", "type": "TestUnidirectionalLanguageModelTransformer"}, {"lineNumber": 93, "col_offset": 8, "nodeName": "self", "type": "TestUnidirectionalLanguageModelTransformer"}, {"lineNumber": 94, "col_offset": 12, "nodeName": "self", "type": "TestUnidirectionalLanguageModelTransformer"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "result_keys", "type": "Set[str]"}, {"lineNumber": 110, "col_offset": 8, "nodeName": "self", "type": "TestBidirectionalLanguageModel"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "self", "type": "TestBidirectionalLanguageModelUnsampled"}, {"lineNumber": 131, "col_offset": 8, "nodeName": "self", "type": "TestBidirectionalLanguageModelTransformer"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 37, "col_offset": 27, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 46, "col_offset": 21, "nodeName": "embeddings", "type": "Any"}, {"lineNumber": 48, "col_offset": 15, "nodeName": "result", "type": "Any"}, {"lineNumber": 49, "col_offset": 23, "nodeName": "result", "type": "Any"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "testing", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 61, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 62, "col_offset": 12, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "vocab", "type": "Any"}, {"lineNumber": 66, "col_offset": 22, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 104, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 108, "col_offset": 8, "nodeName": "self", "type": "TestBidirectionalLanguageModel"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "FIXTURES_ROOT", "type": "pathlib.Path"}, {"lineNumber": 26, "col_offset": 12, "nodeName": "self", "type": "TestBidirectionalLanguageModel"}, {"lineNumber": 27, "col_offset": 12, "nodeName": "self", "type": "TestBidirectionalLanguageModel"}, {"lineNumber": 54, "col_offset": 12, "nodeName": "np", "type": "module"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "self", "type": "TestUnidirectionalLanguageModel"}, {"lineNumber": 62, "col_offset": 55, "nodeName": "get", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "self", "type": "TestUnidirectionalLanguageModelUnsampled"}, {"lineNumber": 75, "col_offset": 12, "nodeName": "self", "type": "TestUnidirectionalLanguageModelUnsampled"}, {"lineNumber": 86, "col_offset": 12, "nodeName": "self", "type": "TestUnidirectionalLanguageModelTransformer"}, {"lineNumber": 87, "col_offset": 12, "nodeName": "self", "type": "TestUnidirectionalLanguageModelTransformer"}, {"lineNumber": 111, "col_offset": 12, "nodeName": "self", "type": "TestBidirectionalLanguageModel"}, {"lineNumber": 112, "col_offset": 12, "nodeName": "self", "type": "TestBidirectionalLanguageModel"}, {"lineNumber": 120, "col_offset": 12, "nodeName": "self", "type": "TestBidirectionalLanguageModelUnsampled"}, {"lineNumber": 121, "col_offset": 12, "nodeName": "self", "type": "TestBidirectionalLanguageModelUnsampled"}, {"lineNumber": 132, "col_offset": 12, "nodeName": "self", "type": "TestBidirectionalLanguageModelTransformer"}, {"lineNumber": 133, "col_offset": 12, "nodeName": "self", "type": "TestBidirectionalLanguageModelTransformer"}, {"lineNumber": 62, "col_offset": 55, "nodeName": "params", "type": "allennlp.common.params.Params"}]