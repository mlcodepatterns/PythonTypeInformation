[{"lineNumber": 14, "col_offset": 37, "nodeName": "ModelTestCase", "type": "Type[allennlp.common.testing.model_test_case.ModelTestCase]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "training_arrays", "type": "Dict[str, Any]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "_", "type": "Dict[str, Any]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "question", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "span_begin_probs", "type": "Any"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "span_end_probs", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "begin_end_idxs", "type": "Any"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "span_begin_probs", "type": "Any"}, {"lineNumber": 57, "col_offset": 8, "nodeName": "span_end_probs", "type": "Any"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "begin_end_idxs", "type": "Any"}, {"lineNumber": 63, "col_offset": 8, "nodeName": "span_begin_probs", "type": "Any"}, {"lineNumber": 64, "col_offset": 8, "nodeName": "span_end_probs", "type": "Any"}, {"lineNumber": 65, "col_offset": 8, "nodeName": "begin_end_idxs", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "span_begin_probs", "type": "Any"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "span_end_probs", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "begin_end_idxs", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "set_up_model", "type": "Callable[[Any, Any], None]"}, {"lineNumber": 20, "col_offset": 26, "nodeName": "arrays_to_variables", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "forward", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "ensure_model_can_train_save_and_load", "type": "Callable[[str], Tuple[allennlp.models.model.Model, allennlp.models.model.Model]]"}, {"lineNumber": 24, "col_offset": 50, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 29, "col_offset": 19, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 30, "col_offset": 18, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "predict_span", "type": "Any"}, {"lineNumber": 32, "col_offset": 46, "nodeName": "question", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 32, "col_offset": 56, "nodeName": "passage", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 37, "col_offset": 20, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 37, "col_offset": 31, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 42, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 42, "col_offset": 56, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "log", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "log", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "_get_best_span", "type": "Any"}, {"lineNumber": 51, "col_offset": 67, "nodeName": "span_begin_probs", "type": "Any"}, {"lineNumber": 51, "col_offset": 85, "nodeName": "span_end_probs", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "log", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "log", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "_get_best_span", "type": "Any"}, {"lineNumber": 58, "col_offset": 67, "nodeName": "span_begin_probs", "type": "Any"}, {"lineNumber": 58, "col_offset": 85, "nodeName": "span_end_probs", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "log", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "log", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "_get_best_span", "type": "Any"}, {"lineNumber": 65, "col_offset": 67, "nodeName": "span_begin_probs", "type": "Any"}, {"lineNumber": 65, "col_offset": 85, "nodeName": "span_end_probs", "type": "Any"}, {"lineNumber": 66, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "log", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "log", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "_get_best_span", "type": "Any"}, {"lineNumber": 73, "col_offset": 67, "nodeName": "span_begin_probs", "type": "Any"}, {"lineNumber": 73, "col_offset": 85, "nodeName": "span_end_probs", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "assert_almost_equal", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 20, "col_offset": 46, "nodeName": "as_array_dict", "type": "Callable[..., Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]]"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 21, "col_offset": 33, "nodeName": "training_arrays", "type": "Dict[str, Any]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 24, "col_offset": 50, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 29, "col_offset": 69, "nodeName": "token_indexers", "type": "Dict[str, Any]"}, {"lineNumber": 30, "col_offset": 59, "nodeName": "STOP_TOKEN", "type": "Any"}, {"lineNumber": 31, "col_offset": 43, "nodeName": "token_indexers", "type": "Dict[str, Any]"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "sum", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "sequence_length", "type": "Any"}, {"lineNumber": 42, "col_offset": 26, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 51, "col_offset": 25, "nodeName": "BidirectionalAttentionFlow", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 58, "col_offset": 25, "nodeName": "BidirectionalAttentionFlow", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "BidirectionalAttentionFlow", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 73, "col_offset": 25, "nodeName": "BidirectionalAttentionFlow", "type": "Any"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 16, "col_offset": 14, "nodeName": "BidirectionalAttentionFlowTest", "type": "Type[BidirectionalAttentionFlowTest]"}, {"lineNumber": 16, "col_offset": 46, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 20, "col_offset": 46, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 21, "col_offset": 12, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 29, "col_offset": 69, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 30, "col_offset": 59, "nodeName": "SquadReader", "type": "Any"}, {"lineNumber": 31, "col_offset": 43, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 32, "col_offset": 22, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 34, "col_offset": 38, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "numpy", "type": "module"}, {"lineNumber": 35, "col_offset": 38, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 40, "col_offset": 26, "nodeName": "passage", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 49, "col_offset": 27, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 50, "col_offset": 25, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 56, "col_offset": 27, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 57, "col_offset": 25, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 63, "col_offset": 27, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 64, "col_offset": 25, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 71, "col_offset": 27, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 72, "col_offset": 25, "nodeName": "Variable", "type": "Any"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 20, "col_offset": 46, "nodeName": "self", "type": "BidirectionalAttentionFlowTest"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 52, "col_offset": 28, "nodeName": "begin_end_idxs", "type": "Any"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 59, "col_offset": 28, "nodeName": "begin_end_idxs", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 66, "col_offset": 28, "nodeName": "begin_end_idxs", "type": "Any"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "FloatTensor", "type": "Any"}, {"lineNumber": 74, "col_offset": 28, "nodeName": "begin_end_idxs", "type": "Any"}, {"lineNumber": 49, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 56, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 57, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 64, "col_offset": 34, "nodeName": "torch", "type": "Any"}, {"lineNumber": 71, "col_offset": 36, "nodeName": "torch", "type": "Any"}, {"lineNumber": 72, "col_offset": 34, "nodeName": "torch", "type": "Any"}]