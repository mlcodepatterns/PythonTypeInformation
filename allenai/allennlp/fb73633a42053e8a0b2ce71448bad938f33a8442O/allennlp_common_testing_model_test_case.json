[{"lineNumber": 13, "col_offset": 20, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 16, "col_offset": 26, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 22, "col_offset": 21, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 24, "col_offset": 23, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "token_indexers", "type": "Dict[str, Any]"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "_token_indexers", "type": "Dict[str, Any]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "save_dir", "type": "str"}, {"lineNumber": 31, "col_offset": 8, "nodeName": "archive_file", "type": "str"}, {"lineNumber": 32, "col_offset": 8, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 33, "col_offset": 8, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 34, "col_offset": 8, "nodeName": "state_keys", "type": "Any"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "loaded_state_keys", "type": "Any"}, {"lineNumber": 38, "col_offset": 12, "nodeName": "key", "type": "Any"}, {"lineNumber": 38, "col_offset": 19, "nodeName": "state_keys", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 44, "col_offset": 8, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 48, "col_offset": 8, "nodeName": "model_dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 50, "col_offset": 8, "nodeName": "model_batch_arrays", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "model_batch", "type": "Dict[str, Any]"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "loaded_dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 54, "col_offset": 8, "nodeName": "loaded_batch_arrays", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "loaded_batch", "type": "Dict[str, Any]"}, {"lineNumber": 58, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "model_predictions", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "loaded_model_predictions", "type": "Dict[str, Any]"}, {"lineNumber": 79, "col_offset": 8, "nodeName": "loaded_model_loss", "type": "Any"}, {"lineNumber": 84, "col_offset": 12, "nodeName": "key", "type": "str"}, {"lineNumber": 16, "col_offset": 8, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "from_file", "type": "Callable[[str], allennlp.common.params.Params]"}, {"lineNumber": 17, "col_offset": 34, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "read", "type": "Callable[[str], allennlp.data.dataset.Dataset]"}, {"lineNumber": 20, "col_offset": 30, "nodeName": "dataset_file", "type": "Any"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "from_dataset", "type": "Callable[..., allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 21, "col_offset": 40, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "index_instances", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 23, "col_offset": 32, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 25, "col_offset": 30, "nodeName": "reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "from_params", "type": "Callable[[Any, allennlp.data.vocabulary.Vocabulary, allennlp.common.params.Params], allennlp.models.model.Model]"}, {"lineNumber": 27, "col_offset": 39, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 29, "col_offset": 63, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "join", "type": "Callable"}, {"lineNumber": 30, "col_offset": 32, "nodeName": "TEST_DIR", "type": "str"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "join", "type": "Callable"}, {"lineNumber": 31, "col_offset": 36, "nodeName": "save_dir", "type": "str"}, {"lineNumber": 32, "col_offset": 16, "nodeName": "train_model_from_file", "type": "Callable[[str, str], allennlp.models.model.Model]"}, {"lineNumber": 32, "col_offset": 38, "nodeName": "param_file", "type": "str"}, {"lineNumber": 32, "col_offset": 50, "nodeName": "save_dir", "type": "str"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "keys", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "keys", "type": "Any"}, {"lineNumber": 36, "col_offset": 15, "nodeName": "state_keys", "type": "Any"}, {"lineNumber": 36, "col_offset": 29, "nodeName": "loaded_state_keys", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "from_file", "type": "Callable[[str], allennlp.common.params.Params]"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "param_file", "type": "Any"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.data.iterators.data_iterator.DataIterator]"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "read", "type": "Callable[[str], allennlp.data.dataset.Dataset]"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "index_instances", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 50, "col_offset": 29, "nodeName": "next", "type": "Callable"}, {"lineNumber": 51, "col_offset": 22, "nodeName": "arrays_to_variables", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 51, "col_offset": 42, "nodeName": "model_batch_arrays", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "read", "type": "Callable[[str], allennlp.data.dataset.Dataset]"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "index_instances", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "next", "type": "Callable"}, {"lineNumber": 55, "col_offset": 23, "nodeName": "arrays_to_variables", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 55, "col_offset": 43, "nodeName": "loaded_batch_arrays", "type": "Dict[str, Union[numpy.ndarray, Dict[str, numpy.ndarray]]]"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "field", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "eval", "type": "Any"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "forward", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "forward", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 79, "col_offset": 28, "nodeName": "loaded_model_predictions", "type": "Dict[str, Any]"}, {"lineNumber": 80, "col_offset": 15, "nodeName": "loaded_model_loss", "type": "Any"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "backward", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "keys", "type": "Callable"}, {"lineNumber": 90, "col_offset": 15, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 90, "col_offset": 22, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 17, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 17, "col_offset": 34, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 19, "col_offset": 17, "nodeName": "DatasetReader", "type": "Type[allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 19, "col_offset": 43, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 20, "col_offset": 18, "nodeName": "reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 21, "col_offset": 16, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 27, "col_offset": 21, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 27, "col_offset": 39, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 27, "col_offset": 51, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "path", "type": "module"}, {"lineNumber": 30, "col_offset": 32, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "path", "type": "module"}, {"lineNumber": 33, "col_offset": 23, "nodeName": "load_archive", "type": "Callable[..., allennlp.models.archival.Archive]"}, {"lineNumber": 33, "col_offset": 36, "nodeName": "archive_file", "type": "str"}, {"lineNumber": 39, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 42, "col_offset": 17, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 42, "col_offset": 34, "nodeName": "self", "type": "ModelTestCase"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "DatasetReader", "type": "Type[allennlp.data.dataset_readers.dataset_reader.DatasetReader]"}, {"lineNumber": 43, "col_offset": 43, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 44, "col_offset": 19, "nodeName": "DataIterator", "type": "Type[allennlp.data.iterators.data_iterator.DataIterator]"}, {"lineNumber": 44, "col_offset": 44, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 48, "col_offset": 24, "nodeName": "reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 48, "col_offset": 36, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 49, "col_offset": 8, "nodeName": "model_dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 49, "col_offset": 38, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 50, "col_offset": 34, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 50, "col_offset": 43, "nodeName": "model_dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 52, "col_offset": 25, "nodeName": "reader", "type": "allennlp.data.dataset_readers.dataset_reader.DatasetReader"}, {"lineNumber": 52, "col_offset": 37, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 53, "col_offset": 8, "nodeName": "loaded_dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 53, "col_offset": 39, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 54, "col_offset": 35, "nodeName": "iterator", "type": "allennlp.data.iterators.data_iterator.DataIterator"}, {"lineNumber": 54, "col_offset": 44, "nodeName": "loaded_dataset", "type": "allennlp.data.dataset.Dataset"}, {"lineNumber": 58, "col_offset": 19, "nodeName": "model_batch", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 20, "nodeName": "model_batch", "type": "Dict[str, Any]"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "field", "type": "Any"}, {"lineNumber": 60, "col_offset": 33, "nodeName": "dict", "type": "Type[Dict[Any, Any]]"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "subfield", "type": "Any"}, {"lineNumber": 61, "col_offset": 32, "nodeName": "field", "type": "Any"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 75, "col_offset": 28, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 75, "col_offset": 44, "nodeName": "model_batch", "type": "Dict[str, Any]"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 76, "col_offset": 58, "nodeName": "loaded_batch", "type": "Dict[str, Any]"}, {"lineNumber": 81, "col_offset": 8, "nodeName": "loaded_model_loss", "type": "Any"}, {"lineNumber": 84, "col_offset": 19, "nodeName": "model_predictions", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 12, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "os", "type": "module"}, {"lineNumber": 31, "col_offset": 23, "nodeName": "os", "type": "module"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 41, "col_offset": 36, "nodeName": "key", "type": "Any"}, {"lineNumber": 59, "col_offset": 32, "nodeName": "key", "type": "str"}, {"lineNumber": 67, "col_offset": 16, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 88, "col_offset": 36, "nodeName": "key", "type": "str"}, {"lineNumber": 34, "col_offset": 21, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 35, "col_offset": 28, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 62, "col_offset": 20, "nodeName": "assert_allclose", "type": "Any"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 70, "col_offset": 40, "nodeName": "key", "type": "str"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "data", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "data", "type": "Any"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 39, "col_offset": 47, "nodeName": "key", "type": "Any"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "state_dict", "type": "Any"}, {"lineNumber": 40, "col_offset": 54, "nodeName": "key", "type": "Any"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "data", "type": "Any"}, {"lineNumber": 65, "col_offset": 56, "nodeName": "subfield", "type": "Any"}, {"lineNumber": 85, "col_offset": 28, "nodeName": "model_predictions", "type": "Dict[str, Any]"}, {"lineNumber": 86, "col_offset": 28, "nodeName": "loaded_model_predictions", "type": "Dict[str, Any]"}, {"lineNumber": 39, "col_offset": 28, "nodeName": "model", "type": "allennlp.models.model.Model"}, {"lineNumber": 40, "col_offset": 28, "nodeName": "loaded_model", "type": "allennlp.models.model.Model"}, {"lineNumber": 65, "col_offset": 44, "nodeName": "key", "type": "str"}, {"lineNumber": 67, "col_offset": 32, "nodeName": "model_batch", "type": "Dict[str, Any]"}, {"lineNumber": 68, "col_offset": 32, "nodeName": "loaded_batch", "type": "Dict[str, Any]"}, {"lineNumber": 85, "col_offset": 46, "nodeName": "key", "type": "str"}, {"lineNumber": 86, "col_offset": 53, "nodeName": "key", "type": "str"}, {"lineNumber": 67, "col_offset": 44, "nodeName": "key", "type": "str"}, {"lineNumber": 68, "col_offset": 45, "nodeName": "key", "type": "str"}, {"lineNumber": 62, "col_offset": 36, "nodeName": "model_batch", "type": "Dict[str, Any]"}, {"lineNumber": 62, "col_offset": 53, "nodeName": "subfield", "type": "Any"}, {"lineNumber": 63, "col_offset": 36, "nodeName": "loaded_batch", "type": "Dict[str, Any]"}, {"lineNumber": 63, "col_offset": 54, "nodeName": "subfield", "type": "Any"}, {"lineNumber": 62, "col_offset": 48, "nodeName": "key", "type": "str"}, {"lineNumber": 63, "col_offset": 49, "nodeName": "key", "type": "str"}]