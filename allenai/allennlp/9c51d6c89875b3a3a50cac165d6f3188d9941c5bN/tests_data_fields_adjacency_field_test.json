[{"lineNumber": 10, "col_offset": 25, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 25, "col_offset": 8, "nodeName": "indices", "type": "List[Tuple[int, int]]"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "adjacency_field", "type": "allennlp.data.fields.adjacency_field.AdjacencyField"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "field", "type": "allennlp.data.fields.adjacency_field.AdjacencyField"}, {"lineNumber": 56, "col_offset": 8, "nodeName": "empty_field", "type": "Any"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "adjacency_field", "type": "allennlp.data.fields.adjacency_field.AdjacencyField"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "setup_method", "type": "Callable[[], None]"}, {"lineNumber": 13, "col_offset": 20, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 19, "col_offset": 16, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "add_token_to_namespace", "type": "Callable[..., int]"}, {"lineNumber": 26, "col_offset": 26, "nodeName": "AdjacencyField", "type": "Type[allennlp.data.fields.adjacency_field.AdjacencyField]"}, {"lineNumber": 26, "col_offset": 41, "nodeName": "indices", "type": "List[Tuple[int, int]]"}, {"lineNumber": 26, "col_offset": 50, "nodeName": "text", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 26, "col_offset": 61, "nodeName": "labels", "type": "List[str]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "index", "type": "Any"}, {"lineNumber": 27, "col_offset": 30, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "as_tensor", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "assert_equal", "type": "Any"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "_", "type": "allennlp.data.fields.adjacency_field.AdjacencyField"}, {"lineNumber": 48, "col_offset": 12, "nodeName": "_", "type": "allennlp.data.fields.adjacency_field.AdjacencyField"}, {"lineNumber": 52, "col_offset": 12, "nodeName": "_", "type": "allennlp.data.fields.adjacency_field.AdjacencyField"}, {"lineNumber": 55, "col_offset": 16, "nodeName": "AdjacencyField", "type": "Type[allennlp.data.fields.adjacency_field.AdjacencyField]"}, {"lineNumber": 55, "col_offset": 41, "nodeName": "text", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "empty_field", "type": "Any"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "indices", "type": "Any"}, {"lineNumber": 60, "col_offset": 26, "nodeName": "AdjacencyField", "type": "Type[allennlp.data.fields.adjacency_field.AdjacencyField]"}, {"lineNumber": 60, "col_offset": 51, "nodeName": "text", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 61, "col_offset": 14, "nodeName": "adjacency_field", "type": "allennlp.data.fields.adjacency_field.AdjacencyField"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 26, "col_offset": 50, "nodeName": "self", "type": "TestAdjacencyField"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "adjacency_field", "type": "allennlp.data.fields.adjacency_field.AdjacencyField"}, {"lineNumber": 28, "col_offset": 17, "nodeName": "adjacency_field", "type": "allennlp.data.fields.adjacency_field.AdjacencyField"}, {"lineNumber": 28, "col_offset": 43, "nodeName": "get_padding_lengths", "type": "Any"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 43, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 44, "col_offset": 16, "nodeName": "AdjacencyField", "type": "Type[allennlp.data.fields.adjacency_field.AdjacencyField]"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "text", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 47, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 48, "col_offset": 16, "nodeName": "AdjacencyField", "type": "Type[allennlp.data.fields.adjacency_field.AdjacencyField]"}, {"lineNumber": 48, "col_offset": 49, "nodeName": "text", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 51, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 52, "col_offset": 16, "nodeName": "AdjacencyField", "type": "Type[allennlp.data.fields.adjacency_field.AdjacencyField]"}, {"lineNumber": 52, "col_offset": 49, "nodeName": "text", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 55, "col_offset": 41, "nodeName": "self", "type": "TestAdjacencyField"}, {"lineNumber": 56, "col_offset": 22, "nodeName": "field", "type": "allennlp.data.fields.adjacency_field.AdjacencyField"}, {"lineNumber": 57, "col_offset": 15, "nodeName": "empty_field", "type": "Any"}, {"lineNumber": 60, "col_offset": 51, "nodeName": "self", "type": "TestAdjacencyField"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 14, "col_offset": 13, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "t", "type": "str"}, {"lineNumber": 14, "col_offset": 26, "nodeName": "t", "type": "str"}, {"lineNumber": 15, "col_offset": 22, "nodeName": "SingleIdTokenIndexer", "type": "Any"}, {"lineNumber": 28, "col_offset": 43, "nodeName": "adjacency_field", "type": "allennlp.data.fields.adjacency_field.AdjacencyField"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 31, "col_offset": 12, "nodeName": "numpy", "type": "module"}, {"lineNumber": 43, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 44, "col_offset": 42, "nodeName": "self", "type": "TestAdjacencyField"}, {"lineNumber": 47, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 48, "col_offset": 49, "nodeName": "self", "type": "TestAdjacencyField"}, {"lineNumber": 51, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 52, "col_offset": 49, "nodeName": "self", "type": "TestAdjacencyField"}]