[{"lineNumber": 10, "col_offset": 24, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "parents", "type": "List[int]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "current_nodes", "type": "List[bool]"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "parents", "type": "List[int]"}, {"lineNumber": 22, "col_offset": 15, "nodeName": "has_cycle", "type": "bool"}, {"lineNumber": 26, "col_offset": 8, "nodeName": "parents", "type": "List[int]"}, {"lineNumber": 27, "col_offset": 8, "nodeName": "current_nodes", "type": "List[bool]"}, {"lineNumber": 35, "col_offset": 8, "nodeName": "parents", "type": "List[int]"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "current_nodes", "type": "List[bool]"}, {"lineNumber": 40, "col_offset": 15, "nodeName": "has_cycle", "type": "bool"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "energy", "type": "Any"}, {"lineNumber": 51, "col_offset": 8, "nodeName": "energy", "type": "Any"}, {"lineNumber": 55, "col_offset": 8, "nodeName": "label_id_matrix", "type": "Any"}, {"lineNumber": 77, "col_offset": 8, "nodeName": "energy", "type": "Any"}, {"lineNumber": 15, "col_offset": 8, "nodeName": "has_cycle", "type": "bool"}, {"lineNumber": 15, "col_offset": 19, "nodeName": "cycle", "type": "List[int]"}, {"lineNumber": 15, "col_offset": 27, "nodeName": "_find_cycle", "type": "Callable[[List[int], int, List[Optional[bool]]], Tuple[bool, List[int]]]"}, {"lineNumber": 15, "col_offset": 39, "nodeName": "parents", "type": "List[int]"}, {"lineNumber": 15, "col_offset": 51, "nodeName": "current_nodes", "type": "List[bool]"}, {"lineNumber": 16, "col_offset": 19, "nodeName": "has_cycle", "type": "bool"}, {"lineNumber": 17, "col_offset": 19, "nodeName": "cycle", "type": "List[int]"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "has_cycle", "type": "bool"}, {"lineNumber": 21, "col_offset": 19, "nodeName": "cycle", "type": "List[int]"}, {"lineNumber": 21, "col_offset": 27, "nodeName": "_find_cycle", "type": "Callable[[List[int], int, List[Optional[bool]]], Tuple[bool, List[int]]]"}, {"lineNumber": 21, "col_offset": 39, "nodeName": "parents", "type": "List[int]"}, {"lineNumber": 21, "col_offset": 51, "nodeName": "current_nodes", "type": "List[bool]"}, {"lineNumber": 23, "col_offset": 15, "nodeName": "cycle", "type": "List[int]"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "current_nodes", "type": "List[bool]"}, {"lineNumber": 29, "col_offset": 8, "nodeName": "current_nodes", "type": "List[bool]"}, {"lineNumber": 30, "col_offset": 8, "nodeName": "has_cycle", "type": "bool"}, {"lineNumber": 30, "col_offset": 19, "nodeName": "cycle", "type": "List[int]"}, {"lineNumber": 30, "col_offset": 27, "nodeName": "_find_cycle", "type": "Callable[[List[int], int, List[Optional[bool]]], Tuple[bool, List[int]]]"}, {"lineNumber": 30, "col_offset": 39, "nodeName": "parents", "type": "List[int]"}, {"lineNumber": 30, "col_offset": 51, "nodeName": "current_nodes", "type": "List[bool]"}, {"lineNumber": 31, "col_offset": 19, "nodeName": "has_cycle", "type": "bool"}, {"lineNumber": 32, "col_offset": 15, "nodeName": "cycle", "type": "List[int]"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "current_nodes", "type": "List[bool]"}, {"lineNumber": 38, "col_offset": 8, "nodeName": "current_nodes", "type": "List[bool]"}, {"lineNumber": 39, "col_offset": 8, "nodeName": "has_cycle", "type": "bool"}, {"lineNumber": 39, "col_offset": 19, "nodeName": "cycle", "type": "List[int]"}, {"lineNumber": 39, "col_offset": 27, "nodeName": "_find_cycle", "type": "Callable[[List[int], int, List[Optional[bool]]], Tuple[bool, List[int]]]"}, {"lineNumber": 39, "col_offset": 39, "nodeName": "parents", "type": "List[int]"}, {"lineNumber": 39, "col_offset": 51, "nodeName": "current_nodes", "type": "List[bool]"}, {"lineNumber": 41, "col_offset": 15, "nodeName": "cycle", "type": "List[int]"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "heads", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 15, "nodeName": "types", "type": "numpy.ndarray"}, {"lineNumber": 47, "col_offset": 23, "nodeName": "decode_mst", "type": "Callable[..., Tuple[numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 47, "col_offset": 34, "nodeName": "energy", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "rand", "type": "Any"}, {"lineNumber": 52, "col_offset": 8, "nodeName": "heads", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "types", "type": "numpy.ndarray"}, {"lineNumber": 52, "col_offset": 23, "nodeName": "decode_mst", "type": "Callable[..., Tuple[numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 52, "col_offset": 34, "nodeName": "energy", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "argmax", "type": "Any"}, {"lineNumber": 59, "col_offset": 12, "nodeName": "child", "type": "int"}, {"lineNumber": 59, "col_offset": 19, "nodeName": "parent", "type": "Any"}, {"lineNumber": 59, "col_offset": 29, "nodeName": "enumerate", "type": "Type[enumerate[Any]]"}, {"lineNumber": 59, "col_offset": 39, "nodeName": "heads", "type": "numpy.ndarray"}, {"lineNumber": 69, "col_offset": 12, "nodeName": "energy", "type": "Any"}, {"lineNumber": 73, "col_offset": 12, "nodeName": "energy", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "view", "type": "Any"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "heads", "type": "numpy.ndarray"}, {"lineNumber": 78, "col_offset": 15, "nodeName": "_", "type": "numpy.ndarray"}, {"lineNumber": 78, "col_offset": 19, "nodeName": "decode_mst", "type": "Callable[..., Tuple[numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 14, "col_offset": 34, "nodeName": "_", "type": "int"}, {"lineNumber": 27, "col_offset": 34, "nodeName": "_", "type": "int"}, {"lineNumber": 36, "col_offset": 34, "nodeName": "_", "type": "int"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "random", "type": "Any"}, {"lineNumber": 55, "col_offset": 26, "nodeName": "energy", "type": "Any"}, {"lineNumber": 63, "col_offset": 15, "nodeName": "child", "type": "int"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 68, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 70, "col_offset": 12, "nodeName": "decode_mst", "type": "Callable[..., Tuple[numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 70, "col_offset": 23, "nodeName": "energy", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 72, "col_offset": 27, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "rand", "type": "Any"}, {"lineNumber": 74, "col_offset": 12, "nodeName": "decode_mst", "type": "Callable[..., Tuple[numpy.ndarray, numpy.ndarray]]"}, {"lineNumber": 74, "col_offset": 23, "nodeName": "energy", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 79, "col_offset": 15, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 79, "col_offset": 20, "nodeName": "heads", "type": "numpy.ndarray"}, {"lineNumber": 14, "col_offset": 39, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 27, "col_offset": 39, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 36, "col_offset": 39, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 46, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 48, "col_offset": 19, "nodeName": "_find_cycle", "type": "Callable[[List[int], int, List[Optional[bool]]], Tuple[bool, List[int]]]"}, {"lineNumber": 48, "col_offset": 31, "nodeName": "heads", "type": "numpy.ndarray"}, {"lineNumber": 51, "col_offset": 17, "nodeName": "numpy", "type": "module"}, {"lineNumber": 54, "col_offset": 19, "nodeName": "_find_cycle", "type": "Callable[[List[int], int, List[Optional[bool]]], Tuple[bool, List[int]]]"}, {"lineNumber": 54, "col_offset": 31, "nodeName": "heads", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 19, "nodeName": "types", "type": "numpy.ndarray"}, {"lineNumber": 65, "col_offset": 35, "nodeName": "label_id_matrix", "type": "Any"}, {"lineNumber": 68, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 72, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "random", "type": "Any"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "arange", "type": "Any"}, {"lineNumber": 78, "col_offset": 30, "nodeName": "energy", "type": "Any"}, {"lineNumber": 65, "col_offset": 25, "nodeName": "child", "type": "int"}, {"lineNumber": 69, "col_offset": 21, "nodeName": "numpy", "type": "module"}, {"lineNumber": 73, "col_offset": 21, "nodeName": "numpy", "type": "module"}, {"lineNumber": 77, "col_offset": 17, "nodeName": "torch", "type": "Any"}, {"lineNumber": 65, "col_offset": 51, "nodeName": "parent", "type": "Any"}, {"lineNumber": 65, "col_offset": 59, "nodeName": "child", "type": "int"}]