[{"lineNumber": 7, "col_offset": 20, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 9, "col_offset": 8, "nodeName": "flag_field", "type": "allennlp.data.fields.flag_field.FlagField"}, {"lineNumber": 13, "col_offset": 12, "nodeName": "value", "type": "Union[bool, float, str]"}, {"lineNumber": 17, "col_offset": 8, "nodeName": "flag", "type": "allennlp.data.fields.flag_field.FlagField"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "value", "type": "bool"}, {"lineNumber": 22, "col_offset": 8, "nodeName": "fields", "type": "List[allennlp.data.fields.flag_field.FlagField]"}, {"lineNumber": 23, "col_offset": 8, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 24, "col_offset": 8, "nodeName": "batched_value", "type": "Any"}, {"lineNumber": 28, "col_offset": 8, "nodeName": "field", "type": "allennlp.data.fields.flag_field.FlagField"}, {"lineNumber": 9, "col_offset": 21, "nodeName": "FlagField", "type": "Type[allennlp.data.fields.flag_field.FlagField]"}, {"lineNumber": 17, "col_offset": 15, "nodeName": "FlagField", "type": "Type[allennlp.data.fields.flag_field.FlagField]"}, {"lineNumber": 18, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 18, "col_offset": 14, "nodeName": "flag", "type": "allennlp.data.fields.flag_field.FlagField"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "batch_tensors", "type": "Any"}, {"lineNumber": 24, "col_offset": 48, "nodeName": "values", "type": "List[Any]"}, {"lineNumber": 25, "col_offset": 15, "nodeName": "batched_value", "type": "Any"}, {"lineNumber": 25, "col_offset": 32, "nodeName": "value", "type": "bool"}, {"lineNumber": 28, "col_offset": 16, "nodeName": "FlagField", "type": "Type[allennlp.data.fields.flag_field.FlagField]"}, {"lineNumber": 10, "col_offset": 15, "nodeName": "get_padding_lengths", "type": "Any"}, {"lineNumber": 14, "col_offset": 53, "nodeName": "value", "type": "Union[float, bool, str]"}, {"lineNumber": 22, "col_offset": 18, "nodeName": "FlagField", "type": "Type[allennlp.data.fields.flag_field.FlagField]"}, {"lineNumber": 22, "col_offset": 28, "nodeName": "value", "type": "bool"}, {"lineNumber": 22, "col_offset": 39, "nodeName": "_", "type": "int"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "as_tensor", "type": "Any"}, {"lineNumber": 23, "col_offset": 42, "nodeName": "field", "type": "allennlp.data.fields.flag_field.FlagField"}, {"lineNumber": 23, "col_offset": 51, "nodeName": "fields", "type": "List[allennlp.data.fields.flag_field.FlagField]"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 29, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "batch_tensors", "type": "Any"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "batch_tensors", "type": "Any"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 35, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "batch_tensors", "type": "Any"}, {"lineNumber": 10, "col_offset": 15, "nodeName": "flag_field", "type": "allennlp.data.fields.flag_field.FlagField"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "as_tensor", "type": "Any"}, {"lineNumber": 22, "col_offset": 44, "nodeName": "range", "type": "Type[range]"}, {"lineNumber": 23, "col_offset": 18, "nodeName": "field", "type": "allennlp.data.fields.flag_field.FlagField"}, {"lineNumber": 24, "col_offset": 24, "nodeName": "fields", "type": "List[allennlp.data.fields.flag_field.FlagField]"}, {"lineNumber": 29, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 30, "col_offset": 12, "nodeName": "field", "type": "allennlp.data.fields.flag_field.FlagField"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "field", "type": "allennlp.data.fields.flag_field.FlagField"}, {"lineNumber": 35, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 36, "col_offset": 12, "nodeName": "field", "type": "allennlp.data.fields.flag_field.FlagField"}, {"lineNumber": 14, "col_offset": 19, "nodeName": "FlagField", "type": "Type[allennlp.data.fields.flag_field.FlagField]"}, {"lineNumber": 14, "col_offset": 29, "nodeName": "value", "type": "Union[float, bool, str]"}]