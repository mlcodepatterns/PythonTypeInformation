[{"lineNumber": 49, "col_offset": 0, "nodeName": "create_parser", "type": "Callable[..., argparse.ArgumentParser]"}, {"lineNumber": 73, "col_offset": 0, "nodeName": "main", "type": "Callable[..., None]"}, {"lineNumber": 18, "col_offset": 0, "nodeName": "logger", "type": "logging.Logger"}, {"lineNumber": 21, "col_offset": 33, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 49, "col_offset": 49, "nodeName": "ArgumentParser", "type": "Type[argparse.ArgumentParser]"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "getLogger", "type": "Callable[..., logging.Logger]"}, {"lineNumber": 18, "col_offset": 27, "nodeName": "__name__", "type": "str"}, {"lineNumber": 21, "col_offset": 33, "nodeName": "argparse", "type": "module"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "_action_defaults_to_ignore", "type": "Set[str]"}, {"lineNumber": 30, "col_offset": 43, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 53, "col_offset": 4, "nodeName": "parser", "type": "ArgumentParserWithDefaults"}, {"lineNumber": 56, "col_offset": 4, "nodeName": "subparsers", "type": "argparse._SubParsersAction"}, {"lineNumber": 58, "col_offset": 8, "nodeName": "subcommand_name", "type": "str"}, {"lineNumber": 70, "col_offset": 11, "nodeName": "parser", "type": "ArgumentParserWithDefaults"}, {"lineNumber": 49, "col_offset": 49, "nodeName": "argparse", "type": "module"}, {"lineNumber": 82, "col_offset": 4, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 83, "col_offset": 4, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 18, "col_offset": 9, "nodeName": "logging", "type": "module"}, {"lineNumber": 40, "col_offset": 8, "nodeName": "default", "type": "Optional[Any]"}, {"lineNumber": 53, "col_offset": 13, "nodeName": "ArgumentParserWithDefaults", "type": "Type[ArgumentParserWithDefaults]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "add_argument", "type": "Any"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "add_subparsers", "type": "Callable[..., argparse._SubParsersAction]"}, {"lineNumber": 58, "col_offset": 27, "nodeName": "sorted", "type": "Callable"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "subcommand_class", "type": "Callable[..., allennlp.commands.subcommand.Subcommand]"}, {"lineNumber": 60, "col_offset": 8, "nodeName": "subcommand", "type": "allennlp.commands.subcommand.Subcommand"}, {"lineNumber": 61, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 80, "col_offset": 4, "nodeName": "import_plugins", "type": "Callable[[], None]"}, {"lineNumber": 82, "col_offset": 13, "nodeName": "create_parser", "type": "Callable[..., argparse.ArgumentParser]"}, {"lineNumber": 82, "col_offset": 27, "nodeName": "prog", "type": "Optional[str]"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "parse_args", "type": "Callable"}, {"lineNumber": 90, "col_offset": 12, "nodeName": "package_name", "type": "Any"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "include_package", "type": "Any"}, {"lineNumber": 30, "col_offset": 35, "nodeName": "Any", "type": "Any"}, {"lineNumber": 31, "col_offset": 11, "nodeName": "default", "type": "Any"}, {"lineNumber": 33, "col_offset": 11, "nodeName": "isinstance", "type": "Callable[[Any, Union[Type[Any], Tuple[Union[Type[Any], Tuple[Type[Any], ...]], ...]]], bool]"}, {"lineNumber": 33, "col_offset": 22, "nodeName": "default", "type": "Any"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "get", "type": "Callable"}, {"lineNumber": 44, "col_offset": 12, "nodeName": "description", "type": "Union[Any, str]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 49, "col_offset": 24, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 53, "col_offset": 73, "nodeName": "prog", "type": "Optional[str]"}, {"lineNumber": 54, "col_offset": 4, "nodeName": "parser", "type": "ArgumentParserWithDefaults"}, {"lineNumber": 56, "col_offset": 17, "nodeName": "parser", "type": "ArgumentParserWithDefaults"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "list_available", "type": "Callable[[Any], List[str]]"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "by_name", "type": "Callable"}, {"lineNumber": 59, "col_offset": 46, "nodeName": "subcommand_name", "type": "str"}, {"lineNumber": 60, "col_offset": 21, "nodeName": "subcommand_class", "type": "Callable[..., allennlp.commands.subcommand.Subcommand]"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "add_subparser", "type": "Callable[[argparse._SubParsersAction], argparse.ArgumentParser]"}, {"lineNumber": 61, "col_offset": 45, "nodeName": "subparsers", "type": "argparse._SubParsersAction"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "add_argument", "type": "Callable[..., argparse.Action]"}, {"lineNumber": 73, "col_offset": 15, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 83, "col_offset": 11, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 88, "col_offset": 17, "nodeName": "dir", "type": "Callable[..., List[str]]"}, {"lineNumber": 88, "col_offset": 21, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 90, "col_offset": 28, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "func", "type": "Any"}, {"lineNumber": 92, "col_offset": 18, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "print_help", "type": "Callable[..., None]"}, {"lineNumber": 33, "col_offset": 32, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 33, "col_offset": 37, "nodeName": "list", "type": "Type[List[Any]]"}, {"lineNumber": 33, "col_offset": 43, "nodeName": "tuple", "type": "Type[Tuple[Any, ...]]"}, {"lineNumber": 33, "col_offset": 50, "nodeName": "set", "type": "Type[Set[Any]]"}, {"lineNumber": 40, "col_offset": 18, "nodeName": "kwargs", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "_action_defaults_to_ignore", "type": "Any"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "get", "type": "Callable"}, {"lineNumber": 45, "col_offset": 12, "nodeName": "kwargs", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 46, "col_offset": 30, "nodeName": "args", "type": "Tuple[Any, ...]"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "kwargs", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 49, "col_offset": 33, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 58, "col_offset": 34, "nodeName": "Subcommand", "type": "Type[allennlp.commands.subcommand.Subcommand]"}, {"lineNumber": 59, "col_offset": 27, "nodeName": "Subcommand", "type": "Type[allennlp.commands.subcommand.Subcommand]"}, {"lineNumber": 61, "col_offset": 20, "nodeName": "subcommand", "type": "allennlp.commands.subcommand.Subcommand"}, {"lineNumber": 62, "col_offset": 8, "nodeName": "subparser", "type": "argparse.ArgumentParser"}, {"lineNumber": 64, "col_offset": 17, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 73, "col_offset": 24, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 91, "col_offset": 12, "nodeName": "import_module_and_submodules", "type": "Callable[[str], None]"}, {"lineNumber": 91, "col_offset": 41, "nodeName": "package_name", "type": "Any"}, {"lineNumber": 92, "col_offset": 8, "nodeName": "args", "type": "argparse.Namespace"}, {"lineNumber": 94, "col_offset": 8, "nodeName": "parser", "type": "argparse.ArgumentParser"}, {"lineNumber": 34, "col_offset": 23, "nodeName": "bool", "type": "Type[bool]"}, {"lineNumber": 34, "col_offset": 28, "nodeName": "default", "type": "Any"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "get", "type": "Callable"}, {"lineNumber": 43, "col_offset": 17, "nodeName": "self", "type": "Any"}, {"lineNumber": 43, "col_offset": 57, "nodeName": "_is_empty_default", "type": "Any"}, {"lineNumber": 43, "col_offset": 80, "nodeName": "default", "type": "Optional[Any]"}, {"lineNumber": 44, "col_offset": 26, "nodeName": "kwargs", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 45, "col_offset": 32, "nodeName": "description", "type": "Union[Any, str]"}, {"lineNumber": 45, "col_offset": 57, "nodeName": "default", "type": "Optional[Any]"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 54, "col_offset": 75, "nodeName": "__version__", "type": "str"}, {"lineNumber": 41, "col_offset": 11, "nodeName": "kwargs", "type": "Dict[str, Union[Any, str]]"}, {"lineNumber": 43, "col_offset": 57, "nodeName": "self", "type": "Any"}]