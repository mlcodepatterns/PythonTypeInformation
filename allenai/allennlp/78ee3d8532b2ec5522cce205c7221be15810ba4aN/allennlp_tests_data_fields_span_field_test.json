[{"lineNumber": 11, "col_offset": 20, "nodeName": "AllenNlpTestCase", "type": "Type[allennlp.common.testing.test_case.AllenNlpTestCase]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "indexers", "type": "Dict[str, Any]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "span_field", "type": "allennlp.data.fields.span_field.SpanField"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "span_field", "type": "allennlp.data.fields.span_field.SpanField"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "empty_span", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "span_field", "type": "allennlp.data.fields.span_field.SpanField"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "span_field1", "type": "allennlp.data.fields.span_field.SpanField"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "span_field2", "type": "allennlp.data.fields.span_field.SpanField"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "setUp", "type": "Callable[[], None]"}, {"lineNumber": 14, "col_offset": 8, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 15, "col_offset": 20, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 16, "col_offset": 30, "nodeName": "indexers", "type": "Dict[str, Any]"}, {"lineNumber": 19, "col_offset": 21, "nodeName": "SpanField", "type": "Type[allennlp.data.fields.span_field.SpanField]"}, {"lineNumber": 19, "col_offset": 37, "nodeName": "text", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 21, "col_offset": 41, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "_", "type": "allennlp.data.fields.span_field.SpanField"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "_", "type": "allennlp.data.fields.span_field.SpanField"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "_", "type": "allennlp.data.fields.span_field.SpanField"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "SpanField", "type": "Type[allennlp.data.fields.span_field.SpanField]"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "text", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "empty_field", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "SpanField", "type": "Type[allennlp.data.fields.span_field.SpanField]"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "text", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 43, "col_offset": 8, "nodeName": "print", "type": "Callable[..., None]"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "span_field", "type": "allennlp.data.fields.span_field.SpanField"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "SpanField", "type": "Type[allennlp.data.fields.span_field.SpanField]"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "text", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "SpanField", "type": "Type[allennlp.data.fields.span_field.SpanField]"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "text", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "SpanField", "type": "Type[allennlp.data.fields.span_field.SpanField]"}, {"lineNumber": 51, "col_offset": 15, "nodeName": "span_field1", "type": "allennlp.data.fields.span_field.SpanField"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "span_field1", "type": "allennlp.data.fields.span_field.SpanField"}, {"lineNumber": 52, "col_offset": 30, "nodeName": "span_field1", "type": "allennlp.data.fields.span_field.SpanField"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "span_field1", "type": "allennlp.data.fields.span_field.SpanField"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "span_field2", "type": "allennlp.data.fields.span_field.SpanField"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "span_field1", "type": "allennlp.data.fields.span_field.SpanField"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "span_field3", "type": "allennlp.data.fields.span_field.SpanField"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "span_field2", "type": "allennlp.data.fields.span_field.SpanField"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "span_field3", "type": "allennlp.data.fields.span_field.SpanField"}, {"lineNumber": 14, "col_offset": 34, "nodeName": "SingleIdTokenIndexer", "type": "Any"}, {"lineNumber": 16, "col_offset": 30, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 19, "col_offset": 37, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 21, "col_offset": 49, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "SpanField", "type": "Type[allennlp.data.fields.span_field.SpanField]"}, {"lineNumber": 25, "col_offset": 38, "nodeName": "text", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "SpanField", "type": "Type[allennlp.data.fields.span_field.SpanField]"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "text", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "SpanField", "type": "Type[allennlp.data.fields.span_field.SpanField]"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "text", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "span_field", "type": "allennlp.data.fields.span_field.SpanField"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "empty_span", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "empty_span", "type": "Any"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 48, "col_offset": 38, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 49, "col_offset": 48, "nodeName": "indexers", "type": "Dict[str, Any]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 13, "col_offset": 14, "nodeName": "TestSpanField", "type": "Type[TestSpanField]"}, {"lineNumber": 13, "col_offset": 29, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 15, "col_offset": 31, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 15, "col_offset": 37, "nodeName": "t", "type": "str"}, {"lineNumber": 15, "col_offset": 44, "nodeName": "t", "type": "str"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 21, "col_offset": 49, "nodeName": "numpy", "type": "module"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 25, "col_offset": 38, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 49, "col_offset": 48, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 48, "col_offset": 49, "nodeName": "Token", "type": "Type[allennlp.data.tokenizers.token.Token]"}, {"lineNumber": 48, "col_offset": 55, "nodeName": "t", "type": "str"}, {"lineNumber": 48, "col_offset": 62, "nodeName": "t", "type": "str"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "detach", "type": "Any"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "as_tensor", "type": "Any"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "span_field", "type": "allennlp.data.fields.span_field.SpanField"}, {"lineNumber": 20, "col_offset": 38, "nodeName": "get_padding_lengths", "type": "Any"}, {"lineNumber": 20, "col_offset": 38, "nodeName": "span_field", "type": "allennlp.data.fields.span_field.SpanField"}]