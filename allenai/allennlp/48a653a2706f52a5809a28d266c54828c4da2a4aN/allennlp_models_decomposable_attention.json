[{"lineNumber": 17, "col_offset": 28, "nodeName": "Model", "type": "Type[allennlp.models.model.Model]"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "_vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 69, "col_offset": 22, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "_text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 70, "col_offset": 36, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "_attend_feedforward", "type": "allennlp.modules.time_distributed.TimeDistributed"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "_matrix_attention", "type": "allennlp.modules.matrix_attention.MatrixAttention"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "_compare_feedforward", "type": "allennlp.modules.time_distributed.TimeDistributed"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "_aggregate_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 74, "col_offset": 38, "nodeName": "aggregate_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "_premise_encoder", "type": "Optional[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 75, "col_offset": 32, "nodeName": "premise_encoder", "type": "Optional[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "_hypothesis_encoder", "type": "Optional[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "_num_labels", "type": "int"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "_loss", "type": "Any"}, {"lineNumber": 115, "col_offset": 8, "nodeName": "embedded_premise", "type": "Any"}, {"lineNumber": 116, "col_offset": 8, "nodeName": "embedded_hypothesis", "type": "Any"}, {"lineNumber": 117, "col_offset": 8, "nodeName": "premise_mask", "type": "Any"}, {"lineNumber": 118, "col_offset": 8, "nodeName": "hypothesis_mask", "type": "Any"}, {"lineNumber": 119, "col_offset": 8, "nodeName": "premise_sequence_lengths", "type": "Any"}, {"lineNumber": 120, "col_offset": 8, "nodeName": "hypothesis_sequence_lengths", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "_premise_encoder", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "_hypothesis_encoder", "type": "Any"}, {"lineNumber": 127, "col_offset": 8, "nodeName": "projected_premise", "type": "Any"}, {"lineNumber": 128, "col_offset": 8, "nodeName": "projected_hypothesis", "type": "Any"}, {"lineNumber": 130, "col_offset": 8, "nodeName": "similarity_matrix", "type": "Any"}, {"lineNumber": 133, "col_offset": 8, "nodeName": "p2h_attention", "type": "Any"}, {"lineNumber": 135, "col_offset": 8, "nodeName": "attended_hypothesis", "type": "Any"}, {"lineNumber": 138, "col_offset": 8, "nodeName": "h2p_attention", "type": "Any"}, {"lineNumber": 140, "col_offset": 8, "nodeName": "attended_premise", "type": "Any"}, {"lineNumber": 142, "col_offset": 8, "nodeName": "premise_compare_input", "type": "Any"}, {"lineNumber": 143, "col_offset": 8, "nodeName": "hypothesis_compare_input", "type": "Any"}, {"lineNumber": 145, "col_offset": 8, "nodeName": "compared_premise", "type": "Any"}, {"lineNumber": 146, "col_offset": 8, "nodeName": "compared_premise", "type": "Any"}, {"lineNumber": 148, "col_offset": 8, "nodeName": "compared_premise", "type": "Any"}, {"lineNumber": 150, "col_offset": 8, "nodeName": "compared_hypothesis", "type": "Any"}, {"lineNumber": 151, "col_offset": 8, "nodeName": "compared_hypothesis", "type": "Any"}, {"lineNumber": 153, "col_offset": 8, "nodeName": "compared_hypothesis", "type": "Any"}, {"lineNumber": 155, "col_offset": 8, "nodeName": "aggregate_input", "type": "Any"}, {"lineNumber": 156, "col_offset": 8, "nodeName": "label_logits", "type": "Any"}, {"lineNumber": 157, "col_offset": 8, "nodeName": "label_probs", "type": "Any"}, {"lineNumber": 159, "col_offset": 8, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 167, "col_offset": 15, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 50, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 186, "col_offset": 8, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 191, "col_offset": 8, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 194, "col_offset": 8, "nodeName": "label_probs", "type": "Any"}, {"lineNumber": 169, "col_offset": 79, "nodeName": "Dict", "type": "Any"}, {"lineNumber": 216, "col_offset": 8, "nodeName": "embedder_params", "type": "Any"}, {"lineNumber": 217, "col_offset": 8, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 219, "col_offset": 8, "nodeName": "premise_encoder_params", "type": "Any"}, {"lineNumber": 225, "col_offset": 8, "nodeName": "hypothesis_encoder_params", "type": "Any"}, {"lineNumber": 237, "col_offset": 8, "nodeName": "attend_params", "type": "Any"}, {"lineNumber": 238, "col_offset": 8, "nodeName": "attend_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 240, "col_offset": 8, "nodeName": "default_similarity_function_params", "type": "Dict[str, str]"}, {"lineNumber": 241, "col_offset": 8, "nodeName": "similarity_function_params", "type": "Any"}, {"lineNumber": 242, "col_offset": 8, "nodeName": "similarity_function", "type": "allennlp.modules.similarity_function.SimilarityFunction"}, {"lineNumber": 250, "col_offset": 8, "nodeName": "compare_params", "type": "Any"}, {"lineNumber": 251, "col_offset": 8, "nodeName": "compare_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 259, "col_offset": 8, "nodeName": "aggregate_params", "type": "Any"}, {"lineNumber": 260, "col_offset": 8, "nodeName": "aggregate_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "__init__", "type": "Any"}, {"lineNumber": 69, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 70, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 71, "col_offset": 35, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 71, "col_offset": 51, "nodeName": "attend_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 72, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 72, "col_offset": 33, "nodeName": "MatrixAttention", "type": "Type[allennlp.modules.matrix_attention.MatrixAttention]"}, {"lineNumber": 72, "col_offset": 49, "nodeName": "similarity_function", "type": "allennlp.modules.similarity_function.SimilarityFunction"}, {"lineNumber": 73, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 73, "col_offset": 36, "nodeName": "TimeDistributed", "type": "Type[allennlp.modules.time_distributed.TimeDistributed]"}, {"lineNumber": 73, "col_offset": 52, "nodeName": "compare_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 74, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 75, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 76, "col_offset": 35, "nodeName": "hypothesis_encoder", "type": "Optional[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 76, "col_offset": 57, "nodeName": "premise_encoder", "type": "Optional[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 78, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "get_vocab_size", "type": "Callable[..., int]"}, {"lineNumber": 79, "col_offset": 53, "nodeName": "_num_labels", "type": "int"}, {"lineNumber": 83, "col_offset": 8, "nodeName": "self", "type": "Any"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "CrossEntropyLoss", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "IntTensor", "type": "Any"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 115, "col_offset": 53, "nodeName": "premise", "type": "Dict[str, Any]"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "_text_field_embedder", "type": "Any"}, {"lineNumber": 116, "col_offset": 56, "nodeName": "hypothesis", "type": "Dict[str, Any]"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "float", "type": "Any"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "float", "type": "Any"}, {"lineNumber": 119, "col_offset": 35, "nodeName": "get_lengths_from_binary_sequence_mask", "type": "Callable[[Any], Any]"}, {"lineNumber": 119, "col_offset": 73, "nodeName": "premise_mask", "type": "Any"}, {"lineNumber": 120, "col_offset": 38, "nodeName": "get_lengths_from_binary_sequence_mask", "type": "Callable[[Any], Any]"}, {"lineNumber": 120, "col_offset": 76, "nodeName": "hypothesis_mask", "type": "Any"}, {"lineNumber": 122, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 12, "nodeName": "embedded_premise", "type": "Any"}, {"lineNumber": 124, "col_offset": 11, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 12, "nodeName": "embedded_hypothesis", "type": "Any"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "_attend_feedforward", "type": "Any"}, {"lineNumber": 127, "col_offset": 53, "nodeName": "embedded_premise", "type": "Any"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "_attend_feedforward", "type": "Any"}, {"lineNumber": 128, "col_offset": 56, "nodeName": "embedded_hypothesis", "type": "Any"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "_matrix_attention", "type": "Any"}, {"lineNumber": 130, "col_offset": 51, "nodeName": "projected_premise", "type": "Any"}, {"lineNumber": 130, "col_offset": 70, "nodeName": "projected_hypothesis", "type": "Any"}, {"lineNumber": 133, "col_offset": 24, "nodeName": "last_dim_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 133, "col_offset": 41, "nodeName": "similarity_matrix", "type": "Any"}, {"lineNumber": 133, "col_offset": 60, "nodeName": "hypothesis_mask", "type": "Any"}, {"lineNumber": 135, "col_offset": 30, "nodeName": "weighted_sum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 135, "col_offset": 43, "nodeName": "embedded_hypothesis", "type": "Any"}, {"lineNumber": 135, "col_offset": 64, "nodeName": "p2h_attention", "type": "Any"}, {"lineNumber": 138, "col_offset": 24, "nodeName": "last_dim_softmax", "type": "Callable[..., Any]"}, {"lineNumber": 138, "col_offset": 89, "nodeName": "premise_mask", "type": "Any"}, {"lineNumber": 140, "col_offset": 27, "nodeName": "weighted_sum", "type": "Callable[[Any, Any], Any]"}, {"lineNumber": 140, "col_offset": 40, "nodeName": "embedded_premise", "type": "Any"}, {"lineNumber": 140, "col_offset": 58, "nodeName": "h2p_attention", "type": "Any"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "cat", "type": "Any"}, {"lineNumber": 143, "col_offset": 35, "nodeName": "cat", "type": "Any"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "_compare_feedforward", "type": "Any"}, {"lineNumber": 145, "col_offset": 53, "nodeName": "premise_compare_input", "type": "Any"}, {"lineNumber": 146, "col_offset": 27, "nodeName": "compared_premise", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "sum", "type": "Any"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "_compare_feedforward", "type": "Any"}, {"lineNumber": 150, "col_offset": 56, "nodeName": "hypothesis_compare_input", "type": "Any"}, {"lineNumber": 151, "col_offset": 30, "nodeName": "compared_hypothesis", "type": "Any"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "sum", "type": "Any"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "cat", "type": "Any"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "_aggregate_feedforward", "type": "Any"}, {"lineNumber": 156, "col_offset": 51, "nodeName": "aggregate_input", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "softmax", "type": "Any"}, {"lineNumber": 157, "col_offset": 50, "nodeName": "label_logits", "type": "Any"}, {"lineNumber": 159, "col_offset": 39, "nodeName": "label_logits", "type": "Any"}, {"lineNumber": 159, "col_offset": 68, "nodeName": "label_probs", "type": "Any"}, {"lineNumber": 161, "col_offset": 11, "nodeName": "label", "type": "Any"}, {"lineNumber": 164, "col_offset": 12, "nodeName": "loss", "type": "Any"}, {"lineNumber": 165, "col_offset": 34, "nodeName": "loss", "type": "Any"}, {"lineNumber": 169, "col_offset": 42, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 169, "col_offset": 65, "nodeName": "TextField", "type": "Type[allennlp.data.fields.text_field.TextField]"}, {"lineNumber": 186, "col_offset": 19, "nodeName": "Instance", "type": "Type[allennlp.data.instance.Instance]"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "index_fields", "type": "Callable[[allennlp.data.vocabulary.Vocabulary], None]"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "_vocab", "type": "Any"}, {"lineNumber": 188, "col_offset": 22, "nodeName": "arrays_to_variables", "type": "Callable[..., Dict[str, Any]]"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "forward", "type": "Any"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "squeeze", "type": "Any"}, {"lineNumber": 198, "col_offset": 32, "nodeName": "Vocabulary", "type": "Type[allennlp.data.vocabulary.Vocabulary]"}, {"lineNumber": 198, "col_offset": 52, "nodeName": "Params", "type": "Type[allennlp.common.params.Params]"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "pop", "type": "Any"}, {"lineNumber": 216, "col_offset": 60, "nodeName": "default_embedder_params", "type": "Dict[str, Dict[str, Union[bool, str, int]]]"}, {"lineNumber": 217, "col_offset": 30, "nodeName": "from_params", "type": "Callable[[Any, allennlp.data.vocabulary.Vocabulary, allennlp.common.params.Params], allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 217, "col_offset": 60, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 217, "col_offset": 67, "nodeName": "embedder_params", "type": "Any"}, {"lineNumber": 219, "col_offset": 33, "nodeName": "pop", "type": "Any"}, {"lineNumber": 220, "col_offset": 11, "nodeName": "premise_encoder_params", "type": "Any"}, {"lineNumber": 221, "col_offset": 12, "nodeName": "premise_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 223, "col_offset": 12, "nodeName": "premise_encoder", "type": "None"}, {"lineNumber": 225, "col_offset": 36, "nodeName": "pop", "type": "Any"}, {"lineNumber": 226, "col_offset": 11, "nodeName": "hypothesis_encoder_params", "type": "Any"}, {"lineNumber": 227, "col_offset": 12, "nodeName": "hypothesis_encoder", "type": "allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder"}, {"lineNumber": 229, "col_offset": 12, "nodeName": "hypothesis_encoder", "type": "None"}, {"lineNumber": 237, "col_offset": 24, "nodeName": "pop", "type": "Any"}, {"lineNumber": 237, "col_offset": 57, "nodeName": "default_attend_params", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 238, "col_offset": 29, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 238, "col_offset": 53, "nodeName": "attend_params", "type": "Any"}, {"lineNumber": 241, "col_offset": 37, "nodeName": "pop", "type": "Any"}, {"lineNumber": 241, "col_offset": 71, "nodeName": "default_similarity_function_params", "type": "Dict[str, str]"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.modules.similarity_function.SimilarityFunction]"}, {"lineNumber": 242, "col_offset": 61, "nodeName": "similarity_function_params", "type": "Any"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "pop", "type": "Any"}, {"lineNumber": 250, "col_offset": 59, "nodeName": "default_compare_params", "type": "Dict[str, Union[str, int]]"}, {"lineNumber": 251, "col_offset": 30, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 251, "col_offset": 54, "nodeName": "compare_params", "type": "Any"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "pop", "type": "Any"}, {"lineNumber": 259, "col_offset": 63, "nodeName": "default_aggregate_params", "type": "Dict[str, Union[List[str], List[int], int]]"}, {"lineNumber": 260, "col_offset": 32, "nodeName": "from_params", "type": "Callable"}, {"lineNumber": 260, "col_offset": 56, "nodeName": "aggregate_params", "type": "Any"}, {"lineNumber": 262, "col_offset": 15, "nodeName": "cls", "type": "Any"}, {"lineNumber": 66, "col_offset": 37, "nodeName": "Optional", "type": "Any"}, {"lineNumber": 78, "col_offset": 27, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "get_output_dim", "type": "Callable[[], Union[int, Sequence[int]]]"}, {"lineNumber": 79, "col_offset": 53, "nodeName": "self", "type": "Any"}, {"lineNumber": 80, "col_offset": 18, "nodeName": "ConfigurationError", "type": "Type[allennlp.common.checks.ConfigurationError]"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "nn", "type": "Any"}, {"lineNumber": 90, "col_offset": 23, "nodeName": "torch", "type": "Any"}, {"lineNumber": 115, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 116, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "_premise_encoder", "type": "Any"}, {"lineNumber": 123, "col_offset": 53, "nodeName": "embedded_premise", "type": "Any"}, {"lineNumber": 123, "col_offset": 71, "nodeName": "premise_sequence_lengths", "type": "Any"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "_hypothesis_encoder", "type": "Any"}, {"lineNumber": 125, "col_offset": 59, "nodeName": "embedded_hypothesis", "type": "Any"}, {"lineNumber": 125, "col_offset": 80, "nodeName": "hypothesis_sequence_lengths", "type": "Any"}, {"lineNumber": 127, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 128, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 130, "col_offset": 28, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 41, "nodeName": "contiguous", "type": "Any"}, {"lineNumber": 142, "col_offset": 32, "nodeName": "torch", "type": "Any"}, {"lineNumber": 142, "col_offset": 43, "nodeName": "embedded_premise", "type": "Any"}, {"lineNumber": 142, "col_offset": 61, "nodeName": "attended_hypothesis", "type": "Any"}, {"lineNumber": 143, "col_offset": 35, "nodeName": "torch", "type": "Any"}, {"lineNumber": 143, "col_offset": 46, "nodeName": "embedded_hypothesis", "type": "Any"}, {"lineNumber": 143, "col_offset": 67, "nodeName": "attended_premise", "type": "Any"}, {"lineNumber": 145, "col_offset": 27, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 46, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 148, "col_offset": 27, "nodeName": "compared_premise", "type": "Any"}, {"lineNumber": 150, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 151, "col_offset": 52, "nodeName": "unsqueeze", "type": "Any"}, {"lineNumber": 153, "col_offset": 30, "nodeName": "compared_hypothesis", "type": "Any"}, {"lineNumber": 155, "col_offset": 26, "nodeName": "torch", "type": "Any"}, {"lineNumber": 155, "col_offset": 37, "nodeName": "compared_premise", "type": "Any"}, {"lineNumber": 155, "col_offset": 55, "nodeName": "compared_hypothesis", "type": "Any"}, {"lineNumber": 156, "col_offset": 23, "nodeName": "self", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "functional", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "_loss", "type": "Any"}, {"lineNumber": 164, "col_offset": 30, "nodeName": "label_logits", "type": "Any"}, {"lineNumber": 165, "col_offset": 12, "nodeName": "output_dict", "type": "Dict[str, Any]"}, {"lineNumber": 90, "col_offset": 55, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 90, "col_offset": 60, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 186, "col_offset": 40, "nodeName": "premise", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 186, "col_offset": 63, "nodeName": "hypothesis", "type": "allennlp.data.fields.text_field.TextField"}, {"lineNumber": 187, "col_offset": 8, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 187, "col_offset": 30, "nodeName": "self", "type": "Any"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "as_array_dict", "type": "Callable"}, {"lineNumber": 191, "col_offset": 22, "nodeName": "self", "type": "Any"}, {"lineNumber": 191, "col_offset": 37, "nodeName": "model_input", "type": "Dict[str, Any]"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "data", "type": "Any"}, {"lineNumber": 195, "col_offset": 31, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 169, "col_offset": 84, "nodeName": "str", "type": "Type[str]"}, {"lineNumber": 169, "col_offset": 89, "nodeName": "Tensor", "type": "Any"}, {"lineNumber": 212, "col_offset": 43, "nodeName": "GLOVE_PATH", "type": "str"}, {"lineNumber": 216, "col_offset": 26, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 217, "col_offset": 30, "nodeName": "TextFieldEmbedder", "type": "Type[allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder]"}, {"lineNumber": 219, "col_offset": 33, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 221, "col_offset": 30, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 221, "col_offset": 57, "nodeName": "premise_encoder_params", "type": "Any"}, {"lineNumber": 225, "col_offset": 36, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 227, "col_offset": 33, "nodeName": "from_params", "type": "Callable[[Any, allennlp.common.params.Params], allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 227, "col_offset": 60, "nodeName": "hypothesis_encoder_params", "type": "Any"}, {"lineNumber": 237, "col_offset": 24, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 238, "col_offset": 29, "nodeName": "FeedForward", "type": "Type[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 241, "col_offset": 37, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 242, "col_offset": 30, "nodeName": "SimilarityFunction", "type": "Type[allennlp.modules.similarity_function.SimilarityFunction]"}, {"lineNumber": 250, "col_offset": 25, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 251, "col_offset": 30, "nodeName": "FeedForward", "type": "Type[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 259, "col_offset": 27, "nodeName": "params", "type": "allennlp.common.params.Params"}, {"lineNumber": 260, "col_offset": 32, "nodeName": "FeedForward", "type": "Type[allennlp.modules.feedforward.FeedForward]"}, {"lineNumber": 262, "col_offset": 25, "nodeName": "vocab", "type": "allennlp.data.vocabulary.Vocabulary"}, {"lineNumber": 263, "col_offset": 39, "nodeName": "text_field_embedder", "type": "allennlp.modules.text_field_embedders.text_field_embedder.TextFieldEmbedder"}, {"lineNumber": 264, "col_offset": 38, "nodeName": "attend_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 265, "col_offset": 39, "nodeName": "similarity_function", "type": "allennlp.modules.similarity_function.SimilarityFunction"}, {"lineNumber": 266, "col_offset": 39, "nodeName": "compare_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 267, "col_offset": 41, "nodeName": "aggregate_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 268, "col_offset": 35, "nodeName": "premise_encoder", "type": "Optional[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 269, "col_offset": 38, "nodeName": "hypothesis_encoder", "type": "Optional[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 66, "col_offset": 46, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 67, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 67, "col_offset": 14, "nodeName": "DecomposableAttention", "type": "Any"}, {"lineNumber": 67, "col_offset": 37, "nodeName": "self", "type": "Any"}, {"lineNumber": 79, "col_offset": 11, "nodeName": "aggregate_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}, {"lineNumber": 83, "col_offset": 21, "nodeName": "torch", "type": "Any"}, {"lineNumber": 117, "col_offset": 23, "nodeName": "get_text_field_mask", "type": "Callable[[Dict[str, Any]], Any]"}, {"lineNumber": 117, "col_offset": 43, "nodeName": "premise", "type": "Dict[str, Any]"}, {"lineNumber": 118, "col_offset": 26, "nodeName": "get_text_field_mask", "type": "Callable[[Dict[str, Any]], Any]"}, {"lineNumber": 118, "col_offset": 46, "nodeName": "hypothesis", "type": "Dict[str, Any]"}, {"lineNumber": 123, "col_offset": 31, "nodeName": "self", "type": "Any"}, {"lineNumber": 125, "col_offset": 34, "nodeName": "self", "type": "Any"}, {"lineNumber": 146, "col_offset": 46, "nodeName": "premise_mask", "type": "Any"}, {"lineNumber": 151, "col_offset": 52, "nodeName": "hypothesis_mask", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "nn", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "dim", "type": "Any"}, {"lineNumber": 163, "col_offset": 16, "nodeName": "_", "type": "Any"}, {"lineNumber": 163, "col_offset": 19, "nodeName": "label", "type": "Any"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "max", "type": "Any"}, {"lineNumber": 164, "col_offset": 19, "nodeName": "self", "type": "Any"}, {"lineNumber": 164, "col_offset": 44, "nodeName": "view", "type": "Any"}, {"lineNumber": 90, "col_offset": 60, "nodeName": "torch", "type": "Any"}, {"lineNumber": 188, "col_offset": 42, "nodeName": "instance", "type": "allennlp.data.instance.Instance"}, {"lineNumber": 195, "col_offset": 31, "nodeName": "label_probs", "type": "Any"}, {"lineNumber": 169, "col_offset": 89, "nodeName": "torch", "type": "Any"}, {"lineNumber": 212, "col_offset": 43, "nodeName": "constants", "type": "module"}, {"lineNumber": 221, "col_offset": 30, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 227, "col_offset": 33, "nodeName": "Seq2SeqEncoder", "type": "Type[allennlp.modules.seq2seq_encoders.seq2seq_encoder.Seq2SeqEncoder]"}, {"lineNumber": 81, "col_offset": 78, "nodeName": "_num_labels", "type": "int"}, {"lineNumber": 138, "col_offset": 41, "nodeName": "transpose", "type": "Any"}, {"lineNumber": 157, "col_offset": 22, "nodeName": "torch", "type": "Any"}, {"lineNumber": 162, "col_offset": 15, "nodeName": "label", "type": "Any"}, {"lineNumber": 163, "col_offset": 27, "nodeName": "label", "type": "Any"}, {"lineNumber": 164, "col_offset": 44, "nodeName": "label", "type": "Any"}, {"lineNumber": 194, "col_offset": 22, "nodeName": "output_dict", "type": "Any"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "get_output_dim", "type": "Callable[[], Union[int, Sequence[int]]]"}, {"lineNumber": 81, "col_offset": 78, "nodeName": "self", "type": "Any"}, {"lineNumber": 138, "col_offset": 41, "nodeName": "similarity_matrix", "type": "Any"}, {"lineNumber": 81, "col_offset": 38, "nodeName": "aggregate_feedforward", "type": "allennlp.modules.feedforward.FeedForward"}]