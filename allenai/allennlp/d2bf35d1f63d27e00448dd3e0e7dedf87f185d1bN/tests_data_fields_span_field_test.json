[{"lineNumber": 10, "col_offset": 20, "nodeName": "AllenNlpTestCase", "type": "Any"}, {"lineNumber": 11, "col_offset": 4, "nodeName": "setup_method", "type": "Callable[[Any], Any]"}, {"lineNumber": 18, "col_offset": 4, "nodeName": "test_as_tensor_converts_span_field_correctly", "type": "Callable[[Any], Any]"}, {"lineNumber": 23, "col_offset": 4, "nodeName": "test_span_field_raises_on_incorrect_label_type", "type": "Callable[[Any], Any]"}, {"lineNumber": 27, "col_offset": 4, "nodeName": "test_span_field_raises_on_ill_defined_span", "type": "Callable[[Any], Any]"}, {"lineNumber": 31, "col_offset": 4, "nodeName": "test_span_field_raises_if_span_end_is_greater_than_sentence_length", "type": "Callable[[Any], Any]"}, {"lineNumber": 35, "col_offset": 4, "nodeName": "test_empty_span_field_works", "type": "Callable[[Any], Any]"}, {"lineNumber": 41, "col_offset": 4, "nodeName": "test_printing_doesnt_crash", "type": "Callable[[Any], Any]"}, {"lineNumber": 45, "col_offset": 4, "nodeName": "test_equality", "type": "Callable[[Any], Any]"}, {"lineNumber": 58, "col_offset": 4, "nodeName": "test_human_readable_repr", "type": "Callable[[Any], Any]"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "indexers", "type": "Dict[str, Any]"}, {"lineNumber": 19, "col_offset": 8, "nodeName": "span_field", "type": "Any"}, {"lineNumber": 20, "col_offset": 8, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 36, "col_offset": 8, "nodeName": "span_field", "type": "Any"}, {"lineNumber": 37, "col_offset": 8, "nodeName": "empty_span", "type": "Any"}, {"lineNumber": 42, "col_offset": 8, "nodeName": "span_field", "type": "Any"}, {"lineNumber": 46, "col_offset": 8, "nodeName": "span_field1", "type": "Any"}, {"lineNumber": 47, "col_offset": 8, "nodeName": "span_field2", "type": "Any"}, {"lineNumber": 59, "col_offset": 8, "nodeName": "span_field", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "setup_method", "type": "Any"}, {"lineNumber": 13, "col_offset": 8, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 14, "col_offset": 20, "nodeName": "TextField", "type": "Any"}, {"lineNumber": 15, "col_offset": 86, "nodeName": "indexers", "type": "Dict[str, Any]"}, {"lineNumber": 19, "col_offset": 21, "nodeName": "SpanField", "type": "Any"}, {"lineNumber": 19, "col_offset": 37, "nodeName": "text", "type": "Any"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "numpy", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "assert_array_equal", "type": "Any"}, {"lineNumber": 21, "col_offset": 41, "nodeName": "tensor", "type": "Any"}, {"lineNumber": 25, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 29, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 33, "col_offset": 12, "nodeName": "_", "type": "Any"}, {"lineNumber": 36, "col_offset": 21, "nodeName": "SpanField", "type": "Any"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "text", "type": "Any"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "empty_field", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "span_start", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "span_end", "type": "Any"}, {"lineNumber": 42, "col_offset": 21, "nodeName": "SpanField", "type": "Any"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "text", "type": "Any"}, {"lineNumber": 43, "col_offset": 14, "nodeName": "span_field", "type": "Any"}, {"lineNumber": 46, "col_offset": 22, "nodeName": "SpanField", "type": "Any"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "text", "type": "Any"}, {"lineNumber": 47, "col_offset": 22, "nodeName": "SpanField", "type": "Any"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "text", "type": "Any"}, {"lineNumber": 48, "col_offset": 22, "nodeName": "SpanField", "type": "Any"}, {"lineNumber": 52, "col_offset": 15, "nodeName": "span_field1", "type": "Any"}, {"lineNumber": 53, "col_offset": 15, "nodeName": "span_field1", "type": "Any"}, {"lineNumber": 53, "col_offset": 30, "nodeName": "span_field1", "type": "Any"}, {"lineNumber": 54, "col_offset": 15, "nodeName": "span_field1", "type": "Any"}, {"lineNumber": 54, "col_offset": 30, "nodeName": "span_field2", "type": "Any"}, {"lineNumber": 55, "col_offset": 15, "nodeName": "span_field1", "type": "Any"}, {"lineNumber": 55, "col_offset": 30, "nodeName": "span_field3", "type": "Any"}, {"lineNumber": 56, "col_offset": 15, "nodeName": "span_field2", "type": "Any"}, {"lineNumber": 56, "col_offset": 30, "nodeName": "span_field3", "type": "Any"}, {"lineNumber": 59, "col_offset": 21, "nodeName": "SpanField", "type": "Any"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "text", "type": "Any"}, {"lineNumber": 13, "col_offset": 34, "nodeName": "SingleIdTokenIndexer", "type": "Any"}, {"lineNumber": 15, "col_offset": 86, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 19, "col_offset": 37, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "testing", "type": "Any"}, {"lineNumber": 21, "col_offset": 49, "nodeName": "array", "type": "Callable[..., numpy.ndarray]"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 24, "col_offset": 27, "nodeName": "TypeError", "type": "Type[TypeError]"}, {"lineNumber": 25, "col_offset": 16, "nodeName": "SpanField", "type": "Any"}, {"lineNumber": 25, "col_offset": 38, "nodeName": "text", "type": "Any"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 28, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 29, "col_offset": 16, "nodeName": "SpanField", "type": "Any"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "text", "type": "Any"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "raises", "type": "Any"}, {"lineNumber": 32, "col_offset": 27, "nodeName": "ValueError", "type": "Type[ValueError]"}, {"lineNumber": 33, "col_offset": 16, "nodeName": "SpanField", "type": "Any"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "text", "type": "Any"}, {"lineNumber": 36, "col_offset": 37, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 37, "col_offset": 21, "nodeName": "span_field", "type": "Any"}, {"lineNumber": 38, "col_offset": 15, "nodeName": "empty_span", "type": "Any"}, {"lineNumber": 39, "col_offset": 15, "nodeName": "empty_span", "type": "Any"}, {"lineNumber": 42, "col_offset": 37, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 46, "col_offset": 38, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 47, "col_offset": 38, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 49, "col_offset": 18, "nodeName": "TextField", "type": "Any"}, {"lineNumber": 49, "col_offset": 82, "nodeName": "indexers", "type": "Dict[str, Any]"}, {"lineNumber": 59, "col_offset": 37, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "human_readable_repr", "type": "Any"}, {"lineNumber": 12, "col_offset": 8, "nodeName": "super", "type": "Type[super]"}, {"lineNumber": 15, "col_offset": 13, "nodeName": "Token", "type": "Any"}, {"lineNumber": 15, "col_offset": 19, "nodeName": "t", "type": "str"}, {"lineNumber": 15, "col_offset": 26, "nodeName": "t", "type": "str"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "cpu", "type": "Any"}, {"lineNumber": 21, "col_offset": 8, "nodeName": "numpy", "type": "module"}, {"lineNumber": 21, "col_offset": 49, "nodeName": "numpy", "type": "module"}, {"lineNumber": 24, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 25, "col_offset": 38, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 28, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 29, "col_offset": 32, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 32, "col_offset": 13, "nodeName": "pytest", "type": "Any"}, {"lineNumber": 33, "col_offset": 33, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 49, "col_offset": 82, "nodeName": "self", "type": "TestSpanField"}, {"lineNumber": 60, "col_offset": 15, "nodeName": "span_field", "type": "Any"}, {"lineNumber": 49, "col_offset": 29, "nodeName": "Token", "type": "Any"}, {"lineNumber": 49, "col_offset": 35, "nodeName": "t", "type": "str"}, {"lineNumber": 49, "col_offset": 42, "nodeName": "t", "type": "str"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "detach", "type": "Any"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "as_tensor", "type": "Any"}, {"lineNumber": 20, "col_offset": 17, "nodeName": "span_field", "type": "Any"}, {"lineNumber": 20, "col_offset": 38, "nodeName": "get_padding_lengths", "type": "Any"}, {"lineNumber": 20, "col_offset": 38, "nodeName": "span_field", "type": "Any"}]